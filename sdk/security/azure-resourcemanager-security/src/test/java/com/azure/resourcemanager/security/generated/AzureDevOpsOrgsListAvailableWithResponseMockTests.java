// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.ActionableRemediationState;
import com.azure.resourcemanager.security.models.AzureDevOpsOrgListResponse;
import com.azure.resourcemanager.security.models.InheritFromParentState;
import com.azure.resourcemanager.security.models.OnboardingState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AzureDevOpsOrgsListAvailableWithResponseMockTests {
    @Test
    public void testListAvailableWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningStatusMessage\":\"xcmmhipbvskcitly\",\"provisioningStatusUpdateTimeUtc\":\"2021-08-20T07:47:50Z\",\"provisioningState\":\"Pending\",\"onboardingState\":\"NotOnboarded\",\"actionableRemediation\":{\"state\":\"Enabled\",\"categoryConfigurations\":[{}],\"branchConfiguration\":{},\"inheritFromParentState\":\"Disabled\"}},\"id\":\"mhidyliuajkln\",\"name\":\"cgdnxqeonmzr\",\"type\":\"jaojpzngdrzige\"}],\"nextLink\":\"sadsqyuddkhwqdm\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        AzureDevOpsOrgListResponse response = manager.azureDevOpsOrgs()
            .listAvailableWithResponse("kakrxifqnffo", "xsqtzngxbs", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(OnboardingState.NOT_ONBOARDED, response.value().get(0).properties().onboardingState());
        Assertions.assertEquals(ActionableRemediationState.ENABLED,
            response.value().get(0).properties().actionableRemediation().state());
        Assertions.assertEquals(InheritFromParentState.DISABLED,
            response.value().get(0).properties().actionableRemediation().inheritFromParentState());
        Assertions.assertEquals("sadsqyuddkhwqdm", response.nextLink());
    }
}
