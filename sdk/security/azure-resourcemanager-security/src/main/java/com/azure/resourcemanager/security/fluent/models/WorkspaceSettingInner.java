// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Configures where to store the OMS agent data for workspaces under a scope. */
@Fluent
public final class WorkspaceSettingInner extends ProxyResource {
    /*
     * Workspace setting data
     */
    @JsonProperty(value = "properties")
    private WorkspaceSettingProperties innerProperties;

    /** Creates an instance of WorkspaceSettingInner class. */
    public WorkspaceSettingInner() {
    }

    /**
     * Get the innerProperties property: Workspace setting data.
     *
     * @return the innerProperties value.
     */
    private WorkspaceSettingProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the workspaceId property: The full Azure ID of the workspace to save the data in.
     *
     * @return the workspaceId value.
     */
    public String workspaceId() {
        return this.innerProperties() == null ? null : this.innerProperties().workspaceId();
    }

    /**
     * Set the workspaceId property: The full Azure ID of the workspace to save the data in.
     *
     * @param workspaceId the workspaceId value to set.
     * @return the WorkspaceSettingInner object itself.
     */
    public WorkspaceSettingInner withWorkspaceId(String workspaceId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new WorkspaceSettingProperties();
        }
        this.innerProperties().withWorkspaceId(workspaceId);
        return this;
    }

    /**
     * Get the scope property: All the VMs in this scope will send their security data to the mentioned workspace unless
     * overridden by a setting with more specific scope.
     *
     * @return the scope value.
     */
    public String scope() {
        return this.innerProperties() == null ? null : this.innerProperties().scope();
    }

    /**
     * Set the scope property: All the VMs in this scope will send their security data to the mentioned workspace unless
     * overridden by a setting with more specific scope.
     *
     * @param scope the scope value to set.
     * @return the WorkspaceSettingInner object itself.
     */
    public WorkspaceSettingInner withScope(String scope) {
        if (this.innerProperties() == null) {
            this.innerProperties = new WorkspaceSettingProperties();
        }
        this.innerProperties().withScope(scope);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
