// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.security.fluent.SecurityOperatorsClient;
import com.azure.resourcemanager.security.fluent.models.SecurityOperatorInner;
import com.azure.resourcemanager.security.fluent.models.SecurityOperatorListInner;
import com.azure.resourcemanager.security.models.SecurityOperator;
import com.azure.resourcemanager.security.models.SecurityOperatorList;
import com.azure.resourcemanager.security.models.SecurityOperators;

public final class SecurityOperatorsImpl implements SecurityOperators {
    private static final ClientLogger LOGGER = new ClientLogger(SecurityOperatorsImpl.class);

    private final SecurityOperatorsClient innerClient;

    private final com.azure.resourcemanager.security.SecurityManager serviceManager;

    public SecurityOperatorsImpl(
        SecurityOperatorsClient innerClient, com.azure.resourcemanager.security.SecurityManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<SecurityOperatorList> listWithResponse(String pricingName, Context context) {
        Response<SecurityOperatorListInner> inner = this.serviceClient().listWithResponse(pricingName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SecurityOperatorListImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public SecurityOperatorList list(String pricingName) {
        SecurityOperatorListInner inner = this.serviceClient().list(pricingName);
        if (inner != null) {
            return new SecurityOperatorListImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<SecurityOperator> getWithResponse(
        String pricingName, String securityOperatorName, Context context) {
        Response<SecurityOperatorInner> inner =
            this.serviceClient().getWithResponse(pricingName, securityOperatorName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SecurityOperatorImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public SecurityOperator get(String pricingName, String securityOperatorName) {
        SecurityOperatorInner inner = this.serviceClient().get(pricingName, securityOperatorName);
        if (inner != null) {
            return new SecurityOperatorImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<SecurityOperator> createOrUpdateWithResponse(
        String pricingName, String securityOperatorName, Context context) {
        Response<SecurityOperatorInner> inner =
            this.serviceClient().createOrUpdateWithResponse(pricingName, securityOperatorName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SecurityOperatorImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public SecurityOperator createOrUpdate(String pricingName, String securityOperatorName) {
        SecurityOperatorInner inner = this.serviceClient().createOrUpdate(pricingName, securityOperatorName);
        if (inner != null) {
            return new SecurityOperatorImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<Void> deleteByResourceGroupWithResponse(
        String pricingName, String securityOperatorName, Context context) {
        return this.serviceClient().deleteWithResponse(pricingName, securityOperatorName, context);
    }

    public void deleteByResourceGroup(String pricingName, String securityOperatorName) {
        this.serviceClient().delete(pricingName, securityOperatorName);
    }

    private SecurityOperatorsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.security.SecurityManager manager() {
        return this.serviceManager;
    }
}
