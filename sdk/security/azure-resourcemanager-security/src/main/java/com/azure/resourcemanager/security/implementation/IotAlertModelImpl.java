// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.implementation;

import com.azure.resourcemanager.security.fluent.models.IotAlertModelInner;
import com.azure.resourcemanager.security.models.IotAlertModel;
import java.util.Collections;
import java.util.List;

public final class IotAlertModelImpl implements IotAlertModel {
    private IotAlertModelInner innerObject;

    private final com.azure.resourcemanager.security.SecurityManager serviceManager;

    IotAlertModelImpl(
        IotAlertModelInner innerObject, com.azure.resourcemanager.security.SecurityManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String systemAlertId() {
        return this.innerModel().systemAlertId();
    }

    public String compromisedEntity() {
        return this.innerModel().compromisedEntity();
    }

    public String alertType() {
        return this.innerModel().alertType();
    }

    public String startTimeUtc() {
        return this.innerModel().startTimeUtc();
    }

    public String endTimeUtc() {
        return this.innerModel().endTimeUtc();
    }

    public List<Object> entities() {
        List<Object> inner = this.innerModel().entities();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public Object extendedProperties() {
        return this.innerModel().extendedProperties();
    }

    public IotAlertModelInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.security.SecurityManager manager() {
        return this.serviceManager;
    }
}
