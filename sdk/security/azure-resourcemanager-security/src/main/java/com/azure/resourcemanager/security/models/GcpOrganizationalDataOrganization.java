// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The gcpOrganization data for the parent account.
 */
@Fluent
public final class GcpOrganizationalDataOrganization extends GcpOrganizationalData {
    /*
     * The multi cloud account's membership type in the organization
     */
    private OrganizationMembershipType organizationMembershipType = OrganizationMembershipType.ORGANIZATION;

    /*
     * If the multi cloud account is of membership type organization, list of accounts excluded from offering
     */
    private List<String> excludedProjectNumbers;

    /*
     * The service account email address which represents the organization level permissions container.
     */
    private String serviceAccountEmailAddress;

    /*
     * The GCP workload identity provider id which represents the permissions required to auto provision security
     * connectors
     */
    private String workloadIdentityProviderId;

    /*
     * GCP organization name
     */
    private String organizationName;

    /**
     * Creates an instance of GcpOrganizationalDataOrganization class.
     */
    public GcpOrganizationalDataOrganization() {
    }

    /**
     * Get the organizationMembershipType property: The multi cloud account's membership type in the organization.
     * 
     * @return the organizationMembershipType value.
     */
    @Override
    public OrganizationMembershipType organizationMembershipType() {
        return this.organizationMembershipType;
    }

    /**
     * Get the excludedProjectNumbers property: If the multi cloud account is of membership type organization, list of
     * accounts excluded from offering.
     * 
     * @return the excludedProjectNumbers value.
     */
    public List<String> excludedProjectNumbers() {
        return this.excludedProjectNumbers;
    }

    /**
     * Set the excludedProjectNumbers property: If the multi cloud account is of membership type organization, list of
     * accounts excluded from offering.
     * 
     * @param excludedProjectNumbers the excludedProjectNumbers value to set.
     * @return the GcpOrganizationalDataOrganization object itself.
     */
    public GcpOrganizationalDataOrganization withExcludedProjectNumbers(List<String> excludedProjectNumbers) {
        this.excludedProjectNumbers = excludedProjectNumbers;
        return this;
    }

    /**
     * Get the serviceAccountEmailAddress property: The service account email address which represents the organization
     * level permissions container.
     * 
     * @return the serviceAccountEmailAddress value.
     */
    public String serviceAccountEmailAddress() {
        return this.serviceAccountEmailAddress;
    }

    /**
     * Set the serviceAccountEmailAddress property: The service account email address which represents the organization
     * level permissions container.
     * 
     * @param serviceAccountEmailAddress the serviceAccountEmailAddress value to set.
     * @return the GcpOrganizationalDataOrganization object itself.
     */
    public GcpOrganizationalDataOrganization withServiceAccountEmailAddress(String serviceAccountEmailAddress) {
        this.serviceAccountEmailAddress = serviceAccountEmailAddress;
        return this;
    }

    /**
     * Get the workloadIdentityProviderId property: The GCP workload identity provider id which represents the
     * permissions required to auto provision security connectors.
     * 
     * @return the workloadIdentityProviderId value.
     */
    public String workloadIdentityProviderId() {
        return this.workloadIdentityProviderId;
    }

    /**
     * Set the workloadIdentityProviderId property: The GCP workload identity provider id which represents the
     * permissions required to auto provision security connectors.
     * 
     * @param workloadIdentityProviderId the workloadIdentityProviderId value to set.
     * @return the GcpOrganizationalDataOrganization object itself.
     */
    public GcpOrganizationalDataOrganization withWorkloadIdentityProviderId(String workloadIdentityProviderId) {
        this.workloadIdentityProviderId = workloadIdentityProviderId;
        return this;
    }

    /**
     * Get the organizationName property: GCP organization name.
     * 
     * @return the organizationName value.
     */
    public String organizationName() {
        return this.organizationName;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("organizationMembershipType",
            this.organizationMembershipType == null ? null : this.organizationMembershipType.toString());
        jsonWriter.writeArrayField("excludedProjectNumbers", this.excludedProjectNumbers,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("serviceAccountEmailAddress", this.serviceAccountEmailAddress);
        jsonWriter.writeStringField("workloadIdentityProviderId", this.workloadIdentityProviderId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GcpOrganizationalDataOrganization from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GcpOrganizationalDataOrganization if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the GcpOrganizationalDataOrganization.
     */
    public static GcpOrganizationalDataOrganization fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            GcpOrganizationalDataOrganization deserializedGcpOrganizationalDataOrganization
                = new GcpOrganizationalDataOrganization();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("organizationMembershipType".equals(fieldName)) {
                    deserializedGcpOrganizationalDataOrganization.organizationMembershipType
                        = OrganizationMembershipType.fromString(reader.getString());
                } else if ("excludedProjectNumbers".equals(fieldName)) {
                    List<String> excludedProjectNumbers = reader.readArray(reader1 -> reader1.getString());
                    deserializedGcpOrganizationalDataOrganization.excludedProjectNumbers = excludedProjectNumbers;
                } else if ("serviceAccountEmailAddress".equals(fieldName)) {
                    deserializedGcpOrganizationalDataOrganization.serviceAccountEmailAddress = reader.getString();
                } else if ("workloadIdentityProviderId".equals(fieldName)) {
                    deserializedGcpOrganizationalDataOrganization.workloadIdentityProviderId = reader.getString();
                } else if ("organizationName".equals(fieldName)) {
                    deserializedGcpOrganizationalDataOrganization.organizationName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedGcpOrganizationalDataOrganization;
        });
    }
}
