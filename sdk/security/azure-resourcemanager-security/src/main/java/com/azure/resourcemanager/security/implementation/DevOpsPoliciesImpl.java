// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.security.fluent.DevOpsPoliciesClient;
import com.azure.resourcemanager.security.fluent.models.DevOpsPolicyInner;
import com.azure.resourcemanager.security.models.DevOpsPolicies;
import com.azure.resourcemanager.security.models.DevOpsPolicy;

public final class DevOpsPoliciesImpl implements DevOpsPolicies {
    private static final ClientLogger LOGGER = new ClientLogger(DevOpsPoliciesImpl.class);

    private final DevOpsPoliciesClient innerClient;

    private final com.azure.resourcemanager.security.SecurityManager serviceManager;

    public DevOpsPoliciesImpl(DevOpsPoliciesClient innerClient,
        com.azure.resourcemanager.security.SecurityManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<DevOpsPolicy> list(String resourceGroupName, String securityConnectorName) {
        PagedIterable<DevOpsPolicyInner> inner = this.serviceClient().list(resourceGroupName, securityConnectorName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new DevOpsPolicyImpl(inner1, this.manager()));
    }

    public PagedIterable<DevOpsPolicy> list(String resourceGroupName, String securityConnectorName,
        String devOpsPolicyType, Context context) {
        PagedIterable<DevOpsPolicyInner> inner
            = this.serviceClient().list(resourceGroupName, securityConnectorName, devOpsPolicyType, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new DevOpsPolicyImpl(inner1, this.manager()));
    }

    public Response<DevOpsPolicy> getWithResponse(String resourceGroupName, String securityConnectorName,
        String policyName, Context context) {
        Response<DevOpsPolicyInner> inner
            = this.serviceClient().getWithResponse(resourceGroupName, securityConnectorName, policyName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new DevOpsPolicyImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public DevOpsPolicy get(String resourceGroupName, String securityConnectorName, String policyName) {
        DevOpsPolicyInner inner = this.serviceClient().get(resourceGroupName, securityConnectorName, policyName);
        if (inner != null) {
            return new DevOpsPolicyImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private DevOpsPoliciesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.security.SecurityManager manager() {
        return this.serviceManager;
    }
}
