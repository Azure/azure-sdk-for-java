// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Custom entity store assignment. */
@Fluent
public final class CustomEntityStoreAssignmentInner extends ProxyResource {
    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /*
     * describes custom entity store assignment properties.
     */
    @JsonProperty(value = "properties")
    private CustomEntityStoreAssignmentProperties innerProperties;

    /** Creates an instance of CustomEntityStoreAssignmentInner class. */
    public CustomEntityStoreAssignmentInner() {
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the innerProperties property: describes custom entity store assignment properties.
     *
     * @return the innerProperties value.
     */
    private CustomEntityStoreAssignmentProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the principal property: The principal assigned with entity store. Format of principal is: [AAD
     * type]=[PrincipalObjectId];[TenantId].
     *
     * @return the principal value.
     */
    public String principal() {
        return this.innerProperties() == null ? null : this.innerProperties().principal();
    }

    /**
     * Set the principal property: The principal assigned with entity store. Format of principal is: [AAD
     * type]=[PrincipalObjectId];[TenantId].
     *
     * @param principal the principal value to set.
     * @return the CustomEntityStoreAssignmentInner object itself.
     */
    public CustomEntityStoreAssignmentInner withPrincipal(String principal) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CustomEntityStoreAssignmentProperties();
        }
        this.innerProperties().withPrincipal(principal);
        return this;
    }

    /**
     * Get the entityStoreDatabaseLink property: The link to entity store database.
     *
     * @return the entityStoreDatabaseLink value.
     */
    public String entityStoreDatabaseLink() {
        return this.innerProperties() == null ? null : this.innerProperties().entityStoreDatabaseLink();
    }

    /**
     * Set the entityStoreDatabaseLink property: The link to entity store database.
     *
     * @param entityStoreDatabaseLink the entityStoreDatabaseLink value to set.
     * @return the CustomEntityStoreAssignmentInner object itself.
     */
    public CustomEntityStoreAssignmentInner withEntityStoreDatabaseLink(String entityStoreDatabaseLink) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CustomEntityStoreAssignmentProperties();
        }
        this.innerProperties().withEntityStoreDatabaseLink(entityStoreDatabaseLink);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
