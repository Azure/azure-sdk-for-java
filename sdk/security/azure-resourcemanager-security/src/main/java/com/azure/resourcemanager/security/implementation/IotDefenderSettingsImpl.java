// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.http.rest.StreamResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.security.fluent.IotDefenderSettingsClient;
import com.azure.resourcemanager.security.fluent.models.IotDefenderSettingsListInner;
import com.azure.resourcemanager.security.fluent.models.IotDefenderSettingsModelInner;
import com.azure.resourcemanager.security.fluent.models.PackageDownloadsInner;
import com.azure.resourcemanager.security.models.IotDefenderSettings;
import com.azure.resourcemanager.security.models.IotDefenderSettingsList;
import com.azure.resourcemanager.security.models.IotDefenderSettingsModel;
import com.azure.resourcemanager.security.models.PackageDownloads;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.io.InputStream;

public final class IotDefenderSettingsImpl implements IotDefenderSettings {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(IotDefenderSettingsImpl.class);

    private final IotDefenderSettingsClient innerClient;

    private final com.azure.resourcemanager.security.SecurityManager serviceManager;

    public IotDefenderSettingsImpl(
        IotDefenderSettingsClient innerClient, com.azure.resourcemanager.security.SecurityManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public IotDefenderSettingsList list() {
        IotDefenderSettingsListInner inner = this.serviceClient().list();
        if (inner != null) {
            return new IotDefenderSettingsListImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<IotDefenderSettingsList> listWithResponse(Context context) {
        Response<IotDefenderSettingsListInner> inner = this.serviceClient().listWithResponse(context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new IotDefenderSettingsListImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public IotDefenderSettingsModel get() {
        IotDefenderSettingsModelInner inner = this.serviceClient().get();
        if (inner != null) {
            return new IotDefenderSettingsModelImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<IotDefenderSettingsModel> getWithResponse(Context context) {
        Response<IotDefenderSettingsModelInner> inner = this.serviceClient().getWithResponse(context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new IotDefenderSettingsModelImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public IotDefenderSettingsModel createOrUpdate(IotDefenderSettingsModelInner iotDefenderSettingsModel) {
        IotDefenderSettingsModelInner inner = this.serviceClient().createOrUpdate(iotDefenderSettingsModel);
        if (inner != null) {
            return new IotDefenderSettingsModelImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<IotDefenderSettingsModel> createOrUpdateWithResponse(
        IotDefenderSettingsModelInner iotDefenderSettingsModel, Context context) {
        Response<IotDefenderSettingsModelInner> inner =
            this.serviceClient().createOrUpdateWithResponse(iotDefenderSettingsModel, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new IotDefenderSettingsModelImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public void delete() {
        this.serviceClient().delete();
    }

    public Response<Void> deleteWithResponse(Context context) {
        return this.serviceClient().deleteWithResponse(context);
    }

    public PackageDownloads packageDownloads() {
        PackageDownloadsInner inner = this.serviceClient().packageDownloads();
        if (inner != null) {
            return new PackageDownloadsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<PackageDownloads> packageDownloadsWithResponse(Context context) {
        Response<PackageDownloadsInner> inner = this.serviceClient().packageDownloadsWithResponse(context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new PackageDownloadsImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public InputStream downloadManagerActivation() {
        return this.serviceClient().downloadManagerActivation();
    }

    public StreamResponse downloadManagerActivationWithResponse(Context context) {
        return this.serviceClient().downloadManagerActivationWithResponse(context);
    }

    private IotDefenderSettingsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.security.SecurityManager manager() {
        return this.serviceManager;
    }
}
