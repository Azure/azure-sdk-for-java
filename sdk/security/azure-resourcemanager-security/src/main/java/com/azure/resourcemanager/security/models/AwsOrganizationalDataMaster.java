// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The AWS organization data for the master account.
 */
@Fluent
public final class AwsOrganizationalDataMaster extends AwsOrganizationalData {
    /*
     * The multi cloud account's membership type in the organization
     */
    private OrganizationMembershipType organizationMembershipType = OrganizationMembershipType.ORGANIZATION;

    /*
     * If the multi cloud account is of membership type organization, this will be the name of the onboarding stackset
     */
    private String stacksetName;

    /*
     * If the multi cloud account is of membership type organization, list of accounts excluded from offering
     */
    private List<String> excludedAccountIds;

    /**
     * Creates an instance of AwsOrganizationalDataMaster class.
     */
    public AwsOrganizationalDataMaster() {
    }

    /**
     * Get the organizationMembershipType property: The multi cloud account's membership type in the organization.
     * 
     * @return the organizationMembershipType value.
     */
    @Override
    public OrganizationMembershipType organizationMembershipType() {
        return this.organizationMembershipType;
    }

    /**
     * Get the stacksetName property: If the multi cloud account is of membership type organization, this will be the
     * name of the onboarding stackset.
     * 
     * @return the stacksetName value.
     */
    public String stacksetName() {
        return this.stacksetName;
    }

    /**
     * Set the stacksetName property: If the multi cloud account is of membership type organization, this will be the
     * name of the onboarding stackset.
     * 
     * @param stacksetName the stacksetName value to set.
     * @return the AwsOrganizationalDataMaster object itself.
     */
    public AwsOrganizationalDataMaster withStacksetName(String stacksetName) {
        this.stacksetName = stacksetName;
        return this;
    }

    /**
     * Get the excludedAccountIds property: If the multi cloud account is of membership type organization, list of
     * accounts excluded from offering.
     * 
     * @return the excludedAccountIds value.
     */
    public List<String> excludedAccountIds() {
        return this.excludedAccountIds;
    }

    /**
     * Set the excludedAccountIds property: If the multi cloud account is of membership type organization, list of
     * accounts excluded from offering.
     * 
     * @param excludedAccountIds the excludedAccountIds value to set.
     * @return the AwsOrganizationalDataMaster object itself.
     */
    public AwsOrganizationalDataMaster withExcludedAccountIds(List<String> excludedAccountIds) {
        this.excludedAccountIds = excludedAccountIds;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("organizationMembershipType",
            this.organizationMembershipType == null ? null : this.organizationMembershipType.toString());
        jsonWriter.writeStringField("stacksetName", this.stacksetName);
        jsonWriter.writeArrayField("excludedAccountIds", this.excludedAccountIds,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsOrganizationalDataMaster from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsOrganizationalDataMaster if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AwsOrganizationalDataMaster.
     */
    public static AwsOrganizationalDataMaster fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AwsOrganizationalDataMaster deserializedAwsOrganizationalDataMaster = new AwsOrganizationalDataMaster();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("organizationMembershipType".equals(fieldName)) {
                    deserializedAwsOrganizationalDataMaster.organizationMembershipType
                        = OrganizationMembershipType.fromString(reader.getString());
                } else if ("stacksetName".equals(fieldName)) {
                    deserializedAwsOrganizationalDataMaster.stacksetName = reader.getString();
                } else if ("excludedAccountIds".equals(fieldName)) {
                    List<String> excludedAccountIds = reader.readArray(reader1 -> reader1.getString());
                    deserializedAwsOrganizationalDataMaster.excludedAccountIds = excludedAccountIds;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsOrganizationalDataMaster;
        });
    }
}
