// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.security.fluent.RegulatoryComplianceStandardsClient;
import com.azure.resourcemanager.security.fluent.models.RegulatoryComplianceStandardInner;
import com.azure.resourcemanager.security.models.RegulatoryComplianceStandard;
import com.azure.resourcemanager.security.models.RegulatoryComplianceStandards;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class RegulatoryComplianceStandardsImpl implements RegulatoryComplianceStandards {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(RegulatoryComplianceStandardsImpl.class);

    private final RegulatoryComplianceStandardsClient innerClient;

    private final com.azure.resourcemanager.security.SecurityManager serviceManager;

    public RegulatoryComplianceStandardsImpl(
        RegulatoryComplianceStandardsClient innerClient,
        com.azure.resourcemanager.security.SecurityManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<RegulatoryComplianceStandard> list() {
        PagedIterable<RegulatoryComplianceStandardInner> inner = this.serviceClient().list();
        return Utils.mapPage(inner, inner1 -> new RegulatoryComplianceStandardImpl(inner1, this.manager()));
    }

    public PagedIterable<RegulatoryComplianceStandard> list(String filter, Context context) {
        PagedIterable<RegulatoryComplianceStandardInner> inner = this.serviceClient().list(filter, context);
        return Utils.mapPage(inner, inner1 -> new RegulatoryComplianceStandardImpl(inner1, this.manager()));
    }

    public RegulatoryComplianceStandard get(String regulatoryComplianceStandardName) {
        RegulatoryComplianceStandardInner inner = this.serviceClient().get(regulatoryComplianceStandardName);
        if (inner != null) {
            return new RegulatoryComplianceStandardImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<RegulatoryComplianceStandard> getWithResponse(
        String regulatoryComplianceStandardName, Context context) {
        Response<RegulatoryComplianceStandardInner> inner =
            this.serviceClient().getWithResponse(regulatoryComplianceStandardName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new RegulatoryComplianceStandardImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private RegulatoryComplianceStandardsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.security.SecurityManager manager() {
        return this.serviceManager;
    }
}
