// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.security.fluent.models.ServerVulnerabilityAssessmentsSettingInner;
import com.azure.resourcemanager.security.models.ServerVulnerabilityAssessmentsSettingKindName;

/**
 * An instance of this class provides access to all the operations defined in
 * ServerVulnerabilityAssessmentsSettingsClient.
 */
public interface ServerVulnerabilityAssessmentsSettingsClient {
    /**
     * Get a list of all the server vulnerability assessments settings over a subscription level scope.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of all the server vulnerability assessments settings over a subscription level scope as paginated
     * response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ServerVulnerabilityAssessmentsSettingInner> list();

    /**
     * Get a list of all the server vulnerability assessments settings over a subscription level scope.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of all the server vulnerability assessments settings over a subscription level scope as paginated
     * response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ServerVulnerabilityAssessmentsSettingInner> list(Context context);

    /**
     * Get a server vulnerability assessments setting of the requested kind, that is set on the subscription.
     * 
     * @param settingKind The kind of the server vulnerability assessments setting.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a server vulnerability assessments setting of the requested kind, that is set on the subscription along
     * with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ServerVulnerabilityAssessmentsSettingInner>
        getWithResponse(ServerVulnerabilityAssessmentsSettingKindName settingKind, Context context);

    /**
     * Get a server vulnerability assessments setting of the requested kind, that is set on the subscription.
     * 
     * @param settingKind The kind of the server vulnerability assessments setting.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a server vulnerability assessments setting of the requested kind, that is set on the subscription.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ServerVulnerabilityAssessmentsSettingInner get(ServerVulnerabilityAssessmentsSettingKindName settingKind);

    /**
     * Create or update a server vulnerability assessments setting of the requested kind on the subscription.
     * 
     * @param settingKind The kind of the server vulnerability assessments setting.
     * @param serverVulnerabilityAssessmentsSetting A server vulnerability assessments setting over a predefined scope.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a base vulnerability assessments setting on servers in the defined scope along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ServerVulnerabilityAssessmentsSettingInner> createOrUpdateWithResponse(
        ServerVulnerabilityAssessmentsSettingKindName settingKind,
        ServerVulnerabilityAssessmentsSettingInner serverVulnerabilityAssessmentsSetting, Context context);

    /**
     * Create or update a server vulnerability assessments setting of the requested kind on the subscription.
     * 
     * @param settingKind The kind of the server vulnerability assessments setting.
     * @param serverVulnerabilityAssessmentsSetting A server vulnerability assessments setting over a predefined scope.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a base vulnerability assessments setting on servers in the defined scope.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ServerVulnerabilityAssessmentsSettingInner createOrUpdate(ServerVulnerabilityAssessmentsSettingKindName settingKind,
        ServerVulnerabilityAssessmentsSettingInner serverVulnerabilityAssessmentsSetting);

    /**
     * Delete the server vulnerability assessments setting of the requested kind from the subscription.
     * 
     * @param settingKind The kind of the server vulnerability assessments setting.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(ServerVulnerabilityAssessmentsSettingKindName settingKind, Context context);

    /**
     * Delete the server vulnerability assessments setting of the requested kind from the subscription.
     * 
     * @param settingKind The kind of the server vulnerability assessments setting.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(ServerVulnerabilityAssessmentsSettingKindName settingKind);
}
