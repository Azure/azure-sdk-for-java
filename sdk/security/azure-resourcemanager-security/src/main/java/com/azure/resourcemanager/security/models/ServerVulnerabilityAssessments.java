// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of ServerVulnerabilityAssessments. */
public interface ServerVulnerabilityAssessments {
    /**
     * Gets a list of server vulnerability assessment onboarding statuses on a given resource.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is case
     *     insensitive.
     * @param resourceNamespace The Namespace of the resource.
     * @param resourceType The type of the resource.
     * @param resourceName Name of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of server vulnerability assessment onboarding statuses on a given resource.
     */
    ServerVulnerabilityAssessmentsList listByExtendedResource(
        String resourceGroupName, String resourceNamespace, String resourceType, String resourceName);

    /**
     * Gets a list of server vulnerability assessment onboarding statuses on a given resource.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is case
     *     insensitive.
     * @param resourceNamespace The Namespace of the resource.
     * @param resourceType The type of the resource.
     * @param resourceName Name of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of server vulnerability assessment onboarding statuses on a given resource.
     */
    Response<ServerVulnerabilityAssessmentsList> listByExtendedResourceWithResponse(
        String resourceGroupName, String resourceNamespace, String resourceType, String resourceName, Context context);

    /**
     * Gets a server vulnerability assessment onboarding statuses on a given resource.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is case
     *     insensitive.
     * @param resourceNamespace The Namespace of the resource.
     * @param resourceType The type of the resource.
     * @param resourceName Name of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a server vulnerability assessment onboarding statuses on a given resource.
     */
    ServerVulnerabilityAssessment get(
        String resourceGroupName, String resourceNamespace, String resourceType, String resourceName);

    /**
     * Gets a server vulnerability assessment onboarding statuses on a given resource.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is case
     *     insensitive.
     * @param resourceNamespace The Namespace of the resource.
     * @param resourceType The type of the resource.
     * @param resourceName Name of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a server vulnerability assessment onboarding statuses on a given resource.
     */
    Response<ServerVulnerabilityAssessment> getWithResponse(
        String resourceGroupName, String resourceNamespace, String resourceType, String resourceName, Context context);

    /**
     * Creating a server vulnerability assessment on a resource, which will onboard a resource for having a
     * vulnerability assessment on it.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is case
     *     insensitive.
     * @param resourceNamespace The Namespace of the resource.
     * @param resourceType The type of the resource.
     * @param resourceName Name of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes the server vulnerability assessment details on a resource.
     */
    ServerVulnerabilityAssessment createOrUpdate(
        String resourceGroupName, String resourceNamespace, String resourceType, String resourceName);

    /**
     * Creating a server vulnerability assessment on a resource, which will onboard a resource for having a
     * vulnerability assessment on it.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is case
     *     insensitive.
     * @param resourceNamespace The Namespace of the resource.
     * @param resourceType The type of the resource.
     * @param resourceName Name of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes the server vulnerability assessment details on a resource.
     */
    Response<ServerVulnerabilityAssessment> createOrUpdateWithResponse(
        String resourceGroupName, String resourceNamespace, String resourceType, String resourceName, Context context);

    /**
     * Removing server vulnerability assessment from a resource.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is case
     *     insensitive.
     * @param resourceNamespace The Namespace of the resource.
     * @param resourceType The type of the resource.
     * @param resourceName Name of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String resourceNamespace, String resourceType, String resourceName);

    /**
     * Removing server vulnerability assessment from a resource.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is case
     *     insensitive.
     * @param resourceNamespace The Namespace of the resource.
     * @param resourceType The type of the resource.
     * @param resourceName Name of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(
        String resourceGroupName, String resourceNamespace, String resourceType, String resourceName, Context context);
}
