// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The Advanced Threat Protection resource. */
@Fluent
public final class AdvancedThreatProtectionSettingInner extends ProxyResource {
    /*
     * The Advanced Threat Protection settings.
     */
    @JsonProperty(value = "properties")
    private AdvancedThreatProtectionProperties innerProperties;

    /** Creates an instance of AdvancedThreatProtectionSettingInner class. */
    public AdvancedThreatProtectionSettingInner() {
    }

    /**
     * Get the innerProperties property: The Advanced Threat Protection settings.
     *
     * @return the innerProperties value.
     */
    private AdvancedThreatProtectionProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the isEnabled property: Indicates whether Advanced Threat Protection is enabled.
     *
     * @return the isEnabled value.
     */
    public Boolean isEnabled() {
        return this.innerProperties() == null ? null : this.innerProperties().isEnabled();
    }

    /**
     * Set the isEnabled property: Indicates whether Advanced Threat Protection is enabled.
     *
     * @param isEnabled the isEnabled value to set.
     * @return the AdvancedThreatProtectionSettingInner object itself.
     */
    public AdvancedThreatProtectionSettingInner withIsEnabled(Boolean isEnabled) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AdvancedThreatProtectionProperties();
        }
        this.innerProperties().withIsEnabled(isEnabled);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
