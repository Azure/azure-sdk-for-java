// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.security.fluent.models.SecurityAssessmentInner;
import com.azure.resourcemanager.security.models.AssessmentLinks;
import com.azure.resourcemanager.security.models.AssessmentStatus;
import com.azure.resourcemanager.security.models.ExpandEnum;
import com.azure.resourcemanager.security.models.ResourceDetails;
import com.azure.resourcemanager.security.models.SecurityAssessment;
import com.azure.resourcemanager.security.models.SecurityAssessmentMetadataProperties;
import com.azure.resourcemanager.security.models.SecurityAssessmentPartnerData;
import java.util.Collections;
import java.util.Map;

public final class SecurityAssessmentImpl
    implements SecurityAssessment, SecurityAssessment.Definition, SecurityAssessment.Update {
    private SecurityAssessmentInner innerObject;

    private final com.azure.resourcemanager.security.SecurityManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public ResourceDetails resourceDetails() {
        return this.innerModel().resourceDetails();
    }

    public String displayName() {
        return this.innerModel().displayName();
    }

    public AssessmentStatus status() {
        return this.innerModel().status();
    }

    public Map<String, String> additionalData() {
        Map<String, String> inner = this.innerModel().additionalData();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public AssessmentLinks links() {
        return this.innerModel().links();
    }

    public SecurityAssessmentMetadataProperties metadata() {
        return this.innerModel().metadata();
    }

    public SecurityAssessmentPartnerData partnersData() {
        return this.innerModel().partnersData();
    }

    public SecurityAssessmentInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.security.SecurityManager manager() {
        return this.serviceManager;
    }

    private String resourceId;

    private String assessmentName;

    public SecurityAssessmentImpl withExistingResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    public SecurityAssessment create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAssessments()
                .createOrUpdateWithResponse(resourceId, assessmentName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public SecurityAssessment create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAssessments()
                .createOrUpdateWithResponse(resourceId, assessmentName, this.innerModel(), context)
                .getValue();
        return this;
    }

    SecurityAssessmentImpl(String name, com.azure.resourcemanager.security.SecurityManager serviceManager) {
        this.innerObject = new SecurityAssessmentInner();
        this.serviceManager = serviceManager;
        this.assessmentName = name;
    }

    public SecurityAssessmentImpl update() {
        return this;
    }

    public SecurityAssessment apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAssessments()
                .createOrUpdateWithResponse(resourceId, assessmentName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public SecurityAssessment apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAssessments()
                .createOrUpdateWithResponse(resourceId, assessmentName, this.innerModel(), context)
                .getValue();
        return this;
    }

    SecurityAssessmentImpl(
        SecurityAssessmentInner innerObject, com.azure.resourcemanager.security.SecurityManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceId =
            Utils
                .getValueFromIdByParameterName(
                    innerObject.id(),
                    "/{resourceId}/providers/Microsoft.Security/assessments/{assessmentName}",
                    "resourceId");
        this.assessmentName =
            Utils
                .getValueFromIdByParameterName(
                    innerObject.id(),
                    "/{resourceId}/providers/Microsoft.Security/assessments/{assessmentName}",
                    "assessmentName");
    }

    public SecurityAssessment refresh() {
        ExpandEnum localExpand = null;
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAssessments()
                .getWithResponse(resourceId, assessmentName, localExpand, Context.NONE)
                .getValue();
        return this;
    }

    public SecurityAssessment refresh(Context context) {
        ExpandEnum localExpand = null;
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAssessments()
                .getWithResponse(resourceId, assessmentName, localExpand, context)
                .getValue();
        return this;
    }

    public SecurityAssessmentImpl withResourceDetails(ResourceDetails resourceDetails) {
        this.innerModel().withResourceDetails(resourceDetails);
        return this;
    }

    public SecurityAssessmentImpl withStatus(AssessmentStatus status) {
        this.innerModel().withStatus(status);
        return this;
    }

    public SecurityAssessmentImpl withAdditionalData(Map<String, String> additionalData) {
        this.innerModel().withAdditionalData(additionalData);
        return this;
    }

    public SecurityAssessmentImpl withMetadata(SecurityAssessmentMetadataProperties metadata) {
        this.innerModel().withMetadata(metadata);
        return this;
    }

    public SecurityAssessmentImpl withPartnersData(SecurityAssessmentPartnerData partnersData) {
        this.innerModel().withPartnersData(partnersData);
        return this;
    }
}
