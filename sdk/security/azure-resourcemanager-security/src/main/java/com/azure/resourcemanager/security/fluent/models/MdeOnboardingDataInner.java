// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The resource of the configuration or data needed to onboard the machine to MDE. */
@Fluent
public final class MdeOnboardingDataInner extends ProxyResource {
    /*
     * Properties of the MDE configuration or data parameter needed to onboard the machine to MDE
     */
    @JsonProperty(value = "properties")
    private MdeOnboardingDataProperties innerProperties;

    /** Creates an instance of MdeOnboardingDataInner class. */
    public MdeOnboardingDataInner() {
    }

    /**
     * Get the innerProperties property: Properties of the MDE configuration or data parameter needed to onboard the
     * machine to MDE.
     *
     * @return the innerProperties value.
     */
    private MdeOnboardingDataProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the onboardingPackageWindows property: The onboarding package used to onboard Windows machines to MDE, coded
     * in base64. This can also be used for onboarding using the dedicated VM Extension.
     *
     * @return the onboardingPackageWindows value.
     */
    public byte[] onboardingPackageWindows() {
        return this.innerProperties() == null ? new byte[0] : this.innerProperties().onboardingPackageWindows();
    }

    /**
     * Set the onboardingPackageWindows property: The onboarding package used to onboard Windows machines to MDE, coded
     * in base64. This can also be used for onboarding using the dedicated VM Extension.
     *
     * @param onboardingPackageWindows the onboardingPackageWindows value to set.
     * @return the MdeOnboardingDataInner object itself.
     */
    public MdeOnboardingDataInner withOnboardingPackageWindows(byte[] onboardingPackageWindows) {
        if (this.innerProperties() == null) {
            this.innerProperties = new MdeOnboardingDataProperties();
        }
        this.innerProperties().withOnboardingPackageWindows(onboardingPackageWindows);
        return this;
    }

    /**
     * Get the onboardingPackageLinux property: The onboarding package used to onboard Linux machines to MDE, coded in
     * base64. This can also be used for onboarding using the dedicated VM Extension.
     *
     * @return the onboardingPackageLinux value.
     */
    public byte[] onboardingPackageLinux() {
        return this.innerProperties() == null ? new byte[0] : this.innerProperties().onboardingPackageLinux();
    }

    /**
     * Set the onboardingPackageLinux property: The onboarding package used to onboard Linux machines to MDE, coded in
     * base64. This can also be used for onboarding using the dedicated VM Extension.
     *
     * @param onboardingPackageLinux the onboardingPackageLinux value to set.
     * @return the MdeOnboardingDataInner object itself.
     */
    public MdeOnboardingDataInner withOnboardingPackageLinux(byte[] onboardingPackageLinux) {
        if (this.innerProperties() == null) {
            this.innerProperties = new MdeOnboardingDataProperties();
        }
        this.innerProperties().withOnboardingPackageLinux(onboardingPackageLinux);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
