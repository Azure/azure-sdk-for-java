// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** The information protection for AWS offering. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "offeringType")
@JsonTypeName("InformationProtectionAws")
@Fluent
public final class InformationProtectionAwsOffering extends CloudOffering {
    /*
     * The native cloud connection configuration
     */
    @JsonProperty(value = "informationProtection")
    private InformationProtectionAwsOfferingInformationProtection informationProtection;

    /** Creates an instance of InformationProtectionAwsOffering class. */
    public InformationProtectionAwsOffering() {
    }

    /**
     * Get the informationProtection property: The native cloud connection configuration.
     *
     * @return the informationProtection value.
     */
    public InformationProtectionAwsOfferingInformationProtection informationProtection() {
        return this.informationProtection;
    }

    /**
     * Set the informationProtection property: The native cloud connection configuration.
     *
     * @param informationProtection the informationProtection value to set.
     * @return the InformationProtectionAwsOffering object itself.
     */
    public InformationProtectionAwsOffering withInformationProtection(
        InformationProtectionAwsOfferingInformationProtection informationProtection) {
        this.informationProtection = informationProtection;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (informationProtection() != null) {
            informationProtection().validate();
        }
    }
}
