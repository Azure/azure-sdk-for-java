// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Microsoft information protection built-in and custom information types, labels, and integration status.
 */
@Fluent
public final class GetSensitivitySettingsResponsePropertiesMipInformation
    implements JsonSerializable<GetSensitivitySettingsResponsePropertiesMipInformation> {
    /*
     * Microsoft information protection integration status
     */
    private MipIntegrationStatus mipIntegrationStatus;

    /*
     * List of Microsoft information protection sensitivity labels
     */
    private List<Label> labels;

    /*
     * List of custom user-defined information types
     */
    private List<InfoType> customInfoTypes;

    /*
     * List of pre-configured sensitive information types
     */
    private List<BuiltInInfoType> builtInInfoTypes;

    /**
     * Creates an instance of GetSensitivitySettingsResponsePropertiesMipInformation class.
     */
    public GetSensitivitySettingsResponsePropertiesMipInformation() {
    }

    /**
     * Get the mipIntegrationStatus property: Microsoft information protection integration status.
     * 
     * @return the mipIntegrationStatus value.
     */
    public MipIntegrationStatus mipIntegrationStatus() {
        return this.mipIntegrationStatus;
    }

    /**
     * Set the mipIntegrationStatus property: Microsoft information protection integration status.
     * 
     * @param mipIntegrationStatus the mipIntegrationStatus value to set.
     * @return the GetSensitivitySettingsResponsePropertiesMipInformation object itself.
     */
    public GetSensitivitySettingsResponsePropertiesMipInformation
        withMipIntegrationStatus(MipIntegrationStatus mipIntegrationStatus) {
        this.mipIntegrationStatus = mipIntegrationStatus;
        return this;
    }

    /**
     * Get the labels property: List of Microsoft information protection sensitivity labels.
     * 
     * @return the labels value.
     */
    public List<Label> labels() {
        return this.labels;
    }

    /**
     * Set the labels property: List of Microsoft information protection sensitivity labels.
     * 
     * @param labels the labels value to set.
     * @return the GetSensitivitySettingsResponsePropertiesMipInformation object itself.
     */
    public GetSensitivitySettingsResponsePropertiesMipInformation withLabels(List<Label> labels) {
        this.labels = labels;
        return this;
    }

    /**
     * Get the customInfoTypes property: List of custom user-defined information types.
     * 
     * @return the customInfoTypes value.
     */
    public List<InfoType> customInfoTypes() {
        return this.customInfoTypes;
    }

    /**
     * Set the customInfoTypes property: List of custom user-defined information types.
     * 
     * @param customInfoTypes the customInfoTypes value to set.
     * @return the GetSensitivitySettingsResponsePropertiesMipInformation object itself.
     */
    public GetSensitivitySettingsResponsePropertiesMipInformation withCustomInfoTypes(List<InfoType> customInfoTypes) {
        this.customInfoTypes = customInfoTypes;
        return this;
    }

    /**
     * Get the builtInInfoTypes property: List of pre-configured sensitive information types.
     * 
     * @return the builtInInfoTypes value.
     */
    public List<BuiltInInfoType> builtInInfoTypes() {
        return this.builtInInfoTypes;
    }

    /**
     * Set the builtInInfoTypes property: List of pre-configured sensitive information types.
     * 
     * @param builtInInfoTypes the builtInInfoTypes value to set.
     * @return the GetSensitivitySettingsResponsePropertiesMipInformation object itself.
     */
    public GetSensitivitySettingsResponsePropertiesMipInformation
        withBuiltInInfoTypes(List<BuiltInInfoType> builtInInfoTypes) {
        this.builtInInfoTypes = builtInInfoTypes;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (labels() != null) {
            labels().forEach(e -> e.validate());
        }
        if (customInfoTypes() != null) {
            customInfoTypes().forEach(e -> e.validate());
        }
        if (builtInInfoTypes() != null) {
            builtInInfoTypes().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("mipIntegrationStatus",
            this.mipIntegrationStatus == null ? null : this.mipIntegrationStatus.toString());
        jsonWriter.writeArrayField("labels", this.labels, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("customInfoTypes", this.customInfoTypes,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("builtInInfoTypes", this.builtInInfoTypes,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GetSensitivitySettingsResponsePropertiesMipInformation from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GetSensitivitySettingsResponsePropertiesMipInformation if the JsonReader was pointing to
     * an instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the GetSensitivitySettingsResponsePropertiesMipInformation.
     */
    public static GetSensitivitySettingsResponsePropertiesMipInformation fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            GetSensitivitySettingsResponsePropertiesMipInformation deserializedGetSensitivitySettingsResponsePropertiesMipInformation
                = new GetSensitivitySettingsResponsePropertiesMipInformation();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("mipIntegrationStatus".equals(fieldName)) {
                    deserializedGetSensitivitySettingsResponsePropertiesMipInformation.mipIntegrationStatus
                        = MipIntegrationStatus.fromString(reader.getString());
                } else if ("labels".equals(fieldName)) {
                    List<Label> labels = reader.readArray(reader1 -> Label.fromJson(reader1));
                    deserializedGetSensitivitySettingsResponsePropertiesMipInformation.labels = labels;
                } else if ("customInfoTypes".equals(fieldName)) {
                    List<InfoType> customInfoTypes = reader.readArray(reader1 -> InfoType.fromJson(reader1));
                    deserializedGetSensitivitySettingsResponsePropertiesMipInformation.customInfoTypes
                        = customInfoTypes;
                } else if ("builtInInfoTypes".equals(fieldName)) {
                    List<BuiltInInfoType> builtInInfoTypes
                        = reader.readArray(reader1 -> BuiltInInfoType.fromJson(reader1));
                    deserializedGetSensitivitySettingsResponsePropertiesMipInformation.builtInInfoTypes
                        = builtInInfoTypes;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedGetSensitivitySettingsResponsePropertiesMipInformation;
        });
    }
}
