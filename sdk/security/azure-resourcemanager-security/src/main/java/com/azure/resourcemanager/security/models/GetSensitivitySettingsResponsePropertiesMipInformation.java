// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Microsoft information protection built-in and custom information types, labels, and integration status.
 */
@Fluent
public final class GetSensitivitySettingsResponsePropertiesMipInformation {
    /*
     * Microsoft information protection integration status
     */
    @JsonProperty(value = "mipIntegrationStatus")
    private MipIntegrationStatus mipIntegrationStatus;

    /*
     * List of Microsoft information protection sensitivity labels
     */
    @JsonProperty(value = "labels")
    private List<Label> labels;

    /*
     * List of custom user-defined information types
     */
    @JsonProperty(value = "customInfoTypes")
    private List<InfoType> customInfoTypes;

    /*
     * List of pre-configured sensitive information types
     */
    @JsonProperty(value = "builtInInfoTypes")
    private List<BuiltInInfoType> builtInInfoTypes;

    /**
     * Creates an instance of GetSensitivitySettingsResponsePropertiesMipInformation class.
     */
    public GetSensitivitySettingsResponsePropertiesMipInformation() {
    }

    /**
     * Get the mipIntegrationStatus property: Microsoft information protection integration status.
     * 
     * @return the mipIntegrationStatus value.
     */
    public MipIntegrationStatus mipIntegrationStatus() {
        return this.mipIntegrationStatus;
    }

    /**
     * Set the mipIntegrationStatus property: Microsoft information protection integration status.
     * 
     * @param mipIntegrationStatus the mipIntegrationStatus value to set.
     * @return the GetSensitivitySettingsResponsePropertiesMipInformation object itself.
     */
    public GetSensitivitySettingsResponsePropertiesMipInformation
        withMipIntegrationStatus(MipIntegrationStatus mipIntegrationStatus) {
        this.mipIntegrationStatus = mipIntegrationStatus;
        return this;
    }

    /**
     * Get the labels property: List of Microsoft information protection sensitivity labels.
     * 
     * @return the labels value.
     */
    public List<Label> labels() {
        return this.labels;
    }

    /**
     * Set the labels property: List of Microsoft information protection sensitivity labels.
     * 
     * @param labels the labels value to set.
     * @return the GetSensitivitySettingsResponsePropertiesMipInformation object itself.
     */
    public GetSensitivitySettingsResponsePropertiesMipInformation withLabels(List<Label> labels) {
        this.labels = labels;
        return this;
    }

    /**
     * Get the customInfoTypes property: List of custom user-defined information types.
     * 
     * @return the customInfoTypes value.
     */
    public List<InfoType> customInfoTypes() {
        return this.customInfoTypes;
    }

    /**
     * Set the customInfoTypes property: List of custom user-defined information types.
     * 
     * @param customInfoTypes the customInfoTypes value to set.
     * @return the GetSensitivitySettingsResponsePropertiesMipInformation object itself.
     */
    public GetSensitivitySettingsResponsePropertiesMipInformation withCustomInfoTypes(List<InfoType> customInfoTypes) {
        this.customInfoTypes = customInfoTypes;
        return this;
    }

    /**
     * Get the builtInInfoTypes property: List of pre-configured sensitive information types.
     * 
     * @return the builtInInfoTypes value.
     */
    public List<BuiltInInfoType> builtInInfoTypes() {
        return this.builtInInfoTypes;
    }

    /**
     * Set the builtInInfoTypes property: List of pre-configured sensitive information types.
     * 
     * @param builtInInfoTypes the builtInInfoTypes value to set.
     * @return the GetSensitivitySettingsResponsePropertiesMipInformation object itself.
     */
    public GetSensitivitySettingsResponsePropertiesMipInformation
        withBuiltInInfoTypes(List<BuiltInInfoType> builtInInfoTypes) {
        this.builtInInfoTypes = builtInInfoTypes;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (labels() != null) {
            labels().forEach(e -> e.validate());
        }
        if (customInfoTypes() != null) {
            customInfoTypes().forEach(e -> e.validate());
        }
        if (builtInInfoTypes() != null) {
            builtInInfoTypes().forEach(e -> e.validate());
        }
    }
}
