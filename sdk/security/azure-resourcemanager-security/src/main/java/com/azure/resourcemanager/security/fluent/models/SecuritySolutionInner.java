// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.resourcemanager.security.models.ProvisioningState;
import com.azure.resourcemanager.security.models.SecurityFamily;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The SecuritySolution model. */
@Fluent
public final class SecuritySolutionInner extends ProxyResource {
    /*
     * The properties property.
     */
    @JsonProperty(value = "properties")
    private SecuritySolutionProperties innerProperties;

    /*
     * Location where the resource is stored
     */
    @JsonProperty(value = "location", access = JsonProperty.Access.WRITE_ONLY)
    private String location;

    /** Creates an instance of SecuritySolutionInner class. */
    public SecuritySolutionInner() {
    }

    /**
     * Get the innerProperties property: The properties property.
     *
     * @return the innerProperties value.
     */
    private SecuritySolutionProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the location property: Location where the resource is stored.
     *
     * @return the location value.
     */
    public String location() {
        return this.location;
    }

    /**
     * Get the securityFamily property: The security family of the security solution.
     *
     * @return the securityFamily value.
     */
    public SecurityFamily securityFamily() {
        return this.innerProperties() == null ? null : this.innerProperties().securityFamily();
    }

    /**
     * Set the securityFamily property: The security family of the security solution.
     *
     * @param securityFamily the securityFamily value to set.
     * @return the SecuritySolutionInner object itself.
     */
    public SecuritySolutionInner withSecurityFamily(SecurityFamily securityFamily) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SecuritySolutionProperties();
        }
        this.innerProperties().withSecurityFamily(securityFamily);
        return this;
    }

    /**
     * Get the provisioningState property: The security family provisioning State.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Set the provisioningState property: The security family provisioning State.
     *
     * @param provisioningState the provisioningState value to set.
     * @return the SecuritySolutionInner object itself.
     */
    public SecuritySolutionInner withProvisioningState(ProvisioningState provisioningState) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SecuritySolutionProperties();
        }
        this.innerProperties().withProvisioningState(provisioningState);
        return this;
    }

    /**
     * Get the template property: The security solutions' template.
     *
     * @return the template value.
     */
    public String template() {
        return this.innerProperties() == null ? null : this.innerProperties().template();
    }

    /**
     * Set the template property: The security solutions' template.
     *
     * @param template the template value to set.
     * @return the SecuritySolutionInner object itself.
     */
    public SecuritySolutionInner withTemplate(String template) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SecuritySolutionProperties();
        }
        this.innerProperties().withTemplate(template);
        return this;
    }

    /**
     * Get the protectionStatus property: The security solutions' status.
     *
     * @return the protectionStatus value.
     */
    public String protectionStatus() {
        return this.innerProperties() == null ? null : this.innerProperties().protectionStatus();
    }

    /**
     * Set the protectionStatus property: The security solutions' status.
     *
     * @param protectionStatus the protectionStatus value to set.
     * @return the SecuritySolutionInner object itself.
     */
    public SecuritySolutionInner withProtectionStatus(String protectionStatus) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SecuritySolutionProperties();
        }
        this.innerProperties().withProtectionStatus(protectionStatus);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
