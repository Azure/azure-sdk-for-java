// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.security.models.SecurityFamily;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The SecuritySolutionsReferenceDataProperties model. */
@Fluent
public final class SecuritySolutionsReferenceDataProperties {
    /*
     * The security family of the security solution
     */
    @JsonProperty(value = "securityFamily", required = true)
    private SecurityFamily securityFamily;

    /*
     * The security solutions' vendor name
     */
    @JsonProperty(value = "alertVendorName", required = true)
    private String alertVendorName;

    /*
     * The security solutions' package info url
     */
    @JsonProperty(value = "packageInfoUrl", required = true)
    private String packageInfoUrl;

    /*
     * The security solutions' product name
     */
    @JsonProperty(value = "productName", required = true)
    private String productName;

    /*
     * The security solutions' publisher
     */
    @JsonProperty(value = "publisher", required = true)
    private String publisher;

    /*
     * The security solutions' publisher display name
     */
    @JsonProperty(value = "publisherDisplayName", required = true)
    private String publisherDisplayName;

    /*
     * The security solutions' template
     */
    @JsonProperty(value = "template", required = true)
    private String template;

    /** Creates an instance of SecuritySolutionsReferenceDataProperties class. */
    public SecuritySolutionsReferenceDataProperties() {
    }

    /**
     * Get the securityFamily property: The security family of the security solution.
     *
     * @return the securityFamily value.
     */
    public SecurityFamily securityFamily() {
        return this.securityFamily;
    }

    /**
     * Set the securityFamily property: The security family of the security solution.
     *
     * @param securityFamily the securityFamily value to set.
     * @return the SecuritySolutionsReferenceDataProperties object itself.
     */
    public SecuritySolutionsReferenceDataProperties withSecurityFamily(SecurityFamily securityFamily) {
        this.securityFamily = securityFamily;
        return this;
    }

    /**
     * Get the alertVendorName property: The security solutions' vendor name.
     *
     * @return the alertVendorName value.
     */
    public String alertVendorName() {
        return this.alertVendorName;
    }

    /**
     * Set the alertVendorName property: The security solutions' vendor name.
     *
     * @param alertVendorName the alertVendorName value to set.
     * @return the SecuritySolutionsReferenceDataProperties object itself.
     */
    public SecuritySolutionsReferenceDataProperties withAlertVendorName(String alertVendorName) {
        this.alertVendorName = alertVendorName;
        return this;
    }

    /**
     * Get the packageInfoUrl property: The security solutions' package info url.
     *
     * @return the packageInfoUrl value.
     */
    public String packageInfoUrl() {
        return this.packageInfoUrl;
    }

    /**
     * Set the packageInfoUrl property: The security solutions' package info url.
     *
     * @param packageInfoUrl the packageInfoUrl value to set.
     * @return the SecuritySolutionsReferenceDataProperties object itself.
     */
    public SecuritySolutionsReferenceDataProperties withPackageInfoUrl(String packageInfoUrl) {
        this.packageInfoUrl = packageInfoUrl;
        return this;
    }

    /**
     * Get the productName property: The security solutions' product name.
     *
     * @return the productName value.
     */
    public String productName() {
        return this.productName;
    }

    /**
     * Set the productName property: The security solutions' product name.
     *
     * @param productName the productName value to set.
     * @return the SecuritySolutionsReferenceDataProperties object itself.
     */
    public SecuritySolutionsReferenceDataProperties withProductName(String productName) {
        this.productName = productName;
        return this;
    }

    /**
     * Get the publisher property: The security solutions' publisher.
     *
     * @return the publisher value.
     */
    public String publisher() {
        return this.publisher;
    }

    /**
     * Set the publisher property: The security solutions' publisher.
     *
     * @param publisher the publisher value to set.
     * @return the SecuritySolutionsReferenceDataProperties object itself.
     */
    public SecuritySolutionsReferenceDataProperties withPublisher(String publisher) {
        this.publisher = publisher;
        return this;
    }

    /**
     * Get the publisherDisplayName property: The security solutions' publisher display name.
     *
     * @return the publisherDisplayName value.
     */
    public String publisherDisplayName() {
        return this.publisherDisplayName;
    }

    /**
     * Set the publisherDisplayName property: The security solutions' publisher display name.
     *
     * @param publisherDisplayName the publisherDisplayName value to set.
     * @return the SecuritySolutionsReferenceDataProperties object itself.
     */
    public SecuritySolutionsReferenceDataProperties withPublisherDisplayName(String publisherDisplayName) {
        this.publisherDisplayName = publisherDisplayName;
        return this;
    }

    /**
     * Get the template property: The security solutions' template.
     *
     * @return the template value.
     */
    public String template() {
        return this.template;
    }

    /**
     * Set the template property: The security solutions' template.
     *
     * @param template the template value to set.
     * @return the SecuritySolutionsReferenceDataProperties object itself.
     */
    public SecuritySolutionsReferenceDataProperties withTemplate(String template) {
        this.template = template;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (securityFamily() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property securityFamily in model SecuritySolutionsReferenceDataProperties"));
        }
        if (alertVendorName() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property alertVendorName in model SecuritySolutionsReferenceDataProperties"));
        }
        if (packageInfoUrl() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property packageInfoUrl in model SecuritySolutionsReferenceDataProperties"));
        }
        if (productName() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property productName in model SecuritySolutionsReferenceDataProperties"));
        }
        if (publisher() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property publisher in model SecuritySolutionsReferenceDataProperties"));
        }
        if (publisherDisplayName() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property publisherDisplayName in model"
                            + " SecuritySolutionsReferenceDataProperties"));
        }
        if (template() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property template in model SecuritySolutionsReferenceDataProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(SecuritySolutionsReferenceDataProperties.class);
}
