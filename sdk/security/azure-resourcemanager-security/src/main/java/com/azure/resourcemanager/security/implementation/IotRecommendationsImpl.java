// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.security.fluent.IotRecommendationsClient;
import com.azure.resourcemanager.security.fluent.models.IotRecommendationModelInner;
import com.azure.resourcemanager.security.models.IotRecommendationModel;
import com.azure.resourcemanager.security.models.IotRecommendations;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class IotRecommendationsImpl implements IotRecommendations {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(IotRecommendationsImpl.class);

    private final IotRecommendationsClient innerClient;

    private final com.azure.resourcemanager.security.SecurityManager serviceManager;

    public IotRecommendationsImpl(
        IotRecommendationsClient innerClient, com.azure.resourcemanager.security.SecurityManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<IotRecommendationModel> list(String scope) {
        PagedIterable<IotRecommendationModelInner> inner = this.serviceClient().list(scope);
        return Utils.mapPage(inner, inner1 -> new IotRecommendationModelImpl(inner1, this.manager()));
    }

    public PagedIterable<IotRecommendationModel> list(
        String scope, String recommendationType, String deviceId, Integer limit, String skipToken, Context context) {
        PagedIterable<IotRecommendationModelInner> inner =
            this.serviceClient().list(scope, recommendationType, deviceId, limit, skipToken, context);
        return Utils.mapPage(inner, inner1 -> new IotRecommendationModelImpl(inner1, this.manager()));
    }

    public IotRecommendationModel get(String scope, String iotRecommendationId) {
        IotRecommendationModelInner inner = this.serviceClient().get(scope, iotRecommendationId);
        if (inner != null) {
            return new IotRecommendationModelImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<IotRecommendationModel> getWithResponse(String scope, String iotRecommendationId, Context context) {
        Response<IotRecommendationModelInner> inner =
            this.serviceClient().getWithResponse(scope, iotRecommendationId, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new IotRecommendationModelImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private IotRecommendationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.security.SecurityManager manager() {
        return this.serviceManager;
    }
}
