// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Properties of On Upload malware scanning.
 */
@Fluent
public final class OnUploadProperties implements JsonSerializable<OnUploadProperties> {
    /*
     * Indicates whether On Upload malware scanning should be enabled.
     */
    private Boolean isEnabled;

    /*
     * Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.
     */
    private Integer capGBPerMonth;

    /**
     * Creates an instance of OnUploadProperties class.
     */
    public OnUploadProperties() {
    }

    /**
     * Get the isEnabled property: Indicates whether On Upload malware scanning should be enabled.
     * 
     * @return the isEnabled value.
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }

    /**
     * Set the isEnabled property: Indicates whether On Upload malware scanning should be enabled.
     * 
     * @param isEnabled the isEnabled value to set.
     * @return the OnUploadProperties object itself.
     */
    public OnUploadProperties withIsEnabled(Boolean isEnabled) {
        this.isEnabled = isEnabled;
        return this;
    }

    /**
     * Get the capGBPerMonth property: Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.
     * 
     * @return the capGBPerMonth value.
     */
    public Integer capGBPerMonth() {
        return this.capGBPerMonth;
    }

    /**
     * Set the capGBPerMonth property: Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.
     * 
     * @param capGBPerMonth the capGBPerMonth value to set.
     * @return the OnUploadProperties object itself.
     */
    public OnUploadProperties withCapGBPerMonth(Integer capGBPerMonth) {
        this.capGBPerMonth = capGBPerMonth;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("isEnabled", this.isEnabled);
        jsonWriter.writeNumberField("capGBPerMonth", this.capGBPerMonth);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OnUploadProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of OnUploadProperties if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the OnUploadProperties.
     */
    public static OnUploadProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OnUploadProperties deserializedOnUploadProperties = new OnUploadProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("isEnabled".equals(fieldName)) {
                    deserializedOnUploadProperties.isEnabled = reader.getNullable(JsonReader::getBoolean);
                } else if ("capGBPerMonth".equals(fieldName)) {
                    deserializedOnUploadProperties.capGBPerMonth = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedOnUploadProperties;
        });
    }
}
