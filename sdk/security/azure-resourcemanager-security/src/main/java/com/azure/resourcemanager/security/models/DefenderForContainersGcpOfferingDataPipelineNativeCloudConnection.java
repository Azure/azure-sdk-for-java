// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The native cloud connection configuration.
 */
@Fluent
public final class DefenderForContainersGcpOfferingDataPipelineNativeCloudConnection
    implements JsonSerializable<DefenderForContainersGcpOfferingDataPipelineNativeCloudConnection> {
    /*
     * The data collection service account email address in GCP for this offering
     */
    private String serviceAccountEmailAddress;

    /*
     * The data collection GCP workload identity provider id for this offering
     */
    private String workloadIdentityProviderId;

    /**
     * Creates an instance of DefenderForContainersGcpOfferingDataPipelineNativeCloudConnection class.
     */
    public DefenderForContainersGcpOfferingDataPipelineNativeCloudConnection() {
    }

    /**
     * Get the serviceAccountEmailAddress property: The data collection service account email address in GCP for this
     * offering.
     * 
     * @return the serviceAccountEmailAddress value.
     */
    public String serviceAccountEmailAddress() {
        return this.serviceAccountEmailAddress;
    }

    /**
     * Set the serviceAccountEmailAddress property: The data collection service account email address in GCP for this
     * offering.
     * 
     * @param serviceAccountEmailAddress the serviceAccountEmailAddress value to set.
     * @return the DefenderForContainersGcpOfferingDataPipelineNativeCloudConnection object itself.
     */
    public DefenderForContainersGcpOfferingDataPipelineNativeCloudConnection
        withServiceAccountEmailAddress(String serviceAccountEmailAddress) {
        this.serviceAccountEmailAddress = serviceAccountEmailAddress;
        return this;
    }

    /**
     * Get the workloadIdentityProviderId property: The data collection GCP workload identity provider id for this
     * offering.
     * 
     * @return the workloadIdentityProviderId value.
     */
    public String workloadIdentityProviderId() {
        return this.workloadIdentityProviderId;
    }

    /**
     * Set the workloadIdentityProviderId property: The data collection GCP workload identity provider id for this
     * offering.
     * 
     * @param workloadIdentityProviderId the workloadIdentityProviderId value to set.
     * @return the DefenderForContainersGcpOfferingDataPipelineNativeCloudConnection object itself.
     */
    public DefenderForContainersGcpOfferingDataPipelineNativeCloudConnection
        withWorkloadIdentityProviderId(String workloadIdentityProviderId) {
        this.workloadIdentityProviderId = workloadIdentityProviderId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("serviceAccountEmailAddress", this.serviceAccountEmailAddress);
        jsonWriter.writeStringField("workloadIdentityProviderId", this.workloadIdentityProviderId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DefenderForContainersGcpOfferingDataPipelineNativeCloudConnection from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DefenderForContainersGcpOfferingDataPipelineNativeCloudConnection if the JsonReader was
     * pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the
     * DefenderForContainersGcpOfferingDataPipelineNativeCloudConnection.
     */
    public static DefenderForContainersGcpOfferingDataPipelineNativeCloudConnection fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            DefenderForContainersGcpOfferingDataPipelineNativeCloudConnection deserializedDefenderForContainersGcpOfferingDataPipelineNativeCloudConnection
                = new DefenderForContainersGcpOfferingDataPipelineNativeCloudConnection();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("serviceAccountEmailAddress".equals(fieldName)) {
                    deserializedDefenderForContainersGcpOfferingDataPipelineNativeCloudConnection.serviceAccountEmailAddress
                        = reader.getString();
                } else if ("workloadIdentityProviderId".equals(fieldName)) {
                    deserializedDefenderForContainersGcpOfferingDataPipelineNativeCloudConnection.workloadIdentityProviderId
                        = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDefenderForContainersGcpOfferingDataPipelineNativeCloudConnection;
        });
    }
}
