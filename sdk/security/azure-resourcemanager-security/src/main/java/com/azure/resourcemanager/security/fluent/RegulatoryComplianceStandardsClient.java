// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.security.fluent.models.RegulatoryComplianceStandardInner;

/** An instance of this class provides access to all the operations defined in RegulatoryComplianceStandardsClient. */
public interface RegulatoryComplianceStandardsClient {
    /**
     * Supported regulatory compliance standards details and state.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of regulatory compliance standards response.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RegulatoryComplianceStandardInner> list();

    /**
     * Supported regulatory compliance standards details and state.
     *
     * @param filter OData filter. Optional.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of regulatory compliance standards response.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RegulatoryComplianceStandardInner> list(String filter, Context context);

    /**
     * Supported regulatory compliance details state for selected standard.
     *
     * @param regulatoryComplianceStandardName Name of the regulatory compliance standard object.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return regulatory compliance standard details and state.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RegulatoryComplianceStandardInner get(String regulatoryComplianceStandardName);

    /**
     * Supported regulatory compliance details state for selected standard.
     *
     * @param regulatoryComplianceStandardName Name of the regulatory compliance standard object.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return regulatory compliance standard details and state.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<RegulatoryComplianceStandardInner> getWithResponse(
        String regulatoryComplianceStandardName, Context context);
}
