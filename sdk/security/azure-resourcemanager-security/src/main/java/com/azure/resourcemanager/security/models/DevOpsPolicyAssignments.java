// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of DevOpsPolicyAssignments.
 */
public interface DevOpsPolicyAssignments {
    /**
     * Returns a list of DevOps Policy Assignments.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param securityConnectorName The security connector name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of RP resources which supports pagination as paginated response with {@link PagedIterable}.
     */
    PagedIterable<DevOpsPolicyAssignment> list(String resourceGroupName, String securityConnectorName);

    /**
     * Returns a list of DevOps Policy Assignments.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param securityConnectorName The security connector name.
     * @param devOpsPolicyType Optional filter for listing the policies.
     * @param resourceId Optional filter for listing the assignments of a specific resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of RP resources which supports pagination as paginated response with {@link PagedIterable}.
     */
    PagedIterable<DevOpsPolicyAssignment> list(String resourceGroupName, String securityConnectorName,
        String devOpsPolicyType, String resourceId, Context context);

    /**
     * Returns a DevOps Policy Assignment Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param securityConnectorName The security connector name.
     * @param policyAssignmentId The policy assignment Id.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return devOps Policy assignment resource along with {@link Response}.
     */
    Response<DevOpsPolicyAssignment> getWithResponse(String resourceGroupName, String securityConnectorName,
        String policyAssignmentId, Context context);

    /**
     * Returns a DevOps Policy Assignment Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param securityConnectorName The security connector name.
     * @param policyAssignmentId The policy assignment Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return devOps Policy assignment resource.
     */
    DevOpsPolicyAssignment get(String resourceGroupName, String securityConnectorName, String policyAssignmentId);

    /**
     * Deletes a DevOps Policy Assignment Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param securityConnectorName The security connector name.
     * @param policyAssignmentId The policy assignment Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String securityConnectorName, String policyAssignmentId);

    /**
     * Deletes a DevOps Policy Assignment Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param securityConnectorName The security connector name.
     * @param policyAssignmentId The policy assignment Id.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String securityConnectorName, String policyAssignmentId, Context context);

    /**
     * Returns a DevOps Policy Assignment Resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return devOps Policy assignment resource along with {@link Response}.
     */
    DevOpsPolicyAssignment getById(String id);

    /**
     * Returns a DevOps Policy Assignment Resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return devOps Policy assignment resource along with {@link Response}.
     */
    Response<DevOpsPolicyAssignment> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a DevOps Policy Assignment Resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes a DevOps Policy Assignment Resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new DevOpsPolicyAssignment resource.
     * 
     * @param name resource name.
     * @return the first stage of the new DevOpsPolicyAssignment definition.
     */
    DevOpsPolicyAssignment.DefinitionStages.Blank define(String name);
}
