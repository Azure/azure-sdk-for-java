// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Governance rule execution parameters.
 */
@Fluent
public final class ExecuteGovernanceRuleParams implements JsonSerializable<ExecuteGovernanceRuleParams> {
    /*
     * Describe if governance rule should be override
     */
    private Boolean override;

    /**
     * Creates an instance of ExecuteGovernanceRuleParams class.
     */
    public ExecuteGovernanceRuleParams() {
    }

    /**
     * Get the override property: Describe if governance rule should be override.
     * 
     * @return the override value.
     */
    public Boolean override() {
        return this.override;
    }

    /**
     * Set the override property: Describe if governance rule should be override.
     * 
     * @param override the override value to set.
     * @return the ExecuteGovernanceRuleParams object itself.
     */
    public ExecuteGovernanceRuleParams withOverride(Boolean override) {
        this.override = override;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("override", this.override);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ExecuteGovernanceRuleParams from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ExecuteGovernanceRuleParams if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ExecuteGovernanceRuleParams.
     */
    public static ExecuteGovernanceRuleParams fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ExecuteGovernanceRuleParams deserializedExecuteGovernanceRuleParams = new ExecuteGovernanceRuleParams();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("override".equals(fieldName)) {
                    deserializedExecuteGovernanceRuleParams.override = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedExecuteGovernanceRuleParams;
        });
    }
}
