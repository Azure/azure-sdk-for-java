// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.security.fluent.models.IotSitesModelInner;

/** Resource collection API of IotSites. */
public interface IotSites {
    /**
     * List IoT sites.
     *
     * @param scope Scope of the query (IoT Hub, /providers/Microsoft.Devices/iotHubs/myHub).
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of IoT sites.
     */
    IotSitesList list(String scope);

    /**
     * List IoT sites.
     *
     * @param scope Scope of the query (IoT Hub, /providers/Microsoft.Devices/iotHubs/myHub).
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of IoT sites.
     */
    Response<IotSitesList> listWithResponse(String scope, Context context);

    /**
     * Get IoT site.
     *
     * @param scope Scope of the query (IoT Hub, /providers/Microsoft.Devices/iotHubs/myHub).
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return ioT site.
     */
    IotSitesModel get(String scope);

    /**
     * Get IoT site.
     *
     * @param scope Scope of the query (IoT Hub, /providers/Microsoft.Devices/iotHubs/myHub).
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return ioT site.
     */
    Response<IotSitesModel> getWithResponse(String scope, Context context);

    /**
     * Create or update IoT site.
     *
     * @param scope Scope of the query (IoT Hub, /providers/Microsoft.Devices/iotHubs/myHub).
     * @param iotSitesModel The IoT sites model.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return ioT site model.
     */
    IotSitesModel createOrUpdate(String scope, IotSitesModelInner iotSitesModel);

    /**
     * Create or update IoT site.
     *
     * @param scope Scope of the query (IoT Hub, /providers/Microsoft.Devices/iotHubs/myHub).
     * @param iotSitesModel The IoT sites model.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return ioT site model.
     */
    Response<IotSitesModel> createOrUpdateWithResponse(String scope, IotSitesModelInner iotSitesModel, Context context);

    /**
     * Delete IoT site.
     *
     * @param scope Scope of the query (IoT Hub, /providers/Microsoft.Devices/iotHubs/myHub).
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String scope);

    /**
     * Delete IoT site.
     *
     * @param scope Scope of the query (IoT Hub, /providers/Microsoft.Devices/iotHubs/myHub).
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    Response<Void> deleteWithResponse(String scope, Context context);
}
