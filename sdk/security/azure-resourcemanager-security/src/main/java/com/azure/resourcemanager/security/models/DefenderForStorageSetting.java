// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.security.fluent.models.DefenderForStorageSettingInner;

/**
 * An immutable client-side representation of DefenderForStorageSetting.
 */
public interface DefenderForStorageSetting {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the properties property: Defender for Storage resource properties.
     * 
     * @return the properties value.
     */
    DefenderForStorageSettingProperties properties();

    /**
     * Gets the inner com.azure.resourcemanager.security.fluent.models.DefenderForStorageSettingInner object.
     * 
     * @return the inner object.
     */
    DefenderForStorageSettingInner innerModel();

    /**
     * The entirety of the DefenderForStorageSetting definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithScope, DefinitionStages.WithCreate {
    }

    /**
     * The DefenderForStorageSetting definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the DefenderForStorageSetting definition.
         */
        interface Blank extends WithScope {
        }

        /**
         * The stage of the DefenderForStorageSetting definition allowing to specify parent resource.
         */
        interface WithScope {
            /**
             * Specifies resourceId.
             * 
             * @param resourceId The identifier of the resource.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceId(String resourceId);
        }

        /**
         * The stage of the DefenderForStorageSetting definition which contains all the minimum required properties for
         * the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithProperties {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            DefenderForStorageSetting create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            DefenderForStorageSetting create(Context context);
        }

        /**
         * The stage of the DefenderForStorageSetting definition allowing to specify properties.
         */
        interface WithProperties {
            /**
             * Specifies the properties property: Defender for Storage resource properties..
             * 
             * @param properties Defender for Storage resource properties.
             * @return the next definition stage.
             */
            WithCreate withProperties(DefenderForStorageSettingProperties properties);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    DefenderForStorageSetting refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    DefenderForStorageSetting refresh(Context context);

    /**
     * Initiate a Defender for Storage malware scan for the specified storage account.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes the state of a malware scan operation along with {@link Response}.
     */
    Response<MalwareScan> startMalwareScanWithResponse(Context context);

    /**
     * Initiate a Defender for Storage malware scan for the specified storage account.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes the state of a malware scan operation.
     */
    MalwareScan startMalwareScan();
}
