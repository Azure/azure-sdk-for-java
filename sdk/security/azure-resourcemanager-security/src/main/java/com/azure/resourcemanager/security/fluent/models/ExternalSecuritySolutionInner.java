// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.management.ProxyResource;
import com.azure.resourcemanager.security.models.AadExternalSecuritySolution;
import com.azure.resourcemanager.security.models.AtaExternalSecuritySolution;
import com.azure.resourcemanager.security.models.CefExternalSecuritySolution;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents a security solution external to Microsoft Defender for Cloud which sends information to an OMS workspace
 * and whose data is displayed by Microsoft Defender for Cloud.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    include = JsonTypeInfo.As.PROPERTY,
    property = "kind",
    defaultImpl = ExternalSecuritySolutionInner.class)
@JsonTypeName("ExternalSecuritySolution")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "CEF", value = CefExternalSecuritySolution.class),
    @JsonSubTypes.Type(name = "ATA", value = AtaExternalSecuritySolution.class),
    @JsonSubTypes.Type(name = "AAD", value = AadExternalSecuritySolution.class)
})
@Immutable
public class ExternalSecuritySolutionInner extends ProxyResource {
    /*
     * Location where the resource is stored
     */
    @JsonProperty(value = "location", access = JsonProperty.Access.WRITE_ONLY)
    private String location;

    /** Creates an instance of ExternalSecuritySolutionInner class. */
    public ExternalSecuritySolutionInner() {
    }

    /**
     * Get the location property: Location where the resource is stored.
     *
     * @return the location value.
     */
    public String location() {
        return this.location;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
