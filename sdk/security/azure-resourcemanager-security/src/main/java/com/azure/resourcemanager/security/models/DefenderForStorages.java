// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of DefenderForStorages.
 */
public interface DefenderForStorages {
    /**
     * Gets the Defender for Storage settings for the specified storage account.
     * 
     * @param resourceId The identifier of the resource.
     * @param settingName Defender for Storage setting name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Defender for Storage settings for the specified storage account along with {@link Response}.
     */
    Response<DefenderForStorageSetting> getWithResponse(String resourceId, SettingName settingName, Context context);

    /**
     * Gets the Defender for Storage settings for the specified storage account.
     * 
     * @param resourceId The identifier of the resource.
     * @param settingName Defender for Storage setting name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Defender for Storage settings for the specified storage account.
     */
    DefenderForStorageSetting get(String resourceId, SettingName settingName);

    /**
     * Gets the Defender for Storage settings for the specified storage account.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Defender for Storage settings for the specified storage account along with {@link Response}.
     */
    DefenderForStorageSetting getById(String id);

    /**
     * Gets the Defender for Storage settings for the specified storage account.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Defender for Storage settings for the specified storage account along with {@link Response}.
     */
    Response<DefenderForStorageSetting> getByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new DefenderForStorageSetting resource.
     * 
     * @param name resource name.
     * @return the first stage of the new DefenderForStorageSetting definition.
     */
    DefenderForStorageSetting.DefinitionStages.Blank define(SettingName name);
}
