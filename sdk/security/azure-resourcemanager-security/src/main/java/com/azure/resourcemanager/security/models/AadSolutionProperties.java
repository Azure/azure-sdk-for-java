// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The external security solution properties for AAD solutions. */
@Fluent
public final class AadSolutionProperties extends ExternalSecuritySolutionProperties {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(AadSolutionProperties.class);

    /*
     * The connectivity state of the external AAD solution
     */
    @JsonProperty(value = "connectivityState")
    private AadConnectivityStateValue connectivityState;

    /**
     * Get the connectivityState property: The connectivity state of the external AAD solution.
     *
     * @return the connectivityState value.
     */
    public AadConnectivityStateValue connectivityState() {
        return this.connectivityState;
    }

    /**
     * Set the connectivityState property: The connectivity state of the external AAD solution.
     *
     * @param connectivityState the connectivityState value to set.
     * @return the AadSolutionProperties object itself.
     */
    public AadSolutionProperties withConnectivityState(AadConnectivityStateValue connectivityState) {
        this.connectivityState = connectivityState;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AadSolutionProperties withDeviceVendor(String deviceVendor) {
        super.withDeviceVendor(deviceVendor);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AadSolutionProperties withDeviceType(String deviceType) {
        super.withDeviceType(deviceType);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AadSolutionProperties withWorkspace(ConnectedWorkspace workspace) {
        super.withWorkspace(workspace);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
