// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.implementation;

import com.azure.resourcemanager.security.fluent.models.AlertsSuppressionRuleInner;
import com.azure.resourcemanager.security.models.AlertsSuppressionRule;
import com.azure.resourcemanager.security.models.RuleState;
import com.azure.resourcemanager.security.models.SuppressionAlertsScope;
import java.time.OffsetDateTime;

public final class AlertsSuppressionRuleImpl implements AlertsSuppressionRule {
    private AlertsSuppressionRuleInner innerObject;

    private final com.azure.resourcemanager.security.SecurityManager serviceManager;

    AlertsSuppressionRuleImpl(
        AlertsSuppressionRuleInner innerObject, com.azure.resourcemanager.security.SecurityManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String alertType() {
        return this.innerModel().alertType();
    }

    public OffsetDateTime lastModifiedUtc() {
        return this.innerModel().lastModifiedUtc();
    }

    public OffsetDateTime expirationDateUtc() {
        return this.innerModel().expirationDateUtc();
    }

    public String reason() {
        return this.innerModel().reason();
    }

    public RuleState state() {
        return this.innerModel().state();
    }

    public String comment() {
        return this.innerModel().comment();
    }

    public SuppressionAlertsScope suppressionAlertsScope() {
        return this.innerModel().suppressionAlertsScope();
    }

    public AlertsSuppressionRuleInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.security.SecurityManager manager() {
        return this.serviceManager;
    }
}
