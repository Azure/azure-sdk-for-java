// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A single automation scope.
 */
@Fluent
public final class AutomationScope implements JsonSerializable<AutomationScope> {
    /*
     * The resources scope description.
     */
    private String description;

    /*
     * The resources scope path. Can be the subscription on which the automation is defined on or a resource group under
     * that subscription (fully qualified Azure resource IDs).
     */
    private String scopePath;

    /**
     * Creates an instance of AutomationScope class.
     */
    public AutomationScope() {
    }

    /**
     * Get the description property: The resources scope description.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: The resources scope description.
     * 
     * @param description the description value to set.
     * @return the AutomationScope object itself.
     */
    public AutomationScope withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the scopePath property: The resources scope path. Can be the subscription on which the automation is defined
     * on or a resource group under that subscription (fully qualified Azure resource IDs).
     * 
     * @return the scopePath value.
     */
    public String scopePath() {
        return this.scopePath;
    }

    /**
     * Set the scopePath property: The resources scope path. Can be the subscription on which the automation is defined
     * on or a resource group under that subscription (fully qualified Azure resource IDs).
     * 
     * @param scopePath the scopePath value to set.
     * @return the AutomationScope object itself.
     */
    public AutomationScope withScopePath(String scopePath) {
        this.scopePath = scopePath;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("description", this.description);
        jsonWriter.writeStringField("scopePath", this.scopePath);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AutomationScope from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AutomationScope if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AutomationScope.
     */
    public static AutomationScope fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AutomationScope deserializedAutomationScope = new AutomationScope();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("description".equals(fieldName)) {
                    deserializedAutomationScope.description = reader.getString();
                } else if ("scopePath".equals(fieldName)) {
                    deserializedAutomationScope.scopePath = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAutomationScope;
        });
    }
}
