// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The resource details of the health report.
 */
@Fluent
public final class ResourceDetailsAutoGenerated implements JsonSerializable<ResourceDetailsAutoGenerated> {
    /*
     * The status of the health report
     */
    private Source source;

    /*
     * The azure id of the resource
     */
    private String id;

    /*
     * The id of the connector
     */
    private String connectorId;

    /**
     * Creates an instance of ResourceDetailsAutoGenerated class.
     */
    public ResourceDetailsAutoGenerated() {
    }

    /**
     * Get the source property: The status of the health report.
     * 
     * @return the source value.
     */
    public Source source() {
        return this.source;
    }

    /**
     * Set the source property: The status of the health report.
     * 
     * @param source the source value to set.
     * @return the ResourceDetailsAutoGenerated object itself.
     */
    public ResourceDetailsAutoGenerated withSource(Source source) {
        this.source = source;
        return this;
    }

    /**
     * Get the id property: The azure id of the resource.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the connectorId property: The id of the connector.
     * 
     * @return the connectorId value.
     */
    public String connectorId() {
        return this.connectorId;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("source", this.source == null ? null : this.source.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ResourceDetailsAutoGenerated from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ResourceDetailsAutoGenerated if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ResourceDetailsAutoGenerated.
     */
    public static ResourceDetailsAutoGenerated fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ResourceDetailsAutoGenerated deserializedResourceDetailsAutoGenerated = new ResourceDetailsAutoGenerated();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("source".equals(fieldName)) {
                    deserializedResourceDetailsAutoGenerated.source = Source.fromString(reader.getString());
                } else if ("id".equals(fieldName)) {
                    deserializedResourceDetailsAutoGenerated.id = reader.getString();
                } else if ("connectorId".equals(fieldName)) {
                    deserializedResourceDetailsAutoGenerated.connectorId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedResourceDetailsAutoGenerated;
        });
    }
}
