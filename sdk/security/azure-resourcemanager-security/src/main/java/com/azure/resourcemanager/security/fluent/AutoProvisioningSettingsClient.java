// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.security.fluent.models.AutoProvisioningSettingInner;

/** An instance of this class provides access to all the operations defined in AutoProvisioningSettingsClient. */
public interface AutoProvisioningSettingsClient {
    /**
     * Exposes the auto provisioning settings of the subscriptions.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of all the auto provisioning settings response.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AutoProvisioningSettingInner> list();

    /**
     * Exposes the auto provisioning settings of the subscriptions.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of all the auto provisioning settings response.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AutoProvisioningSettingInner> list(Context context);

    /**
     * Details of a specific setting.
     *
     * @param settingName Auto provisioning setting key.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return auto provisioning setting.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AutoProvisioningSettingInner get(String settingName);

    /**
     * Details of a specific setting.
     *
     * @param settingName Auto provisioning setting key.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return auto provisioning setting.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AutoProvisioningSettingInner> getWithResponse(String settingName, Context context);

    /**
     * Details of a specific setting.
     *
     * @param settingName Auto provisioning setting key.
     * @param setting Auto provisioning setting key.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return auto provisioning setting.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AutoProvisioningSettingInner create(String settingName, AutoProvisioningSettingInner setting);

    /**
     * Details of a specific setting.
     *
     * @param settingName Auto provisioning setting key.
     * @param setting Auto provisioning setting key.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return auto provisioning setting.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AutoProvisioningSettingInner> createWithResponse(
        String settingName, AutoProvisioningSettingInner setting, Context context);
}
