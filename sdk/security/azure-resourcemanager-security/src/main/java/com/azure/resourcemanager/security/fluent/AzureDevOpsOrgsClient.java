// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.security.fluent.models.AzureDevOpsOrgInner;
import com.azure.resourcemanager.security.fluent.models.AzureDevOpsOrgListResponseInner;

/**
 * An instance of this class provides access to all the operations defined in AzureDevOpsOrgsClient.
 */
public interface AzureDevOpsOrgsClient {
    /**
     * Returns a list of all Azure DevOps organizations accessible by the user token consumed by the connector.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param securityConnectorName The security connector name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of RP resources which supports pagination along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AzureDevOpsOrgListResponseInner> listAvailableWithResponse(String resourceGroupName,
        String securityConnectorName, Context context);

    /**
     * Returns a list of all Azure DevOps organizations accessible by the user token consumed by the connector.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param securityConnectorName The security connector name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of RP resources which supports pagination.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AzureDevOpsOrgListResponseInner listAvailable(String resourceGroupName, String securityConnectorName);

    /**
     * Returns a list of Azure DevOps organizations onboarded to the connector.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param securityConnectorName The security connector name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of RP resources which supports pagination as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AzureDevOpsOrgInner> list(String resourceGroupName, String securityConnectorName);

    /**
     * Returns a list of Azure DevOps organizations onboarded to the connector.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param securityConnectorName The security connector name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of RP resources which supports pagination as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AzureDevOpsOrgInner> list(String resourceGroupName, String securityConnectorName, Context context);

    /**
     * Returns a monitored Azure DevOps organization resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param securityConnectorName The security connector name.
     * @param orgName The Azure DevOps organization name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure DevOps Organization resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AzureDevOpsOrgInner> getWithResponse(String resourceGroupName, String securityConnectorName,
        String orgName, Context context);

    /**
     * Returns a monitored Azure DevOps organization resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param securityConnectorName The security connector name.
     * @param orgName The Azure DevOps organization name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure DevOps Organization resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AzureDevOpsOrgInner get(String resourceGroupName, String securityConnectorName, String orgName);

    /**
     * Creates or updates monitored Azure DevOps organization details.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param securityConnectorName The security connector name.
     * @param orgName The Azure DevOps organization name.
     * @param azureDevOpsOrg The Azure DevOps organization resource payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of azure DevOps Organization resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AzureDevOpsOrgInner>, AzureDevOpsOrgInner> beginCreateOrUpdate(String resourceGroupName,
        String securityConnectorName, String orgName, AzureDevOpsOrgInner azureDevOpsOrg);

    /**
     * Creates or updates monitored Azure DevOps organization details.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param securityConnectorName The security connector name.
     * @param orgName The Azure DevOps organization name.
     * @param azureDevOpsOrg The Azure DevOps organization resource payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of azure DevOps Organization resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AzureDevOpsOrgInner>, AzureDevOpsOrgInner> beginCreateOrUpdate(String resourceGroupName,
        String securityConnectorName, String orgName, AzureDevOpsOrgInner azureDevOpsOrg, Context context);

    /**
     * Creates or updates monitored Azure DevOps organization details.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param securityConnectorName The security connector name.
     * @param orgName The Azure DevOps organization name.
     * @param azureDevOpsOrg The Azure DevOps organization resource payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure DevOps Organization resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AzureDevOpsOrgInner createOrUpdate(String resourceGroupName, String securityConnectorName, String orgName,
        AzureDevOpsOrgInner azureDevOpsOrg);

    /**
     * Creates or updates monitored Azure DevOps organization details.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param securityConnectorName The security connector name.
     * @param orgName The Azure DevOps organization name.
     * @param azureDevOpsOrg The Azure DevOps organization resource payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure DevOps Organization resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AzureDevOpsOrgInner createOrUpdate(String resourceGroupName, String securityConnectorName, String orgName,
        AzureDevOpsOrgInner azureDevOpsOrg, Context context);

    /**
     * Updates monitored Azure DevOps organization details.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param securityConnectorName The security connector name.
     * @param orgName The Azure DevOps organization name.
     * @param azureDevOpsOrg The Azure DevOps organization resource payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of azure DevOps Organization resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AzureDevOpsOrgInner>, AzureDevOpsOrgInner> beginUpdate(String resourceGroupName,
        String securityConnectorName, String orgName, AzureDevOpsOrgInner azureDevOpsOrg);

    /**
     * Updates monitored Azure DevOps organization details.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param securityConnectorName The security connector name.
     * @param orgName The Azure DevOps organization name.
     * @param azureDevOpsOrg The Azure DevOps organization resource payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of azure DevOps Organization resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AzureDevOpsOrgInner>, AzureDevOpsOrgInner> beginUpdate(String resourceGroupName,
        String securityConnectorName, String orgName, AzureDevOpsOrgInner azureDevOpsOrg, Context context);

    /**
     * Updates monitored Azure DevOps organization details.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param securityConnectorName The security connector name.
     * @param orgName The Azure DevOps organization name.
     * @param azureDevOpsOrg The Azure DevOps organization resource payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure DevOps Organization resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AzureDevOpsOrgInner update(String resourceGroupName, String securityConnectorName, String orgName,
        AzureDevOpsOrgInner azureDevOpsOrg);

    /**
     * Updates monitored Azure DevOps organization details.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param securityConnectorName The security connector name.
     * @param orgName The Azure DevOps organization name.
     * @param azureDevOpsOrg The Azure DevOps organization resource payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure DevOps Organization resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AzureDevOpsOrgInner update(String resourceGroupName, String securityConnectorName, String orgName,
        AzureDevOpsOrgInner azureDevOpsOrg, Context context);
}
