// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;

/**
 * Execution of a process that isn't allowed. Allow list consists of process names to allow.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "ruleType", defaultImpl = ProcessNotAllowed.class, visible = true)
@JsonTypeName("ProcessNotAllowed")
@Fluent
public final class ProcessNotAllowed extends AllowlistCustomAlertRule {
    /*
     * The type of the custom alert rule.
     */
    @JsonTypeId
    @JsonProperty(value = "ruleType", required = true)
    private String ruleType = "ProcessNotAllowed";

    /**
     * Creates an instance of ProcessNotAllowed class.
     */
    public ProcessNotAllowed() {
    }

    /**
     * Get the ruleType property: The type of the custom alert rule.
     * 
     * @return the ruleType value.
     */
    @Override
    public String ruleType() {
        return this.ruleType;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessNotAllowed withAllowlistValues(List<String> allowlistValues) {
        super.withAllowlistValues(allowlistValues);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessNotAllowed withIsEnabled(boolean isEnabled) {
        super.withIsEnabled(isEnabled);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
