// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Describe the owner source of governance rule.
 */
@Fluent
public final class GovernanceRuleOwnerSource implements JsonSerializable<GovernanceRuleOwnerSource> {
    /*
     * The owner type for the governance rule owner source
     */
    private GovernanceRuleOwnerSourceType type;

    /*
     * The source value e.g. tag key like owner name or email address
     */
    private String value;

    /**
     * Creates an instance of GovernanceRuleOwnerSource class.
     */
    public GovernanceRuleOwnerSource() {
    }

    /**
     * Get the type property: The owner type for the governance rule owner source.
     * 
     * @return the type value.
     */
    public GovernanceRuleOwnerSourceType type() {
        return this.type;
    }

    /**
     * Set the type property: The owner type for the governance rule owner source.
     * 
     * @param type the type value to set.
     * @return the GovernanceRuleOwnerSource object itself.
     */
    public GovernanceRuleOwnerSource withType(GovernanceRuleOwnerSourceType type) {
        this.type = type;
        return this;
    }

    /**
     * Get the value property: The source value e.g. tag key like owner name or email address.
     * 
     * @return the value value.
     */
    public String value() {
        return this.value;
    }

    /**
     * Set the value property: The source value e.g. tag key like owner name or email address.
     * 
     * @param value the value value to set.
     * @return the GovernanceRuleOwnerSource object itself.
     */
    public GovernanceRuleOwnerSource withValue(String value) {
        this.value = value;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        jsonWriter.writeStringField("value", this.value);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GovernanceRuleOwnerSource from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GovernanceRuleOwnerSource if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the GovernanceRuleOwnerSource.
     */
    public static GovernanceRuleOwnerSource fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            GovernanceRuleOwnerSource deserializedGovernanceRuleOwnerSource = new GovernanceRuleOwnerSource();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("type".equals(fieldName)) {
                    deserializedGovernanceRuleOwnerSource.type
                        = GovernanceRuleOwnerSourceType.fromString(reader.getString());
                } else if ("value".equals(fieldName)) {
                    deserializedGovernanceRuleOwnerSource.value = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedGovernanceRuleOwnerSource;
        });
    }
}
