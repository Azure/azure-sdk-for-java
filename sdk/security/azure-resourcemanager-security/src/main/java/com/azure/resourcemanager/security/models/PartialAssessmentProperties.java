// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Describes properties of an assessment as related to the standard.
 */
@Fluent
public final class PartialAssessmentProperties implements JsonSerializable<PartialAssessmentProperties> {
    /*
     * The assessment key
     */
    private String assessmentKey;

    /**
     * Creates an instance of PartialAssessmentProperties class.
     */
    public PartialAssessmentProperties() {
    }

    /**
     * Get the assessmentKey property: The assessment key.
     * 
     * @return the assessmentKey value.
     */
    public String assessmentKey() {
        return this.assessmentKey;
    }

    /**
     * Set the assessmentKey property: The assessment key.
     * 
     * @param assessmentKey the assessmentKey value to set.
     * @return the PartialAssessmentProperties object itself.
     */
    public PartialAssessmentProperties withAssessmentKey(String assessmentKey) {
        this.assessmentKey = assessmentKey;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("assessmentKey", this.assessmentKey);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PartialAssessmentProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of PartialAssessmentProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the PartialAssessmentProperties.
     */
    public static PartialAssessmentProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PartialAssessmentProperties deserializedPartialAssessmentProperties = new PartialAssessmentProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("assessmentKey".equals(fieldName)) {
                    deserializedPartialAssessmentProperties.assessmentKey = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPartialAssessmentProperties;
        });
    }
}
