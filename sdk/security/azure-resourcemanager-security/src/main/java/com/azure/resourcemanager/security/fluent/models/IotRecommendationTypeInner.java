// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.security.models.RecommendationSeverity;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** IoT recommendation type. */
@JsonFlatten
@Immutable
public class IotRecommendationTypeInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(IotRecommendationTypeInner.class);

    /*
     * The display name of the recommendation
     */
    @JsonProperty(value = "properties.recommendationDisplayName", access = JsonProperty.Access.WRITE_ONLY)
    private String recommendationDisplayName;

    /*
     * The severity of the recommendation
     */
    @JsonProperty(value = "properties.severity", access = JsonProperty.Access.WRITE_ONLY)
    private RecommendationSeverity severity;

    /*
     * Description of the suspected vulnerability and meaning.
     */
    @JsonProperty(value = "properties.description", access = JsonProperty.Access.WRITE_ONLY)
    private String description;

    /*
     * The name of the product which published this recommendation
     */
    @JsonProperty(value = "properties.productName", access = JsonProperty.Access.WRITE_ONLY)
    private String productName;

    /*
     * The name of a component inside the product which generated the
     * recommendation
     */
    @JsonProperty(value = "properties.productComponentName", access = JsonProperty.Access.WRITE_ONLY)
    private String productComponentName;

    /*
     * The name of the vendor that raised the recommendation
     */
    @JsonProperty(value = "properties.vendorName", access = JsonProperty.Access.WRITE_ONLY)
    private String vendorName;

    /*
     * The name of the recommendation's control category
     */
    @JsonProperty(value = "properties.control", access = JsonProperty.Access.WRITE_ONLY)
    private String control;

    /*
     * Manual action items to take to resolve the recommendation
     */
    @JsonProperty(value = "properties.remediationSteps", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> remediationSteps;

    /*
     * The alert's data source
     */
    @JsonProperty(value = "properties.dataSource", access = JsonProperty.Access.WRITE_ONLY)
    private String dataSource;

    /**
     * Get the recommendationDisplayName property: The display name of the recommendation.
     *
     * @return the recommendationDisplayName value.
     */
    public String recommendationDisplayName() {
        return this.recommendationDisplayName;
    }

    /**
     * Get the severity property: The severity of the recommendation.
     *
     * @return the severity value.
     */
    public RecommendationSeverity severity() {
        return this.severity;
    }

    /**
     * Get the description property: Description of the suspected vulnerability and meaning.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Get the productName property: The name of the product which published this recommendation.
     *
     * @return the productName value.
     */
    public String productName() {
        return this.productName;
    }

    /**
     * Get the productComponentName property: The name of a component inside the product which generated the
     * recommendation.
     *
     * @return the productComponentName value.
     */
    public String productComponentName() {
        return this.productComponentName;
    }

    /**
     * Get the vendorName property: The name of the vendor that raised the recommendation.
     *
     * @return the vendorName value.
     */
    public String vendorName() {
        return this.vendorName;
    }

    /**
     * Get the control property: The name of the recommendation's control category.
     *
     * @return the control value.
     */
    public String control() {
        return this.control;
    }

    /**
     * Get the remediationSteps property: Manual action items to take to resolve the recommendation.
     *
     * @return the remediationSteps value.
     */
    public List<String> remediationSteps() {
        return this.remediationSteps;
    }

    /**
     * Get the dataSource property: The alert's data source.
     *
     * @return the dataSource value.
     */
    public String dataSource() {
        return this.dataSource;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
