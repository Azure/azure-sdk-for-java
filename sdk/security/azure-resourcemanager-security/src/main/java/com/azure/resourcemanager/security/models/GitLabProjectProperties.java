// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * GitLab Project properties.
 */
@Fluent
public final class GitLabProjectProperties {
    /*
     * Gets or sets resource status message.
     */
    @JsonProperty(value = "provisioningStatusMessage", access = JsonProperty.Access.WRITE_ONLY)
    private String provisioningStatusMessage;

    /*
     * Gets or sets time when resource was last checked.
     */
    @JsonProperty(value = "provisioningStatusUpdateTimeUtc", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime provisioningStatusUpdateTimeUtc;

    /*
     * The provisioning state of the resource.
     * 
     * Pending - Provisioning pending.
     * Failed - Provisioning failed.
     * Succeeded - Successful provisioning.
     * Canceled - Provisioning canceled.
     * PendingDeletion - Deletion pending.
     * DeletionSuccess - Deletion successful.
     * DeletionFailure - Deletion failure.
     */
    @JsonProperty(value = "provisioningState")
    private DevOpsProvisioningState provisioningState;

    /*
     * Gets or sets the fully-qualified name of the project object.
     * 
     * This contains the entire hierarchy where entities are separated by the '$' character.
     */
    @JsonProperty(value = "fullyQualifiedName", access = JsonProperty.Access.WRITE_ONLY)
    private String fullyQualifiedName;

    /*
     * Gets or sets the human readable fully-qualified name of the Project object.
     * 
     * This contains the entire namespace hierarchy as seen on GitLab UI where entities are separated by the '/' character.
     */
    @JsonProperty(value = "fullyQualifiedFriendlyName", access = JsonProperty.Access.WRITE_ONLY)
    private String fullyQualifiedFriendlyName;

    /*
     * Gets or sets the fully-qualified name of the project's parent group object.
     * 
     * This contains the entire hierarchy where namespaces are separated by the '$' character.
     */
    @JsonProperty(value = "fullyQualifiedParentGroupName", access = JsonProperty.Access.WRITE_ONLY)
    private String fullyQualifiedParentGroupName;

    /*
     * Gets or sets the url of the GitLab Project.
     */
    @JsonProperty(value = "url", access = JsonProperty.Access.WRITE_ONLY)
    private String url;

    /*
     * Details about resource onboarding status across all connectors.
     * 
     * OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to top-level resources.
     * Onboarded - this resource has already been onboarded by the specified connector.
     * NotOnboarded - this resource has not been onboarded to any connector.
     * NotApplicable - the onboarding state is not applicable to the current endpoint.
     */
    @JsonProperty(value = "onboardingState")
    private OnboardingState onboardingState;

    /**
     * Creates an instance of GitLabProjectProperties class.
     */
    public GitLabProjectProperties() {
    }

    /**
     * Get the provisioningStatusMessage property: Gets or sets resource status message.
     * 
     * @return the provisioningStatusMessage value.
     */
    public String provisioningStatusMessage() {
        return this.provisioningStatusMessage;
    }

    /**
     * Get the provisioningStatusUpdateTimeUtc property: Gets or sets time when resource was last checked.
     * 
     * @return the provisioningStatusUpdateTimeUtc value.
     */
    public OffsetDateTime provisioningStatusUpdateTimeUtc() {
        return this.provisioningStatusUpdateTimeUtc;
    }

    /**
     * Get the provisioningState property: The provisioning state of the resource.
     * 
     * Pending - Provisioning pending.
     * Failed - Provisioning failed.
     * Succeeded - Successful provisioning.
     * Canceled - Provisioning canceled.
     * PendingDeletion - Deletion pending.
     * DeletionSuccess - Deletion successful.
     * DeletionFailure - Deletion failure.
     * 
     * @return the provisioningState value.
     */
    public DevOpsProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set the provisioningState property: The provisioning state of the resource.
     * 
     * Pending - Provisioning pending.
     * Failed - Provisioning failed.
     * Succeeded - Successful provisioning.
     * Canceled - Provisioning canceled.
     * PendingDeletion - Deletion pending.
     * DeletionSuccess - Deletion successful.
     * DeletionFailure - Deletion failure.
     * 
     * @param provisioningState the provisioningState value to set.
     * @return the GitLabProjectProperties object itself.
     */
    public GitLabProjectProperties withProvisioningState(DevOpsProvisioningState provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Get the fullyQualifiedName property: Gets or sets the fully-qualified name of the project object.
     * 
     * This contains the entire hierarchy where entities are separated by the '$' character.
     * 
     * @return the fullyQualifiedName value.
     */
    public String fullyQualifiedName() {
        return this.fullyQualifiedName;
    }

    /**
     * Get the fullyQualifiedFriendlyName property: Gets or sets the human readable fully-qualified name of the Project
     * object.
     * 
     * This contains the entire namespace hierarchy as seen on GitLab UI where entities are separated by the '/'
     * character.
     * 
     * @return the fullyQualifiedFriendlyName value.
     */
    public String fullyQualifiedFriendlyName() {
        return this.fullyQualifiedFriendlyName;
    }

    /**
     * Get the fullyQualifiedParentGroupName property: Gets or sets the fully-qualified name of the project's parent
     * group object.
     * 
     * This contains the entire hierarchy where namespaces are separated by the '$' character.
     * 
     * @return the fullyQualifiedParentGroupName value.
     */
    public String fullyQualifiedParentGroupName() {
        return this.fullyQualifiedParentGroupName;
    }

    /**
     * Get the url property: Gets or sets the url of the GitLab Project.
     * 
     * @return the url value.
     */
    public String url() {
        return this.url;
    }

    /**
     * Get the onboardingState property: Details about resource onboarding status across all connectors.
     * 
     * OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only
     * applicable to top-level resources.
     * Onboarded - this resource has already been onboarded by the specified connector.
     * NotOnboarded - this resource has not been onboarded to any connector.
     * NotApplicable - the onboarding state is not applicable to the current endpoint.
     * 
     * @return the onboardingState value.
     */
    public OnboardingState onboardingState() {
        return this.onboardingState;
    }

    /**
     * Set the onboardingState property: Details about resource onboarding status across all connectors.
     * 
     * OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only
     * applicable to top-level resources.
     * Onboarded - this resource has already been onboarded by the specified connector.
     * NotOnboarded - this resource has not been onboarded to any connector.
     * NotApplicable - the onboarding state is not applicable to the current endpoint.
     * 
     * @param onboardingState the onboardingState value to set.
     * @return the GitLabProjectProperties object itself.
     */
    public GitLabProjectProperties withOnboardingState(OnboardingState onboardingState) {
        this.onboardingState = onboardingState;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
