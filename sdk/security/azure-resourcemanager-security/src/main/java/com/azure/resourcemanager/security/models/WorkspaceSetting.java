// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.security.fluent.models.WorkspaceSettingInner;

/** An immutable client-side representation of WorkspaceSetting. */
public interface WorkspaceSetting {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the workspaceId property: The full Azure ID of the workspace to save the data in.
     *
     * @return the workspaceId value.
     */
    String workspaceId();

    /**
     * Gets the scope property: All the VMs in this scope will send their security data to the mentioned workspace
     * unless overridden by a setting with more specific scope.
     *
     * @return the scope value.
     */
    String scope();

    /**
     * Gets the inner com.azure.resourcemanager.security.fluent.models.WorkspaceSettingInner object.
     *
     * @return the inner object.
     */
    WorkspaceSettingInner innerModel();

    /** The entirety of the WorkspaceSetting definition. */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithCreate {
    }
    /** The WorkspaceSetting definition stages. */
    interface DefinitionStages {
        /** The first stage of the WorkspaceSetting definition. */
        interface Blank extends WithCreate {
        }
        /**
         * The stage of the WorkspaceSetting definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithWorkspaceId, DefinitionStages.WithScope {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            WorkspaceSetting create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            WorkspaceSetting create(Context context);
        }
        /** The stage of the WorkspaceSetting definition allowing to specify workspaceId. */
        interface WithWorkspaceId {
            /**
             * Specifies the workspaceId property: The full Azure ID of the workspace to save the data in.
             *
             * @param workspaceId The full Azure ID of the workspace to save the data in.
             * @return the next definition stage.
             */
            WithCreate withWorkspaceId(String workspaceId);
        }
        /** The stage of the WorkspaceSetting definition allowing to specify scope. */
        interface WithScope {
            /**
             * Specifies the scope property: All the VMs in this scope will send their security data to the mentioned
             * workspace unless overridden by a setting with more specific scope.
             *
             * @param scope All the VMs in this scope will send their security data to the mentioned workspace unless
             *     overridden by a setting with more specific scope.
             * @return the next definition stage.
             */
            WithCreate withScope(String scope);
        }
    }
    /**
     * Begins update for the WorkspaceSetting resource.
     *
     * @return the stage of resource update.
     */
    WorkspaceSetting.Update update();

    /** The template for WorkspaceSetting update. */
    interface Update extends UpdateStages.WithWorkspaceId, UpdateStages.WithScope {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        WorkspaceSetting apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        WorkspaceSetting apply(Context context);
    }
    /** The WorkspaceSetting update stages. */
    interface UpdateStages {
        /** The stage of the WorkspaceSetting update allowing to specify workspaceId. */
        interface WithWorkspaceId {
            /**
             * Specifies the workspaceId property: The full Azure ID of the workspace to save the data in.
             *
             * @param workspaceId The full Azure ID of the workspace to save the data in.
             * @return the next definition stage.
             */
            Update withWorkspaceId(String workspaceId);
        }
        /** The stage of the WorkspaceSetting update allowing to specify scope. */
        interface WithScope {
            /**
             * Specifies the scope property: All the VMs in this scope will send their security data to the mentioned
             * workspace unless overridden by a setting with more specific scope.
             *
             * @param scope All the VMs in this scope will send their security data to the mentioned workspace unless
             *     overridden by a setting with more specific scope.
             * @return the next definition stage.
             */
            Update withScope(String scope);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    WorkspaceSetting refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    WorkspaceSetting refresh(Context context);
}
