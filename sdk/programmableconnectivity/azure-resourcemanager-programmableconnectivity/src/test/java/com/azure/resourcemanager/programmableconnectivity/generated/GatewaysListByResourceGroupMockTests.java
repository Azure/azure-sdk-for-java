// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.programmableconnectivity.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.programmableconnectivity.ProgrammableConnectivityManager;
import com.azure.resourcemanager.programmableconnectivity.models.Gateway;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class GatewaysListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"operatorApiConnections\":[\"ruwiqzbqjvsov\",\"yokacspkw\"],\"gatewayBaseUrl\":\"zdobpxjmflbvvnch\",\"provisioningState\":\"Provisioning\"},\"location\":\"iwwzjuqk\",\"tags\":{\"oskg\":\"ajiwkuo\"},\"id\":\"sauuimj\",\"name\":\"vxieduugidyj\",\"type\":\"rfbyaosvexcso\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ProgrammableConnectivityManager manager = ProgrammableConnectivityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Gateway> response
            = manager.gateways().listByResourceGroup("watkpnpulexxb", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("iwwzjuqk", response.iterator().next().location());
        Assertions.assertEquals("ajiwkuo", response.iterator().next().tags().get("oskg"));
    }
}
