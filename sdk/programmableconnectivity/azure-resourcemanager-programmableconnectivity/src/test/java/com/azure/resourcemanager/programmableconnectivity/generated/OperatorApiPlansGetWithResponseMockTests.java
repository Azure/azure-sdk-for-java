// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.programmableconnectivity.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.programmableconnectivity.ProgrammableConnectivityManager;
import com.azure.resourcemanager.programmableconnectivity.models.OperatorApiPlan;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OperatorApiPlansGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"operatorName\":\"utauv\",\"camaraApiName\":\"tkuwhhmhykojo\",\"supportedLocations\":[\"nn\",\"lpichk\"],\"operatorRegions\":[\"kcdyhbpk\",\"pwdreqnovvqf\",\"vljxywsu\",\"syrsndsytgadgvra\"],\"markets\":[\"neqn\"],\"limits\":\"rrwlquuijfqkace\",\"marketplaceProperties\":{\"offerId\":\"pfpubjibww\",\"publisherId\":\"tohqkvpuvksgp\",\"planId\":\"aknynfsynljphuop\",\"planTermsAndConditionsLinks\":[\"dlqiyntorzih\",\"eosjswsr\",\"slyzrpzbchckqq\"]},\"provisioningState\":\"Accepted\"},\"id\":\"xiy\",\"name\":\"uiizynke\",\"type\":\"yatrwy\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ProgrammableConnectivityManager manager = ProgrammableConnectivityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        OperatorApiPlan response
            = manager.operatorApiPlans().getWithResponse("erpqlpqwcciuqg", com.azure.core.util.Context.NONE).getValue();

        Assertions.assertEquals("utauv", response.properties().operatorName());
        Assertions.assertEquals("tkuwhhmhykojo", response.properties().camaraApiName());
        Assertions.assertEquals("nn", response.properties().supportedLocations().get(0));
        Assertions.assertEquals("kcdyhbpk", response.properties().operatorRegions().get(0));
        Assertions.assertEquals("neqn", response.properties().markets().get(0));
        Assertions.assertEquals("rrwlquuijfqkace", response.properties().limits());
        Assertions.assertEquals("pfpubjibww", response.properties().marketplaceProperties().offerId());
        Assertions.assertEquals("tohqkvpuvksgp", response.properties().marketplaceProperties().publisherId());
        Assertions.assertEquals("aknynfsynljphuop", response.properties().marketplaceProperties().planId());
    }
}
