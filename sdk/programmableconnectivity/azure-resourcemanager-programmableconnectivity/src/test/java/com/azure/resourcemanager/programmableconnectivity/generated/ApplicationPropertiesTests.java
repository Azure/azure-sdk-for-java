// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.programmableconnectivity.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.programmableconnectivity.models.ApplicationProperties;
import com.azure.resourcemanager.programmableconnectivity.models.Category;
import org.junit.jupiter.api.Assertions;

public final class ApplicationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ApplicationProperties model = BinaryData.fromString(
            "{\"name\":\"gakeqsr\",\"applicationDescription\":\"yb\",\"category\":\"Trading\",\"commercialName\":\"qedqytbciqfoufl\",\"privacyRightsRequestEmailAddress\":\"mnkzsmod\",\"privacyPolicyUrl\":\"glougpbk\"}")
            .toObject(ApplicationProperties.class);
        Assertions.assertEquals("gakeqsr", model.name());
        Assertions.assertEquals("yb", model.applicationDescription());
        Assertions.assertEquals(Category.TRADING, model.category());
        Assertions.assertEquals("qedqytbciqfoufl", model.commercialName());
        Assertions.assertEquals("mnkzsmod", model.privacyRightsRequestEmailAddress());
        Assertions.assertEquals("glougpbk", model.privacyPolicyUrl());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ApplicationProperties model = new ApplicationProperties().withName("gakeqsr")
            .withApplicationDescription("yb")
            .withCategory(Category.TRADING)
            .withCommercialName("qedqytbciqfoufl")
            .withPrivacyRightsRequestEmailAddress("mnkzsmod")
            .withPrivacyPolicyUrl("glougpbk");
        model = BinaryData.fromObject(model).toObject(ApplicationProperties.class);
        Assertions.assertEquals("gakeqsr", model.name());
        Assertions.assertEquals("yb", model.applicationDescription());
        Assertions.assertEquals(Category.TRADING, model.category());
        Assertions.assertEquals("qedqytbciqfoufl", model.commercialName());
        Assertions.assertEquals("mnkzsmod", model.privacyRightsRequestEmailAddress());
        Assertions.assertEquals("glougpbk", model.privacyPolicyUrl());
    }
}
