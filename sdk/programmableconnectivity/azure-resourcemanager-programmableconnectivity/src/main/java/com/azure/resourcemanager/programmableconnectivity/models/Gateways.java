// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.programmableconnectivity.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of Gateways.
 */
public interface Gateways {
    /**
     * Get a Gateway resource by name.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param gatewayName Azure Programmable Connectivity Gateway Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Gateway resource by name along with {@link Response}.
     */
    Response<Gateway> getByResourceGroupWithResponse(String resourceGroupName, String gatewayName, Context context);

    /**
     * Get a Gateway resource by name.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param gatewayName Azure Programmable Connectivity Gateway Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Gateway resource by name.
     */
    Gateway getByResourceGroup(String resourceGroupName, String gatewayName);

    /**
     * Delete a Gateway.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param gatewayName Azure Programmable Connectivity Gateway Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String gatewayName);

    /**
     * Delete a Gateway.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param gatewayName Azure Programmable Connectivity Gateway Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String gatewayName, Context context);

    /**
     * List Gateway resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Gateway list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Gateway> listByResourceGroup(String resourceGroupName);

    /**
     * List Gateway resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Gateway list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Gateway> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * List Gateway resources by subscription ID.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Gateway list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Gateway> list();

    /**
     * List Gateway resources by subscription ID.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Gateway list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Gateway> list(Context context);

    /**
     * Get a Gateway resource by name.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Gateway resource by name along with {@link Response}.
     */
    Gateway getById(String id);

    /**
     * Get a Gateway resource by name.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Gateway resource by name along with {@link Response}.
     */
    Response<Gateway> getByIdWithResponse(String id, Context context);

    /**
     * Delete a Gateway.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a Gateway.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new Gateway resource.
     * 
     * @param name resource name.
     * @return the first stage of the new Gateway definition.
     */
    Gateway.DefinitionStages.Blank define(String name);
}
