// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.programmableconnectivity.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Valid values for the processing operation based on W3C Data Privacy Vocabulary v2 https://w3c.github.io/dpv/2.0/dpv/.
 */
public final class ProcessingOperation extends ExpandableStringEnum<ProcessingOperation> {
    /**
     * Static value Access for ProcessingOperation.
     */
    public static final ProcessingOperation ACCESS = fromString("Access");

    /**
     * Static value Acquire for ProcessingOperation.
     */
    public static final ProcessingOperation ACQUIRE = fromString("Acquire");

    /**
     * Static value Adapt for ProcessingOperation.
     */
    public static final ProcessingOperation ADAPT = fromString("Adapt");

    /**
     * Static value Aggregate for ProcessingOperation.
     */
    public static final ProcessingOperation AGGREGATE = fromString("Aggregate");

    /**
     * Static value Align for ProcessingOperation.
     */
    public static final ProcessingOperation ALIGN = fromString("Align");

    /**
     * Static value Alter for ProcessingOperation.
     */
    public static final ProcessingOperation ALTER = fromString("Alter");

    /**
     * Static value Analyze for ProcessingOperation.
     */
    public static final ProcessingOperation ANALYZE = fromString("Analyze");

    /**
     * Static value Anonymize for ProcessingOperation.
     */
    public static final ProcessingOperation ANONYMIZE = fromString("Anonymize");

    /**
     * Static value Assess for ProcessingOperation.
     */
    public static final ProcessingOperation ASSESS = fromString("Assess");

    /**
     * Static value Collect for ProcessingOperation.
     */
    public static final ProcessingOperation COLLECT = fromString("Collect");

    /**
     * Static value Combine for ProcessingOperation.
     */
    public static final ProcessingOperation COMBINE = fromString("Combine");

    /**
     * Static value Consult for ProcessingOperation.
     */
    public static final ProcessingOperation CONSULT = fromString("Consult");

    /**
     * Static value Copy for ProcessingOperation.
     */
    public static final ProcessingOperation COPY = fromString("Copy");

    /**
     * Static value Cross border transfer for ProcessingOperation.
     */
    public static final ProcessingOperation CROSS_BORDER_TRANSFER = fromString("Cross border transfer");

    /**
     * Static value Delete for ProcessingOperation.
     */
    public static final ProcessingOperation DELETE = fromString("Delete");

    /**
     * Static value Derive for ProcessingOperation.
     */
    public static final ProcessingOperation DERIVE = fromString("Derive");

    /**
     * Static value Destruct for ProcessingOperation.
     */
    public static final ProcessingOperation DESTRUCT = fromString("Destruct");

    /**
     * Static value Disclose for ProcessingOperation.
     */
    public static final ProcessingOperation DISCLOSE = fromString("Disclose");

    /**
     * Static value Disclose by transmission for ProcessingOperation.
     */
    public static final ProcessingOperation DISCLOSE_BY_TRANSMISSION = fromString("Disclose by transmission");

    /**
     * Static value Display for ProcessingOperation.
     */
    public static final ProcessingOperation DISPLAY = fromString("Display");

    /**
     * Static value Disseminate for ProcessingOperation.
     */
    public static final ProcessingOperation DISSEMINATE = fromString("Disseminate");

    /**
     * Static value Download for ProcessingOperation.
     */
    public static final ProcessingOperation DOWNLOAD = fromString("Download");

    /**
     * Static value Erase for ProcessingOperation.
     */
    public static final ProcessingOperation ERASE = fromString("Erase");

    /**
     * Static value Export for ProcessingOperation.
     */
    public static final ProcessingOperation EXPORT = fromString("Export");

    /**
     * Static value Filter for ProcessingOperation.
     */
    public static final ProcessingOperation FILTER = fromString("Filter");

    /**
     * Static value Format for ProcessingOperation.
     */
    public static final ProcessingOperation FORMAT = fromString("Format");

    /**
     * Static value Generate for ProcessingOperation.
     */
    public static final ProcessingOperation GENERATE = fromString("Generate");

    /**
     * Static value Infer for ProcessingOperation.
     */
    public static final ProcessingOperation INFER = fromString("Infer");

    /**
     * Static value Make available for ProcessingOperation.
     */
    public static final ProcessingOperation MAKE_AVAILABLE = fromString("Make available");

    /**
     * Static value Match for ProcessingOperation.
     */
    public static final ProcessingOperation MATCH = fromString("Match");

    /**
     * Static value Modify for ProcessingOperation.
     */
    public static final ProcessingOperation MODIFY = fromString("Modify");

    /**
     * Static value Monitor for ProcessingOperation.
     */
    public static final ProcessingOperation MONITOR = fromString("Monitor");

    /**
     * Static value Move for ProcessingOperation.
     */
    public static final ProcessingOperation MOVE = fromString("Move");

    /**
     * Static value Observe for ProcessingOperation.
     */
    public static final ProcessingOperation OBSERVE = fromString("Observe");

    /**
     * Static value Obtain for ProcessingOperation.
     */
    public static final ProcessingOperation OBTAIN = fromString("Obtain");

    /**
     * Static value Organize for ProcessingOperation.
     */
    public static final ProcessingOperation ORGANIZE = fromString("Organize");

    /**
     * Static value Profiling for ProcessingOperation.
     */
    public static final ProcessingOperation PROFILING = fromString("Profiling");

    /**
     * Static value Pseudonymize for ProcessingOperation.
     */
    public static final ProcessingOperation PSEUDONYMIZE = fromString("Pseudonymize");

    /**
     * Static value Query for ProcessingOperation.
     */
    public static final ProcessingOperation QUERY = fromString("Query");

    /**
     * Static value Record for ProcessingOperation.
     */
    public static final ProcessingOperation RECORD = fromString("Record");

    /**
     * Static value Reformat for ProcessingOperation.
     */
    public static final ProcessingOperation REFORMAT = fromString("Reformat");

    /**
     * Static value Remove for ProcessingOperation.
     */
    public static final ProcessingOperation REMOVE = fromString("Remove");

    /**
     * Static value Restrict for ProcessingOperation.
     */
    public static final ProcessingOperation RESTRICT = fromString("Restrict");

    /**
     * Static value Retrieve for ProcessingOperation.
     */
    public static final ProcessingOperation RETRIEVE = fromString("Retrieve");

    /**
     * Static value Screen for ProcessingOperation.
     */
    public static final ProcessingOperation SCREEN = fromString("Screen");

    /**
     * Static value Share for ProcessingOperation.
     */
    public static final ProcessingOperation SHARE = fromString("Share");

    /**
     * Static value Store for ProcessingOperation.
     */
    public static final ProcessingOperation STORE = fromString("Store");

    /**
     * Static value Structure for ProcessingOperation.
     */
    public static final ProcessingOperation STRUCTURE = fromString("Structure");

    /**
     * Static value Transfer for ProcessingOperation.
     */
    public static final ProcessingOperation TRANSFER = fromString("Transfer");

    /**
     * Static value Transform for ProcessingOperation.
     */
    public static final ProcessingOperation TRANSFORM = fromString("Transform");

    /**
     * Static value Transmit for ProcessingOperation.
     */
    public static final ProcessingOperation TRANSMIT = fromString("Transmit");

    /**
     * Static value Use for ProcessingOperation.
     */
    public static final ProcessingOperation USE = fromString("Use");

    /**
     * Creates a new instance of ProcessingOperation value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public ProcessingOperation() {
    }

    /**
     * Creates or finds a ProcessingOperation from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding ProcessingOperation.
     */
    public static ProcessingOperation fromString(String name) {
        return fromString(name, ProcessingOperation.class);
    }

    /**
     * Gets known ProcessingOperation values.
     * 
     * @return known ProcessingOperation values.
     */
    public static Collection<ProcessingOperation> values() {
        return values(ProcessingOperation.class);
    }
}
