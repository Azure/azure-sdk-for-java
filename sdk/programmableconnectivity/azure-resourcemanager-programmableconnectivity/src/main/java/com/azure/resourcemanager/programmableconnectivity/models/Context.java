// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.programmableconnectivity.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Valid values for the context based on W3C Data Privacy Vocabulary v2 https://w3c.github.io/dpv/2.0/dpv/.
 */
public final class Context extends ExpandableStringEnum<Context> {
    /**
     * Static value Algorithmic logic for Context.
     */
    public static final Context ALGORITHMIC_LOGIC = fromString("Algorithmic logic");

    /**
     * Static value Assistive automation for Context.
     */
    public static final Context ASSISTIVE_AUTOMATION = fromString("Assistive automation");

    /**
     * Static value Automated decision making for Context.
     */
    public static final Context AUTOMATED_DECISION_MAKING = fromString("Automated decision making");

    /**
     * Static value Automated scoring of individuals for Context.
     */
    public static final Context AUTOMATED_SCORING_OF_INDIVIDUALS = fromString("Automated scoring of individuals");

    /**
     * Static value Automation level for Context.
     */
    public static final Context AUTOMATION_LEVEL = fromString("Automation level");

    /**
     * Static value Autonomous for Context.
     */
    public static final Context AUTONOMOUS = fromString("Autonomous");

    /**
     * Static value Cannot challenge process for Context.
     */
    public static final Context CANNOT_CHALLENGE_PROCESS = fromString("Cannot challenge process");

    /**
     * Static value Cannot challenge process input for Context.
     */
    public static final Context CANNOT_CHALLENGE_PROCESS_INPUT = fromString("Cannot challenge process input");

    /**
     * Static value Cannot challenge process output for Context.
     */
    public static final Context CANNOT_CHALLENGE_PROCESS_OUTPUT = fromString("Cannot challenge process output");

    /**
     * Static value Cannot correct process for Context.
     */
    public static final Context CANNOT_CORRECT_PROCESS = fromString("Cannot correct process");

    /**
     * Static value Cannot correct process input for Context.
     */
    public static final Context CANNOT_CORRECT_PROCESS_INPUT = fromString("Cannot correct process input");

    /**
     * Static value Cannot correct process output for Context.
     */
    public static final Context CANNOT_CORRECT_PROCESS_OUTPUT = fromString("Cannot correct process output");

    /**
     * Static value Cannot object to process for Context.
     */
    public static final Context CANNOT_OBJECT_TO_PROCESS = fromString("Cannot object to process");

    /**
     * Static value Cannot opt in to process for Context.
     */
    public static final Context CANNOT_OPT_IN_TO_PROCESS = fromString("Cannot opt in to process");

    /**
     * Static value Cannot opt out from process for Context.
     */
    public static final Context CANNOT_OPT_OUT_FROM_PROCESS = fromString("Cannot opt out from process");

    /**
     * Static value Cannot reverse process effects for Context.
     */
    public static final Context CANNOT_REVERSE_PROCESS_EFFECTS = fromString("Cannot reverse process effects");

    /**
     * Static value Cannot reverse process input for Context.
     */
    public static final Context CANNOT_REVERSE_PROCESS_INPUT = fromString("Cannot reverse process input");

    /**
     * Static value Cannot reverse process output for Context.
     */
    public static final Context CANNOT_REVERSE_PROCESS_OUTPUT = fromString("Cannot reverse process output");

    /**
     * Static value Cannot withdraw from process for Context.
     */
    public static final Context CANNOT_WITHDRAW_FROM_PROCESS = fromString("Cannot withdraw from process");

    /**
     * Static value Challenging process for Context.
     */
    public static final Context CHALLENGING_PROCESS = fromString("Challenging process");

    /**
     * Static value Challenging process input for Context.
     */
    public static final Context CHALLENGING_PROCESS_INPUT = fromString("Challenging process input");

    /**
     * Static value Challenging process output for Context.
     */
    public static final Context CHALLENGING_PROCESS_OUTPUT = fromString("Challenging process output");

    /**
     * Static value Conditional automation for Context.
     */
    public static final Context CONDITIONAL_AUTOMATION = fromString("Conditional automation");

    /**
     * Static value Consent control for Context.
     */
    public static final Context CONSENT_CONTROL = fromString("Consent control");

    /**
     * Static value Correcting process for Context.
     */
    public static final Context CORRECTING_PROCESS = fromString("Correcting process");

    /**
     * Static value Correcting process input for Context.
     */
    public static final Context CORRECTING_PROCESS_INPUT = fromString("Correcting process input");

    /**
     * Static value Correcting process output for Context.
     */
    public static final Context CORRECTING_PROCESS_OUTPUT = fromString("Correcting process output");

    /**
     * Static value Completely manual processing for Context.
     */
    public static final Context COMPLETELY_MANUAL_PROCESSING = fromString("Completely manual processing");

    /**
     * Static value Data controller data source for Context.
     */
    public static final Context DATA_CONTROLLER_DATA_SOURCE = fromString("Data controller data source");

    /**
     * Static value Data published by data subject for Context.
     */
    public static final Context DATA_PUBLISHED_BY_DATA_SUBJECT = fromString("Data published by data subject");

    /**
     * Static value Data source for Context.
     */
    public static final Context DATA_SOURCE = fromString("Data source");

    /**
     * Static value Data subject for Context.
     */
    public static final Context DATA_SUBJECT = fromString("Data subject");

    /**
     * Static value Data subject data source for Context.
     */
    public static final Context DATA_SUBJECT_DATA_SOURCE = fromString("Data subject data source");

    /**
     * Static value Data subject scale for Context.
     */
    public static final Context DATA_SUBJECT_SCALE = fromString("Data subject scale");

    /**
     * Static value Data volume for Context.
     */
    public static final Context DATA_VOLUME = fromString("Data volume");

    /**
     * Static value Decision making for Context.
     */
    public static final Context DECISION_MAKING = fromString("Decision making");

    /**
     * Static value Entity active involvement for Context.
     */
    public static final Context ENTITY_ACTIVE_INVOLVEMENT = fromString("Entity active involvement");

    /**
     * Static value Entity involvement for Context.
     */
    public static final Context ENTITY_INVOLVEMENT = fromString("Entity involvement");

    /**
     * Static value Entity non involvement for Context.
     */
    public static final Context ENTITY_NON_INVOLVEMENT = fromString("Entity non involvement");

    /**
     * Static value Entity non permissive involvement for Context.
     */
    public static final Context ENTITY_NON_PERMISSIVE_INVOLVEMENT = fromString("Entity non permissive involvement");

    /**
     * Static value Entity passive involvement for Context.
     */
    public static final Context ENTITY_PASSIVE_INVOLVEMENT = fromString("Entity passive involvement");

    /**
     * Static value Entity permissive involvement for Context.
     */
    public static final Context ENTITY_PERMISSIVE_INVOLVEMENT = fromString("Entity permissive involvement");

    /**
     * Static value Evaluation of individuals for Context.
     */
    public static final Context EVALUATION_OF_INDIVIDUALS = fromString("Evaluation of individuals");

    /**
     * Static value Evaluation scoring for Context.
     */
    public static final Context EVALUATION_SCORING = fromString("Evaluation scoring");

    /**
     * Static value Full automation for Context.
     */
    public static final Context FULL_AUTOMATION = fromString("Full automation");

    /**
     * Static value Geographic coverage for Context.
     */
    public static final Context GEOGRAPHIC_COVERAGE = fromString("Geographic coverage");

    /**
     * Static value Global scale for Context.
     */
    public static final Context GLOBAL_SCALE = fromString("Global scale");

    /**
     * Static value High automation for Context.
     */
    public static final Context HIGH_AUTOMATION = fromString("High automation");

    /**
     * Static value Huge data volume for Context.
     */
    public static final Context HUGE_DATA_VOLUME = fromString("Huge data volume");

    /**
     * Static value Huge scale of data subjects for Context.
     */
    public static final Context HUGE_SCALE_OF_DATA_SUBJECTS = fromString("Huge scale of data subjects");

    /**
     * Static value Human involved for Context.
     */
    public static final Context HUMAN_INVOLVED = fromString("Human involved");

    /**
     * Static value Human involvement for Context.
     */
    public static final Context HUMAN_INVOLVEMENT = fromString("Human involvement");

    /**
     * Static value Human involvement for control for Context.
     */
    public static final Context HUMAN_INVOLVEMENT_FOR_CONTROL = fromString("Human involvement for control");

    /**
     * Static value Human involvement for decision for Context.
     */
    public static final Context HUMAN_INVOLVEMENT_FOR_DECISION = fromString("Human involvement for decision");

    /**
     * Static value Human involvement for input for Context.
     */
    public static final Context HUMAN_INVOLVEMENT_FOR_INPUT = fromString("Human involvement for input");

    /**
     * Static value Human involvement for intervention for Context.
     */
    public static final Context HUMAN_INVOLVEMENT_FOR_INTERVENTION = fromString("Human involvement for intervention");

    /**
     * Static value Human involvement for oversight for Context.
     */
    public static final Context HUMAN_INVOLVEMENT_FOR_OVERSIGHT = fromString("Human involvement for oversight");

    /**
     * Static value Human involvement for verification for Context.
     */
    public static final Context HUMAN_INVOLVEMENT_FOR_VERIFICATION = fromString("Human involvement for verification");

    /**
     * Static value Human not involved for Context.
     */
    public static final Context HUMAN_NOT_INVOLVED = fromString("Human not involved");

    /**
     * Static value Innovative use of existing technology for Context.
     */
    public static final Context INNOVATIVE_USE_OF_EXISTING_TECHNOLOGY
        = fromString("Innovative use of existing technology");

    /**
     * Static value Innovative use of new technologies for Context.
     */
    public static final Context INNOVATIVE_USE_OF_NEW_TECHNOLOGIES = fromString("Innovative use of new technologies");

    /**
     * Static value Innovative use of technology for Context.
     */
    public static final Context INNOVATIVE_USE_OF_TECHNOLOGY = fromString("Innovative use of technology");

    /**
     * Static value Large data volume for Context.
     */
    public static final Context LARGE_DATA_VOLUME = fromString("Large data volume");

    /**
     * Static value Large scale of data subjects for Context.
     */
    public static final Context LARGE_SCALE_OF_DATA_SUBJECTS = fromString("Large scale of data subjects");

    /**
     * Static value Large scale processing for Context.
     */
    public static final Context LARGE_SCALE_PROCESSING = fromString("Large scale processing");

    /**
     * Static value Local environment scale for Context.
     */
    public static final Context LOCAL_ENVIRONMENT_SCALE = fromString("Local environment scale");

    /**
     * Static value Locality scale for Context.
     */
    public static final Context LOCALITY_SCALE = fromString("Locality scale");

    /**
     * Static value Medium data volume for Context.
     */
    public static final Context MEDIUM_DATA_VOLUME = fromString("Medium data volume");

    /**
     * Static value Medium scale of data subjects for Context.
     */
    public static final Context MEDIUM_SCALE_OF_DATA_SUBJECTS = fromString("Medium scale of data subjects");

    /**
     * Static value Medium scale processing for Context.
     */
    public static final Context MEDIUM_SCALE_PROCESSING = fromString("Medium scale processing");

    /**
     * Static value Multi national scale for Context.
     */
    public static final Context MULTI_NATIONAL_SCALE = fromString("Multi national scale");

    /**
     * Static value National scale for Context.
     */
    public static final Context NATIONAL_SCALE = fromString("National scale");

    /**
     * Static value Nearly global scale for Context.
     */
    public static final Context NEARLY_GLOBAL_SCALE = fromString("Nearly global scale");

    /**
     * Static value Non public data source for Context.
     */
    public static final Context NON_PUBLIC_DATA_SOURCE = fromString("Non public data source");

    /**
     * Static value Not automated for Context.
     */
    public static final Context NOT_AUTOMATED = fromString("Not automated");

    /**
     * Static value Objecting to process for Context.
     */
    public static final Context OBJECTING_TO_PROCESS = fromString("Objecting to process");

    /**
     * Static value Obtain consent for Context.
     */
    public static final Context OBTAIN_CONSENT = fromString("Obtain consent");

    /**
     * Static value Opting in to process for Context.
     */
    public static final Context OPTING_IN_TO_PROCESS = fromString("Opting in to process");

    /**
     * Static value Opting out from process for Context.
     */
    public static final Context OPTING_OUT_FROM_PROCESS = fromString("Opting out from process");

    /**
     * Static value Partial automation for Context.
     */
    public static final Context PARTIAL_AUTOMATION = fromString("Partial automation");

    /**
     * Static value Processing condition for Context.
     */
    public static final Context PROCESSING_CONDITION = fromString("Processing condition");

    /**
     * Static value Processing duration for Context.
     */
    public static final Context PROCESSING_DURATION = fromString("Processing duration");

    /**
     * Static value Processing location for Context.
     */
    public static final Context PROCESSING_LOCATION = fromString("Processing location");

    /**
     * Static value Processing scale for Context.
     */
    public static final Context PROCESSING_SCALE = fromString("Processing scale");

    /**
     * Static value Provide consent for Context.
     */
    public static final Context PROVIDE_CONSENT = fromString("Provide consent");

    /**
     * Static value Public data source for Context.
     */
    public static final Context PUBLIC_DATA_SOURCE = fromString("Public data source");

    /**
     * Static value Reaffirm consent for Context.
     */
    public static final Context REAFFIRM_CONSENT = fromString("Reaffirm consent");

    /**
     * Static value Regional scale for Context.
     */
    public static final Context REGIONAL_SCALE = fromString("Regional scale");

    /**
     * Static value Reversing process effects for Context.
     */
    public static final Context REVERSING_PROCESS_EFFECTS = fromString("Reversing process effects");

    /**
     * Static value Reversing process input for Context.
     */
    public static final Context REVERSING_PROCESS_INPUT = fromString("Reversing process input");

    /**
     * Static value Reversing process output for Context.
     */
    public static final Context REVERSING_PROCESS_OUTPUT = fromString("Reversing process output");

    /**
     * Static value Scale for Context.
     */
    public static final Context SCALE = fromString("Scale");

    /**
     * Static value Scoring of individuals for Context.
     */
    public static final Context SCORING_OF_INDIVIDUALS = fromString("Scoring of individuals");

    /**
     * Static value Singular data volume for Context.
     */
    public static final Context SINGULAR_DATA_VOLUME = fromString("Singular data volume");

    /**
     * Static value Singular scale of data subjects for Context.
     */
    public static final Context SINGULAR_SCALE_OF_DATA_SUBJECTS = fromString("Singular scale of data subjects");

    /**
     * Static value Small data volume for Context.
     */
    public static final Context SMALL_DATA_VOLUME = fromString("Small data volume");

    /**
     * Static value Small scale of data subjects for Context.
     */
    public static final Context SMALL_SCALE_OF_DATA_SUBJECTS = fromString("Small scale of data subjects");

    /**
     * Static value Small scale processing for Context.
     */
    public static final Context SMALL_SCALE_PROCESSING = fromString("Small scale processing");

    /**
     * Static value Sporadic data volume for Context.
     */
    public static final Context SPORADIC_DATA_VOLUME = fromString("Sporadic data volume");

    /**
     * Static value Sporadic scale of data subjects for Context.
     */
    public static final Context SPORADIC_SCALE_OF_DATA_SUBJECTS = fromString("Sporadic scale of data subjects");

    /**
     * Static value Storage condition for Context.
     */
    public static final Context STORAGE_CONDITION = fromString("Storage condition");

    /**
     * Static value Storage deletion for Context.
     */
    public static final Context STORAGE_DELETION = fromString("Storage deletion");

    /**
     * Static value Storage duration for Context.
     */
    public static final Context STORAGE_DURATION = fromString("Storage duration");

    /**
     * Static value Storage location for Context.
     */
    public static final Context STORAGE_LOCATION = fromString("Storage location");

    /**
     * Static value Storage restoration for Context.
     */
    public static final Context STORAGE_RESTORATION = fromString("Storage restoration");

    /**
     * Static value Systematic monitoring for Context.
     */
    public static final Context SYSTEMATIC_MONITORING = fromString("Systematic monitoring");

    /**
     * Static value Third party data source for Context.
     */
    public static final Context THIRD_PARTY_DATA_SOURCE = fromString("Third party data source");

    /**
     * Static value Withdraw consent for Context.
     */
    public static final Context WITHDRAW_CONSENT = fromString("Withdraw consent");

    /**
     * Static value Withdrawing from process for Context.
     */
    public static final Context WITHDRAWING_FROM_PROCESS = fromString("Withdrawing from process");

    /**
     * Creates a new instance of Context value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public Context() {
    }

    /**
     * Creates or finds a Context from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding Context.
     */
    public static Context fromString(String name) {
        return fromString(name, Context.class);
    }

    /**
     * Gets known Context values.
     * 
     * @return known Context values.
     */
    public static Collection<Context> values() {
        return values(Context.class);
    }
}
