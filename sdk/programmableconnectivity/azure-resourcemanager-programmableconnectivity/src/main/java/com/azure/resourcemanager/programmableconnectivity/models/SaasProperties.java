// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.programmableconnectivity.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Details about the SaaS offer purchased from the marketplace.
 */
@Fluent
public final class SaasProperties implements JsonSerializable<SaasProperties> {
    /*
     * Subscription ID of the SaaS offer purchased from the marketplace.
     */
    private String saasSubscriptionId;

    /*
     * Resource ID of the SaaS offer purchased from the marketplace.
     */
    private String saasResourceId;

    /**
     * Creates an instance of SaasProperties class.
     */
    public SaasProperties() {
    }

    /**
     * Get the saasSubscriptionId property: Subscription ID of the SaaS offer purchased from the marketplace.
     * 
     * @return the saasSubscriptionId value.
     */
    public String saasSubscriptionId() {
        return this.saasSubscriptionId;
    }

    /**
     * Set the saasSubscriptionId property: Subscription ID of the SaaS offer purchased from the marketplace.
     * 
     * @param saasSubscriptionId the saasSubscriptionId value to set.
     * @return the SaasProperties object itself.
     */
    public SaasProperties withSaasSubscriptionId(String saasSubscriptionId) {
        this.saasSubscriptionId = saasSubscriptionId;
        return this;
    }

    /**
     * Get the saasResourceId property: Resource ID of the SaaS offer purchased from the marketplace.
     * 
     * @return the saasResourceId value.
     */
    public String saasResourceId() {
        return this.saasResourceId;
    }

    /**
     * Set the saasResourceId property: Resource ID of the SaaS offer purchased from the marketplace.
     * 
     * @param saasResourceId the saasResourceId value to set.
     * @return the SaasProperties object itself.
     */
    public SaasProperties withSaasResourceId(String saasResourceId) {
        this.saasResourceId = saasResourceId;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("saasSubscriptionId", this.saasSubscriptionId);
        jsonWriter.writeStringField("saasResourceId", this.saasResourceId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SaasProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SaasProperties if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the SaasProperties.
     */
    public static SaasProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SaasProperties deserializedSaasProperties = new SaasProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("saasSubscriptionId".equals(fieldName)) {
                    deserializedSaasProperties.saasSubscriptionId = reader.getString();
                } else if ("saasResourceId".equals(fieldName)) {
                    deserializedSaasProperties.saasResourceId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSaasProperties;
        });
    }
}
