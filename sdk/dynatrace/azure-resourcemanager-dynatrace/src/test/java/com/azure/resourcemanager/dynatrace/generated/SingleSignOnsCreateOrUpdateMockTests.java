// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dynatrace.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.dynatrace.DynatraceManager;
import com.azure.resourcemanager.dynatrace.models.DynatraceSingleSignOnResource;
import com.azure.resourcemanager.dynatrace.models.SingleSignOnStates;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SingleSignOnsCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"singleSignOnState\":\"Initial\",\"enterpriseAppId\":\"hx\",\"singleSignOnUrl\":\"yngudivk\",\"aadDomains\":[\"wbxqzvszjfau\",\"j\"],\"provisioningState\":\"Succeeded\"},\"id\":\"ivetvtcq\",\"name\":\"qtdo\",\"type\":\"mcbxvwvxysl\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DynatraceManager manager = DynatraceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DynatraceSingleSignOnResource response = manager.singleSignOns()
            .define("zhxgktrmgucn")
            .withExistingMonitor("git", "medjvcslynqwwncw")
            .withSingleSignOnState(SingleSignOnStates.INITIAL)
            .withEnterpriseAppId("eoellwptfdygp")
            .withSingleSignOnUrl("b")
            .withAadDomains(Arrays.asList("eopzfqrhhuaopp", "cq", "qxolzdahzx", "t"))
            .create();

        Assertions.assertEquals(SingleSignOnStates.INITIAL, response.singleSignOnState());
        Assertions.assertEquals("hx", response.enterpriseAppId());
        Assertions.assertEquals("yngudivk", response.singleSignOnUrl());
        Assertions.assertEquals("wbxqzvszjfau", response.aadDomains().get(0));
    }
}
