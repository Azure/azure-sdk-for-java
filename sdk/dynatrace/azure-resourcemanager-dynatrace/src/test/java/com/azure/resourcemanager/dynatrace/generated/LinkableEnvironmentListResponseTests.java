// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dynatrace.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dynatrace.fluent.models.LinkableEnvironmentResponseInner;
import com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentListResponse;
import com.azure.resourcemanager.dynatrace.models.PlanData;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class LinkableEnvironmentListResponseTests {
    @Test
    public void testDeserialize() {
        LinkableEnvironmentListResponse model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"environmentId\":\"wzbhvgyugu\",\"environmentName\":\"vmkfssxqu\",\"planData\":{\"usageType\":\"plgmgsxnk\",\"billingCycle\":\"kde\",\"planDetails\":\"pvlopwiyighxpkd\",\"effectiveDate\":\"2021-02-10T23:29:11Z\"}},{\"environmentId\":\"iuebbaumny\",\"environmentName\":\"ped\",\"planData\":{\"usageType\":\"nabckhsmtx\",\"billingCycle\":\"ie\",\"planDetails\":\"fhvpesaps\",\"effectiveDate\":\"2021-10-29T20:48:57Z\"}},{\"environmentId\":\"mhjjdhtldwkyzx\",\"environmentName\":\"tkncwsc\",\"planData\":{\"usageType\":\"lxotogtwrupq\",\"billingCycle\":\"vnm\",\"planDetails\":\"ykvceoveil\",\"effectiveDate\":\"2021-09-20T14:02:55Z\"}}],\"nextLink\":\"tyfjfcnjbkcnxdhb\"}")
                .toObject(LinkableEnvironmentListResponse.class);
        Assertions.assertEquals("wzbhvgyugu", model.value().get(0).environmentId());
        Assertions.assertEquals("vmkfssxqu", model.value().get(0).environmentName());
        Assertions.assertEquals("plgmgsxnk", model.value().get(0).planData().usageType());
        Assertions.assertEquals("kde", model.value().get(0).planData().billingCycle());
        Assertions.assertEquals("pvlopwiyighxpkd", model.value().get(0).planData().planDetails());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-02-10T23:29:11Z"), model.value().get(0).planData().effectiveDate());
        Assertions.assertEquals("tyfjfcnjbkcnxdhb", model.nextLink());
    }

    @Test
    public void testSerialize() {
        LinkableEnvironmentListResponse model =
            new LinkableEnvironmentListResponse()
                .withValue(
                    Arrays
                        .asList(
                            new LinkableEnvironmentResponseInner()
                                .withEnvironmentId("wzbhvgyugu")
                                .withEnvironmentName("vmkfssxqu")
                                .withPlanData(
                                    new PlanData()
                                        .withUsageType("plgmgsxnk")
                                        .withBillingCycle("kde")
                                        .withPlanDetails("pvlopwiyighxpkd")
                                        .withEffectiveDate(OffsetDateTime.parse("2021-02-10T23:29:11Z"))),
                            new LinkableEnvironmentResponseInner()
                                .withEnvironmentId("iuebbaumny")
                                .withEnvironmentName("ped")
                                .withPlanData(
                                    new PlanData()
                                        .withUsageType("nabckhsmtx")
                                        .withBillingCycle("ie")
                                        .withPlanDetails("fhvpesaps")
                                        .withEffectiveDate(OffsetDateTime.parse("2021-10-29T20:48:57Z"))),
                            new LinkableEnvironmentResponseInner()
                                .withEnvironmentId("mhjjdhtldwkyzx")
                                .withEnvironmentName("tkncwsc")
                                .withPlanData(
                                    new PlanData()
                                        .withUsageType("lxotogtwrupq")
                                        .withBillingCycle("vnm")
                                        .withPlanDetails("ykvceoveil")
                                        .withEffectiveDate(OffsetDateTime.parse("2021-09-20T14:02:55Z")))))
                .withNextLink("tyfjfcnjbkcnxdhb");
        model = BinaryData.fromObject(model).toObject(LinkableEnvironmentListResponse.class);
        Assertions.assertEquals("wzbhvgyugu", model.value().get(0).environmentId());
        Assertions.assertEquals("vmkfssxqu", model.value().get(0).environmentName());
        Assertions.assertEquals("plgmgsxnk", model.value().get(0).planData().usageType());
        Assertions.assertEquals("kde", model.value().get(0).planData().billingCycle());
        Assertions.assertEquals("pvlopwiyighxpkd", model.value().get(0).planData().planDetails());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-02-10T23:29:11Z"), model.value().get(0).planData().effectiveDate());
        Assertions.assertEquals("tyfjfcnjbkcnxdhb", model.nextLink());
    }
}
