// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dynatrace.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dynatrace.fluent.models.VMInfoInner;
import com.azure.resourcemanager.dynatrace.models.AutoUpdateSetting;
import com.azure.resourcemanager.dynatrace.models.AvailabilityState;
import com.azure.resourcemanager.dynatrace.models.LogModule;
import com.azure.resourcemanager.dynatrace.models.MonitoringType;
import com.azure.resourcemanager.dynatrace.models.UpdateStatus;
import com.azure.resourcemanager.dynatrace.models.VMHostsListResponse;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class VMHostsListResponseTests {
    @Test
    public void testDeserialize() {
        VMHostsListResponse model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"resourceId\":\"fsm\",\"version\":\"eh\",\"monitoringType\":\"FULL_STACK\",\"autoUpdateSetting\":\"ENABLED\",\"updateStatus\":\"SUPPRESSED\",\"availabilityState\":\"UNMONITORED\",\"logModule\":\"ENABLED\",\"hostGroup\":\"qkkrb\",\"hostName\":\"ukgri\"}],\"nextLink\":\"lzlfbxzpuz\"}")
                .toObject(VMHostsListResponse.class);
        Assertions.assertEquals("fsm", model.value().get(0).resourceId());
        Assertions.assertEquals("eh", model.value().get(0).version());
        Assertions.assertEquals(MonitoringType.FULL_STACK, model.value().get(0).monitoringType());
        Assertions.assertEquals(AutoUpdateSetting.ENABLED, model.value().get(0).autoUpdateSetting());
        Assertions.assertEquals(UpdateStatus.SUPPRESSED, model.value().get(0).updateStatus());
        Assertions.assertEquals(AvailabilityState.UNMONITORED, model.value().get(0).availabilityState());
        Assertions.assertEquals(LogModule.ENABLED, model.value().get(0).logModule());
        Assertions.assertEquals("qkkrb", model.value().get(0).hostGroup());
        Assertions.assertEquals("ukgri", model.value().get(0).hostname());
        Assertions.assertEquals("lzlfbxzpuz", model.nextLink());
    }

    @Test
    public void testSerialize() {
        VMHostsListResponse model =
            new VMHostsListResponse()
                .withValue(
                    Arrays
                        .asList(
                            new VMInfoInner()
                                .withResourceId("fsm")
                                .withVersion("eh")
                                .withMonitoringType(MonitoringType.FULL_STACK)
                                .withAutoUpdateSetting(AutoUpdateSetting.ENABLED)
                                .withUpdateStatus(UpdateStatus.SUPPRESSED)
                                .withAvailabilityState(AvailabilityState.UNMONITORED)
                                .withLogModule(LogModule.ENABLED)
                                .withHostGroup("qkkrb")
                                .withHostname("ukgri")))
                .withNextLink("lzlfbxzpuz");
        model = BinaryData.fromObject(model).toObject(VMHostsListResponse.class);
        Assertions.assertEquals("fsm", model.value().get(0).resourceId());
        Assertions.assertEquals("eh", model.value().get(0).version());
        Assertions.assertEquals(MonitoringType.FULL_STACK, model.value().get(0).monitoringType());
        Assertions.assertEquals(AutoUpdateSetting.ENABLED, model.value().get(0).autoUpdateSetting());
        Assertions.assertEquals(UpdateStatus.SUPPRESSED, model.value().get(0).updateStatus());
        Assertions.assertEquals(AvailabilityState.UNMONITORED, model.value().get(0).availabilityState());
        Assertions.assertEquals(LogModule.ENABLED, model.value().get(0).logModule());
        Assertions.assertEquals("qkkrb", model.value().get(0).hostGroup());
        Assertions.assertEquals("ukgri", model.value().get(0).hostname());
        Assertions.assertEquals("lzlfbxzpuz", model.nextLink());
    }
}
