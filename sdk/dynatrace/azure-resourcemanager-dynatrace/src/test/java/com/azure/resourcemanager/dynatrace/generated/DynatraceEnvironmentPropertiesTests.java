// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dynatrace.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dynatrace.fluent.models.DynatraceSingleSignOnProperties;
import com.azure.resourcemanager.dynatrace.models.AccountInfo;
import com.azure.resourcemanager.dynatrace.models.DynatraceEnvironmentProperties;
import com.azure.resourcemanager.dynatrace.models.EnvironmentInfo;
import com.azure.resourcemanager.dynatrace.models.SingleSignOnStates;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DynatraceEnvironmentPropertiesTests {
    @Test
    public void testDeserialize() {
        DynatraceEnvironmentProperties model =
            BinaryData
                .fromString(
                    "{\"userId\":\"s\",\"accountInfo\":{\"accountId\":\"mjqulngsn\",\"regionId\":\"bybkzgcwrwclxx\"},\"environmentInfo\":{\"environmentId\":\"jdous\",\"ingestionKey\":\"qvkoc\",\"logsIngestionEndpoint\":\"jdkwtnhxbnjb\",\"landingURL\":\"sqrglssainq\"},\"singleSignOnProperties\":{\"singleSignOnState\":\"Initial\",\"enterpriseAppId\":\"lljfmppeeb\",\"singleSignOnUrl\":\"gxsabkyq\",\"aadDomains\":[\"jitcjczdzevn\",\"hkr\"],\"provisioningState\":\"Canceled\"}}")
                .toObject(DynatraceEnvironmentProperties.class);
        Assertions.assertEquals("s", model.userId());
        Assertions.assertEquals("mjqulngsn", model.accountInfo().accountId());
        Assertions.assertEquals("bybkzgcwrwclxx", model.accountInfo().regionId());
        Assertions.assertEquals("jdous", model.environmentInfo().environmentId());
        Assertions.assertEquals("qvkoc", model.environmentInfo().ingestionKey());
        Assertions.assertEquals("jdkwtnhxbnjb", model.environmentInfo().logsIngestionEndpoint());
        Assertions.assertEquals("sqrglssainq", model.environmentInfo().landingUrl());
        Assertions.assertEquals(SingleSignOnStates.INITIAL, model.singleSignOnProperties().singleSignOnState());
        Assertions.assertEquals("lljfmppeeb", model.singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("gxsabkyq", model.singleSignOnProperties().singleSignOnUrl());
        Assertions.assertEquals("jitcjczdzevn", model.singleSignOnProperties().aadDomains().get(0));
    }

    @Test
    public void testSerialize() {
        DynatraceEnvironmentProperties model =
            new DynatraceEnvironmentProperties()
                .withUserId("s")
                .withAccountInfo(new AccountInfo().withAccountId("mjqulngsn").withRegionId("bybkzgcwrwclxx"))
                .withEnvironmentInfo(
                    new EnvironmentInfo()
                        .withEnvironmentId("jdous")
                        .withIngestionKey("qvkoc")
                        .withLogsIngestionEndpoint("jdkwtnhxbnjb")
                        .withLandingUrl("sqrglssainq"))
                .withSingleSignOnProperties(
                    new DynatraceSingleSignOnProperties()
                        .withSingleSignOnState(SingleSignOnStates.INITIAL)
                        .withEnterpriseAppId("lljfmppeeb")
                        .withSingleSignOnUrl("gxsabkyq")
                        .withAadDomains(Arrays.asList("jitcjczdzevn", "hkr")));
        model = BinaryData.fromObject(model).toObject(DynatraceEnvironmentProperties.class);
        Assertions.assertEquals("s", model.userId());
        Assertions.assertEquals("mjqulngsn", model.accountInfo().accountId());
        Assertions.assertEquals("bybkzgcwrwclxx", model.accountInfo().regionId());
        Assertions.assertEquals("jdous", model.environmentInfo().environmentId());
        Assertions.assertEquals("qvkoc", model.environmentInfo().ingestionKey());
        Assertions.assertEquals("jdkwtnhxbnjb", model.environmentInfo().logsIngestionEndpoint());
        Assertions.assertEquals("sqrglssainq", model.environmentInfo().landingUrl());
        Assertions.assertEquals(SingleSignOnStates.INITIAL, model.singleSignOnProperties().singleSignOnState());
        Assertions.assertEquals("lljfmppeeb", model.singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("gxsabkyq", model.singleSignOnProperties().singleSignOnUrl());
        Assertions.assertEquals("jitcjczdzevn", model.singleSignOnProperties().aadDomains().get(0));
    }
}
