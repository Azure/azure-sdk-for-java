// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dynatrace.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dynatrace.models.FilteringTag;
import com.azure.resourcemanager.dynatrace.models.MetricRules;
import com.azure.resourcemanager.dynatrace.models.TagAction;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class MetricRulesTests {
    @Test
    public void testDeserialize() {
        MetricRules model =
            BinaryData
                .fromString(
                    "{\"filteringTags\":[{\"name\":\"kpnpulexxbczwtr\",\"value\":\"iqzbq\",\"action\":\"Exclude\"},{\"name\":\"vmyokacspkwl\",\"value\":\"dobpxjmflbvvn\",\"action\":\"Exclude\"}]}")
                .toObject(MetricRules.class);
        Assertions.assertEquals("kpnpulexxbczwtr", model.filteringTags().get(0).name());
        Assertions.assertEquals("iqzbq", model.filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.EXCLUDE, model.filteringTags().get(0).action());
    }

    @Test
    public void testSerialize() {
        MetricRules model =
            new MetricRules()
                .withFilteringTags(
                    Arrays
                        .asList(
                            new FilteringTag()
                                .withName("kpnpulexxbczwtr")
                                .withValue("iqzbq")
                                .withAction(TagAction.EXCLUDE),
                            new FilteringTag()
                                .withName("vmyokacspkwl")
                                .withValue("dobpxjmflbvvn")
                                .withAction(TagAction.EXCLUDE)));
        model = BinaryData.fromObject(model).toObject(MetricRules.class);
        Assertions.assertEquals("kpnpulexxbczwtr", model.filteringTags().get(0).name());
        Assertions.assertEquals("iqzbq", model.filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.EXCLUDE, model.filteringTags().get(0).action());
    }
}
