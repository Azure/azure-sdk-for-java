// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dynatrace.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dynatrace.models.FilteringTag;
import com.azure.resourcemanager.dynatrace.models.LogRules;
import com.azure.resourcemanager.dynatrace.models.SendAadLogsStatus;
import com.azure.resourcemanager.dynatrace.models.SendActivityLogsStatus;
import com.azure.resourcemanager.dynatrace.models.SendSubscriptionLogsStatus;
import com.azure.resourcemanager.dynatrace.models.TagAction;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class LogRulesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LogRules model =
            BinaryData
                .fromString(
                    "{\"sendAadLogs\":\"Enabled\",\"sendSubscriptionLogs\":\"Enabled\",\"sendActivityLogs\":\"Enabled\",\"filteringTags\":[{\"name\":\"gazxuf\",\"value\":\"uckyf\",\"action\":\"Exclude\"},{\"name\":\"idf\",\"value\":\"wdzuhtymwisd\",\"action\":\"Exclude\"}]}")
                .toObject(LogRules.class);
        Assertions.assertEquals(SendAadLogsStatus.ENABLED, model.sendAadLogs());
        Assertions.assertEquals(SendSubscriptionLogsStatus.ENABLED, model.sendSubscriptionLogs());
        Assertions.assertEquals(SendActivityLogsStatus.ENABLED, model.sendActivityLogs());
        Assertions.assertEquals("gazxuf", model.filteringTags().get(0).name());
        Assertions.assertEquals("uckyf", model.filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.EXCLUDE, model.filteringTags().get(0).action());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LogRules model =
            new LogRules()
                .withSendAadLogs(SendAadLogsStatus.ENABLED)
                .withSendSubscriptionLogs(SendSubscriptionLogsStatus.ENABLED)
                .withSendActivityLogs(SendActivityLogsStatus.ENABLED)
                .withFilteringTags(
                    Arrays
                        .asList(
                            new FilteringTag().withName("gazxuf").withValue("uckyf").withAction(TagAction.EXCLUDE),
                            new FilteringTag()
                                .withName("idf")
                                .withValue("wdzuhtymwisd")
                                .withAction(TagAction.EXCLUDE)));
        model = BinaryData.fromObject(model).toObject(LogRules.class);
        Assertions.assertEquals(SendAadLogsStatus.ENABLED, model.sendAadLogs());
        Assertions.assertEquals(SendSubscriptionLogsStatus.ENABLED, model.sendSubscriptionLogs());
        Assertions.assertEquals(SendActivityLogsStatus.ENABLED, model.sendActivityLogs());
        Assertions.assertEquals("gazxuf", model.filteringTags().get(0).name());
        Assertions.assertEquals("uckyf", model.filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.EXCLUDE, model.filteringTags().get(0).action());
    }
}
