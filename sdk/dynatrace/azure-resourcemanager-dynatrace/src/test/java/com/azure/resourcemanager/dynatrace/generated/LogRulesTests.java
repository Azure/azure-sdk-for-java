// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dynatrace.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dynatrace.models.FilteringTag;
import com.azure.resourcemanager.dynatrace.models.LogRules;
import com.azure.resourcemanager.dynatrace.models.SendAadLogsStatus;
import com.azure.resourcemanager.dynatrace.models.SendActivityLogsStatus;
import com.azure.resourcemanager.dynatrace.models.SendSubscriptionLogsStatus;
import com.azure.resourcemanager.dynatrace.models.TagAction;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class LogRulesTests {
    @Test
    public void testDeserialize() {
        LogRules model =
            BinaryData
                .fromString(
                    "{\"sendAadLogs\":\"Enabled\",\"sendSubscriptionLogs\":\"Enabled\",\"sendActivityLogs\":\"Disabled\",\"filteringTags\":[{\"name\":\"fcp\",\"value\":\"xodpuozmyzydagfu\",\"action\":\"Include\"},{\"name\":\"zyiuokk\",\"value\":\"hrdxwzywqsmbs\",\"action\":\"Include\"},{\"name\":\"imoryocfsfksym\",\"value\":\"ys\",\"action\":\"Include\"},{\"name\":\"uxh\",\"value\":\"udxorrqn\",\"action\":\"Include\"}]}")
                .toObject(LogRules.class);
        Assertions.assertEquals(SendAadLogsStatus.ENABLED, model.sendAadLogs());
        Assertions.assertEquals(SendSubscriptionLogsStatus.ENABLED, model.sendSubscriptionLogs());
        Assertions.assertEquals(SendActivityLogsStatus.DISABLED, model.sendActivityLogs());
        Assertions.assertEquals("fcp", model.filteringTags().get(0).name());
        Assertions.assertEquals("xodpuozmyzydagfu", model.filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.INCLUDE, model.filteringTags().get(0).action());
    }

    @Test
    public void testSerialize() {
        LogRules model =
            new LogRules()
                .withSendAadLogs(SendAadLogsStatus.ENABLED)
                .withSendSubscriptionLogs(SendSubscriptionLogsStatus.ENABLED)
                .withSendActivityLogs(SendActivityLogsStatus.DISABLED)
                .withFilteringTags(
                    Arrays
                        .asList(
                            new FilteringTag()
                                .withName("fcp")
                                .withValue("xodpuozmyzydagfu")
                                .withAction(TagAction.INCLUDE),
                            new FilteringTag()
                                .withName("zyiuokk")
                                .withValue("hrdxwzywqsmbs")
                                .withAction(TagAction.INCLUDE),
                            new FilteringTag().withName("imoryocfsfksym").withValue("ys").withAction(TagAction.INCLUDE),
                            new FilteringTag().withName("uxh").withValue("udxorrqn").withAction(TagAction.INCLUDE)));
        model = BinaryData.fromObject(model).toObject(LogRules.class);
        Assertions.assertEquals(SendAadLogsStatus.ENABLED, model.sendAadLogs());
        Assertions.assertEquals(SendSubscriptionLogsStatus.ENABLED, model.sendSubscriptionLogs());
        Assertions.assertEquals(SendActivityLogsStatus.DISABLED, model.sendActivityLogs());
        Assertions.assertEquals("fcp", model.filteringTags().get(0).name());
        Assertions.assertEquals("xodpuozmyzydagfu", model.filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.INCLUDE, model.filteringTags().get(0).action());
    }
}
