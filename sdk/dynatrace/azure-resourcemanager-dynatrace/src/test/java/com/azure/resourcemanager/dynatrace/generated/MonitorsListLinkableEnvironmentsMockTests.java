// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dynatrace.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.dynatrace.DynatraceManager;
import com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentRequest;
import com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MonitorsListLinkableEnvironmentsMockTests {
    @Test
    public void testListLinkableEnvironments() throws Exception {
        String responseStr
            = "{\"value\":[{\"environmentId\":\"bxzpuzycisp\",\"environmentName\":\"zahmgkbrpyydhibn\",\"planData\":{\"usageType\":\"kpikadrgvt\",\"billingCycle\":\"gnbuy\",\"planDetails\":\"ijggmebfsiar\",\"effectiveDate\":\"2021-08-14T22:49:32Z\"}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DynatraceManager manager = DynatraceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<LinkableEnvironmentResponse> response = manager.monitors()
            .listLinkableEnvironments("bgsncghkjeszzhb", "jhtxfvgxbfsmxne",
                new LinkableEnvironmentRequest().withTenantId("mpvecxgodebfqk")
                    .withUserPrincipal("rbmpukgri")
                    .withRegion("flz"),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("bxzpuzycisp", response.iterator().next().environmentId());
        Assertions.assertEquals("zahmgkbrpyydhibn", response.iterator().next().environmentName());
        Assertions.assertEquals("kpikadrgvt", response.iterator().next().planData().usageType());
        Assertions.assertEquals("gnbuy", response.iterator().next().planData().billingCycle());
        Assertions.assertEquals("ijggmebfsiar", response.iterator().next().planData().planDetails());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-14T22:49:32Z"),
            response.iterator().next().planData().effectiveDate());
    }
}
