// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dynatrace.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dynatrace.models.IdentityProperties;
import com.azure.resourcemanager.dynatrace.models.ManagedIdentityType;
import com.azure.resourcemanager.dynatrace.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class IdentityPropertiesTests {
    @Test
    public void testDeserialize() {
        IdentityProperties model =
            BinaryData
                .fromString(
                    "{\"tenantId\":\"modmglougpb\",\"principalId\":\"tmut\",\"type\":\"SystemAndUserAssigned\",\"userAssignedIdentities\":{\"whbmd\":{\"clientId\":\"ta\",\"principalId\":\"spwgcuertumkdosv\"},\"gbquxigj\":{\"clientId\":\"bbjfddgmbmbexp\",\"principalId\":\"bhtqqrolfpfpsa\"},\"fqawrlyxw\":{\"clientId\":\"jgzjaoyfhrtx\",\"principalId\":\"lnerkujysvleju\"},\"ysszdnrujqguh\":{\"clientId\":\"kcprbnw\",\"principalId\":\"xgjvtbv\"}}}")
                .toObject(IdentityProperties.class);
        Assertions.assertEquals(ManagedIdentityType.SYSTEM_AND_USER_ASSIGNED, model.type());
        Assertions.assertEquals("ta", model.userAssignedIdentities().get("whbmd").clientId());
        Assertions.assertEquals("spwgcuertumkdosv", model.userAssignedIdentities().get("whbmd").principalId());
    }

    @Test
    public void testSerialize() {
        IdentityProperties model =
            new IdentityProperties()
                .withType(ManagedIdentityType.SYSTEM_AND_USER_ASSIGNED)
                .withUserAssignedIdentities(
                    mapOf(
                        "whbmd",
                        new UserAssignedIdentity().withClientId("ta").withPrincipalId("spwgcuertumkdosv"),
                        "gbquxigj",
                        new UserAssignedIdentity().withClientId("bbjfddgmbmbexp").withPrincipalId("bhtqqrolfpfpsa"),
                        "fqawrlyxw",
                        new UserAssignedIdentity().withClientId("jgzjaoyfhrtx").withPrincipalId("lnerkujysvleju"),
                        "ysszdnrujqguh",
                        new UserAssignedIdentity().withClientId("kcprbnw").withPrincipalId("xgjvtbv")));
        model = BinaryData.fromObject(model).toObject(IdentityProperties.class);
        Assertions.assertEquals(ManagedIdentityType.SYSTEM_AND_USER_ASSIGNED, model.type());
        Assertions.assertEquals("ta", model.userAssignedIdentities().get("whbmd").clientId());
        Assertions.assertEquals("spwgcuertumkdosv", model.userAssignedIdentities().get("whbmd").principalId());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
