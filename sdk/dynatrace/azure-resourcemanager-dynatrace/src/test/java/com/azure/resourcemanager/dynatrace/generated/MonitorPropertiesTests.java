// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dynatrace.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dynatrace.fluent.models.DynatraceSingleSignOnProperties;
import com.azure.resourcemanager.dynatrace.fluent.models.MonitorProperties;
import com.azure.resourcemanager.dynatrace.models.AccountInfo;
import com.azure.resourcemanager.dynatrace.models.DynatraceEnvironmentProperties;
import com.azure.resourcemanager.dynatrace.models.EnvironmentInfo;
import com.azure.resourcemanager.dynatrace.models.MarketplaceSubscriptionStatus;
import com.azure.resourcemanager.dynatrace.models.MonitoringStatus;
import com.azure.resourcemanager.dynatrace.models.PlanData;
import com.azure.resourcemanager.dynatrace.models.SingleSignOnStates;
import com.azure.resourcemanager.dynatrace.models.UserInfo;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class MonitorPropertiesTests {
    @Test
    public void testDeserialize() {
        MonitorProperties model =
            BinaryData
                .fromString(
                    "{\"monitoringStatus\":\"Disabled\",\"marketplaceSubscriptionStatus\":\"Suspended\",\"dynatraceEnvironmentProperties\":{\"userId\":\"osygex\",\"accountInfo\":{\"accountId\":\"jakhmsbzjh\",\"regionId\":\"zevdphlx\"},\"environmentInfo\":{\"environmentId\":\"thqt\",\"ingestionKey\":\"qjbpfzfsin\",\"logsIngestionEndpoint\":\"v\",\"landingURL\":\"jrwzox\"},\"singleSignOnProperties\":{\"singleSignOnState\":\"Existing\",\"enterpriseAppId\":\"lluwfzitonpeq\",\"singleSignOnUrl\":\"jkjlxofpdvhpfx\",\"aadDomains\":[\"ininmay\"],\"provisioningState\":\"Succeeded\"}},\"userInfo\":{\"firstName\":\"kpode\",\"lastName\":\"oginuvamiheognar\",\"emailAddress\":\"xth\",\"phoneNumber\":\"tusivyevcciqihn\",\"country\":\"ngbwjz\"},\"planData\":{\"usageType\":\"ygxgispemvtz\",\"billingCycle\":\"ufubl\",\"planDetails\":\"fxqeof\",\"effectiveDate\":\"2021-11-09T06:35:40Z\"},\"liftrResourceCategory\":\"MonitorLogs\",\"liftrResourcePreference\":1946289710,\"provisioningState\":\"NotSpecified\"}")
                .toObject(MonitorProperties.class);
        Assertions.assertEquals(MonitoringStatus.DISABLED, model.monitoringStatus());
        Assertions.assertEquals(MarketplaceSubscriptionStatus.SUSPENDED, model.marketplaceSubscriptionStatus());
        Assertions.assertEquals("osygex", model.dynatraceEnvironmentProperties().userId());
        Assertions.assertEquals("jakhmsbzjh", model.dynatraceEnvironmentProperties().accountInfo().accountId());
        Assertions.assertEquals("zevdphlx", model.dynatraceEnvironmentProperties().accountInfo().regionId());
        Assertions.assertEquals("thqt", model.dynatraceEnvironmentProperties().environmentInfo().environmentId());
        Assertions.assertEquals("qjbpfzfsin", model.dynatraceEnvironmentProperties().environmentInfo().ingestionKey());
        Assertions.assertEquals("v", model.dynatraceEnvironmentProperties().environmentInfo().logsIngestionEndpoint());
        Assertions.assertEquals("jrwzox", model.dynatraceEnvironmentProperties().environmentInfo().landingUrl());
        Assertions
            .assertEquals(
                SingleSignOnStates.EXISTING,
                model.dynatraceEnvironmentProperties().singleSignOnProperties().singleSignOnState());
        Assertions
            .assertEquals(
                "lluwfzitonpeq", model.dynatraceEnvironmentProperties().singleSignOnProperties().enterpriseAppId());
        Assertions
            .assertEquals(
                "jkjlxofpdvhpfx", model.dynatraceEnvironmentProperties().singleSignOnProperties().singleSignOnUrl());
        Assertions
            .assertEquals(
                "ininmay", model.dynatraceEnvironmentProperties().singleSignOnProperties().aadDomains().get(0));
        Assertions.assertEquals("kpode", model.userInfo().firstName());
        Assertions.assertEquals("oginuvamiheognar", model.userInfo().lastName());
        Assertions.assertEquals("xth", model.userInfo().emailAddress());
        Assertions.assertEquals("tusivyevcciqihn", model.userInfo().phoneNumber());
        Assertions.assertEquals("ngbwjz", model.userInfo().country());
        Assertions.assertEquals("ygxgispemvtz", model.planData().usageType());
        Assertions.assertEquals("ufubl", model.planData().billingCycle());
        Assertions.assertEquals("fxqeof", model.planData().planDetails());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-09T06:35:40Z"), model.planData().effectiveDate());
    }

    @Test
    public void testSerialize() {
        MonitorProperties model =
            new MonitorProperties()
                .withMonitoringStatus(MonitoringStatus.DISABLED)
                .withMarketplaceSubscriptionStatus(MarketplaceSubscriptionStatus.SUSPENDED)
                .withDynatraceEnvironmentProperties(
                    new DynatraceEnvironmentProperties()
                        .withUserId("osygex")
                        .withAccountInfo(new AccountInfo().withAccountId("jakhmsbzjh").withRegionId("zevdphlx"))
                        .withEnvironmentInfo(
                            new EnvironmentInfo()
                                .withEnvironmentId("thqt")
                                .withIngestionKey("qjbpfzfsin")
                                .withLogsIngestionEndpoint("v")
                                .withLandingUrl("jrwzox"))
                        .withSingleSignOnProperties(
                            new DynatraceSingleSignOnProperties()
                                .withSingleSignOnState(SingleSignOnStates.EXISTING)
                                .withEnterpriseAppId("lluwfzitonpeq")
                                .withSingleSignOnUrl("jkjlxofpdvhpfx")
                                .withAadDomains(Arrays.asList("ininmay"))))
                .withUserInfo(
                    new UserInfo()
                        .withFirstName("kpode")
                        .withLastName("oginuvamiheognar")
                        .withEmailAddress("xth")
                        .withPhoneNumber("tusivyevcciqihn")
                        .withCountry("ngbwjz"))
                .withPlanData(
                    new PlanData()
                        .withUsageType("ygxgispemvtz")
                        .withBillingCycle("ufubl")
                        .withPlanDetails("fxqeof")
                        .withEffectiveDate(OffsetDateTime.parse("2021-11-09T06:35:40Z")));
        model = BinaryData.fromObject(model).toObject(MonitorProperties.class);
        Assertions.assertEquals(MonitoringStatus.DISABLED, model.monitoringStatus());
        Assertions.assertEquals(MarketplaceSubscriptionStatus.SUSPENDED, model.marketplaceSubscriptionStatus());
        Assertions.assertEquals("osygex", model.dynatraceEnvironmentProperties().userId());
        Assertions.assertEquals("jakhmsbzjh", model.dynatraceEnvironmentProperties().accountInfo().accountId());
        Assertions.assertEquals("zevdphlx", model.dynatraceEnvironmentProperties().accountInfo().regionId());
        Assertions.assertEquals("thqt", model.dynatraceEnvironmentProperties().environmentInfo().environmentId());
        Assertions.assertEquals("qjbpfzfsin", model.dynatraceEnvironmentProperties().environmentInfo().ingestionKey());
        Assertions.assertEquals("v", model.dynatraceEnvironmentProperties().environmentInfo().logsIngestionEndpoint());
        Assertions.assertEquals("jrwzox", model.dynatraceEnvironmentProperties().environmentInfo().landingUrl());
        Assertions
            .assertEquals(
                SingleSignOnStates.EXISTING,
                model.dynatraceEnvironmentProperties().singleSignOnProperties().singleSignOnState());
        Assertions
            .assertEquals(
                "lluwfzitonpeq", model.dynatraceEnvironmentProperties().singleSignOnProperties().enterpriseAppId());
        Assertions
            .assertEquals(
                "jkjlxofpdvhpfx", model.dynatraceEnvironmentProperties().singleSignOnProperties().singleSignOnUrl());
        Assertions
            .assertEquals(
                "ininmay", model.dynatraceEnvironmentProperties().singleSignOnProperties().aadDomains().get(0));
        Assertions.assertEquals("kpode", model.userInfo().firstName());
        Assertions.assertEquals("oginuvamiheognar", model.userInfo().lastName());
        Assertions.assertEquals("xth", model.userInfo().emailAddress());
        Assertions.assertEquals("tusivyevcciqihn", model.userInfo().phoneNumber());
        Assertions.assertEquals("ngbwjz", model.userInfo().country());
        Assertions.assertEquals("ygxgispemvtz", model.planData().usageType());
        Assertions.assertEquals("ufubl", model.planData().billingCycle());
        Assertions.assertEquals("fxqeof", model.planData().planDetails());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-09T06:35:40Z"), model.planData().effectiveDate());
    }
}
