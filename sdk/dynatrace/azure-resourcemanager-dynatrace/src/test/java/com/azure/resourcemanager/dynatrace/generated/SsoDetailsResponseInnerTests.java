// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dynatrace.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dynatrace.fluent.models.SsoDetailsResponseInner;
import com.azure.resourcemanager.dynatrace.models.SsoStatus;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class SsoDetailsResponseInnerTests {
    @Test
    public void testDeserialize() {
        SsoDetailsResponseInner model =
            BinaryData
                .fromString(
                    "{\"isSsoEnabled\":\"Disabled\",\"metadataUrl\":\"ckzywbiexzfeyue\",\"singleSignOnUrl\":\"ibx\",\"aadDomains\":[\"bhqwalmuzyoxa\",\"pdkzjancuxr\"],\"adminUsers\":[\"bavxbniwdjswzt\",\"dbpgnxytxhp\",\"xbzpfzab\"]}")
                .toObject(SsoDetailsResponseInner.class);
        Assertions.assertEquals(SsoStatus.DISABLED, model.isSsoEnabled());
        Assertions.assertEquals("ckzywbiexzfeyue", model.metadataUrl());
        Assertions.assertEquals("ibx", model.singleSignOnUrl());
        Assertions.assertEquals("bhqwalmuzyoxa", model.aadDomains().get(0));
        Assertions.assertEquals("bavxbniwdjswzt", model.adminUsers().get(0));
    }

    @Test
    public void testSerialize() {
        SsoDetailsResponseInner model =
            new SsoDetailsResponseInner()
                .withIsSsoEnabled(SsoStatus.DISABLED)
                .withMetadataUrl("ckzywbiexzfeyue")
                .withSingleSignOnUrl("ibx")
                .withAadDomains(Arrays.asList("bhqwalmuzyoxa", "pdkzjancuxr"))
                .withAdminUsers(Arrays.asList("bavxbniwdjswzt", "dbpgnxytxhp", "xbzpfzab"));
        model = BinaryData.fromObject(model).toObject(SsoDetailsResponseInner.class);
        Assertions.assertEquals(SsoStatus.DISABLED, model.isSsoEnabled());
        Assertions.assertEquals("ckzywbiexzfeyue", model.metadataUrl());
        Assertions.assertEquals("ibx", model.singleSignOnUrl());
        Assertions.assertEquals("bhqwalmuzyoxa", model.aadDomains().get(0));
        Assertions.assertEquals("bavxbniwdjswzt", model.adminUsers().get(0));
    }
}
