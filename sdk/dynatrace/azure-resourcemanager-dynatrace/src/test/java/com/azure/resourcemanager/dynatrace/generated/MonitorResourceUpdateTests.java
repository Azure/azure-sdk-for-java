// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dynatrace.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dynatrace.fluent.models.DynatraceSingleSignOnProperties;
import com.azure.resourcemanager.dynatrace.models.AccountInfo;
import com.azure.resourcemanager.dynatrace.models.DynatraceEnvironmentProperties;
import com.azure.resourcemanager.dynatrace.models.EnvironmentInfo;
import com.azure.resourcemanager.dynatrace.models.MarketplaceSubscriptionStatus;
import com.azure.resourcemanager.dynatrace.models.MonitorResourceUpdate;
import com.azure.resourcemanager.dynatrace.models.MonitoringStatus;
import com.azure.resourcemanager.dynatrace.models.PlanData;
import com.azure.resourcemanager.dynatrace.models.SingleSignOnStates;
import com.azure.resourcemanager.dynatrace.models.UserInfo;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class MonitorResourceUpdateTests {
    @Test
    public void testDeserialize() {
        MonitorResourceUpdate model =
            BinaryData
                .fromString(
                    "{\"tags\":{\"ckyfih\":\"zxufiz\"},\"monitoringStatus\":\"Enabled\",\"marketplaceSubscriptionStatus\":\"Suspended\",\"dynatraceEnvironmentProperties\":{\"userId\":\"wdzuhtymwisd\",\"accountInfo\":{\"accountId\":\"hwxmnteiwa\",\"regionId\":\"vkmijcmmxdcuf\"},\"environmentInfo\":{\"environmentId\":\"rpymzidnsez\",\"ingestionKey\":\"tbzsgfyccs\",\"logsIngestionEndpoint\":\"wmdwzjeiachboo\",\"landingURL\":\"lnrosfqp\"},\"singleSignOnProperties\":{\"singleSignOnState\":\"Enable\",\"enterpriseAppId\":\"zvypyqrimzinp\",\"singleSignOnUrl\":\"wjdk\",\"aadDomains\":[\"oodqxhcrm\",\"ohjtckw\",\"dsoifiyipj\",\"sqwpgrjb\"],\"provisioningState\":\"Deleted\"}},\"userInfo\":{\"firstName\":\"jxvsnbyxqabn\",\"lastName\":\"cpc\",\"emailAddress\":\"hurzafblj\",\"phoneNumber\":\"pbtoqcjmkl\",\"country\":\"vbqid\"},\"planData\":{\"usageType\":\"jzyulpk\",\"billingCycle\":\"jkrlkhbzhfepg\",\"planDetails\":\"qex\",\"effectiveDate\":\"2021-02-26T10:43:13Z\"}}")
                .toObject(MonitorResourceUpdate.class);
        Assertions.assertEquals("zxufiz", model.tags().get("ckyfih"));
        Assertions.assertEquals(MonitoringStatus.ENABLED, model.monitoringStatus());
        Assertions.assertEquals(MarketplaceSubscriptionStatus.SUSPENDED, model.marketplaceSubscriptionStatus());
        Assertions.assertEquals("wdzuhtymwisd", model.dynatraceEnvironmentProperties().userId());
        Assertions.assertEquals("hwxmnteiwa", model.dynatraceEnvironmentProperties().accountInfo().accountId());
        Assertions.assertEquals("vkmijcmmxdcuf", model.dynatraceEnvironmentProperties().accountInfo().regionId());
        Assertions
            .assertEquals("rpymzidnsez", model.dynatraceEnvironmentProperties().environmentInfo().environmentId());
        Assertions.assertEquals("tbzsgfyccs", model.dynatraceEnvironmentProperties().environmentInfo().ingestionKey());
        Assertions
            .assertEquals(
                "wmdwzjeiachboo", model.dynatraceEnvironmentProperties().environmentInfo().logsIngestionEndpoint());
        Assertions.assertEquals("lnrosfqp", model.dynatraceEnvironmentProperties().environmentInfo().landingUrl());
        Assertions
            .assertEquals(
                SingleSignOnStates.ENABLE,
                model.dynatraceEnvironmentProperties().singleSignOnProperties().singleSignOnState());
        Assertions
            .assertEquals(
                "zvypyqrimzinp", model.dynatraceEnvironmentProperties().singleSignOnProperties().enterpriseAppId());
        Assertions
            .assertEquals("wjdk", model.dynatraceEnvironmentProperties().singleSignOnProperties().singleSignOnUrl());
        Assertions
            .assertEquals(
                "oodqxhcrm", model.dynatraceEnvironmentProperties().singleSignOnProperties().aadDomains().get(0));
        Assertions.assertEquals("jxvsnbyxqabn", model.userInfo().firstName());
        Assertions.assertEquals("cpc", model.userInfo().lastName());
        Assertions.assertEquals("hurzafblj", model.userInfo().emailAddress());
        Assertions.assertEquals("pbtoqcjmkl", model.userInfo().phoneNumber());
        Assertions.assertEquals("vbqid", model.userInfo().country());
        Assertions.assertEquals("jzyulpk", model.planData().usageType());
        Assertions.assertEquals("jkrlkhbzhfepg", model.planData().billingCycle());
        Assertions.assertEquals("qex", model.planData().planDetails());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-26T10:43:13Z"), model.planData().effectiveDate());
    }

    @Test
    public void testSerialize() {
        MonitorResourceUpdate model =
            new MonitorResourceUpdate()
                .withTags(mapOf("ckyfih", "zxufiz"))
                .withMonitoringStatus(MonitoringStatus.ENABLED)
                .withMarketplaceSubscriptionStatus(MarketplaceSubscriptionStatus.SUSPENDED)
                .withDynatraceEnvironmentProperties(
                    new DynatraceEnvironmentProperties()
                        .withUserId("wdzuhtymwisd")
                        .withAccountInfo(new AccountInfo().withAccountId("hwxmnteiwa").withRegionId("vkmijcmmxdcuf"))
                        .withEnvironmentInfo(
                            new EnvironmentInfo()
                                .withEnvironmentId("rpymzidnsez")
                                .withIngestionKey("tbzsgfyccs")
                                .withLogsIngestionEndpoint("wmdwzjeiachboo")
                                .withLandingUrl("lnrosfqp"))
                        .withSingleSignOnProperties(
                            new DynatraceSingleSignOnProperties()
                                .withSingleSignOnState(SingleSignOnStates.ENABLE)
                                .withEnterpriseAppId("zvypyqrimzinp")
                                .withSingleSignOnUrl("wjdk")
                                .withAadDomains(Arrays.asList("oodqxhcrm", "ohjtckw", "dsoifiyipj", "sqwpgrjb"))))
                .withUserInfo(
                    new UserInfo()
                        .withFirstName("jxvsnbyxqabn")
                        .withLastName("cpc")
                        .withEmailAddress("hurzafblj")
                        .withPhoneNumber("pbtoqcjmkl")
                        .withCountry("vbqid"))
                .withPlanData(
                    new PlanData()
                        .withUsageType("jzyulpk")
                        .withBillingCycle("jkrlkhbzhfepg")
                        .withPlanDetails("qex")
                        .withEffectiveDate(OffsetDateTime.parse("2021-02-26T10:43:13Z")));
        model = BinaryData.fromObject(model).toObject(MonitorResourceUpdate.class);
        Assertions.assertEquals("zxufiz", model.tags().get("ckyfih"));
        Assertions.assertEquals(MonitoringStatus.ENABLED, model.monitoringStatus());
        Assertions.assertEquals(MarketplaceSubscriptionStatus.SUSPENDED, model.marketplaceSubscriptionStatus());
        Assertions.assertEquals("wdzuhtymwisd", model.dynatraceEnvironmentProperties().userId());
        Assertions.assertEquals("hwxmnteiwa", model.dynatraceEnvironmentProperties().accountInfo().accountId());
        Assertions.assertEquals("vkmijcmmxdcuf", model.dynatraceEnvironmentProperties().accountInfo().regionId());
        Assertions
            .assertEquals("rpymzidnsez", model.dynatraceEnvironmentProperties().environmentInfo().environmentId());
        Assertions.assertEquals("tbzsgfyccs", model.dynatraceEnvironmentProperties().environmentInfo().ingestionKey());
        Assertions
            .assertEquals(
                "wmdwzjeiachboo", model.dynatraceEnvironmentProperties().environmentInfo().logsIngestionEndpoint());
        Assertions.assertEquals("lnrosfqp", model.dynatraceEnvironmentProperties().environmentInfo().landingUrl());
        Assertions
            .assertEquals(
                SingleSignOnStates.ENABLE,
                model.dynatraceEnvironmentProperties().singleSignOnProperties().singleSignOnState());
        Assertions
            .assertEquals(
                "zvypyqrimzinp", model.dynatraceEnvironmentProperties().singleSignOnProperties().enterpriseAppId());
        Assertions
            .assertEquals("wjdk", model.dynatraceEnvironmentProperties().singleSignOnProperties().singleSignOnUrl());
        Assertions
            .assertEquals(
                "oodqxhcrm", model.dynatraceEnvironmentProperties().singleSignOnProperties().aadDomains().get(0));
        Assertions.assertEquals("jxvsnbyxqabn", model.userInfo().firstName());
        Assertions.assertEquals("cpc", model.userInfo().lastName());
        Assertions.assertEquals("hurzafblj", model.userInfo().emailAddress());
        Assertions.assertEquals("pbtoqcjmkl", model.userInfo().phoneNumber());
        Assertions.assertEquals("vbqid", model.userInfo().country());
        Assertions.assertEquals("jzyulpk", model.planData().usageType());
        Assertions.assertEquals("jkrlkhbzhfepg", model.planData().billingCycle());
        Assertions.assertEquals("qex", model.planData().planDetails());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-26T10:43:13Z"), model.planData().effectiveDate());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
