// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dynatrace.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dynatrace.fluent.models.AppServiceInfoInner;
import com.azure.resourcemanager.dynatrace.models.AppServiceListResponse;
import com.azure.resourcemanager.dynatrace.models.AutoUpdateSetting;
import com.azure.resourcemanager.dynatrace.models.AvailabilityState;
import com.azure.resourcemanager.dynatrace.models.LogModule;
import com.azure.resourcemanager.dynatrace.models.MonitoringType;
import com.azure.resourcemanager.dynatrace.models.UpdateStatus;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AppServiceListResponseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AppServiceListResponse model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"resourceId\":\"jqabcypmivkwlzuv\",\"version\":\"fwnfnb\",\"monitoringType\":\"CLOUD_INFRASTRUCTURE\",\"autoUpdateSetting\":\"DISABLED\",\"updateStatus\":\"SUPPRESSED\",\"availabilityState\":\"UNEXPECTED_SHUTDOWN\",\"logModule\":\"DISABLED\",\"hostGroup\":\"qgtz\",\"hostName\":\"pnqbqqwxrjfe\"}],\"nextLink\":\"lnwsubisn\"}")
                .toObject(AppServiceListResponse.class);
        Assertions.assertEquals("jqabcypmivkwlzuv", model.value().get(0).resourceId());
        Assertions.assertEquals("fwnfnb", model.value().get(0).version());
        Assertions.assertEquals(MonitoringType.CLOUD_INFRASTRUCTURE, model.value().get(0).monitoringType());
        Assertions.assertEquals(AutoUpdateSetting.DISABLED, model.value().get(0).autoUpdateSetting());
        Assertions.assertEquals(UpdateStatus.SUPPRESSED, model.value().get(0).updateStatus());
        Assertions.assertEquals(AvailabilityState.UNEXPECTED_SHUTDOWN, model.value().get(0).availabilityState());
        Assertions.assertEquals(LogModule.DISABLED, model.value().get(0).logModule());
        Assertions.assertEquals("qgtz", model.value().get(0).hostGroup());
        Assertions.assertEquals("pnqbqqwxrjfe", model.value().get(0).hostname());
        Assertions.assertEquals("lnwsubisn", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AppServiceListResponse model =
            new AppServiceListResponse()
                .withValue(
                    Arrays
                        .asList(
                            new AppServiceInfoInner()
                                .withResourceId("jqabcypmivkwlzuv")
                                .withVersion("fwnfnb")
                                .withMonitoringType(MonitoringType.CLOUD_INFRASTRUCTURE)
                                .withAutoUpdateSetting(AutoUpdateSetting.DISABLED)
                                .withUpdateStatus(UpdateStatus.SUPPRESSED)
                                .withAvailabilityState(AvailabilityState.UNEXPECTED_SHUTDOWN)
                                .withLogModule(LogModule.DISABLED)
                                .withHostGroup("qgtz")
                                .withHostname("pnqbqqwxrjfe")))
                .withNextLink("lnwsubisn");
        model = BinaryData.fromObject(model).toObject(AppServiceListResponse.class);
        Assertions.assertEquals("jqabcypmivkwlzuv", model.value().get(0).resourceId());
        Assertions.assertEquals("fwnfnb", model.value().get(0).version());
        Assertions.assertEquals(MonitoringType.CLOUD_INFRASTRUCTURE, model.value().get(0).monitoringType());
        Assertions.assertEquals(AutoUpdateSetting.DISABLED, model.value().get(0).autoUpdateSetting());
        Assertions.assertEquals(UpdateStatus.SUPPRESSED, model.value().get(0).updateStatus());
        Assertions.assertEquals(AvailabilityState.UNEXPECTED_SHUTDOWN, model.value().get(0).availabilityState());
        Assertions.assertEquals(LogModule.DISABLED, model.value().get(0).logModule());
        Assertions.assertEquals("qgtz", model.value().get(0).hostGroup());
        Assertions.assertEquals("pnqbqqwxrjfe", model.value().get(0).hostname());
        Assertions.assertEquals("lnwsubisn", model.nextLink());
    }
}
