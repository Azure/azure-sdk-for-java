// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dynatrace.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dynatrace.fluent.models.MonitoringTagRulesProperties;
import com.azure.resourcemanager.dynatrace.models.FilteringTag;
import com.azure.resourcemanager.dynatrace.models.LogRules;
import com.azure.resourcemanager.dynatrace.models.MetricRules;
import com.azure.resourcemanager.dynatrace.models.SendAadLogsStatus;
import com.azure.resourcemanager.dynatrace.models.SendActivityLogsStatus;
import com.azure.resourcemanager.dynatrace.models.SendSubscriptionLogsStatus;
import com.azure.resourcemanager.dynatrace.models.TagAction;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class MonitoringTagRulesPropertiesTests {
    @Test
    public void testDeserialize() {
        MonitoringTagRulesProperties model =
            BinaryData
                .fromString(
                    "{\"logRules\":{\"sendAadLogs\":\"Enabled\",\"sendSubscriptionLogs\":\"Disabled\",\"sendActivityLogs\":\"Enabled\",\"filteringTags\":[{\"name\":\"vdcsitynn\",\"value\":\"mdectehfiqscjey\",\"action\":\"Include\"},{\"name\":\"zrkgqhcjrefovg\",\"value\":\"qsl\",\"action\":\"Include\"}]},\"metricRules\":{\"filteringTags\":[{\"name\":\"jpkcattpng\",\"value\":\"rcczsqpjhvmd\",\"action\":\"Include\"},{\"name\":\"ysou\",\"value\":\"e\",\"action\":\"Include\"},{\"name\":\"ae\",\"value\":\"fhyhltrpmopjmcma\",\"action\":\"Include\"}]},\"provisioningState\":\"Deleting\"}")
                .toObject(MonitoringTagRulesProperties.class);
        Assertions.assertEquals(SendAadLogsStatus.ENABLED, model.logRules().sendAadLogs());
        Assertions.assertEquals(SendSubscriptionLogsStatus.DISABLED, model.logRules().sendSubscriptionLogs());
        Assertions.assertEquals(SendActivityLogsStatus.ENABLED, model.logRules().sendActivityLogs());
        Assertions.assertEquals("vdcsitynn", model.logRules().filteringTags().get(0).name());
        Assertions.assertEquals("mdectehfiqscjey", model.logRules().filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.INCLUDE, model.logRules().filteringTags().get(0).action());
        Assertions.assertEquals("jpkcattpng", model.metricRules().filteringTags().get(0).name());
        Assertions.assertEquals("rcczsqpjhvmd", model.metricRules().filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.INCLUDE, model.metricRules().filteringTags().get(0).action());
    }

    @Test
    public void testSerialize() {
        MonitoringTagRulesProperties model =
            new MonitoringTagRulesProperties()
                .withLogRules(
                    new LogRules()
                        .withSendAadLogs(SendAadLogsStatus.ENABLED)
                        .withSendSubscriptionLogs(SendSubscriptionLogsStatus.DISABLED)
                        .withSendActivityLogs(SendActivityLogsStatus.ENABLED)
                        .withFilteringTags(
                            Arrays
                                .asList(
                                    new FilteringTag()
                                        .withName("vdcsitynn")
                                        .withValue("mdectehfiqscjey")
                                        .withAction(TagAction.INCLUDE),
                                    new FilteringTag()
                                        .withName("zrkgqhcjrefovg")
                                        .withValue("qsl")
                                        .withAction(TagAction.INCLUDE))))
                .withMetricRules(
                    new MetricRules()
                        .withFilteringTags(
                            Arrays
                                .asList(
                                    new FilteringTag()
                                        .withName("jpkcattpng")
                                        .withValue("rcczsqpjhvmd")
                                        .withAction(TagAction.INCLUDE),
                                    new FilteringTag().withName("ysou").withValue("e").withAction(TagAction.INCLUDE),
                                    new FilteringTag()
                                        .withName("ae")
                                        .withValue("fhyhltrpmopjmcma")
                                        .withAction(TagAction.INCLUDE))));
        model = BinaryData.fromObject(model).toObject(MonitoringTagRulesProperties.class);
        Assertions.assertEquals(SendAadLogsStatus.ENABLED, model.logRules().sendAadLogs());
        Assertions.assertEquals(SendSubscriptionLogsStatus.DISABLED, model.logRules().sendSubscriptionLogs());
        Assertions.assertEquals(SendActivityLogsStatus.ENABLED, model.logRules().sendActivityLogs());
        Assertions.assertEquals("vdcsitynn", model.logRules().filteringTags().get(0).name());
        Assertions.assertEquals("mdectehfiqscjey", model.logRules().filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.INCLUDE, model.logRules().filteringTags().get(0).action());
        Assertions.assertEquals("jpkcattpng", model.metricRules().filteringTags().get(0).name());
        Assertions.assertEquals("rcczsqpjhvmd", model.metricRules().filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.INCLUDE, model.metricRules().filteringTags().get(0).action());
    }
}
