// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dynatrace.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dynatrace.fluent.models.VMInfoInner;
import com.azure.resourcemanager.dynatrace.models.AutoUpdateSetting;
import com.azure.resourcemanager.dynatrace.models.AvailabilityState;
import com.azure.resourcemanager.dynatrace.models.LogModule;
import com.azure.resourcemanager.dynatrace.models.MonitoringType;
import com.azure.resourcemanager.dynatrace.models.UpdateStatus;
import org.junit.jupiter.api.Assertions;

public final class VMInfoInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VMInfoInner model =
            BinaryData
                .fromString(
                    "{\"resourceId\":\"bhj\",\"version\":\"igeho\",\"monitoringType\":\"CLOUD_INFRASTRUCTURE\",\"autoUpdateSetting\":\"ENABLED\",\"updateStatus\":\"OUTDATED\",\"availabilityState\":\"SHUTDOWN\",\"logModule\":\"DISABLED\",\"hostGroup\":\"zlcuiywgqywgndrv\",\"hostName\":\"hzgpphrcgyncocpe\"}")
                .toObject(VMInfoInner.class);
        Assertions.assertEquals("bhj", model.resourceId());
        Assertions.assertEquals("igeho", model.version());
        Assertions.assertEquals(MonitoringType.CLOUD_INFRASTRUCTURE, model.monitoringType());
        Assertions.assertEquals(AutoUpdateSetting.ENABLED, model.autoUpdateSetting());
        Assertions.assertEquals(UpdateStatus.OUTDATED, model.updateStatus());
        Assertions.assertEquals(AvailabilityState.SHUTDOWN, model.availabilityState());
        Assertions.assertEquals(LogModule.DISABLED, model.logModule());
        Assertions.assertEquals("zlcuiywgqywgndrv", model.hostGroup());
        Assertions.assertEquals("hzgpphrcgyncocpe", model.hostname());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VMInfoInner model =
            new VMInfoInner()
                .withResourceId("bhj")
                .withVersion("igeho")
                .withMonitoringType(MonitoringType.CLOUD_INFRASTRUCTURE)
                .withAutoUpdateSetting(AutoUpdateSetting.ENABLED)
                .withUpdateStatus(UpdateStatus.OUTDATED)
                .withAvailabilityState(AvailabilityState.SHUTDOWN)
                .withLogModule(LogModule.DISABLED)
                .withHostGroup("zlcuiywgqywgndrv")
                .withHostname("hzgpphrcgyncocpe");
        model = BinaryData.fromObject(model).toObject(VMInfoInner.class);
        Assertions.assertEquals("bhj", model.resourceId());
        Assertions.assertEquals("igeho", model.version());
        Assertions.assertEquals(MonitoringType.CLOUD_INFRASTRUCTURE, model.monitoringType());
        Assertions.assertEquals(AutoUpdateSetting.ENABLED, model.autoUpdateSetting());
        Assertions.assertEquals(UpdateStatus.OUTDATED, model.updateStatus());
        Assertions.assertEquals(AvailabilityState.SHUTDOWN, model.availabilityState());
        Assertions.assertEquals(LogModule.DISABLED, model.logModule());
        Assertions.assertEquals("zlcuiywgqywgndrv", model.hostGroup());
        Assertions.assertEquals("hzgpphrcgyncocpe", model.hostname());
    }
}
