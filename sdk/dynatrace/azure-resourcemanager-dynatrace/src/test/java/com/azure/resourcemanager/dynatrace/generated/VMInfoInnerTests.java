// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dynatrace.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dynatrace.fluent.models.VMInfoInner;
import com.azure.resourcemanager.dynatrace.models.AutoUpdateSetting;
import com.azure.resourcemanager.dynatrace.models.AvailabilityState;
import com.azure.resourcemanager.dynatrace.models.LogModule;
import com.azure.resourcemanager.dynatrace.models.MonitoringType;
import com.azure.resourcemanager.dynatrace.models.UpdateStatus;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class VMInfoInnerTests {
    @Test
    public void testDeserialize() {
        VMInfoInner model =
            BinaryData
                .fromString(
                    "{\"resourceId\":\"ispnqzahmgkbrp\",\"version\":\"dhibnuq\",\"monitoringType\":\"CLOUD_INFRASTRUCTURE\",\"autoUpdateSetting\":\"ENABLED\",\"updateStatus\":\"UPDATE_PENDING\",\"availabilityState\":\"UNEXPECTED_SHUTDOWN\",\"logModule\":\"DISABLED\",\"hostGroup\":\"agnb\",\"hostName\":\"nhijggmebfsi\"}")
                .toObject(VMInfoInner.class);
        Assertions.assertEquals("ispnqzahmgkbrp", model.resourceId());
        Assertions.assertEquals("dhibnuq", model.version());
        Assertions.assertEquals(MonitoringType.CLOUD_INFRASTRUCTURE, model.monitoringType());
        Assertions.assertEquals(AutoUpdateSetting.ENABLED, model.autoUpdateSetting());
        Assertions.assertEquals(UpdateStatus.UPDATE_PENDING, model.updateStatus());
        Assertions.assertEquals(AvailabilityState.UNEXPECTED_SHUTDOWN, model.availabilityState());
        Assertions.assertEquals(LogModule.DISABLED, model.logModule());
        Assertions.assertEquals("agnb", model.hostGroup());
        Assertions.assertEquals("nhijggmebfsi", model.hostname());
    }

    @Test
    public void testSerialize() {
        VMInfoInner model =
            new VMInfoInner()
                .withResourceId("ispnqzahmgkbrp")
                .withVersion("dhibnuq")
                .withMonitoringType(MonitoringType.CLOUD_INFRASTRUCTURE)
                .withAutoUpdateSetting(AutoUpdateSetting.ENABLED)
                .withUpdateStatus(UpdateStatus.UPDATE_PENDING)
                .withAvailabilityState(AvailabilityState.UNEXPECTED_SHUTDOWN)
                .withLogModule(LogModule.DISABLED)
                .withHostGroup("agnb")
                .withHostname("nhijggmebfsi");
        model = BinaryData.fromObject(model).toObject(VMInfoInner.class);
        Assertions.assertEquals("ispnqzahmgkbrp", model.resourceId());
        Assertions.assertEquals("dhibnuq", model.version());
        Assertions.assertEquals(MonitoringType.CLOUD_INFRASTRUCTURE, model.monitoringType());
        Assertions.assertEquals(AutoUpdateSetting.ENABLED, model.autoUpdateSetting());
        Assertions.assertEquals(UpdateStatus.UPDATE_PENDING, model.updateStatus());
        Assertions.assertEquals(AvailabilityState.UNEXPECTED_SHUTDOWN, model.availabilityState());
        Assertions.assertEquals(LogModule.DISABLED, model.logModule());
        Assertions.assertEquals("agnb", model.hostGroup());
        Assertions.assertEquals("nhijggmebfsi", model.hostname());
    }
}
