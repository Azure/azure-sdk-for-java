// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dynatrace.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dynatrace.fluent.models.DynatraceSingleSignOnResourceInner;
import com.azure.resourcemanager.dynatrace.models.SingleSignOnStates;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DynatraceSingleSignOnResourceInnerTests {
    @Test
    public void testDeserialize() {
        DynatraceSingleSignOnResourceInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"singleSignOnState\":\"Existing\",\"enterpriseAppId\":\"xdeoejzic\",\"singleSignOnUrl\":\"fsj\",\"aadDomains\":[\"zfbishcbkhaj\",\"eyeam\",\"p\"],\"provisioningState\":\"Creating\"},\"id\":\"lpbuxwgipwhonowk\",\"name\":\"shwankixzbinje\",\"type\":\"uttmrywnuzoqft\"}")
                .toObject(DynatraceSingleSignOnResourceInner.class);
        Assertions.assertEquals(SingleSignOnStates.EXISTING, model.singleSignOnState());
        Assertions.assertEquals("xdeoejzic", model.enterpriseAppId());
        Assertions.assertEquals("fsj", model.singleSignOnUrl());
        Assertions.assertEquals("zfbishcbkhaj", model.aadDomains().get(0));
    }

    @Test
    public void testSerialize() {
        DynatraceSingleSignOnResourceInner model =
            new DynatraceSingleSignOnResourceInner()
                .withSingleSignOnState(SingleSignOnStates.EXISTING)
                .withEnterpriseAppId("xdeoejzic")
                .withSingleSignOnUrl("fsj")
                .withAadDomains(Arrays.asList("zfbishcbkhaj", "eyeam", "p"));
        model = BinaryData.fromObject(model).toObject(DynatraceSingleSignOnResourceInner.class);
        Assertions.assertEquals(SingleSignOnStates.EXISTING, model.singleSignOnState());
        Assertions.assertEquals("xdeoejzic", model.enterpriseAppId());
        Assertions.assertEquals("fsj", model.singleSignOnUrl());
        Assertions.assertEquals("zfbishcbkhaj", model.aadDomains().get(0));
    }
}
