// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dynatrace.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.dynatrace.models.MarketplaceSubscriptionStatus;
import java.io.IOException;

/**
 * Marketplace SaaS resource details linked to the given tenant Id.
 */
@Fluent
public final class MarketplaceSaaSResourceDetailsResponseInner
    implements JsonSerializable<MarketplaceSaaSResourceDetailsResponseInner> {
    /*
     * Id of the Marketplace SaaS Resource
     */
    private String marketplaceSaaSResourceId;

    /*
     * Id of the plan
     */
    private String planId;

    /*
     * Marketplace subscription status
     */
    private MarketplaceSubscriptionStatus marketplaceSubscriptionStatus;

    /**
     * Creates an instance of MarketplaceSaaSResourceDetailsResponseInner class.
     */
    public MarketplaceSaaSResourceDetailsResponseInner() {
    }

    /**
     * Get the marketplaceSaaSResourceId property: Id of the Marketplace SaaS Resource.
     * 
     * @return the marketplaceSaaSResourceId value.
     */
    public String marketplaceSaaSResourceId() {
        return this.marketplaceSaaSResourceId;
    }

    /**
     * Set the marketplaceSaaSResourceId property: Id of the Marketplace SaaS Resource.
     * 
     * @param marketplaceSaaSResourceId the marketplaceSaaSResourceId value to set.
     * @return the MarketplaceSaaSResourceDetailsResponseInner object itself.
     */
    public MarketplaceSaaSResourceDetailsResponseInner withMarketplaceSaaSResourceId(String marketplaceSaaSResourceId) {
        this.marketplaceSaaSResourceId = marketplaceSaaSResourceId;
        return this;
    }

    /**
     * Get the planId property: Id of the plan.
     * 
     * @return the planId value.
     */
    public String planId() {
        return this.planId;
    }

    /**
     * Set the planId property: Id of the plan.
     * 
     * @param planId the planId value to set.
     * @return the MarketplaceSaaSResourceDetailsResponseInner object itself.
     */
    public MarketplaceSaaSResourceDetailsResponseInner withPlanId(String planId) {
        this.planId = planId;
        return this;
    }

    /**
     * Get the marketplaceSubscriptionStatus property: Marketplace subscription status.
     * 
     * @return the marketplaceSubscriptionStatus value.
     */
    public MarketplaceSubscriptionStatus marketplaceSubscriptionStatus() {
        return this.marketplaceSubscriptionStatus;
    }

    /**
     * Set the marketplaceSubscriptionStatus property: Marketplace subscription status.
     * 
     * @param marketplaceSubscriptionStatus the marketplaceSubscriptionStatus value to set.
     * @return the MarketplaceSaaSResourceDetailsResponseInner object itself.
     */
    public MarketplaceSaaSResourceDetailsResponseInner
        withMarketplaceSubscriptionStatus(MarketplaceSubscriptionStatus marketplaceSubscriptionStatus) {
        this.marketplaceSubscriptionStatus = marketplaceSubscriptionStatus;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("marketplaceSaaSResourceId", this.marketplaceSaaSResourceId);
        jsonWriter.writeStringField("planId", this.planId);
        jsonWriter.writeStringField("marketplaceSubscriptionStatus",
            this.marketplaceSubscriptionStatus == null ? null : this.marketplaceSubscriptionStatus.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MarketplaceSaaSResourceDetailsResponseInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MarketplaceSaaSResourceDetailsResponseInner if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the MarketplaceSaaSResourceDetailsResponseInner.
     */
    public static MarketplaceSaaSResourceDetailsResponseInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MarketplaceSaaSResourceDetailsResponseInner deserializedMarketplaceSaaSResourceDetailsResponseInner
                = new MarketplaceSaaSResourceDetailsResponseInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("marketplaceSaaSResourceId".equals(fieldName)) {
                    deserializedMarketplaceSaaSResourceDetailsResponseInner.marketplaceSaaSResourceId
                        = reader.getString();
                } else if ("planId".equals(fieldName)) {
                    deserializedMarketplaceSaaSResourceDetailsResponseInner.planId = reader.getString();
                } else if ("marketplaceSubscriptionStatus".equals(fieldName)) {
                    deserializedMarketplaceSaaSResourceDetailsResponseInner.marketplaceSubscriptionStatus
                        = MarketplaceSubscriptionStatus.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMarketplaceSaaSResourceDetailsResponseInner;
        });
    }
}
