// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dynatrace.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.dynatrace.models.SsoStatus;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** SSO details from the Dynatrace partner. */
@Fluent
public final class SsoDetailsResponseInner {
    /*
     * Whether the SSO is enabled for this resource or not.
     */
    @JsonProperty(value = "isSsoEnabled")
    private SsoStatus isSsoEnabled;

    /*
     * URL for Azure AD metadata
     */
    @JsonProperty(value = "metadataUrl")
    private String metadataUrl;

    /*
     * The login URL specific to this Dynatrace Environment
     */
    @JsonProperty(value = "singleSignOnUrl")
    private String singleSignOnUrl;

    /*
     * array of Aad(azure active directory) domains
     */
    @JsonProperty(value = "aadDomains")
    private List<String> aadDomains;

    /*
     * Array of admin user emails.
     */
    @JsonProperty(value = "adminUsers")
    private List<String> adminUsers;

    /**
     * Get the isSsoEnabled property: Whether the SSO is enabled for this resource or not.
     *
     * @return the isSsoEnabled value.
     */
    public SsoStatus isSsoEnabled() {
        return this.isSsoEnabled;
    }

    /**
     * Set the isSsoEnabled property: Whether the SSO is enabled for this resource or not.
     *
     * @param isSsoEnabled the isSsoEnabled value to set.
     * @return the SsoDetailsResponseInner object itself.
     */
    public SsoDetailsResponseInner withIsSsoEnabled(SsoStatus isSsoEnabled) {
        this.isSsoEnabled = isSsoEnabled;
        return this;
    }

    /**
     * Get the metadataUrl property: URL for Azure AD metadata.
     *
     * @return the metadataUrl value.
     */
    public String metadataUrl() {
        return this.metadataUrl;
    }

    /**
     * Set the metadataUrl property: URL for Azure AD metadata.
     *
     * @param metadataUrl the metadataUrl value to set.
     * @return the SsoDetailsResponseInner object itself.
     */
    public SsoDetailsResponseInner withMetadataUrl(String metadataUrl) {
        this.metadataUrl = metadataUrl;
        return this;
    }

    /**
     * Get the singleSignOnUrl property: The login URL specific to this Dynatrace Environment.
     *
     * @return the singleSignOnUrl value.
     */
    public String singleSignOnUrl() {
        return this.singleSignOnUrl;
    }

    /**
     * Set the singleSignOnUrl property: The login URL specific to this Dynatrace Environment.
     *
     * @param singleSignOnUrl the singleSignOnUrl value to set.
     * @return the SsoDetailsResponseInner object itself.
     */
    public SsoDetailsResponseInner withSingleSignOnUrl(String singleSignOnUrl) {
        this.singleSignOnUrl = singleSignOnUrl;
        return this;
    }

    /**
     * Get the aadDomains property: array of Aad(azure active directory) domains.
     *
     * @return the aadDomains value.
     */
    public List<String> aadDomains() {
        return this.aadDomains;
    }

    /**
     * Set the aadDomains property: array of Aad(azure active directory) domains.
     *
     * @param aadDomains the aadDomains value to set.
     * @return the SsoDetailsResponseInner object itself.
     */
    public SsoDetailsResponseInner withAadDomains(List<String> aadDomains) {
        this.aadDomains = aadDomains;
        return this;
    }

    /**
     * Get the adminUsers property: Array of admin user emails.
     *
     * @return the adminUsers value.
     */
    public List<String> adminUsers() {
        return this.adminUsers;
    }

    /**
     * Set the adminUsers property: Array of admin user emails.
     *
     * @param adminUsers the adminUsers value to set.
     * @return the SsoDetailsResponseInner object itself.
     */
    public SsoDetailsResponseInner withAdminUsers(List<String> adminUsers) {
        this.adminUsers = adminUsers;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
