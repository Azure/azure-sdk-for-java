// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dynatrace.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Response of get metrics status operation.
 */
@Fluent
public final class MetricsStatusResponseInner implements JsonSerializable<MetricsStatusResponseInner> {
    /*
     * Azure resource IDs
     */
    private List<String> azureResourceIds;

    /**
     * Creates an instance of MetricsStatusResponseInner class.
     */
    public MetricsStatusResponseInner() {
    }

    /**
     * Get the azureResourceIds property: Azure resource IDs.
     * 
     * @return the azureResourceIds value.
     */
    public List<String> azureResourceIds() {
        return this.azureResourceIds;
    }

    /**
     * Set the azureResourceIds property: Azure resource IDs.
     * 
     * @param azureResourceIds the azureResourceIds value to set.
     * @return the MetricsStatusResponseInner object itself.
     */
    public MetricsStatusResponseInner withAzureResourceIds(List<String> azureResourceIds) {
        this.azureResourceIds = azureResourceIds;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("azureResourceIds", this.azureResourceIds,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MetricsStatusResponseInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MetricsStatusResponseInner if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the MetricsStatusResponseInner.
     */
    public static MetricsStatusResponseInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MetricsStatusResponseInner deserializedMetricsStatusResponseInner = new MetricsStatusResponseInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("azureResourceIds".equals(fieldName)) {
                    List<String> azureResourceIds = reader.readArray(reader1 -> reader1.getString());
                    deserializedMetricsStatusResponseInner.azureResourceIds = azureResourceIds;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMetricsStatusResponseInner;
        });
    }
}
