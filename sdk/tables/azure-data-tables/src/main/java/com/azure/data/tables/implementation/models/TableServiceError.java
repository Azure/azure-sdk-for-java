// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.data.tables.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.xml.XmlReader;
import com.azure.xml.XmlSerializable;
import com.azure.xml.XmlToken;
import com.azure.xml.XmlWriter;
import javax.xml.namespace.QName;
import javax.xml.stream.XMLStreamException;

/** Table Service error. */
@Fluent
public final class TableServiceError implements XmlSerializable<TableServiceError> {
    /*
     * The error message.
     */
    private String message;

    /** Creates an instance of TableServiceError class. */
    public TableServiceError() {}

    /**
     * Get the message property: The error message.
     *
     * @return the message value.
     */
    public String getMessage() {
        return this.message;
    }

    /**
     * Set the message property: The error message.
     *
     * @param message the message value to set.
     * @return the TableServiceError object itself.
     */
    public TableServiceError setMessage(String message) {
        this.message = message;
        return this;
    }

    @Override
    public XmlWriter toXml(XmlWriter xmlWriter) throws XMLStreamException {
        xmlWriter.writeStartElement("TableServiceError");
        xmlWriter.writeStringElement("Message", this.message);
        return xmlWriter.writeEndElement();
    }

    /**
     * Reads an instance of TableServiceError from the XmlReader.
     *
     * @param xmlReader The XmlReader being read.
     * @return An instance of TableServiceError if the XmlReader was pointing to an instance of it, or null if it was
     *     pointing to XML null.
     */
    public static TableServiceError fromXml(XmlReader xmlReader) throws XMLStreamException {
        return xmlReader.readObject(
                "TableServiceError",
                reader -> {
                    String message = null;
                    while (reader.nextElement() != XmlToken.END_ELEMENT) {
                        QName fieldName = reader.getElementName();

                        if ("Message".equals(fieldName.getLocalPart())) {
                            message = reader.getStringElement();
                        } else {
                            reader.skipElement();
                        }
                    }
                    TableServiceError deserializedTableServiceError = new TableServiceError();
                    deserializedTableServiceError.message = message;

                    return deserializedTableServiceError;
                });
    }
}
