// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hardwaresecuritymodules.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.hardwaresecuritymodules.models.PrivateEndpoint;
import com.azure.resourcemanager.hardwaresecuritymodules.models.PrivateEndpointConnectionProperties;
import com.azure.resourcemanager.hardwaresecuritymodules.models.PrivateEndpointServiceConnectionStatus;
import com.azure.resourcemanager.hardwaresecuritymodules.models.PrivateLinkServiceConnectionState;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionInner model = BinaryData.fromString(
            "{\"properties\":{\"privateEndpoint\":{\"id\":\"jjxhvpmo\"},\"privateLinkServiceConnectionState\":{\"status\":\"Rejected\",\"description\":\"dzxibqeojnxqbzvd\",\"actionsRequired\":\"t\"},\"provisioningState\":\"Failed\",\"groupIds\":[\"cbtwnpzaoqvuh\",\"hcffcyddglmjthjq\",\"wpyeicxmqciwqvh\"]},\"etag\":\"ixuigdtopbobj\",\"id\":\"hm\",\"name\":\"w\",\"type\":\"a\"}")
            .toObject(PrivateEndpointConnectionInner.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.REJECTED,
            model.properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("dzxibqeojnxqbzvd",
            model.properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("t", model.properties().privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("ixuigdtopbobj", model.etag());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionInner model
            = new PrivateEndpointConnectionInner()
                .withProperties(new PrivateEndpointConnectionProperties().withPrivateEndpoint(new PrivateEndpoint())
                    .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                        .withStatus(PrivateEndpointServiceConnectionStatus.REJECTED)
                        .withDescription("dzxibqeojnxqbzvd")
                        .withActionsRequired("t")))
                .withEtag("ixuigdtopbobj");
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionInner.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.REJECTED,
            model.properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("dzxibqeojnxqbzvd",
            model.properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("t", model.properties().privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("ixuigdtopbobj", model.etag());
    }
}
