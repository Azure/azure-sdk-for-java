// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hardwaresecuritymodules.fluent.models.DedicatedHsmInner;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ApiEntityReference;
import com.azure.resourcemanager.hardwaresecuritymodules.models.DedicatedHsmListResult;
import com.azure.resourcemanager.hardwaresecuritymodules.models.DedicatedHsmProperties;
import com.azure.resourcemanager.hardwaresecuritymodules.models.NetworkInterface;
import com.azure.resourcemanager.hardwaresecuritymodules.models.NetworkProfile;
import com.azure.resourcemanager.hardwaresecuritymodules.models.Sku;
import com.azure.resourcemanager.hardwaresecuritymodules.models.SkuName;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class DedicatedHsmListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DedicatedHsmListResult model = BinaryData.fromString(
            "{\"value\":[{\"sku\":{\"name\":\"payShield10K_LMK2_CPS60\"},\"zones\":[\"vah\",\"pjyzhpv\"],\"properties\":{\"networkProfile\":{\"subnet\":{\"resourceId\":\"j\"},\"networkInterfaces\":[{},{},{}]},\"managementNetworkProfile\":{\"subnet\":{\"resourceId\":\"lmwlxkvugfhzo\"},\"networkInterfaces\":[{},{},{}]},\"stampId\":\"vzunluthnnprnxi\",\"statusMessage\":\"ilpjzuaejxdult\",\"provisioningState\":\"Allocating\"},\"location\":\"btdzumveekg\",\"tags\":{\"xl\":\"zuhkfpbsjyof\",\"ttouwaboekqvkel\":\"us\"},\"id\":\"smv\",\"name\":\"xwyjsflhhc\",\"type\":\"aln\"},{\"sku\":{\"name\":\"payShield10K_LMK2_CPS250\"},\"zones\":[\"xyawj\",\"yaqcslyjpkiidz\",\"exznelixhnr\"],\"properties\":{\"networkProfile\":{\"subnet\":{\"resourceId\":\"lhbnxkna\"},\"networkInterfaces\":[{},{},{},{}]},\"managementNetworkProfile\":{\"subnet\":{\"resourceId\":\"ggdtpnapnyiro\"},\"networkInterfaces\":[{},{}]},\"stampId\":\"igvpgylg\",\"statusMessage\":\"itxmedjvcslynqww\",\"provisioningState\":\"Connecting\"},\"location\":\"zhxgktrmgucn\",\"tags\":{\"oellwp\":\"t\"},\"id\":\"fdygpfqbuaceopz\",\"name\":\"qrhhu\",\"type\":\"opppcqeq\"},{\"sku\":{\"name\":\"payShield10K_LMK2_CPS60\"},\"zones\":[\"ahzxctobgbk\",\"moizpos\",\"mgrcfbu\"],\"properties\":{\"networkProfile\":{\"subnet\":{\"resourceId\":\"qjhhkxbpv\"},\"networkInterfaces\":[{}]},\"managementNetworkProfile\":{\"subnet\":{\"resourceId\":\"xjyngudivk\"},\"networkInterfaces\":[{},{}]},\"stampId\":\"bxqz\",\"statusMessage\":\"zjf\",\"provisioningState\":\"CheckingQuota\"},\"location\":\"fdxxivetvtcqaqtd\",\"tags\":{\"fxoblytkb\":\"cbxvwvxyslqbh\",\"wfbkrvrns\":\"mpew\",\"vasrruvwb\":\"shqjohxcrsbf\"},\"id\":\"sqfsubcgjbirxb\",\"name\":\"ybsrfbjfdtwss\",\"type\":\"t\"}],\"nextLink\":\"pvjzbe\"}")
            .toObject(DedicatedHsmListResult.class);
        Assertions.assertEquals("btdzumveekg", model.value().get(0).location());
        Assertions.assertEquals("zuhkfpbsjyof", model.value().get(0).tags().get("xl"));
        Assertions.assertEquals(SkuName.PAY_SHIELD10K_LMK2_CPS60, model.value().get(0).sku().name());
        Assertions.assertEquals("vah", model.value().get(0).zones().get(0));
        Assertions.assertEquals("j", model.value().get(0).properties().networkProfile().subnet().resourceId());
        Assertions.assertEquals("lmwlxkvugfhzo",
            model.value().get(0).properties().managementNetworkProfile().subnet().resourceId());
        Assertions.assertEquals("vzunluthnnprnxi", model.value().get(0).properties().stampId());
        Assertions.assertEquals("pvjzbe", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DedicatedHsmListResult model
            = new DedicatedHsmListResult().withValue(Arrays.asList(
                new DedicatedHsmInner()
                    .withLocation("btdzumveekg")
                    .withTags(mapOf("xl", "zuhkfpbsjyof", "ttouwaboekqvkel", "us"))
                    .withSku(new Sku().withName(SkuName.PAY_SHIELD10K_LMK2_CPS60))
                    .withZones(Arrays.asList("vah", "pjyzhpv"))
                    .withProperties(new DedicatedHsmProperties()
                        .withNetworkProfile(
                            new NetworkProfile().withSubnet(new ApiEntityReference().withResourceId("j"))
                                .withNetworkInterfaces(Arrays.asList(new NetworkInterface(), new NetworkInterface(),
                                    new NetworkInterface())))
                        .withManagementNetworkProfile(
                            new NetworkProfile().withSubnet(new ApiEntityReference().withResourceId("lmwlxkvugfhzo"))
                                .withNetworkInterfaces(Arrays.asList(new NetworkInterface(), new NetworkInterface(),
                                    new NetworkInterface())))
                        .withStampId("vzunluthnnprnxi")),
                new DedicatedHsmInner().withLocation("zhxgktrmgucn")
                    .withTags(mapOf("oellwp", "t"))
                    .withSku(new Sku().withName(SkuName.PAY_SHIELD10K_LMK2_CPS250))
                    .withZones(Arrays.asList("xyawj", "yaqcslyjpkiidz", "exznelixhnr"))
                    .withProperties(new DedicatedHsmProperties()
                        .withNetworkProfile(
                            new NetworkProfile().withSubnet(new ApiEntityReference().withResourceId("lhbnxkna"))
                                .withNetworkInterfaces(Arrays.asList(new NetworkInterface(), new NetworkInterface(),
                                    new NetworkInterface(), new NetworkInterface())))
                        .withManagementNetworkProfile(
                            new NetworkProfile().withSubnet(new ApiEntityReference().withResourceId("ggdtpnapnyiro"))
                                .withNetworkInterfaces(Arrays.asList(new NetworkInterface(), new NetworkInterface())))
                        .withStampId("igvpgylg")),
                new DedicatedHsmInner().withLocation("fdxxivetvtcqaqtd")
                    .withTags(mapOf("fxoblytkb", "cbxvwvxyslqbh", "wfbkrvrns", "mpew", "vasrruvwb", "shqjohxcrsbf"))
                    .withSku(new Sku().withName(SkuName.PAY_SHIELD10K_LMK2_CPS60))
                    .withZones(Arrays.asList("ahzxctobgbk", "moizpos", "mgrcfbu"))
                    .withProperties(new DedicatedHsmProperties()
                        .withNetworkProfile(
                            new NetworkProfile().withSubnet(new ApiEntityReference().withResourceId("qjhhkxbpv"))
                                .withNetworkInterfaces(Arrays.asList(new NetworkInterface())))
                        .withManagementNetworkProfile(
                            new NetworkProfile().withSubnet(new ApiEntityReference().withResourceId("xjyngudivk"))
                                .withNetworkInterfaces(Arrays.asList(new NetworkInterface(), new NetworkInterface())))
                        .withStampId("bxqz"))))
                .withNextLink("pvjzbe");
        model = BinaryData.fromObject(model).toObject(DedicatedHsmListResult.class);
        Assertions.assertEquals("btdzumveekg", model.value().get(0).location());
        Assertions.assertEquals("zuhkfpbsjyof", model.value().get(0).tags().get("xl"));
        Assertions.assertEquals(SkuName.PAY_SHIELD10K_LMK2_CPS60, model.value().get(0).sku().name());
        Assertions.assertEquals("vah", model.value().get(0).zones().get(0));
        Assertions.assertEquals("j", model.value().get(0).properties().networkProfile().subnet().resourceId());
        Assertions.assertEquals("lmwlxkvugfhzo",
            model.value().get(0).properties().managementNetworkProfile().subnet().resourceId());
        Assertions.assertEquals("vzunluthnnprnxi", model.value().get(0).properties().stampId());
        Assertions.assertEquals("pvjzbe", model.nextLink());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
