// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hardwaresecuritymodules.models.DedicatedHsmResource;
import com.azure.resourcemanager.hardwaresecuritymodules.models.Sku;
import com.azure.resourcemanager.hardwaresecuritymodules.models.SkuName;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class DedicatedHsmResourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DedicatedHsmResource model = BinaryData.fromString(
            "{\"sku\":{\"name\":\"SafeNet Luna Network HSM A790\"},\"zones\":[\"iydmcwyhzdxs\",\"adbzmnvdfznud\",\"od\",\"xzb\"],\"location\":\"cblylpstdbhhxsr\",\"tags\":{\"jmygtdsslswtmwer\":\"ucerscdntnevfi\",\"yqsemwa\":\"ofz\",\"tshhszhedp\":\"n\",\"k\":\"vwiwubmwmbesld\"},\"id\":\"wtppjflcxogaoko\",\"name\":\"z\",\"type\":\"nsikvmkqzeqqkdl\"}")
            .toObject(DedicatedHsmResource.class);
        Assertions.assertEquals("cblylpstdbhhxsr", model.location());
        Assertions.assertEquals("ucerscdntnevfi", model.tags().get("jmygtdsslswtmwer"));
        Assertions.assertEquals(SkuName.SAFE_NET_LUNA_NETWORK_HSM_A790, model.sku().name());
        Assertions.assertEquals("iydmcwyhzdxs", model.zones().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DedicatedHsmResource model = new DedicatedHsmResource().withLocation("cblylpstdbhhxsr")
            .withTags(
                mapOf("jmygtdsslswtmwer", "ucerscdntnevfi", "yqsemwa", "ofz", "tshhszhedp", "n", "k", "vwiwubmwmbesld"))
            .withSku(new Sku().withName(SkuName.SAFE_NET_LUNA_NETWORK_HSM_A790))
            .withZones(Arrays.asList("iydmcwyhzdxs", "adbzmnvdfznud", "od", "xzb"));
        model = BinaryData.fromObject(model).toObject(DedicatedHsmResource.class);
        Assertions.assertEquals("cblylpstdbhhxsr", model.location());
        Assertions.assertEquals("ucerscdntnevfi", model.tags().get("jmygtdsslswtmwer"));
        Assertions.assertEquals(SkuName.SAFE_NET_LUNA_NETWORK_HSM_A790, model.sku().name());
        Assertions.assertEquals("iydmcwyhzdxs", model.zones().get(0));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
