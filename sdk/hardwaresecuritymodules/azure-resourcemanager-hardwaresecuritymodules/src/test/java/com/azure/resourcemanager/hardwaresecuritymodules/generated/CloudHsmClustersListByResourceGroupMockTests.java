// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hardwaresecuritymodules.HardwareSecurityModulesManager;
import com.azure.resourcemanager.hardwaresecuritymodules.models.AutoGeneratedDomainNameLabelScope;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmCluster;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSkuFamily;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSkuName;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.hardwaresecuritymodules.models.PublicNetworkAccess;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudHsmClustersListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"activationState\":\"NotActivated\",\"autoGeneratedDomainNameLabelScope\":\"SubscriptionReuse\",\"hsms\":[{\"fqdn\":\"buruvd\",\"state\":\"vsmzlxwab\",\"stateMessage\":\"oefki\"},{\"fqdn\":\"vtpuqujmqlgk\",\"state\":\"tndoaongbjc\",\"stateMessage\":\"ujitcjedftww\"},{\"fqdn\":\"zkoj\",\"state\":\"c\",\"stateMessage\":\"foqouicybx\"}],\"privateEndpointConnections\":[{\"properties\":{\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"Updating\",\"groupIds\":[\"x\",\"iqopidoamciod\",\"khazxkhnzbonlwn\",\"oegokdwbwh\"]},\"etag\":\"z\",\"id\":\"mrv\",\"name\":\"xztvbtqgsfraoyzk\",\"type\":\"owtlmnguxawqald\"}],\"provisioningState\":\"Provisioning\",\"publicNetworkAccess\":\"Disabled\",\"statusMessage\":\"merqfobwyznkb\"},\"identity\":{\"principalId\":\"t\",\"tenantId\":\"fhpagmhrskdsnf\",\"type\":\"None\",\"userAssignedIdentities\":{\"ewpusdsttwvogvb\":{\"principalId\":\"kgtdlmkkze\",\"clientId\":\"l\"},\"rwr\":{\"principalId\":\"jdcngqqm\",\"clientId\":\"kufgmj\"},\"yuhhziu\":{\"principalId\":\"rtwaenuuzko\",\"clientId\":\"minrfdw\"},\"qzpiyyl\":{\"principalId\":\"fozbhdmsmlmzqhof\",\"clientId\":\"maequiahxicslfa\"}}},\"sku\":{\"family\":\"B\",\"name\":\"Standard_B1\",\"capacity\":1111177116},\"location\":\"ccsphkaivwi\",\"tags\":{\"h\":\"cywuggwol\",\"i\":\"zbwemh\",\"wmsweypqwd\":\"sbrgz\",\"mkttlstvlzywem\":\"ggicccnxqhue\"},\"id\":\"zrncsdt\",\"name\":\"lusiy\",\"type\":\"bsfgytguslfea\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HardwareSecurityModulesManager manager = HardwareSecurityModulesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<CloudHsmCluster> response = manager.cloudHsmClusters()
            .listByResourceGroup("aznqntoru", "sgsahmkycgr", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ccsphkaivwi", response.iterator().next().location());
        Assertions.assertEquals("cywuggwol", response.iterator().next().tags().get("h"));
        Assertions.assertEquals(AutoGeneratedDomainNameLabelScope.SUBSCRIPTION_REUSE,
            response.iterator().next().properties().autoGeneratedDomainNameLabelScope());
        Assertions.assertEquals(PublicNetworkAccess.DISABLED,
            response.iterator().next().properties().publicNetworkAccess());
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.iterator().next().identity().type());
        Assertions.assertEquals(CloudHsmClusterSkuFamily.B, response.iterator().next().sku().family());
        Assertions.assertEquals(CloudHsmClusterSkuName.STANDARD_B1, response.iterator().next().sku().name());
        Assertions.assertEquals(1111177116, response.iterator().next().sku().capacity());
    }
}
