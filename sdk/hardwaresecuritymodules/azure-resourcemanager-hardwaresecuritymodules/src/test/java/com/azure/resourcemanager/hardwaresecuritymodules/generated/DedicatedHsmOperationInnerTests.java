// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hardwaresecuritymodules.fluent.models.DedicatedHsmOperationInner;
import com.azure.resourcemanager.hardwaresecuritymodules.models.DedicatedHsmOperationDisplay;
import org.junit.jupiter.api.Assertions;

public final class DedicatedHsmOperationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DedicatedHsmOperationInner model = BinaryData.fromString(
            "{\"name\":\"itjz\",\"isDataAction\":false,\"origin\":\"sarhmofc\",\"display\":{\"provider\":\"my\",\"resource\":\"kdtmlxhekuk\",\"operation\":\"txukcdmp\",\"description\":\"cryuan\"}}")
            .toObject(DedicatedHsmOperationInner.class);
        Assertions.assertEquals("itjz", model.name());
        Assertions.assertEquals("sarhmofc", model.origin());
        Assertions.assertEquals("my", model.display().provider());
        Assertions.assertEquals("kdtmlxhekuk", model.display().resource());
        Assertions.assertEquals("txukcdmp", model.display().operation());
        Assertions.assertEquals("cryuan", model.display().description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DedicatedHsmOperationInner model = new DedicatedHsmOperationInner().withName("itjz")
            .withOrigin("sarhmofc")
            .withDisplay(new DedicatedHsmOperationDisplay().withProvider("my")
                .withResource("kdtmlxhekuk")
                .withOperation("txukcdmp")
                .withDescription("cryuan"));
        model = BinaryData.fromObject(model).toObject(DedicatedHsmOperationInner.class);
        Assertions.assertEquals("itjz", model.name());
        Assertions.assertEquals("sarhmofc", model.origin());
        Assertions.assertEquals("my", model.display().provider());
        Assertions.assertEquals("kdtmlxhekuk", model.display().resource());
        Assertions.assertEquals("txukcdmp", model.display().operation());
        Assertions.assertEquals("cryuan", model.display().description());
    }
}
