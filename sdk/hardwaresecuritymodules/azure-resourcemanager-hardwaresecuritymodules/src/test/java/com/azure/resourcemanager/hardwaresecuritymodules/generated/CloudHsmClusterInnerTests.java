// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hardwaresecuritymodules.fluent.models.CloudHsmClusterInner;
import com.azure.resourcemanager.hardwaresecuritymodules.models.AutoGeneratedDomainNameLabelScope;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterProperties;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSku;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSkuFamily;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSkuName;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ManagedServiceIdentity;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.hardwaresecuritymodules.models.PublicNetworkAccess;
import com.azure.resourcemanager.hardwaresecuritymodules.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class CloudHsmClusterInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CloudHsmClusterInner model = BinaryData.fromString(
            "{\"properties\":{\"activationState\":\"Failed\",\"autoGeneratedDomainNameLabelScope\":\"NoReuse\",\"hsms\":[{\"fqdn\":\"nwzsymg\",\"state\":\"uf\",\"stateMessage\":\"zk\"}],\"privateEndpointConnections\":[{\"properties\":{\"privateEndpoint\":{\"id\":\"anufhfcbjysag\"},\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"qhabifpikxwcz\",\"actionsRequired\":\"scnpqxuhivy\"},\"provisioningState\":\"Creating\",\"groupIds\":[\"ybrk\"]},\"etag\":\"dumjgrtfwvuk\",\"id\":\"audccsnhs\",\"name\":\"cnyejhkryhtnapcz\",\"type\":\"lokjyemkk\"},{\"properties\":{\"privateEndpoint\":{\"id\":\"joxzjnchgejspodm\"},\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"ydehoj\",\"actionsRequired\":\"ahuxinpm\"},\"provisioningState\":\"Creating\",\"groupIds\":[\"wixjsprozvcp\",\"tegjvwmf\",\"atscmd\"]},\"etag\":\"jhulsuuvmkjo\",\"id\":\"rwfndiod\",\"name\":\"pslwejdpvw\",\"type\":\"yoqpsoaccta\"},{\"properties\":{\"privateEndpoint\":{\"id\":\"j\"},\"privateLinkServiceConnectionState\":{\"status\":\"Pending\",\"description\":\"cr\",\"actionsRequired\":\"fdfdosygexpa\"},\"provisioningState\":\"Creating\",\"groupIds\":[\"msbzjhcrz\",\"vdphlxaolthqtr\",\"qjbpfzfsin\",\"gvfcj\"]},\"etag\":\"zoxxjtf\",\"id\":\"luwfzitonpeqfpjk\",\"name\":\"lxofpdvhpfxxypin\",\"type\":\"nmayhuybb\"},{\"properties\":{\"privateEndpoint\":{\"id\":\"epoo\"},\"privateLinkServiceConnectionState\":{\"status\":\"Rejected\",\"description\":\"vamih\",\"actionsRequired\":\"gnarxzxtheo\"},\"provisioningState\":\"Canceled\",\"groupIds\":[\"yevc\",\"iqihn\",\"un\"]},\"etag\":\"wjzrnfygxgisp\",\"id\":\"vtz\",\"name\":\"kufubljo\",\"type\":\"xqeofjaeqjhqjba\"}],\"provisioningState\":\"Succeeded\",\"publicNetworkAccess\":\"Disabled\",\"statusMessage\":\"qulngsntnbybkzgc\"},\"identity\":{\"principalId\":\"clxxwrljdo\",\"tenantId\":\"kcqvkocrc\",\"type\":\"None\",\"userAssignedIdentities\":{\"p\":{\"principalId\":\"nh\",\"clientId\":\"njbiksqrglssain\"},\"bvmgxsabkyqduuji\":{\"principalId\":\"nzl\",\"clientId\":\"fmppe\"},\"rwjfe\":{\"principalId\":\"jczdzevndh\",\"clientId\":\"wpdappdsbdkv\"},\"phut\":{\"principalId\":\"nhutjeltmrldhugj\",\"clientId\":\"datqxhocdgeabl\"}}},\"sku\":{\"family\":\"B\",\"name\":\"Standard_B1\",\"capacity\":680331954},\"location\":\"ozwyiftyhxhuro\",\"tags\":{\"cukjf\":\"yxolniwp\",\"lryplwckbasyy\":\"giawx\",\"jkot\":\"nddhsgcbacph\"},\"id\":\"nqgoulzndli\",\"name\":\"wyqkgfgibm\",\"type\":\"dgak\"}")
            .toObject(CloudHsmClusterInner.class);
        Assertions.assertEquals("ozwyiftyhxhuro", model.location());
        Assertions.assertEquals("yxolniwp", model.tags().get("cukjf"));
        Assertions.assertEquals(AutoGeneratedDomainNameLabelScope.NO_REUSE,
            model.properties().autoGeneratedDomainNameLabelScope());
        Assertions.assertEquals(PublicNetworkAccess.DISABLED, model.properties().publicNetworkAccess());
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
        Assertions.assertEquals(CloudHsmClusterSkuFamily.B, model.sku().family());
        Assertions.assertEquals(CloudHsmClusterSkuName.STANDARD_B1, model.sku().name());
        Assertions.assertEquals(680331954, model.sku().capacity());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CloudHsmClusterInner model = new CloudHsmClusterInner().withLocation("ozwyiftyhxhuro")
            .withTags(mapOf("cukjf", "yxolniwp", "lryplwckbasyy", "giawx", "jkot", "nddhsgcbacph"))
            .withProperties(new CloudHsmClusterProperties()
                .withAutoGeneratedDomainNameLabelScope(AutoGeneratedDomainNameLabelScope.NO_REUSE)
                .withPublicNetworkAccess(PublicNetworkAccess.DISABLED))
            .withIdentity(new ManagedServiceIdentity().withType(ManagedServiceIdentityType.NONE)
                .withUserAssignedIdentities(
                    mapOf("p", new UserAssignedIdentity(), "bvmgxsabkyqduuji", new UserAssignedIdentity(), "rwjfe",
                        new UserAssignedIdentity(), "phut", new UserAssignedIdentity())))
            .withSku(new CloudHsmClusterSku().withFamily(CloudHsmClusterSkuFamily.B)
                .withName(CloudHsmClusterSkuName.STANDARD_B1)
                .withCapacity(680331954));
        model = BinaryData.fromObject(model).toObject(CloudHsmClusterInner.class);
        Assertions.assertEquals("ozwyiftyhxhuro", model.location());
        Assertions.assertEquals("yxolniwp", model.tags().get("cukjf"));
        Assertions.assertEquals(AutoGeneratedDomainNameLabelScope.NO_REUSE,
            model.properties().autoGeneratedDomainNameLabelScope());
        Assertions.assertEquals(PublicNetworkAccess.DISABLED, model.properties().publicNetworkAccess());
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
        Assertions.assertEquals(CloudHsmClusterSkuFamily.B, model.sku().family());
        Assertions.assertEquals(CloudHsmClusterSkuName.STANDARD_B1, model.sku().name());
        Assertions.assertEquals(680331954, model.sku().capacity());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
