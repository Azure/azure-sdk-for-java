// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hardwaresecuritymodules.fluent.models.CloudHsmClusterInner;
import com.azure.resourcemanager.hardwaresecuritymodules.models.AutoGeneratedDomainNameLabelScope;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterProperties;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSku;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSkuFamily;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSkuName;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ManagedServiceIdentity;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.hardwaresecuritymodules.models.PublicNetworkAccess;
import com.azure.resourcemanager.hardwaresecuritymodules.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class CloudHsmClusterInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CloudHsmClusterInner model = BinaryData.fromString(
            "{\"properties\":{\"activationState\":\"NotDefined\",\"autoGeneratedDomainNameLabelScope\":\"TenantReuse\",\"hsms\":[{\"fqdn\":\"xpyb\",\"state\":\"m\",\"stateMessage\":\"mtz\"},{\"fqdn\":\"bsphrupidgsybbe\",\"state\":\"ph\",\"stateMessage\":\"cmsxaobhdxbm\"},{\"fqdn\":\"ioq\",\"state\":\"ehtbm\",\"stateMessage\":\"p\"},{\"fqdn\":\"noi\",\"state\":\"wlrxyb\",\"stateMessage\":\"oqijgkdmbpaz\"}],\"privateEndpointConnections\":[{\"properties\":{\"privateEndpoint\":{\"id\":\"pdznrbtcqqjnqgl\"},\"privateLinkServiceConnectionState\":{\"status\":\"Pending\",\"description\":\"ufo\",\"actionsRequired\":\"jywif\"},\"provisioningState\":\"Updating\",\"groupIds\":[\"agdfmglzlh\",\"xrifkwmrvkts\"]},\"etag\":\"nt\",\"id\":\"ipa\",\"name\":\"uajpsquc\",\"type\":\"poyfdkfogkn\"}],\"provisioningState\":\"Provisioning\",\"publicNetworkAccess\":\"Disabled\",\"statusMessage\":\"ddeqsrdeupewnwre\"},\"identity\":{\"principalId\":\"c03860f2-85e4-49fc-838d-c1be1f474550\",\"tenantId\":\"a0cb8f67-decb-4235-aa37-ec79298ea115\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"arhmofcqhsmy\":{\"principalId\":\"d6126a9e-5d42-4441-8c65-2fc05557dd8e\",\"clientId\":\"6ad160de-cdae-452e-b3ec-fb5fbcc04452\"},\"dtmlxhekuksjt\":{\"principalId\":\"b1994d32-5467-4e42-81a6-5f9682e94cec\",\"clientId\":\"e04a4f00-9224-43da-9275-6fc12b7e09b6\"}}},\"sku\":{\"family\":\"B\",\"name\":\"Standard_B1\",\"capacity\":857832438},\"location\":\"arcryuanzwuxzdxt\",\"tags\":{\"u\":\"lhmwhfpmrqobm\"},\"id\":\"knryrtihfxtij\",\"name\":\"pzvgnwzsymglzufc\",\"type\":\"zk\"}")
            .toObject(CloudHsmClusterInner.class);
        Assertions.assertEquals("arcryuanzwuxzdxt", model.location());
        Assertions.assertEquals("lhmwhfpmrqobm", model.tags().get("u"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals(CloudHsmClusterSkuFamily.B, model.sku().family());
        Assertions.assertEquals(CloudHsmClusterSkuName.STANDARD_B1, model.sku().name());
        Assertions.assertEquals(857832438, model.sku().capacity());
        Assertions.assertEquals(AutoGeneratedDomainNameLabelScope.TENANT_REUSE,
            model.properties().autoGeneratedDomainNameLabelScope());
        Assertions.assertEquals(PublicNetworkAccess.DISABLED, model.properties().publicNetworkAccess());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CloudHsmClusterInner model = new CloudHsmClusterInner().withLocation("arcryuanzwuxzdxt")
            .withTags(mapOf("u", "lhmwhfpmrqobm"))
            .withIdentity(new ManagedServiceIdentity().withType(ManagedServiceIdentityType.USER_ASSIGNED)
                .withUserAssignedIdentities(
                    mapOf("arhmofcqhsmy", new UserAssignedIdentity(), "dtmlxhekuksjt", new UserAssignedIdentity())))
            .withSku(new CloudHsmClusterSku().withFamily(CloudHsmClusterSkuFamily.B)
                .withName(CloudHsmClusterSkuName.STANDARD_B1)
                .withCapacity(857832438))
            .withProperties(new CloudHsmClusterProperties()
                .withAutoGeneratedDomainNameLabelScope(AutoGeneratedDomainNameLabelScope.TENANT_REUSE)
                .withPublicNetworkAccess(PublicNetworkAccess.DISABLED));
        model = BinaryData.fromObject(model).toObject(CloudHsmClusterInner.class);
        Assertions.assertEquals("arcryuanzwuxzdxt", model.location());
        Assertions.assertEquals("lhmwhfpmrqobm", model.tags().get("u"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals(CloudHsmClusterSkuFamily.B, model.sku().family());
        Assertions.assertEquals(CloudHsmClusterSkuName.STANDARD_B1, model.sku().name());
        Assertions.assertEquals(857832438, model.sku().capacity());
        Assertions.assertEquals(AutoGeneratedDomainNameLabelScope.TENANT_REUSE,
            model.properties().autoGeneratedDomainNameLabelScope());
        Assertions.assertEquals(PublicNetworkAccess.DISABLED, model.properties().publicNetworkAccess());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
