// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hardwaresecuritymodules.fluent.models.CloudHsmClusterInner;
import com.azure.resourcemanager.hardwaresecuritymodules.models.AutoGeneratedDomainNameLabelScope;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterProperties;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSku;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSkuFamily;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSkuName;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ManagedServiceIdentity;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.hardwaresecuritymodules.models.PublicNetworkAccess;
import com.azure.resourcemanager.hardwaresecuritymodules.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class CloudHsmClusterInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CloudHsmClusterInner model = BinaryData.fromString(
            "{\"properties\":{\"activationState\":\"NotDefined\",\"autoGeneratedDomainNameLabelScope\":\"TenantReuse\",\"hsms\":[{\"fqdn\":\"xpyb\",\"state\":\"m\",\"stateMessage\":\"mtz\"},{\"fqdn\":\"bsphrupidgsybbe\",\"state\":\"ph\",\"stateMessage\":\"cmsxaobhdxbm\"},{\"fqdn\":\"ioq\",\"state\":\"ehtbm\",\"stateMessage\":\"p\"},{\"fqdn\":\"noi\",\"state\":\"wlrxyb\",\"stateMessage\":\"oqijgkdmbpaz\"}],\"privateEndpointConnections\":[{\"properties\":{\"privateEndpoint\":{\"id\":\"pdznrbtcqqjnqgl\"},\"privateLinkServiceConnectionState\":{\"status\":\"Pending\",\"description\":\"ufo\",\"actionsRequired\":\"jywif\"},\"provisioningState\":\"Updating\",\"groupIds\":[\"agdfmglzlh\",\"xrifkwmrvkts\"]},\"etag\":\"nt\",\"id\":\"ipa\",\"name\":\"uajpsquc\",\"type\":\"poyfdkfogkn\"}],\"provisioningState\":\"Provisioning\",\"publicNetworkAccess\":\"Disabled\",\"statusMessage\":\"ddeqsrdeupewnwre\"},\"identity\":{\"principalId\":\"28d73b18-1b2b-4c37-8d7a-46c68a628b66\",\"tenantId\":\"c0104a28-ce7e-4c73-a5a7-976e90ed6e43\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"arhmofcqhsmy\":{\"principalId\":\"88b41e97-fb13-45b5-bd46-a89ea029ba86\",\"clientId\":\"9d5f7d0b-73ba-4713-96b3-846c643f71c9\"},\"dtmlxhekuksjt\":{\"principalId\":\"67b17c8f-1dda-4a46-b583-55129c898224\",\"clientId\":\"80094191-23ef-4c29-94f2-387f1204c5cc\"}}},\"sku\":{\"family\":\"B\",\"name\":\"Standard_B1\",\"capacity\":857832438},\"location\":\"arcryuanzwuxzdxt\",\"tags\":{\"u\":\"lhmwhfpmrqobm\"},\"id\":\"knryrtihfxtij\",\"name\":\"pzvgnwzsymglzufc\",\"type\":\"zk\"}")
            .toObject(CloudHsmClusterInner.class);
        Assertions.assertEquals("arcryuanzwuxzdxt", model.location());
        Assertions.assertEquals("lhmwhfpmrqobm", model.tags().get("u"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals(CloudHsmClusterSkuFamily.B, model.sku().family());
        Assertions.assertEquals(CloudHsmClusterSkuName.STANDARD_B1, model.sku().name());
        Assertions.assertEquals(857832438, model.sku().capacity());
        Assertions.assertEquals(AutoGeneratedDomainNameLabelScope.TENANT_REUSE,
            model.properties().autoGeneratedDomainNameLabelScope());
        Assertions.assertEquals(PublicNetworkAccess.DISABLED, model.properties().publicNetworkAccess());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CloudHsmClusterInner model = new CloudHsmClusterInner().withLocation("arcryuanzwuxzdxt")
            .withTags(mapOf("u", "lhmwhfpmrqobm"))
            .withIdentity(new ManagedServiceIdentity().withType(ManagedServiceIdentityType.USER_ASSIGNED)
                .withUserAssignedIdentities(
                    mapOf("arhmofcqhsmy", new UserAssignedIdentity(), "dtmlxhekuksjt", new UserAssignedIdentity())))
            .withSku(new CloudHsmClusterSku().withFamily(CloudHsmClusterSkuFamily.B)
                .withName(CloudHsmClusterSkuName.STANDARD_B1)
                .withCapacity(857832438))
            .withProperties(new CloudHsmClusterProperties()
                .withAutoGeneratedDomainNameLabelScope(AutoGeneratedDomainNameLabelScope.TENANT_REUSE)
                .withPublicNetworkAccess(PublicNetworkAccess.DISABLED));
        model = BinaryData.fromObject(model).toObject(CloudHsmClusterInner.class);
        Assertions.assertEquals("arcryuanzwuxzdxt", model.location());
        Assertions.assertEquals("lhmwhfpmrqobm", model.tags().get("u"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals(CloudHsmClusterSkuFamily.B, model.sku().family());
        Assertions.assertEquals(CloudHsmClusterSkuName.STANDARD_B1, model.sku().name());
        Assertions.assertEquals(857832438, model.sku().capacity());
        Assertions.assertEquals(AutoGeneratedDomainNameLabelScope.TENANT_REUSE,
            model.properties().autoGeneratedDomainNameLabelScope());
        Assertions.assertEquals(PublicNetworkAccess.DISABLED, model.properties().publicNetworkAccess());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
