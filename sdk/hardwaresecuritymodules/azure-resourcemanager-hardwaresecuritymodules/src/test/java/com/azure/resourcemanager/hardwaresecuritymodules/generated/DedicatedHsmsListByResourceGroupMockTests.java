// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hardwaresecuritymodules.HardwareSecurityModulesManager;
import com.azure.resourcemanager.hardwaresecuritymodules.models.DedicatedHsm;
import com.azure.resourcemanager.hardwaresecuritymodules.models.SkuName;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DedicatedHsmsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"sku\":{\"name\":\"payShield10K_LMK2_CPS250\"},\"zones\":[\"oi\",\"qukrydxt\",\"mieoxorgguf\",\"yaomtb\"],\"properties\":{\"networkProfile\":{\"subnet\":{\"resourceId\":\"vgrvkffo\"},\"networkInterfaces\":[{\"resourceId\":\"pjbi\",\"privateIpAddress\":\"jmfxumvf\"}]},\"managementNetworkProfile\":{\"subnet\":{\"resourceId\":\"ovwxnbkfezzxsc\"},\"networkInterfaces\":[{\"resourceId\":\"dgirujbzbom\",\"privateIpAddress\":\"zbtd\"},{\"resourceId\":\"vp\",\"privateIpAddress\":\"yujviylwdshfssn\"},{\"resourceId\":\"gy\",\"privateIpAddress\":\"rymsgaojfmw\"}]},\"stampId\":\"otmrfhir\",\"statusMessage\":\"ymoxoftpipiwyczu\",\"provisioningState\":\"Allocating\"},\"location\":\"pqjlihhyusps\",\"tags\":{\"cvpa\":\"dvlmfwdgzxul\",\"zvxurisjnhny\":\"rsre\",\"hu\":\"xifqjzgxm\",\"cesutrgjupauut\":\"lw\"},\"id\":\"woqhihe\",\"name\":\"qg\",\"type\":\"zpnfqntcypsxj\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HardwareSecurityModulesManager manager = HardwareSecurityModulesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<DedicatedHsm> response
            = manager.dedicatedHsms().listByResourceGroup("ejnt", 902595467, com.azure.core.util.Context.NONE);

        Assertions.assertEquals("pqjlihhyusps", response.iterator().next().location());
        Assertions.assertEquals("dvlmfwdgzxul", response.iterator().next().tags().get("cvpa"));
        Assertions.assertEquals(SkuName.PAY_SHIELD10K_LMK2_CPS250, response.iterator().next().sku().name());
        Assertions.assertEquals("oi", response.iterator().next().zones().get(0));
        Assertions.assertEquals("vgrvkffo",
            response.iterator().next().properties().networkProfile().subnet().resourceId());
        Assertions.assertEquals("jmfxumvf",
            response.iterator().next().properties().networkProfile().networkInterfaces().get(0).privateIpAddress());
        Assertions.assertEquals("ovwxnbkfezzxsc",
            response.iterator().next().properties().managementNetworkProfile().subnet().resourceId());
        Assertions.assertEquals("zbtd",
            response.iterator()
                .next()
                .properties()
                .managementNetworkProfile()
                .networkInterfaces()
                .get(0)
                .privateIpAddress());
        Assertions.assertEquals("otmrfhir", response.iterator().next().properties().stampId());
    }
}
