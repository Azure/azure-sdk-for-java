// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hardwaresecuritymodules.fluent.models.DedicatedHsmInner;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ApiEntityReference;
import com.azure.resourcemanager.hardwaresecuritymodules.models.DedicatedHsmProperties;
import com.azure.resourcemanager.hardwaresecuritymodules.models.NetworkInterface;
import com.azure.resourcemanager.hardwaresecuritymodules.models.NetworkProfile;
import com.azure.resourcemanager.hardwaresecuritymodules.models.Sku;
import com.azure.resourcemanager.hardwaresecuritymodules.models.SkuName;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class DedicatedHsmInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DedicatedHsmInner model = BinaryData.fromString(
            "{\"sku\":{\"name\":\"payShield10K_LMK2_CPS60\"},\"zones\":[\"vnotyfjfcnj\",\"k\",\"nxdhbt\",\"kphywpnvjto\"],\"properties\":{\"networkProfile\":{\"subnet\":{\"resourceId\":\"mclfplphoxuscr\"},\"networkInterfaces\":[{\"resourceId\":\"ye\",\"privateIpAddress\":\"bjtazqugxywpmu\"},{\"resourceId\":\"fjz\",\"privateIpAddress\":\"qkqujidsu\"}]},\"managementNetworkProfile\":{\"subnet\":{\"resourceId\":\"bglaocqxtccm\"},\"networkInterfaces\":[{\"resourceId\":\"xy\",\"privateIpAddress\":\"moyrxvwfudwpz\"},{\"resourceId\":\"xhdzhlrqjbhckf\",\"privateIpAddress\":\"hrxsbk\"},{\"resourceId\":\"pycanuzbpz\",\"privateIpAddress\":\"fkuwbcrnwbmehhse\"}]},\"stampId\":\"jusrtslhspk\",\"statusMessage\":\"emaofmxagkvt\",\"provisioningState\":\"Succeeded\"},\"location\":\"qkrhahvljua\",\"tags\":{\"ualaexqpvfadmw\":\"uhcdhm\",\"vgomz\":\"rcrgvx\",\"bnbbeldawkz\":\"fmisg\"},\"id\":\"ali\",\"name\":\"urqhaka\",\"type\":\"hashsfwxosow\"}")
            .toObject(DedicatedHsmInner.class);
        Assertions.assertEquals("qkrhahvljua", model.location());
        Assertions.assertEquals("uhcdhm", model.tags().get("ualaexqpvfadmw"));
        Assertions.assertEquals(SkuName.PAY_SHIELD10K_LMK2_CPS60, model.sku().name());
        Assertions.assertEquals("vnotyfjfcnj", model.zones().get(0));
        Assertions.assertEquals("mclfplphoxuscr", model.properties().networkProfile().subnet().resourceId());
        Assertions.assertEquals("bjtazqugxywpmu",
            model.properties().networkProfile().networkInterfaces().get(0).privateIpAddress());
        Assertions.assertEquals("bglaocqxtccm", model.properties().managementNetworkProfile().subnet().resourceId());
        Assertions.assertEquals("moyrxvwfudwpz",
            model.properties().managementNetworkProfile().networkInterfaces().get(0).privateIpAddress());
        Assertions.assertEquals("jusrtslhspk", model.properties().stampId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DedicatedHsmInner model = new DedicatedHsmInner().withLocation("qkrhahvljua")
            .withTags(mapOf("ualaexqpvfadmw", "uhcdhm", "vgomz", "rcrgvx", "bnbbeldawkz", "fmisg"))
            .withSku(new Sku().withName(SkuName.PAY_SHIELD10K_LMK2_CPS60))
            .withZones(Arrays.asList("vnotyfjfcnj", "k", "nxdhbt", "kphywpnvjto"))
            .withProperties(new DedicatedHsmProperties()
                .withNetworkProfile(new NetworkProfile()
                    .withSubnet(new ApiEntityReference().withResourceId("mclfplphoxuscr"))
                    .withNetworkInterfaces(Arrays.asList(new NetworkInterface().withPrivateIpAddress("bjtazqugxywpmu"),
                        new NetworkInterface().withPrivateIpAddress("qkqujidsu"))))
                .withManagementNetworkProfile(new NetworkProfile()
                    .withSubnet(new ApiEntityReference().withResourceId("bglaocqxtccm"))
                    .withNetworkInterfaces(Arrays.asList(new NetworkInterface().withPrivateIpAddress("moyrxvwfudwpz"),
                        new NetworkInterface().withPrivateIpAddress("hrxsbk"),
                        new NetworkInterface().withPrivateIpAddress("fkuwbcrnwbmehhse"))))
                .withStampId("jusrtslhspk"));
        model = BinaryData.fromObject(model).toObject(DedicatedHsmInner.class);
        Assertions.assertEquals("qkrhahvljua", model.location());
        Assertions.assertEquals("uhcdhm", model.tags().get("ualaexqpvfadmw"));
        Assertions.assertEquals(SkuName.PAY_SHIELD10K_LMK2_CPS60, model.sku().name());
        Assertions.assertEquals("vnotyfjfcnj", model.zones().get(0));
        Assertions.assertEquals("mclfplphoxuscr", model.properties().networkProfile().subnet().resourceId());
        Assertions.assertEquals("bjtazqugxywpmu",
            model.properties().networkProfile().networkInterfaces().get(0).privateIpAddress());
        Assertions.assertEquals("bglaocqxtccm", model.properties().managementNetworkProfile().subnet().resourceId());
        Assertions.assertEquals("moyrxvwfudwpz",
            model.properties().managementNetworkProfile().networkInterfaces().get(0).privateIpAddress());
        Assertions.assertEquals("jusrtslhspk", model.properties().stampId());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
