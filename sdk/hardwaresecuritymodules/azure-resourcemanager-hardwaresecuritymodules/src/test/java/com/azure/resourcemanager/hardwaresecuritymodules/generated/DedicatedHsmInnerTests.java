// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hardwaresecuritymodules.fluent.models.DedicatedHsmInner;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ApiEntityReference;
import com.azure.resourcemanager.hardwaresecuritymodules.models.DedicatedHsmProperties;
import com.azure.resourcemanager.hardwaresecuritymodules.models.NetworkInterface;
import com.azure.resourcemanager.hardwaresecuritymodules.models.NetworkProfile;
import com.azure.resourcemanager.hardwaresecuritymodules.models.Sku;
import com.azure.resourcemanager.hardwaresecuritymodules.models.SkuName;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class DedicatedHsmInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DedicatedHsmInner model = BinaryData.fromString(
            "{\"systemData\":{\"createdBy\":\"zunlu\",\"createdByType\":\"Application\",\"createdAt\":\"2021-01-21T11:08:17Z\",\"lastModifiedBy\":\"nxipeil\",\"lastModifiedByType\":\"Application\",\"lastModifiedAt\":\"2021-06-04T13:01:56Z\"},\"properties\":{\"networkProfile\":{\"subnet\":{\"id\":\"dultskz\"},\"networkInterfaces\":[{\"id\":\"zumveekgpwo\",\"privateIpAddress\":\"hkfpbs\"},{\"id\":\"ofd\",\"privateIpAddress\":\"uusdttouwa\"},{\"id\":\"ekqvkeln\",\"privateIpAddress\":\"vbxwyjsflhh\"}]},\"managementNetworkProfile\":{\"subnet\":{\"id\":\"n\"},\"networkInterfaces\":[{\"id\":\"sxyawjoyaqcs\",\"privateIpAddress\":\"jpkiidzyexznelix\"},{\"id\":\"rzt\",\"privateIpAddress\":\"lhbnxkna\"},{\"id\":\"ulppggdtpnapnyir\",\"privateIpAddress\":\"uhpigvp\"},{\"id\":\"lgqg\",\"privateIpAddress\":\"xmedjvcsly\"}]},\"stampId\":\"wwncwzzhxgk\",\"statusMessage\":\"mgucna\",\"provisioningState\":\"Connecting\"},\"sku\":{\"name\":\"payShield10K_LMK2_CPS60\"},\"zones\":[\"wptfdy\",\"pfqbuaceopzf\"],\"location\":\"rhhuaopppcqeqx\",\"tags\":{\"kdmoi\":\"dahzxctobg\"},\"id\":\"postmgrcfbunrm\",\"name\":\"qjhhkxbpv\",\"type\":\"ymjhxxjyngudivkr\"}")
            .toObject(DedicatedHsmInner.class);
        Assertions.assertEquals("rhhuaopppcqeqx", model.location());
        Assertions.assertEquals("dahzxctobg", model.tags().get("kdmoi"));
        Assertions.assertEquals(SkuName.PAY_SHIELD10K_LMK2_CPS60, model.sku().name());
        Assertions.assertEquals("wptfdy", model.zones().get(0));
        Assertions.assertEquals("dultskz", model.properties().networkProfile().subnet().id());
        Assertions.assertEquals("hkfpbs",
            model.properties().networkProfile().networkInterfaces().get(0).privateIpAddress());
        Assertions.assertEquals("n", model.properties().managementNetworkProfile().subnet().id());
        Assertions.assertEquals("jpkiidzyexznelix",
            model.properties().managementNetworkProfile().networkInterfaces().get(0).privateIpAddress());
        Assertions.assertEquals("wwncwzzhxgk", model.properties().stampId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DedicatedHsmInner model = new DedicatedHsmInner().withLocation("rhhuaopppcqeqx")
            .withTags(mapOf("kdmoi", "dahzxctobg")).withSku(new Sku().withName(SkuName.PAY_SHIELD10K_LMK2_CPS60))
            .withZones(Arrays.asList("wptfdy", "pfqbuaceopzf"))
            .withProperties(new DedicatedHsmProperties()
                .withNetworkProfile(new NetworkProfile().withSubnet(new ApiEntityReference().withId("dultskz"))
                    .withNetworkInterfaces(Arrays.asList(new NetworkInterface().withPrivateIpAddress("hkfpbs"),
                        new NetworkInterface().withPrivateIpAddress("uusdttouwa"),
                        new NetworkInterface().withPrivateIpAddress("vbxwyjsflhh"))))
                .withManagementNetworkProfile(
                    new NetworkProfile().withSubnet(new ApiEntityReference().withId("n")).withNetworkInterfaces(
                        Arrays.asList(new NetworkInterface().withPrivateIpAddress("jpkiidzyexznelix"),
                            new NetworkInterface().withPrivateIpAddress("lhbnxkna"),
                            new NetworkInterface().withPrivateIpAddress("uhpigvp"),
                            new NetworkInterface().withPrivateIpAddress("xmedjvcsly"))))
                .withStampId("wwncwzzhxgk"));
        model = BinaryData.fromObject(model).toObject(DedicatedHsmInner.class);
        Assertions.assertEquals("rhhuaopppcqeqx", model.location());
        Assertions.assertEquals("dahzxctobg", model.tags().get("kdmoi"));
        Assertions.assertEquals(SkuName.PAY_SHIELD10K_LMK2_CPS60, model.sku().name());
        Assertions.assertEquals("wptfdy", model.zones().get(0));
        Assertions.assertEquals("dultskz", model.properties().networkProfile().subnet().id());
        Assertions.assertEquals("hkfpbs",
            model.properties().networkProfile().networkInterfaces().get(0).privateIpAddress());
        Assertions.assertEquals("n", model.properties().managementNetworkProfile().subnet().id());
        Assertions.assertEquals("jpkiidzyexznelix",
            model.properties().managementNetworkProfile().networkInterfaces().get(0).privateIpAddress());
        Assertions.assertEquals("wwncwzzhxgk", model.properties().stampId());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
