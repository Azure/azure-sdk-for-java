// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hardwaresecuritymodules.HardwareSecurityModulesManager;
import com.azure.resourcemanager.hardwaresecuritymodules.models.AutoGeneratedDomainNameLabelScope;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmCluster;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSkuFamily;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSkuName;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.hardwaresecuritymodules.models.PublicNetworkAccess;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudHsmClustersListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"activationState\":\"NotActivated\",\"autoGeneratedDomainNameLabelScope\":\"TenantReuse\",\"hsms\":[{\"fqdn\":\"gxsds\",\"state\":\"e\",\"stateMessage\":\"sbzkf\"},{\"fqdn\":\"eyvpnqicvinvkj\",\"state\":\"dxrbuukzcle\",\"stateMessage\":\"hmlwpaztzpo\"},{\"fqdn\":\"cckwyfzqwhxxbu\",\"state\":\"a\",\"stateMessage\":\"feqztppriol\"},{\"fqdn\":\"rjaltolmncw\",\"state\":\"bqwcsdbnwdcf\",\"stateMessage\":\"cqdpfuv\"}],\"privateEndpointConnections\":[{\"properties\":{\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"Canceled\",\"groupIds\":[\"vxb\",\"t\"]},\"etag\":\"dut\",\"id\":\"ormrlxqtvcofudfl\",\"name\":\"kgjubgdknnqvsazn\",\"type\":\"n\"},{\"properties\":{\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"Canceled\",\"groupIds\":[\"sahmky\",\"grauwjuetaebur\",\"vdmovsmzlxwabm\",\"oefki\"]},\"etag\":\"vtpuqujmqlgk\",\"id\":\"tndoaongbjc\",\"name\":\"tujitcjedft\",\"type\":\"waezkojvd\"}],\"provisioningState\":\"Succeeded\",\"publicNetworkAccess\":\"Disabled\",\"statusMessage\":\"ouicybxarzgszu\"},\"identity\":{\"principalId\":\"9446c581-19e6-45ac-9cf3-9dce9a2a6136\",\"tenantId\":\"752bd869-6a6e-4a22-ac33-de95b27655a9\",\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{\"doamciodhkha\":{\"principalId\":\"5f0eb727-0a05-4fbb-a773-52bae2042533\",\"clientId\":\"ab50cd43-32a2-4ed7-ae1a-8c886dd95d40\"},\"hnzbonl\":{\"principalId\":\"bbb06f02-cfdf-45e7-b1f5-31e24e8f957d\",\"clientId\":\"a69d7034-ac6a-4735-8278-fed076254666\"},\"oegokdwbwh\":{\"principalId\":\"e49fc2f5-26bf-4c40-812d-bf2ba44ce931\",\"clientId\":\"d13ec133-b367-49b6-8b24-893364f12e4e\"}}},\"sku\":{\"family\":\"B\",\"name\":\"Standard B10\",\"capacity\":793958832},\"location\":\"vexztvbtqgs\",\"tags\":{\"wtl\":\"oyzko\",\"uximerqfobw\":\"nguxawqaldsy\"},\"id\":\"znkbykutwpfhpagm\",\"name\":\"r\",\"type\":\"kdsnfdsdoakgtdl\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HardwareSecurityModulesManager manager = HardwareSecurityModulesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<CloudHsmCluster> response
            = manager.cloudHsmClusters().list("qblylsyxkqj", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("vexztvbtqgs", response.iterator().next().location());
        Assertions.assertEquals("oyzko", response.iterator().next().tags().get("wtl"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED,
            response.iterator().next().identity().type());
        Assertions.assertEquals(CloudHsmClusterSkuFamily.B, response.iterator().next().sku().family());
        Assertions.assertEquals(CloudHsmClusterSkuName.STANDARD_B10, response.iterator().next().sku().name());
        Assertions.assertEquals(793958832, response.iterator().next().sku().capacity());
        Assertions.assertEquals(AutoGeneratedDomainNameLabelScope.TENANT_REUSE,
            response.iterator().next().properties().autoGeneratedDomainNameLabelScope());
        Assertions.assertEquals(PublicNetworkAccess.DISABLED,
            response.iterator().next().properties().publicNetworkAccess());
    }
}
