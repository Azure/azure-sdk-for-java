// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hardwaresecuritymodules.HardwareSecurityModulesManager;
import com.azure.resourcemanager.hardwaresecuritymodules.models.AutoGeneratedDomainNameLabelScope;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmCluster;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSkuFamily;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSkuName;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.hardwaresecuritymodules.models.PublicNetworkAccess;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudHsmClustersListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"activationState\":\"NotActivated\",\"autoGeneratedDomainNameLabelScope\":\"TenantReuse\",\"hsms\":[{\"fqdn\":\"gxsds\",\"state\":\"e\",\"stateMessage\":\"sbzkf\"},{\"fqdn\":\"eyvpnqicvinvkj\",\"state\":\"dxrbuukzcle\",\"stateMessage\":\"hmlwpaztzpo\"},{\"fqdn\":\"cckwyfzqwhxxbu\",\"state\":\"a\",\"stateMessage\":\"feqztppriol\"},{\"fqdn\":\"rjaltolmncw\",\"state\":\"bqwcsdbnwdcf\",\"stateMessage\":\"cqdpfuv\"}],\"privateEndpointConnections\":[{\"properties\":{\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"Canceled\",\"groupIds\":[\"vxb\",\"t\"]},\"etag\":\"dut\",\"id\":\"ormrlxqtvcofudfl\",\"name\":\"kgjubgdknnqvsazn\",\"type\":\"n\"},{\"properties\":{\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"Canceled\",\"groupIds\":[\"sahmky\",\"grauwjuetaebur\",\"vdmovsmzlxwabm\",\"oefki\"]},\"etag\":\"vtpuqujmqlgk\",\"id\":\"tndoaongbjc\",\"name\":\"tujitcjedft\",\"type\":\"waezkojvd\"}],\"provisioningState\":\"Succeeded\",\"publicNetworkAccess\":\"Disabled\",\"statusMessage\":\"ouicybxarzgszu\"},\"identity\":{\"principalId\":\"72a4ace9-c5ef-4af1-8520-1fa1c52012ad\",\"tenantId\":\"a6b3c2c2-07f4-40ba-906c-3a1e10f7b647\",\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{\"doamciodhkha\":{\"principalId\":\"d85919be-8ede-4a69-aaf7-07ff64bc6e3a\",\"clientId\":\"2c94af37-c77c-4a2a-aef1-9c386378df91\"},\"hnzbonl\":{\"principalId\":\"caf9e418-3e41-45ae-85a6-daef70872021\",\"clientId\":\"6520bfe5-aee0-405a-9f0c-bdf7f1c039cf\"},\"oegokdwbwh\":{\"principalId\":\"74ba0d9c-f863-4c0a-bb5c-46bc45372448\",\"clientId\":\"8fce15df-7163-44f3-8ccd-51eec4536626\"}}},\"sku\":{\"family\":\"B\",\"name\":\"Standard B10\",\"capacity\":793958832},\"location\":\"vexztvbtqgs\",\"tags\":{\"wtl\":\"oyzko\",\"uximerqfobw\":\"nguxawqaldsy\"},\"id\":\"znkbykutwpfhpagm\",\"name\":\"r\",\"type\":\"kdsnfdsdoakgtdl\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HardwareSecurityModulesManager manager = HardwareSecurityModulesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<CloudHsmCluster> response
            = manager.cloudHsmClusters().list("qblylsyxkqj", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("vexztvbtqgs", response.iterator().next().location());
        Assertions.assertEquals("oyzko", response.iterator().next().tags().get("wtl"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED,
            response.iterator().next().identity().type());
        Assertions.assertEquals(CloudHsmClusterSkuFamily.B, response.iterator().next().sku().family());
        Assertions.assertEquals(CloudHsmClusterSkuName.STANDARD_B10, response.iterator().next().sku().name());
        Assertions.assertEquals(793958832, response.iterator().next().sku().capacity());
        Assertions.assertEquals(AutoGeneratedDomainNameLabelScope.TENANT_REUSE,
            response.iterator().next().properties().autoGeneratedDomainNameLabelScope());
        Assertions.assertEquals(PublicNetworkAccess.DISABLED,
            response.iterator().next().properties().publicNetworkAccess());
    }
}
