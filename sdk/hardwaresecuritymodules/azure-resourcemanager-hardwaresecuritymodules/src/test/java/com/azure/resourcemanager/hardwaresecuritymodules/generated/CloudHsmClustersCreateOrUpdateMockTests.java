// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.HttpHeaders;
import com.azure.core.http.HttpRequest;
import com.azure.core.http.HttpResponse;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.resourcemanager.hardwaresecuritymodules.HardwareSecurityModulesManager;
import com.azure.resourcemanager.hardwaresecuritymodules.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.hardwaresecuritymodules.models.BackupProperties;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmCluster;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterProperties;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSecurityDomainProperties;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSku;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSkuFamily;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSkuName;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmProperties;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ManagedServiceIdentity;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.hardwaresecuritymodules.models.PrivateEndpoint;
import com.azure.resourcemanager.hardwaresecuritymodules.models.PrivateEndpointConnectionProperties;
import com.azure.resourcemanager.hardwaresecuritymodules.models.PrivateLinkServiceConnectionState;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ProvisioningState;
import com.azure.resourcemanager.hardwaresecuritymodules.models.RestoreProperties;
import com.azure.resourcemanager.hardwaresecuritymodules.models.UserAssignedIdentity;
import java.nio.ByteBuffer;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.mockito.ArgumentCaptor;
import org.mockito.Mockito;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

public final class CloudHsmClustersCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        HttpClient httpClient = Mockito.mock(HttpClient.class);
        HttpResponse httpResponse = Mockito.mock(HttpResponse.class);
        ArgumentCaptor<HttpRequest> httpRequest = ArgumentCaptor.forClass(HttpRequest.class);

        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Succeeded\",\"autoGeneratedDomainNameLabelScope\":\"byrqufeg\",\"securityDomain\":{\"fipsState\":455492587,\"activationStatus\":\"fbn\"},\"hsms\":[{\"fqdn\":\"tlpdn\",\"state\":\"tvgbmhrixkwmy\",\"stateMessage\":\"ejvegrhbpnaixex\"},{\"fqdn\":\"b\",\"state\":\"eaxhcexdrrvqahqk\",\"stateMessage\":\"tpwijnh\"},{\"fqdn\":\"svfycxzbfv\",\"state\":\"wvrvmtg\",\"stateMessage\":\"ppyostronzmyhgf\"}],\"publicNetworkAccess\":\"nsxkmcwaekrrjr\",\"privateEndpointConnections\":[{\"properties\":{\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"Succeeded\",\"groupIds\":[\"hjglikk\",\"wslolbqp\",\"uzlm\",\"felfktg\"]},\"etag\":\"crpw\",\"id\":\"eznoig\",\"name\":\"rnjwmw\",\"type\":\"pn\"},{\"properties\":{\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"Updating\",\"groupIds\":[\"oqkag\",\"hsxttaugzxnf\",\"azpxdtnkdmkqjjl\"]},\"etag\":\"envrkpyouaibrebq\",\"id\":\"ysjkixqtnqttez\",\"name\":\"wfff\",\"type\":\"akpjpqqmtedlt\"}],\"statusMessage\":\"jihy\",\"restoreProperties\":{\"foldername\":\"phvwauyqncygu\",\"azureStorageResourceUri\":\"vipmdscwxqupevzh\"},\"backupProperties\":{\"azureStorageResourceUri\":\"otxhojujby\",\"lastBackupDateTime\":\"2021-06-17T22:54:10Z\",\"lastBackupStatus\":\"c\"}},\"sku\":{\"family\":\"B\",\"name\":\"Standard_B1\",\"capacity\":763205762},\"identity\":{\"principalId\":\"44eaa961-ace8-402f-a647-529ad7416baf\",\"tenantId\":\"65fe2649-6d30-4dfe-97b0-c7ba0fbd33be\",\"type\":\"None\",\"userAssignedIdentities\":{\"r\":{\"principalId\":\"a489ff2a-eeda-438b-8ddc-e640a3b7783a\",\"clientId\":\"d73efe7d-85fc-4039-b837-c29682cd7712\"}}},\"location\":\"o\",\"tags\":{\"vtylbfpncu\":\"tpkiwkkbnujry\",\"thtywub\":\"doiwi\",\"fdntwjchrdgoih\":\"cbihwqk\",\"luudfdlwggytsb\":\"umwctondz\"},\"id\":\"tov\",\"name\":\"tgseinqfiufxqkn\",\"type\":\"irgne\"}";

        Mockito.when(httpResponse.getStatusCode()).thenReturn(200);
        Mockito.when(httpResponse.getHeaders()).thenReturn(new HttpHeaders());
        Mockito.when(httpResponse.getBody())
            .thenReturn(Flux.just(ByteBuffer.wrap(responseStr.getBytes(StandardCharsets.UTF_8))));
        Mockito.when(httpResponse.getBodyAsByteArray())
            .thenReturn(Mono.just(responseStr.getBytes(StandardCharsets.UTF_8)));
        Mockito.when(httpClient.send(httpRequest.capture(), Mockito.any())).thenReturn(Mono.defer(() -> {
            Mockito.when(httpResponse.getRequest()).thenReturn(httpRequest.getValue());
            return Mono.just(httpResponse);
        }));

        HardwareSecurityModulesManager manager = HardwareSecurityModulesManager.configure().withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        CloudHsmCluster response = manager.cloudHsmClusters().define("ikayuhqlbjbsybb").withRegion("kdgszywkbirr")
            .withExistingResourceGroup("eeyebi").withTags(mapOf("nrvgoupmfiibfgg", "hlhkjoqrvqqaatj"))
            .withSku(new CloudHsmClusterSku().withFamily(CloudHsmClusterSkuFamily.B)
                .withName(CloudHsmClusterSkuName.STANDARD_B10).withCapacity(2013442569))
            .withIdentity(
                new ManagedServiceIdentity().withType(ManagedServiceIdentityType.NONE).withUserAssignedIdentities(
                    mapOf("fq", new UserAssignedIdentity(), "tdhtmdvyp", new UserAssignedIdentity())))
            .withProperties(new CloudHsmClusterProperties().withProvisioningState(ProvisioningState.CANCELED)
                .withAutoGeneratedDomainNameLabelScope("ldgmfpgvmpip")
                .withSecurityDomain(new CloudHsmClusterSecurityDomainProperties().withFipsState(651551575)
                    .withActivationStatus("aqfxss"))
                .withHsms(Arrays.asList(
                    new CloudHsmProperties().withFqdn("wbdsr").withState("pdrhne").withStateMessage("owqkdwytisi")))
                .withPublicNetworkAccess("rcgp")
                .withPrivateEndpointConnections(Arrays.asList(
                    new PrivateEndpointConnectionInner()
                        .withProperties(
                            new PrivateEndpointConnectionProperties().withPrivateEndpoint(new PrivateEndpoint())
                                .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()))
                        .withEtag("okixrjqcir"),
                    new PrivateEndpointConnectionInner()
                        .withProperties(
                            new PrivateEndpointConnectionProperties().withPrivateEndpoint(new PrivateEndpoint())
                                .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()))
                        .withEtag("mqhldvrii"),
                    new PrivateEndpointConnectionInner()
                        .withProperties(
                            new PrivateEndpointConnectionProperties().withPrivateEndpoint(new PrivateEndpoint())
                                .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()))
                        .withEtag("hbotzingamvppho"),
                    new PrivateEndpointConnectionInner()
                        .withProperties(
                            new PrivateEndpointConnectionProperties().withPrivateEndpoint(new PrivateEndpoint())
                                .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()))
                        .withEtag("wygzlvdnkfxusem")))
                .withRestoreProperties(
                    new RestoreProperties().withFoldername("vezrypqlmfeo").withAzureStorageResourceUri("rqwky"))
                .withBackupProperties(new BackupProperties().withAzureStorageResourceUri("bopgxedkowepbqp")))
            .create();

        Assertions.assertEquals("o", response.location());
        Assertions.assertEquals("tpkiwkkbnujry", response.tags().get("vtylbfpncu"));
        Assertions.assertEquals(CloudHsmClusterSkuFamily.B, response.sku().family());
        Assertions.assertEquals(CloudHsmClusterSkuName.STANDARD_B1, response.sku().name());
        Assertions.assertEquals(763205762, response.sku().capacity());
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.identity().type());
        Assertions.assertEquals(ProvisioningState.SUCCEEDED, response.properties().provisioningState());
        Assertions.assertEquals("byrqufeg", response.properties().autoGeneratedDomainNameLabelScope());
        Assertions.assertEquals(455492587, response.properties().securityDomain().fipsState());
        Assertions.assertEquals("fbn", response.properties().securityDomain().activationStatus());
        Assertions.assertEquals("tlpdn", response.properties().hsms().get(0).fqdn());
        Assertions.assertEquals("tvgbmhrixkwmy", response.properties().hsms().get(0).state());
        Assertions.assertEquals("ejvegrhbpnaixex", response.properties().hsms().get(0).stateMessage());
        Assertions.assertEquals("nsxkmcwaekrrjr", response.properties().publicNetworkAccess());
        Assertions.assertEquals("crpw", response.properties().privateEndpointConnections().get(0).etag());
        Assertions.assertEquals("phvwauyqncygu", response.properties().restoreProperties().foldername());
        Assertions.assertEquals("vipmdscwxqupevzh",
            response.properties().restoreProperties().azureStorageResourceUri());
        Assertions.assertEquals("otxhojujby", response.properties().backupProperties().azureStorageResourceUri());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
