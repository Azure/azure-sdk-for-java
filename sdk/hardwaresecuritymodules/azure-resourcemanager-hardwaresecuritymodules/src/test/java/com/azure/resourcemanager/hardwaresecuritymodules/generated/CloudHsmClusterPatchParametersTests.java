// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterPatchParameters;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ManagedServiceIdentity;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.hardwaresecuritymodules.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class CloudHsmClusterPatchParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CloudHsmClusterPatchParameters model = BinaryData.fromString(
            "{\"tags\":{\"wtmutduq\":\"b\",\"spwgcuertumkdosv\":\"ta\"},\"identity\":{\"principalId\":\"06226388-cfee-48d0-b520-441ba5fb1c01\",\"tenantId\":\"fad2d7ab-2d69-4743-85ed-d74a434f803b\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"jfddgmbmbe\":{\"principalId\":\"664dd85d-b184-4a41-aea2-b51ce769a479\",\"clientId\":\"fa1c6a96-a90b-40f8-8291-1d2c40235112\"},\"bhtqqrolfpfpsa\":{\"principalId\":\"1542a171-1bd6-4913-9c47-b009b2b79b98\",\"clientId\":\"25f498aa-0d75-4ed9-81ed-9e94faa370b3\"},\"qux\":{\"principalId\":\"27b2d882-dc71-4912-a29f-8e62f90e8739\",\"clientId\":\"d4a69509-d4f7-4417-b4fa-160e1b8a492e\"},\"yjgzjaoyfhrtxiln\":{\"principalId\":\"df72bbe4-6925-4c50-b523-c9e6d2a0866e\",\"clientId\":\"abbd45f2-fd65-49e8-8f3f-87ea3c20663d\"}}}}")
            .toObject(CloudHsmClusterPatchParameters.class);
        Assertions.assertEquals("b", model.tags().get("wtmutduq"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CloudHsmClusterPatchParameters model
            = new CloudHsmClusterPatchParameters().withTags(mapOf("wtmutduq", "b", "spwgcuertumkdosv", "ta"))
                .withIdentity(
                    new ManagedServiceIdentity().withType(ManagedServiceIdentityType.USER_ASSIGNED)
                        .withUserAssignedIdentities(mapOf("jfddgmbmbe", new UserAssignedIdentity(), "bhtqqrolfpfpsa",
                            new UserAssignedIdentity(), "qux", new UserAssignedIdentity(), "yjgzjaoyfhrtxiln",
                            new UserAssignedIdentity())));
        model = BinaryData.fromObject(model).toObject(CloudHsmClusterPatchParameters.class);
        Assertions.assertEquals("b", model.tags().get("wtmutduq"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
