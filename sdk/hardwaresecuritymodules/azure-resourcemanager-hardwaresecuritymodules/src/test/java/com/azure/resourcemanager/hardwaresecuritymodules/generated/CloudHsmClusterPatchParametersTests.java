// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterPatchParameters;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ManagedServiceIdentity;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.hardwaresecuritymodules.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class CloudHsmClusterPatchParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CloudHsmClusterPatchParameters model = BinaryData.fromString(
            "{\"tags\":{\"wtmutduq\":\"b\",\"spwgcuertumkdosv\":\"ta\"},\"identity\":{\"principalId\":\"45c7ea46-a33e-4275-8a21-cd931a6a5afe\",\"tenantId\":\"3a59454f-87df-47f5-b7c9-8672bc1e5404\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"jfddgmbmbe\":{\"principalId\":\"3b670a4f-f396-484c-82d3-78d2841bb4d0\",\"clientId\":\"8b0a86fb-09ad-41ef-9d5b-514f35e3d584\"},\"bhtqqrolfpfpsa\":{\"principalId\":\"644f8121-6476-4332-b32d-730aee3eb5c4\",\"clientId\":\"f936dce7-1c07-4e03-b9fc-4e7a210b03ee\"},\"qux\":{\"principalId\":\"7f274c94-9732-48ab-b312-56aceefafa7a\",\"clientId\":\"d6b286d9-1899-4a61-9219-db2ae8c208ae\"},\"yjgzjaoyfhrtxiln\":{\"principalId\":\"3ebefb18-30ba-4394-a4cc-db65b47d49c9\",\"clientId\":\"d184b490-8f74-4a06-8f09-c55a5ee49b84\"}}}}")
            .toObject(CloudHsmClusterPatchParameters.class);
        Assertions.assertEquals("b", model.tags().get("wtmutduq"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CloudHsmClusterPatchParameters model
            = new CloudHsmClusterPatchParameters().withTags(mapOf("wtmutduq", "b", "spwgcuertumkdosv", "ta"))
                .withIdentity(
                    new ManagedServiceIdentity().withType(ManagedServiceIdentityType.USER_ASSIGNED)
                        .withUserAssignedIdentities(mapOf("jfddgmbmbe", new UserAssignedIdentity(), "bhtqqrolfpfpsa",
                            new UserAssignedIdentity(), "qux", new UserAssignedIdentity(), "yjgzjaoyfhrtxiln",
                            new UserAssignedIdentity())));
        model = BinaryData.fromObject(model).toObject(CloudHsmClusterPatchParameters.class);
        Assertions.assertEquals("b", model.tags().get("wtmutduq"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
