// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterPatchParameters;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ManagedServiceIdentity;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.hardwaresecuritymodules.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class CloudHsmClusterPatchParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CloudHsmClusterPatchParameters model = BinaryData.fromString(
            "{\"tags\":{\"wtmutduq\":\"b\",\"spwgcuertumkdosv\":\"ta\"},\"identity\":{\"principalId\":\"965087cd-e7f3-4493-9a00-b3f3f6643fc9\",\"tenantId\":\"99ee06e8-d93e-4272-9576-f6e3d582876e\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"jfddgmbmbe\":{\"principalId\":\"179b678b-4ee3-4d68-a37c-30383167942c\",\"clientId\":\"51ef2b57-f4b7-4a8c-80bc-da698b1f9b8c\"},\"bhtqqrolfpfpsa\":{\"principalId\":\"1b7f60eb-fede-42e2-a308-156c2c129a0e\",\"clientId\":\"626a46b9-956b-4cfe-a01a-0d05c888a401\"},\"qux\":{\"principalId\":\"d4b12039-bcf9-47d3-9b11-38b0ab8283e8\",\"clientId\":\"375a44e8-2339-4734-adfb-80251f2ddd7a\"},\"yjgzjaoyfhrtxiln\":{\"principalId\":\"17f4b912-758f-4c59-907d-6e755ddfdcfe\",\"clientId\":\"6a3523ea-af80-454b-add2-bc152e9567f4\"}}}}")
            .toObject(CloudHsmClusterPatchParameters.class);
        Assertions.assertEquals("b", model.tags().get("wtmutduq"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CloudHsmClusterPatchParameters model
            = new CloudHsmClusterPatchParameters().withTags(mapOf("wtmutduq", "b", "spwgcuertumkdosv", "ta"))
                .withIdentity(
                    new ManagedServiceIdentity().withType(ManagedServiceIdentityType.USER_ASSIGNED)
                        .withUserAssignedIdentities(mapOf("jfddgmbmbe", new UserAssignedIdentity(), "bhtqqrolfpfpsa",
                            new UserAssignedIdentity(), "qux", new UserAssignedIdentity(), "yjgzjaoyfhrtxiln",
                            new UserAssignedIdentity())));
        model = BinaryData.fromObject(model).toObject(CloudHsmClusterPatchParameters.class);
        Assertions.assertEquals("b", model.tags().get("wtmutduq"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
