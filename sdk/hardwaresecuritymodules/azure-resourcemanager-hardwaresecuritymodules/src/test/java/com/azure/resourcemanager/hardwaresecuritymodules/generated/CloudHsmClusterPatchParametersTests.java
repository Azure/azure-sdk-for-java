// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterPatchParameters;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ManagedServiceIdentity;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.hardwaresecuritymodules.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class CloudHsmClusterPatchParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CloudHsmClusterPatchParameters model = BinaryData.fromString(
            "{\"tags\":{\"wtmutduq\":\"b\",\"spwgcuertumkdosv\":\"ta\"},\"identity\":{\"principalId\":\"747bb49d-bd96-4723-837c-c9f19760a313\",\"tenantId\":\"82a0617d-fee1-4007-84d9-a240f872542a\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"jfddgmbmbe\":{\"principalId\":\"ec0f8d59-2512-4c73-be25-7bdeaa77aaba\",\"clientId\":\"e171d199-ff3e-43eb-a105-7456d6bb9779\"},\"bhtqqrolfpfpsa\":{\"principalId\":\"a61f964a-eab5-4c41-ae43-987c52d1a201\",\"clientId\":\"f58efe16-aaef-4506-9d2d-10dc237fb2c6\"},\"qux\":{\"principalId\":\"8018da93-a049-4ae2-ad37-f754eb1ffebf\",\"clientId\":\"837b181c-917e-4736-bc1c-8daeb1ec9efb\"},\"yjgzjaoyfhrtxiln\":{\"principalId\":\"73631669-5d93-44d9-b2ae-e4b400e88ba1\",\"clientId\":\"2a2f2e3f-59fa-4f49-82e4-8d702be56e3b\"}}}}")
            .toObject(CloudHsmClusterPatchParameters.class);
        Assertions.assertEquals("b", model.tags().get("wtmutduq"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CloudHsmClusterPatchParameters model
            = new CloudHsmClusterPatchParameters().withTags(mapOf("wtmutduq", "b", "spwgcuertumkdosv", "ta"))
                .withIdentity(
                    new ManagedServiceIdentity().withType(ManagedServiceIdentityType.USER_ASSIGNED)
                        .withUserAssignedIdentities(mapOf("jfddgmbmbe", new UserAssignedIdentity(), "bhtqqrolfpfpsa",
                            new UserAssignedIdentity(), "qux", new UserAssignedIdentity(), "yjgzjaoyfhrtxiln",
                            new UserAssignedIdentity())));
        model = BinaryData.fromObject(model).toObject(CloudHsmClusterPatchParameters.class);
        Assertions.assertEquals("b", model.tags().get("wtmutduq"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
