// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterPatchParameters;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ManagedServiceIdentity;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.hardwaresecuritymodules.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class CloudHsmClusterPatchParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CloudHsmClusterPatchParameters model = BinaryData.fromString(
            "{\"tags\":{\"wtmutduq\":\"b\",\"spwgcuertumkdosv\":\"ta\"},\"identity\":{\"principalId\":\"a5a3d4e8-f78c-4cd6-8084-1de10b495342\",\"tenantId\":\"a20f1adf-b468-46a8-8184-b1b9e34258e4\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"jfddgmbmbe\":{\"principalId\":\"4181c7ba-69ff-4f70-94d1-937af072f6f6\",\"clientId\":\"f14282fe-ef1d-4ee4-9693-7b14451c024c\"},\"bhtqqrolfpfpsa\":{\"principalId\":\"3b57c046-b52d-40ad-81ce-1171ab39d7ca\",\"clientId\":\"c3e9df48-17f9-4269-bd4e-392d64a0c3dd\"},\"qux\":{\"principalId\":\"103d64f8-9bc9-4218-96db-0c2375baf1df\",\"clientId\":\"c1a3ff10-7b36-4a21-9d47-edb4386d91f1\"},\"yjgzjaoyfhrtxiln\":{\"principalId\":\"196778f3-2319-4f9f-8875-4c161a8592fc\",\"clientId\":\"ef688af1-6b72-4e82-92dd-6c2161cb943f\"}}}}")
            .toObject(CloudHsmClusterPatchParameters.class);
        Assertions.assertEquals("b", model.tags().get("wtmutduq"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CloudHsmClusterPatchParameters model
            = new CloudHsmClusterPatchParameters().withTags(mapOf("wtmutduq", "b", "spwgcuertumkdosv", "ta"))
                .withIdentity(
                    new ManagedServiceIdentity().withType(ManagedServiceIdentityType.USER_ASSIGNED)
                        .withUserAssignedIdentities(mapOf("jfddgmbmbe", new UserAssignedIdentity(), "bhtqqrolfpfpsa",
                            new UserAssignedIdentity(), "qux", new UserAssignedIdentity(), "yjgzjaoyfhrtxiln",
                            new UserAssignedIdentity())));
        model = BinaryData.fromObject(model).toObject(CloudHsmClusterPatchParameters.class);
        Assertions.assertEquals("b", model.tags().get("wtmutduq"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
