// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hardwaresecuritymodules.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.hardwaresecuritymodules.models.PrivateEndpoint;
import com.azure.resourcemanager.hardwaresecuritymodules.models.PrivateEndpointConnectionListResult;
import com.azure.resourcemanager.hardwaresecuritymodules.models.PrivateEndpointConnectionProperties;
import com.azure.resourcemanager.hardwaresecuritymodules.models.PrivateEndpointServiceConnectionStatus;
import com.azure.resourcemanager.hardwaresecuritymodules.models.PrivateLinkServiceConnectionState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"privateEndpoint\":{\"id\":\"yrxvwfudwpznt\"},\"privateLinkServiceConnectionState\":{\"status\":\"Rejected\",\"description\":\"hl\",\"actionsRequired\":\"jbhckfrlhr\"},\"provisioningState\":\"Creating\",\"groupIds\":[\"vpycanuzbp\",\"kafkuwbcrnwbm\",\"hhseyv\",\"us\"]},\"etag\":\"slhs\",\"id\":\"deemao\",\"name\":\"mx\",\"type\":\"gkvtmelmqkrhah\"},{\"properties\":{\"privateEndpoint\":{\"id\":\"ahaquh\"},\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"duala\",\"actionsRequired\":\"qpv\"},\"provisioningState\":\"Creating\",\"groupIds\":[\"sr\"]},\"etag\":\"gvxp\",\"id\":\"omzlfmi\",\"name\":\"gwb\",\"type\":\"b\"}],\"nextLink\":\"ldawkzbaliourqha\"}")
            .toObject(PrivateEndpointConnectionListResult.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.REJECTED,
            model.value().get(0).properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("hl",
            model.value().get(0).properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("jbhckfrlhr",
            model.value().get(0).properties().privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("slhs", model.value().get(0).etag());
        Assertions.assertEquals("ldawkzbaliourqha", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionListResult model = new PrivateEndpointConnectionListResult().withValue(Arrays.asList(
            new PrivateEndpointConnectionInner()
                .withProperties(new PrivateEndpointConnectionProperties().withPrivateEndpoint(new PrivateEndpoint())
                    .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                        .withStatus(PrivateEndpointServiceConnectionStatus.REJECTED).withDescription("hl")
                        .withActionsRequired("jbhckfrlhr")))
                .withEtag("slhs"),
            new PrivateEndpointConnectionInner()
                .withProperties(new PrivateEndpointConnectionProperties().withPrivateEndpoint(new PrivateEndpoint())
                    .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                        .withStatus(PrivateEndpointServiceConnectionStatus.APPROVED).withDescription("duala")
                        .withActionsRequired("qpv")))
                .withEtag("gvxp")))
            .withNextLink("ldawkzbaliourqha");
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionListResult.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.REJECTED,
            model.value().get(0).properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("hl",
            model.value().get(0).properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("jbhckfrlhr",
            model.value().get(0).properties().privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("slhs", model.value().get(0).etag());
        Assertions.assertEquals("ldawkzbaliourqha", model.nextLink());
    }
}
