// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hardwaresecuritymodules.HardwareSecurityModulesManager;
import com.azure.resourcemanager.hardwaresecuritymodules.models.AutoGeneratedDomainNameLabelScope;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmCluster;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSkuFamily;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSkuName;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.hardwaresecuritymodules.models.PublicNetworkAccess;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudHsmClustersGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"activationState\":\"NotActivated\",\"autoGeneratedDomainNameLabelScope\":\"SubscriptionReuse\",\"hsms\":[{\"fqdn\":\"yc\",\"state\":\"uhpkxkgymar\",\"stateMessage\":\"n\"},{\"fqdn\":\"xqugjhkycubedd\",\"state\":\"sofwqmzqalkrmnji\",\"stateMessage\":\"xacqqudfnbyx\"},{\"fqdn\":\"aabjyvayffimrz\",\"state\":\"uzqogsexnevf\",\"stateMessage\":\"wnwmewzs\"},{\"fqdn\":\"ceuzsoibjudpfr\",\"state\":\"rthzvaytdwkqbrqu\",\"stateMessage\":\"axhexiilivp\"}],\"privateEndpointConnections\":[{\"properties\":{\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"Deleting\",\"groupIds\":[\"oaxoruzfgsqu\",\"fxrxxle\",\"tramxjez\"]},\"etag\":\"wnwxuqlcvyd\",\"id\":\"atdooaojkniod\",\"name\":\"oo\",\"type\":\"bw\"},{\"properties\":{\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"Succeeded\",\"groupIds\":[\"sbvdkcrodtjinfw\",\"lfltka\",\"jvefkdlfoakggkfp\",\"gaowpulpqblylsyx\"]},\"etag\":\"jnsjervtiagxsd\",\"id\":\"uem\",\"name\":\"sbzkf\",\"type\":\"beyvpnqicvinvkjj\"}],\"provisioningState\":\"Canceled\",\"publicNetworkAccess\":\"Disabled\",\"statusMessage\":\"ukzclewyhmlwpaz\"},\"identity\":{\"principalId\":\"ofncckwyfzqwhxxb\",\"tenantId\":\"qa\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"wcsdbnwdcfhucq\":{\"principalId\":\"ztppriolxorjalto\",\"clientId\":\"ncwsob\"}}},\"sku\":{\"family\":\"B\",\"name\":\"Standard B10\",\"capacity\":1621122974},\"location\":\"sbjjc\",\"tags\":{\"ncormrlxqtvcof\":\"xbvtvudu\"},\"id\":\"dflvkg\",\"name\":\"u\",\"type\":\"gdknnqv\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HardwareSecurityModulesManager manager = HardwareSecurityModulesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        CloudHsmCluster response = manager.cloudHsmClusters()
            .getByResourceGroupWithResponse("bqfatpxllrxcyjmo", "dsuvarmywdmjsjqb", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("sbjjc", response.location());
        Assertions.assertEquals("xbvtvudu", response.tags().get("ncormrlxqtvcof"));
        Assertions.assertEquals(AutoGeneratedDomainNameLabelScope.SUBSCRIPTION_REUSE,
            response.properties().autoGeneratedDomainNameLabelScope());
        Assertions.assertEquals(PublicNetworkAccess.DISABLED, response.properties().publicNetworkAccess());
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, response.identity().type());
        Assertions.assertEquals(CloudHsmClusterSkuFamily.B, response.sku().family());
        Assertions.assertEquals(CloudHsmClusterSkuName.STANDARD_B10, response.sku().name());
        Assertions.assertEquals(1621122974, response.sku().capacity());
    }
}
