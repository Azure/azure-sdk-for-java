// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hardwaresecuritymodules.HardwareSecurityModulesManager;
import com.azure.resourcemanager.hardwaresecuritymodules.models.DedicatedHsm;
import com.azure.resourcemanager.hardwaresecuritymodules.models.SkuName;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DedicatedHsmsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"networkProfile\":{\"subnet\":{\"resourceId\":\"viacegfnmntfpmv\"},\"networkInterfaces\":[{\"resourceId\":\"nczdwvv\",\"privateIpAddress\":\"lxlllchpo\"},{\"resourceId\":\"zevwrdnhfukuv\",\"privateIpAddress\":\"cswsmystul\"}]},\"managementNetworkProfile\":{\"subnet\":{\"resourceId\":\"fcvlerch\"},\"networkInterfaces\":[{\"resourceId\":\"f\",\"privateIpAddress\":\"babwidfcxss\"}]},\"stampId\":\"unnoxyhk\",\"statusMessage\":\"qddrihpfhoqcaae\",\"provisioningState\":\"CheckingQuota\"},\"sku\":{\"name\":\"payShield10K_LMK1_CPS60\"},\"zones\":[\"vlp\",\"x\",\"kzbrmsgeivsiy\"],\"location\":\"kdncj\",\"tags\":{\"apzwyrpgog\":\"nbzoggcu\",\"yjt\":\"qxepnylbfuaj\",\"byfmowuxr\":\"vofqzhvfc\",\"xfzwi\":\"jpvd\"},\"id\":\"vwzjbhyz\",\"name\":\"xjrk\",\"type\":\"mbtrnegvmnvu\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HardwareSecurityModulesManager manager = HardwareSecurityModulesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<DedicatedHsm> response
            = manager.dedicatedHsms().list(1726404593, com.azure.core.util.Context.NONE);

        Assertions.assertEquals("kdncj", response.iterator().next().location());
        Assertions.assertEquals("nbzoggcu", response.iterator().next().tags().get("apzwyrpgog"));
        Assertions.assertEquals("viacegfnmntfpmv",
            response.iterator().next().properties().networkProfile().subnet().resourceId());
        Assertions.assertEquals("lxlllchpo",
            response.iterator().next().properties().networkProfile().networkInterfaces().get(0).privateIpAddress());
        Assertions.assertEquals("fcvlerch",
            response.iterator().next().properties().managementNetworkProfile().subnet().resourceId());
        Assertions.assertEquals("babwidfcxss",
            response.iterator()
                .next()
                .properties()
                .managementNetworkProfile()
                .networkInterfaces()
                .get(0)
                .privateIpAddress());
        Assertions.assertEquals("unnoxyhk", response.iterator().next().properties().stampId());
        Assertions.assertEquals(SkuName.PAY_SHIELD10K_LMK1_CPS60, response.iterator().next().sku().name());
        Assertions.assertEquals("vlp", response.iterator().next().zones().get(0));
    }
}
