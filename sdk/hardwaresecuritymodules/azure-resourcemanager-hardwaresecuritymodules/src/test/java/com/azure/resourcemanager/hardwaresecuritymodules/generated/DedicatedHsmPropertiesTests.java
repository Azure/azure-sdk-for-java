// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ApiEntityReference;
import com.azure.resourcemanager.hardwaresecuritymodules.models.DedicatedHsmProperties;
import com.azure.resourcemanager.hardwaresecuritymodules.models.NetworkInterface;
import com.azure.resourcemanager.hardwaresecuritymodules.models.NetworkProfile;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DedicatedHsmPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DedicatedHsmProperties model = BinaryData.fromString(
            "{\"networkProfile\":{\"subnet\":{\"id\":\"bxvwv\"},\"networkInterfaces\":[{\"id\":\"qbhsfxobl\",\"privateIpAddress\":\"k\"}]},\"managementNetworkProfile\":{\"subnet\":{\"id\":\"ewwwfbkrvrnsv\"},\"networkInterfaces\":[{\"id\":\"ohxcrsbfova\",\"privateIpAddress\":\"ruvw\"}]},\"stampId\":\"sqfsubcgjbirxb\",\"statusMessage\":\"bsrfbj\",\"provisioningState\":\"CheckingQuota\"}")
            .toObject(DedicatedHsmProperties.class);
        Assertions.assertEquals("bxvwv", model.networkProfile().subnet().id());
        Assertions.assertEquals("k", model.networkProfile().networkInterfaces().get(0).privateIpAddress());
        Assertions.assertEquals("ewwwfbkrvrnsv", model.managementNetworkProfile().subnet().id());
        Assertions.assertEquals("ruvw", model.managementNetworkProfile().networkInterfaces().get(0).privateIpAddress());
        Assertions.assertEquals("sqfsubcgjbirxb", model.stampId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DedicatedHsmProperties model = new DedicatedHsmProperties()
            .withNetworkProfile(new NetworkProfile().withSubnet(new ApiEntityReference().withId("bxvwv"))
                .withNetworkInterfaces(Arrays.asList(new NetworkInterface().withPrivateIpAddress("k"))))
            .withManagementNetworkProfile(
                new NetworkProfile().withSubnet(new ApiEntityReference().withId("ewwwfbkrvrnsv"))
                    .withNetworkInterfaces(Arrays.asList(new NetworkInterface().withPrivateIpAddress("ruvw"))))
            .withStampId("sqfsubcgjbirxb");
        model = BinaryData.fromObject(model).toObject(DedicatedHsmProperties.class);
        Assertions.assertEquals("bxvwv", model.networkProfile().subnet().id());
        Assertions.assertEquals("k", model.networkProfile().networkInterfaces().get(0).privateIpAddress());
        Assertions.assertEquals("ewwwfbkrvrnsv", model.managementNetworkProfile().subnet().id());
        Assertions.assertEquals("ruvw", model.managementNetworkProfile().networkInterfaces().get(0).privateIpAddress());
        Assertions.assertEquals("sqfsubcgjbirxb", model.stampId());
    }
}
