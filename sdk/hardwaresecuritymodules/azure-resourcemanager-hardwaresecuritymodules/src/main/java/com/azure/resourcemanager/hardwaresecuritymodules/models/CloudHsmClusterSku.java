// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Cloud Hsm Cluster SKU information.
 */
@Fluent
public final class CloudHsmClusterSku implements JsonSerializable<CloudHsmClusterSku> {
    /*
     * Sku family of the Cloud HSM Cluster
     */
    private CloudHsmClusterSkuFamily family = CloudHsmClusterSkuFamily.B;

    /*
     * Sku name of the Cloud HSM Cluster
     */
    private CloudHsmClusterSkuName name;

    /*
     * Sku capacity
     */
    private Integer capacity;

    /**
     * Creates an instance of CloudHsmClusterSku class.
     */
    public CloudHsmClusterSku() {
    }

    /**
     * Get the family property: Sku family of the Cloud HSM Cluster.
     * 
     * @return the family value.
     */
    public CloudHsmClusterSkuFamily family() {
        return this.family;
    }

    /**
     * Set the family property: Sku family of the Cloud HSM Cluster.
     * 
     * @param family the family value to set.
     * @return the CloudHsmClusterSku object itself.
     */
    public CloudHsmClusterSku withFamily(CloudHsmClusterSkuFamily family) {
        this.family = family;
        return this;
    }

    /**
     * Get the name property: Sku name of the Cloud HSM Cluster.
     * 
     * @return the name value.
     */
    public CloudHsmClusterSkuName name() {
        return this.name;
    }

    /**
     * Set the name property: Sku name of the Cloud HSM Cluster.
     * 
     * @param name the name value to set.
     * @return the CloudHsmClusterSku object itself.
     */
    public CloudHsmClusterSku withName(CloudHsmClusterSkuName name) {
        this.name = name;
        return this;
    }

    /**
     * Get the capacity property: Sku capacity.
     * 
     * @return the capacity value.
     */
    public Integer capacity() {
        return this.capacity;
    }

    /**
     * Set the capacity property: Sku capacity.
     * 
     * @param capacity the capacity value to set.
     * @return the CloudHsmClusterSku object itself.
     */
    public CloudHsmClusterSku withCapacity(Integer capacity) {
        this.capacity = capacity;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (family() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property family in model CloudHsmClusterSku"));
        }
        if (name() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property name in model CloudHsmClusterSku"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(CloudHsmClusterSku.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("family", this.family == null ? null : this.family.toString());
        jsonWriter.writeStringField("name", this.name == null ? null : this.name.toString());
        jsonWriter.writeNumberField("capacity", this.capacity);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CloudHsmClusterSku from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CloudHsmClusterSku if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CloudHsmClusterSku.
     */
    public static CloudHsmClusterSku fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CloudHsmClusterSku deserializedCloudHsmClusterSku = new CloudHsmClusterSku();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("family".equals(fieldName)) {
                    deserializedCloudHsmClusterSku.family = CloudHsmClusterSkuFamily.fromString(reader.getString());
                } else if ("name".equals(fieldName)) {
                    deserializedCloudHsmClusterSku.name = CloudHsmClusterSkuName.fromString(reader.getString());
                } else if ("capacity".equals(fieldName)) {
                    deserializedCloudHsmClusterSku.capacity = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCloudHsmClusterSku;
        });
    }
}
