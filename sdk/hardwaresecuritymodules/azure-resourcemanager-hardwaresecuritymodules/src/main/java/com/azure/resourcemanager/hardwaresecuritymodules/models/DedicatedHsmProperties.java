// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Properties of the dedicated hsm.
 */
@Fluent
public final class DedicatedHsmProperties implements JsonSerializable<DedicatedHsmProperties> {
    /*
     * Specifies the network interfaces of the dedicated hsm.
     */
    private NetworkProfile networkProfile;

    /*
     * Specifies the management network interfaces of the dedicated hsm.
     */
    private NetworkProfile managementNetworkProfile;

    /*
     * This field will be used when RP does not support Availability zones.
     */
    private String stampId;

    /*
     * Resource Status Message.
     */
    private String statusMessage;

    /*
     * Provisioning state.
     */
    private JsonWebKeyType provisioningState;

    /**
     * Creates an instance of DedicatedHsmProperties class.
     */
    public DedicatedHsmProperties() {
    }

    /**
     * Get the networkProfile property: Specifies the network interfaces of the dedicated hsm.
     * 
     * @return the networkProfile value.
     */
    public NetworkProfile networkProfile() {
        return this.networkProfile;
    }

    /**
     * Set the networkProfile property: Specifies the network interfaces of the dedicated hsm.
     * 
     * @param networkProfile the networkProfile value to set.
     * @return the DedicatedHsmProperties object itself.
     */
    public DedicatedHsmProperties withNetworkProfile(NetworkProfile networkProfile) {
        this.networkProfile = networkProfile;
        return this;
    }

    /**
     * Get the managementNetworkProfile property: Specifies the management network interfaces of the dedicated hsm.
     * 
     * @return the managementNetworkProfile value.
     */
    public NetworkProfile managementNetworkProfile() {
        return this.managementNetworkProfile;
    }

    /**
     * Set the managementNetworkProfile property: Specifies the management network interfaces of the dedicated hsm.
     * 
     * @param managementNetworkProfile the managementNetworkProfile value to set.
     * @return the DedicatedHsmProperties object itself.
     */
    public DedicatedHsmProperties withManagementNetworkProfile(NetworkProfile managementNetworkProfile) {
        this.managementNetworkProfile = managementNetworkProfile;
        return this;
    }

    /**
     * Get the stampId property: This field will be used when RP does not support Availability zones.
     * 
     * @return the stampId value.
     */
    public String stampId() {
        return this.stampId;
    }

    /**
     * Set the stampId property: This field will be used when RP does not support Availability zones.
     * 
     * @param stampId the stampId value to set.
     * @return the DedicatedHsmProperties object itself.
     */
    public DedicatedHsmProperties withStampId(String stampId) {
        this.stampId = stampId;
        return this;
    }

    /**
     * Get the statusMessage property: Resource Status Message.
     * 
     * @return the statusMessage value.
     */
    public String statusMessage() {
        return this.statusMessage;
    }

    /**
     * Get the provisioningState property: Provisioning state.
     * 
     * @return the provisioningState value.
     */
    public JsonWebKeyType provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (networkProfile() != null) {
            networkProfile().validate();
        }
        if (managementNetworkProfile() != null) {
            managementNetworkProfile().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("networkProfile", this.networkProfile);
        jsonWriter.writeJsonField("managementNetworkProfile", this.managementNetworkProfile);
        jsonWriter.writeStringField("stampId", this.stampId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DedicatedHsmProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DedicatedHsmProperties if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the DedicatedHsmProperties.
     */
    public static DedicatedHsmProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DedicatedHsmProperties deserializedDedicatedHsmProperties = new DedicatedHsmProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("networkProfile".equals(fieldName)) {
                    deserializedDedicatedHsmProperties.networkProfile = NetworkProfile.fromJson(reader);
                } else if ("managementNetworkProfile".equals(fieldName)) {
                    deserializedDedicatedHsmProperties.managementNetworkProfile = NetworkProfile.fromJson(reader);
                } else if ("stampId".equals(fieldName)) {
                    deserializedDedicatedHsmProperties.stampId = reader.getString();
                } else if ("statusMessage".equals(fieldName)) {
                    deserializedDedicatedHsmProperties.statusMessage = reader.getString();
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedDedicatedHsmProperties.provisioningState
                        = JsonWebKeyType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDedicatedHsmProperties;
        });
    }
}
