// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The Cloud HSM Properties.
 */
@Fluent
public final class CloudHsmProperties implements JsonSerializable<CloudHsmProperties> {
    /*
     * FQDN of the Cloud HSM
     */
    private String fqdn;

    /*
     * The Cloud HSM State. Values are: Deploying, ConfiguringSlb, Starting, Starting, Failed, Failed, Deleting,
     * DeletingSlbEntry, InitialProvisioning, Updating
     */
    private String state;

    /*
     * The Cloud HSM State message
     */
    private String stateMessage;

    /**
     * Creates an instance of CloudHsmProperties class.
     */
    public CloudHsmProperties() {
    }

    /**
     * Get the fqdn property: FQDN of the Cloud HSM.
     * 
     * @return the fqdn value.
     */
    public String fqdn() {
        return this.fqdn;
    }

    /**
     * Set the fqdn property: FQDN of the Cloud HSM.
     * 
     * @param fqdn the fqdn value to set.
     * @return the CloudHsmProperties object itself.
     */
    public CloudHsmProperties withFqdn(String fqdn) {
        this.fqdn = fqdn;
        return this;
    }

    /**
     * Get the state property: The Cloud HSM State. Values are: Deploying, ConfiguringSlb, Starting, Starting, Failed,
     * Failed, Deleting, DeletingSlbEntry, InitialProvisioning, Updating.
     * 
     * @return the state value.
     */
    public String state() {
        return this.state;
    }

    /**
     * Set the state property: The Cloud HSM State. Values are: Deploying, ConfiguringSlb, Starting, Starting, Failed,
     * Failed, Deleting, DeletingSlbEntry, InitialProvisioning, Updating.
     * 
     * @param state the state value to set.
     * @return the CloudHsmProperties object itself.
     */
    public CloudHsmProperties withState(String state) {
        this.state = state;
        return this;
    }

    /**
     * Get the stateMessage property: The Cloud HSM State message.
     * 
     * @return the stateMessage value.
     */
    public String stateMessage() {
        return this.stateMessage;
    }

    /**
     * Set the stateMessage property: The Cloud HSM State message.
     * 
     * @param stateMessage the stateMessage value to set.
     * @return the CloudHsmProperties object itself.
     */
    public CloudHsmProperties withStateMessage(String stateMessage) {
        this.stateMessage = stateMessage;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("fqdn", this.fqdn);
        jsonWriter.writeStringField("state", this.state);
        jsonWriter.writeStringField("stateMessage", this.stateMessage);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CloudHsmProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CloudHsmProperties if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the CloudHsmProperties.
     */
    public static CloudHsmProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CloudHsmProperties deserializedCloudHsmProperties = new CloudHsmProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("fqdn".equals(fieldName)) {
                    deserializedCloudHsmProperties.fqdn = reader.getString();
                } else if ("state".equals(fieldName)) {
                    deserializedCloudHsmProperties.state = reader.getString();
                } else if ("stateMessage".equals(fieldName)) {
                    deserializedCloudHsmProperties.stateMessage = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCloudHsmProperties;
        });
    }
}
