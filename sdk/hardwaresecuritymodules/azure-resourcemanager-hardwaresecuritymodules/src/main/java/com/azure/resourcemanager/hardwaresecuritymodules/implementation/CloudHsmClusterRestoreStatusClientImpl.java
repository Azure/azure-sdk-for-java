// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.implementation;

import com.azure.core.annotation.ExpectedResponses;
import com.azure.core.annotation.Get;
import com.azure.core.annotation.HeaderParam;
import com.azure.core.annotation.Headers;
import com.azure.core.annotation.Host;
import com.azure.core.annotation.HostParam;
import com.azure.core.annotation.PathParam;
import com.azure.core.annotation.QueryParam;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceInterface;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.annotation.UnexpectedResponseExceptionType;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.RestProxy;
import com.azure.core.management.exception.ManagementException;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.BinaryData;
import com.azure.core.util.Context;
import com.azure.core.util.FluxUtil;
import com.azure.core.util.logging.ClientLogger;
import com.azure.core.util.polling.PollerFlux;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.hardwaresecuritymodules.fluent.CloudHsmClusterRestoreStatusClient;
import com.azure.resourcemanager.hardwaresecuritymodules.fluent.models.RestoreResultInner;
import java.nio.ByteBuffer;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

/**
 * An instance of this class provides access to all the operations defined in CloudHsmClusterRestoreStatusClient.
 */
public final class CloudHsmClusterRestoreStatusClientImpl implements CloudHsmClusterRestoreStatusClient {
    /**
     * The proxy service used to perform REST calls.
     */
    private final CloudHsmClusterRestoreStatusService service;

    /**
     * The service client containing this operation class.
     */
    private final HardwareSecurityModulesManagementClientImpl client;

    /**
     * Initializes an instance of CloudHsmClusterRestoreStatusClientImpl.
     * 
     * @param client the instance of the service client containing this operation class.
     */
    CloudHsmClusterRestoreStatusClientImpl(HardwareSecurityModulesManagementClientImpl client) {
        this.service = RestProxy.create(CloudHsmClusterRestoreStatusService.class, client.getHttpPipeline(),
            client.getSerializerAdapter());
        this.client = client;
    }

    /**
     * The interface defining all the services for HardwareSecurityModulesManagementClientCloudHsmClusterRestoreStatus
     * to be used by the proxy service to perform REST calls.
     */
    @Host("{endpoint}")
    @ServiceInterface(name = "HardwareSecurityModulesManagementClientCloudHsmClusterRestoreStatus")
    public interface CloudHsmClusterRestoreStatusService {
        @Headers({ "Content-Type: application/json" })
        @Get("/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/cloudHsmClusters/{cloudHsmClusterName}/restoreOperationStatus/{jobId}")
        @ExpectedResponses({ 200, 202 })
        @UnexpectedResponseExceptionType(ManagementException.class)
        Mono<Response<Flux<ByteBuffer>>> get(@HostParam("endpoint") String endpoint,
            @QueryParam("api-version") String apiVersion, @PathParam("subscriptionId") String subscriptionId,
            @PathParam("resourceGroupName") String resourceGroupName,
            @PathParam("cloudHsmClusterName") String cloudHsmClusterName, @PathParam("jobId") String jobId,
            @HeaderParam("Accept") String accept, Context context);

        @Headers({ "Content-Type: application/json" })
        @Get("/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/cloudHsmClusters/{cloudHsmClusterName}/restoreOperationStatus/{jobId}")
        @ExpectedResponses({ 200, 202 })
        @UnexpectedResponseExceptionType(ManagementException.class)
        Response<BinaryData> getSync(@HostParam("endpoint") String endpoint,
            @QueryParam("api-version") String apiVersion, @PathParam("subscriptionId") String subscriptionId,
            @PathParam("resourceGroupName") String resourceGroupName,
            @PathParam("cloudHsmClusterName") String cloudHsmClusterName, @PathParam("jobId") String jobId,
            @HeaderParam("Accept") String accept, Context context);
    }

    /**
     * Gets the restore operation status of the specified Cloud HSM Cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudHsmClusterName Name of the Cloud HSM Cluster.
     * @param jobId Identifier for the restore operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the restore operation status of the specified Cloud HSM Cluster along with {@link Response} on successful
     * completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    private Mono<Response<Flux<ByteBuffer>>> getWithResponseAsync(String resourceGroupName, String cloudHsmClusterName,
        String jobId) {
        if (this.client.getEndpoint() == null) {
            return Mono.error(
                new IllegalArgumentException("Parameter this.client.getEndpoint() is required and cannot be null."));
        }
        if (this.client.getSubscriptionId() == null) {
            return Mono.error(new IllegalArgumentException(
                "Parameter this.client.getSubscriptionId() is required and cannot be null."));
        }
        if (resourceGroupName == null) {
            return Mono
                .error(new IllegalArgumentException("Parameter resourceGroupName is required and cannot be null."));
        }
        if (cloudHsmClusterName == null) {
            return Mono
                .error(new IllegalArgumentException("Parameter cloudHsmClusterName is required and cannot be null."));
        }
        if (jobId == null) {
            return Mono.error(new IllegalArgumentException("Parameter jobId is required and cannot be null."));
        }
        final String accept = "application/json";
        return FluxUtil
            .withContext(context -> service.get(this.client.getEndpoint(), this.client.getApiVersion(),
                this.client.getSubscriptionId(), resourceGroupName, cloudHsmClusterName, jobId, accept, context))
            .contextWrite(context -> context.putAll(FluxUtil.toReactorContext(this.client.getContext()).readOnly()));
    }

    /**
     * Gets the restore operation status of the specified Cloud HSM Cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudHsmClusterName Name of the Cloud HSM Cluster.
     * @param jobId Identifier for the restore operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the restore operation status of the specified Cloud HSM Cluster along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    private Response<BinaryData> getWithResponse(String resourceGroupName, String cloudHsmClusterName, String jobId) {
        if (this.client.getEndpoint() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Parameter this.client.getEndpoint() is required and cannot be null."));
        }
        if (this.client.getSubscriptionId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Parameter this.client.getSubscriptionId() is required and cannot be null."));
        }
        if (resourceGroupName == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Parameter resourceGroupName is required and cannot be null."));
        }
        if (cloudHsmClusterName == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Parameter cloudHsmClusterName is required and cannot be null."));
        }
        if (jobId == null) {
            throw LOGGER.atError().log(new IllegalArgumentException("Parameter jobId is required and cannot be null."));
        }
        final String accept = "application/json";
        return service.getSync(this.client.getEndpoint(), this.client.getApiVersion(), this.client.getSubscriptionId(),
            resourceGroupName, cloudHsmClusterName, jobId, accept, Context.NONE);
    }

    /**
     * Gets the restore operation status of the specified Cloud HSM Cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudHsmClusterName Name of the Cloud HSM Cluster.
     * @param jobId Identifier for the restore operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the restore operation status of the specified Cloud HSM Cluster along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    private Response<BinaryData> getWithResponse(String resourceGroupName, String cloudHsmClusterName, String jobId,
        Context context) {
        if (this.client.getEndpoint() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Parameter this.client.getEndpoint() is required and cannot be null."));
        }
        if (this.client.getSubscriptionId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Parameter this.client.getSubscriptionId() is required and cannot be null."));
        }
        if (resourceGroupName == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Parameter resourceGroupName is required and cannot be null."));
        }
        if (cloudHsmClusterName == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Parameter cloudHsmClusterName is required and cannot be null."));
        }
        if (jobId == null) {
            throw LOGGER.atError().log(new IllegalArgumentException("Parameter jobId is required and cannot be null."));
        }
        final String accept = "application/json";
        return service.getSync(this.client.getEndpoint(), this.client.getApiVersion(), this.client.getSubscriptionId(),
            resourceGroupName, cloudHsmClusterName, jobId, accept, context);
    }

    /**
     * Gets the restore operation status of the specified Cloud HSM Cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudHsmClusterName Name of the Cloud HSM Cluster.
     * @param jobId Identifier for the restore operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link PollerFlux} for polling of the restore operation status of the specified Cloud HSM Cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    private PollerFlux<PollResult<RestoreResultInner>, RestoreResultInner> beginGetAsync(String resourceGroupName,
        String cloudHsmClusterName, String jobId) {
        Mono<Response<Flux<ByteBuffer>>> mono = getWithResponseAsync(resourceGroupName, cloudHsmClusterName, jobId);
        return this.client.<RestoreResultInner, RestoreResultInner>getLroResult(mono, this.client.getHttpPipeline(),
            RestoreResultInner.class, RestoreResultInner.class, this.client.getContext());
    }

    /**
     * Gets the restore operation status of the specified Cloud HSM Cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudHsmClusterName Name of the Cloud HSM Cluster.
     * @param jobId Identifier for the restore operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the restore operation status of the specified Cloud HSM Cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    public SyncPoller<PollResult<RestoreResultInner>, RestoreResultInner> beginGet(String resourceGroupName,
        String cloudHsmClusterName, String jobId) {
        Response<BinaryData> response = getWithResponse(resourceGroupName, cloudHsmClusterName, jobId);
        return this.client.<RestoreResultInner, RestoreResultInner>getLroResult(response, RestoreResultInner.class,
            RestoreResultInner.class, Context.NONE);
    }

    /**
     * Gets the restore operation status of the specified Cloud HSM Cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudHsmClusterName Name of the Cloud HSM Cluster.
     * @param jobId Identifier for the restore operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the restore operation status of the specified Cloud HSM Cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    public SyncPoller<PollResult<RestoreResultInner>, RestoreResultInner> beginGet(String resourceGroupName,
        String cloudHsmClusterName, String jobId, Context context) {
        Response<BinaryData> response = getWithResponse(resourceGroupName, cloudHsmClusterName, jobId, context);
        return this.client.<RestoreResultInner, RestoreResultInner>getLroResult(response, RestoreResultInner.class,
            RestoreResultInner.class, context);
    }

    /**
     * Gets the restore operation status of the specified Cloud HSM Cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudHsmClusterName Name of the Cloud HSM Cluster.
     * @param jobId Identifier for the restore operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the restore operation status of the specified Cloud HSM Cluster on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    private Mono<RestoreResultInner> getAsync(String resourceGroupName, String cloudHsmClusterName, String jobId) {
        return beginGetAsync(resourceGroupName, cloudHsmClusterName, jobId).last()
            .flatMap(this.client::getLroFinalResultOrError);
    }

    /**
     * Gets the restore operation status of the specified Cloud HSM Cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudHsmClusterName Name of the Cloud HSM Cluster.
     * @param jobId Identifier for the restore operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the restore operation status of the specified Cloud HSM Cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public RestoreResultInner get(String resourceGroupName, String cloudHsmClusterName, String jobId) {
        return beginGet(resourceGroupName, cloudHsmClusterName, jobId).getFinalResult();
    }

    /**
     * Gets the restore operation status of the specified Cloud HSM Cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudHsmClusterName Name of the Cloud HSM Cluster.
     * @param jobId Identifier for the restore operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the restore operation status of the specified Cloud HSM Cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public RestoreResultInner get(String resourceGroupName, String cloudHsmClusterName, String jobId, Context context) {
        return beginGet(resourceGroupName, cloudHsmClusterName, jobId, context).getFinalResult();
    }

    private static final ClientLogger LOGGER = new ClientLogger(CloudHsmClusterRestoreStatusClientImpl.class);
}
