// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceprovisioningservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.deviceprovisioningservices.DeviceProvisioningServicesManager;
import com.azure.resourcemanager.deviceprovisioningservices.models.CertificateResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DpsCertificatesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"subject\":\"nkoukn\",\"expiry\":\"Tue, 16 Feb 2021 10:50:56 GMT\",\"thumbprint\":\"tiukbldngkpoci\",\"isVerified\":false,\"created\":\"Fri, 28 May 2021 21:07:43 GMT\",\"updated\":\"Wed, 06 Jan 2021 21:03:44 GMT\"},\"etag\":\"g\",\"id\":\"piu\",\"name\":\"gygev\",\"type\":\"zntypmrb\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DeviceProvisioningServicesManager manager = DeviceProvisioningServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<CertificateResponse> response
            = manager.dpsCertificates().list("gigr", "wburvjxxjnspydpt", com.azure.core.util.Context.NONE);

        Assertions.assertFalse(response.iterator().next().properties().isVerified());
    }
}
