// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceprovisioningservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.deviceprovisioningservices.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.deviceprovisioningservices.models.PrivateEndpoint;
import com.azure.resourcemanager.deviceprovisioningservices.models.PrivateEndpointConnectionProperties;
import com.azure.resourcemanager.deviceprovisioningservices.models.PrivateLinkServiceConnectionState;
import com.azure.resourcemanager.deviceprovisioningservices.models.PrivateLinkServiceConnectionStatus;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionInner model = BinaryData.fromString(
            "{\"properties\":{\"privateEndpoint\":{\"id\":\"h\"},\"privateLinkServiceConnectionState\":{\"status\":\"Disconnected\",\"description\":\"oifiyipjxsqwpgr\",\"actionsRequired\":\"znorcj\"}},\"id\":\"snb\",\"name\":\"xqabnmocpcysh\",\"type\":\"rzafbljjgpbtoqcj\"}")
            .toObject(PrivateEndpointConnectionInner.class);
        Assertions.assertEquals(PrivateLinkServiceConnectionStatus.DISCONNECTED,
            model.properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("oifiyipjxsqwpgr",
            model.properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("znorcj", model.properties().privateLinkServiceConnectionState().actionsRequired());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionInner model
            = new PrivateEndpointConnectionInner()
                .withProperties(new PrivateEndpointConnectionProperties().withPrivateEndpoint(new PrivateEndpoint())
                    .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                        .withStatus(PrivateLinkServiceConnectionStatus.DISCONNECTED)
                        .withDescription("oifiyipjxsqwpgr")
                        .withActionsRequired("znorcj")));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionInner.class);
        Assertions.assertEquals(PrivateLinkServiceConnectionStatus.DISCONNECTED,
            model.properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("oifiyipjxsqwpgr",
            model.properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("znorcj", model.properties().privateLinkServiceConnectionState().actionsRequired());
    }
}
