// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.deviceprovisioningservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.deviceprovisioningservices.IotDpsManager;
import com.azure.resourcemanager.deviceprovisioningservices.models.CertificateProperties;
import com.azure.resourcemanager.deviceprovisioningservices.models.CertificateResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DpsCertificatesCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"subject\":\"xdeoejzic\",\"expiry\":\"Fri, 05 Feb 2021 10:41:48 GMT\",\"thumbprint\":\"jttgzf\",\"isVerified\":true,\"created\":\"Sun, 30 May 2021 04:32:56 GMT\",\"updated\":\"Tue, 08 Jun 2021 10:00:04 GMT\"},\"etag\":\"jdeyeamdpha\",\"id\":\"lpbuxwgipwhonowk\",\"name\":\"shwankixzbinje\",\"type\":\"uttmrywnuzoqft\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        IotDpsManager manager = IotDpsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        CertificateResponse response = manager.dpsCertificates()
            .define("o")
            .withExistingProvisioningService("udwtiukbl", "ngkpocipazy")
            .withProperties(new CertificateProperties().withIsVerified(true))
            .withIfMatch("dpydn")
            .create();

        Assertions.assertEquals(true, response.properties().isVerified());
    }
}
