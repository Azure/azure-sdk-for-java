// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.deviceprovisioningservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.deviceprovisioningservices.IotDpsManager;
import com.azure.resourcemanager.deviceprovisioningservices.models.PrivateLinkResources;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IotDpsResourcesListPrivateLinkResourcesWithResMockTests {
    @Test
    public void testListPrivateLinkResourcesWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"id\":\"ourqhakau\",\"name\":\"shsfwxosowzxcu\",\"type\":\"cjooxdjebwpucwwf\",\"properties\":{\"groupId\":\"vbvmeu\",\"requiredMembers\":[\"vyhzceuojgjrwj\",\"eiotwmcdytdx\",\"it\",\"nrjawgqwg\"],\"requiredZoneNames\":[\"isk\"]}},{\"id\":\"bkpyc\",\"name\":\"lwn\",\"type\":\"hjdauwhvylwz\",\"properties\":{\"groupId\":\"dhxujznbmpo\",\"requiredMembers\":[\"przqlveu\"],\"requiredZoneNames\":[\"pjmkhfxobbc\"]}},{\"id\":\"s\",\"name\":\"jriplrbpbewtghf\",\"type\":\"lcgwxzvlvqh\",\"properties\":{\"groupId\":\"begibtnmxiebwwa\",\"requiredMembers\":[\"yqcgwrtzjuzgwy\",\"mhtxongmtsavjcb\"],\"requiredZoneNames\":[\"qpsrknftguvri\",\"hprwmdyv\",\"qtayri\"]}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        IotDpsManager manager = IotDpsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PrivateLinkResources response = manager.iotDpsResources()
            .listPrivateLinkResourcesWithResponse("fmisg", "bnbbeldawkz", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("vbvmeu", response.value().get(0).properties().groupId());
        Assertions.assertEquals("vyhzceuojgjrwj", response.value().get(0).properties().requiredMembers().get(0));
        Assertions.assertEquals("isk", response.value().get(0).properties().requiredZoneNames().get(0));
    }
}
