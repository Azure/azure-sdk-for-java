// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.deviceprovisioningservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.deviceprovisioningservices.models.GroupIdInformationProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class GroupIdInformationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GroupIdInformationProperties model = BinaryData.fromString(
            "{\"groupId\":\"jampmngnzscxaqw\",\"requiredMembers\":[\"hcbonqvpkvlr\",\"njeaseipheofloke\",\"y\",\"enjbdlwtgrhp\"],\"requiredZoneNames\":[\"jumasx\"]}")
            .toObject(GroupIdInformationProperties.class);
        Assertions.assertEquals("jampmngnzscxaqw", model.groupId());
        Assertions.assertEquals("hcbonqvpkvlr", model.requiredMembers().get(0));
        Assertions.assertEquals("jumasx", model.requiredZoneNames().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GroupIdInformationProperties model = new GroupIdInformationProperties().withGroupId("jampmngnzscxaqw")
            .withRequiredMembers(Arrays.asList("hcbonqvpkvlr", "njeaseipheofloke", "y", "enjbdlwtgrhp"))
            .withRequiredZoneNames(Arrays.asList("jumasx"));
        model = BinaryData.fromObject(model).toObject(GroupIdInformationProperties.class);
        Assertions.assertEquals("jampmngnzscxaqw", model.groupId());
        Assertions.assertEquals("hcbonqvpkvlr", model.requiredMembers().get(0));
        Assertions.assertEquals("jumasx", model.requiredZoneNames().get(0));
    }
}
