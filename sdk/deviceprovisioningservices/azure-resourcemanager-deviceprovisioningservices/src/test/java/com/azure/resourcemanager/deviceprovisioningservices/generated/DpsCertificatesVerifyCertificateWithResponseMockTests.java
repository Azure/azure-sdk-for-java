// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.deviceprovisioningservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.deviceprovisioningservices.IotDpsManager;
import com.azure.resourcemanager.deviceprovisioningservices.models.CertificatePurpose;
import com.azure.resourcemanager.deviceprovisioningservices.models.CertificateResponse;
import com.azure.resourcemanager.deviceprovisioningservices.models.VerificationCodeRequest;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DpsCertificatesVerifyCertificateWithResponseMockTests {
    @Test
    public void testVerifyCertificateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"subject\":\"sonpclhocohs\",\"expiry\":\"Wed, 24 Feb 2021 19:37:12 GMT\",\"thumbprint\":\"leggzfbu\",\"isVerified\":true,\"created\":\"Wed, 10 Feb 2021 14:39:35 GMT\",\"updated\":\"Fri, 18 Jun 2021 10:54:53 GMT\"},\"etag\":\"feiithlvmez\",\"id\":\"shxmzsbbzoggigrx\",\"name\":\"burvjxxjnspy\",\"type\":\"ptkoenkoukn\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        IotDpsManager manager = IotDpsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        CertificateResponse response = manager.dpsCertificates()
            .verifyCertificateWithResponse("okacspk", "lhzdobp", "jmflbvvnch", "kcciwwzjuqkhr",
                new VerificationCodeRequest().withCertificate("jiwkuofoskghsau"), "imjm", "xieduugidyjrr".getBytes(),
                false, CertificatePurpose.CLIENT_AUTHENTICATION, OffsetDateTime.parse("2021-09-25T16:50:02Z"),
                OffsetDateTime.parse("2021-09-15T05:38:02Z"), true, "v", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(true, response.properties().isVerified());
    }
}
