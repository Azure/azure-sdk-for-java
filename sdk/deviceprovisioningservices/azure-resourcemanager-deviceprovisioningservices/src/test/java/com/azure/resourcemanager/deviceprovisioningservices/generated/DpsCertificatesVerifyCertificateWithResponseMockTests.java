// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceprovisioningservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.deviceprovisioningservices.DeviceProvisioningServicesManager;
import com.azure.resourcemanager.deviceprovisioningservices.models.CertificatePurpose;
import com.azure.resourcemanager.deviceprovisioningservices.models.CertificateResponse;
import com.azure.resourcemanager.deviceprovisioningservices.models.VerificationCodeRequest;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DpsCertificatesVerifyCertificateWithResponseMockTests {
    @Test
    public void testVerifyCertificateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"subject\":\"q\",\"expiry\":\"Mon, 06 Sep 2021 06:54:01 GMT\",\"thumbprint\":\"ylihkaetckt\",\"isVerified\":true,\"created\":\"Tue, 13 Jul 2021 01:18:13 GMT\",\"updated\":\"Mon, 20 Sep 2021 06:05:50 GMT\"},\"etag\":\"ymuctqhjfbebrj\",\"id\":\"erfuwuttt\",\"name\":\"fvjrbirphxepcy\",\"type\":\"ahfn\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DeviceProvisioningServicesManager manager = DeviceProvisioningServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        CertificateResponse response = manager.dpsCertificates()
            .verifyCertificateWithResponse("cohoq", "nwvlryavwhheunmm", "hgyxzkonoc", "koklya",
                new VerificationCodeRequest().withCertificate("conuqszfkbeype"), "rmjmwvvjektc", "senhwlrs".getBytes(),
                true, CertificatePurpose.SERVER_AUTHENTICATION, OffsetDateTime.parse("2021-08-26T16:24:45Z"),
                OffsetDateTime.parse("2021-03-02T08:14:37Z"), false, "v", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertTrue(response.properties().isVerified());
    }
}
