// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurestackhci.AzureStackHciManager;
import com.azure.resourcemanager.azurestackhci.models.Extension;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ExtensionsCreateMockTests {
    @Test
    public void testCreate() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Succeeded\",\"extensionParameters\":{\"forceUpdateTag\":\"oyrfgxk\",\"publisher\":\"pmypgfq\",\"type\":\"tyw\",\"typeHandlerVersion\":\"a\",\"autoUpgradeMinorVersion\":false,\"settings\":\"datajpewpyjlfx\",\"protectedSettings\":\"datapqcrzgeuqxbpiat\",\"enableAutomaticUpgrade\":true},\"aggregateState\":\"Succeeded\",\"perNodeExtensionDetails\":[{\"name\":\"d\",\"extension\":\"dr\",\"typeHandlerVersion\":\"gddhjkrukizyhgs\",\"state\":\"Moving\",\"instanceView\":{\"name\":\"ktxqfpjbqgg\",\"type\":\"eiwdhdmncgbfzu\",\"typeHandlerVersion\":\"stunmlh\",\"status\":{}}},{\"name\":\"bkl\",\"extension\":\"ich\",\"typeHandlerVersion\":\"sysmvxodgw\",\"state\":\"Failed\",\"instanceView\":{\"name\":\"ifc\",\"type\":\"bdujgcwxvecbb\",\"typeHandlerVersion\":\"trdxri\",\"status\":{}}},{\"name\":\"bbgiarksykpgdqxw\",\"extension\":\"zrwiqrxha\",\"typeHandlerVersion\":\"cdosqkptj\",\"state\":\"Canceled\",\"instanceView\":{\"name\":\"mmainwhe\",\"type\":\"kp\",\"typeHandlerVersion\":\"wuntobuiz\",\"status\":{}}}],\"managedBy\":\"Azure\"},\"id\":\"wgvydjufb\",\"name\":\"klblaxp\",\"type\":\"gjwdab\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureStackHciManager manager = AzureStackHciManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Extension response = manager.extensions()
            .define("xkf")
            .withExistingArcSetting("neakh", "mhobcyan", "fvqtvkhgvoo")
            .withForceUpdateTag("mhcctopuowy")
            .withPublisher("skbyhquhczygx")
            .withTypePropertiesType("ajpxecxqnwhscoza")
            .withTypeHandlerVersion("vgxsm")
            .withAutoUpgradeMinorVersion(true)
            .withSettings("datawirfljf")
            .withProtectedSettings("dataxqou")
            .withEnableAutomaticUpgrade(false)
            .create();

        Assertions.assertEquals("oyrfgxk", response.forceUpdateTag());
        Assertions.assertEquals("pmypgfq", response.publisher());
        Assertions.assertEquals("tyw", response.typePropertiesType());
        Assertions.assertEquals("a", response.typeHandlerVersion());
        Assertions.assertEquals(false, response.autoUpgradeMinorVersion());
        Assertions.assertEquals(true, response.enableAutomaticUpgrade());
    }
}
