// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.fluent.models.Components3Iu67JSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetableProperties;
import com.azure.resourcemanager.azurestackhci.models.VirtualNetworkPropertiesSubnetsPropertiesItemsItem;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class Components3Iu67JSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetablePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Components3Iu67JSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetableProperties model =
            BinaryData
                .fromString(
                    "{\"routes\":[{\"name\":\"jnhgwydyyn\",\"properties\":{\"addressPrefix\":\"khgb\",\"nextHopIpAddress\":\"ta\"}}]}")
                .toObject(
                    Components3Iu67JSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetableProperties
                        .class);
        Assertions.assertEquals("jnhgwydyyn", model.routes().get(0).name());
        Assertions.assertEquals("khgb", model.routes().get(0).addressPrefix());
        Assertions.assertEquals("ta", model.routes().get(0).nextHopIpAddress());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Components3Iu67JSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetableProperties model =
            new Components3Iu67JSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetableProperties()
                .withRoutes(
                    Arrays
                        .asList(
                            new VirtualNetworkPropertiesSubnetsPropertiesItemsItem()
                                .withName("jnhgwydyyn")
                                .withAddressPrefix("khgb")
                                .withNextHopIpAddress("ta")));
        model =
            BinaryData
                .fromObject(model)
                .toObject(
                    Components3Iu67JSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetableProperties
                        .class);
        Assertions.assertEquals("jnhgwydyyn", model.routes().get(0).name());
        Assertions.assertEquals("khgb", model.routes().get(0).addressPrefix());
        Assertions.assertEquals("ta", model.routes().get(0).nextHopIpAddress());
    }
}
