// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.models.AdapterPropertyOverrides;
import com.azure.resourcemanager.azurestackhci.models.Intents;
import com.azure.resourcemanager.azurestackhci.models.QosPolicyOverrides;
import com.azure.resourcemanager.azurestackhci.models.VirtualSwitchConfigurationOverrides;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class IntentsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Intents model = BinaryData.fromString(
            "{\"name\":\"mbqfqvmk\",\"trafficType\":[\"zapvhelx\"],\"adapter\":[\"lya\",\"dd\",\"kcbcue\",\"rjxgciqib\"],\"overrideVirtualSwitchConfiguration\":false,\"virtualSwitchConfigurationOverrides\":{\"enableIov\":\"sdqrhzoymibmrq\",\"loadBalancingAlgorithm\":\"bahwfl\"},\"overrideQosPolicy\":true,\"qosPolicyOverrides\":{\"priorityValue8021Action_Cluster\":\"mhrkwofyyvoqacp\",\"priorityValue8021Action_SMB\":\"xpbtgiwbwo\",\"bandwidthPercentage_SMB\":\"washr\"},\"overrideAdapterProperty\":false,\"adapterPropertyOverrides\":{\"jumboPacket\":\"nqxwbp\",\"networkDirect\":\"ulpiuj\",\"networkDirectTechnology\":\"asipqiio\"}}")
            .toObject(Intents.class);
        Assertions.assertEquals("mbqfqvmk", model.name());
        Assertions.assertEquals("zapvhelx", model.trafficType().get(0));
        Assertions.assertEquals("lya", model.adapter().get(0));
        Assertions.assertEquals(false, model.overrideVirtualSwitchConfiguration());
        Assertions.assertEquals("sdqrhzoymibmrq", model.virtualSwitchConfigurationOverrides().enableIov());
        Assertions.assertEquals("bahwfl", model.virtualSwitchConfigurationOverrides().loadBalancingAlgorithm());
        Assertions.assertEquals(true, model.overrideQosPolicy());
        Assertions.assertEquals("mhrkwofyyvoqacp", model.qosPolicyOverrides().priorityValue8021ActionCluster());
        Assertions.assertEquals("xpbtgiwbwo", model.qosPolicyOverrides().priorityValue8021ActionSmb());
        Assertions.assertEquals("washr", model.qosPolicyOverrides().bandwidthPercentageSmb());
        Assertions.assertEquals(false, model.overrideAdapterProperty());
        Assertions.assertEquals("nqxwbp", model.adapterPropertyOverrides().jumboPacket());
        Assertions.assertEquals("ulpiuj", model.adapterPropertyOverrides().networkDirect());
        Assertions.assertEquals("asipqiio", model.adapterPropertyOverrides().networkDirectTechnology());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Intents model = new Intents().withName("mbqfqvmk")
            .withTrafficType(Arrays.asList("zapvhelx"))
            .withAdapter(Arrays.asList("lya", "dd", "kcbcue", "rjxgciqib"))
            .withOverrideVirtualSwitchConfiguration(false)
            .withVirtualSwitchConfigurationOverrides(
                new VirtualSwitchConfigurationOverrides().withEnableIov("sdqrhzoymibmrq")
                    .withLoadBalancingAlgorithm("bahwfl"))
            .withOverrideQosPolicy(true)
            .withQosPolicyOverrides(new QosPolicyOverrides().withPriorityValue8021ActionCluster("mhrkwofyyvoqacp")
                .withPriorityValue8021ActionSmb("xpbtgiwbwo")
                .withBandwidthPercentageSmb("washr"))
            .withOverrideAdapterProperty(false)
            .withAdapterPropertyOverrides(new AdapterPropertyOverrides().withJumboPacket("nqxwbp")
                .withNetworkDirect("ulpiuj")
                .withNetworkDirectTechnology("asipqiio"));
        model = BinaryData.fromObject(model).toObject(Intents.class);
        Assertions.assertEquals("mbqfqvmk", model.name());
        Assertions.assertEquals("zapvhelx", model.trafficType().get(0));
        Assertions.assertEquals("lya", model.adapter().get(0));
        Assertions.assertEquals(false, model.overrideVirtualSwitchConfiguration());
        Assertions.assertEquals("sdqrhzoymibmrq", model.virtualSwitchConfigurationOverrides().enableIov());
        Assertions.assertEquals("bahwfl", model.virtualSwitchConfigurationOverrides().loadBalancingAlgorithm());
        Assertions.assertEquals(true, model.overrideQosPolicy());
        Assertions.assertEquals("mhrkwofyyvoqacp", model.qosPolicyOverrides().priorityValue8021ActionCluster());
        Assertions.assertEquals("xpbtgiwbwo", model.qosPolicyOverrides().priorityValue8021ActionSmb());
        Assertions.assertEquals("washr", model.qosPolicyOverrides().bandwidthPercentageSmb());
        Assertions.assertEquals(false, model.overrideAdapterProperty());
        Assertions.assertEquals("nqxwbp", model.adapterPropertyOverrides().jumboPacket());
        Assertions.assertEquals("ulpiuj", model.adapterPropertyOverrides().networkDirect());
        Assertions.assertEquals("asipqiio", model.adapterPropertyOverrides().networkDirectTechnology());
    }
}
