// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.models.HardwareProfileUpdate;
import com.azure.resourcemanager.azurestackhci.models.NetworkProfileUpdate;
import com.azure.resourcemanager.azurestackhci.models.NetworkProfileUpdateNetworkInterfacesItem;
import com.azure.resourcemanager.azurestackhci.models.OsProfileUpdate;
import com.azure.resourcemanager.azurestackhci.models.OsProfileUpdateLinuxConfiguration;
import com.azure.resourcemanager.azurestackhci.models.OsProfileUpdateWindowsConfiguration;
import com.azure.resourcemanager.azurestackhci.models.StorageProfileUpdate;
import com.azure.resourcemanager.azurestackhci.models.StorageProfileUpdateDataDisksItem;
import com.azure.resourcemanager.azurestackhci.models.VirtualMachineInstanceUpdateProperties;
import com.azure.resourcemanager.azurestackhci.models.VmSizeEnum;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VirtualMachineInstanceUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VirtualMachineInstanceUpdateProperties model = BinaryData.fromString(
            "{\"hardwareProfile\":{\"vmSize\":\"Standard_NK6\",\"processors\":847050759,\"memoryMB\":569117466292471912},\"storageProfile\":{\"dataDisks\":[{\"id\":\"vpsozjiihjri\"},{\"id\":\"mrzoep\"},{\"id\":\"wdvwnjkgvfnmx\"},{\"id\":\"rsqftib\"}]},\"networkProfile\":{\"networkInterfaces\":[{\"id\":\"yvp\"},{\"id\":\"fqjpnqno\"}]},\"osProfile\":{\"computerName\":\"bedenrexkx\",\"linuxConfiguration\":{\"provisionVMAgent\":true,\"provisionVMConfigAgent\":true},\"windowsConfiguration\":{\"provisionVMAgent\":true,\"provisionVMConfigAgent\":true}}}")
            .toObject(VirtualMachineInstanceUpdateProperties.class);
        Assertions.assertEquals(VmSizeEnum.STANDARD_NK6, model.hardwareProfile().vmSize());
        Assertions.assertEquals(847050759, model.hardwareProfile().processors());
        Assertions.assertEquals(569117466292471912L, model.hardwareProfile().memoryMB());
        Assertions.assertEquals("vpsozjiihjri", model.storageProfile().dataDisks().get(0).id());
        Assertions.assertEquals("yvp", model.networkProfile().networkInterfaces().get(0).id());
        Assertions.assertEquals("bedenrexkx", model.osProfile().computerName());
        Assertions.assertEquals(true, model.osProfile().linuxConfiguration().provisionVMAgent());
        Assertions.assertEquals(true, model.osProfile().linuxConfiguration().provisionVMConfigAgent());
        Assertions.assertEquals(true, model.osProfile().windowsConfiguration().provisionVMAgent());
        Assertions.assertEquals(true, model.osProfile().windowsConfiguration().provisionVMConfigAgent());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VirtualMachineInstanceUpdateProperties model = new VirtualMachineInstanceUpdateProperties()
            .withHardwareProfile(new HardwareProfileUpdate().withVmSize(VmSizeEnum.STANDARD_NK6)
                .withProcessors(847050759)
                .withMemoryMB(569117466292471912L))
            .withStorageProfile(new StorageProfileUpdate()
                .withDataDisks(Arrays.asList(new StorageProfileUpdateDataDisksItem().withId("vpsozjiihjri"),
                    new StorageProfileUpdateDataDisksItem().withId("mrzoep"),
                    new StorageProfileUpdateDataDisksItem().withId("wdvwnjkgvfnmx"),
                    new StorageProfileUpdateDataDisksItem().withId("rsqftib"))))
            .withNetworkProfile(new NetworkProfileUpdate()
                .withNetworkInterfaces(Arrays.asList(new NetworkProfileUpdateNetworkInterfacesItem().withId("yvp"),
                    new NetworkProfileUpdateNetworkInterfacesItem().withId("fqjpnqno"))))
            .withOsProfile(new OsProfileUpdate().withComputerName("bedenrexkx")
                .withLinuxConfiguration(
                    new OsProfileUpdateLinuxConfiguration().withProvisionVMAgent(true).withProvisionVMConfigAgent(true))
                .withWindowsConfiguration(new OsProfileUpdateWindowsConfiguration().withProvisionVMAgent(true)
                    .withProvisionVMConfigAgent(true)));
        model = BinaryData.fromObject(model).toObject(VirtualMachineInstanceUpdateProperties.class);
        Assertions.assertEquals(VmSizeEnum.STANDARD_NK6, model.hardwareProfile().vmSize());
        Assertions.assertEquals(847050759, model.hardwareProfile().processors());
        Assertions.assertEquals(569117466292471912L, model.hardwareProfile().memoryMB());
        Assertions.assertEquals("vpsozjiihjri", model.storageProfile().dataDisks().get(0).id());
        Assertions.assertEquals("yvp", model.networkProfile().networkInterfaces().get(0).id());
        Assertions.assertEquals("bedenrexkx", model.osProfile().computerName());
        Assertions.assertEquals(true, model.osProfile().linuxConfiguration().provisionVMAgent());
        Assertions.assertEquals(true, model.osProfile().linuxConfiguration().provisionVMConfigAgent());
        Assertions.assertEquals(true, model.osProfile().windowsConfiguration().provisionVMAgent());
        Assertions.assertEquals(true, model.osProfile().windowsConfiguration().provisionVMConfigAgent());
    }
}
