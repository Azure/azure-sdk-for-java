// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.fluent.models.Step;
import com.azure.resourcemanager.azurestackhci.fluent.models.UpdateRunInner;
import com.azure.resourcemanager.azurestackhci.models.UpdateRunPropertiesState;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UpdateRunInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UpdateRunInner model = BinaryData.fromString(
            "{\"location\":\"klinhmdptysprq\",\"properties\":{\"provisioningState\":\"Deleted\",\"timeStarted\":\"2021-09-05T11:06:21Z\",\"lastUpdatedTime\":\"2021-05-11T07:51:19Z\",\"duration\":\"lsvjgpliu\",\"state\":\"InProgress\",\"progress\":{\"name\":\"yxq\",\"description\":\"pcohhoucqpqojx\",\"errorMessage\":\"zrzdcgd\",\"status\":\"enribc\",\"startTimeUtc\":\"2021-02-22T13:00:58Z\",\"endTimeUtc\":\"2021-06-06T13:51:25Z\",\"lastUpdatedTimeUtc\":\"2021-03-13T03:34:48Z\",\"steps\":[{\"name\":\"wflj\",\"description\":\"namtuatmzw\",\"errorMessage\":\"jncqtjzmi\",\"status\":\"gbgatzuuvbxn\",\"startTimeUtc\":\"2021-11-21T17:16:57Z\",\"endTimeUtc\":\"2021-07-25T21:14:07Z\",\"lastUpdatedTimeUtc\":\"2021-06-29T20:02:54Z\",\"steps\":[{},{},{},{}]},{\"name\":\"tzlswvaj\",\"description\":\"utlxjoqzasunwqrj\",\"errorMessage\":\"rg\",\"status\":\"aohcmbuocn\",\"startTimeUtc\":\"2021-05-14T07:13:07Z\",\"endTimeUtc\":\"2021-09-21T12:04:35Z\",\"lastUpdatedTimeUtc\":\"2021-03-20T01:13:45Z\",\"steps\":[{},{},{},{}]},{\"name\":\"xameblydyvkfkm\",\"description\":\"cxneh\",\"errorMessage\":\"mtodl\",\"status\":\"yapucygvoa\",\"startTimeUtc\":\"2021-05-31T14:41:18Z\",\"endTimeUtc\":\"2021-08-14T23:16:19Z\",\"lastUpdatedTimeUtc\":\"2021-05-24T10:00:40Z\",\"steps\":[{},{}]},{\"name\":\"ieegjl\",\"description\":\"vpaseksgbu\",\"errorMessage\":\"ntuygdhgaqipir\",\"status\":\"wrq\",\"startTimeUtc\":\"2021-07-03T05:49:55Z\",\"endTimeUtc\":\"2021-01-26T14:21:23Z\",\"lastUpdatedTimeUtc\":\"2021-02-28T23:07:33Z\",\"steps\":[{},{}]}]}},\"id\":\"exwhcb\",\"name\":\"pibkephuu\",\"type\":\"erctatoyin\"}")
            .toObject(UpdateRunInner.class);
        Assertions.assertEquals("klinhmdptysprq", model.location());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-05T11:06:21Z"), model.timeStarted());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-11T07:51:19Z"), model.lastUpdatedTime());
        Assertions.assertEquals("lsvjgpliu", model.duration());
        Assertions.assertEquals(UpdateRunPropertiesState.IN_PROGRESS, model.state());
        Assertions.assertEquals("yxq", model.namePropertiesName());
        Assertions.assertEquals("pcohhoucqpqojx", model.description());
        Assertions.assertEquals("zrzdcgd", model.errorMessage());
        Assertions.assertEquals("enribc", model.status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-22T13:00:58Z"), model.startTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-06T13:51:25Z"), model.endTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-13T03:34:48Z"), model.lastUpdatedTimeUtc());
        Assertions.assertEquals("wflj", model.steps().get(0).name());
        Assertions.assertEquals("namtuatmzw", model.steps().get(0).description());
        Assertions.assertEquals("jncqtjzmi", model.steps().get(0).errorMessage());
        Assertions.assertEquals("gbgatzuuvbxn", model.steps().get(0).status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-21T17:16:57Z"), model.steps().get(0).startTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-25T21:14:07Z"), model.steps().get(0).endTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-29T20:02:54Z"),
            model.steps().get(0).lastUpdatedTimeUtc());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UpdateRunInner model = new UpdateRunInner().withLocation("klinhmdptysprq")
            .withTimeStarted(OffsetDateTime.parse("2021-09-05T11:06:21Z"))
            .withLastUpdatedTime(OffsetDateTime.parse("2021-05-11T07:51:19Z"))
            .withDuration("lsvjgpliu")
            .withState(UpdateRunPropertiesState.IN_PROGRESS)
            .withNamePropertiesName("yxq")
            .withDescription("pcohhoucqpqojx")
            .withErrorMessage("zrzdcgd")
            .withStatus("enribc")
            .withStartTimeUtc(OffsetDateTime.parse("2021-02-22T13:00:58Z"))
            .withEndTimeUtc(OffsetDateTime.parse("2021-06-06T13:51:25Z"))
            .withLastUpdatedTimeUtc(OffsetDateTime.parse("2021-03-13T03:34:48Z"))
            .withSteps(Arrays.asList(
                new Step().withName("wflj")
                    .withDescription("namtuatmzw")
                    .withErrorMessage("jncqtjzmi")
                    .withStatus("gbgatzuuvbxn")
                    .withStartTimeUtc(OffsetDateTime.parse("2021-11-21T17:16:57Z"))
                    .withEndTimeUtc(OffsetDateTime.parse("2021-07-25T21:14:07Z"))
                    .withLastUpdatedTimeUtc(OffsetDateTime.parse("2021-06-29T20:02:54Z"))
                    .withSteps(Arrays.asList(new Step(), new Step(), new Step(), new Step())),
                new Step().withName("tzlswvaj")
                    .withDescription("utlxjoqzasunwqrj")
                    .withErrorMessage("rg")
                    .withStatus("aohcmbuocn")
                    .withStartTimeUtc(OffsetDateTime.parse("2021-05-14T07:13:07Z"))
                    .withEndTimeUtc(OffsetDateTime.parse("2021-09-21T12:04:35Z"))
                    .withLastUpdatedTimeUtc(OffsetDateTime.parse("2021-03-20T01:13:45Z"))
                    .withSteps(Arrays.asList(new Step(), new Step(), new Step(), new Step())),
                new Step().withName("xameblydyvkfkm")
                    .withDescription("cxneh")
                    .withErrorMessage("mtodl")
                    .withStatus("yapucygvoa")
                    .withStartTimeUtc(OffsetDateTime.parse("2021-05-31T14:41:18Z"))
                    .withEndTimeUtc(OffsetDateTime.parse("2021-08-14T23:16:19Z"))
                    .withLastUpdatedTimeUtc(OffsetDateTime.parse("2021-05-24T10:00:40Z"))
                    .withSteps(Arrays.asList(new Step(), new Step())),
                new Step().withName("ieegjl")
                    .withDescription("vpaseksgbu")
                    .withErrorMessage("ntuygdhgaqipir")
                    .withStatus("wrq")
                    .withStartTimeUtc(OffsetDateTime.parse("2021-07-03T05:49:55Z"))
                    .withEndTimeUtc(OffsetDateTime.parse("2021-01-26T14:21:23Z"))
                    .withLastUpdatedTimeUtc(OffsetDateTime.parse("2021-02-28T23:07:33Z"))
                    .withSteps(Arrays.asList(new Step(), new Step()))));
        model = BinaryData.fromObject(model).toObject(UpdateRunInner.class);
        Assertions.assertEquals("klinhmdptysprq", model.location());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-05T11:06:21Z"), model.timeStarted());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-11T07:51:19Z"), model.lastUpdatedTime());
        Assertions.assertEquals("lsvjgpliu", model.duration());
        Assertions.assertEquals(UpdateRunPropertiesState.IN_PROGRESS, model.state());
        Assertions.assertEquals("yxq", model.namePropertiesName());
        Assertions.assertEquals("pcohhoucqpqojx", model.description());
        Assertions.assertEquals("zrzdcgd", model.errorMessage());
        Assertions.assertEquals("enribc", model.status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-22T13:00:58Z"), model.startTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-06T13:51:25Z"), model.endTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-13T03:34:48Z"), model.lastUpdatedTimeUtc());
        Assertions.assertEquals("wflj", model.steps().get(0).name());
        Assertions.assertEquals("namtuatmzw", model.steps().get(0).description());
        Assertions.assertEquals("jncqtjzmi", model.steps().get(0).errorMessage());
        Assertions.assertEquals("gbgatzuuvbxn", model.steps().get(0).status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-21T17:16:57Z"), model.steps().get(0).startTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-25T21:14:07Z"), model.steps().get(0).endTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-29T20:02:54Z"),
            model.steps().get(0).lastUpdatedTimeUtc());
    }
}
