// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurestackhci.AzurestackhciManager;
import com.azure.resourcemanager.azurestackhci.models.Offer;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OffersGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"cseydz\",\"publisherId\":\"mexmnvk\",\"content\":\"uwrxl\",\"contentVersion\":\"wmcpmrrdlhvdvm\",\"skuMappings\":[{\"catalogPlanId\":\"eaeqjzmhkdclacr\",\"marketplaceSkuId\":\"zfmunerkelux\",\"marketplaceSkuVersions\":[\"xzezbzuzudlevzs\"]},{\"catalogPlanId\":\"jcgwfsgqk\",\"marketplaceSkuId\":\"yecup\",\"marketplaceSkuVersions\":[\"jparda\",\"sjcfma\",\"pzdqw\"]}]},\"id\":\"vcmc\",\"name\":\"kxizek\",\"type\":\"vfrjwu\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzurestackhciManager manager = AzurestackhciManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Offer response = manager.offers()
            .getWithResponse("zhasupmlppdpgzvz", "azvbkar", "ptgongruat", "yiysjqheni", "beqngubabyjde",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("mexmnvk", response.publisherId());
        Assertions.assertEquals("uwrxl", response.content());
        Assertions.assertEquals("wmcpmrrdlhvdvm", response.contentVersion());
        Assertions.assertEquals("eaeqjzmhkdclacr", response.skuMappings().get(0).catalogPlanId());
        Assertions.assertEquals("zfmunerkelux", response.skuMappings().get(0).marketplaceSkuId());
        Assertions.assertEquals("xzezbzuzudlevzs", response.skuMappings().get(0).marketplaceSkuVersions().get(0));
    }
}
