// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurestackhci.AzurestackhciManager;
import com.azure.resourcemanager.azurestackhci.models.Offer;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OffersListByClusterMockTests {
    @Test
    public void testListByCluster() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"cfiwhagxsurejq\",\"publisherId\":\"hzzbgullcxiqq\",\"content\":\"koxdupnamgl\",\"contentVersion\":\"uigdmfivjqterdq\",\"skuMappings\":[{\"catalogPlanId\":\"ydkghpc\",\"marketplaceSkuId\":\"wqirvtktyhhm\",\"marketplaceSkuVersions\":[\"lapjajod\",\"krrwepgqvqokql\",\"jqgir\"]}]},\"id\":\"wly\",\"name\":\"xchpqvctsfa\",\"type\":\"uhwwsknstvz\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzurestackhciManager manager = AzurestackhciManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Offer> response = manager.offers()
            .listByCluster("nckidbjpg", "hzqpxzbawkikcdgf", "bssdpjeyoqxd", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("hzzbgullcxiqq", response.iterator().next().publisherId());
        Assertions.assertEquals("koxdupnamgl", response.iterator().next().content());
        Assertions.assertEquals("uigdmfivjqterdq", response.iterator().next().contentVersion());
        Assertions.assertEquals("ydkghpc", response.iterator().next().skuMappings().get(0).catalogPlanId());
        Assertions.assertEquals("wqirvtktyhhm", response.iterator().next().skuMappings().get(0).marketplaceSkuId());
        Assertions.assertEquals("lapjajod",
            response.iterator().next().skuMappings().get(0).marketplaceSkuVersions().get(0));
    }
}
