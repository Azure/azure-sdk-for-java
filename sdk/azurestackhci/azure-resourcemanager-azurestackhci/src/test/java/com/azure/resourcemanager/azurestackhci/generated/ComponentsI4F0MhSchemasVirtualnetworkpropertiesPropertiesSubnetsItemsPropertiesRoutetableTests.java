// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.models.ComponentsI4F0MhSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetable;
import com.azure.resourcemanager.azurestackhci.models.VirtualNetworkPropertiesSubnetsPropertiesItemsItem;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ComponentsI4F0MhSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetableTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ComponentsI4F0MhSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetable model =
            BinaryData
                .fromString(
                    "{\"id\":\"uaucmf\",\"name\":\"wnlaxpu\",\"properties\":{\"routes\":[{\"name\":\"czvvit\",\"properties\":{\"addressPrefix\":\"xmfcsserxhtv\",\"nextHopIpAddress\":\"xhlw\"}},{\"name\":\"sjgqrsxyp\",\"properties\":{\"addressPrefix\":\"u\",\"nextHopIpAddress\":\"nchrszizoyu\"}},{\"name\":\"yetnd\",\"properties\":{\"addressPrefix\":\"qyggagfl\",\"nextHopIpAddress\":\"gm\"}},{\"name\":\"wahzjmucftbyr\",\"properties\":{\"addressPrefix\":\"ohkpigqfu\",\"nextHopIpAddress\":\"ckzmkwklsnox\"}}]},\"type\":\"mqeq\"}")
                .toObject(
                    ComponentsI4F0MhSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetable.class);
        Assertions.assertEquals("uaucmf", model.id());
        Assertions.assertEquals("wnlaxpu", model.name());
        Assertions.assertEquals("mqeq", model.type());
        Assertions.assertEquals("czvvit", model.routes().get(0).name());
        Assertions.assertEquals("xmfcsserxhtv", model.routes().get(0).addressPrefix());
        Assertions.assertEquals("xhlw", model.routes().get(0).nextHopIpAddress());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ComponentsI4F0MhSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetable model =
            new ComponentsI4F0MhSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetable()
                .withId("uaucmf")
                .withName("wnlaxpu")
                .withType("mqeq")
                .withRoutes(
                    Arrays
                        .asList(
                            new VirtualNetworkPropertiesSubnetsPropertiesItemsItem()
                                .withName("czvvit")
                                .withAddressPrefix("xmfcsserxhtv")
                                .withNextHopIpAddress("xhlw"),
                            new VirtualNetworkPropertiesSubnetsPropertiesItemsItem()
                                .withName("sjgqrsxyp")
                                .withAddressPrefix("u")
                                .withNextHopIpAddress("nchrszizoyu"),
                            new VirtualNetworkPropertiesSubnetsPropertiesItemsItem()
                                .withName("yetnd")
                                .withAddressPrefix("qyggagfl")
                                .withNextHopIpAddress("gm"),
                            new VirtualNetworkPropertiesSubnetsPropertiesItemsItem()
                                .withName("wahzjmucftbyr")
                                .withAddressPrefix("ohkpigqfu")
                                .withNextHopIpAddress("ckzmkwklsnox")));
        model =
            BinaryData
                .fromObject(model)
                .toObject(
                    ComponentsI4F0MhSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetable.class);
        Assertions.assertEquals("uaucmf", model.id());
        Assertions.assertEquals("wnlaxpu", model.name());
        Assertions.assertEquals("mqeq", model.type());
        Assertions.assertEquals("czvvit", model.routes().get(0).name());
        Assertions.assertEquals("xmfcsserxhtv", model.routes().get(0).addressPrefix());
        Assertions.assertEquals("xhlw", model.routes().get(0).nextHopIpAddress());
    }
}
