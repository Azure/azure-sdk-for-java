// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.fluent.models.Step;
import com.azure.resourcemanager.azurestackhci.fluent.models.UpdateRunProperties;
import com.azure.resourcemanager.azurestackhci.models.UpdateRunPropertiesState;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UpdateRunPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UpdateRunProperties model =
            BinaryData
                .fromString(
                    "{\"provisioningState\":\"PartiallySucceeded\",\"timeStarted\":\"2021-08-22T03:23:59Z\",\"lastUpdatedTime\":\"2021-04-21T13:36:41Z\",\"duration\":\"udlgzibthostgkts\",\"state\":\"Failed\",\"progress\":{\"name\":\"clzedqbcvh\",\"description\":\"h\",\"errorMessage\":\"odqkdlwwqfb\",\"status\":\"lkxt\",\"startTimeUtc\":\"2021-08-17T05:09:37Z\",\"endTimeUtc\":\"2021-07-26T07:09:02Z\",\"lastUpdatedTimeUtc\":\"2021-04-05T02:23:57Z\",\"expectedExecutionTime\":\"txhwgfws\",\"steps\":[{\"name\":\"coezbrhubskh\",\"description\":\"ygo\",\"errorMessage\":\"kkqfqjbvle\",\"status\":\"fmluiqtqzfavyvn\",\"startTimeUtc\":\"2021-06-02T11:29:06Z\",\"endTimeUtc\":\"2021-07-18T06:03:13Z\",\"lastUpdatedTimeUtc\":\"2021-01-31T21:27:23Z\",\"expectedExecutionTime\":\"uayjkqa\",\"steps\":[{\"name\":\"slesjcbhernnt\",\"description\":\"w\",\"errorMessage\":\"cv\",\"status\":\"uwrbehwagoh\",\"startTimeUtc\":\"2021-11-19T12:22:46Z\",\"endTimeUtc\":\"2021-03-21T00:50:35Z\",\"lastUpdatedTimeUtc\":\"2021-03-20T11:07:14Z\",\"expectedExecutionTime\":\"emvvhm\",\"steps\":[{}]},{\"name\":\"jfutacoebj\",\"description\":\"wzcjznmwcpmgua\",\"errorMessage\":\"raufactkahzova\",\"status\":\"ziuxxpshnee\",\"startTimeUtc\":\"2021-03-28T06:35:12Z\",\"endTimeUtc\":\"2021-03-04T01:24:15Z\",\"lastUpdatedTimeUtc\":\"2021-02-03T00:24:28Z\",\"expectedExecutionTime\":\"ubkwdle\",\"steps\":[{}]},{\"name\":\"utujba\",\"description\":\"juohminyflnorw\",\"errorMessage\":\"uvwpklvxwmyg\",\"status\":\"pgpqchiszepnnb\",\"startTimeUtc\":\"2021-05-09T12:03:02Z\",\"endTimeUtc\":\"2021-05-23T09:45:55Z\",\"lastUpdatedTimeUtc\":\"2021-06-04T19:59:32Z\",\"expectedExecutionTime\":\"daxconfozauorsuk\",\"steps\":[{},{}]},{\"name\":\"qplhlvnu\",\"description\":\"pzlrphw\",\"errorMessage\":\"oldweyuqdu\",\"status\":\"mnnrwr\",\"startTimeUtc\":\"2021-12-03T17:34:52Z\",\"endTimeUtc\":\"2021-02-28T14:54:18Z\",\"lastUpdatedTimeUtc\":\"2021-07-22T12:33Z\",\"expectedExecutionTime\":\"wjhhgdnhxmsivf\",\"steps\":[{},{},{}]}]}]}}")
                .toObject(UpdateRunProperties.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-22T03:23:59Z"), model.timeStarted());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-21T13:36:41Z"), model.lastUpdatedTime());
        Assertions.assertEquals("udlgzibthostgkts", model.duration());
        Assertions.assertEquals(UpdateRunPropertiesState.FAILED, model.state());
        Assertions.assertEquals("clzedqbcvh", model.name());
        Assertions.assertEquals("h", model.description());
        Assertions.assertEquals("odqkdlwwqfb", model.errorMessage());
        Assertions.assertEquals("lkxt", model.status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-17T05:09:37Z"), model.startTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-26T07:09:02Z"), model.endTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-05T02:23:57Z"), model.lastUpdatedTimeUtc());
        Assertions.assertEquals("txhwgfws", model.expectedExecutionTime());
        Assertions.assertEquals("coezbrhubskh", model.steps().get(0).name());
        Assertions.assertEquals("ygo", model.steps().get(0).description());
        Assertions.assertEquals("kkqfqjbvle", model.steps().get(0).errorMessage());
        Assertions.assertEquals("fmluiqtqzfavyvn", model.steps().get(0).status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-02T11:29:06Z"), model.steps().get(0).startTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-18T06:03:13Z"), model.steps().get(0).endTimeUtc());
        Assertions
            .assertEquals(OffsetDateTime.parse("2021-01-31T21:27:23Z"), model.steps().get(0).lastUpdatedTimeUtc());
        Assertions.assertEquals("uayjkqa", model.steps().get(0).expectedExecutionTime());
        Assertions.assertEquals("slesjcbhernnt", model.steps().get(0).steps().get(0).name());
        Assertions.assertEquals("w", model.steps().get(0).steps().get(0).description());
        Assertions.assertEquals("cv", model.steps().get(0).steps().get(0).errorMessage());
        Assertions.assertEquals("uwrbehwagoh", model.steps().get(0).steps().get(0).status());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-11-19T12:22:46Z"), model.steps().get(0).steps().get(0).startTimeUtc());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-03-21T00:50:35Z"), model.steps().get(0).steps().get(0).endTimeUtc());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-03-20T11:07:14Z"), model.steps().get(0).steps().get(0).lastUpdatedTimeUtc());
        Assertions.assertEquals("emvvhm", model.steps().get(0).steps().get(0).expectedExecutionTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UpdateRunProperties model =
            new UpdateRunProperties()
                .withTimeStarted(OffsetDateTime.parse("2021-08-22T03:23:59Z"))
                .withLastUpdatedTime(OffsetDateTime.parse("2021-04-21T13:36:41Z"))
                .withDuration("udlgzibthostgkts")
                .withState(UpdateRunPropertiesState.FAILED)
                .withName("clzedqbcvh")
                .withDescription("h")
                .withErrorMessage("odqkdlwwqfb")
                .withStatus("lkxt")
                .withStartTimeUtc(OffsetDateTime.parse("2021-08-17T05:09:37Z"))
                .withEndTimeUtc(OffsetDateTime.parse("2021-07-26T07:09:02Z"))
                .withLastUpdatedTimeUtc(OffsetDateTime.parse("2021-04-05T02:23:57Z"))
                .withExpectedExecutionTime("txhwgfws")
                .withSteps(
                    Arrays
                        .asList(
                            new Step()
                                .withName("coezbrhubskh")
                                .withDescription("ygo")
                                .withErrorMessage("kkqfqjbvle")
                                .withStatus("fmluiqtqzfavyvn")
                                .withStartTimeUtc(OffsetDateTime.parse("2021-06-02T11:29:06Z"))
                                .withEndTimeUtc(OffsetDateTime.parse("2021-07-18T06:03:13Z"))
                                .withLastUpdatedTimeUtc(OffsetDateTime.parse("2021-01-31T21:27:23Z"))
                                .withExpectedExecutionTime("uayjkqa")
                                .withSteps(
                                    Arrays
                                        .asList(
                                            new Step()
                                                .withName("slesjcbhernnt")
                                                .withDescription("w")
                                                .withErrorMessage("cv")
                                                .withStatus("uwrbehwagoh")
                                                .withStartTimeUtc(OffsetDateTime.parse("2021-11-19T12:22:46Z"))
                                                .withEndTimeUtc(OffsetDateTime.parse("2021-03-21T00:50:35Z"))
                                                .withLastUpdatedTimeUtc(OffsetDateTime.parse("2021-03-20T11:07:14Z"))
                                                .withExpectedExecutionTime("emvvhm")
                                                .withSteps(Arrays.asList(new Step())),
                                            new Step()
                                                .withName("jfutacoebj")
                                                .withDescription("wzcjznmwcpmgua")
                                                .withErrorMessage("raufactkahzova")
                                                .withStatus("ziuxxpshnee")
                                                .withStartTimeUtc(OffsetDateTime.parse("2021-03-28T06:35:12Z"))
                                                .withEndTimeUtc(OffsetDateTime.parse("2021-03-04T01:24:15Z"))
                                                .withLastUpdatedTimeUtc(OffsetDateTime.parse("2021-02-03T00:24:28Z"))
                                                .withExpectedExecutionTime("ubkwdle")
                                                .withSteps(Arrays.asList(new Step())),
                                            new Step()
                                                .withName("utujba")
                                                .withDescription("juohminyflnorw")
                                                .withErrorMessage("uvwpklvxwmyg")
                                                .withStatus("pgpqchiszepnnb")
                                                .withStartTimeUtc(OffsetDateTime.parse("2021-05-09T12:03:02Z"))
                                                .withEndTimeUtc(OffsetDateTime.parse("2021-05-23T09:45:55Z"))
                                                .withLastUpdatedTimeUtc(OffsetDateTime.parse("2021-06-04T19:59:32Z"))
                                                .withExpectedExecutionTime("daxconfozauorsuk")
                                                .withSteps(Arrays.asList(new Step(), new Step())),
                                            new Step()
                                                .withName("qplhlvnu")
                                                .withDescription("pzlrphw")
                                                .withErrorMessage("oldweyuqdu")
                                                .withStatus("mnnrwr")
                                                .withStartTimeUtc(OffsetDateTime.parse("2021-12-03T17:34:52Z"))
                                                .withEndTimeUtc(OffsetDateTime.parse("2021-02-28T14:54:18Z"))
                                                .withLastUpdatedTimeUtc(OffsetDateTime.parse("2021-07-22T12:33Z"))
                                                .withExpectedExecutionTime("wjhhgdnhxmsivf")
                                                .withSteps(Arrays.asList(new Step(), new Step(), new Step()))))));
        model = BinaryData.fromObject(model).toObject(UpdateRunProperties.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-22T03:23:59Z"), model.timeStarted());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-21T13:36:41Z"), model.lastUpdatedTime());
        Assertions.assertEquals("udlgzibthostgkts", model.duration());
        Assertions.assertEquals(UpdateRunPropertiesState.FAILED, model.state());
        Assertions.assertEquals("clzedqbcvh", model.name());
        Assertions.assertEquals("h", model.description());
        Assertions.assertEquals("odqkdlwwqfb", model.errorMessage());
        Assertions.assertEquals("lkxt", model.status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-17T05:09:37Z"), model.startTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-26T07:09:02Z"), model.endTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-05T02:23:57Z"), model.lastUpdatedTimeUtc());
        Assertions.assertEquals("txhwgfws", model.expectedExecutionTime());
        Assertions.assertEquals("coezbrhubskh", model.steps().get(0).name());
        Assertions.assertEquals("ygo", model.steps().get(0).description());
        Assertions.assertEquals("kkqfqjbvle", model.steps().get(0).errorMessage());
        Assertions.assertEquals("fmluiqtqzfavyvn", model.steps().get(0).status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-02T11:29:06Z"), model.steps().get(0).startTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-18T06:03:13Z"), model.steps().get(0).endTimeUtc());
        Assertions
            .assertEquals(OffsetDateTime.parse("2021-01-31T21:27:23Z"), model.steps().get(0).lastUpdatedTimeUtc());
        Assertions.assertEquals("uayjkqa", model.steps().get(0).expectedExecutionTime());
        Assertions.assertEquals("slesjcbhernnt", model.steps().get(0).steps().get(0).name());
        Assertions.assertEquals("w", model.steps().get(0).steps().get(0).description());
        Assertions.assertEquals("cv", model.steps().get(0).steps().get(0).errorMessage());
        Assertions.assertEquals("uwrbehwagoh", model.steps().get(0).steps().get(0).status());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-11-19T12:22:46Z"), model.steps().get(0).steps().get(0).startTimeUtc());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-03-21T00:50:35Z"), model.steps().get(0).steps().get(0).endTimeUtc());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-03-20T11:07:14Z"), model.steps().get(0).steps().get(0).lastUpdatedTimeUtc());
        Assertions.assertEquals("emvvhm", model.steps().get(0).steps().get(0).expectedExecutionTime());
    }
}
