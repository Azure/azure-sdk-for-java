// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.fluent.models.ArcSettingProperties;
import org.junit.jupiter.api.Assertions;

public final class ArcSettingPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ArcSettingProperties model =
            BinaryData
                .fromString(
                    "{\"provisioningState\":\"Error\",\"arcInstanceResourceGroup\":\"zrnf\",\"arcApplicationClientId\":\"xgispemvtzfkufu\",\"arcApplicationTenantId\":\"jofxqe\",\"arcServicePrincipalObjectId\":\"jaeq\",\"arcApplicationObjectId\":\"qjbasvms\",\"aggregateState\":\"Accepted\",\"perNodeDetails\":[{\"name\":\"gsntnbybkzgcwr\",\"arcInstance\":\"lxxwrljdouskc\",\"state\":\"Accepted\"},{\"name\":\"cr\",\"arcInstance\":\"dkwt\",\"state\":\"Moving\"},{\"name\":\"njbiksqrglssain\",\"arcInstance\":\"jwnzlljfmp\",\"state\":\"PartiallySucceeded\"},{\"name\":\"vmgxsab\",\"arcInstance\":\"qduujitcjczdz\",\"state\":\"Canceled\"}],\"connectivityProperties\":\"datahkr\",\"defaultExtensions\":[{\"category\":\"ppdsbdkvwrwj\",\"consentTime\":\"2021-10-06T22:22:48Z\"}]}")
                .toObject(ArcSettingProperties.class);
        Assertions.assertEquals("zrnf", model.arcInstanceResourceGroup());
        Assertions.assertEquals("xgispemvtzfkufu", model.arcApplicationClientId());
        Assertions.assertEquals("jofxqe", model.arcApplicationTenantId());
        Assertions.assertEquals("jaeq", model.arcServicePrincipalObjectId());
        Assertions.assertEquals("qjbasvms", model.arcApplicationObjectId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ArcSettingProperties model =
            new ArcSettingProperties()
                .withArcInstanceResourceGroup("zrnf")
                .withArcApplicationClientId("xgispemvtzfkufu")
                .withArcApplicationTenantId("jofxqe")
                .withArcServicePrincipalObjectId("jaeq")
                .withArcApplicationObjectId("qjbasvms")
                .withConnectivityProperties("datahkr");
        model = BinaryData.fromObject(model).toObject(ArcSettingProperties.class);
        Assertions.assertEquals("zrnf", model.arcInstanceResourceGroup());
        Assertions.assertEquals("xgispemvtzfkufu", model.arcApplicationClientId());
        Assertions.assertEquals("jofxqe", model.arcApplicationTenantId());
        Assertions.assertEquals("jaeq", model.arcServicePrincipalObjectId());
        Assertions.assertEquals("qjbasvms", model.arcApplicationObjectId());
    }
}
