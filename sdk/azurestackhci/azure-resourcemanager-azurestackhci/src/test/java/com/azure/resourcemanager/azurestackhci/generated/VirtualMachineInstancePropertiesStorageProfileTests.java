// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.models.OperatingSystemTypes;
import com.azure.resourcemanager.azurestackhci.models.VirtualMachineInstancePropertiesStorageProfile;
import com.azure.resourcemanager.azurestackhci.models.VirtualMachineInstancePropertiesStorageProfileDataDisksItem;
import com.azure.resourcemanager.azurestackhci.models.VirtualMachineInstancePropertiesStorageProfileImageReference;
import com.azure.resourcemanager.azurestackhci.models.VirtualMachineInstancePropertiesStorageProfileOsDisk;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VirtualMachineInstancePropertiesStorageProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VirtualMachineInstancePropertiesStorageProfile model = BinaryData.fromString(
            "{\"dataDisks\":[{\"id\":\"bgfbkt\"}],\"imageReference\":{\"id\":\"fczlfsyqkfrbzgow\"},\"osDisk\":{\"id\":\"mj\",\"osType\":\"Windows\"},\"vmConfigStoragePathId\":\"xnyqgxhlusr\"}")
            .toObject(VirtualMachineInstancePropertiesStorageProfile.class);
        Assertions.assertEquals("bgfbkt", model.dataDisks().get(0).id());
        Assertions.assertEquals("fczlfsyqkfrbzgow", model.imageReference().id());
        Assertions.assertEquals("mj", model.osDisk().id());
        Assertions.assertEquals(OperatingSystemTypes.WINDOWS, model.osDisk().osType());
        Assertions.assertEquals("xnyqgxhlusr", model.vmConfigStoragePathId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VirtualMachineInstancePropertiesStorageProfile model = new VirtualMachineInstancePropertiesStorageProfile()
            .withDataDisks(
                Arrays.asList(new VirtualMachineInstancePropertiesStorageProfileDataDisksItem().withId("bgfbkt")))
            .withImageReference(
                new VirtualMachineInstancePropertiesStorageProfileImageReference().withId("fczlfsyqkfrbzgow"))
            .withOsDisk(new VirtualMachineInstancePropertiesStorageProfileOsDisk().withId("mj")
                .withOsType(OperatingSystemTypes.WINDOWS))
            .withVmConfigStoragePathId("xnyqgxhlusr");
        model = BinaryData.fromObject(model).toObject(VirtualMachineInstancePropertiesStorageProfile.class);
        Assertions.assertEquals("bgfbkt", model.dataDisks().get(0).id());
        Assertions.assertEquals("fczlfsyqkfrbzgow", model.imageReference().id());
        Assertions.assertEquals("mj", model.osDisk().id());
        Assertions.assertEquals(OperatingSystemTypes.WINDOWS, model.osDisk().osType());
        Assertions.assertEquals("xnyqgxhlusr", model.vmConfigStoragePathId());
    }
}
