// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.models.VirtualMachinePropertiesHardwareProfile;
import com.azure.resourcemanager.azurestackhci.models.VirtualMachinePropertiesHardwareProfileDynamicMemoryConfig;
import com.azure.resourcemanager.azurestackhci.models.VmSizeEnum;
import org.junit.jupiter.api.Assertions;

public final class VirtualMachinePropertiesHardwareProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VirtualMachinePropertiesHardwareProfile model =
            BinaryData
                .fromString(
                    "{\"vmSize\":\"Standard_K8S_v1\",\"processors\":1928590225,\"memoryMB\":6974301688992111876,\"dynamicMemoryConfig\":{\"maximumMemoryMB\":8136923718683522380,\"minimumMemoryMB\":7810538831572627149,\"targetMemoryBuffer\":1022409810}}")
                .toObject(VirtualMachinePropertiesHardwareProfile.class);
        Assertions.assertEquals(VmSizeEnum.STANDARD_K8S_V1, model.vmSize());
        Assertions.assertEquals(1928590225, model.processors());
        Assertions.assertEquals(6974301688992111876L, model.memoryMB());
        Assertions.assertEquals(8136923718683522380L, model.dynamicMemoryConfig().maximumMemoryMB());
        Assertions.assertEquals(7810538831572627149L, model.dynamicMemoryConfig().minimumMemoryMB());
        Assertions.assertEquals(1022409810, model.dynamicMemoryConfig().targetMemoryBuffer());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VirtualMachinePropertiesHardwareProfile model =
            new VirtualMachinePropertiesHardwareProfile()
                .withVmSize(VmSizeEnum.STANDARD_K8S_V1)
                .withProcessors(1928590225)
                .withMemoryMB(6974301688992111876L)
                .withDynamicMemoryConfig(
                    new VirtualMachinePropertiesHardwareProfileDynamicMemoryConfig()
                        .withMaximumMemoryMB(8136923718683522380L)
                        .withMinimumMemoryMB(7810538831572627149L)
                        .withTargetMemoryBuffer(1022409810));
        model = BinaryData.fromObject(model).toObject(VirtualMachinePropertiesHardwareProfile.class);
        Assertions.assertEquals(VmSizeEnum.STANDARD_K8S_V1, model.vmSize());
        Assertions.assertEquals(1928590225, model.processors());
        Assertions.assertEquals(6974301688992111876L, model.memoryMB());
        Assertions.assertEquals(8136923718683522380L, model.dynamicMemoryConfig().maximumMemoryMB());
        Assertions.assertEquals(7810538831572627149L, model.dynamicMemoryConfig().minimumMemoryMB());
        Assertions.assertEquals(1022409810, model.dynamicMemoryConfig().targetMemoryBuffer());
    }
}
