// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.models.IpPool;
import com.azure.resourcemanager.azurestackhci.models.IpPoolInfo;
import com.azure.resourcemanager.azurestackhci.models.IpPoolTypeEnum;
import org.junit.jupiter.api.Assertions;

public final class IpPoolTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IpPool model = BinaryData.fromString(
            "{\"name\":\"wopdbydpiz\",\"ipPoolType\":\"vippool\",\"start\":\"napxbiygnug\",\"end\":\"nfsm\",\"info\":{\"used\":\"tuxuuyilflq\",\"available\":\"quvre\"}}")
            .toObject(IpPool.class);
        Assertions.assertEquals("wopdbydpiz", model.name());
        Assertions.assertEquals(IpPoolTypeEnum.VIPPOOL, model.ipPoolType());
        Assertions.assertEquals("napxbiygnug", model.start());
        Assertions.assertEquals("nfsm", model.end());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IpPool model = new IpPool().withName("wopdbydpiz")
            .withIpPoolType(IpPoolTypeEnum.VIPPOOL)
            .withStart("napxbiygnug")
            .withEnd("nfsm")
            .withInfo(new IpPoolInfo());
        model = BinaryData.fromObject(model).toObject(IpPool.class);
        Assertions.assertEquals("wopdbydpiz", model.name());
        Assertions.assertEquals(IpPoolTypeEnum.VIPPOOL, model.ipPoolType());
        Assertions.assertEquals("napxbiygnug", model.start());
        Assertions.assertEquals("nfsm", model.end());
    }
}
