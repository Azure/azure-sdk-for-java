// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.fluent.models.SecuritySettingInner;
import com.azure.resourcemanager.azurestackhci.models.ComplianceAssignmentType;
import com.azure.resourcemanager.azurestackhci.models.ProvisioningState;
import com.azure.resourcemanager.azurestackhci.models.SecuritySettingListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SecuritySettingListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SecuritySettingListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"securedCoreComplianceAssignment\":\"Audit\",\"wdacComplianceAssignment\":\"ApplyAndAutoCorrect\",\"smbEncryptionForIntraClusterTrafficComplianceAssignment\":\"Audit\",\"securityComplianceStatus\":{\"securedCoreCompliance\":\"NonCompliant\",\"wdacCompliance\":\"Pending\",\"dataAtRestEncrypted\":\"Pending\",\"dataInTransitProtected\":\"Compliant\",\"lastUpdated\":\"2021-08-21T03:33:37Z\"},\"provisioningState\":\"Updating\"},\"id\":\"tx\",\"name\":\"zflbqvg\",\"type\":\"qvlgafcqusrdvetn\"},{\"properties\":{\"securedCoreComplianceAssignment\":\"ApplyAndAutoCorrect\",\"wdacComplianceAssignment\":\"ApplyAndAutoCorrect\",\"smbEncryptionForIntraClusterTrafficComplianceAssignment\":\"Audit\",\"securityComplianceStatus\":{\"securedCoreCompliance\":\"NonCompliant\",\"wdacCompliance\":\"Pending\",\"dataAtRestEncrypted\":\"Compliant\",\"dataInTransitProtected\":\"Pending\",\"lastUpdated\":\"2021-11-09T16:30:30Z\"},\"provisioningState\":\"Canceled\"},\"id\":\"ipmve\",\"name\":\"dxukuqgsjjxundxg\",\"type\":\"etw\"},{\"properties\":{\"securedCoreComplianceAssignment\":\"ApplyAndAutoCorrect\",\"wdacComplianceAssignment\":\"Audit\",\"smbEncryptionForIntraClusterTrafficComplianceAssignment\":\"ApplyAndAutoCorrect\",\"securityComplianceStatus\":{\"securedCoreCompliance\":\"NonCompliant\",\"wdacCompliance\":\"Compliant\",\"dataAtRestEncrypted\":\"Compliant\",\"dataInTransitProtected\":\"NonCompliant\",\"lastUpdated\":\"2021-08-10T07:35:10Z\"},\"provisioningState\":\"Deleted\"},\"id\":\"sx\",\"name\":\"mhfbuzjy\",\"type\":\"hsasbhu\"}],\"nextLink\":\"pohyuemslynsqyr\"}")
            .toObject(SecuritySettingListResult.class);
        Assertions.assertEquals(ComplianceAssignmentType.AUDIT, model.value().get(0).securedCoreComplianceAssignment());
        Assertions.assertEquals(ComplianceAssignmentType.APPLY_AND_AUTO_CORRECT,
            model.value().get(0).wdacComplianceAssignment());
        Assertions.assertEquals(ComplianceAssignmentType.AUDIT,
            model.value().get(0).smbEncryptionForIntraClusterTrafficComplianceAssignment());
        Assertions.assertEquals(ProvisioningState.UPDATING, model.value().get(0).provisioningState());
        Assertions.assertEquals("pohyuemslynsqyr", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SecuritySettingListResult model = new SecuritySettingListResult().withValue(Arrays.asList(
            new SecuritySettingInner().withSecuredCoreComplianceAssignment(ComplianceAssignmentType.AUDIT)
                .withWdacComplianceAssignment(ComplianceAssignmentType.APPLY_AND_AUTO_CORRECT)
                .withSmbEncryptionForIntraClusterTrafficComplianceAssignment(ComplianceAssignmentType.AUDIT)
                .withProvisioningState(ProvisioningState.UPDATING),
            new SecuritySettingInner()
                .withSecuredCoreComplianceAssignment(ComplianceAssignmentType.APPLY_AND_AUTO_CORRECT)
                .withWdacComplianceAssignment(ComplianceAssignmentType.APPLY_AND_AUTO_CORRECT)
                .withSmbEncryptionForIntraClusterTrafficComplianceAssignment(ComplianceAssignmentType.AUDIT)
                .withProvisioningState(ProvisioningState.CANCELED),
            new SecuritySettingInner()
                .withSecuredCoreComplianceAssignment(ComplianceAssignmentType.APPLY_AND_AUTO_CORRECT)
                .withWdacComplianceAssignment(ComplianceAssignmentType.AUDIT)
                .withSmbEncryptionForIntraClusterTrafficComplianceAssignment(
                    ComplianceAssignmentType.APPLY_AND_AUTO_CORRECT)
                .withProvisioningState(ProvisioningState.DELETED)))
            .withNextLink("pohyuemslynsqyr");
        model = BinaryData.fromObject(model).toObject(SecuritySettingListResult.class);
        Assertions.assertEquals(ComplianceAssignmentType.AUDIT, model.value().get(0).securedCoreComplianceAssignment());
        Assertions.assertEquals(ComplianceAssignmentType.APPLY_AND_AUTO_CORRECT,
            model.value().get(0).wdacComplianceAssignment());
        Assertions.assertEquals(ComplianceAssignmentType.AUDIT,
            model.value().get(0).smbEncryptionForIntraClusterTrafficComplianceAssignment());
        Assertions.assertEquals(ProvisioningState.UPDATING, model.value().get(0).provisioningState());
        Assertions.assertEquals("pohyuemslynsqyr", model.nextLink());
    }
}
