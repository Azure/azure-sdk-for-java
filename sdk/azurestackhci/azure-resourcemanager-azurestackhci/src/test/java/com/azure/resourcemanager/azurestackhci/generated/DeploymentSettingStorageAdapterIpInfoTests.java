// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.models.DeploymentSettingStorageAdapterIpInfo;
import org.junit.jupiter.api.Assertions;

public final class DeploymentSettingStorageAdapterIpInfoTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DeploymentSettingStorageAdapterIpInfo model
            = BinaryData.fromString("{\"physicalNode\":\"ld\",\"ipv4Address\":\"gx\",\"subnetMask\":\"rslpmutwuoeg\"}")
                .toObject(DeploymentSettingStorageAdapterIpInfo.class);
        Assertions.assertEquals("ld", model.physicalNode());
        Assertions.assertEquals("gx", model.ipv4Address());
        Assertions.assertEquals("rslpmutwuoeg", model.subnetMask());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DeploymentSettingStorageAdapterIpInfo model = new DeploymentSettingStorageAdapterIpInfo().withPhysicalNode("ld")
            .withIpv4Address("gx")
            .withSubnetMask("rslpmutwuoeg");
        model = BinaryData.fromObject(model).toObject(DeploymentSettingStorageAdapterIpInfo.class);
        Assertions.assertEquals("ld", model.physicalNode());
        Assertions.assertEquals("gx", model.ipv4Address());
        Assertions.assertEquals("rslpmutwuoeg", model.subnetMask());
    }
}
