// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurestackhci.AzureStackHciManager;
import com.azure.resourcemanager.azurestackhci.models.ComplianceAssignmentType;
import com.azure.resourcemanager.azurestackhci.models.ProvisioningState;
import com.azure.resourcemanager.azurestackhci.models.SecuritySetting;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SecuritySettingsListByClustersMockTests {
    @Test
    public void testListByClusters() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"securedCoreComplianceAssignment\":\"ApplyAndAutoCorrect\",\"wdacComplianceAssignment\":\"Audit\",\"smbEncryptionForIntraClusterTrafficComplianceAssignment\":\"Audit\",\"securityComplianceStatus\":{\"securedCoreCompliance\":\"NonCompliant\",\"wdacCompliance\":\"Pending\",\"dataAtRestEncrypted\":\"Compliant\",\"dataInTransitProtected\":\"NonCompliant\",\"lastUpdated\":\"2021-01-07T16:23:40Z\"},\"provisioningState\":\"Deleting\"},\"id\":\"hqodv\",\"name\":\"gcnbhcbmjk\",\"type\":\"ti\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureStackHciManager manager = AzureStackHciManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<SecuritySetting> response = manager.securitySettings()
            .listByClusters("fwzlgzawkgyepeya", "nnidmdiawpzxk", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(ComplianceAssignmentType.APPLY_AND_AUTO_CORRECT,
            response.iterator().next().securedCoreComplianceAssignment());
        Assertions.assertEquals(ComplianceAssignmentType.AUDIT, response.iterator().next().wdacComplianceAssignment());
        Assertions.assertEquals(ComplianceAssignmentType.AUDIT,
            response.iterator().next().smbEncryptionForIntraClusterTrafficComplianceAssignment());
        Assertions.assertEquals(ProvisioningState.DELETING, response.iterator().next().provisioningState());
    }
}
