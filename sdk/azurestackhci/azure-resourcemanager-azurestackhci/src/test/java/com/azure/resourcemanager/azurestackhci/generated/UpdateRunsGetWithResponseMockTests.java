// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurestackhci.AzurestackhciManager;
import com.azure.resourcemanager.azurestackhci.models.UpdateRun;
import com.azure.resourcemanager.azurestackhci.models.UpdateRunPropertiesState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class UpdateRunsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"location\":\"yfaofdf\",\"properties\":{\"provisioningState\":\"Connected\",\"timeStarted\":\"2021-11-19T02:06:42Z\",\"lastUpdatedTime\":\"2021-09-22T19:04:50Z\",\"duration\":\"obzrfpriz\",\"state\":\"Unknown\",\"progress\":{\"name\":\"f\",\"description\":\"vb\",\"errorMessage\":\"gwhgkgsoau\",\"status\":\"rssat\",\"startTimeUtc\":\"2021-03-21T20:16:10Z\",\"endTimeUtc\":\"2020-12-29T05:17:32Z\",\"lastUpdatedTimeUtc\":\"2021-12-04T23:41:40Z\",\"steps\":[{\"name\":\"uqbdq\",\"description\":\"sttuxv\",\"errorMessage\":\"q\",\"status\":\"opbtsixhgv\",\"startTimeUtc\":\"2021-10-15T22:38:29Z\",\"endTimeUtc\":\"2021-05-08T02:21:29Z\",\"lastUpdatedTimeUtc\":\"2021-06-10T20:58:41Z\",\"steps\":[{},{},{},{}]},{\"name\":\"jay\",\"description\":\"arxneibpgbr\",\"errorMessage\":\"jdqknhqn\",\"status\":\"tpuwnnohmmzngocf\",\"startTimeUtc\":\"2021-06-12T08:12:11Z\",\"endTimeUtc\":\"2021-02-19T09:19:28Z\",\"lastUpdatedTimeUtc\":\"2021-09-24T20:30:34Z\",\"steps\":[{},{},{},{}]}]}},\"id\":\"ayno\",\"name\":\"ugkfhaxttpfsm\",\"type\":\"gsgh\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzurestackhciManager manager = AzurestackhciManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        UpdateRun response = manager.updateRuns()
            .getWithResponse("xfkuzbw", "ecooyvhtuqbp", "lniibncg", "gdvcdqhftz", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("yfaofdf", response.location());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-19T02:06:42Z"), response.timeStarted());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-22T19:04:50Z"), response.lastUpdatedTime());
        Assertions.assertEquals("obzrfpriz", response.duration());
        Assertions.assertEquals(UpdateRunPropertiesState.UNKNOWN, response.state());
        Assertions.assertEquals("f", response.namePropertiesName());
        Assertions.assertEquals("vb", response.description());
        Assertions.assertEquals("gwhgkgsoau", response.errorMessage());
        Assertions.assertEquals("rssat", response.status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-21T20:16:10Z"), response.startTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-29T05:17:32Z"), response.endTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-04T23:41:40Z"), response.lastUpdatedTimeUtc());
        Assertions.assertEquals("uqbdq", response.steps().get(0).name());
        Assertions.assertEquals("sttuxv", response.steps().get(0).description());
        Assertions.assertEquals("q", response.steps().get(0).errorMessage());
        Assertions.assertEquals("opbtsixhgv", response.steps().get(0).status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-15T22:38:29Z"), response.steps().get(0).startTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-08T02:21:29Z"), response.steps().get(0).endTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-10T20:58:41Z"),
            response.steps().get(0).lastUpdatedTimeUtc());
    }
}
