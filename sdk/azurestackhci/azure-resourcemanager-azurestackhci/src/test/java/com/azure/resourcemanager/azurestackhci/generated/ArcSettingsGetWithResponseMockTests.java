// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurestackhci.AzurestackhciManager;
import com.azure.resourcemanager.azurestackhci.models.ArcSetting;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ArcSettingsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Accepted\",\"arcInstanceResourceGroup\":\"llxricc\",\"arcApplicationClientId\":\"wmuqqoajxeiygle\",\"arcApplicationTenantId\":\"wvaexhdctr\",\"arcServicePrincipalObjectId\":\"qnkbrupobehdm\",\"arcApplicationObjectId\":\"zacvu\",\"aggregateState\":\"NotSpecified\",\"perNodeDetails\":[{\"name\":\"ibnzp\",\"arcInstance\":\"epifexleqirccjc\",\"arcNodeServicePrincipalObjectId\":\"kcgxvrpjlvc\",\"state\":\"Succeeded\"},{\"name\":\"ac\",\"arcInstance\":\"nettepdjxqeskoy\",\"arcNodeServicePrincipalObjectId\":\"iylpck\",\"state\":\"Creating\"}],\"connectivityProperties\":\"dataedveskwxegqp\",\"defaultExtensions\":[{\"category\":\"nzhctmjtsgh\",\"consentTime\":\"2021-11-24T19:57:59Z\"},{\"category\":\"cp\",\"consentTime\":\"2021-04-21T13:14:50Z\"}]},\"id\":\"zeq\",\"name\":\"cdl\",\"type\":\"tz\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzurestackhciManager manager = AzurestackhciManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ArcSetting response = manager.arcSettings()
            .getWithResponse("htkbtnq", "rngl", "mbiipsnawwlqk", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("llxricc", response.arcInstanceResourceGroup());
        Assertions.assertEquals("wmuqqoajxeiygle", response.arcApplicationClientId());
        Assertions.assertEquals("wvaexhdctr", response.arcApplicationTenantId());
        Assertions.assertEquals("qnkbrupobehdm", response.arcServicePrincipalObjectId());
        Assertions.assertEquals("zacvu", response.arcApplicationObjectId());
    }
}
