// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.fluent.models.EdgeDeviceProperties;
import com.azure.resourcemanager.azurestackhci.models.DeviceConfiguration;
import com.azure.resourcemanager.azurestackhci.models.NicDetail;
import com.azure.resourcemanager.azurestackhci.models.ProvisioningState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class EdgeDevicePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EdgeDeviceProperties model = BinaryData.fromString(
            "{\"deviceConfiguration\":{\"nicDetails\":[{\"adapterName\":\"bnpqfrtqlkzme\",\"interfaceDescription\":\"itgvkx\",\"componentId\":\"yqdrf\",\"driverVersion\":\"cealzxwh\",\"ip4Address\":\"nsymoyqhlwigd\",\"subnetMask\":\"bkbxgomfa\",\"defaultGateway\":\"wasqvdaeyyg\",\"dnsServers\":[\"kjsqzhzbezkgi\",\"sidxasicdd\"],\"defaultIsolationId\":\"vjskgfmoc\"},{\"adapterName\":\"ah\",\"interfaceDescription\":\"gat\",\"componentId\":\"a\",\"driverVersion\":\"hvjhhnakzyb\",\"ip4Address\":\"jid\",\"subnetMask\":\"syxkyxvxevblb\",\"defaultGateway\":\"dnlj\",\"dnsServers\":[\"euaulxu\",\"smjbnkppxyn\"],\"defaultIsolationId\":\"lsvxeizz\"}],\"deviceMetadata\":\"klnsrmffey\"},\"provisioningState\":\"Updating\"}")
            .toObject(EdgeDeviceProperties.class);
        Assertions.assertEquals("bnpqfrtqlkzme", model.deviceConfiguration().nicDetails().get(0).adapterName());
        Assertions.assertEquals("itgvkx", model.deviceConfiguration().nicDetails().get(0).interfaceDescription());
        Assertions.assertEquals("yqdrf", model.deviceConfiguration().nicDetails().get(0).componentId());
        Assertions.assertEquals("cealzxwh", model.deviceConfiguration().nicDetails().get(0).driverVersion());
        Assertions.assertEquals("nsymoyqhlwigd", model.deviceConfiguration().nicDetails().get(0).ip4Address());
        Assertions.assertEquals("bkbxgomfa", model.deviceConfiguration().nicDetails().get(0).subnetMask());
        Assertions.assertEquals("wasqvdaeyyg", model.deviceConfiguration().nicDetails().get(0).defaultGateway());
        Assertions.assertEquals("kjsqzhzbezkgi", model.deviceConfiguration().nicDetails().get(0).dnsServers().get(0));
        Assertions.assertEquals("vjskgfmoc", model.deviceConfiguration().nicDetails().get(0).defaultIsolationId());
        Assertions.assertEquals("klnsrmffey", model.deviceConfiguration().deviceMetadata());
        Assertions.assertEquals(ProvisioningState.UPDATING, model.provisioningState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EdgeDeviceProperties model
            = new EdgeDeviceProperties()
                .withDeviceConfiguration(new DeviceConfiguration().withNicDetails(Arrays.asList(
                    new NicDetail().withAdapterName("bnpqfrtqlkzme")
                        .withInterfaceDescription("itgvkx")
                        .withComponentId("yqdrf")
                        .withDriverVersion("cealzxwh")
                        .withIp4Address("nsymoyqhlwigd")
                        .withSubnetMask("bkbxgomfa")
                        .withDefaultGateway("wasqvdaeyyg")
                        .withDnsServers(Arrays.asList("kjsqzhzbezkgi", "sidxasicdd"))
                        .withDefaultIsolationId("vjskgfmoc"),
                    new NicDetail().withAdapterName("ah")
                        .withInterfaceDescription("gat")
                        .withComponentId("a")
                        .withDriverVersion("hvjhhnakzyb")
                        .withIp4Address("jid")
                        .withSubnetMask("syxkyxvxevblb")
                        .withDefaultGateway("dnlj")
                        .withDnsServers(Arrays.asList("euaulxu", "smjbnkppxyn"))
                        .withDefaultIsolationId("lsvxeizz")))
                    .withDeviceMetadata("klnsrmffey"))
                .withProvisioningState(ProvisioningState.UPDATING);
        model = BinaryData.fromObject(model).toObject(EdgeDeviceProperties.class);
        Assertions.assertEquals("bnpqfrtqlkzme", model.deviceConfiguration().nicDetails().get(0).adapterName());
        Assertions.assertEquals("itgvkx", model.deviceConfiguration().nicDetails().get(0).interfaceDescription());
        Assertions.assertEquals("yqdrf", model.deviceConfiguration().nicDetails().get(0).componentId());
        Assertions.assertEquals("cealzxwh", model.deviceConfiguration().nicDetails().get(0).driverVersion());
        Assertions.assertEquals("nsymoyqhlwigd", model.deviceConfiguration().nicDetails().get(0).ip4Address());
        Assertions.assertEquals("bkbxgomfa", model.deviceConfiguration().nicDetails().get(0).subnetMask());
        Assertions.assertEquals("wasqvdaeyyg", model.deviceConfiguration().nicDetails().get(0).defaultGateway());
        Assertions.assertEquals("kjsqzhzbezkgi", model.deviceConfiguration().nicDetails().get(0).dnsServers().get(0));
        Assertions.assertEquals("vjskgfmoc", model.deviceConfiguration().nicDetails().get(0).defaultIsolationId());
        Assertions.assertEquals("klnsrmffey", model.deviceConfiguration().deviceMetadata());
        Assertions.assertEquals(ProvisioningState.UPDATING, model.provisioningState());
    }
}
