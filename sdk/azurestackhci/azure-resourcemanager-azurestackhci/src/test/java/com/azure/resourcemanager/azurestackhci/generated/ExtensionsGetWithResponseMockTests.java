// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurestackhci.AzureStackHciManager;
import com.azure.resourcemanager.azurestackhci.models.Extension;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ExtensionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Error\",\"extensionParameters\":{\"forceUpdateTag\":\"h\",\"publisher\":\"jsbcml\",\"type\":\"ahz\",\"typeHandlerVersion\":\"uroolkolirhhm\",\"autoUpgradeMinorVersion\":true,\"settings\":\"datau\",\"protectedSettings\":\"datafjzc\",\"enableAutomaticUpgrade\":true},\"aggregateState\":\"Error\",\"perNodeExtensionDetails\":[{\"name\":\"ahfxwccok\",\"extension\":\"kuk\",\"typeHandlerVersion\":\"c\",\"state\":\"PartiallySucceeded\",\"instanceView\":{\"name\":\"hoqeqshavljqk\",\"type\":\"rqolnthbb\",\"typeHandlerVersion\":\"gzukw\",\"status\":{}}},{\"name\":\"zkjthfceyjn\",\"extension\":\"mlfuyfjbp\",\"typeHandlerVersion\":\"ddhlrufzcqyj\",\"state\":\"Canceled\",\"instanceView\":{\"name\":\"iocuselqkr\",\"type\":\"zrhxuddqmdtf\",\"typeHandlerVersion\":\"sjmrkkhm\",\"status\":{}}}],\"managedBy\":\"Azure\"},\"id\":\"gyqi\",\"name\":\"okwtjawhvagnqfqq\",\"type\":\"lcvmyolcaymjch\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureStackHciManager manager = AzureStackHciManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Extension response = manager.extensions()
            .getWithResponse("ikff", "fgkuh", "nwhvuldbkkejj", "jigawgaz", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("h", response.forceUpdateTag());
        Assertions.assertEquals("jsbcml", response.publisher());
        Assertions.assertEquals("ahz", response.typePropertiesType());
        Assertions.assertEquals("uroolkolirhhm", response.typeHandlerVersion());
        Assertions.assertEquals(true, response.autoUpgradeMinorVersion());
        Assertions.assertEquals(true, response.enableAutomaticUpgrade());
    }
}
