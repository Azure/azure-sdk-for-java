// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurestackhci.AzurestackhciManager;
import com.azure.resourcemanager.azurestackhci.models.Cluster;
import com.azure.resourcemanager.azurestackhci.models.DiagnosticLevel;
import com.azure.resourcemanager.azurestackhci.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.azurestackhci.models.SoftwareAssuranceIntent;
import com.azure.resourcemanager.azurestackhci.models.WindowsServerSubscription;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClustersListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"identity\":{\"principalId\":\"9c343a9b-38b5-4945-b56b-5cedbc7279c9\",\"tenantId\":\"dcd0c6bc-529a-442f-83ed-9845d02e8ec4\",\"type\":\"SystemAssigned, UserAssigned\",\"userAssignedIdentities\":{\"vnmdyfoeboj\":{\"principalId\":\"50c57602-2b7d-4bf1-b395-81c2c3a5eb51\",\"clientId\":\"f7ccbb35-5c75-439f-9c67-9fd89f7a4b1c\"}}},\"properties\":{\"provisioningState\":\"Updating\",\"status\":\"NotYetRegistered\",\"connectivityStatus\":\"NotYetRegistered\",\"cloudId\":\"o\",\"cloudManagementEndpoint\":\"pjtnqjilaywkdcw\",\"aadClientId\":\"syril\",\"aadTenantId\":\"xdqaolfylnkkb\",\"aadApplicationObjectId\":\"jvlywl\",\"aadServicePrincipalObjectId\":\"fwobb\",\"softwareAssuranceProperties\":{\"softwareAssuranceStatus\":\"Disabled\",\"softwareAssuranceIntent\":\"Enable\",\"lastUpdated\":\"2021-04-22T17:10:11Z\"},\"desiredProperties\":{\"windowsServerSubscription\":\"Enabled\",\"diagnosticLevel\":\"Off\"},\"reportedProperties\":{\"clusterName\":\"zgczeu\",\"clusterId\":\"g\",\"clusterVersion\":\"ncaqttiekoifu\",\"nodes\":[{\"name\":\"tzgixgyrihlgmgb\",\"id\":77.93321,\"windowsServerSubscription\":\"Disabled\",\"nodeType\":\"ThirdParty\",\"ehcResourceId\":\"flkn\",\"manufacturer\":\"ndpgfjodhda\",\"model\":\"twfhi\",\"osName\":\"wgsabvcipo\",\"osVersion\":\"afcz\",\"osDisplayVersion\":\"mlj\",\"serialNumber\":\"rvpe\",\"coreCount\":55.793224,\"memoryInGiB\":31.787563,\"lastLicensingTimestamp\":\"2021-06-06T01:26:52Z\",\"oemActivation\":\"Disabled\"},{\"name\":\"jnsxzajlnsjhwjuy\",\"id\":60.214363,\"windowsServerSubscription\":\"Enabled\",\"nodeType\":\"ThirdParty\",\"ehcResourceId\":\"uaytuadxk\",\"manufacturer\":\"qbwpntghyk\",\"model\":\"rcdrnxsluvlzlad\",\"osName\":\"x\",\"osVersion\":\"bqhvfdqqjwkr\",\"osDisplayVersion\":\"zdanojis\",\"serialNumber\":\"lmvokat\",\"coreCount\":77.54762,\"memoryInGiB\":53.51044,\"lastLicensingTimestamp\":\"2021-05-09T17:51:21Z\",\"oemActivation\":\"Enabled\"},{\"name\":\"bk\",\"id\":73.5152,\"windowsServerSubscription\":\"Disabled\",\"nodeType\":\"FirstParty\",\"ehcResourceId\":\"g\",\"manufacturer\":\"wakwseivmakxhys\",\"model\":\"ljuxl\",\"osName\":\"ect\",\"osVersion\":\"fjmskdchmaiu\",\"osDisplayVersion\":\"vlzw\",\"serialNumber\":\"gmfalkzazmgoked\",\"coreCount\":79.41624,\"memoryInGiB\":44.218903,\"lastLicensingTimestamp\":\"2021-04-29T10:09:50Z\",\"oemActivation\":\"Enabled\"}],\"lastUpdated\":\"2021-07-07T13:16:26Z\",\"imdsAttestation\":\"Disabled\",\"diagnosticLevel\":\"Off\",\"supportedCapabilities\":[\"twpqrtva\"],\"clusterType\":\"ThirdParty\",\"manufacturer\":\"ni\",\"oemActivation\":\"Enabled\"},\"isolatedVmAttestationConfiguration\":{\"attestationResourceId\":\"agmceituugedhfp\",\"relyingPartyServiceEndpoint\":\"tlzm\",\"attestationServiceEndpoint\":\"syjdeolctae\"},\"trialDaysRemaining\":35.673885,\"billingModel\":\"rledjcu\",\"registrationTimestamp\":\"2021-01-30T05:29:13Z\",\"lastSyncTimestamp\":\"2021-11-28T15:07:59Z\",\"lastBillingTimestamp\":\"2021-09-17T06:58:10Z\",\"serviceEndpoint\":\"d\",\"resourceProviderObjectId\":\"vsgeafgf\"},\"location\":\"ehxlzsxezppk\",\"tags\":{\"jlpzeqtoyrp\":\"aesky\",\"owgw\":\"ixlajmllpquevham\",\"kxpkzwaq\":\"tmk\"},\"id\":\"ofqovchiqbplv\",\"name\":\"idu\",\"type\":\"ztekxbyjgmsfep\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzurestackhciManager manager = AzurestackhciManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Cluster> response
            = manager.clusters().listByResourceGroup("fzuvrzmz", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ehxlzsxezppk", response.iterator().next().location());
        Assertions.assertEquals("aesky", response.iterator().next().tags().get("jlpzeqtoyrp"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED,
            response.iterator().next().typeIdentityType());
        Assertions.assertEquals("pjtnqjilaywkdcw", response.iterator().next().cloudManagementEndpoint());
        Assertions.assertEquals("syril", response.iterator().next().aadClientId());
        Assertions.assertEquals("xdqaolfylnkkb", response.iterator().next().aadTenantId());
        Assertions.assertEquals("jvlywl", response.iterator().next().aadApplicationObjectId());
        Assertions.assertEquals("fwobb", response.iterator().next().aadServicePrincipalObjectId());
        Assertions.assertEquals(SoftwareAssuranceIntent.ENABLE,
            response.iterator().next().softwareAssuranceProperties().softwareAssuranceIntent());
        Assertions.assertEquals(WindowsServerSubscription.ENABLED,
            response.iterator().next().desiredProperties().windowsServerSubscription());
        Assertions.assertEquals(DiagnosticLevel.OFF, response.iterator().next().desiredProperties().diagnosticLevel());
    }
}
