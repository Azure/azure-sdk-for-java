// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurestackhci.AzureStackHciManager;
import com.azure.resourcemanager.azurestackhci.models.Cluster;
import com.azure.resourcemanager.azurestackhci.models.DiagnosticLevel;
import com.azure.resourcemanager.azurestackhci.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.azurestackhci.models.SoftwareAssuranceIntent;
import com.azure.resourcemanager.azurestackhci.models.WindowsServerSubscription;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClustersListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"identity\":{\"principalId\":\"76c19fd3-a8a2-428b-b8b1-71917b078139\",\"tenantId\":\"1cdc8460-6057-4ebd-a79a-967205711ca4\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"rzd\":{\"principalId\":\"067bebda-b856-44fc-8333-2e7f3c3b69f1\",\"clientId\":\"19f0d73b-a771-4146-ac92-8efc07257fd0\"},\"skzptjxulweucyr\":{\"principalId\":\"20aa2ea0-0072-41fb-b64b-c3378c37dc78\",\"clientId\":\"0308730e-140c-4fed-9ce5-69253b8df7a4\"}}},\"properties\":{\"provisioningState\":\"Moving\",\"status\":\"NotSpecified\",\"connectivityStatus\":\"NotSpecified\",\"cloudId\":\"gcj\",\"cloudManagementEndpoint\":\"n\",\"aadClientId\":\"hokamvfej\",\"aadTenantId\":\"nttmbq\",\"aadApplicationObjectId\":\"bzfivfok\",\"aadServicePrincipalObjectId\":\"sthhzagjfwy\",\"softwareAssuranceProperties\":{\"softwareAssuranceStatus\":\"Disabled\",\"softwareAssuranceIntent\":\"Enable\",\"lastUpdated\":\"2021-08-26T05:12:13Z\"},\"logCollectionProperties\":{\"fromDate\":\"2021-05-06T13:16:52Z\",\"toDate\":\"2021-07-25T18:07:22Z\",\"lastLogGenerated\":\"2021-07-26T22:31:28Z\",\"logCollectionSessionDetails\":[{\"logStartTime\":\"2021-01-21T21:09:44Z\",\"logEndTime\":\"2021-05-08T19:05:52Z\",\"timeCollected\":\"2021-12-08T12:43:53Z\",\"logSize\":6939845740099592279,\"logCollectionStatus\":\"Succeeded\",\"logCollectionJobType\":\"OnDemand\",\"correlationId\":\"gmihzpimcqr\",\"endTimeCollected\":\"2021-10-24T06:08:21Z\",\"logCollectionError\":{}},{\"logStartTime\":\"2021-09-20T05:50:56Z\",\"logEndTime\":\"2021-08-05T10:06:57Z\",\"timeCollected\":\"2021-09-07T11:16:11Z\",\"logSize\":8016682642169928370,\"logCollectionStatus\":\"Succeeded\",\"logCollectionJobType\":\"OnDemand\",\"correlationId\":\"hzvqnsqktcmbjwz\",\"endTimeCollected\":\"2021-06-16T03:12:12Z\",\"logCollectionError\":{}},{\"logStartTime\":\"2021-03-16T06:59:07Z\",\"logEndTime\":\"2021-09-17T07:57:52Z\",\"timeCollected\":\"2021-05-04T22:59:21Z\",\"logSize\":5868735635066716572,\"logCollectionStatus\":\"Failed\",\"logCollectionJobType\":\"Scheduled\",\"correlationId\":\"sqjcemqbmfuvqarw\",\"endTimeCollected\":\"2021-05-10T19:32:23Z\",\"logCollectionError\":{}},{\"logStartTime\":\"2021-07-16T14:19:09Z\",\"logEndTime\":\"2021-10-06T23:58:53Z\",\"timeCollected\":\"2021-04-05T16:03:48Z\",\"logSize\":7848988341385216516,\"logCollectionStatus\":\"Succeeded\",\"logCollectionJobType\":\"OnDemand\",\"correlationId\":\"td\",\"endTimeCollected\":\"2021-09-26T12:41:41Z\",\"logCollectionError\":{}}]},\"remoteSupportProperties\":{\"accessLevel\":\"DiagnosticsAndRepair\",\"expirationTimeStamp\":\"2021-02-10T07:45:24Z\",\"remoteSupportType\":\"Enable\",\"remoteSupportNodeSettings\":[{\"arcResourceId\":\"dbtwaokbavly\",\"state\":\"aaknwfr\",\"createdAt\":\"2021-03-15T22:48:32Z\",\"updatedAt\":\"2021-12-08T22:25:30Z\",\"connectionStatus\":\"p\",\"connectionErrorMessage\":\"jdigatole\",\"transcriptLocation\":\"cbctnanqimwbzx\"},{\"arcResourceId\":\"cldpkawn\",\"state\":\"laimouxwk\",\"createdAt\":\"2021-11-27T17:21:56Z\",\"updatedAt\":\"2020-12-29T15:26:50Z\",\"connectionStatus\":\"fco\",\"connectionErrorMessage\":\"icziuswswjrkb\",\"transcriptLocation\":\"jhbtqq\"}],\"remoteSupportSessionDetails\":[{\"sessionStartTime\":\"2021-05-28T05:56:34Z\",\"sessionEndTime\":\"2021-09-14T02:43Z\",\"nodeName\":\"wbivqvogfuyzwvbh\",\"duration\":1678698951923393252,\"accessLevel\":\"Diagnostics\"}]},\"desiredProperties\":{\"windowsServerSubscription\":\"Disabled\",\"diagnosticLevel\":\"Off\"},\"reportedProperties\":{\"clusterName\":\"ikcdrdaasax\",\"clusterId\":\"bsmfkwiyjvz\",\"clusterVersion\":\"osrnawnvzmlnkoy\",\"nodes\":[{\"name\":\"jabjqqa\",\"id\":68.090454,\"windowsServerSubscription\":\"Disabled\",\"nodeType\":\"ThirdParty\",\"ehcResourceId\":\"udndoabhjxw\",\"manufacturer\":\"weuipmpvksmi\",\"model\":\"sqxtltclkrdpq\",\"osName\":\"hyrfrakkldgr\",\"osVersion\":\"fcmfcn\",\"osDisplayVersion\":\"ajqmat\",\"serialNumber\":\"tie\",\"coreCount\":25.239485,\"memoryInGiB\":32.494797,\"lastLicensingTimestamp\":\"2021-08-12T03:38:51Z\",\"oemActivation\":\"Disabled\"},{\"name\":\"bmtlpqagyno\",\"id\":50.55483,\"windowsServerSubscription\":\"Enabled\",\"nodeType\":\"FirstParty\",\"ehcResourceId\":\"incryqxzx\",\"manufacturer\":\"zi\",\"model\":\"qimiymqr\",\"osName\":\"guhfupe\",\"osVersion\":\"svvoqsbpkflanfk\",\"osDisplayVersion\":\"syaowuzowp\",\"serialNumber\":\"hdkcprgu\",\"coreCount\":89.84289,\"memoryInGiB\":80.36083,\"lastLicensingTimestamp\":\"2021-02-01T20:30:38Z\",\"oemActivation\":\"Enabled\"}],\"lastUpdated\":\"2021-11-06T22:01:21Z\",\"imdsAttestation\":\"Enabled\",\"diagnosticLevel\":\"Enhanced\",\"supportedCapabilities\":[\"ud\",\"izcbfzmcrunfhiuc\",\"mfbcpaqktkrum\"],\"clusterType\":\"FirstParty\",\"manufacturer\":\"kyzbfvxovqkxiux\",\"oemActivation\":\"Enabled\"},\"isolatedVmAttestationConfiguration\":{\"attestationResourceId\":\"r\",\"relyingPartyServiceEndpoint\":\"yhlwcjsqg\",\"attestationServiceEndpoint\":\"hffbxrq\"},\"trialDaysRemaining\":41.991467,\"billingModel\":\"peuqlsdxeqztvxwm\",\"registrationTimestamp\":\"2021-08-04T10:36:28Z\",\"lastSyncTimestamp\":\"2021-03-28T03:59:41Z\",\"lastBillingTimestamp\":\"2021-05-02T23:28:12Z\",\"serviceEndpoint\":\"awwamecleqiouln\",\"resourceProviderObjectId\":\"zyoeo\"},\"location\":\"tollh\",\"tags\":{\"tzlnglxpn\":\"dm\",\"xigvjrktpgaeuk\":\"vyoanfbcswqagywv\"},\"id\":\"awohpmw\",\"name\":\"qnucs\",\"type\":\"lhsidsjtdl\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureStackHciManager manager = AzureStackHciManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Cluster> response
            = manager.clusters().listByResourceGroup("vzilmhiv", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("tollh", response.iterator().next().location());
        Assertions.assertEquals("dm", response.iterator().next().tags().get("tzlnglxpn"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED,
            response.iterator().next().typeIdentityType());
        Assertions.assertEquals("n", response.iterator().next().cloudManagementEndpoint());
        Assertions.assertEquals("hokamvfej", response.iterator().next().aadClientId());
        Assertions.assertEquals("nttmbq", response.iterator().next().aadTenantId());
        Assertions.assertEquals("bzfivfok", response.iterator().next().aadApplicationObjectId());
        Assertions.assertEquals("sthhzagjfwy", response.iterator().next().aadServicePrincipalObjectId());
        Assertions.assertEquals(SoftwareAssuranceIntent.ENABLE,
            response.iterator().next().softwareAssuranceProperties().softwareAssuranceIntent());
        Assertions.assertEquals(WindowsServerSubscription.DISABLED,
            response.iterator().next().desiredProperties().windowsServerSubscription());
        Assertions.assertEquals(DiagnosticLevel.OFF, response.iterator().next().desiredProperties().diagnosticLevel());
    }
}
