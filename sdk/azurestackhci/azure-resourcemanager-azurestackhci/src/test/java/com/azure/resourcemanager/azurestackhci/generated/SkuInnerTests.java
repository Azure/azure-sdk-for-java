// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.fluent.models.SkuInner;
import com.azure.resourcemanager.azurestackhci.models.SkuMappings;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SkuInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SkuInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"provisioningState\":\"y\",\"publisherId\":\"fpncurdo\",\"offerId\":\"iithtywu\",\"content\":\"cbihwqk\",\"contentVersion\":\"dntwjchrdgo\",\"skuMappings\":[{\"catalogPlanId\":\"mwctondzjluudfd\",\"marketplaceSkuId\":\"gg\",\"marketplaceSkuVersions\":[\"bwtovvtgseinqf\"]}]},\"id\":\"ufxqknpirgnepttw\",\"name\":\"msniffc\",\"type\":\"mqnrojlpijnkr\"}")
                .toObject(SkuInner.class);
        Assertions.assertEquals("fpncurdo", model.publisherId());
        Assertions.assertEquals("iithtywu", model.offerId());
        Assertions.assertEquals("cbihwqk", model.content());
        Assertions.assertEquals("dntwjchrdgo", model.contentVersion());
        Assertions.assertEquals("mwctondzjluudfd", model.skuMappings().get(0).catalogPlanId());
        Assertions.assertEquals("gg", model.skuMappings().get(0).marketplaceSkuId());
        Assertions.assertEquals("bwtovvtgseinqf", model.skuMappings().get(0).marketplaceSkuVersions().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SkuInner model =
            new SkuInner()
                .withPublisherId("fpncurdo")
                .withOfferId("iithtywu")
                .withContent("cbihwqk")
                .withContentVersion("dntwjchrdgo")
                .withSkuMappings(
                    Arrays
                        .asList(
                            new SkuMappings()
                                .withCatalogPlanId("mwctondzjluudfd")
                                .withMarketplaceSkuId("gg")
                                .withMarketplaceSkuVersions(Arrays.asList("bwtovvtgseinqf"))));
        model = BinaryData.fromObject(model).toObject(SkuInner.class);
        Assertions.assertEquals("fpncurdo", model.publisherId());
        Assertions.assertEquals("iithtywu", model.offerId());
        Assertions.assertEquals("cbihwqk", model.content());
        Assertions.assertEquals("dntwjchrdgo", model.contentVersion());
        Assertions.assertEquals("mwctondzjluudfd", model.skuMappings().get(0).catalogPlanId());
        Assertions.assertEquals("gg", model.skuMappings().get(0).marketplaceSkuId());
        Assertions.assertEquals("bwtovvtgseinqf", model.skuMappings().get(0).marketplaceSkuVersions().get(0));
    }
}
