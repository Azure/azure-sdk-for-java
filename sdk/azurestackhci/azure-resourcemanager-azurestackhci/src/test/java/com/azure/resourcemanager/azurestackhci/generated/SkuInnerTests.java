// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.fluent.models.SkuInner;
import com.azure.resourcemanager.azurestackhci.models.SkuMappings;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SkuInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SkuInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"miii\",\"publisherId\":\"gqcg\",\"offerId\":\"ugqkctotiowlxteq\",\"content\":\"tjgwdtguk\",\"contentVersion\":\"nblwphqlkcc\",\"skuMappings\":[{\"catalogPlanId\":\"gqwa\",\"marketplaceSkuId\":\"iul\",\"marketplaceSkuVersions\":[\"iip\",\"glvawuwzdufypivl\",\"bbjpmcubkmif\"]},{\"catalogPlanId\":\"xkubvphavpmhbrbq\",\"marketplaceSkuId\":\"govpbbtte\",\"marketplaceSkuVersions\":[\"knssqyzqed\",\"kdfrdbiqmrjgeihf\",\"lg\",\"wfiwzcxmj\"]}]},\"id\":\"yephmgtvljvrcmyf\",\"name\":\"i\",\"type\":\"gxhnpomyqwcabv\"}")
            .toObject(SkuInner.class);
        Assertions.assertEquals("gqcg", model.publisherId());
        Assertions.assertEquals("ugqkctotiowlxteq", model.offerId());
        Assertions.assertEquals("tjgwdtguk", model.content());
        Assertions.assertEquals("nblwphqlkcc", model.contentVersion());
        Assertions.assertEquals("gqwa", model.skuMappings().get(0).catalogPlanId());
        Assertions.assertEquals("iul", model.skuMappings().get(0).marketplaceSkuId());
        Assertions.assertEquals("iip", model.skuMappings().get(0).marketplaceSkuVersions().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SkuInner model = new SkuInner().withPublisherId("gqcg")
            .withOfferId("ugqkctotiowlxteq")
            .withContent("tjgwdtguk")
            .withContentVersion("nblwphqlkcc")
            .withSkuMappings(Arrays.asList(
                new SkuMappings().withCatalogPlanId("gqwa")
                    .withMarketplaceSkuId("iul")
                    .withMarketplaceSkuVersions(Arrays.asList("iip", "glvawuwzdufypivl", "bbjpmcubkmif")),
                new SkuMappings().withCatalogPlanId("xkubvphavpmhbrbq")
                    .withMarketplaceSkuId("govpbbtte")
                    .withMarketplaceSkuVersions(Arrays.asList("knssqyzqed", "kdfrdbiqmrjgeihf", "lg", "wfiwzcxmj"))));
        model = BinaryData.fromObject(model).toObject(SkuInner.class);
        Assertions.assertEquals("gqcg", model.publisherId());
        Assertions.assertEquals("ugqkctotiowlxteq", model.offerId());
        Assertions.assertEquals("tjgwdtguk", model.content());
        Assertions.assertEquals("nblwphqlkcc", model.contentVersion());
        Assertions.assertEquals("gqwa", model.skuMappings().get(0).catalogPlanId());
        Assertions.assertEquals("iul", model.skuMappings().get(0).marketplaceSkuId());
        Assertions.assertEquals("iip", model.skuMappings().get(0).marketplaceSkuVersions().get(0));
    }
}
