// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurestackhci.AzurestackhciManager;
import com.azure.resourcemanager.azurestackhci.models.Extension;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ExtensionsListByArcSettingMockTests {
    @Test
    public void testListByArcSetting() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Accepted\",\"extensionParameters\":{\"forceUpdateTag\":\"v\",\"publisher\":\"hikea\",\"type\":\"rvgpomxpupdtsd\",\"typeHandlerVersion\":\"yies\",\"autoUpgradeMinorVersion\":true,\"settings\":\"dataqb\",\"protectedSettings\":\"datautmp\",\"enableAutomaticUpgrade\":true},\"aggregateState\":\"UpgradeFailedRollbackSucceeded\",\"perNodeExtensionDetails\":[{\"name\":\"sbgbwwzvdajfwn\",\"extension\":\"fmaciqgjjrlhiq\",\"typeHandlerVersion\":\"ixvt\",\"state\":\"Deleted\",\"instanceView\":{\"name\":\"xtndopgjttbasua\",\"type\":\"pdlndbeaqbkixvv\",\"typeHandlerVersion\":\"ynpbbfqvzfjmspu\",\"status\":{}}}],\"managedBy\":\"Azure\"},\"id\":\"zjljmphfk\",\"name\":\"ezolgjzm\",\"type\":\"cuydoccnxshanz\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzurestackhciManager manager = AzurestackhciManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Extension> response
            = manager.extensions().listByArcSetting("p", "hazyntacihnco", "mip", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("v", response.iterator().next().forceUpdateTag());
        Assertions.assertEquals("hikea", response.iterator().next().publisher());
        Assertions.assertEquals("rvgpomxpupdtsd", response.iterator().next().typePropertiesType());
        Assertions.assertEquals("yies", response.iterator().next().typeHandlerVersion());
        Assertions.assertEquals(true, response.iterator().next().autoUpgradeMinorVersion());
        Assertions.assertEquals(true, response.iterator().next().enableAutomaticUpgrade());
    }
}
