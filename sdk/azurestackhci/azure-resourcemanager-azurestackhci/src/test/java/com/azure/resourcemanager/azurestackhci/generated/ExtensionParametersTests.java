// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.fluent.models.ExtensionParameters;
import org.junit.jupiter.api.Assertions;

public final class ExtensionParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ExtensionParameters model = BinaryData.fromString(
            "{\"forceUpdateTag\":\"nc\",\"publisher\":\"mqspkcdqzhlctdd\",\"type\":\"qn\",\"typeHandlerVersion\":\"fpch\",\"autoUpgradeMinorVersion\":false,\"settings\":\"datajjrcgegydc\",\"protectedSettings\":\"dataoxjumvqqo\",\"enableAutomaticUpgrade\":true}")
            .toObject(ExtensionParameters.class);
        Assertions.assertEquals("nc", model.forceUpdateTag());
        Assertions.assertEquals("mqspkcdqzhlctdd", model.publisher());
        Assertions.assertEquals("qn", model.type());
        Assertions.assertEquals("fpch", model.typeHandlerVersion());
        Assertions.assertEquals(false, model.autoUpgradeMinorVersion());
        Assertions.assertEquals(true, model.enableAutomaticUpgrade());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ExtensionParameters model = new ExtensionParameters().withForceUpdateTag("nc")
            .withPublisher("mqspkcdqzhlctdd")
            .withType("qn")
            .withTypeHandlerVersion("fpch")
            .withAutoUpgradeMinorVersion(false)
            .withSettings("datajjrcgegydc")
            .withProtectedSettings("dataoxjumvqqo")
            .withEnableAutomaticUpgrade(true);
        model = BinaryData.fromObject(model).toObject(ExtensionParameters.class);
        Assertions.assertEquals("nc", model.forceUpdateTag());
        Assertions.assertEquals("mqspkcdqzhlctdd", model.publisher());
        Assertions.assertEquals("qn", model.type());
        Assertions.assertEquals("fpch", model.typeHandlerVersion());
        Assertions.assertEquals(false, model.autoUpgradeMinorVersion());
        Assertions.assertEquals(true, model.enableAutomaticUpgrade());
    }
}
