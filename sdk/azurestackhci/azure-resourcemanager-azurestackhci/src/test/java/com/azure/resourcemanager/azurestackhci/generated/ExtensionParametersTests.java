// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.fluent.models.ExtensionParameters;
import org.junit.jupiter.api.Assertions;

public final class ExtensionParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ExtensionParameters model =
            BinaryData
                .fromString(
                    "{\"forceUpdateTag\":\"jyofdxluusdtto\",\"publisher\":\"aboekqv\",\"type\":\"lns\",\"typeHandlerVersion\":\"bxwyjsflhhcaa\",\"autoUpgradeMinorVersion\":true,\"settings\":\"dataxisxyawjoyaqcsl\",\"protectedSettings\":\"datapkii\",\"enableAutomaticUpgrade\":false}")
                .toObject(ExtensionParameters.class);
        Assertions.assertEquals("jyofdxluusdtto", model.forceUpdateTag());
        Assertions.assertEquals("aboekqv", model.publisher());
        Assertions.assertEquals("lns", model.type());
        Assertions.assertEquals("bxwyjsflhhcaa", model.typeHandlerVersion());
        Assertions.assertEquals(true, model.autoUpgradeMinorVersion());
        Assertions.assertEquals(false, model.enableAutomaticUpgrade());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ExtensionParameters model =
            new ExtensionParameters()
                .withForceUpdateTag("jyofdxluusdtto")
                .withPublisher("aboekqv")
                .withType("lns")
                .withTypeHandlerVersion("bxwyjsflhhcaa")
                .withAutoUpgradeMinorVersion(true)
                .withSettings("dataxisxyawjoyaqcsl")
                .withProtectedSettings("datapkii")
                .withEnableAutomaticUpgrade(false);
        model = BinaryData.fromObject(model).toObject(ExtensionParameters.class);
        Assertions.assertEquals("jyofdxluusdtto", model.forceUpdateTag());
        Assertions.assertEquals("aboekqv", model.publisher());
        Assertions.assertEquals("lns", model.type());
        Assertions.assertEquals("bxwyjsflhhcaa", model.typeHandlerVersion());
        Assertions.assertEquals(true, model.autoUpgradeMinorVersion());
        Assertions.assertEquals(false, model.enableAutomaticUpgrade());
    }
}
