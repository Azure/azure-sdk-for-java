// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurestackhci.AzureStackHciManager;
import com.azure.resourcemanager.azurestackhci.models.ArcSetting;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ArcSettingsListByClusterMockTests {
    @Test
    public void testListByCluster() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"PartiallySucceeded\",\"arcInstanceResourceGroup\":\"xyfukzxuizhyhn\",\"arcApplicationClientId\":\"kpetiarxq\",\"arcApplicationTenantId\":\"bxdukecpxdazvd\",\"arcServicePrincipalObjectId\":\"tmmkosz\",\"arcApplicationObjectId\":\"blnsntrpcaqk\",\"aggregateState\":\"Deleting\",\"perNodeDetails\":[{\"name\":\"fmhklbnld\",\"arcInstance\":\"cbhhez\",\"arcNodeServicePrincipalObjectId\":\"u\",\"state\":\"PartiallySucceeded\"},{\"name\":\"xut\",\"arcInstance\":\"brruyuuatv\",\"arcNodeServicePrincipalObjectId\":\"bjwcolbmx\",\"state\":\"Connected\"},{\"name\":\"tpc\",\"arcInstance\":\"hprzrvxhmtfho\",\"arcNodeServicePrincipalObjectId\":\"xzcmjhngxno\",\"state\":\"Connected\"},{\"name\":\"disnj\",\"arcInstance\":\"hdlmydidwhe\",\"arcNodeServicePrincipalObjectId\":\"wwtjfdoesxxhmwc\",\"state\":\"Canceled\"}],\"connectivityProperties\":\"datayo\",\"defaultExtensions\":[{\"category\":\"xhn\",\"consentTime\":\"2021-05-20T23:38:08Z\"},{\"category\":\"jzrbhtmeplv\",\"consentTime\":\"2020-12-21T01:54:28Z\"},{\"category\":\"brlbpgs\",\"consentTime\":\"2021-08-24T01:01:07Z\"},{\"category\":\"nchjhgemuowakywa\",\"consentTime\":\"2021-05-09T15:29:15Z\"}]},\"id\":\"m\",\"name\":\"cgqtag\",\"type\":\"rclsso\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureStackHciManager manager = AzureStackHciManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ArcSetting> response
            = manager.arcSettings().listByCluster("iisb", "mnppccekuztd", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("xyfukzxuizhyhn", response.iterator().next().arcInstanceResourceGroup());
        Assertions.assertEquals("kpetiarxq", response.iterator().next().arcApplicationClientId());
        Assertions.assertEquals("bxdukecpxdazvd", response.iterator().next().arcApplicationTenantId());
        Assertions.assertEquals("tmmkosz", response.iterator().next().arcServicePrincipalObjectId());
        Assertions.assertEquals("blnsntrpcaqk", response.iterator().next().arcApplicationObjectId());
    }
}
