// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurestackhci.AzurestackhciManager;
import com.azure.resourcemanager.azurestackhci.models.ArcSetting;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ArcSettingsListByClusterMockTests {
    @Test
    public void testListByCluster() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Deleting\",\"arcInstanceResourceGroup\":\"mfbfununmpzkrvfy\",\"arcApplicationClientId\":\"kdschlzvfictnkjj\",\"arcApplicationTenantId\":\"cwnphbkgfyrtogm\",\"arcServicePrincipalObjectId\":\"j\",\"arcApplicationObjectId\":\"scdfpdqw\",\"aggregateState\":\"Provisioning\",\"perNodeDetails\":[{\"name\":\"wmseharxifvqn\",\"arcInstance\":\"tmbpjp\",\"arcNodeServicePrincipalObjectId\":\"vwjhrsidqpxlbt\",\"state\":\"Succeeded\"},{\"name\":\"tngatwmykyu\",\"arcInstance\":\"ym\",\"arcNodeServicePrincipalObjectId\":\"mfjhpycvjqdvdwkq\",\"state\":\"Deleted\"},{\"name\":\"lefgnaavuagnte\",\"arcInstance\":\"outnpdctuhspfefy\",\"arcNodeServicePrincipalObjectId\":\"duyeuyl\",\"state\":\"Canceled\"},{\"name\":\"tybkcgs\",\"arcInstance\":\"h\",\"arcNodeServicePrincipalObjectId\":\"lnm\",\"state\":\"PartiallySucceeded\"}],\"connectivityProperties\":\"datafxexlfciatxtjrr\",\"defaultExtensions\":[{\"category\":\"skjh\",\"consentTime\":\"2021-12-01T10:43:45Z\"},{\"category\":\"ajfoxc\",\"consentTime\":\"2021-04-15T19:18:44Z\"},{\"category\":\"slxlhu\",\"consentTime\":\"2021-01-21T19:30:07Z\"},{\"category\":\"muk\",\"consentTime\":\"2021-03-27T00:31:36Z\"}]},\"id\":\"kxettcslojfkq\",\"name\":\"dnqtoqxjhqx\",\"type\":\"s\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzurestackhciManager manager = AzurestackhciManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ArcSetting> response
            = manager.arcSettings().listByCluster("zptdmkrrbh", "pfulube", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("mfbfununmpzkrvfy", response.iterator().next().arcInstanceResourceGroup());
        Assertions.assertEquals("kdschlzvfictnkjj", response.iterator().next().arcApplicationClientId());
        Assertions.assertEquals("cwnphbkgfyrtogm", response.iterator().next().arcApplicationTenantId());
        Assertions.assertEquals("j", response.iterator().next().arcServicePrincipalObjectId());
        Assertions.assertEquals("scdfpdqw", response.iterator().next().arcApplicationObjectId());
    }
}
