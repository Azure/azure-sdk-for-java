// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.fluent.models.Step;
import com.azure.resourcemanager.azurestackhci.fluent.models.UpdateRunInner;
import com.azure.resourcemanager.azurestackhci.models.UpdateRunList;
import com.azure.resourcemanager.azurestackhci.models.UpdateRunPropertiesState;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UpdateRunListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UpdateRunList model = BinaryData.fromString(
            "{\"value\":[{\"location\":\"cbbxigdhxi\",\"properties\":{\"provisioningState\":\"Connected\",\"timeStarted\":\"2021-08-29T05:32:17Z\",\"lastUpdatedTime\":\"2021-07-02T14:30:33Z\",\"duration\":\"dpyqyybxubmd\",\"state\":\"InProgress\",\"progress\":{\"name\":\"qwremjel\",\"description\":\"acigel\",\"errorMessage\":\"hdbvqvwzkjop\",\"status\":\"eonrlkwzdqybxce\",\"startTimeUtc\":\"2021-01-20T06:24:16Z\",\"endTimeUtc\":\"2021-02-03T13:58:38Z\",\"lastUpdatedTimeUtc\":\"2021-05-23T22:10:43Z\",\"steps\":[{},{},{}]}},\"id\":\"yiaseqchkrttzraz\",\"name\":\"sg\",\"type\":\"kiuemv\"}],\"nextLink\":\"bwzohmnrxxbs\"}")
            .toObject(UpdateRunList.class);
        Assertions.assertEquals("cbbxigdhxi", model.value().get(0).location());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-29T05:32:17Z"), model.value().get(0).timeStarted());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-02T14:30:33Z"), model.value().get(0).lastUpdatedTime());
        Assertions.assertEquals("dpyqyybxubmd", model.value().get(0).duration());
        Assertions.assertEquals(UpdateRunPropertiesState.IN_PROGRESS, model.value().get(0).state());
        Assertions.assertEquals("qwremjel", model.value().get(0).namePropertiesName());
        Assertions.assertEquals("acigel", model.value().get(0).description());
        Assertions.assertEquals("hdbvqvwzkjop", model.value().get(0).errorMessage());
        Assertions.assertEquals("eonrlkwzdqybxce", model.value().get(0).status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-20T06:24:16Z"), model.value().get(0).startTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-03T13:58:38Z"), model.value().get(0).endTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-23T22:10:43Z"),
            model.value().get(0).lastUpdatedTimeUtc());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UpdateRunList model
            = new UpdateRunList().withValue(Arrays.asList(new UpdateRunInner().withLocation("cbbxigdhxi")
                .withTimeStarted(OffsetDateTime.parse("2021-08-29T05:32:17Z"))
                .withLastUpdatedTime(OffsetDateTime.parse("2021-07-02T14:30:33Z"))
                .withDuration("dpyqyybxubmd")
                .withState(UpdateRunPropertiesState.IN_PROGRESS)
                .withNamePropertiesName("qwremjel")
                .withDescription("acigel")
                .withErrorMessage("hdbvqvwzkjop")
                .withStatus("eonrlkwzdqybxce")
                .withStartTimeUtc(OffsetDateTime.parse("2021-01-20T06:24:16Z"))
                .withEndTimeUtc(OffsetDateTime.parse("2021-02-03T13:58:38Z"))
                .withLastUpdatedTimeUtc(OffsetDateTime.parse("2021-05-23T22:10:43Z"))
                .withSteps(Arrays.asList(new Step(), new Step(), new Step()))));
        model = BinaryData.fromObject(model).toObject(UpdateRunList.class);
        Assertions.assertEquals("cbbxigdhxi", model.value().get(0).location());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-29T05:32:17Z"), model.value().get(0).timeStarted());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-02T14:30:33Z"), model.value().get(0).lastUpdatedTime());
        Assertions.assertEquals("dpyqyybxubmd", model.value().get(0).duration());
        Assertions.assertEquals(UpdateRunPropertiesState.IN_PROGRESS, model.value().get(0).state());
        Assertions.assertEquals("qwremjel", model.value().get(0).namePropertiesName());
        Assertions.assertEquals("acigel", model.value().get(0).description());
        Assertions.assertEquals("hdbvqvwzkjop", model.value().get(0).errorMessage());
        Assertions.assertEquals("eonrlkwzdqybxce", model.value().get(0).status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-20T06:24:16Z"), model.value().get(0).startTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-03T13:58:38Z"), model.value().get(0).endTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-23T22:10:43Z"),
            model.value().get(0).lastUpdatedTimeUtc());
    }
}
