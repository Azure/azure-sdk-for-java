// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.fluent.models.Step;
import com.azure.resourcemanager.azurestackhci.fluent.models.UpdateRunInner;
import com.azure.resourcemanager.azurestackhci.models.UpdateRunList;
import com.azure.resourcemanager.azurestackhci.models.UpdateRunPropertiesState;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UpdateRunListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UpdateRunList model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"location\":\"irctymoxoftpipiw\",\"properties\":{\"provisioningState\":\"Accepted\",\"timeStarted\":\"2021-12-02T08:32:29Z\",\"lastUpdatedTime\":\"2021-09-05T19:51:12Z\",\"duration\":\"qjlihhyuspska\",\"state\":\"Failed\",\"progress\":{\"name\":\"fwdgzxulucvp\",\"description\":\"rsre\",\"errorMessage\":\"vxurisjnhnytxifq\",\"status\":\"gxmrhublwp\",\"startTimeUtc\":\"2021-04-21T19:26:02Z\",\"endTimeUtc\":\"2021-05-30T11:00:48Z\",\"lastUpdatedTimeUtc\":\"2021-10-26T03:51:19Z\",\"expectedExecutionTime\":\"upauut\",\"steps\":[{}]}},\"id\":\"qhih\",\"name\":\"jqgwzp\",\"type\":\"fqntcyp\"}],\"nextLink\":\"jv\"}")
                .toObject(UpdateRunList.class);
        Assertions.assertEquals("irctymoxoftpipiw", model.value().get(0).location());
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-02T08:32:29Z"), model.value().get(0).timeStarted());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-05T19:51:12Z"), model.value().get(0).lastUpdatedTime());
        Assertions.assertEquals("qjlihhyuspska", model.value().get(0).duration());
        Assertions.assertEquals(UpdateRunPropertiesState.FAILED, model.value().get(0).state());
        Assertions.assertEquals("fwdgzxulucvp", model.value().get(0).namePropertiesName());
        Assertions.assertEquals("rsre", model.value().get(0).description());
        Assertions.assertEquals("vxurisjnhnytxifq", model.value().get(0).errorMessage());
        Assertions.assertEquals("gxmrhublwp", model.value().get(0).status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-21T19:26:02Z"), model.value().get(0).startTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-30T11:00:48Z"), model.value().get(0).endTimeUtc());
        Assertions
            .assertEquals(OffsetDateTime.parse("2021-10-26T03:51:19Z"), model.value().get(0).lastUpdatedTimeUtc());
        Assertions.assertEquals("upauut", model.value().get(0).expectedExecutionTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UpdateRunList model =
            new UpdateRunList()
                .withValue(
                    Arrays
                        .asList(
                            new UpdateRunInner()
                                .withLocation("irctymoxoftpipiw")
                                .withTimeStarted(OffsetDateTime.parse("2021-12-02T08:32:29Z"))
                                .withLastUpdatedTime(OffsetDateTime.parse("2021-09-05T19:51:12Z"))
                                .withDuration("qjlihhyuspska")
                                .withState(UpdateRunPropertiesState.FAILED)
                                .withNamePropertiesName("fwdgzxulucvp")
                                .withDescription("rsre")
                                .withErrorMessage("vxurisjnhnytxifq")
                                .withStatus("gxmrhublwp")
                                .withStartTimeUtc(OffsetDateTime.parse("2021-04-21T19:26:02Z"))
                                .withEndTimeUtc(OffsetDateTime.parse("2021-05-30T11:00:48Z"))
                                .withLastUpdatedTimeUtc(OffsetDateTime.parse("2021-10-26T03:51:19Z"))
                                .withExpectedExecutionTime("upauut")
                                .withSteps(Arrays.asList(new Step()))));
        model = BinaryData.fromObject(model).toObject(UpdateRunList.class);
        Assertions.assertEquals("irctymoxoftpipiw", model.value().get(0).location());
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-02T08:32:29Z"), model.value().get(0).timeStarted());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-05T19:51:12Z"), model.value().get(0).lastUpdatedTime());
        Assertions.assertEquals("qjlihhyuspska", model.value().get(0).duration());
        Assertions.assertEquals(UpdateRunPropertiesState.FAILED, model.value().get(0).state());
        Assertions.assertEquals("fwdgzxulucvp", model.value().get(0).namePropertiesName());
        Assertions.assertEquals("rsre", model.value().get(0).description());
        Assertions.assertEquals("vxurisjnhnytxifq", model.value().get(0).errorMessage());
        Assertions.assertEquals("gxmrhublwp", model.value().get(0).status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-21T19:26:02Z"), model.value().get(0).startTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-30T11:00:48Z"), model.value().get(0).endTimeUtc());
        Assertions
            .assertEquals(OffsetDateTime.parse("2021-10-26T03:51:19Z"), model.value().get(0).lastUpdatedTimeUtc());
        Assertions.assertEquals("upauut", model.value().get(0).expectedExecutionTime());
    }
}
