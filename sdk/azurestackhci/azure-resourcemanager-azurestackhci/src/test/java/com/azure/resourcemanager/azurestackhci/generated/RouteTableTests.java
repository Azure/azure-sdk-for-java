// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.models.Route;
import com.azure.resourcemanager.azurestackhci.models.RouteTable;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RouteTableTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RouteTable model =
            BinaryData
                .fromString(
                    "{\"etag\":\"vdfgiotk\",\"name\":\"utqxlngx\",\"type\":\"fgugnxkrxdqmid\",\"properties\":{\"routes\":[{\"properties\":{\"addressPrefix\":\"qdrabhjybigehoqf\",\"nextHopIpAddress\":\"wska\"},\"name\":\"ktzlcuiywg\"},{\"properties\":{\"addressPrefix\":\"gndrvynh\",\"nextHopIpAddress\":\"pphrcgynco\"},\"name\":\"ecfvmm\"}]}}")
                .toObject(RouteTable.class);
        Assertions.assertEquals("ktzlcuiywg", model.routes().get(0).name());
        Assertions.assertEquals("qdrabhjybigehoqf", model.routes().get(0).addressPrefix());
        Assertions.assertEquals("wska", model.routes().get(0).nextHopIpAddress());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RouteTable model =
            new RouteTable()
                .withRoutes(
                    Arrays
                        .asList(
                            new Route()
                                .withName("ktzlcuiywg")
                                .withAddressPrefix("qdrabhjybigehoqf")
                                .withNextHopIpAddress("wska"),
                            new Route()
                                .withName("ecfvmm")
                                .withAddressPrefix("gndrvynh")
                                .withNextHopIpAddress("pphrcgynco")));
        model = BinaryData.fromObject(model).toObject(RouteTable.class);
        Assertions.assertEquals("ktzlcuiywg", model.routes().get(0).name());
        Assertions.assertEquals("qdrabhjybigehoqf", model.routes().get(0).addressPrefix());
        Assertions.assertEquals("wska", model.routes().get(0).nextHopIpAddress());
    }
}
