// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.models.Route;
import com.azure.resourcemanager.azurestackhci.models.RouteTable;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RouteTableTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RouteTable model = BinaryData.fromString(
            "{\"etag\":\"qeqala\",\"name\":\"lagun\",\"type\":\"gfebwlnb\",\"properties\":{\"routes\":[{\"properties\":{\"addressPrefix\":\"udzqavbp\",\"nextHopIpAddress\":\"mjxlyyzglgouw\"},\"name\":\"mjjyuojq\"},{\"properties\":{\"addressPrefix\":\"axkjeytunlbfjk\",\"nextHopIpAddress\":\"u\"},\"name\":\"kqbh\"},{\"properties\":{\"addressPrefix\":\"qunjqh\",\"nextHopIpAddress\":\"nxaulk\"},\"name\":\"kdk\"}]}}")
            .toObject(RouteTable.class);
        Assertions.assertEquals("mjjyuojq", model.routes().get(0).name());
        Assertions.assertEquals("udzqavbp", model.routes().get(0).addressPrefix());
        Assertions.assertEquals("mjxlyyzglgouw", model.routes().get(0).nextHopIpAddress());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RouteTable model = new RouteTable().withRoutes(Arrays.asList(
            new Route().withName("mjjyuojq").withAddressPrefix("udzqavbp").withNextHopIpAddress("mjxlyyzglgouw"),
            new Route().withName("kqbh").withAddressPrefix("axkjeytunlbfjk").withNextHopIpAddress("u"),
            new Route().withName("kdk").withAddressPrefix("qunjqh").withNextHopIpAddress("nxaulk")));
        model = BinaryData.fromObject(model).toObject(RouteTable.class);
        Assertions.assertEquals("mjjyuojq", model.routes().get(0).name());
        Assertions.assertEquals("udzqavbp", model.routes().get(0).addressPrefix());
        Assertions.assertEquals("mjxlyyzglgouw", model.routes().get(0).nextHopIpAddress());
    }
}
