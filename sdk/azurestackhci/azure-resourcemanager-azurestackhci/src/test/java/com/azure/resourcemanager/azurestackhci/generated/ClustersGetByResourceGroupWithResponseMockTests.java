// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurestackhci.AzureStackHciManager;
import com.azure.resourcemanager.azurestackhci.models.Cluster;
import com.azure.resourcemanager.azurestackhci.models.DiagnosticLevel;
import com.azure.resourcemanager.azurestackhci.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.azurestackhci.models.SoftwareAssuranceIntent;
import com.azure.resourcemanager.azurestackhci.models.WindowsServerSubscription;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClustersGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"identity\":{\"principalId\":\"20c97887-7d42-478d-bd59-86e3635bc098\",\"tenantId\":\"41018299-5da9-4691-838d-d620dc82c209\",\"type\":\"None\",\"userAssignedIdentities\":{\"renxolriyehqbe\":{\"principalId\":\"e5683214-85f2-490d-82b4-adb498d43f9e\",\"clientId\":\"dc154b25-c23d-4ac2-8182-a30a792401f8\"},\"lhydwbdbfgrlpu\":{\"principalId\":\"ab7fc8d4-a0cd-4689-a13d-86d6f64037fb\",\"clientId\":\"8072ac09-5c9d-4780-b600-a8b96b8ec1cb\"}}},\"properties\":{\"provisioningState\":\"DisableInProgress\",\"status\":\"ConnectedRecently\",\"connectivityStatus\":\"NotConnectedRecently\",\"cloudId\":\"mpathubtah\",\"cloudManagementEndpoint\":\"an\",\"aadClientId\":\"wllbv\",\"aadTenantId\":\"zsffte\",\"aadApplicationObjectId\":\"us\",\"aadServicePrincipalObjectId\":\"tjtgravaqogfkb\",\"softwareAssuranceProperties\":{\"softwareAssuranceStatus\":\"Disabled\",\"softwareAssuranceIntent\":\"Disable\",\"lastUpdated\":\"2021-07-22T12:18:14Z\"},\"logCollectionProperties\":{\"fromDate\":\"2021-07-02T19:24:21Z\",\"toDate\":\"2021-10-06T16:35:36Z\",\"lastLogGenerated\":\"2021-08-16T10:10:51Z\",\"logCollectionSessionDetails\":[{\"logStartTime\":\"2021-04-25T17:49:51Z\",\"logEndTime\":\"2021-05-25T10:22:53Z\",\"timeCollected\":\"2021-10-25T21:45:01Z\",\"logSize\":5671896095521184545,\"logCollectionStatus\":\"Succeeded\",\"logCollectionJobType\":\"Scheduled\",\"correlationId\":\"whczzqrhmng\",\"endTimeCollected\":\"2021-11-08T04:12:55Z\",\"logCollectionError\":{}},{\"logStartTime\":\"2021-09-24T22:34:02Z\",\"logEndTime\":\"2021-10-02T13:30:34Z\",\"timeCollected\":\"2021-04-19T22:17:21Z\",\"logSize\":4983330695304354539,\"logCollectionStatus\":\"None\",\"logCollectionJobType\":\"OnDemand\",\"correlationId\":\"chl\",\"endTimeCollected\":\"2021-11-13T06:25:36Z\",\"logCollectionError\":{}},{\"logStartTime\":\"2021-04-19T20:50:14Z\",\"logEndTime\":\"2021-01-20T19:39:16Z\",\"timeCollected\":\"2021-04-28T18:17:17Z\",\"logSize\":9142556233920666772,\"logCollectionStatus\":\"InProgress\",\"logCollectionJobType\":\"OnDemand\",\"correlationId\":\"xkbrfg\",\"endTimeCollected\":\"2021-09-01T06:36:17Z\",\"logCollectionError\":{}}]},\"remoteSupportProperties\":{\"accessLevel\":\"DiagnosticsAndRepair\",\"expirationTimeStamp\":\"2021-04-12T17:31:30Z\",\"remoteSupportType\":\"Revoke\",\"remoteSupportNodeSettings\":[{\"arcResourceId\":\"qrxetfgcwvr\",\"state\":\"dqntycnawthv\",\"createdAt\":\"2021-07-10T21:24:04Z\",\"updatedAt\":\"2021-04-30T15:22:04Z\",\"connectionStatus\":\"yeamcmhudf\",\"connectionErrorMessage\":\"cehokw\",\"transcriptLocation\":\"qtwloes\"}],\"remoteSupportSessionDetails\":[{\"sessionStartTime\":\"2021-04-22T13:34:52Z\",\"sessionEndTime\":\"2021-03-30T21:09:09Z\",\"nodeName\":\"yrukoi\",\"duration\":8271517726373471913,\"accessLevel\":\"Diagnostics\"},{\"sessionStartTime\":\"2021-03-26T19:42:44Z\",\"sessionEndTime\":\"2021-10-03T13:52:51Z\",\"nodeName\":\"pjlh\",\"duration\":3498524662642148931,\"accessLevel\":\"DiagnosticsAndRepair\"},{\"sessionStartTime\":\"2021-08-26T17:06:24Z\",\"sessionEndTime\":\"2021-08-25T15:20:24Z\",\"nodeName\":\"qkkwhbgxvellvul\",\"duration\":258858222209929710,\"accessLevel\":\"DiagnosticsAndRepair\"},{\"sessionStartTime\":\"2021-11-16T23:48:23Z\",\"sessionEndTime\":\"2021-12-05T20:30:24Z\",\"nodeName\":\"tvmcly\",\"duration\":7261970206067613622,\"accessLevel\":\"DiagnosticsAndRepair\"}]},\"desiredProperties\":{\"windowsServerSubscription\":\"Enabled\",\"diagnosticLevel\":\"Basic\"},\"reportedProperties\":{\"clusterName\":\"fzuvrzmz\",\"clusterId\":\"zjqr\",\"clusterVersion\":\"pv\",\"nodes\":[{\"name\":\"foebo\",\"id\":12.669712,\"windowsServerSubscription\":\"Disabled\",\"nodeType\":\"FirstParty\",\"ehcResourceId\":\"ohoqkpjtnqjilayw\",\"manufacturer\":\"cwm\",\"model\":\"yrilmhxdqaolf\",\"osName\":\"nkkbjpjvlywltmfw\",\"osVersion\":\"bjwhlwyjfnqzocr\",\"osDisplayVersion\":\"gczeuntgx\",\"serialNumber\":\"ca\",\"coreCount\":86.22356,\"memoryInGiB\":86.274,\"lastLicensingTimestamp\":\"2021-10-09T15:57:20Z\",\"oemActivation\":\"Enabled\"},{\"name\":\"vnyttzgi\",\"id\":13.321484,\"windowsServerSubscription\":\"Disabled\",\"nodeType\":\"FirstParty\",\"ehcResourceId\":\"mgb\",\"manufacturer\":\"lqtxnrflkndrn\",\"model\":\"gfjo\",\"osName\":\"daqotwfh\",\"osVersion\":\"xwgsa\",\"osDisplayVersion\":\"c\",\"serialNumber\":\"owzafczu\",\"coreCount\":93.52678,\"memoryInGiB\":82.20888,\"lastLicensingTimestamp\":\"2021-04-06T10:07:56Z\",\"oemActivation\":\"Disabled\"}],\"lastUpdated\":\"2021-05-28T06:59:52Z\",\"imdsAttestation\":\"Enabled\",\"diagnosticLevel\":\"Enhanced\",\"supportedCapabilities\":[\"ti\",\"jnsxzajlnsjhwjuy\",\"xbxq\"],\"clusterType\":\"FirstParty\",\"manufacturer\":\"aytuadxkxeqbwp\",\"oemActivation\":\"Enabled\"},\"isolatedVmAttestationConfiguration\":{\"attestationResourceId\":\"ksarcdrnxsluvl\",\"relyingPartyServiceEndpoint\":\"adltxkpbqhvfdq\",\"attestationServiceEndpoint\":\"w\"},\"trialDaysRemaining\":89.20991,\"billingModel\":\"zdanojis\",\"registrationTimestamp\":\"2021-08-07T00:54:04Z\",\"lastSyncTimestamp\":\"2021-09-13T20:00:32Z\",\"lastBillingTimestamp\":\"2021-11-09T04:21:58Z\",\"serviceEndpoint\":\"tuz\",\"resourceProviderObjectId\":\"ctibpvbka\"},\"location\":\"xsmzygdf\",\"tags\":{\"so\":\"wseivmakxh\",\"bectvtfjmskdch\":\"ljuxl\",\"kzaz\":\"aiubavlzwpvgmfa\",\"rokzrthqetwpq\":\"gokedgjqafkm\"},\"id\":\"tvaoznqn\",\"name\":\"xiezeagmceit\",\"type\":\"ugedh\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureStackHciManager manager = AzureStackHciManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Cluster response = manager.clusters()
            .getByResourceGroupWithResponse("bninjgazlsvbzfc", "uoeedwjcci", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("xsmzygdf", response.location());
        Assertions.assertEquals("wseivmakxh", response.tags().get("so"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.typeIdentityType());
        Assertions.assertEquals("an", response.cloudManagementEndpoint());
        Assertions.assertEquals("wllbv", response.aadClientId());
        Assertions.assertEquals("zsffte", response.aadTenantId());
        Assertions.assertEquals("us", response.aadApplicationObjectId());
        Assertions.assertEquals("tjtgravaqogfkb", response.aadServicePrincipalObjectId());
        Assertions.assertEquals(SoftwareAssuranceIntent.DISABLE,
            response.softwareAssuranceProperties().softwareAssuranceIntent());
        Assertions.assertEquals(WindowsServerSubscription.ENABLED,
            response.desiredProperties().windowsServerSubscription());
        Assertions.assertEquals(DiagnosticLevel.BASIC, response.desiredProperties().diagnosticLevel());
    }
}
