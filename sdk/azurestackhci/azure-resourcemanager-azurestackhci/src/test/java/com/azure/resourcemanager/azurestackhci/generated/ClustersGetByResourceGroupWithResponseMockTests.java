// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurestackhci.AzurestackhciManager;
import com.azure.resourcemanager.azurestackhci.models.Cluster;
import com.azure.resourcemanager.azurestackhci.models.DiagnosticLevel;
import com.azure.resourcemanager.azurestackhci.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.azurestackhci.models.SoftwareAssuranceIntent;
import com.azure.resourcemanager.azurestackhci.models.WindowsServerSubscription;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClustersGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"identity\":{\"principalId\":\"0b01f37d-a47b-446c-bbde-faa2ee6451b3\",\"tenantId\":\"efa5bcd3-8b23-4943-b854-24e396d03f09\",\"type\":\"None\",\"userAssignedIdentities\":{\"vcxjsgbipcukdvek\":{\"principalId\":\"0d157afa-b881-4eeb-aac3-d3cd303315f1\",\"clientId\":\"d85577ab-1392-4dc3-b70f-c1d15d0d7cf2\"}}},\"properties\":{\"provisioningState\":\"Canceled\",\"status\":\"Failed\",\"connectivityStatus\":\"Disconnected\",\"cloudId\":\"v\",\"cloudManagementEndpoint\":\"crdpibfdyjduss\",\"aadClientId\":\"szekbh\",\"aadTenantId\":\"kaaggkreh\",\"aadApplicationObjectId\":\"rnuybffljfii\",\"aadServicePrincipalObjectId\":\"eoagsqta\",\"softwareAssuranceProperties\":{\"softwareAssuranceStatus\":\"Disabled\",\"softwareAssuranceIntent\":\"Enable\",\"lastUpdated\":\"2021-08-16T01:49:07Z\"},\"desiredProperties\":{\"windowsServerSubscription\":\"Disabled\",\"diagnosticLevel\":\"Enhanced\"},\"reportedProperties\":{\"clusterName\":\"d\",\"clusterId\":\"zilfmnlikps\",\"clusterVersion\":\"s\",\"nodes\":[{\"name\":\"ofqpmbhy\",\"id\":95.04562,\"windowsServerSubscription\":\"Enabled\",\"nodeType\":\"ThirdParty\",\"ehcResourceId\":\"tjxophgerhsmv\",\"manufacturer\":\"htwzmqilr\",\"model\":\"ysfn\",\"osName\":\"sqywwwmhkru\",\"osVersion\":\"edrympmlqo\",\"osDisplayVersion\":\"hzdue\",\"serialNumber\":\"hapfjiik\",\"coreCount\":85.9995,\"memoryInGiB\":24.272573,\"lastLicensingTimestamp\":\"2021-09-04T11:59:55Z\",\"oemActivation\":\"Enabled\"},{\"name\":\"hpclb\",\"id\":62.351273,\"windowsServerSubscription\":\"Disabled\",\"nodeType\":\"FirstParty\",\"ehcResourceId\":\"eivbvz\",\"manufacturer\":\"bwxgoooxzpra\",\"model\":\"s\",\"osName\":\"knpdgzigjsu\",\"osVersion\":\"whgsaodkww\",\"osDisplayVersion\":\"afoctohz\",\"serialNumber\":\"quvwsxbgn\",\"coreCount\":98.813095,\"memoryInGiB\":56.581932,\"lastLicensingTimestamp\":\"2021-01-21T13:36:56Z\",\"oemActivation\":\"Enabled\"},{\"name\":\"dhrsxqvzvsp\",\"id\":44.512756,\"windowsServerSubscription\":\"Disabled\",\"nodeType\":\"ThirdParty\",\"ehcResourceId\":\"jglzrsubklrxhjnl\",\"manufacturer\":\"etjdvqydieqqkwa\",\"model\":\"wdxvqzxoebwg\",\"osName\":\"bibanbau\",\"osVersion\":\"tzvp\",\"osDisplayVersion\":\"lozkxbzrp\",\"serialNumber\":\"plssanbtttk\",\"coreCount\":48.660606,\"memoryInGiB\":88.746376,\"lastLicensingTimestamp\":\"2021-02-19T04:44:11Z\",\"oemActivation\":\"Enabled\"},{\"name\":\"kp\",\"id\":18.519735,\"windowsServerSubscription\":\"Disabled\",\"nodeType\":\"ThirdParty\",\"ehcResourceId\":\"bhuhk\",\"manufacturer\":\"gwl\",\"model\":\"hueoijyzcqyp\",\"osName\":\"zufgs\",\"osVersion\":\"ej\",\"osDisplayVersion\":\"dwtfx\",\"serialNumber\":\"pqa\",\"coreCount\":81.62941,\"memoryInGiB\":77.34387,\"lastLicensingTimestamp\":\"2021-07-26T20:51:26Z\",\"oemActivation\":\"Disabled\"}],\"lastUpdated\":\"2021-07-08T19:51:53Z\",\"imdsAttestation\":\"Disabled\",\"diagnosticLevel\":\"Off\",\"supportedCapabilities\":[\"uullojkp\"],\"clusterType\":\"FirstParty\",\"manufacturer\":\"wwdjuxdbdl\",\"oemActivation\":\"Enabled\"},\"isolatedVmAttestationConfiguration\":{\"attestationResourceId\":\"rcvuqbsgzlrqhb\",\"relyingPartyServiceEndpoint\":\"qogdx\",\"attestationServiceEndpoint\":\"sfpyxx\"},\"trialDaysRemaining\":29.852612,\"billingModel\":\"lecomi\",\"registrationTimestamp\":\"2021-07-31T14:37:51Z\",\"lastSyncTimestamp\":\"2021-08-11T00:43:37Z\",\"lastBillingTimestamp\":\"2021-09-28T09:45:23Z\",\"serviceEndpoint\":\"xdhilz\",\"resourceProviderObjectId\":\"zzqjmu\"},\"location\":\"ay\",\"tags\":{\"kcqwwxwjyofgwh\":\"ibqlotokhtvwtaz\",\"tsnld\":\"kbtlwljssm\",\"eogfgfiijrykwl\":\"pwolgisubxb\"},\"id\":\"fksxqce\",\"name\":\"zfpxgnmqvzvluy\",\"type\":\"qa\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzurestackhciManager manager = AzurestackhciManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Cluster response = manager.clusters()
            .getByResourceGroupWithResponse("yihpqadagrh", "dicxdw", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ay", response.location());
        Assertions.assertEquals("ibqlotokhtvwtaz", response.tags().get("kcqwwxwjyofgwh"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.typeIdentityType());
        Assertions.assertEquals("crdpibfdyjduss", response.cloudManagementEndpoint());
        Assertions.assertEquals("szekbh", response.aadClientId());
        Assertions.assertEquals("kaaggkreh", response.aadTenantId());
        Assertions.assertEquals("rnuybffljfii", response.aadApplicationObjectId());
        Assertions.assertEquals("eoagsqta", response.aadServicePrincipalObjectId());
        Assertions.assertEquals(SoftwareAssuranceIntent.ENABLE,
            response.softwareAssuranceProperties().softwareAssuranceIntent());
        Assertions.assertEquals(WindowsServerSubscription.DISABLED,
            response.desiredProperties().windowsServerSubscription());
        Assertions.assertEquals(DiagnosticLevel.ENHANCED, response.desiredProperties().diagnosticLevel());
    }
}
