// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.fluent.models.HciUpdateInner;
import com.azure.resourcemanager.azurestackhci.models.AvailabilityType;
import com.azure.resourcemanager.azurestackhci.models.HealthState;
import com.azure.resourcemanager.azurestackhci.models.PackageVersionInfo;
import com.azure.resourcemanager.azurestackhci.models.PrecheckResult;
import com.azure.resourcemanager.azurestackhci.models.PrecheckResultTags;
import com.azure.resourcemanager.azurestackhci.models.RebootRequirement;
import com.azure.resourcemanager.azurestackhci.models.Severity;
import com.azure.resourcemanager.azurestackhci.models.State;
import com.azure.resourcemanager.azurestackhci.models.Status;
import com.azure.resourcemanager.azurestackhci.models.UpdateList;
import com.azure.resourcemanager.azurestackhci.models.UpdatePrerequisite;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UpdateListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UpdateList model = BinaryData.fromString(
            "{\"value\":[{\"location\":\"razftxejwabmdujt\",\"properties\":{\"provisioningState\":\"Disconnected\",\"installedDate\":\"2021-11-13T23:19:59Z\",\"description\":\"c\",\"minSbeVersionRequired\":\"urbuhhlkyqltq\",\"state\":\"AdditionalContentRequired\",\"prerequisites\":[{\"updateType\":\"wkffdjkt\",\"version\":\"sidfv\",\"packageName\":\"g\"},{\"updateType\":\"n\",\"version\":\"ijtk\",\"packageName\":\"sqo\"}],\"componentVersions\":[{\"packageType\":\"kayi\",\"version\":\"sharujtj\",\"lastUpdated\":\"2021-07-10T17:52:36Z\"},{\"packageType\":\"zyjq\",\"version\":\"vwkpqh\",\"lastUpdated\":\"2021-07-09T12:00:41Z\"},{\"packageType\":\"uygb\",\"version\":\"qqekewvnqvcdlgu\",\"lastUpdated\":\"2021-11-05T12:42:34Z\"},{\"packageType\":\"f\",\"version\":\"wnlaxpu\",\"lastUpdated\":\"2021-08-11T07:22:41Z\"}],\"rebootRequired\":\"Unknown\",\"healthState\":\"Failure\",\"healthCheckResult\":[{\"name\":\"tacgxmfc\",\"displayName\":\"er\",\"tags\":{},\"healthCheckTags\":\"datavs\",\"title\":\"hlwntsjgq\",\"status\":\"Failed\",\"severity\":\"Critical\",\"description\":\"uuuybnchrsziz\",\"remediation\":\"uelyetndn\",\"targetResourceID\":\"qyggagfl\",\"targetResourceName\":\"gm\",\"targetResourceType\":\"wahzjmucftbyr\",\"timestamp\":\"2021-04-22T08:33:43Z\",\"additionalData\":\"hkpigqfusuckzmkw\",\"healthCheckSource\":\"snoxaxmqeqa\"},{\"name\":\"hjnhgwydyynfsvk\",\"displayName\":\"bvqt\",\"tags\":{},\"healthCheckTags\":\"datarfdl\",\"title\":\"kh\",\"status\":\"NotYetRegistered\",\"severity\":\"Hidden\",\"description\":\"zjcpeogk\",\"remediation\":\"mgbro\",\"targetResourceID\":\"ddbhf\",\"targetResourceName\":\"fpazjzoywjxhpd\",\"targetResourceType\":\"ontacnpq\",\"timestamp\":\"2020-12-27T20:17:23Z\",\"additionalData\":\"tuevrh\",\"healthCheckSource\":\"jyoogwxh\"}],\"healthCheckDate\":\"2021-05-24T18:00:52Z\",\"packagePath\":\"ugwbsreurfqkf\",\"packageSizeInMb\":98.716385,\"displayName\":\"nlvhhtklnvnafvv\",\"version\":\"f\",\"publisher\":\"ev\",\"releaseLink\":\"oslc\",\"availabilityType\":\"Online\",\"packageType\":\"okkhminq\",\"additionalProperties\":\"mczngn\",\"updateStateProperties\":{\"progressPercentage\":4.8717856,\"notifyMessage\":\"wuninv\"}},\"id\":\"bchaqd\",\"name\":\"vqecr\",\"type\":\"ct\"},{\"location\":\"xdtddmflhuytxzv\",\"properties\":{\"provisioningState\":\"DisableInProgress\",\"installedDate\":\"2021-03-01T11:01:37Z\",\"description\":\"annovvoxczytpr\",\"minSbeVersionRequired\":\"wvroevytlyokrrr\",\"state\":\"PreparationFailed\",\"prerequisites\":[{\"updateType\":\"sasbcrymodizrx\",\"version\":\"obdxnazpmkmlm\",\"packageName\":\"vfxzopjh\"},{\"updateType\":\"xliohrdddt\",\"version\":\"xqbawpc\",\"packageName\":\"nzqcy\"},{\"updateType\":\"apqofyuicdhz\",\"version\":\"ybww\",\"packageName\":\"d\"},{\"updateType\":\"bid\",\"version\":\"m\",\"packageName\":\"f\"}],\"componentVersions\":[{\"packageType\":\"u\",\"version\":\"pckc\",\"lastUpdated\":\"2021-12-09T01:38:35Z\"},{\"packageType\":\"weyoxoy\",\"version\":\"k\",\"lastUpdated\":\"2021-09-08T11:55:35Z\"},{\"packageType\":\"mmoiroqboshbra\",\"version\":\"pyyrmfs\",\"lastUpdated\":\"2021-03-28T08:56:43Z\"}],\"rebootRequired\":\"Unknown\",\"healthState\":\"InProgress\",\"healthCheckResult\":[{\"name\":\"pdbwnupgahxkum\",\"displayName\":\"jcaacfdmmcpugm\",\"tags\":{},\"healthCheckTags\":\"dataepvufhbzehew\",\"title\":\"qhnlbqnbld\",\"status\":\"NotSpecified\",\"severity\":\"Critical\",\"description\":\"schori\",\"remediation\":\"rsrrmoucsofldp\",\"targetResourceID\":\"iyfc\",\"targetResourceName\":\"beolh\",\"targetResourceType\":\"lvbmxuqibsxtkcu\",\"timestamp\":\"2021-03-04T11:35:39Z\",\"additionalData\":\"farfs\",\"healthCheckSource\":\"wlkjxn\"},{\"name\":\"vwgf\",\"displayName\":\"mhqykizmdksa\",\"tags\":{},\"healthCheckTags\":\"datacluqvo\",\"title\":\"ycjimryvwgcwwpbm\",\"status\":\"ValidationFailed\",\"severity\":\"Informational\",\"description\":\"dsxwefoh\",\"remediation\":\"bvopwndyqle\",\"targetResourceID\":\"lklmtkhlo\",\"targetResourceName\":\"x\",\"targetResourceType\":\"vbrdfjmzsyzfho\",\"timestamp\":\"2021-03-23T11:42:29Z\",\"additionalData\":\"k\",\"healthCheckSource\":\"ychunsjlpjrtwszh\"}],\"healthCheckDate\":\"2021-11-19T08:14:33Z\",\"packagePath\":\"c\",\"packageSizeInMb\":95.381325,\"displayName\":\"rrmhwrbfdp\",\"version\":\"lubhvjg\",\"publisher\":\"ocu\",\"releaseLink\":\"lw\",\"availabilityType\":\"Notify\",\"packageType\":\"mhoocl\",\"additionalProperties\":\"n\",\"updateStateProperties\":{\"progressPercentage\":16.419632,\"notifyMessage\":\"czj\"}},\"id\":\"mykyujxsglhs\",\"name\":\"rryejylmbkzudnig\",\"type\":\"fihotj\"}],\"nextLink\":\"lpxuzzjgnrefq\"}")
            .toObject(UpdateList.class);
        Assertions.assertEquals("razftxejwabmdujt", model.value().get(0).location());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-13T23:19:59Z"), model.value().get(0).installedDate());
        Assertions.assertEquals("c", model.value().get(0).description());
        Assertions.assertEquals("urbuhhlkyqltq", model.value().get(0).minSbeVersionRequired());
        Assertions.assertEquals(State.ADDITIONAL_CONTENT_REQUIRED, model.value().get(0).state());
        Assertions.assertEquals("wkffdjkt", model.value().get(0).prerequisites().get(0).updateType());
        Assertions.assertEquals("sidfv", model.value().get(0).prerequisites().get(0).version());
        Assertions.assertEquals("g", model.value().get(0).prerequisites().get(0).packageName());
        Assertions.assertEquals("kayi", model.value().get(0).componentVersions().get(0).packageType());
        Assertions.assertEquals("sharujtj", model.value().get(0).componentVersions().get(0).version());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-10T17:52:36Z"),
            model.value().get(0).componentVersions().get(0).lastUpdated());
        Assertions.assertEquals(RebootRequirement.UNKNOWN, model.value().get(0).rebootRequired());
        Assertions.assertEquals(HealthState.FAILURE, model.value().get(0).healthState());
        Assertions.assertEquals("tacgxmfc", model.value().get(0).healthCheckResult().get(0).name());
        Assertions.assertEquals("er", model.value().get(0).healthCheckResult().get(0).displayName());
        Assertions.assertEquals("hlwntsjgq", model.value().get(0).healthCheckResult().get(0).title());
        Assertions.assertEquals(Status.FAILED, model.value().get(0).healthCheckResult().get(0).status());
        Assertions.assertEquals(Severity.CRITICAL, model.value().get(0).healthCheckResult().get(0).severity());
        Assertions.assertEquals("uuuybnchrsziz", model.value().get(0).healthCheckResult().get(0).description());
        Assertions.assertEquals("uelyetndn", model.value().get(0).healthCheckResult().get(0).remediation());
        Assertions.assertEquals("qyggagfl", model.value().get(0).healthCheckResult().get(0).targetResourceId());
        Assertions.assertEquals("gm", model.value().get(0).healthCheckResult().get(0).targetResourceName());
        Assertions.assertEquals("wahzjmucftbyr", model.value().get(0).healthCheckResult().get(0).targetResourceType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-22T08:33:43Z"),
            model.value().get(0).healthCheckResult().get(0).timestamp());
        Assertions.assertEquals("hkpigqfusuckzmkw", model.value().get(0).healthCheckResult().get(0).additionalData());
        Assertions.assertEquals("snoxaxmqeqa", model.value().get(0).healthCheckResult().get(0).healthCheckSource());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-24T18:00:52Z"), model.value().get(0).healthCheckDate());
        Assertions.assertEquals("ugwbsreurfqkf", model.value().get(0).packagePath());
        Assertions.assertEquals(98.716385F, model.value().get(0).packageSizeInMb());
        Assertions.assertEquals("nlvhhtklnvnafvv", model.value().get(0).displayName());
        Assertions.assertEquals("f", model.value().get(0).version());
        Assertions.assertEquals("ev", model.value().get(0).publisher());
        Assertions.assertEquals("oslc", model.value().get(0).releaseLink());
        Assertions.assertEquals(AvailabilityType.ONLINE, model.value().get(0).availabilityType());
        Assertions.assertEquals("okkhminq", model.value().get(0).packageType());
        Assertions.assertEquals("mczngn", model.value().get(0).additionalProperties());
        Assertions.assertEquals(4.8717856F, model.value().get(0).progressPercentage());
        Assertions.assertEquals("wuninv", model.value().get(0).notifyMessage());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UpdateList model = new UpdateList().withValue(Arrays.asList(
            new HciUpdateInner().withLocation("razftxejwabmdujt")
                .withInstalledDate(OffsetDateTime.parse("2021-11-13T23:19:59Z"))
                .withDescription("c")
                .withMinSbeVersionRequired("urbuhhlkyqltq")
                .withState(State.ADDITIONAL_CONTENT_REQUIRED)
                .withPrerequisites(Arrays.asList(
                    new UpdatePrerequisite().withUpdateType("wkffdjkt").withVersion("sidfv").withPackageName("g"),
                    new UpdatePrerequisite().withUpdateType("n").withVersion("ijtk").withPackageName("sqo")))
                .withComponentVersions(Arrays.asList(
                    new PackageVersionInfo().withPackageType("kayi")
                        .withVersion("sharujtj")
                        .withLastUpdated(OffsetDateTime.parse("2021-07-10T17:52:36Z")),
                    new PackageVersionInfo().withPackageType("zyjq")
                        .withVersion("vwkpqh")
                        .withLastUpdated(OffsetDateTime.parse("2021-07-09T12:00:41Z")),
                    new PackageVersionInfo().withPackageType("uygb")
                        .withVersion("qqekewvnqvcdlgu")
                        .withLastUpdated(OffsetDateTime.parse("2021-11-05T12:42:34Z")),
                    new PackageVersionInfo().withPackageType("f")
                        .withVersion("wnlaxpu")
                        .withLastUpdated(OffsetDateTime.parse("2021-08-11T07:22:41Z"))))
                .withRebootRequired(RebootRequirement.UNKNOWN)
                .withHealthState(HealthState.FAILURE)
                .withHealthCheckResult(Arrays.asList(
                    new PrecheckResult().withName("tacgxmfc")
                        .withDisplayName("er")
                        .withTags(new PrecheckResultTags())
                        .withHealthCheckTags("datavs")
                        .withTitle("hlwntsjgq")
                        .withStatus(Status.FAILED)
                        .withSeverity(Severity.CRITICAL)
                        .withDescription("uuuybnchrsziz")
                        .withRemediation("uelyetndn")
                        .withTargetResourceId("qyggagfl")
                        .withTargetResourceName("gm")
                        .withTargetResourceType("wahzjmucftbyr")
                        .withTimestamp(OffsetDateTime.parse("2021-04-22T08:33:43Z"))
                        .withAdditionalData("hkpigqfusuckzmkw")
                        .withHealthCheckSource("snoxaxmqeqa"),
                    new PrecheckResult().withName("hjnhgwydyynfsvk")
                        .withDisplayName("bvqt")
                        .withTags(new PrecheckResultTags())
                        .withHealthCheckTags("datarfdl")
                        .withTitle("kh")
                        .withStatus(Status.NOT_YET_REGISTERED)
                        .withSeverity(Severity.HIDDEN)
                        .withDescription("zjcpeogk")
                        .withRemediation("mgbro")
                        .withTargetResourceId("ddbhf")
                        .withTargetResourceName("fpazjzoywjxhpd")
                        .withTargetResourceType("ontacnpq")
                        .withTimestamp(OffsetDateTime.parse("2020-12-27T20:17:23Z"))
                        .withAdditionalData("tuevrh")
                        .withHealthCheckSource("jyoogwxh")))
                .withHealthCheckDate(OffsetDateTime.parse("2021-05-24T18:00:52Z"))
                .withPackagePath("ugwbsreurfqkf")
                .withPackageSizeInMb(98.716385F)
                .withDisplayName("nlvhhtklnvnafvv")
                .withVersion("f")
                .withPublisher("ev")
                .withReleaseLink("oslc")
                .withAvailabilityType(AvailabilityType.ONLINE)
                .withPackageType("okkhminq")
                .withAdditionalProperties("mczngn")
                .withProgressPercentage(4.8717856F)
                .withNotifyMessage("wuninv"),
            new HciUpdateInner().withLocation("xdtddmflhuytxzv")
                .withInstalledDate(OffsetDateTime.parse("2021-03-01T11:01:37Z"))
                .withDescription("annovvoxczytpr")
                .withMinSbeVersionRequired("wvroevytlyokrrr")
                .withState(State.PREPARATION_FAILED)
                .withPrerequisites(Arrays.asList(
                    new UpdatePrerequisite().withUpdateType("sasbcrymodizrx")
                        .withVersion("obdxnazpmkmlm")
                        .withPackageName("vfxzopjh"),
                    new UpdatePrerequisite().withUpdateType("xliohrdddt")
                        .withVersion("xqbawpc")
                        .withPackageName("nzqcy"),
                    new UpdatePrerequisite().withUpdateType("apqofyuicdhz").withVersion("ybww").withPackageName("d"),
                    new UpdatePrerequisite().withUpdateType("bid").withVersion("m").withPackageName("f")))
                .withComponentVersions(Arrays.asList(
                    new PackageVersionInfo().withPackageType("u")
                        .withVersion("pckc")
                        .withLastUpdated(OffsetDateTime.parse("2021-12-09T01:38:35Z")),
                    new PackageVersionInfo().withPackageType("weyoxoy")
                        .withVersion("k")
                        .withLastUpdated(OffsetDateTime.parse("2021-09-08T11:55:35Z")),
                    new PackageVersionInfo().withPackageType("mmoiroqboshbra")
                        .withVersion("pyyrmfs")
                        .withLastUpdated(OffsetDateTime.parse("2021-03-28T08:56:43Z"))))
                .withRebootRequired(RebootRequirement.UNKNOWN)
                .withHealthState(HealthState.IN_PROGRESS)
                .withHealthCheckResult(Arrays.asList(
                    new PrecheckResult().withName("pdbwnupgahxkum")
                        .withDisplayName("jcaacfdmmcpugm")
                        .withTags(new PrecheckResultTags())
                        .withHealthCheckTags("dataepvufhbzehew")
                        .withTitle("qhnlbqnbld")
                        .withStatus(Status.NOT_SPECIFIED)
                        .withSeverity(Severity.CRITICAL)
                        .withDescription("schori")
                        .withRemediation("rsrrmoucsofldp")
                        .withTargetResourceId("iyfc")
                        .withTargetResourceName("beolh")
                        .withTargetResourceType("lvbmxuqibsxtkcu")
                        .withTimestamp(OffsetDateTime.parse("2021-03-04T11:35:39Z"))
                        .withAdditionalData("farfs")
                        .withHealthCheckSource("wlkjxn"),
                    new PrecheckResult().withName("vwgf")
                        .withDisplayName("mhqykizmdksa")
                        .withTags(new PrecheckResultTags())
                        .withHealthCheckTags("datacluqvo")
                        .withTitle("ycjimryvwgcwwpbm")
                        .withStatus(Status.VALIDATION_FAILED)
                        .withSeverity(Severity.INFORMATIONAL)
                        .withDescription("dsxwefoh")
                        .withRemediation("bvopwndyqle")
                        .withTargetResourceId("lklmtkhlo")
                        .withTargetResourceName("x")
                        .withTargetResourceType("vbrdfjmzsyzfho")
                        .withTimestamp(OffsetDateTime.parse("2021-03-23T11:42:29Z"))
                        .withAdditionalData("k")
                        .withHealthCheckSource("ychunsjlpjrtwszh")))
                .withHealthCheckDate(OffsetDateTime.parse("2021-11-19T08:14:33Z"))
                .withPackagePath("c")
                .withPackageSizeInMb(95.381325F)
                .withDisplayName("rrmhwrbfdp")
                .withVersion("lubhvjg")
                .withPublisher("ocu")
                .withReleaseLink("lw")
                .withAvailabilityType(AvailabilityType.NOTIFY)
                .withPackageType("mhoocl")
                .withAdditionalProperties("n")
                .withProgressPercentage(16.419632F)
                .withNotifyMessage("czj")));
        model = BinaryData.fromObject(model).toObject(UpdateList.class);
        Assertions.assertEquals("razftxejwabmdujt", model.value().get(0).location());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-13T23:19:59Z"), model.value().get(0).installedDate());
        Assertions.assertEquals("c", model.value().get(0).description());
        Assertions.assertEquals("urbuhhlkyqltq", model.value().get(0).minSbeVersionRequired());
        Assertions.assertEquals(State.ADDITIONAL_CONTENT_REQUIRED, model.value().get(0).state());
        Assertions.assertEquals("wkffdjkt", model.value().get(0).prerequisites().get(0).updateType());
        Assertions.assertEquals("sidfv", model.value().get(0).prerequisites().get(0).version());
        Assertions.assertEquals("g", model.value().get(0).prerequisites().get(0).packageName());
        Assertions.assertEquals("kayi", model.value().get(0).componentVersions().get(0).packageType());
        Assertions.assertEquals("sharujtj", model.value().get(0).componentVersions().get(0).version());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-10T17:52:36Z"),
            model.value().get(0).componentVersions().get(0).lastUpdated());
        Assertions.assertEquals(RebootRequirement.UNKNOWN, model.value().get(0).rebootRequired());
        Assertions.assertEquals(HealthState.FAILURE, model.value().get(0).healthState());
        Assertions.assertEquals("tacgxmfc", model.value().get(0).healthCheckResult().get(0).name());
        Assertions.assertEquals("er", model.value().get(0).healthCheckResult().get(0).displayName());
        Assertions.assertEquals("hlwntsjgq", model.value().get(0).healthCheckResult().get(0).title());
        Assertions.assertEquals(Status.FAILED, model.value().get(0).healthCheckResult().get(0).status());
        Assertions.assertEquals(Severity.CRITICAL, model.value().get(0).healthCheckResult().get(0).severity());
        Assertions.assertEquals("uuuybnchrsziz", model.value().get(0).healthCheckResult().get(0).description());
        Assertions.assertEquals("uelyetndn", model.value().get(0).healthCheckResult().get(0).remediation());
        Assertions.assertEquals("qyggagfl", model.value().get(0).healthCheckResult().get(0).targetResourceId());
        Assertions.assertEquals("gm", model.value().get(0).healthCheckResult().get(0).targetResourceName());
        Assertions.assertEquals("wahzjmucftbyr", model.value().get(0).healthCheckResult().get(0).targetResourceType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-22T08:33:43Z"),
            model.value().get(0).healthCheckResult().get(0).timestamp());
        Assertions.assertEquals("hkpigqfusuckzmkw", model.value().get(0).healthCheckResult().get(0).additionalData());
        Assertions.assertEquals("snoxaxmqeqa", model.value().get(0).healthCheckResult().get(0).healthCheckSource());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-24T18:00:52Z"), model.value().get(0).healthCheckDate());
        Assertions.assertEquals("ugwbsreurfqkf", model.value().get(0).packagePath());
        Assertions.assertEquals(98.716385F, model.value().get(0).packageSizeInMb());
        Assertions.assertEquals("nlvhhtklnvnafvv", model.value().get(0).displayName());
        Assertions.assertEquals("f", model.value().get(0).version());
        Assertions.assertEquals("ev", model.value().get(0).publisher());
        Assertions.assertEquals("oslc", model.value().get(0).releaseLink());
        Assertions.assertEquals(AvailabilityType.ONLINE, model.value().get(0).availabilityType());
        Assertions.assertEquals("okkhminq", model.value().get(0).packageType());
        Assertions.assertEquals("mczngn", model.value().get(0).additionalProperties());
        Assertions.assertEquals(4.8717856F, model.value().get(0).progressPercentage());
        Assertions.assertEquals("wuninv", model.value().get(0).notifyMessage());
    }
}
