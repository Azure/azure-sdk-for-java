// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurestackhci.AzurestackhciManager;
import com.azure.resourcemanager.azurestackhci.models.ArcSetting;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ArcSettingsConsentAndInstallDefaultExtensionsWithResponseMockTests {
    @Test
    public void testConsentAndInstallDefaultExtensionsWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Disconnected\",\"arcInstanceResourceGroup\":\"rvtxvcmufunlc\",\"arcApplicationClientId\":\"xvi\",\"arcApplicationTenantId\":\"eyngjg\",\"arcServicePrincipalObjectId\":\"quv\",\"arcApplicationObjectId\":\"gglpmcrdcuelj\",\"aggregateState\":\"Failed\",\"perNodeDetails\":[{\"name\":\"fqryarvsx\",\"arcInstance\":\"bglcjkayspthzodu\",\"arcNodeServicePrincipalObjectId\":\"lmjtg\",\"state\":\"DisableInProgress\"},{\"name\":\"skkfmk\",\"arcInstance\":\"djxyxgbkkqvjcteo\",\"arcNodeServicePrincipalObjectId\":\"l\",\"state\":\"NotSpecified\"},{\"name\":\"kk\",\"arcInstance\":\"xv\",\"arcNodeServicePrincipalObjectId\":\"zdpv\",\"state\":\"Disconnected\"},{\"name\":\"hpcnabxzfsn\",\"arcInstance\":\"ytexvzilmhivzk\",\"arcNodeServicePrincipalObjectId\":\"wncknr\",\"state\":\"DisableInProgress\"}],\"connectivityProperties\":\"datalskzptjxul\",\"defaultExtensions\":[{\"category\":\"yrth\",\"consentTime\":\"2021-10-31T12:40:44Z\"},{\"category\":\"h\",\"consentTime\":\"2021-10-09T06:54:50Z\"}]},\"id\":\"jei\",\"name\":\"ue\",\"type\":\"oka\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzurestackhciManager manager = AzurestackhciManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ArcSetting response = manager.arcSettings()
            .consentAndInstallDefaultExtensionsWithResponse("awvifdxke", "if", "ocjxw",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("rvtxvcmufunlc", response.arcInstanceResourceGroup());
        Assertions.assertEquals("xvi", response.arcApplicationClientId());
        Assertions.assertEquals("eyngjg", response.arcApplicationTenantId());
        Assertions.assertEquals("quv", response.arcServicePrincipalObjectId());
        Assertions.assertEquals("gglpmcrdcuelj", response.arcApplicationObjectId());
    }
}
