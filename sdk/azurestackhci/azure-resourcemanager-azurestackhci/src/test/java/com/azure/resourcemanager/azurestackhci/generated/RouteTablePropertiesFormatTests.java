// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.fluent.models.RouteTablePropertiesFormat;
import com.azure.resourcemanager.azurestackhci.models.Route;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RouteTablePropertiesFormatTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RouteTablePropertiesFormat model = BinaryData.fromString(
            "{\"routes\":[{\"properties\":{\"addressPrefix\":\"n\",\"nextHopIpAddress\":\"tqabpxuckpgg\"},\"name\":\"wey\"},{\"properties\":{\"addressPrefix\":\"hlisngw\",\"nextHopIpAddress\":\"qqmpizruwnpqx\"},\"name\":\"iwfcngjsa\"}]}")
            .toObject(RouteTablePropertiesFormat.class);
        Assertions.assertEquals("wey", model.routes().get(0).name());
        Assertions.assertEquals("n", model.routes().get(0).addressPrefix());
        Assertions.assertEquals("tqabpxuckpgg", model.routes().get(0).nextHopIpAddress());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RouteTablePropertiesFormat model = new RouteTablePropertiesFormat().withRoutes(
            Arrays.asList(new Route().withName("wey").withAddressPrefix("n").withNextHopIpAddress("tqabpxuckpgg"),
                new Route().withName("iwfcngjsa").withAddressPrefix("hlisngw").withNextHopIpAddress("qqmpizruwnpqx")));
        model = BinaryData.fromObject(model).toObject(RouteTablePropertiesFormat.class);
        Assertions.assertEquals("wey", model.routes().get(0).name());
        Assertions.assertEquals("n", model.routes().get(0).addressPrefix());
        Assertions.assertEquals("tqabpxuckpgg", model.routes().get(0).nextHopIpAddress());
    }
}
