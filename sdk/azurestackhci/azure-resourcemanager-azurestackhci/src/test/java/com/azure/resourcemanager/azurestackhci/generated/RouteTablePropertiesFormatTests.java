// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.fluent.models.RouteTablePropertiesFormat;
import com.azure.resourcemanager.azurestackhci.models.Route;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RouteTablePropertiesFormatTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RouteTablePropertiesFormat model =
            BinaryData
                .fromString(
                    "{\"routes\":[{\"properties\":{\"addressPrefix\":\"xlzevgbmqjqabcy\",\"nextHopIpAddress\":\"ivkwlzuvccfwnfnb\"},\"name\":\"fionl\"}]}")
                .toObject(RouteTablePropertiesFormat.class);
        Assertions.assertEquals("fionl", model.routes().get(0).name());
        Assertions.assertEquals("xlzevgbmqjqabcy", model.routes().get(0).addressPrefix());
        Assertions.assertEquals("ivkwlzuvccfwnfnb", model.routes().get(0).nextHopIpAddress());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RouteTablePropertiesFormat model =
            new RouteTablePropertiesFormat()
                .withRoutes(
                    Arrays
                        .asList(
                            new Route()
                                .withName("fionl")
                                .withAddressPrefix("xlzevgbmqjqabcy")
                                .withNextHopIpAddress("ivkwlzuvccfwnfnb")));
        model = BinaryData.fromObject(model).toObject(RouteTablePropertiesFormat.class);
        Assertions.assertEquals("fionl", model.routes().get(0).name());
        Assertions.assertEquals("xlzevgbmqjqabcy", model.routes().get(0).addressPrefix());
        Assertions.assertEquals("ivkwlzuvccfwnfnb", model.routes().get(0).nextHopIpAddress());
    }
}
