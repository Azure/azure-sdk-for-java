// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.fluent.models.MachineExtensionUpdateProperties;
import org.junit.jupiter.api.Assertions;

public final class MachineExtensionUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MachineExtensionUpdateProperties model =
            BinaryData
                .fromString(
                    "{\"forceUpdateTag\":\"mjjyuojq\",\"publisher\":\"baxk\",\"type\":\"ytunlbfjkwr\",\"typeHandlerVersion\":\"nkqbhsyrq\",\"autoUpgradeMinorVersion\":false,\"settings\":\"datahdenxaulk\",\"protectedSettings\":\"datakdk\"}")
                .toObject(MachineExtensionUpdateProperties.class);
        Assertions.assertEquals("mjjyuojq", model.forceUpdateTag());
        Assertions.assertEquals("baxk", model.publisher());
        Assertions.assertEquals("ytunlbfjkwr", model.type());
        Assertions.assertEquals("nkqbhsyrq", model.typeHandlerVersion());
        Assertions.assertEquals(false, model.autoUpgradeMinorVersion());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MachineExtensionUpdateProperties model =
            new MachineExtensionUpdateProperties()
                .withForceUpdateTag("mjjyuojq")
                .withPublisher("baxk")
                .withType("ytunlbfjkwr")
                .withTypeHandlerVersion("nkqbhsyrq")
                .withAutoUpgradeMinorVersion(false)
                .withSettings("datahdenxaulk")
                .withProtectedSettings("datakdk");
        model = BinaryData.fromObject(model).toObject(MachineExtensionUpdateProperties.class);
        Assertions.assertEquals("mjjyuojq", model.forceUpdateTag());
        Assertions.assertEquals("baxk", model.publisher());
        Assertions.assertEquals("ytunlbfjkwr", model.type());
        Assertions.assertEquals("nkqbhsyrq", model.typeHandlerVersion());
        Assertions.assertEquals(false, model.autoUpgradeMinorVersion());
    }
}
