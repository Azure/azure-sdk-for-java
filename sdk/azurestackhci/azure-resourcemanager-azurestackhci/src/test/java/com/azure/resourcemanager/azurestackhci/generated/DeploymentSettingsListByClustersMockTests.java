// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurestackhci.AzureStackHciManager;
import com.azure.resourcemanager.azurestackhci.models.DeploymentMode;
import com.azure.resourcemanager.azurestackhci.models.DeploymentSetting;
import com.azure.resourcemanager.azurestackhci.models.OperationType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DeploymentSettingsListByClustersMockTests {
    @Test
    public void testListByClusters() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Canceled\",\"arcNodeResourceIds\":[\"kipfsdyepf\",\"ocmbezacf\",\"ztgaz\"],\"deploymentMode\":\"Validate\",\"operationType\":\"ClusterUpgrade\",\"deploymentConfiguration\":{\"version\":\"gaaokctgkp\",\"scaleUnits\":[{\"deploymentData\":{},\"sbePartnerInfo\":{}},{\"deploymentData\":{},\"sbePartnerInfo\":{}},{\"deploymentData\":{},\"sbePartnerInfo\":{}},{\"deploymentData\":{},\"sbePartnerInfo\":{}}]},\"reportedProperties\":{\"validationStatus\":{\"status\":\"mffngdyfcixr\",\"steps\":[{},{},{},{}]},\"deploymentStatus\":{\"status\":\"hoe\",\"steps\":[{},{},{},{}]}}},\"id\":\"utgwrmkahpqha\",\"name\":\"yntacihnco\",\"type\":\"mip\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureStackHciManager manager = AzureStackHciManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<DeploymentSetting> response
            = manager.deploymentSettings().listByClusters("jovmozsaye", "razwzlpzbt", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("kipfsdyepf", response.iterator().next().arcNodeResourceIds().get(0));
        Assertions.assertEquals(DeploymentMode.VALIDATE, response.iterator().next().deploymentMode());
        Assertions.assertEquals(OperationType.CLUSTER_UPGRADE, response.iterator().next().operationType());
        Assertions.assertEquals("gaaokctgkp", response.iterator().next().deploymentConfiguration().version());
    }
}
