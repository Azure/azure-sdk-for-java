// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurestackhci.AzurestackhciManager;
import com.azure.resourcemanager.azurestackhci.models.Cluster;
import com.azure.resourcemanager.azurestackhci.models.DiagnosticLevel;
import com.azure.resourcemanager.azurestackhci.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.azurestackhci.models.SoftwareAssuranceIntent;
import com.azure.resourcemanager.azurestackhci.models.WindowsServerSubscription;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClustersListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"identity\":{\"principalId\":\"d540b813-2276-4953-b25f-dca40d509faf\",\"tenantId\":\"808ebafd-627f-486d-b0a7-fb7ac776bc0f\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"gvqrnhyhlwcj\":{\"principalId\":\"b8377add-c210-4a4c-a77a-944f67057c6a\",\"clientId\":\"188997ab-85a1-4271-b353-e2b3becd7032\"},\"gjhffbxr\":{\"principalId\":\"59687461-cf52-486b-9840-9291e631990e\",\"clientId\":\"34f01e1c-ea0b-46c2-9129-a4e6e412aedd\"}}},\"properties\":{\"provisioningState\":\"PartiallySucceeded\",\"status\":\"DeploymentFailed\",\"connectivityStatus\":\"NotYetRegistered\",\"cloudId\":\"lsdxeqztvxwmw\",\"cloudManagementEndpoint\":\"jswenaw\",\"aadClientId\":\"me\",\"aadTenantId\":\"eq\",\"aadApplicationObjectId\":\"ulndhzyoeo\",\"aadServicePrincipalObjectId\":\"tollh\",\"softwareAssuranceProperties\":{\"softwareAssuranceStatus\":\"Enabled\",\"softwareAssuranceIntent\":\"Enable\",\"lastUpdated\":\"2021-10-16T10:39:57Z\"},\"desiredProperties\":{\"windowsServerSubscription\":\"Enabled\",\"diagnosticLevel\":\"Basic\"},\"reportedProperties\":{\"clusterName\":\"ovyoanf\",\"clusterId\":\"swqagywvtxigvjrk\",\"clusterVersion\":\"gaeukyawohpm\",\"nodes\":[{\"name\":\"u\",\"id\":77.21806,\"windowsServerSubscription\":\"Enabled\",\"nodeType\":\"FirstParty\",\"ehcResourceId\":\"sjt\",\"manufacturer\":\"pbninjgazlsvbzfc\",\"model\":\"o\",\"osName\":\"dwjcciklhs\",\"osVersion\":\"krdre\",\"osDisplayVersion\":\"olr\",\"serialNumber\":\"ehqbeivdlhydwbdb\",\"coreCount\":94.02459,\"memoryInGiB\":39.732002,\"lastLicensingTimestamp\":\"2020-12-28T14:57:04Z\",\"oemActivation\":\"Enabled\"},{\"name\":\"lkesmm\",\"id\":16.773605,\"windowsServerSubscription\":\"Disabled\",\"nodeType\":\"FirstParty\",\"ehcResourceId\":\"h\",\"manufacturer\":\"an\",\"model\":\"wllbv\",\"osName\":\"zsffte\",\"osVersion\":\"us\",\"osDisplayVersion\":\"tjtgravaqogfkb\",\"serialNumber\":\"auzlqbtxxw\",\"coreCount\":5.2601757,\"memoryInGiB\":53.11382,\"lastLicensingTimestamp\":\"2021-04-25T17:49:51Z\",\"oemActivation\":\"Disabled\"}],\"lastUpdated\":\"2021-10-25T21:45:01Z\",\"imdsAttestation\":\"Disabled\",\"diagnosticLevel\":\"Basic\",\"supportedCapabilities\":[\"oywhczzqrhmngqbe\"],\"clusterType\":\"FirstParty\",\"manufacturer\":\"s\",\"oemActivation\":\"Enabled\"},\"isolatedVmAttestationConfiguration\":{\"attestationResourceId\":\"kdidjc\",\"relyingPartyServiceEndpoint\":\"rmpwctofld\",\"attestationServiceEndpoint\":\"acdhztxkbr\"},\"trialDaysRemaining\":32.842476,\"billingModel\":\"wjiyewhfjsrwq\",\"registrationTimestamp\":\"2021-02-08T06:58:33Z\",\"lastSyncTimestamp\":\"2021-04-08T13:20:07Z\",\"lastBillingTimestamp\":\"2021-05-26T13:11:50Z\",\"serviceEndpoint\":\"vrrmdqntycn\",\"resourceProviderObjectId\":\"thvmaxgnuyeamcmh\"},\"location\":\"fjeceho\",\"tags\":{\"yrukoi\":\"pqtwloesqrggvrb\",\"lh\":\"aciduwjleip\",\"whbgxvellvul\":\"yxpzruzythqk\"},\"id\":\"xdm\",\"name\":\"itmujdtvm\",\"type\":\"lyymffhmjpddny\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzurestackhciManager manager = AzurestackhciManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Cluster> response = manager.clusters().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("fjeceho", response.iterator().next().location());
        Assertions.assertEquals("pqtwloesqrggvrb", response.iterator().next().tags().get("yrukoi"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED,
            response.iterator().next().typeIdentityType());
        Assertions.assertEquals("jswenaw", response.iterator().next().cloudManagementEndpoint());
        Assertions.assertEquals("me", response.iterator().next().aadClientId());
        Assertions.assertEquals("eq", response.iterator().next().aadTenantId());
        Assertions.assertEquals("ulndhzyoeo", response.iterator().next().aadApplicationObjectId());
        Assertions.assertEquals("tollh", response.iterator().next().aadServicePrincipalObjectId());
        Assertions.assertEquals(SoftwareAssuranceIntent.ENABLE,
            response.iterator().next().softwareAssuranceProperties().softwareAssuranceIntent());
        Assertions.assertEquals(WindowsServerSubscription.ENABLED,
            response.iterator().next().desiredProperties().windowsServerSubscription());
        Assertions.assertEquals(DiagnosticLevel.BASIC,
            response.iterator().next().desiredProperties().diagnosticLevel());
    }
}
