// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.HttpHeaders;
import com.azure.core.http.HttpRequest;
import com.azure.core.http.HttpResponse;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.resourcemanager.azurestackhci.AzureStackHciManager;
import com.azure.resourcemanager.azurestackhci.models.Cluster;
import com.azure.resourcemanager.azurestackhci.models.DiagnosticLevel;
import com.azure.resourcemanager.azurestackhci.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.azurestackhci.models.SoftwareAssuranceIntent;
import com.azure.resourcemanager.azurestackhci.models.SoftwareAssuranceStatus;
import com.azure.resourcemanager.azurestackhci.models.WindowsServerSubscription;
import java.nio.ByteBuffer;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.mockito.ArgumentCaptor;
import org.mockito.Mockito;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

public final class ClustersListMockTests {
    @Test
    public void testList() throws Exception {
        HttpClient httpClient = Mockito.mock(HttpClient.class);
        HttpResponse httpResponse = Mockito.mock(HttpResponse.class);
        ArgumentCaptor<HttpRequest> httpRequest = ArgumentCaptor.forClass(HttpRequest.class);

        String responseStr =
            "{\"value\":[{\"identity\":{\"principalId\":\"f55c4fc8-d0b7-49ad-b6bd-2df128820cbc\",\"tenantId\":\"98e01736-d395-4220-9359-429a10ea7a38\",\"type\":\"SystemAssigned,"
                + " UserAssigned\",\"userAssignedIdentities\":{\"kmvgu\":{\"principalId\":\"5b5aeeb8-ecec-411b-901b-a8d5d9a0573b\",\"clientId\":\"90d47a42-17e7-4ef3-9a08-a45b01fed206\"},\"wartspphkixkykxd\":{\"principalId\":\"368c3397-1633-493e-b754-5be6df577086\",\"clientId\":\"00758889-cf6d-4811-b5f2-cc865483defc\"},\"pemmucfxhik\":{\"principalId\":\"d4de3a0e-b131-471d-8865-f5a9a404fcb1\",\"clientId\":\"5e33254a-d327-4836-a2d2-837f48b15356\"},\"rmymyincqlhr\":{\"principalId\":\"18cff638-51cf-419e-ab91-797ddd1d06dd\",\"clientId\":\"f7f8ad89-38b1-46b3-a5e1-a643e1c77d76\"}}},\"properties\":{\"provisioningState\":\"Deleting\",\"status\":\"Error\",\"cloudId\":\"iiovgqcgxu\",\"cloudManagementEndpoint\":\"qkctotiowlxte\",\"aadClientId\":\"ptjgwdt\",\"aadTenantId\":\"kranblwphqlkcc\",\"aadApplicationObjectId\":\"gygqwah\",\"aadServicePrincipalObjectId\":\"ulwgniiprglvawuw\",\"softwareAssuranceProperties\":{\"softwareAssuranceStatus\":\"Enabled\",\"softwareAssuranceIntent\":\"Disable\",\"lastUpdated\":\"2021-08-17T10:58:35Z\"},\"desiredProperties\":{\"windowsServerSubscription\":\"Disabled\",\"diagnosticLevel\":\"Basic\"},\"reportedProperties\":{\"clusterName\":\"ubkmifo\",\"clusterId\":\"ku\",\"clusterVersion\":\"phavpmhbrb\",\"nodes\":[{\"name\":\"ovpbbttefjoknssq\",\"id\":55.635323,\"windowsServerSubscription\":\"Enabled\",\"nodeType\":\"ThirdParty\",\"ehcResourceId\":\"frdbiqmrjgeihf\",\"manufacturer\":\"ggwfiwz\",\"model\":\"mjpb\",\"osName\":\"phmgtvljvrcmyfq\",\"osVersion\":\"gxhnpomyqwcabv\",\"osDisplayVersion\":\"ilee\",\"serialNumber\":\"swlpaugmrmfj\",\"coreCount\":71.350876,\"memoryInGiB\":87.45515},{\"name\":\"aukhfkvcisiz\",\"id\":5.741787,\"windowsServerSubscription\":\"Enabled\",\"nodeType\":\"FirstParty\",\"ehcResourceId\":\"wuived\",\"manufacturer\":\"gyeewxeiq\",\"model\":\"smgomguaml\",\"osName\":\"l\",\"osVersion\":\"msplzgaufcshhvn\",\"osDisplayVersion\":\"gnxkympqan\",\"serialNumber\":\"jk\",\"coreCount\":11.5107355,\"memoryInGiB\":18.203295},{\"name\":\"aoypny\",\"id\":56.138084,\"windowsServerSubscription\":\"Disabled\",\"nodeType\":\"FirstParty\",\"ehcResourceId\":\"hkgmnsg\",\"manufacturer\":\"xycphdrwjjkh\",\"model\":\"omacluzvxnqmhr\",\"osName\":\"pd\",\"osVersion\":\"mkoisqcssf\",\"osDisplayVersion\":\"uifmc\",\"serialNumber\":\"p\",\"coreCount\":67.57941,\"memoryInGiB\":74.04643},{\"name\":\"rdzsylollgtrczzy\",\"id\":23.691458,\"windowsServerSubscription\":\"Disabled\",\"nodeType\":\"ThirdParty\",\"ehcResourceId\":\"vuaurk\",\"manufacturer\":\"ci\",\"model\":\"defxrdc\",\"osName\":\"nbkkjanurnnq\",\"osVersion\":\"q\",\"osDisplayVersion\":\"izxqltgrd\",\"serialNumber\":\"ypxrx\",\"coreCount\":28.384804,\"memoryInGiB\":51.095272}],\"lastUpdated\":\"2021-08-20T04:37:56Z\",\"imdsAttestation\":\"Disabled\",\"diagnosticLevel\":\"Enhanced\",\"supportedCapabilities\":[\"s\"]},\"trialDaysRemaining\":77.00589,\"billingModel\":\"blml\",\"registrationTimestamp\":\"2021-11-18T09:26:02Z\",\"lastSyncTimestamp\":\"2020-12-30T00:44:59Z\",\"lastBillingTimestamp\":\"2021-04-26T06:20:27Z\",\"serviceEndpoint\":\"nxw\",\"resourceProviderObjectId\":\"gnepz\"},\"location\":\"klsbsbqqqagw\",\"tags\":{\"zisglrrczezkhh\":\"ao\",\"aw\":\"tnjadhq\",\"rrueqthwmg\":\"qoyueayfbpcmsplb\"},\"id\":\"mbscbbx\",\"name\":\"gdhxi\",\"type\":\"d\"}]}";

        Mockito.when(httpResponse.getStatusCode()).thenReturn(200);
        Mockito.when(httpResponse.getHeaders()).thenReturn(new HttpHeaders());
        Mockito
            .when(httpResponse.getBody())
            .thenReturn(Flux.just(ByteBuffer.wrap(responseStr.getBytes(StandardCharsets.UTF_8))));
        Mockito
            .when(httpResponse.getBodyAsByteArray())
            .thenReturn(Mono.just(responseStr.getBytes(StandardCharsets.UTF_8)));
        Mockito
            .when(httpClient.send(httpRequest.capture(), Mockito.any()))
            .thenReturn(
                Mono
                    .defer(
                        () -> {
                            Mockito.when(httpResponse.getRequest()).thenReturn(httpRequest.getValue());
                            return Mono.just(httpResponse);
                        }));

        AzureStackHciManager manager =
            AzureStackHciManager
                .configure()
                .withHttpClient(httpClient)
                .authenticate(
                    tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                    new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Cluster> response = manager.clusters().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("klsbsbqqqagw", response.iterator().next().location());
        Assertions.assertEquals("ao", response.iterator().next().tags().get("zisglrrczezkhh"));
        Assertions
            .assertEquals(
                ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED,
                response.iterator().next().typeIdentityType());
        Assertions.assertEquals("qkctotiowlxte", response.iterator().next().cloudManagementEndpoint());
        Assertions.assertEquals("ptjgwdt", response.iterator().next().aadClientId());
        Assertions.assertEquals("kranblwphqlkcc", response.iterator().next().aadTenantId());
        Assertions.assertEquals("gygqwah", response.iterator().next().aadApplicationObjectId());
        Assertions.assertEquals("ulwgniiprglvawuw", response.iterator().next().aadServicePrincipalObjectId());
        Assertions
            .assertEquals(
                SoftwareAssuranceStatus.ENABLED,
                response.iterator().next().softwareAssuranceProperties().softwareAssuranceStatus());
        Assertions
            .assertEquals(
                SoftwareAssuranceIntent.DISABLE,
                response.iterator().next().softwareAssuranceProperties().softwareAssuranceIntent());
        Assertions
            .assertEquals(
                WindowsServerSubscription.DISABLED,
                response.iterator().next().desiredProperties().windowsServerSubscription());
        Assertions
            .assertEquals(DiagnosticLevel.BASIC, response.iterator().next().desiredProperties().diagnosticLevel());
    }
}
