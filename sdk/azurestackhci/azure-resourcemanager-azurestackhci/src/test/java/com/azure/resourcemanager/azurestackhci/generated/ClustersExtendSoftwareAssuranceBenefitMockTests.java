// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.HttpHeaders;
import com.azure.core.http.HttpRequest;
import com.azure.core.http.HttpResponse;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.resourcemanager.azurestackhci.AzureStackHciManager;
import com.azure.resourcemanager.azurestackhci.models.Cluster;
import com.azure.resourcemanager.azurestackhci.models.DiagnosticLevel;
import com.azure.resourcemanager.azurestackhci.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.azurestackhci.models.SoftwareAssuranceChangeRequest;
import com.azure.resourcemanager.azurestackhci.models.SoftwareAssuranceChangeRequestProperties;
import com.azure.resourcemanager.azurestackhci.models.SoftwareAssuranceIntent;
import com.azure.resourcemanager.azurestackhci.models.SoftwareAssuranceStatus;
import com.azure.resourcemanager.azurestackhci.models.WindowsServerSubscription;
import java.nio.ByteBuffer;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.mockito.ArgumentCaptor;
import org.mockito.Mockito;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

public final class ClustersExtendSoftwareAssuranceBenefitMockTests {
    @Test
    public void testExtendSoftwareAssuranceBenefit() throws Exception {
        HttpClient httpClient = Mockito.mock(HttpClient.class);
        HttpResponse httpResponse = Mockito.mock(HttpResponse.class);
        ArgumentCaptor<HttpRequest> httpRequest = ArgumentCaptor.forClass(HttpRequest.class);

        String responseStr =
            "{\"identity\":{\"principalId\":\"6ee185cd-31dd-41b5-893a-6b63dead5e84\",\"tenantId\":\"7b696d89-e0d2-4114-aae6-6f6bcc355046\",\"type\":\"None\",\"userAssignedIdentities\":{\"nrup\":{\"principalId\":\"0ad07998-84e8-423a-97f5-42280255052d\",\"clientId\":\"adcddae3-e54f-4c48-9a71-732a682c982d\"},\"mrdixtreki\":{\"principalId\":\"f322c47c-4802-4628-9d15-92ff2f1688b1\",\"clientId\":\"5640884c-102d-4b16-90dc-402d0098790d\"},\"yskbruff\":{\"principalId\":\"5e4f4006-5b90-4c39-87b9-5374ea2095ca\",\"clientId\":\"53a2c39f-3ecb-450b-b3ee-d880f161e3b7\"}}},\"properties\":{\"provisioningState\":\"Succeeded\",\"status\":\"InProgress\",\"cloudId\":\"tvlxhrpqh\",\"cloudManagementEndpoint\":\"blcouqehbhbcdszi\",\"aadClientId\":\"randoypmb\",\"aadTenantId\":\"oormkfqlwxldyka\",\"aadApplicationObjectId\":\"ygaolnjpnnb\",\"aadServicePrincipalObjectId\":\"ksibjgsjjxx\",\"softwareAssuranceProperties\":{\"softwareAssuranceStatus\":\"Disabled\",\"softwareAssuranceIntent\":\"Enable\",\"lastUpdated\":\"2021-10-01T12:11:27Z\"},\"desiredProperties\":{\"windowsServerSubscription\":\"Enabled\",\"diagnosticLevel\":\"Off\"},\"reportedProperties\":{\"clusterName\":\"vpinbmhwbj\",\"clusterId\":\"kgqxn\",\"clusterVersion\":\"bkezn\",\"nodes\":[{\"name\":\"vaannggiycwkd\",\"id\":38.89668,\"windowsServerSubscription\":\"Disabled\",\"nodeType\":\"FirstParty\",\"ehcResourceId\":\"ka\",\"manufacturer\":\"rrqmbzmqk\",\"model\":\"tbnxwbjsid\",\"osName\":\"rkfpks\",\"osVersion\":\"dgo\",\"osDisplayVersion\":\"wijymr\",\"serialNumber\":\"guzozkyew\",\"coreCount\":47.283615,\"memoryInGiB\":43.681763},{\"name\":\"hqosmf\",\"id\":97.07918,\"windowsServerSubscription\":\"Disabled\",\"nodeType\":\"FirstParty\",\"ehcResourceId\":\"arnroohguab\",\"manufacturer\":\"ghktdpy\",\"model\":\"hcoeocnhzq\",\"osName\":\"ttjzcfyjzpt\",\"osVersion\":\"lohap\",\"osDisplayVersion\":\"nfszpyglqdhmrjz\",\"serialNumber\":\"l\",\"coreCount\":22.556007,\"memoryInGiB\":87.41334},{\"name\":\"ypsjoq\",\"id\":24.544054,\"windowsServerSubscription\":\"Enabled\",\"nodeType\":\"FirstParty\",\"ehcResourceId\":\"qzvs\",\"manufacturer\":\"fxjelg\",\"model\":\"pzqjhhhq\",\"osName\":\"w\",\"osVersion\":\"cacoyvivbsiz\",\"osDisplayVersion\":\"jszlb\",\"serialNumber\":\"mnlzijiufehgmvf\",\"coreCount\":19.823874,\"memoryInGiB\":4.673129}],\"lastUpdated\":\"2021-05-20T19:10:46Z\",\"imdsAttestation\":\"Disabled\",\"diagnosticLevel\":\"Off\",\"supportedCapabilities\":[\"iylylyfw\",\"zutgqztwhghmupg\"]},\"trialDaysRemaining\":94.451485,\"billingModel\":\"cdxa\",\"registrationTimestamp\":\"2021-02-25T13:10:17Z\",\"lastSyncTimestamp\":\"2021-09-26T19:19:15Z\",\"lastBillingTimestamp\":\"2021-08-01T14:23:09Z\",\"serviceEndpoint\":\"enbbklqpxzucafed\",\"resourceProviderObjectId\":\"wnlzafwxu\"},\"location\":\"nhgookrtalvnbw\",\"tags\":{\"jjukyrdnqodxah\":\"emeluclv\",\"qnvzoqgyipemch\":\"xhqf\",\"lghwzhome\":\"avsczuejdtxp\"},\"id\":\"jjstliuhqawmo\",\"name\":\"ia\",\"type\":\"cz\"}";

        Mockito.when(httpResponse.getStatusCode()).thenReturn(200);
        Mockito.when(httpResponse.getHeaders()).thenReturn(new HttpHeaders());
        Mockito
            .when(httpResponse.getBody())
            .thenReturn(Flux.just(ByteBuffer.wrap(responseStr.getBytes(StandardCharsets.UTF_8))));
        Mockito
            .when(httpResponse.getBodyAsByteArray())
            .thenReturn(Mono.just(responseStr.getBytes(StandardCharsets.UTF_8)));
        Mockito
            .when(httpClient.send(httpRequest.capture(), Mockito.any()))
            .thenReturn(
                Mono
                    .defer(
                        () -> {
                            Mockito.when(httpResponse.getRequest()).thenReturn(httpRequest.getValue());
                            return Mono.just(httpResponse);
                        }));

        AzureStackHciManager manager =
            AzureStackHciManager
                .configure()
                .withHttpClient(httpClient)
                .authenticate(
                    tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                    new AzureProfile("", "", AzureEnvironment.AZURE));

        Cluster response =
            manager
                .clusters()
                .extendSoftwareAssuranceBenefit(
                    "fvfkak",
                    "oldtvevboclzhz",
                    new SoftwareAssuranceChangeRequest()
                        .withProperties(
                            new SoftwareAssuranceChangeRequestProperties()
                                .withSoftwareAssuranceIntent(SoftwareAssuranceIntent.DISABLE)),
                    com.azure.core.util.Context.NONE);

        Assertions.assertEquals("nhgookrtalvnbw", response.location());
        Assertions.assertEquals("emeluclv", response.tags().get("jjukyrdnqodxah"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.typeIdentityType());
        Assertions.assertEquals("blcouqehbhbcdszi", response.cloudManagementEndpoint());
        Assertions.assertEquals("randoypmb", response.aadClientId());
        Assertions.assertEquals("oormkfqlwxldyka", response.aadTenantId());
        Assertions.assertEquals("ygaolnjpnnb", response.aadApplicationObjectId());
        Assertions.assertEquals("ksibjgsjjxx", response.aadServicePrincipalObjectId());
        Assertions
            .assertEquals(
                SoftwareAssuranceStatus.DISABLED, response.softwareAssuranceProperties().softwareAssuranceStatus());
        Assertions
            .assertEquals(
                SoftwareAssuranceIntent.ENABLE, response.softwareAssuranceProperties().softwareAssuranceIntent());
        Assertions
            .assertEquals(WindowsServerSubscription.ENABLED, response.desiredProperties().windowsServerSubscription());
        Assertions.assertEquals(DiagnosticLevel.OFF, response.desiredProperties().diagnosticLevel());
    }
}
