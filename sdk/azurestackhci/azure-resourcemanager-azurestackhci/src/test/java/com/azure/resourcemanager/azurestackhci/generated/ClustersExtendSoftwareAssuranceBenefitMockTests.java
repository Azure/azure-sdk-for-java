// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurestackhci.AzurestackhciManager;
import com.azure.resourcemanager.azurestackhci.models.Cluster;
import com.azure.resourcemanager.azurestackhci.models.DiagnosticLevel;
import com.azure.resourcemanager.azurestackhci.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.azurestackhci.models.SoftwareAssuranceChangeRequest;
import com.azure.resourcemanager.azurestackhci.models.SoftwareAssuranceChangeRequestProperties;
import com.azure.resourcemanager.azurestackhci.models.SoftwareAssuranceIntent;
import com.azure.resourcemanager.azurestackhci.models.WindowsServerSubscription;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClustersExtendSoftwareAssuranceBenefitMockTests {
    @Test
    public void testExtendSoftwareAssuranceBenefit() throws Exception {
        String responseStr
            = "{\"identity\":{\"principalId\":\"2db1fed0-225f-4741-bc0a-29490f67792a\",\"tenantId\":\"14864eff-4950-4c95-8b7f-86b011eab7c5\",\"type\":\"None\",\"userAssignedIdentities\":{\"rwntfm\":{\"principalId\":\"cc51ffba-ed39-4c93-a0c8-f2acf20fcb5a\",\"clientId\":\"0c330050-4203-4480-86bf-dc00c540218e\"}}},\"properties\":{\"provisioningState\":\"Succeeded\",\"status\":\"NotYetRegistered\",\"connectivityStatus\":\"PartiallyConnected\",\"cloudId\":\"az\",\"cloudManagementEndpoint\":\"rrdreyzjwhset\",\"aadClientId\":\"jwzzqseuzu\",\"aadTenantId\":\"y\",\"aadApplicationObjectId\":\"yqhyqqzzdcykey\",\"aadServicePrincipalObjectId\":\"ewfopazdazg\",\"softwareAssuranceProperties\":{\"softwareAssuranceStatus\":\"Enabled\",\"softwareAssuranceIntent\":\"Enable\",\"lastUpdated\":\"2021-04-08T11:25:56Z\"},\"desiredProperties\":{\"windowsServerSubscription\":\"Enabled\",\"diagnosticLevel\":\"Basic\"},\"reportedProperties\":{\"clusterName\":\"vozglqjbk\",\"clusterId\":\"zcl\",\"clusterVersion\":\"zeyowmndcovdwzqa\",\"nodes\":[{\"name\":\"nhmkvfruwku\",\"id\":95.502785,\"windowsServerSubscription\":\"Enabled\",\"nodeType\":\"ThirdParty\",\"ehcResourceId\":\"udqyemeb\",\"manufacturer\":\"aucmcirtnee\",\"model\":\"jauwcgxefnohaitr\",\"osName\":\"izerw\",\"osVersion\":\"dasmxu\",\"osDisplayVersion\":\"fbngfcocef\",\"serialNumber\":\"riylfmpztra\",\"coreCount\":19.171642,\"memoryInGiB\":30.870796,\"lastLicensingTimestamp\":\"2021-08-29T00:22:27Z\",\"oemActivation\":\"Enabled\"},{\"name\":\"lregpq\",\"id\":31.933975,\"windowsServerSubscription\":\"Disabled\",\"nodeType\":\"FirstParty\",\"ehcResourceId\":\"tnvgyshqrdgrt\",\"manufacturer\":\"ewjzl\",\"model\":\"kcfazzw\",\"osName\":\"ayerzrran\",\"osVersion\":\"bylpolwzr\",\"osDisplayVersion\":\"srleinkfscjfn\",\"serialNumber\":\"wvuagfqwtl\",\"coreCount\":84.14594,\"memoryInGiB\":5.242687,\"lastLicensingTimestamp\":\"2021-02-28T09:32:49Z\",\"oemActivation\":\"Enabled\"},{\"name\":\"rklzmijajwolxfs\",\"id\":19.433653,\"windowsServerSubscription\":\"Enabled\",\"nodeType\":\"ThirdParty\",\"ehcResourceId\":\"wl\",\"manufacturer\":\"rcigtzjcvbxq\",\"model\":\"psnssovyxp\",\"osName\":\"idnievwffcv\",\"osVersion\":\"ezslp\",\"osDisplayVersion\":\"gcbdsvalpnptw\",\"serialNumber\":\"kx\",\"coreCount\":20.755302,\"memoryInGiB\":71.84433,\"lastLicensingTimestamp\":\"2021-04-19T12:42:18Z\",\"oemActivation\":\"Enabled\"}],\"lastUpdated\":\"2021-03-08T15:05Z\",\"imdsAttestation\":\"Disabled\",\"diagnosticLevel\":\"Enhanced\",\"supportedCapabilities\":[\"lhld\",\"uhzzgqlmfaew\"],\"clusterType\":\"FirstParty\",\"manufacturer\":\"djpxpqht\",\"oemActivation\":\"Enabled\"},\"isolatedVmAttestationConfiguration\":{\"attestationResourceId\":\"hkrezsdsuxheqdgc\",\"relyingPartyServiceEndpoint\":\"xsp\",\"attestationServiceEndpoint\":\"ymmqgwokmikp\"},\"trialDaysRemaining\":52.31734,\"billingModel\":\"mjxuvjipfdvhaxd\",\"registrationTimestamp\":\"2021-04-19T01:43:20Z\",\"lastSyncTimestamp\":\"2021-04-16T10:24:14Z\",\"lastBillingTimestamp\":\"2021-05-04T18:05:41Z\",\"serviceEndpoint\":\"thd\",\"resourceProviderObjectId\":\"mvetatlakfq\"},\"location\":\"xwgiks\",\"tags\":{\"phchgjtnhtukfaci\":\"tooxrpog\",\"tumeezbxvqxb\":\"mbf\"},\"id\":\"uvwc\",\"name\":\"asgom\",\"type\":\"mjzwx\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzurestackhciManager manager = AzurestackhciManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Cluster response
            = manager.clusters()
                .extendSoftwareAssuranceBenefit("enygnxcgjtfrnquk", "rf",
                    new SoftwareAssuranceChangeRequest().withProperties(new SoftwareAssuranceChangeRequestProperties()
                        .withSoftwareAssuranceIntent(SoftwareAssuranceIntent.DISABLE)),
                    com.azure.core.util.Context.NONE);

        Assertions.assertEquals("xwgiks", response.location());
        Assertions.assertEquals("tooxrpog", response.tags().get("phchgjtnhtukfaci"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.typeIdentityType());
        Assertions.assertEquals("rrdreyzjwhset", response.cloudManagementEndpoint());
        Assertions.assertEquals("jwzzqseuzu", response.aadClientId());
        Assertions.assertEquals("y", response.aadTenantId());
        Assertions.assertEquals("yqhyqqzzdcykey", response.aadApplicationObjectId());
        Assertions.assertEquals("ewfopazdazg", response.aadServicePrincipalObjectId());
        Assertions.assertEquals(SoftwareAssuranceIntent.ENABLE,
            response.softwareAssuranceProperties().softwareAssuranceIntent());
        Assertions.assertEquals(WindowsServerSubscription.ENABLED,
            response.desiredProperties().windowsServerSubscription());
        Assertions.assertEquals(DiagnosticLevel.BASIC, response.desiredProperties().diagnosticLevel());
    }
}
