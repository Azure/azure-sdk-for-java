// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.models.DeviceConfiguration;
import com.azure.resourcemanager.azurestackhci.models.NicDetail;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DeviceConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DeviceConfiguration model = BinaryData.fromString(
            "{\"nicDetails\":[{\"adapterName\":\"fhjirwgdnqzbrfk\",\"interfaceDescription\":\"zhzmtksjci\",\"componentId\":\"igsxcdgljplk\",\"driverVersion\":\"acht\",\"ip4Address\":\"flrytswfpfm\",\"subnetMask\":\"ycxnmskw\",\"defaultGateway\":\"jjyslurlps\",\"dnsServers\":[\"vpedwqslsrh\"],\"defaultIsolationId\":\"qvwwsko\"}],\"deviceMetadata\":\"cbrwi\"}")
            .toObject(DeviceConfiguration.class);
        Assertions.assertEquals("fhjirwgdnqzbrfk", model.nicDetails().get(0).adapterName());
        Assertions.assertEquals("zhzmtksjci", model.nicDetails().get(0).interfaceDescription());
        Assertions.assertEquals("igsxcdgljplk", model.nicDetails().get(0).componentId());
        Assertions.assertEquals("acht", model.nicDetails().get(0).driverVersion());
        Assertions.assertEquals("flrytswfpfm", model.nicDetails().get(0).ip4Address());
        Assertions.assertEquals("ycxnmskw", model.nicDetails().get(0).subnetMask());
        Assertions.assertEquals("jjyslurlps", model.nicDetails().get(0).defaultGateway());
        Assertions.assertEquals("vpedwqslsrh", model.nicDetails().get(0).dnsServers().get(0));
        Assertions.assertEquals("qvwwsko", model.nicDetails().get(0).defaultIsolationId());
        Assertions.assertEquals("cbrwi", model.deviceMetadata());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DeviceConfiguration model
            = new DeviceConfiguration().withNicDetails(Arrays.asList(new NicDetail().withAdapterName("fhjirwgdnqzbrfk")
                .withInterfaceDescription("zhzmtksjci")
                .withComponentId("igsxcdgljplk")
                .withDriverVersion("acht")
                .withIp4Address("flrytswfpfm")
                .withSubnetMask("ycxnmskw")
                .withDefaultGateway("jjyslurlps")
                .withDnsServers(Arrays.asList("vpedwqslsrh"))
                .withDefaultIsolationId("qvwwsko"))).withDeviceMetadata("cbrwi");
        model = BinaryData.fromObject(model).toObject(DeviceConfiguration.class);
        Assertions.assertEquals("fhjirwgdnqzbrfk", model.nicDetails().get(0).adapterName());
        Assertions.assertEquals("zhzmtksjci", model.nicDetails().get(0).interfaceDescription());
        Assertions.assertEquals("igsxcdgljplk", model.nicDetails().get(0).componentId());
        Assertions.assertEquals("acht", model.nicDetails().get(0).driverVersion());
        Assertions.assertEquals("flrytswfpfm", model.nicDetails().get(0).ip4Address());
        Assertions.assertEquals("ycxnmskw", model.nicDetails().get(0).subnetMask());
        Assertions.assertEquals("jjyslurlps", model.nicDetails().get(0).defaultGateway());
        Assertions.assertEquals("vpedwqslsrh", model.nicDetails().get(0).dnsServers().get(0));
        Assertions.assertEquals("qvwwsko", model.nicDetails().get(0).defaultIsolationId());
        Assertions.assertEquals("cbrwi", model.deviceMetadata());
    }
}
