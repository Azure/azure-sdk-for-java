// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.models.DeviceConfiguration;
import com.azure.resourcemanager.azurestackhci.models.NicDetail;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DeviceConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DeviceConfiguration model = BinaryData.fromString(
            "{\"nicDetails\":[{\"adapterName\":\"piymerteea\",\"interfaceDescription\":\"xqiekkkzddrtk\",\"componentId\":\"ojbmxv\",\"driverVersion\":\"refdee\",\"ip4Address\":\"ecuijpxtxs\",\"subnetMask\":\"prtujwsawdd\",\"defaultGateway\":\"babxvitit\",\"dnsServers\":[\"eexavo\",\"tfgle\",\"dmdqb\",\"pypqtgsfj\"],\"defaultIsolationId\":\"b\"},{\"adapterName\":\"lhhxudbxvodhtnsi\",\"interfaceDescription\":\"dhzmmesckdlp\",\"componentId\":\"zrcxfailcfxwmdbo\",\"driverVersion\":\"fgsftufqob\",\"ip4Address\":\"lnacgcc\",\"subnetMask\":\"nhxk\",\"defaultGateway\":\"v\",\"dnsServers\":[\"rzvul\",\"r\",\"aeranokqgukkjqnv\"],\"defaultIsolationId\":\"oylaxxul\"},{\"adapterName\":\"disdosfjbjsvgj\",\"interfaceDescription\":\"hryvy\",\"componentId\":\"t\",\"driverVersion\":\"lxgccknfnwmbtm\",\"ip4Address\":\"dvjdhttza\",\"subnetMask\":\"edxihchrphkmcrj\",\"defaultGateway\":\"nsdfzpbgtgky\",\"dnsServers\":[\"ghrjeuutl\"],\"defaultIsolationId\":\"ez\"}],\"deviceMetadata\":\"hokvbwnh\"}")
            .toObject(DeviceConfiguration.class);
        Assertions.assertEquals("piymerteea", model.nicDetails().get(0).adapterName());
        Assertions.assertEquals("xqiekkkzddrtk", model.nicDetails().get(0).interfaceDescription());
        Assertions.assertEquals("ojbmxv", model.nicDetails().get(0).componentId());
        Assertions.assertEquals("refdee", model.nicDetails().get(0).driverVersion());
        Assertions.assertEquals("ecuijpxtxs", model.nicDetails().get(0).ip4Address());
        Assertions.assertEquals("prtujwsawdd", model.nicDetails().get(0).subnetMask());
        Assertions.assertEquals("babxvitit", model.nicDetails().get(0).defaultGateway());
        Assertions.assertEquals("eexavo", model.nicDetails().get(0).dnsServers().get(0));
        Assertions.assertEquals("b", model.nicDetails().get(0).defaultIsolationId());
        Assertions.assertEquals("hokvbwnh", model.deviceMetadata());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DeviceConfiguration model = new DeviceConfiguration().withNicDetails(Arrays.asList(
            new NicDetail().withAdapterName("piymerteea")
                .withInterfaceDescription("xqiekkkzddrtk")
                .withComponentId("ojbmxv")
                .withDriverVersion("refdee")
                .withIp4Address("ecuijpxtxs")
                .withSubnetMask("prtujwsawdd")
                .withDefaultGateway("babxvitit")
                .withDnsServers(Arrays.asList("eexavo", "tfgle", "dmdqb", "pypqtgsfj"))
                .withDefaultIsolationId("b"),
            new NicDetail().withAdapterName("lhhxudbxvodhtnsi")
                .withInterfaceDescription("dhzmmesckdlp")
                .withComponentId("zrcxfailcfxwmdbo")
                .withDriverVersion("fgsftufqob")
                .withIp4Address("lnacgcc")
                .withSubnetMask("nhxk")
                .withDefaultGateway("v")
                .withDnsServers(Arrays.asList("rzvul", "r", "aeranokqgukkjqnv"))
                .withDefaultIsolationId("oylaxxul"),
            new NicDetail().withAdapterName("disdosfjbjsvgj")
                .withInterfaceDescription("hryvy")
                .withComponentId("t")
                .withDriverVersion("lxgccknfnwmbtm")
                .withIp4Address("dvjdhttza")
                .withSubnetMask("edxihchrphkmcrj")
                .withDefaultGateway("nsdfzpbgtgky")
                .withDnsServers(Arrays.asList("ghrjeuutl"))
                .withDefaultIsolationId("ez")))
            .withDeviceMetadata("hokvbwnh");
        model = BinaryData.fromObject(model).toObject(DeviceConfiguration.class);
        Assertions.assertEquals("piymerteea", model.nicDetails().get(0).adapterName());
        Assertions.assertEquals("xqiekkkzddrtk", model.nicDetails().get(0).interfaceDescription());
        Assertions.assertEquals("ojbmxv", model.nicDetails().get(0).componentId());
        Assertions.assertEquals("refdee", model.nicDetails().get(0).driverVersion());
        Assertions.assertEquals("ecuijpxtxs", model.nicDetails().get(0).ip4Address());
        Assertions.assertEquals("prtujwsawdd", model.nicDetails().get(0).subnetMask());
        Assertions.assertEquals("babxvitit", model.nicDetails().get(0).defaultGateway());
        Assertions.assertEquals("eexavo", model.nicDetails().get(0).dnsServers().get(0));
        Assertions.assertEquals("b", model.nicDetails().get(0).defaultIsolationId());
        Assertions.assertEquals("hokvbwnh", model.deviceMetadata());
    }
}
