// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.azurestackhci.fluent.models.ArcSettingInner;
import com.azure.resourcemanager.azurestackhci.models.ArcSetting;
import com.azure.resourcemanager.azurestackhci.models.ArcSettingAggregateState;
import com.azure.resourcemanager.azurestackhci.models.CreatedByType;
import com.azure.resourcemanager.azurestackhci.models.PerNodeState;
import com.azure.resourcemanager.azurestackhci.models.ProvisioningState;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.List;

public final class ArcSettingImpl implements ArcSetting, ArcSetting.Definition {
    private ArcSettingInner innerObject;

    private final com.azure.resourcemanager.azurestackhci.AzureStackHciManager serviceManager;

    ArcSettingImpl(
        ArcSettingInner innerObject, com.azure.resourcemanager.azurestackhci.AzureStackHciManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String arcInstanceResourceGroup() {
        return this.innerModel().arcInstanceResourceGroup();
    }

    public ArcSettingAggregateState aggregateState() {
        return this.innerModel().aggregateState();
    }

    public List<PerNodeState> perNodeDetails() {
        List<PerNodeState> inner = this.innerModel().perNodeDetails();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String createdBy() {
        return this.innerModel().createdBy();
    }

    public CreatedByType createdByType() {
        return this.innerModel().createdByType();
    }

    public OffsetDateTime createdAt() {
        return this.innerModel().createdAt();
    }

    public String lastModifiedBy() {
        return this.innerModel().lastModifiedBy();
    }

    public CreatedByType lastModifiedByType() {
        return this.innerModel().lastModifiedByType();
    }

    public OffsetDateTime lastModifiedAt() {
        return this.innerModel().lastModifiedAt();
    }

    public ArcSettingInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.azurestackhci.AzureStackHciManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String clusterName;

    private String arcSettingName;

    public ArcSettingImpl withExistingCluster(String resourceGroupName, String clusterName) {
        this.resourceGroupName = resourceGroupName;
        this.clusterName = clusterName;
        return this;
    }

    public ArcSetting create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getArcSettings()
                .createWithResponse(resourceGroupName, clusterName, arcSettingName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public ArcSetting create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getArcSettings()
                .createWithResponse(resourceGroupName, clusterName, arcSettingName, this.innerModel(), context)
                .getValue();
        return this;
    }

    ArcSettingImpl(String name, com.azure.resourcemanager.azurestackhci.AzureStackHciManager serviceManager) {
        this.innerObject = new ArcSettingInner();
        this.serviceManager = serviceManager;
        this.arcSettingName = name;
    }

    public ArcSetting refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getArcSettings()
                .getWithResponse(resourceGroupName, clusterName, arcSettingName, Context.NONE)
                .getValue();
        return this;
    }

    public ArcSetting refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getArcSettings()
                .getWithResponse(resourceGroupName, clusterName, arcSettingName, context)
                .getValue();
        return this;
    }

    public ArcSettingImpl withCreatedBy(String createdBy) {
        this.innerModel().withCreatedBy(createdBy);
        return this;
    }

    public ArcSettingImpl withCreatedByType(CreatedByType createdByType) {
        this.innerModel().withCreatedByType(createdByType);
        return this;
    }

    public ArcSettingImpl withCreatedAt(OffsetDateTime createdAt) {
        this.innerModel().withCreatedAt(createdAt);
        return this;
    }

    public ArcSettingImpl withLastModifiedBy(String lastModifiedBy) {
        this.innerModel().withLastModifiedBy(lastModifiedBy);
        return this;
    }

    public ArcSettingImpl withLastModifiedByType(CreatedByType lastModifiedByType) {
        this.innerModel().withLastModifiedByType(lastModifiedByType);
        return this;
    }

    public ArcSettingImpl withLastModifiedAt(OffsetDateTime lastModifiedAt) {
        this.innerModel().withLastModifiedAt(lastModifiedAt);
        return this;
    }
}
