// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The SecuritySettings of AzureStackHCI Cluster.
 */
@Fluent
public final class DeploymentSecuritySettings implements JsonSerializable<DeploymentSecuritySettings> {
    /*
     * By default, Hypervisor-protected Code Integrity is enabled on your Azure HCI cluster.
     */
    private Boolean hvciProtection;

    /*
     * By default, Secure Boot is enabled on your Azure HCI cluster. This setting is hardware dependent.
     */
    private Boolean drtmProtection;

    /*
     * When set to true, the security baseline is re-applied regularly.
     */
    private Boolean driftControlEnforced;

    /*
     * When set to true, Credential Guard is enabled.
     */
    private Boolean credentialGuardEnforced;

    /*
     * When set to true, the SMB default instance requires sign in for the client and server services.
     */
    private Boolean smbSigningEnforced;

    /*
     * When set to true, cluster east-west traffic is encrypted.
     */
    private Boolean smbClusterEncryption;

    /*
     * When set to true, all the side channel mitigations are enabled
     */
    private Boolean sideChannelMitigationEnforced;

    /*
     * When set to true, BitLocker XTS_AES 256-bit encryption is enabled for all data-at-rest on the OS volume of your
     * Azure Stack HCI cluster. This setting is TPM-hardware dependent.
     */
    private Boolean bitlockerBootVolume;

    /*
     * When set to true, BitLocker XTS-AES 256-bit encryption is enabled for all data-at-rest on your Azure Stack HCI
     * cluster shared volumes.
     */
    private Boolean bitlockerDataVolumes;

    /*
     * WDAC is enabled by default and limits the applications and the code that you can run on your Azure Stack HCI
     * cluster.
     */
    private Boolean wdacEnforced;

    /**
     * Creates an instance of DeploymentSecuritySettings class.
     */
    public DeploymentSecuritySettings() {
    }

    /**
     * Get the hvciProtection property: By default, Hypervisor-protected Code Integrity is enabled on your Azure HCI
     * cluster.
     * 
     * @return the hvciProtection value.
     */
    public Boolean hvciProtection() {
        return this.hvciProtection;
    }

    /**
     * Set the hvciProtection property: By default, Hypervisor-protected Code Integrity is enabled on your Azure HCI
     * cluster.
     * 
     * @param hvciProtection the hvciProtection value to set.
     * @return the DeploymentSecuritySettings object itself.
     */
    public DeploymentSecuritySettings withHvciProtection(Boolean hvciProtection) {
        this.hvciProtection = hvciProtection;
        return this;
    }

    /**
     * Get the drtmProtection property: By default, Secure Boot is enabled on your Azure HCI cluster. This setting is
     * hardware dependent.
     * 
     * @return the drtmProtection value.
     */
    public Boolean drtmProtection() {
        return this.drtmProtection;
    }

    /**
     * Set the drtmProtection property: By default, Secure Boot is enabled on your Azure HCI cluster. This setting is
     * hardware dependent.
     * 
     * @param drtmProtection the drtmProtection value to set.
     * @return the DeploymentSecuritySettings object itself.
     */
    public DeploymentSecuritySettings withDrtmProtection(Boolean drtmProtection) {
        this.drtmProtection = drtmProtection;
        return this;
    }

    /**
     * Get the driftControlEnforced property: When set to true, the security baseline is re-applied regularly.
     * 
     * @return the driftControlEnforced value.
     */
    public Boolean driftControlEnforced() {
        return this.driftControlEnforced;
    }

    /**
     * Set the driftControlEnforced property: When set to true, the security baseline is re-applied regularly.
     * 
     * @param driftControlEnforced the driftControlEnforced value to set.
     * @return the DeploymentSecuritySettings object itself.
     */
    public DeploymentSecuritySettings withDriftControlEnforced(Boolean driftControlEnforced) {
        this.driftControlEnforced = driftControlEnforced;
        return this;
    }

    /**
     * Get the credentialGuardEnforced property: When set to true, Credential Guard is enabled.
     * 
     * @return the credentialGuardEnforced value.
     */
    public Boolean credentialGuardEnforced() {
        return this.credentialGuardEnforced;
    }

    /**
     * Set the credentialGuardEnforced property: When set to true, Credential Guard is enabled.
     * 
     * @param credentialGuardEnforced the credentialGuardEnforced value to set.
     * @return the DeploymentSecuritySettings object itself.
     */
    public DeploymentSecuritySettings withCredentialGuardEnforced(Boolean credentialGuardEnforced) {
        this.credentialGuardEnforced = credentialGuardEnforced;
        return this;
    }

    /**
     * Get the smbSigningEnforced property: When set to true, the SMB default instance requires sign in for the client
     * and server services.
     * 
     * @return the smbSigningEnforced value.
     */
    public Boolean smbSigningEnforced() {
        return this.smbSigningEnforced;
    }

    /**
     * Set the smbSigningEnforced property: When set to true, the SMB default instance requires sign in for the client
     * and server services.
     * 
     * @param smbSigningEnforced the smbSigningEnforced value to set.
     * @return the DeploymentSecuritySettings object itself.
     */
    public DeploymentSecuritySettings withSmbSigningEnforced(Boolean smbSigningEnforced) {
        this.smbSigningEnforced = smbSigningEnforced;
        return this;
    }

    /**
     * Get the smbClusterEncryption property: When set to true, cluster east-west traffic is encrypted.
     * 
     * @return the smbClusterEncryption value.
     */
    public Boolean smbClusterEncryption() {
        return this.smbClusterEncryption;
    }

    /**
     * Set the smbClusterEncryption property: When set to true, cluster east-west traffic is encrypted.
     * 
     * @param smbClusterEncryption the smbClusterEncryption value to set.
     * @return the DeploymentSecuritySettings object itself.
     */
    public DeploymentSecuritySettings withSmbClusterEncryption(Boolean smbClusterEncryption) {
        this.smbClusterEncryption = smbClusterEncryption;
        return this;
    }

    /**
     * Get the sideChannelMitigationEnforced property: When set to true, all the side channel mitigations are enabled.
     * 
     * @return the sideChannelMitigationEnforced value.
     */
    public Boolean sideChannelMitigationEnforced() {
        return this.sideChannelMitigationEnforced;
    }

    /**
     * Set the sideChannelMitigationEnforced property: When set to true, all the side channel mitigations are enabled.
     * 
     * @param sideChannelMitigationEnforced the sideChannelMitigationEnforced value to set.
     * @return the DeploymentSecuritySettings object itself.
     */
    public DeploymentSecuritySettings withSideChannelMitigationEnforced(Boolean sideChannelMitigationEnforced) {
        this.sideChannelMitigationEnforced = sideChannelMitigationEnforced;
        return this;
    }

    /**
     * Get the bitlockerBootVolume property: When set to true, BitLocker XTS_AES 256-bit encryption is enabled for all
     * data-at-rest on the OS volume of your Azure Stack HCI cluster. This setting is TPM-hardware dependent.
     * 
     * @return the bitlockerBootVolume value.
     */
    public Boolean bitlockerBootVolume() {
        return this.bitlockerBootVolume;
    }

    /**
     * Set the bitlockerBootVolume property: When set to true, BitLocker XTS_AES 256-bit encryption is enabled for all
     * data-at-rest on the OS volume of your Azure Stack HCI cluster. This setting is TPM-hardware dependent.
     * 
     * @param bitlockerBootVolume the bitlockerBootVolume value to set.
     * @return the DeploymentSecuritySettings object itself.
     */
    public DeploymentSecuritySettings withBitlockerBootVolume(Boolean bitlockerBootVolume) {
        this.bitlockerBootVolume = bitlockerBootVolume;
        return this;
    }

    /**
     * Get the bitlockerDataVolumes property: When set to true, BitLocker XTS-AES 256-bit encryption is enabled for all
     * data-at-rest on your Azure Stack HCI cluster shared volumes.
     * 
     * @return the bitlockerDataVolumes value.
     */
    public Boolean bitlockerDataVolumes() {
        return this.bitlockerDataVolumes;
    }

    /**
     * Set the bitlockerDataVolumes property: When set to true, BitLocker XTS-AES 256-bit encryption is enabled for all
     * data-at-rest on your Azure Stack HCI cluster shared volumes.
     * 
     * @param bitlockerDataVolumes the bitlockerDataVolumes value to set.
     * @return the DeploymentSecuritySettings object itself.
     */
    public DeploymentSecuritySettings withBitlockerDataVolumes(Boolean bitlockerDataVolumes) {
        this.bitlockerDataVolumes = bitlockerDataVolumes;
        return this;
    }

    /**
     * Get the wdacEnforced property: WDAC is enabled by default and limits the applications and the code that you can
     * run on your Azure Stack HCI cluster.
     * 
     * @return the wdacEnforced value.
     */
    public Boolean wdacEnforced() {
        return this.wdacEnforced;
    }

    /**
     * Set the wdacEnforced property: WDAC is enabled by default and limits the applications and the code that you can
     * run on your Azure Stack HCI cluster.
     * 
     * @param wdacEnforced the wdacEnforced value to set.
     * @return the DeploymentSecuritySettings object itself.
     */
    public DeploymentSecuritySettings withWdacEnforced(Boolean wdacEnforced) {
        this.wdacEnforced = wdacEnforced;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("hvciProtection", this.hvciProtection);
        jsonWriter.writeBooleanField("drtmProtection", this.drtmProtection);
        jsonWriter.writeBooleanField("driftControlEnforced", this.driftControlEnforced);
        jsonWriter.writeBooleanField("credentialGuardEnforced", this.credentialGuardEnforced);
        jsonWriter.writeBooleanField("smbSigningEnforced", this.smbSigningEnforced);
        jsonWriter.writeBooleanField("smbClusterEncryption", this.smbClusterEncryption);
        jsonWriter.writeBooleanField("sideChannelMitigationEnforced", this.sideChannelMitigationEnforced);
        jsonWriter.writeBooleanField("bitlockerBootVolume", this.bitlockerBootVolume);
        jsonWriter.writeBooleanField("bitlockerDataVolumes", this.bitlockerDataVolumes);
        jsonWriter.writeBooleanField("wdacEnforced", this.wdacEnforced);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DeploymentSecuritySettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DeploymentSecuritySettings if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the DeploymentSecuritySettings.
     */
    public static DeploymentSecuritySettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DeploymentSecuritySettings deserializedDeploymentSecuritySettings = new DeploymentSecuritySettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("hvciProtection".equals(fieldName)) {
                    deserializedDeploymentSecuritySettings.hvciProtection = reader.getNullable(JsonReader::getBoolean);
                } else if ("drtmProtection".equals(fieldName)) {
                    deserializedDeploymentSecuritySettings.drtmProtection = reader.getNullable(JsonReader::getBoolean);
                } else if ("driftControlEnforced".equals(fieldName)) {
                    deserializedDeploymentSecuritySettings.driftControlEnforced
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("credentialGuardEnforced".equals(fieldName)) {
                    deserializedDeploymentSecuritySettings.credentialGuardEnforced
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("smbSigningEnforced".equals(fieldName)) {
                    deserializedDeploymentSecuritySettings.smbSigningEnforced
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("smbClusterEncryption".equals(fieldName)) {
                    deserializedDeploymentSecuritySettings.smbClusterEncryption
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("sideChannelMitigationEnforced".equals(fieldName)) {
                    deserializedDeploymentSecuritySettings.sideChannelMitigationEnforced
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("bitlockerBootVolume".equals(fieldName)) {
                    deserializedDeploymentSecuritySettings.bitlockerBootVolume
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("bitlockerDataVolumes".equals(fieldName)) {
                    deserializedDeploymentSecuritySettings.bitlockerDataVolumes
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("wdacEnforced".equals(fieldName)) {
                    deserializedDeploymentSecuritySettings.wdacEnforced = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDeploymentSecuritySettings;
        });
    }
}
