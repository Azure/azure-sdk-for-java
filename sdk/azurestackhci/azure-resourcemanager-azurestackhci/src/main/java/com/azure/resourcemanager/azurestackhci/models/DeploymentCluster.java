// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * AzureStackHCI Cluster deployment properties.
 */
@Fluent
public final class DeploymentCluster implements JsonSerializable<DeploymentCluster> {
    /*
     * The cluster name provided when preparing Active Directory.
     */
    private String name;

    /*
     * Use a cloud witness if you have internet access and if you use an Azure Storage account to provide a vote on
     * cluster quorum. A cloud witness uses Azure Blob Storage to read or write a blob file and then uses it to
     * arbitrate in split-brain resolution. Only allowed values are 'Cloud', 'FileShare'.
     */
    private String witnessType;

    /*
     * Specify the fileshare path for the local witness for your Azure Stack HCI cluster.
     */
    private String witnessPath;

    /*
     * Specify the Azure Storage account name for cloud witness for your Azure Stack HCI cluster.
     */
    private String cloudAccountName;

    /*
     * For Azure blob service endpoint type, select either Default or Custom domain. If you selected **Custom domain,
     * enter the domain for the blob service in this format core.windows.net.
     */
    private String azureServiceEndpoint;

    /**
     * Creates an instance of DeploymentCluster class.
     */
    public DeploymentCluster() {
    }

    /**
     * Get the name property: The cluster name provided when preparing Active Directory.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The cluster name provided when preparing Active Directory.
     * 
     * @param name the name value to set.
     * @return the DeploymentCluster object itself.
     */
    public DeploymentCluster withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the witnessType property: Use a cloud witness if you have internet access and if you use an Azure Storage
     * account to provide a vote on cluster quorum. A cloud witness uses Azure Blob Storage to read or write a blob file
     * and then uses it to arbitrate in split-brain resolution. Only allowed values are 'Cloud', 'FileShare'.
     * 
     * @return the witnessType value.
     */
    public String witnessType() {
        return this.witnessType;
    }

    /**
     * Set the witnessType property: Use a cloud witness if you have internet access and if you use an Azure Storage
     * account to provide a vote on cluster quorum. A cloud witness uses Azure Blob Storage to read or write a blob file
     * and then uses it to arbitrate in split-brain resolution. Only allowed values are 'Cloud', 'FileShare'.
     * 
     * @param witnessType the witnessType value to set.
     * @return the DeploymentCluster object itself.
     */
    public DeploymentCluster withWitnessType(String witnessType) {
        this.witnessType = witnessType;
        return this;
    }

    /**
     * Get the witnessPath property: Specify the fileshare path for the local witness for your Azure Stack HCI cluster.
     * 
     * @return the witnessPath value.
     */
    public String witnessPath() {
        return this.witnessPath;
    }

    /**
     * Set the witnessPath property: Specify the fileshare path for the local witness for your Azure Stack HCI cluster.
     * 
     * @param witnessPath the witnessPath value to set.
     * @return the DeploymentCluster object itself.
     */
    public DeploymentCluster withWitnessPath(String witnessPath) {
        this.witnessPath = witnessPath;
        return this;
    }

    /**
     * Get the cloudAccountName property: Specify the Azure Storage account name for cloud witness for your Azure Stack
     * HCI cluster.
     * 
     * @return the cloudAccountName value.
     */
    public String cloudAccountName() {
        return this.cloudAccountName;
    }

    /**
     * Set the cloudAccountName property: Specify the Azure Storage account name for cloud witness for your Azure Stack
     * HCI cluster.
     * 
     * @param cloudAccountName the cloudAccountName value to set.
     * @return the DeploymentCluster object itself.
     */
    public DeploymentCluster withCloudAccountName(String cloudAccountName) {
        this.cloudAccountName = cloudAccountName;
        return this;
    }

    /**
     * Get the azureServiceEndpoint property: For Azure blob service endpoint type, select either Default or Custom
     * domain. If you selected **Custom domain, enter the domain for the blob service in this format core.windows.net.
     * 
     * @return the azureServiceEndpoint value.
     */
    public String azureServiceEndpoint() {
        return this.azureServiceEndpoint;
    }

    /**
     * Set the azureServiceEndpoint property: For Azure blob service endpoint type, select either Default or Custom
     * domain. If you selected **Custom domain, enter the domain for the blob service in this format core.windows.net.
     * 
     * @param azureServiceEndpoint the azureServiceEndpoint value to set.
     * @return the DeploymentCluster object itself.
     */
    public DeploymentCluster withAzureServiceEndpoint(String azureServiceEndpoint) {
        this.azureServiceEndpoint = azureServiceEndpoint;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeStringField("witnessType", this.witnessType);
        jsonWriter.writeStringField("witnessPath", this.witnessPath);
        jsonWriter.writeStringField("cloudAccountName", this.cloudAccountName);
        jsonWriter.writeStringField("azureServiceEndpoint", this.azureServiceEndpoint);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DeploymentCluster from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DeploymentCluster if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the DeploymentCluster.
     */
    public static DeploymentCluster fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DeploymentCluster deserializedDeploymentCluster = new DeploymentCluster();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedDeploymentCluster.name = reader.getString();
                } else if ("witnessType".equals(fieldName)) {
                    deserializedDeploymentCluster.witnessType = reader.getString();
                } else if ("witnessPath".equals(fieldName)) {
                    deserializedDeploymentCluster.witnessPath = reader.getString();
                } else if ("cloudAccountName".equals(fieldName)) {
                    deserializedDeploymentCluster.cloudAccountName = reader.getString();
                } else if ("azureServiceEndpoint".equals(fieldName)) {
                    deserializedDeploymentCluster.azureServiceEndpoint = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDeploymentCluster;
        });
    }
}
