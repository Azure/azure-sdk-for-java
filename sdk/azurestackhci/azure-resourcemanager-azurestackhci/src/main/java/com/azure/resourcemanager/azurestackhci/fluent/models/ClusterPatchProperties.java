// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.azurestackhci.models.ClusterDesiredProperties;
import java.io.IOException;

/**
 * Cluster properties.
 */
@Fluent
public final class ClusterPatchProperties implements JsonSerializable<ClusterPatchProperties> {
    /*
     * Endpoint configured for management from the Azure portal
     */
    private String cloudManagementEndpoint;

    /*
     * App id of cluster AAD identity.
     */
    private String aadClientId;

    /*
     * Tenant id of cluster AAD identity.
     */
    private String aadTenantId;

    /*
     * Desired properties of the cluster.
     */
    private ClusterDesiredProperties desiredProperties;

    /**
     * Creates an instance of ClusterPatchProperties class.
     */
    public ClusterPatchProperties() {
    }

    /**
     * Get the cloudManagementEndpoint property: Endpoint configured for management from the Azure portal.
     * 
     * @return the cloudManagementEndpoint value.
     */
    public String cloudManagementEndpoint() {
        return this.cloudManagementEndpoint;
    }

    /**
     * Set the cloudManagementEndpoint property: Endpoint configured for management from the Azure portal.
     * 
     * @param cloudManagementEndpoint the cloudManagementEndpoint value to set.
     * @return the ClusterPatchProperties object itself.
     */
    public ClusterPatchProperties withCloudManagementEndpoint(String cloudManagementEndpoint) {
        this.cloudManagementEndpoint = cloudManagementEndpoint;
        return this;
    }

    /**
     * Get the aadClientId property: App id of cluster AAD identity.
     * 
     * @return the aadClientId value.
     */
    public String aadClientId() {
        return this.aadClientId;
    }

    /**
     * Set the aadClientId property: App id of cluster AAD identity.
     * 
     * @param aadClientId the aadClientId value to set.
     * @return the ClusterPatchProperties object itself.
     */
    public ClusterPatchProperties withAadClientId(String aadClientId) {
        this.aadClientId = aadClientId;
        return this;
    }

    /**
     * Get the aadTenantId property: Tenant id of cluster AAD identity.
     * 
     * @return the aadTenantId value.
     */
    public String aadTenantId() {
        return this.aadTenantId;
    }

    /**
     * Set the aadTenantId property: Tenant id of cluster AAD identity.
     * 
     * @param aadTenantId the aadTenantId value to set.
     * @return the ClusterPatchProperties object itself.
     */
    public ClusterPatchProperties withAadTenantId(String aadTenantId) {
        this.aadTenantId = aadTenantId;
        return this;
    }

    /**
     * Get the desiredProperties property: Desired properties of the cluster.
     * 
     * @return the desiredProperties value.
     */
    public ClusterDesiredProperties desiredProperties() {
        return this.desiredProperties;
    }

    /**
     * Set the desiredProperties property: Desired properties of the cluster.
     * 
     * @param desiredProperties the desiredProperties value to set.
     * @return the ClusterPatchProperties object itself.
     */
    public ClusterPatchProperties withDesiredProperties(ClusterDesiredProperties desiredProperties) {
        this.desiredProperties = desiredProperties;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (desiredProperties() != null) {
            desiredProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("cloudManagementEndpoint", this.cloudManagementEndpoint);
        jsonWriter.writeStringField("aadClientId", this.aadClientId);
        jsonWriter.writeStringField("aadTenantId", this.aadTenantId);
        jsonWriter.writeJsonField("desiredProperties", this.desiredProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ClusterPatchProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ClusterPatchProperties if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ClusterPatchProperties.
     */
    public static ClusterPatchProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ClusterPatchProperties deserializedClusterPatchProperties = new ClusterPatchProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("cloudManagementEndpoint".equals(fieldName)) {
                    deserializedClusterPatchProperties.cloudManagementEndpoint = reader.getString();
                } else if ("aadClientId".equals(fieldName)) {
                    deserializedClusterPatchProperties.aadClientId = reader.getString();
                } else if ("aadTenantId".equals(fieldName)) {
                    deserializedClusterPatchProperties.aadTenantId = reader.getString();
                } else if ("desiredProperties".equals(fieldName)) {
                    deserializedClusterPatchProperties.desiredProperties = ClusterDesiredProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedClusterPatchProperties;
        });
    }
}
