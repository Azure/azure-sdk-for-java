// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** StorageProfile - contains information about the disks and storage information for the virtual machine instance. */
@Fluent
public final class VirtualMachineInstancePropertiesStorageProfile {
    /*
     * adds data disks to the virtual machine instance
     */
    @JsonProperty(value = "dataDisks")
    private List<VirtualMachineInstancePropertiesStorageProfileDataDisksItem> dataDisks;

    /*
     * Which Image to use for the virtual machine instance
     */
    @JsonProperty(value = "imageReference")
    private VirtualMachineInstancePropertiesStorageProfileImageReference imageReference;

    /*
     * VHD to attach as OS disk
     */
    @JsonProperty(value = "osDisk")
    private VirtualMachineInstancePropertiesStorageProfileOsDisk osDisk;

    /*
     * Id of the storage container that hosts the VM configuration file
     */
    @JsonProperty(value = "vmConfigStoragePathId")
    private String vmConfigStoragePathId;

    /** Creates an instance of VirtualMachineInstancePropertiesStorageProfile class. */
    public VirtualMachineInstancePropertiesStorageProfile() {
    }

    /**
     * Get the dataDisks property: adds data disks to the virtual machine instance.
     *
     * @return the dataDisks value.
     */
    public List<VirtualMachineInstancePropertiesStorageProfileDataDisksItem> dataDisks() {
        return this.dataDisks;
    }

    /**
     * Set the dataDisks property: adds data disks to the virtual machine instance.
     *
     * @param dataDisks the dataDisks value to set.
     * @return the VirtualMachineInstancePropertiesStorageProfile object itself.
     */
    public VirtualMachineInstancePropertiesStorageProfile withDataDisks(
        List<VirtualMachineInstancePropertiesStorageProfileDataDisksItem> dataDisks) {
        this.dataDisks = dataDisks;
        return this;
    }

    /**
     * Get the imageReference property: Which Image to use for the virtual machine instance.
     *
     * @return the imageReference value.
     */
    public VirtualMachineInstancePropertiesStorageProfileImageReference imageReference() {
        return this.imageReference;
    }

    /**
     * Set the imageReference property: Which Image to use for the virtual machine instance.
     *
     * @param imageReference the imageReference value to set.
     * @return the VirtualMachineInstancePropertiesStorageProfile object itself.
     */
    public VirtualMachineInstancePropertiesStorageProfile withImageReference(
        VirtualMachineInstancePropertiesStorageProfileImageReference imageReference) {
        this.imageReference = imageReference;
        return this;
    }

    /**
     * Get the osDisk property: VHD to attach as OS disk.
     *
     * @return the osDisk value.
     */
    public VirtualMachineInstancePropertiesStorageProfileOsDisk osDisk() {
        return this.osDisk;
    }

    /**
     * Set the osDisk property: VHD to attach as OS disk.
     *
     * @param osDisk the osDisk value to set.
     * @return the VirtualMachineInstancePropertiesStorageProfile object itself.
     */
    public VirtualMachineInstancePropertiesStorageProfile withOsDisk(
        VirtualMachineInstancePropertiesStorageProfileOsDisk osDisk) {
        this.osDisk = osDisk;
        return this;
    }

    /**
     * Get the vmConfigStoragePathId property: Id of the storage container that hosts the VM configuration file.
     *
     * @return the vmConfigStoragePathId value.
     */
    public String vmConfigStoragePathId() {
        return this.vmConfigStoragePathId;
    }

    /**
     * Set the vmConfigStoragePathId property: Id of the storage container that hosts the VM configuration file.
     *
     * @param vmConfigStoragePathId the vmConfigStoragePathId value to set.
     * @return the VirtualMachineInstancePropertiesStorageProfile object itself.
     */
    public VirtualMachineInstancePropertiesStorageProfile withVmConfigStoragePathId(String vmConfigStoragePathId) {
        this.vmConfigStoragePathId = vmConfigStoragePathId;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (dataDisks() != null) {
            dataDisks().forEach(e -> e.validate());
        }
        if (imageReference() != null) {
            imageReference().validate();
        }
        if (osDisk() != null) {
            osDisk().validate();
        }
    }
}
