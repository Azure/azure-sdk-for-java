// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * Software Assurance properties of the cluster.
 */
@Fluent
public final class SoftwareAssuranceProperties implements JsonSerializable<SoftwareAssuranceProperties> {
    /*
     * Status of the Software Assurance for the cluster.
     */
    private SoftwareAssuranceStatus softwareAssuranceStatus;

    /*
     * Customer Intent for Software Assurance Benefit.
     */
    private SoftwareAssuranceIntent softwareAssuranceIntent;

    /*
     * TimeStamp denoting the latest SA benefit applicability is validated.
     */
    private OffsetDateTime lastUpdated;

    /**
     * Creates an instance of SoftwareAssuranceProperties class.
     */
    public SoftwareAssuranceProperties() {
    }

    /**
     * Get the softwareAssuranceStatus property: Status of the Software Assurance for the cluster.
     * 
     * @return the softwareAssuranceStatus value.
     */
    public SoftwareAssuranceStatus softwareAssuranceStatus() {
        return this.softwareAssuranceStatus;
    }

    /**
     * Get the softwareAssuranceIntent property: Customer Intent for Software Assurance Benefit.
     * 
     * @return the softwareAssuranceIntent value.
     */
    public SoftwareAssuranceIntent softwareAssuranceIntent() {
        return this.softwareAssuranceIntent;
    }

    /**
     * Set the softwareAssuranceIntent property: Customer Intent for Software Assurance Benefit.
     * 
     * @param softwareAssuranceIntent the softwareAssuranceIntent value to set.
     * @return the SoftwareAssuranceProperties object itself.
     */
    public SoftwareAssuranceProperties withSoftwareAssuranceIntent(SoftwareAssuranceIntent softwareAssuranceIntent) {
        this.softwareAssuranceIntent = softwareAssuranceIntent;
        return this;
    }

    /**
     * Get the lastUpdated property: TimeStamp denoting the latest SA benefit applicability is validated.
     * 
     * @return the lastUpdated value.
     */
    public OffsetDateTime lastUpdated() {
        return this.lastUpdated;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("softwareAssuranceIntent",
            this.softwareAssuranceIntent == null ? null : this.softwareAssuranceIntent.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SoftwareAssuranceProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SoftwareAssuranceProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SoftwareAssuranceProperties.
     */
    public static SoftwareAssuranceProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SoftwareAssuranceProperties deserializedSoftwareAssuranceProperties = new SoftwareAssuranceProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("softwareAssuranceStatus".equals(fieldName)) {
                    deserializedSoftwareAssuranceProperties.softwareAssuranceStatus
                        = SoftwareAssuranceStatus.fromString(reader.getString());
                } else if ("softwareAssuranceIntent".equals(fieldName)) {
                    deserializedSoftwareAssuranceProperties.softwareAssuranceIntent
                        = SoftwareAssuranceIntent.fromString(reader.getString());
                } else if ("lastUpdated".equals(fieldName)) {
                    deserializedSoftwareAssuranceProperties.lastUpdated = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSoftwareAssuranceProperties;
        });
    }
}
