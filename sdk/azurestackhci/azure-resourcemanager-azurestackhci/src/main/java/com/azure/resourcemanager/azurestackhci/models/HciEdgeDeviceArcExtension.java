// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Arc extension installed on edge device.
 */
@Immutable
public final class HciEdgeDeviceArcExtension implements JsonSerializable<HciEdgeDeviceArcExtension> {
    /*
     * Arc extension name installed on edge device.
     */
    private String extensionName;

    /*
     * Arc extension state from arc machine extension.
     */
    private ArcExtensionState state;

    /*
     * Error details while installing Arc extension.
     */
    private List<HciValidationFailureDetail> errorDetails;

    /*
     * Arc Extension Azure resource id.
     */
    private String extensionResourceId;

    /*
     * Extension version installed.
     */
    private String typeHandlerVersion;

    /*
     * Extension managed by user or Azure.
     */
    private ExtensionManagedBy managedBy;

    /**
     * Creates an instance of HciEdgeDeviceArcExtension class.
     */
    public HciEdgeDeviceArcExtension() {
    }

    /**
     * Get the extensionName property: Arc extension name installed on edge device.
     * 
     * @return the extensionName value.
     */
    public String extensionName() {
        return this.extensionName;
    }

    /**
     * Get the state property: Arc extension state from arc machine extension.
     * 
     * @return the state value.
     */
    public ArcExtensionState state() {
        return this.state;
    }

    /**
     * Get the errorDetails property: Error details while installing Arc extension.
     * 
     * @return the errorDetails value.
     */
    public List<HciValidationFailureDetail> errorDetails() {
        return this.errorDetails;
    }

    /**
     * Get the extensionResourceId property: Arc Extension Azure resource id.
     * 
     * @return the extensionResourceId value.
     */
    public String extensionResourceId() {
        return this.extensionResourceId;
    }

    /**
     * Get the typeHandlerVersion property: Extension version installed.
     * 
     * @return the typeHandlerVersion value.
     */
    public String typeHandlerVersion() {
        return this.typeHandlerVersion;
    }

    /**
     * Get the managedBy property: Extension managed by user or Azure.
     * 
     * @return the managedBy value.
     */
    public ExtensionManagedBy managedBy() {
        return this.managedBy;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (errorDetails() != null) {
            errorDetails().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of HciEdgeDeviceArcExtension from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of HciEdgeDeviceArcExtension if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the HciEdgeDeviceArcExtension.
     */
    public static HciEdgeDeviceArcExtension fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            HciEdgeDeviceArcExtension deserializedHciEdgeDeviceArcExtension = new HciEdgeDeviceArcExtension();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("extensionName".equals(fieldName)) {
                    deserializedHciEdgeDeviceArcExtension.extensionName = reader.getString();
                } else if ("state".equals(fieldName)) {
                    deserializedHciEdgeDeviceArcExtension.state = ArcExtensionState.fromString(reader.getString());
                } else if ("errorDetails".equals(fieldName)) {
                    List<HciValidationFailureDetail> errorDetails
                        = reader.readArray(reader1 -> HciValidationFailureDetail.fromJson(reader1));
                    deserializedHciEdgeDeviceArcExtension.errorDetails = errorDetails;
                } else if ("extensionResourceId".equals(fieldName)) {
                    deserializedHciEdgeDeviceArcExtension.extensionResourceId = reader.getString();
                } else if ("typeHandlerVersion".equals(fieldName)) {
                    deserializedHciEdgeDeviceArcExtension.typeHandlerVersion = reader.getString();
                } else if ("managedBy".equals(fieldName)) {
                    deserializedHciEdgeDeviceArcExtension.managedBy = ExtensionManagedBy.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedHciEdgeDeviceArcExtension;
        });
    }
}
