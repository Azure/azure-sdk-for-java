// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** The PrecheckResultAutoGenerated model. */
@Fluent
public final class PrecheckResultAutoGenerated {
    /*
     * Name of the individual test/rule/alert that was executed. Unique, not exposed to the customer.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * Key-value pairs that allow grouping/filtering individual tests.
     */
    @JsonProperty(value = "tags")
    private PrecheckResultTags tags;

    /*
     * Key-value pairs that allow grouping/filtering individual tests.
     */
    @JsonProperty(value = "healthCheckTags")
    private Object healthCheckTags;

    /*
     * User-facing name; one or more sentences indicating the direct issue.
     */
    @JsonProperty(value = "title")
    private String title;

    /*
     * The status of the check running (i.e. Failed, Succeeded, In Progress). This answers whether the check ran, and
     * passed or failed.
     */
    @JsonProperty(value = "status")
    private Status status;

    /*
     * Severity of the result (Critical, Warning, Informational, Hidden). This answers how important the result is.
     * Critical is the only update-blocking severity.
     */
    @JsonProperty(value = "severity")
    private SeverityAutoGenerated severity;

    /*
     * Detailed overview of the issue and what impact the issue has on the stamp.
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * Set of steps that can be taken to resolve the issue found.
     */
    @JsonProperty(value = "remediation")
    private String remediation;

    /*
     * The unique identifier for the affected resource (such as a node or drive).
     */
    @JsonProperty(value = "targetResourceID")
    private String targetResourceId;

    /*
     * The name of the affected resource.
     */
    @JsonProperty(value = "targetResourceName")
    private String targetResourceName;

    /*
     * The type of resource being referred to (well-known set of nouns in infrastructure, aligning with Monitoring).
     */
    @JsonProperty(value = "targetResourceType")
    private String targetResourceType;

    /*
     * The Time in which the HealthCheck was called.
     */
    @JsonProperty(value = "timestamp")
    private OffsetDateTime timestamp;

    /*
     * Property bag of key value pairs for additional information.
     */
    @JsonProperty(value = "additionalData")
    private String additionalData;

    /*
     * The name of the services called for the HealthCheck (I.E. Test-AzureStack, Test-Cluster).
     */
    @JsonProperty(value = "healthCheckSource")
    private String healthCheckSource;

    /** Creates an instance of PrecheckResultAutoGenerated class. */
    public PrecheckResultAutoGenerated() {
    }

    /**
     * Get the name property: Name of the individual test/rule/alert that was executed. Unique, not exposed to the
     * customer.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Name of the individual test/rule/alert that was executed. Unique, not exposed to the
     * customer.
     *
     * @param name the name value to set.
     * @return the PrecheckResultAutoGenerated object itself.
     */
    public PrecheckResultAutoGenerated withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the tags property: Key-value pairs that allow grouping/filtering individual tests.
     *
     * @return the tags value.
     */
    public PrecheckResultTags tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Key-value pairs that allow grouping/filtering individual tests.
     *
     * @param tags the tags value to set.
     * @return the PrecheckResultAutoGenerated object itself.
     */
    public PrecheckResultAutoGenerated withTags(PrecheckResultTags tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the healthCheckTags property: Key-value pairs that allow grouping/filtering individual tests.
     *
     * @return the healthCheckTags value.
     */
    public Object healthCheckTags() {
        return this.healthCheckTags;
    }

    /**
     * Set the healthCheckTags property: Key-value pairs that allow grouping/filtering individual tests.
     *
     * @param healthCheckTags the healthCheckTags value to set.
     * @return the PrecheckResultAutoGenerated object itself.
     */
    public PrecheckResultAutoGenerated withHealthCheckTags(Object healthCheckTags) {
        this.healthCheckTags = healthCheckTags;
        return this;
    }

    /**
     * Get the title property: User-facing name; one or more sentences indicating the direct issue.
     *
     * @return the title value.
     */
    public String title() {
        return this.title;
    }

    /**
     * Set the title property: User-facing name; one or more sentences indicating the direct issue.
     *
     * @param title the title value to set.
     * @return the PrecheckResultAutoGenerated object itself.
     */
    public PrecheckResultAutoGenerated withTitle(String title) {
        this.title = title;
        return this;
    }

    /**
     * Get the status property: The status of the check running (i.e. Failed, Succeeded, In Progress). This answers
     * whether the check ran, and passed or failed.
     *
     * @return the status value.
     */
    public Status status() {
        return this.status;
    }

    /**
     * Set the status property: The status of the check running (i.e. Failed, Succeeded, In Progress). This answers
     * whether the check ran, and passed or failed.
     *
     * @param status the status value to set.
     * @return the PrecheckResultAutoGenerated object itself.
     */
    public PrecheckResultAutoGenerated withStatus(Status status) {
        this.status = status;
        return this;
    }

    /**
     * Get the severity property: Severity of the result (Critical, Warning, Informational, Hidden). This answers how
     * important the result is. Critical is the only update-blocking severity.
     *
     * @return the severity value.
     */
    public SeverityAutoGenerated severity() {
        return this.severity;
    }

    /**
     * Set the severity property: Severity of the result (Critical, Warning, Informational, Hidden). This answers how
     * important the result is. Critical is the only update-blocking severity.
     *
     * @param severity the severity value to set.
     * @return the PrecheckResultAutoGenerated object itself.
     */
    public PrecheckResultAutoGenerated withSeverity(SeverityAutoGenerated severity) {
        this.severity = severity;
        return this;
    }

    /**
     * Get the description property: Detailed overview of the issue and what impact the issue has on the stamp.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Detailed overview of the issue and what impact the issue has on the stamp.
     *
     * @param description the description value to set.
     * @return the PrecheckResultAutoGenerated object itself.
     */
    public PrecheckResultAutoGenerated withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the remediation property: Set of steps that can be taken to resolve the issue found.
     *
     * @return the remediation value.
     */
    public String remediation() {
        return this.remediation;
    }

    /**
     * Set the remediation property: Set of steps that can be taken to resolve the issue found.
     *
     * @param remediation the remediation value to set.
     * @return the PrecheckResultAutoGenerated object itself.
     */
    public PrecheckResultAutoGenerated withRemediation(String remediation) {
        this.remediation = remediation;
        return this;
    }

    /**
     * Get the targetResourceId property: The unique identifier for the affected resource (such as a node or drive).
     *
     * @return the targetResourceId value.
     */
    public String targetResourceId() {
        return this.targetResourceId;
    }

    /**
     * Set the targetResourceId property: The unique identifier for the affected resource (such as a node or drive).
     *
     * @param targetResourceId the targetResourceId value to set.
     * @return the PrecheckResultAutoGenerated object itself.
     */
    public PrecheckResultAutoGenerated withTargetResourceId(String targetResourceId) {
        this.targetResourceId = targetResourceId;
        return this;
    }

    /**
     * Get the targetResourceName property: The name of the affected resource.
     *
     * @return the targetResourceName value.
     */
    public String targetResourceName() {
        return this.targetResourceName;
    }

    /**
     * Set the targetResourceName property: The name of the affected resource.
     *
     * @param targetResourceName the targetResourceName value to set.
     * @return the PrecheckResultAutoGenerated object itself.
     */
    public PrecheckResultAutoGenerated withTargetResourceName(String targetResourceName) {
        this.targetResourceName = targetResourceName;
        return this;
    }

    /**
     * Get the targetResourceType property: The type of resource being referred to (well-known set of nouns in
     * infrastructure, aligning with Monitoring).
     *
     * @return the targetResourceType value.
     */
    public String targetResourceType() {
        return this.targetResourceType;
    }

    /**
     * Set the targetResourceType property: The type of resource being referred to (well-known set of nouns in
     * infrastructure, aligning with Monitoring).
     *
     * @param targetResourceType the targetResourceType value to set.
     * @return the PrecheckResultAutoGenerated object itself.
     */
    public PrecheckResultAutoGenerated withTargetResourceType(String targetResourceType) {
        this.targetResourceType = targetResourceType;
        return this;
    }

    /**
     * Get the timestamp property: The Time in which the HealthCheck was called.
     *
     * @return the timestamp value.
     */
    public OffsetDateTime timestamp() {
        return this.timestamp;
    }

    /**
     * Set the timestamp property: The Time in which the HealthCheck was called.
     *
     * @param timestamp the timestamp value to set.
     * @return the PrecheckResultAutoGenerated object itself.
     */
    public PrecheckResultAutoGenerated withTimestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }

    /**
     * Get the additionalData property: Property bag of key value pairs for additional information.
     *
     * @return the additionalData value.
     */
    public String additionalData() {
        return this.additionalData;
    }

    /**
     * Set the additionalData property: Property bag of key value pairs for additional information.
     *
     * @param additionalData the additionalData value to set.
     * @return the PrecheckResultAutoGenerated object itself.
     */
    public PrecheckResultAutoGenerated withAdditionalData(String additionalData) {
        this.additionalData = additionalData;
        return this;
    }

    /**
     * Get the healthCheckSource property: The name of the services called for the HealthCheck (I.E. Test-AzureStack,
     * Test-Cluster).
     *
     * @return the healthCheckSource value.
     */
    public String healthCheckSource() {
        return this.healthCheckSource;
    }

    /**
     * Set the healthCheckSource property: The name of the services called for the HealthCheck (I.E. Test-AzureStack,
     * Test-Cluster).
     *
     * @param healthCheckSource the healthCheckSource value to set.
     * @return the PrecheckResultAutoGenerated object itself.
     */
    public PrecheckResultAutoGenerated withHealthCheckSource(String healthCheckSource) {
        this.healthCheckSource = healthCheckSource;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (tags() != null) {
            tags().validate();
        }
    }
}
