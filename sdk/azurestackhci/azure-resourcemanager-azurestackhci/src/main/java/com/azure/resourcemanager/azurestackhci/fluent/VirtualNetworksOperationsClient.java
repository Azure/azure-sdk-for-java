// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.azurestackhci.fluent.models.VirtualNetworksInner;
import com.azure.resourcemanager.azurestackhci.models.VirtualNetworksUpdateRequest;

/** An instance of this class provides access to all the operations defined in VirtualNetworksOperationsClient. */
public interface VirtualNetworksOperationsClient {
    /**
     * The getByResourceGroup operation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Name of the virtual network.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the virtual network resource definition along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<VirtualNetworksInner> getByResourceGroupWithResponse(
        String resourceGroupName, String virtualNetworkName, Context context);

    /**
     * The getByResourceGroup operation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Name of the virtual network.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the virtual network resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VirtualNetworksInner getByResourceGroup(String resourceGroupName, String virtualNetworkName);

    /**
     * The operation to create or update a virtual network. Please note some properties can be set only during virtual
     * network creation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Name of the virtual network.
     * @param virtualNetworks The virtual network resource definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the virtual network resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<VirtualNetworksInner>, VirtualNetworksInner> beginCreateOrUpdate(
        String resourceGroupName, String virtualNetworkName, VirtualNetworksInner virtualNetworks);

    /**
     * The operation to create or update a virtual network. Please note some properties can be set only during virtual
     * network creation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Name of the virtual network.
     * @param virtualNetworks The virtual network resource definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the virtual network resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<VirtualNetworksInner>, VirtualNetworksInner> beginCreateOrUpdate(
        String resourceGroupName, String virtualNetworkName, VirtualNetworksInner virtualNetworks, Context context);

    /**
     * The operation to create or update a virtual network. Please note some properties can be set only during virtual
     * network creation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Name of the virtual network.
     * @param virtualNetworks The virtual network resource definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the virtual network resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VirtualNetworksInner createOrUpdate(
        String resourceGroupName, String virtualNetworkName, VirtualNetworksInner virtualNetworks);

    /**
     * The operation to create or update a virtual network. Please note some properties can be set only during virtual
     * network creation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Name of the virtual network.
     * @param virtualNetworks The virtual network resource definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the virtual network resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VirtualNetworksInner createOrUpdate(
        String resourceGroupName, String virtualNetworkName, VirtualNetworksInner virtualNetworks, Context context);

    /**
     * The operation to delete a virtual network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Name of the virtual network.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String virtualNetworkName, Context context);

    /**
     * The operation to delete a virtual network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Name of the virtual network.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String virtualNetworkName);

    /**
     * The operation to update a virtual network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Name of the virtual network.
     * @param virtualNetworks The virtual network resource patch definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the virtual network resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<VirtualNetworksInner>, VirtualNetworksInner> beginUpdate(
        String resourceGroupName, String virtualNetworkName, VirtualNetworksUpdateRequest virtualNetworks);

    /**
     * The operation to update a virtual network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Name of the virtual network.
     * @param virtualNetworks The virtual network resource patch definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the virtual network resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<VirtualNetworksInner>, VirtualNetworksInner> beginUpdate(
        String resourceGroupName,
        String virtualNetworkName,
        VirtualNetworksUpdateRequest virtualNetworks,
        Context context);

    /**
     * The operation to update a virtual network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Name of the virtual network.
     * @param virtualNetworks The virtual network resource patch definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the virtual network resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VirtualNetworksInner update(
        String resourceGroupName, String virtualNetworkName, VirtualNetworksUpdateRequest virtualNetworks);

    /**
     * The operation to update a virtual network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Name of the virtual network.
     * @param virtualNetworks The virtual network resource patch definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the virtual network resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VirtualNetworksInner update(
        String resourceGroupName,
        String virtualNetworkName,
        VirtualNetworksUpdateRequest virtualNetworks,
        Context context);

    /**
     * Lists all of the virtual networks in the specified resource group. Use the nextLink property in the response to
     * get the next page of virtual networks.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VirtualNetworksInner> listByResourceGroup(String resourceGroupName);

    /**
     * Lists all of the virtual networks in the specified resource group. Use the nextLink property in the response to
     * get the next page of virtual networks.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VirtualNetworksInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Lists all of the virtual networks in the specified subscription. Use the nextLink property in the response to get
     * the next page of virtual networks.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VirtualNetworksInner> list();

    /**
     * Lists all of the virtual networks in the specified subscription. Use the nextLink property in the response to get
     * the next page of virtual networks.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VirtualNetworksInner> list(Context context);
}
