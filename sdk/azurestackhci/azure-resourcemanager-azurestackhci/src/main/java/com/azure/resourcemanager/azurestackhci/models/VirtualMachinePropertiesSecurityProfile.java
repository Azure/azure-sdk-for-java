// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** SecurityProfile - Specifies the security settings for the virtual machine. */
@Fluent
public final class VirtualMachinePropertiesSecurityProfile {
    /*
     * The enableTPM property.
     */
    @JsonProperty(value = "enableTPM")
    private Boolean enableTpm;

    /*
     * The uefiSettings property.
     */
    @JsonProperty(value = "uefiSettings")
    private VirtualMachinePropertiesSecurityProfileUefiSettings uefiSettings;

    /** Creates an instance of VirtualMachinePropertiesSecurityProfile class. */
    public VirtualMachinePropertiesSecurityProfile() {
    }

    /**
     * Get the enableTpm property: The enableTPM property.
     *
     * @return the enableTpm value.
     */
    public Boolean enableTpm() {
        return this.enableTpm;
    }

    /**
     * Set the enableTpm property: The enableTPM property.
     *
     * @param enableTpm the enableTpm value to set.
     * @return the VirtualMachinePropertiesSecurityProfile object itself.
     */
    public VirtualMachinePropertiesSecurityProfile withEnableTpm(Boolean enableTpm) {
        this.enableTpm = enableTpm;
        return this;
    }

    /**
     * Get the uefiSettings property: The uefiSettings property.
     *
     * @return the uefiSettings value.
     */
    public VirtualMachinePropertiesSecurityProfileUefiSettings uefiSettings() {
        return this.uefiSettings;
    }

    /**
     * Set the uefiSettings property: The uefiSettings property.
     *
     * @param uefiSettings the uefiSettings value to set.
     * @return the VirtualMachinePropertiesSecurityProfile object itself.
     */
    public VirtualMachinePropertiesSecurityProfile withUefiSettings(
        VirtualMachinePropertiesSecurityProfileUefiSettings uefiSettings) {
        this.uefiSettings = uefiSettings;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (uefiSettings() != null) {
            uefiSettings().validate();
        }
    }
}
