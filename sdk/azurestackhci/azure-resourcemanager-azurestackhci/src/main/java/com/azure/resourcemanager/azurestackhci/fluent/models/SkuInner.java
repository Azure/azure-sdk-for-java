// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.resourcemanager.azurestackhci.models.SkuMappings;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Sku details. */
@Fluent
public final class SkuInner extends ProxyResource {
    /*
     * SKU properties.
     */
    @JsonProperty(value = "properties")
    private SkuProperties innerProperties;

    /** Creates an instance of SkuInner class. */
    public SkuInner() {
    }

    /**
     * Get the innerProperties property: SKU properties.
     *
     * @return the innerProperties value.
     */
    private SkuProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the provisioningState property: Provisioning State.
     *
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the publisherId property: Identifier of the Publisher for the offer.
     *
     * @return the publisherId value.
     */
    public String publisherId() {
        return this.innerProperties() == null ? null : this.innerProperties().publisherId();
    }

    /**
     * Set the publisherId property: Identifier of the Publisher for the offer.
     *
     * @param publisherId the publisherId value to set.
     * @return the SkuInner object itself.
     */
    public SkuInner withPublisherId(String publisherId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SkuProperties();
        }
        this.innerProperties().withPublisherId(publisherId);
        return this;
    }

    /**
     * Get the offerId property: Identifier of the Offer for the sku.
     *
     * @return the offerId value.
     */
    public String offerId() {
        return this.innerProperties() == null ? null : this.innerProperties().offerId();
    }

    /**
     * Set the offerId property: Identifier of the Offer for the sku.
     *
     * @param offerId the offerId value to set.
     * @return the SkuInner object itself.
     */
    public SkuInner withOfferId(String offerId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SkuProperties();
        }
        this.innerProperties().withOfferId(offerId);
        return this;
    }

    /**
     * Get the content property: JSON serialized catalog content of the sku offer.
     *
     * @return the content value.
     */
    public String content() {
        return this.innerProperties() == null ? null : this.innerProperties().content();
    }

    /**
     * Set the content property: JSON serialized catalog content of the sku offer.
     *
     * @param content the content value to set.
     * @return the SkuInner object itself.
     */
    public SkuInner withContent(String content) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SkuProperties();
        }
        this.innerProperties().withContent(content);
        return this;
    }

    /**
     * Get the contentVersion property: The API version of the catalog service used to serve the catalog content.
     *
     * @return the contentVersion value.
     */
    public String contentVersion() {
        return this.innerProperties() == null ? null : this.innerProperties().contentVersion();
    }

    /**
     * Set the contentVersion property: The API version of the catalog service used to serve the catalog content.
     *
     * @param contentVersion the contentVersion value to set.
     * @return the SkuInner object itself.
     */
    public SkuInner withContentVersion(String contentVersion) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SkuProperties();
        }
        this.innerProperties().withContentVersion(contentVersion);
        return this;
    }

    /**
     * Get the skuMappings property: Array of SKU mappings.
     *
     * @return the skuMappings value.
     */
    public List<SkuMappings> skuMappings() {
        return this.innerProperties() == null ? null : this.innerProperties().skuMappings();
    }

    /**
     * Set the skuMappings property: Array of SKU mappings.
     *
     * @param skuMappings the skuMappings value to set.
     * @return the SkuInner object itself.
     */
    public SkuInner withSkuMappings(List<SkuMappings> skuMappings) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SkuProperties();
        }
        this.innerProperties().withSkuMappings(skuMappings);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
