// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.azurestackhci.models.ArcSettingAggregateState;
import com.azure.resourcemanager.azurestackhci.models.CreatedByType;
import com.azure.resourcemanager.azurestackhci.models.PerNodeState;
import com.azure.resourcemanager.azurestackhci.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;

/** ArcSetting details. */
@JsonFlatten
@Fluent
public class ArcSettingInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ArcSettingInner.class);

    /*
     * Provisioning state of the ArcSetting proxy resource.
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * The resource group that hosts the Arc agents, ie. Hybrid Compute Machine
     * resources.
     */
    @JsonProperty(value = "properties.arcInstanceResourceGroup", access = JsonProperty.Access.WRITE_ONLY)
    private String arcInstanceResourceGroup;

    /*
     * Aggregate state of Arc agent across the nodes in this HCI cluster.
     */
    @JsonProperty(value = "properties.aggregateState", access = JsonProperty.Access.WRITE_ONLY)
    private ArcSettingAggregateState aggregateState;

    /*
     * State of Arc agent in each of the nodes.
     */
    @JsonProperty(value = "properties.perNodeDetails", access = JsonProperty.Access.WRITE_ONLY)
    private List<PerNodeState> perNodeDetails;

    /*
     * The identity that created the resource.
     */
    @JsonProperty(value = "systemData.createdBy")
    private String createdBy;

    /*
     * The type of identity that created the resource.
     */
    @JsonProperty(value = "systemData.createdByType")
    private CreatedByType createdByType;

    /*
     * The timestamp of resource creation (UTC).
     */
    @JsonProperty(value = "systemData.createdAt")
    private OffsetDateTime createdAt;

    /*
     * The identity that last modified the resource.
     */
    @JsonProperty(value = "systemData.lastModifiedBy")
    private String lastModifiedBy;

    /*
     * The type of identity that last modified the resource.
     */
    @JsonProperty(value = "systemData.lastModifiedByType")
    private CreatedByType lastModifiedByType;

    /*
     * The timestamp of resource last modification (UTC)
     */
    @JsonProperty(value = "systemData.lastModifiedAt")
    private OffsetDateTime lastModifiedAt;

    /**
     * Get the provisioningState property: Provisioning state of the ArcSetting proxy resource.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the arcInstanceResourceGroup property: The resource group that hosts the Arc agents, ie. Hybrid Compute
     * Machine resources.
     *
     * @return the arcInstanceResourceGroup value.
     */
    public String arcInstanceResourceGroup() {
        return this.arcInstanceResourceGroup;
    }

    /**
     * Get the aggregateState property: Aggregate state of Arc agent across the nodes in this HCI cluster.
     *
     * @return the aggregateState value.
     */
    public ArcSettingAggregateState aggregateState() {
        return this.aggregateState;
    }

    /**
     * Get the perNodeDetails property: State of Arc agent in each of the nodes.
     *
     * @return the perNodeDetails value.
     */
    public List<PerNodeState> perNodeDetails() {
        return this.perNodeDetails;
    }

    /**
     * Get the createdBy property: The identity that created the resource.
     *
     * @return the createdBy value.
     */
    public String createdBy() {
        return this.createdBy;
    }

    /**
     * Set the createdBy property: The identity that created the resource.
     *
     * @param createdBy the createdBy value to set.
     * @return the ArcSettingInner object itself.
     */
    public ArcSettingInner withCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Get the createdByType property: The type of identity that created the resource.
     *
     * @return the createdByType value.
     */
    public CreatedByType createdByType() {
        return this.createdByType;
    }

    /**
     * Set the createdByType property: The type of identity that created the resource.
     *
     * @param createdByType the createdByType value to set.
     * @return the ArcSettingInner object itself.
     */
    public ArcSettingInner withCreatedByType(CreatedByType createdByType) {
        this.createdByType = createdByType;
        return this;
    }

    /**
     * Get the createdAt property: The timestamp of resource creation (UTC).
     *
     * @return the createdAt value.
     */
    public OffsetDateTime createdAt() {
        return this.createdAt;
    }

    /**
     * Set the createdAt property: The timestamp of resource creation (UTC).
     *
     * @param createdAt the createdAt value to set.
     * @return the ArcSettingInner object itself.
     */
    public ArcSettingInner withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Get the lastModifiedBy property: The identity that last modified the resource.
     *
     * @return the lastModifiedBy value.
     */
    public String lastModifiedBy() {
        return this.lastModifiedBy;
    }

    /**
     * Set the lastModifiedBy property: The identity that last modified the resource.
     *
     * @param lastModifiedBy the lastModifiedBy value to set.
     * @return the ArcSettingInner object itself.
     */
    public ArcSettingInner withLastModifiedBy(String lastModifiedBy) {
        this.lastModifiedBy = lastModifiedBy;
        return this;
    }

    /**
     * Get the lastModifiedByType property: The type of identity that last modified the resource.
     *
     * @return the lastModifiedByType value.
     */
    public CreatedByType lastModifiedByType() {
        return this.lastModifiedByType;
    }

    /**
     * Set the lastModifiedByType property: The type of identity that last modified the resource.
     *
     * @param lastModifiedByType the lastModifiedByType value to set.
     * @return the ArcSettingInner object itself.
     */
    public ArcSettingInner withLastModifiedByType(CreatedByType lastModifiedByType) {
        this.lastModifiedByType = lastModifiedByType;
        return this;
    }

    /**
     * Get the lastModifiedAt property: The timestamp of resource last modification (UTC).
     *
     * @return the lastModifiedAt value.
     */
    public OffsetDateTime lastModifiedAt() {
        return this.lastModifiedAt;
    }

    /**
     * Set the lastModifiedAt property: The timestamp of resource last modification (UTC).
     *
     * @param lastModifiedAt the lastModifiedAt value to set.
     * @return the ArcSettingInner object itself.
     */
    public ArcSettingInner withLastModifiedAt(OffsetDateTime lastModifiedAt) {
        this.lastModifiedAt = lastModifiedAt;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (perNodeDetails() != null) {
            perNodeDetails().forEach(e -> e.validate());
        }
    }
}
