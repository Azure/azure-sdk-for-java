// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Desired properties of the cluster. */
@Fluent
public final class ClusterDesiredProperties {
    /*
     * Desired state of Windows Server Subscription.
     */
    @JsonProperty(value = "windowsServerSubscription")
    private WindowsServerSubscription windowsServerSubscription;

    /*
     * Desired level of diagnostic data emitted by the cluster.
     */
    @JsonProperty(value = "diagnosticLevel")
    private DiagnosticLevel diagnosticLevel;

    /**
     * Get the windowsServerSubscription property: Desired state of Windows Server Subscription.
     *
     * @return the windowsServerSubscription value.
     */
    public WindowsServerSubscription windowsServerSubscription() {
        return this.windowsServerSubscription;
    }

    /**
     * Set the windowsServerSubscription property: Desired state of Windows Server Subscription.
     *
     * @param windowsServerSubscription the windowsServerSubscription value to set.
     * @return the ClusterDesiredProperties object itself.
     */
    public ClusterDesiredProperties withWindowsServerSubscription(WindowsServerSubscription windowsServerSubscription) {
        this.windowsServerSubscription = windowsServerSubscription;
        return this;
    }

    /**
     * Get the diagnosticLevel property: Desired level of diagnostic data emitted by the cluster.
     *
     * @return the diagnosticLevel value.
     */
    public DiagnosticLevel diagnosticLevel() {
        return this.diagnosticLevel;
    }

    /**
     * Set the diagnosticLevel property: Desired level of diagnostic data emitted by the cluster.
     *
     * @param diagnosticLevel the diagnosticLevel value to set.
     * @return the ClusterDesiredProperties object itself.
     */
    public ClusterDesiredProperties withDiagnosticLevel(DiagnosticLevel diagnosticLevel) {
        this.diagnosticLevel = diagnosticLevel;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
