// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.azurestackhci.fluent.models.NetworkInterfacesInner;
import com.azure.resourcemanager.azurestackhci.models.NetworkInterfacesUpdateRequest;

/** An instance of this class provides access to all the operations defined in NetworkInterfacesOperationsClient. */
public interface NetworkInterfacesOperationsClient {
    /**
     * Gets a network interface.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a network interface along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<NetworkInterfacesInner> getByResourceGroupWithResponse(
        String resourceGroupName, String networkInterfaceName, Context context);

    /**
     * Gets a network interface.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a network interface.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NetworkInterfacesInner getByResourceGroup(String resourceGroupName, String networkInterfaceName);

    /**
     * The operation to create or update a network interface. Please note some properties can be set only during network
     * interface creation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @param networkInterfaces The network interface resource definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the network interface resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<NetworkInterfacesInner>, NetworkInterfacesInner> beginCreateOrUpdate(
        String resourceGroupName, String networkInterfaceName, NetworkInterfacesInner networkInterfaces);

    /**
     * The operation to create or update a network interface. Please note some properties can be set only during network
     * interface creation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @param networkInterfaces The network interface resource definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the network interface resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<NetworkInterfacesInner>, NetworkInterfacesInner> beginCreateOrUpdate(
        String resourceGroupName,
        String networkInterfaceName,
        NetworkInterfacesInner networkInterfaces,
        Context context);

    /**
     * The operation to create or update a network interface. Please note some properties can be set only during network
     * interface creation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @param networkInterfaces The network interface resource definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the network interface resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NetworkInterfacesInner createOrUpdate(
        String resourceGroupName, String networkInterfaceName, NetworkInterfacesInner networkInterfaces);

    /**
     * The operation to create or update a network interface. Please note some properties can be set only during network
     * interface creation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @param networkInterfaces The network interface resource definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the network interface resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NetworkInterfacesInner createOrUpdate(
        String resourceGroupName,
        String networkInterfaceName,
        NetworkInterfacesInner networkInterfaces,
        Context context);

    /**
     * The operation to delete a network interface.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String networkInterfaceName);

    /**
     * The operation to delete a network interface.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String networkInterfaceName, Context context);

    /**
     * The operation to delete a network interface.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String networkInterfaceName);

    /**
     * The operation to delete a network interface.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String networkInterfaceName, Context context);

    /**
     * The operation to update a network interface.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @param networkInterfaces The network interface resource patch definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the network interface resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<NetworkInterfacesInner>, NetworkInterfacesInner> beginUpdate(
        String resourceGroupName, String networkInterfaceName, NetworkInterfacesUpdateRequest networkInterfaces);

    /**
     * The operation to update a network interface.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @param networkInterfaces The network interface resource patch definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the network interface resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<NetworkInterfacesInner>, NetworkInterfacesInner> beginUpdate(
        String resourceGroupName,
        String networkInterfaceName,
        NetworkInterfacesUpdateRequest networkInterfaces,
        Context context);

    /**
     * The operation to update a network interface.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @param networkInterfaces The network interface resource patch definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the network interface resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NetworkInterfacesInner update(
        String resourceGroupName, String networkInterfaceName, NetworkInterfacesUpdateRequest networkInterfaces);

    /**
     * The operation to update a network interface.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @param networkInterfaces The network interface resource patch definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the network interface resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NetworkInterfacesInner update(
        String resourceGroupName,
        String networkInterfaceName,
        NetworkInterfacesUpdateRequest networkInterfaces,
        Context context);

    /**
     * Lists all of the network interfaces in the specified resource group. Use the nextLink property in the response to
     * get the next page of network interfaces.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NetworkInterfacesInner> listByResourceGroup(String resourceGroupName);

    /**
     * Lists all of the network interfaces in the specified resource group. Use the nextLink property in the response to
     * get the next page of network interfaces.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NetworkInterfacesInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Lists all of the network interfaces in the specified subscription. Use the nextLink property in the response to
     * get the next page of network interfaces.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NetworkInterfacesInner> list();

    /**
     * Lists all of the network interfaces in the specified subscription. Use the nextLink property in the response to
     * get the next page of network interfaces.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NetworkInterfacesInner> list(Context context);
}
