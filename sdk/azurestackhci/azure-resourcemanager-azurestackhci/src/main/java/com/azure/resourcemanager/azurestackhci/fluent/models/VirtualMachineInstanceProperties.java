// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.azurestackhci.models.GuestAgentInstallStatus;
import com.azure.resourcemanager.azurestackhci.models.HttpProxyConfiguration;
import com.azure.resourcemanager.azurestackhci.models.ProvisioningStateEnum;
import com.azure.resourcemanager.azurestackhci.models.VirtualMachineInstancePropertiesHardwareProfile;
import com.azure.resourcemanager.azurestackhci.models.VirtualMachineInstancePropertiesNetworkProfile;
import com.azure.resourcemanager.azurestackhci.models.VirtualMachineInstancePropertiesOsProfile;
import com.azure.resourcemanager.azurestackhci.models.VirtualMachineInstancePropertiesSecurityProfile;
import com.azure.resourcemanager.azurestackhci.models.VirtualMachineInstancePropertiesStorageProfile;
import com.azure.resourcemanager.azurestackhci.models.VirtualMachineInstanceStatus;
import com.azure.resourcemanager.azurestackhci.models.VirtualMachineInstanceView;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Properties under the virtual machine instance resource. */
@Fluent
public final class VirtualMachineInstanceProperties {
    /*
     * HardwareProfile - Specifies the hardware settings for the virtual machine instance.
     */
    @JsonProperty(value = "hardwareProfile")
    private VirtualMachineInstancePropertiesHardwareProfile hardwareProfile;

    /*
     * NetworkProfile - describes the network configuration the virtual machine instance
     */
    @JsonProperty(value = "networkProfile")
    private VirtualMachineInstancePropertiesNetworkProfile networkProfile;

    /*
     * OsProfile - describes the configuration of the operating system and sets login data
     */
    @JsonProperty(value = "osProfile")
    private VirtualMachineInstancePropertiesOsProfile osProfile;

    /*
     * SecurityProfile - Specifies the security settings for the virtual machine instance.
     */
    @JsonProperty(value = "securityProfile")
    private VirtualMachineInstancePropertiesSecurityProfile securityProfile;

    /*
     * StorageProfile - contains information about the disks and storage information for the virtual machine instance
     */
    @JsonProperty(value = "storageProfile")
    private VirtualMachineInstancePropertiesStorageProfile storageProfile;

    /*
     * HTTP Proxy configuration for the VM.
     */
    @JsonProperty(value = "httpProxyConfig")
    private HttpProxyConfiguration httpProxyConfig;

    /*
     * Provisioning state of the virtual machine instance.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningStateEnum provisioningState;

    /*
     * The virtual machine instance view.
     */
    @JsonProperty(value = "instanceView", access = JsonProperty.Access.WRITE_ONLY)
    private VirtualMachineInstanceView instanceView;

    /*
     * The observed state of virtual machine instances
     */
    @JsonProperty(value = "status", access = JsonProperty.Access.WRITE_ONLY)
    private VirtualMachineInstanceStatus status;

    /*
     * Guest agent install status.
     */
    @JsonProperty(value = "guestAgentInstallStatus")
    private GuestAgentInstallStatus guestAgentInstallStatus;

    /*
     * Unique identifier for the vm resource.
     */
    @JsonProperty(value = "vmId", access = JsonProperty.Access.WRITE_ONLY)
    private String vmId;

    /*
     * Unique identifier defined by ARC to identify the guest of the VM.
     */
    @JsonProperty(value = "resourceUid")
    private String resourceUid;

    /** Creates an instance of VirtualMachineInstanceProperties class. */
    public VirtualMachineInstanceProperties() {
    }

    /**
     * Get the hardwareProfile property: HardwareProfile - Specifies the hardware settings for the virtual machine
     * instance.
     *
     * @return the hardwareProfile value.
     */
    public VirtualMachineInstancePropertiesHardwareProfile hardwareProfile() {
        return this.hardwareProfile;
    }

    /**
     * Set the hardwareProfile property: HardwareProfile - Specifies the hardware settings for the virtual machine
     * instance.
     *
     * @param hardwareProfile the hardwareProfile value to set.
     * @return the VirtualMachineInstanceProperties object itself.
     */
    public VirtualMachineInstanceProperties withHardwareProfile(
        VirtualMachineInstancePropertiesHardwareProfile hardwareProfile) {
        this.hardwareProfile = hardwareProfile;
        return this;
    }

    /**
     * Get the networkProfile property: NetworkProfile - describes the network configuration the virtual machine
     * instance.
     *
     * @return the networkProfile value.
     */
    public VirtualMachineInstancePropertiesNetworkProfile networkProfile() {
        return this.networkProfile;
    }

    /**
     * Set the networkProfile property: NetworkProfile - describes the network configuration the virtual machine
     * instance.
     *
     * @param networkProfile the networkProfile value to set.
     * @return the VirtualMachineInstanceProperties object itself.
     */
    public VirtualMachineInstanceProperties withNetworkProfile(
        VirtualMachineInstancePropertiesNetworkProfile networkProfile) {
        this.networkProfile = networkProfile;
        return this;
    }

    /**
     * Get the osProfile property: OsProfile - describes the configuration of the operating system and sets login data.
     *
     * @return the osProfile value.
     */
    public VirtualMachineInstancePropertiesOsProfile osProfile() {
        return this.osProfile;
    }

    /**
     * Set the osProfile property: OsProfile - describes the configuration of the operating system and sets login data.
     *
     * @param osProfile the osProfile value to set.
     * @return the VirtualMachineInstanceProperties object itself.
     */
    public VirtualMachineInstanceProperties withOsProfile(VirtualMachineInstancePropertiesOsProfile osProfile) {
        this.osProfile = osProfile;
        return this;
    }

    /**
     * Get the securityProfile property: SecurityProfile - Specifies the security settings for the virtual machine
     * instance.
     *
     * @return the securityProfile value.
     */
    public VirtualMachineInstancePropertiesSecurityProfile securityProfile() {
        return this.securityProfile;
    }

    /**
     * Set the securityProfile property: SecurityProfile - Specifies the security settings for the virtual machine
     * instance.
     *
     * @param securityProfile the securityProfile value to set.
     * @return the VirtualMachineInstanceProperties object itself.
     */
    public VirtualMachineInstanceProperties withSecurityProfile(
        VirtualMachineInstancePropertiesSecurityProfile securityProfile) {
        this.securityProfile = securityProfile;
        return this;
    }

    /**
     * Get the storageProfile property: StorageProfile - contains information about the disks and storage information
     * for the virtual machine instance.
     *
     * @return the storageProfile value.
     */
    public VirtualMachineInstancePropertiesStorageProfile storageProfile() {
        return this.storageProfile;
    }

    /**
     * Set the storageProfile property: StorageProfile - contains information about the disks and storage information
     * for the virtual machine instance.
     *
     * @param storageProfile the storageProfile value to set.
     * @return the VirtualMachineInstanceProperties object itself.
     */
    public VirtualMachineInstanceProperties withStorageProfile(
        VirtualMachineInstancePropertiesStorageProfile storageProfile) {
        this.storageProfile = storageProfile;
        return this;
    }

    /**
     * Get the httpProxyConfig property: HTTP Proxy configuration for the VM.
     *
     * @return the httpProxyConfig value.
     */
    public HttpProxyConfiguration httpProxyConfig() {
        return this.httpProxyConfig;
    }

    /**
     * Set the httpProxyConfig property: HTTP Proxy configuration for the VM.
     *
     * @param httpProxyConfig the httpProxyConfig value to set.
     * @return the VirtualMachineInstanceProperties object itself.
     */
    public VirtualMachineInstanceProperties withHttpProxyConfig(HttpProxyConfiguration httpProxyConfig) {
        this.httpProxyConfig = httpProxyConfig;
        return this;
    }

    /**
     * Get the provisioningState property: Provisioning state of the virtual machine instance.
     *
     * @return the provisioningState value.
     */
    public ProvisioningStateEnum provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the instanceView property: The virtual machine instance view.
     *
     * @return the instanceView value.
     */
    public VirtualMachineInstanceView instanceView() {
        return this.instanceView;
    }

    /**
     * Get the status property: The observed state of virtual machine instances.
     *
     * @return the status value.
     */
    public VirtualMachineInstanceStatus status() {
        return this.status;
    }

    /**
     * Get the guestAgentInstallStatus property: Guest agent install status.
     *
     * @return the guestAgentInstallStatus value.
     */
    public GuestAgentInstallStatus guestAgentInstallStatus() {
        return this.guestAgentInstallStatus;
    }

    /**
     * Set the guestAgentInstallStatus property: Guest agent install status.
     *
     * @param guestAgentInstallStatus the guestAgentInstallStatus value to set.
     * @return the VirtualMachineInstanceProperties object itself.
     */
    public VirtualMachineInstanceProperties withGuestAgentInstallStatus(
        GuestAgentInstallStatus guestAgentInstallStatus) {
        this.guestAgentInstallStatus = guestAgentInstallStatus;
        return this;
    }

    /**
     * Get the vmId property: Unique identifier for the vm resource.
     *
     * @return the vmId value.
     */
    public String vmId() {
        return this.vmId;
    }

    /**
     * Get the resourceUid property: Unique identifier defined by ARC to identify the guest of the VM.
     *
     * @return the resourceUid value.
     */
    public String resourceUid() {
        return this.resourceUid;
    }

    /**
     * Set the resourceUid property: Unique identifier defined by ARC to identify the guest of the VM.
     *
     * @param resourceUid the resourceUid value to set.
     * @return the VirtualMachineInstanceProperties object itself.
     */
    public VirtualMachineInstanceProperties withResourceUid(String resourceUid) {
        this.resourceUid = resourceUid;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (hardwareProfile() != null) {
            hardwareProfile().validate();
        }
        if (networkProfile() != null) {
            networkProfile().validate();
        }
        if (osProfile() != null) {
            osProfile().validate();
        }
        if (securityProfile() != null) {
            securityProfile().validate();
        }
        if (storageProfile() != null) {
            storageProfile().validate();
        }
        if (httpProxyConfig() != null) {
            httpProxyConfig().validate();
        }
        if (instanceView() != null) {
            instanceView().validate();
        }
        if (status() != null) {
            status().validate();
        }
        if (guestAgentInstallStatus() != null) {
            guestAgentInstallStatus().validate();
        }
    }
}
