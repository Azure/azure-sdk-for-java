// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Windows Configuration for the virtual machine. */
@Fluent
public final class VirtualMachinePropertiesOsProfileWindowsConfiguration {
    /*
     * Whether to EnableAutomaticUpdates on the machine
     */
    @JsonProperty(value = "enableAutomaticUpdates")
    private Boolean enableAutomaticUpdates;

    /*
     * SSH Configuration
     */
    @JsonProperty(value = "ssh")
    private VirtualMachinePropertiesOsProfileWindowsConfigurationSsh ssh;

    /*
     * TimeZone for the virtual machine
     */
    @JsonProperty(value = "timeZone")
    private String timeZone;

    /*
     * Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine
     * creation process.
     */
    @JsonProperty(value = "provisionVMAgent")
    private Boolean provisionVMAgent;

    /** Creates an instance of VirtualMachinePropertiesOsProfileWindowsConfiguration class. */
    public VirtualMachinePropertiesOsProfileWindowsConfiguration() {
    }

    /**
     * Get the enableAutomaticUpdates property: Whether to EnableAutomaticUpdates on the machine.
     *
     * @return the enableAutomaticUpdates value.
     */
    public Boolean enableAutomaticUpdates() {
        return this.enableAutomaticUpdates;
    }

    /**
     * Set the enableAutomaticUpdates property: Whether to EnableAutomaticUpdates on the machine.
     *
     * @param enableAutomaticUpdates the enableAutomaticUpdates value to set.
     * @return the VirtualMachinePropertiesOsProfileWindowsConfiguration object itself.
     */
    public VirtualMachinePropertiesOsProfileWindowsConfiguration withEnableAutomaticUpdates(
        Boolean enableAutomaticUpdates) {
        this.enableAutomaticUpdates = enableAutomaticUpdates;
        return this;
    }

    /**
     * Get the ssh property: SSH Configuration.
     *
     * @return the ssh value.
     */
    public VirtualMachinePropertiesOsProfileWindowsConfigurationSsh ssh() {
        return this.ssh;
    }

    /**
     * Set the ssh property: SSH Configuration.
     *
     * @param ssh the ssh value to set.
     * @return the VirtualMachinePropertiesOsProfileWindowsConfiguration object itself.
     */
    public VirtualMachinePropertiesOsProfileWindowsConfiguration withSsh(
        VirtualMachinePropertiesOsProfileWindowsConfigurationSsh ssh) {
        this.ssh = ssh;
        return this;
    }

    /**
     * Get the timeZone property: TimeZone for the virtual machine.
     *
     * @return the timeZone value.
     */
    public String timeZone() {
        return this.timeZone;
    }

    /**
     * Set the timeZone property: TimeZone for the virtual machine.
     *
     * @param timeZone the timeZone value to set.
     * @return the VirtualMachinePropertiesOsProfileWindowsConfiguration object itself.
     */
    public VirtualMachinePropertiesOsProfileWindowsConfiguration withTimeZone(String timeZone) {
        this.timeZone = timeZone;
        return this;
    }

    /**
     * Get the provisionVMAgent property: Used to indicate whether Arc for Servers agent onboarding should be triggered
     * during the virtual machine creation process.
     *
     * @return the provisionVMAgent value.
     */
    public Boolean provisionVMAgent() {
        return this.provisionVMAgent;
    }

    /**
     * Set the provisionVMAgent property: Used to indicate whether Arc for Servers agent onboarding should be triggered
     * during the virtual machine creation process.
     *
     * @param provisionVMAgent the provisionVMAgent value to set.
     * @return the VirtualMachinePropertiesOsProfileWindowsConfiguration object itself.
     */
    public VirtualMachinePropertiesOsProfileWindowsConfiguration withProvisionVMAgent(Boolean provisionVMAgent) {
        this.provisionVMAgent = provisionVMAgent;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (ssh() != null) {
            ssh().validate();
        }
    }
}
