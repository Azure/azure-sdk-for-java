// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.azurestackhci.fluent.models.Step;
import com.azure.resourcemanager.azurestackhci.fluent.models.UpdateRunInner;
import java.time.OffsetDateTime;
import java.util.List;

/**
 * An immutable client-side representation of UpdateRun.
 */
public interface UpdateRun {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the provisioningState property: Provisioning state of the UpdateRuns proxy resource.
     * 
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the timeStarted property: Timestamp of the update run was started.
     * 
     * @return the timeStarted value.
     */
    OffsetDateTime timeStarted();

    /**
     * Gets the lastUpdatedTime property: Timestamp of the most recently completed step in the update run.
     * 
     * @return the lastUpdatedTime value.
     */
    OffsetDateTime lastUpdatedTime();

    /**
     * Gets the duration property: Duration of the update run.
     * 
     * @return the duration value.
     */
    String duration();

    /**
     * Gets the state property: State of the update run.
     * 
     * @return the state value.
     */
    UpdateRunPropertiesState state();

    /**
     * Gets the namePropertiesName property: Name of the step.
     * 
     * @return the namePropertiesName value.
     */
    String namePropertiesName();

    /**
     * Gets the description property: More detailed description of the step.
     * 
     * @return the description value.
     */
    String description();

    /**
     * Gets the errorMessage property: Error message, specified if the step is in a failed state.
     * 
     * @return the errorMessage value.
     */
    String errorMessage();

    /**
     * Gets the status property: Status of the step, bubbled up from the ECE action plan for installation attempts.
     * Values are: 'Success', 'Error', 'InProgress', and 'Unknown status'.
     * 
     * @return the status value.
     */
    String status();

    /**
     * Gets the startTimeUtc property: When the step started, or empty if it has not started executing.
     * 
     * @return the startTimeUtc value.
     */
    OffsetDateTime startTimeUtc();

    /**
     * Gets the endTimeUtc property: When the step reached a terminal state.
     * 
     * @return the endTimeUtc value.
     */
    OffsetDateTime endTimeUtc();

    /**
     * Gets the lastUpdatedTimeUtc property: Completion time of this step or the last completed sub-step.
     * 
     * @return the lastUpdatedTimeUtc value.
     */
    OffsetDateTime lastUpdatedTimeUtc();

    /**
     * Gets the expectedExecutionTime property: Expected execution time of a given step. This is optionally authored in
     * the update action plan and can be empty.
     * 
     * @return the expectedExecutionTime value.
     */
    String expectedExecutionTime();

    /**
     * Gets the steps property: Recursive model for child steps of this step.
     * 
     * @return the steps value.
     */
    List<Step> steps();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.azurestackhci.fluent.models.UpdateRunInner object.
     * 
     * @return the inner object.
     */
    UpdateRunInner innerModel();

    /**
     * The entirety of the UpdateRun definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The UpdateRun definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the UpdateRun definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the UpdateRun definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, clusterName, updateName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param clusterName The name of the cluster.
             * @param updateName The name of the Update.
             * @return the next definition stage.
             */
            WithCreate withExistingUpdate(String resourceGroupName, String clusterName, String updateName);
        }

        /**
         * The stage of the UpdateRun definition which contains all the minimum required properties for the resource to
         * be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithLocation, DefinitionStages.WithTimeStarted,
            DefinitionStages.WithLastUpdatedTime, DefinitionStages.WithDuration, DefinitionStages.WithState,
            DefinitionStages.WithNamePropertiesName, DefinitionStages.WithDescription,
            DefinitionStages.WithErrorMessage, DefinitionStages.WithStatus, DefinitionStages.WithStartTimeUtc,
            DefinitionStages.WithEndTimeUtc, DefinitionStages.WithLastUpdatedTimeUtc,
            DefinitionStages.WithExpectedExecutionTime, DefinitionStages.WithSteps {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            UpdateRun create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            UpdateRun create(Context context);
        }

        /**
         * The stage of the UpdateRun definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithCreate withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithCreate withRegion(String location);
        }

        /**
         * The stage of the UpdateRun definition allowing to specify timeStarted.
         */
        interface WithTimeStarted {
            /**
             * Specifies the timeStarted property: Timestamp of the update run was started..
             * 
             * @param timeStarted Timestamp of the update run was started.
             * @return the next definition stage.
             */
            WithCreate withTimeStarted(OffsetDateTime timeStarted);
        }

        /**
         * The stage of the UpdateRun definition allowing to specify lastUpdatedTime.
         */
        interface WithLastUpdatedTime {
            /**
             * Specifies the lastUpdatedTime property: Timestamp of the most recently completed step in the update run..
             * 
             * @param lastUpdatedTime Timestamp of the most recently completed step in the update run.
             * @return the next definition stage.
             */
            WithCreate withLastUpdatedTime(OffsetDateTime lastUpdatedTime);
        }

        /**
         * The stage of the UpdateRun definition allowing to specify duration.
         */
        interface WithDuration {
            /**
             * Specifies the duration property: Duration of the update run..
             * 
             * @param duration Duration of the update run.
             * @return the next definition stage.
             */
            WithCreate withDuration(String duration);
        }

        /**
         * The stage of the UpdateRun definition allowing to specify state.
         */
        interface WithState {
            /**
             * Specifies the state property: State of the update run..
             * 
             * @param state State of the update run.
             * @return the next definition stage.
             */
            WithCreate withState(UpdateRunPropertiesState state);
        }

        /**
         * The stage of the UpdateRun definition allowing to specify namePropertiesName.
         */
        interface WithNamePropertiesName {
            /**
             * Specifies the namePropertiesName property: Name of the step..
             * 
             * @param namePropertiesName Name of the step.
             * @return the next definition stage.
             */
            WithCreate withNamePropertiesName(String namePropertiesName);
        }

        /**
         * The stage of the UpdateRun definition allowing to specify description.
         */
        interface WithDescription {
            /**
             * Specifies the description property: More detailed description of the step..
             * 
             * @param description More detailed description of the step.
             * @return the next definition stage.
             */
            WithCreate withDescription(String description);
        }

        /**
         * The stage of the UpdateRun definition allowing to specify errorMessage.
         */
        interface WithErrorMessage {
            /**
             * Specifies the errorMessage property: Error message, specified if the step is in a failed state..
             * 
             * @param errorMessage Error message, specified if the step is in a failed state.
             * @return the next definition stage.
             */
            WithCreate withErrorMessage(String errorMessage);
        }

        /**
         * The stage of the UpdateRun definition allowing to specify status.
         */
        interface WithStatus {
            /**
             * Specifies the status property: Status of the step, bubbled up from the ECE action plan for installation
             * attempts. Values are: 'Success', 'Error', 'InProgress', and 'Unknown status'..
             * 
             * @param status Status of the step, bubbled up from the ECE action plan for installation attempts. Values
             * are: 'Success', 'Error', 'InProgress', and 'Unknown status'.
             * @return the next definition stage.
             */
            WithCreate withStatus(String status);
        }

        /**
         * The stage of the UpdateRun definition allowing to specify startTimeUtc.
         */
        interface WithStartTimeUtc {
            /**
             * Specifies the startTimeUtc property: When the step started, or empty if it has not started executing..
             * 
             * @param startTimeUtc When the step started, or empty if it has not started executing.
             * @return the next definition stage.
             */
            WithCreate withStartTimeUtc(OffsetDateTime startTimeUtc);
        }

        /**
         * The stage of the UpdateRun definition allowing to specify endTimeUtc.
         */
        interface WithEndTimeUtc {
            /**
             * Specifies the endTimeUtc property: When the step reached a terminal state..
             * 
             * @param endTimeUtc When the step reached a terminal state.
             * @return the next definition stage.
             */
            WithCreate withEndTimeUtc(OffsetDateTime endTimeUtc);
        }

        /**
         * The stage of the UpdateRun definition allowing to specify lastUpdatedTimeUtc.
         */
        interface WithLastUpdatedTimeUtc {
            /**
             * Specifies the lastUpdatedTimeUtc property: Completion time of this step or the last completed sub-step..
             * 
             * @param lastUpdatedTimeUtc Completion time of this step or the last completed sub-step.
             * @return the next definition stage.
             */
            WithCreate withLastUpdatedTimeUtc(OffsetDateTime lastUpdatedTimeUtc);
        }

        /**
         * The stage of the UpdateRun definition allowing to specify expectedExecutionTime.
         */
        interface WithExpectedExecutionTime {
            /**
             * Specifies the expectedExecutionTime property: Expected execution time of a given step. This is optionally
             * authored in the update action plan and can be empty..
             * 
             * @param expectedExecutionTime Expected execution time of a given step. This is optionally authored in the
             * update action plan and can be empty.
             * @return the next definition stage.
             */
            WithCreate withExpectedExecutionTime(String expectedExecutionTime);
        }

        /**
         * The stage of the UpdateRun definition allowing to specify steps.
         */
        interface WithSteps {
            /**
             * Specifies the steps property: Recursive model for child steps of this step..
             * 
             * @param steps Recursive model for child steps of this step.
             * @return the next definition stage.
             */
            WithCreate withSteps(List<Step> steps);
        }
    }

    /**
     * Begins update for the UpdateRun resource.
     * 
     * @return the stage of resource update.
     */
    UpdateRun.Update update();

    /**
     * The template for UpdateRun update.
     */
    interface Update extends UpdateStages.WithTimeStarted, UpdateStages.WithLastUpdatedTime, UpdateStages.WithDuration,
        UpdateStages.WithState, UpdateStages.WithNamePropertiesName, UpdateStages.WithDescription,
        UpdateStages.WithErrorMessage, UpdateStages.WithStatus, UpdateStages.WithStartTimeUtc,
        UpdateStages.WithEndTimeUtc, UpdateStages.WithLastUpdatedTimeUtc, UpdateStages.WithExpectedExecutionTime,
        UpdateStages.WithSteps {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        UpdateRun apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        UpdateRun apply(Context context);
    }

    /**
     * The UpdateRun update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the UpdateRun update allowing to specify timeStarted.
         */
        interface WithTimeStarted {
            /**
             * Specifies the timeStarted property: Timestamp of the update run was started..
             * 
             * @param timeStarted Timestamp of the update run was started.
             * @return the next definition stage.
             */
            Update withTimeStarted(OffsetDateTime timeStarted);
        }

        /**
         * The stage of the UpdateRun update allowing to specify lastUpdatedTime.
         */
        interface WithLastUpdatedTime {
            /**
             * Specifies the lastUpdatedTime property: Timestamp of the most recently completed step in the update run..
             * 
             * @param lastUpdatedTime Timestamp of the most recently completed step in the update run.
             * @return the next definition stage.
             */
            Update withLastUpdatedTime(OffsetDateTime lastUpdatedTime);
        }

        /**
         * The stage of the UpdateRun update allowing to specify duration.
         */
        interface WithDuration {
            /**
             * Specifies the duration property: Duration of the update run..
             * 
             * @param duration Duration of the update run.
             * @return the next definition stage.
             */
            Update withDuration(String duration);
        }

        /**
         * The stage of the UpdateRun update allowing to specify state.
         */
        interface WithState {
            /**
             * Specifies the state property: State of the update run..
             * 
             * @param state State of the update run.
             * @return the next definition stage.
             */
            Update withState(UpdateRunPropertiesState state);
        }

        /**
         * The stage of the UpdateRun update allowing to specify namePropertiesName.
         */
        interface WithNamePropertiesName {
            /**
             * Specifies the namePropertiesName property: Name of the step..
             * 
             * @param namePropertiesName Name of the step.
             * @return the next definition stage.
             */
            Update withNamePropertiesName(String namePropertiesName);
        }

        /**
         * The stage of the UpdateRun update allowing to specify description.
         */
        interface WithDescription {
            /**
             * Specifies the description property: More detailed description of the step..
             * 
             * @param description More detailed description of the step.
             * @return the next definition stage.
             */
            Update withDescription(String description);
        }

        /**
         * The stage of the UpdateRun update allowing to specify errorMessage.
         */
        interface WithErrorMessage {
            /**
             * Specifies the errorMessage property: Error message, specified if the step is in a failed state..
             * 
             * @param errorMessage Error message, specified if the step is in a failed state.
             * @return the next definition stage.
             */
            Update withErrorMessage(String errorMessage);
        }

        /**
         * The stage of the UpdateRun update allowing to specify status.
         */
        interface WithStatus {
            /**
             * Specifies the status property: Status of the step, bubbled up from the ECE action plan for installation
             * attempts. Values are: 'Success', 'Error', 'InProgress', and 'Unknown status'..
             * 
             * @param status Status of the step, bubbled up from the ECE action plan for installation attempts. Values
             * are: 'Success', 'Error', 'InProgress', and 'Unknown status'.
             * @return the next definition stage.
             */
            Update withStatus(String status);
        }

        /**
         * The stage of the UpdateRun update allowing to specify startTimeUtc.
         */
        interface WithStartTimeUtc {
            /**
             * Specifies the startTimeUtc property: When the step started, or empty if it has not started executing..
             * 
             * @param startTimeUtc When the step started, or empty if it has not started executing.
             * @return the next definition stage.
             */
            Update withStartTimeUtc(OffsetDateTime startTimeUtc);
        }

        /**
         * The stage of the UpdateRun update allowing to specify endTimeUtc.
         */
        interface WithEndTimeUtc {
            /**
             * Specifies the endTimeUtc property: When the step reached a terminal state..
             * 
             * @param endTimeUtc When the step reached a terminal state.
             * @return the next definition stage.
             */
            Update withEndTimeUtc(OffsetDateTime endTimeUtc);
        }

        /**
         * The stage of the UpdateRun update allowing to specify lastUpdatedTimeUtc.
         */
        interface WithLastUpdatedTimeUtc {
            /**
             * Specifies the lastUpdatedTimeUtc property: Completion time of this step or the last completed sub-step..
             * 
             * @param lastUpdatedTimeUtc Completion time of this step or the last completed sub-step.
             * @return the next definition stage.
             */
            Update withLastUpdatedTimeUtc(OffsetDateTime lastUpdatedTimeUtc);
        }

        /**
         * The stage of the UpdateRun update allowing to specify expectedExecutionTime.
         */
        interface WithExpectedExecutionTime {
            /**
             * Specifies the expectedExecutionTime property: Expected execution time of a given step. This is optionally
             * authored in the update action plan and can be empty..
             * 
             * @param expectedExecutionTime Expected execution time of a given step. This is optionally authored in the
             * update action plan and can be empty.
             * @return the next definition stage.
             */
            Update withExpectedExecutionTime(String expectedExecutionTime);
        }

        /**
         * The stage of the UpdateRun update allowing to specify steps.
         */
        interface WithSteps {
            /**
             * Specifies the steps property: Recursive model for child steps of this step..
             * 
             * @param steps Recursive model for child steps of this step.
             * @return the next definition stage.
             */
            Update withSteps(List<Step> steps);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    UpdateRun refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    UpdateRun refresh(Context context);
}
