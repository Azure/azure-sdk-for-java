// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.azurestackhci.fluent.models.GalleryImagesInner;
import com.azure.resourcemanager.azurestackhci.models.GalleryImagesUpdateRequest;

/** An instance of this class provides access to all the operations defined in GalleryImagesOperationsClient. */
public interface GalleryImagesOperationsClient {
    /**
     * Gets a gallery image.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a gallery image along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<GalleryImagesInner> getByResourceGroupWithResponse(
        String resourceGroupName, String galleryImageName, Context context);

    /**
     * Gets a gallery image.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a gallery image.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GalleryImagesInner getByResourceGroup(String resourceGroupName, String galleryImageName);

    /**
     * The operation to create or update a gallery image. Please note some properties can be set only during gallery
     * image creation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @param galleryImages The gallery images resource definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the gallery images resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<GalleryImagesInner>, GalleryImagesInner> beginCreateOrUpdate(
        String resourceGroupName, String galleryImageName, GalleryImagesInner galleryImages);

    /**
     * The operation to create or update a gallery image. Please note some properties can be set only during gallery
     * image creation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @param galleryImages The gallery images resource definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the gallery images resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<GalleryImagesInner>, GalleryImagesInner> beginCreateOrUpdate(
        String resourceGroupName, String galleryImageName, GalleryImagesInner galleryImages, Context context);

    /**
     * The operation to create or update a gallery image. Please note some properties can be set only during gallery
     * image creation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @param galleryImages The gallery images resource definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the gallery images resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GalleryImagesInner createOrUpdate(
        String resourceGroupName, String galleryImageName, GalleryImagesInner galleryImages);

    /**
     * The operation to create or update a gallery image. Please note some properties can be set only during gallery
     * image creation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @param galleryImages The gallery images resource definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the gallery images resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GalleryImagesInner createOrUpdate(
        String resourceGroupName, String galleryImageName, GalleryImagesInner galleryImages, Context context);

    /**
     * The operation to delete a gallery image.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String galleryImageName);

    /**
     * The operation to delete a gallery image.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String galleryImageName, Context context);

    /**
     * The operation to delete a gallery image.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String galleryImageName);

    /**
     * The operation to delete a gallery image.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String galleryImageName, Context context);

    /**
     * The operation to update a gallery image.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @param galleryImages The gallery images resource patch definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the gallery images resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<GalleryImagesInner>, GalleryImagesInner> beginUpdate(
        String resourceGroupName, String galleryImageName, GalleryImagesUpdateRequest galleryImages);

    /**
     * The operation to update a gallery image.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @param galleryImages The gallery images resource patch definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the gallery images resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<GalleryImagesInner>, GalleryImagesInner> beginUpdate(
        String resourceGroupName, String galleryImageName, GalleryImagesUpdateRequest galleryImages, Context context);

    /**
     * The operation to update a gallery image.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @param galleryImages The gallery images resource patch definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the gallery images resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GalleryImagesInner update(
        String resourceGroupName, String galleryImageName, GalleryImagesUpdateRequest galleryImages);

    /**
     * The operation to update a gallery image.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @param galleryImages The gallery images resource patch definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the gallery images resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GalleryImagesInner update(
        String resourceGroupName, String galleryImageName, GalleryImagesUpdateRequest galleryImages, Context context);

    /**
     * Lists all of the gallery images in the specified resource group. Use the nextLink property in the response to get
     * the next page of gallery images.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of gallery images as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<GalleryImagesInner> listByResourceGroup(String resourceGroupName);

    /**
     * Lists all of the gallery images in the specified resource group. Use the nextLink property in the response to get
     * the next page of gallery images.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of gallery images as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<GalleryImagesInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Lists all of the gallery images in the specified subscription. Use the nextLink property in the response to get
     * the next page of gallery images.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of gallery images as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<GalleryImagesInner> list();

    /**
     * Lists all of the gallery images in the specified subscription. Use the nextLink property in the response to get
     * the next page of gallery images.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of gallery images as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<GalleryImagesInner> list(Context context);
}
