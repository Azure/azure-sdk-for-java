// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.
 */
@Immutable
public final class IsolatedVmAttestationConfiguration implements JsonSerializable<IsolatedVmAttestationConfiguration> {
    /*
     * Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.
     */
    private String attestationResourceId;

    /*
     * Region specific endpoint for relying party service.
     */
    private String relyingPartyServiceEndpoint;

    /*
     * Region specific endpoint for Microsoft Azure Attestation service for the cluster
     */
    private String attestationServiceEndpoint;

    /**
     * Creates an instance of IsolatedVmAttestationConfiguration class.
     */
    public IsolatedVmAttestationConfiguration() {
    }

    /**
     * Get the attestationResourceId property: Fully qualified Azure resource id of the Microsoft Azure attestation
     * resource associated with this cluster.
     * 
     * @return the attestationResourceId value.
     */
    public String attestationResourceId() {
        return this.attestationResourceId;
    }

    /**
     * Get the relyingPartyServiceEndpoint property: Region specific endpoint for relying party service.
     * 
     * @return the relyingPartyServiceEndpoint value.
     */
    public String relyingPartyServiceEndpoint() {
        return this.relyingPartyServiceEndpoint;
    }

    /**
     * Get the attestationServiceEndpoint property: Region specific endpoint for Microsoft Azure Attestation service for
     * the cluster.
     * 
     * @return the attestationServiceEndpoint value.
     */
    public String attestationServiceEndpoint() {
        return this.attestationServiceEndpoint;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of IsolatedVmAttestationConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of IsolatedVmAttestationConfiguration if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the IsolatedVmAttestationConfiguration.
     */
    public static IsolatedVmAttestationConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            IsolatedVmAttestationConfiguration deserializedIsolatedVmAttestationConfiguration
                = new IsolatedVmAttestationConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("attestationResourceId".equals(fieldName)) {
                    deserializedIsolatedVmAttestationConfiguration.attestationResourceId = reader.getString();
                } else if ("relyingPartyServiceEndpoint".equals(fieldName)) {
                    deserializedIsolatedVmAttestationConfiguration.relyingPartyServiceEndpoint = reader.getString();
                } else if ("attestationServiceEndpoint".equals(fieldName)) {
                    deserializedIsolatedVmAttestationConfiguration.attestationServiceEndpoint = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedIsolatedVmAttestationConfiguration;
        });
    }
}
