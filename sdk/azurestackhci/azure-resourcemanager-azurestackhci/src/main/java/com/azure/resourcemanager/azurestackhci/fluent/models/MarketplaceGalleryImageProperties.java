// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.azurestackhci.models.CloudInitDataSource;
import com.azure.resourcemanager.azurestackhci.models.GalleryImageIdentifier;
import com.azure.resourcemanager.azurestackhci.models.GalleryImageVersion;
import com.azure.resourcemanager.azurestackhci.models.HyperVGeneration;
import com.azure.resourcemanager.azurestackhci.models.MarketplaceGalleryImageStatus;
import com.azure.resourcemanager.azurestackhci.models.OperatingSystemTypes;
import com.azure.resourcemanager.azurestackhci.models.ProvisioningStateEnum;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Properties under the marketplace gallery image resource. */
@Fluent
public final class MarketplaceGalleryImageProperties {
    /*
     * Storage ContainerID of the storage container to be used for marketplace gallery image
     */
    @JsonProperty(value = "containerId")
    private String containerId;

    /*
     * Operating system type that the gallery image uses [Windows, Linux]
     */
    @JsonProperty(value = "osType", required = true)
    private OperatingSystemTypes osType;

    /*
     * Datasource for the gallery image when provisioning with cloud-init [NoCloud, Azure]
     */
    @JsonProperty(value = "cloudInitDataSource")
    private CloudInitDataSource cloudInitDataSource;

    /*
     * The hypervisor generation of the Virtual Machine [V1, V2]
     */
    @JsonProperty(value = "hyperVGeneration")
    private HyperVGeneration hyperVGeneration;

    /*
     * This is the gallery image definition identifier.
     */
    @JsonProperty(value = "identifier")
    private GalleryImageIdentifier identifier;

    /*
     * Specifies information about the gallery image version that you want to create or update.
     */
    @JsonProperty(value = "version")
    private GalleryImageVersion version;

    /*
     * Provisioning state of the marketplace gallery image.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningStateEnum provisioningState;

    /*
     * The observed state of marketplace gallery images
     */
    @JsonProperty(value = "status", access = JsonProperty.Access.WRITE_ONLY)
    private MarketplaceGalleryImageStatus status;

    /** Creates an instance of MarketplaceGalleryImageProperties class. */
    public MarketplaceGalleryImageProperties() {
    }

    /**
     * Get the containerId property: Storage ContainerID of the storage container to be used for marketplace gallery
     * image.
     *
     * @return the containerId value.
     */
    public String containerId() {
        return this.containerId;
    }

    /**
     * Set the containerId property: Storage ContainerID of the storage container to be used for marketplace gallery
     * image.
     *
     * @param containerId the containerId value to set.
     * @return the MarketplaceGalleryImageProperties object itself.
     */
    public MarketplaceGalleryImageProperties withContainerId(String containerId) {
        this.containerId = containerId;
        return this;
    }

    /**
     * Get the osType property: Operating system type that the gallery image uses [Windows, Linux].
     *
     * @return the osType value.
     */
    public OperatingSystemTypes osType() {
        return this.osType;
    }

    /**
     * Set the osType property: Operating system type that the gallery image uses [Windows, Linux].
     *
     * @param osType the osType value to set.
     * @return the MarketplaceGalleryImageProperties object itself.
     */
    public MarketplaceGalleryImageProperties withOsType(OperatingSystemTypes osType) {
        this.osType = osType;
        return this;
    }

    /**
     * Get the cloudInitDataSource property: Datasource for the gallery image when provisioning with cloud-init
     * [NoCloud, Azure].
     *
     * @return the cloudInitDataSource value.
     */
    public CloudInitDataSource cloudInitDataSource() {
        return this.cloudInitDataSource;
    }

    /**
     * Set the cloudInitDataSource property: Datasource for the gallery image when provisioning with cloud-init
     * [NoCloud, Azure].
     *
     * @param cloudInitDataSource the cloudInitDataSource value to set.
     * @return the MarketplaceGalleryImageProperties object itself.
     */
    public MarketplaceGalleryImageProperties withCloudInitDataSource(CloudInitDataSource cloudInitDataSource) {
        this.cloudInitDataSource = cloudInitDataSource;
        return this;
    }

    /**
     * Get the hyperVGeneration property: The hypervisor generation of the Virtual Machine [V1, V2].
     *
     * @return the hyperVGeneration value.
     */
    public HyperVGeneration hyperVGeneration() {
        return this.hyperVGeneration;
    }

    /**
     * Set the hyperVGeneration property: The hypervisor generation of the Virtual Machine [V1, V2].
     *
     * @param hyperVGeneration the hyperVGeneration value to set.
     * @return the MarketplaceGalleryImageProperties object itself.
     */
    public MarketplaceGalleryImageProperties withHyperVGeneration(HyperVGeneration hyperVGeneration) {
        this.hyperVGeneration = hyperVGeneration;
        return this;
    }

    /**
     * Get the identifier property: This is the gallery image definition identifier.
     *
     * @return the identifier value.
     */
    public GalleryImageIdentifier identifier() {
        return this.identifier;
    }

    /**
     * Set the identifier property: This is the gallery image definition identifier.
     *
     * @param identifier the identifier value to set.
     * @return the MarketplaceGalleryImageProperties object itself.
     */
    public MarketplaceGalleryImageProperties withIdentifier(GalleryImageIdentifier identifier) {
        this.identifier = identifier;
        return this;
    }

    /**
     * Get the version property: Specifies information about the gallery image version that you want to create or
     * update.
     *
     * @return the version value.
     */
    public GalleryImageVersion version() {
        return this.version;
    }

    /**
     * Set the version property: Specifies information about the gallery image version that you want to create or
     * update.
     *
     * @param version the version value to set.
     * @return the MarketplaceGalleryImageProperties object itself.
     */
    public MarketplaceGalleryImageProperties withVersion(GalleryImageVersion version) {
        this.version = version;
        return this;
    }

    /**
     * Get the provisioningState property: Provisioning state of the marketplace gallery image.
     *
     * @return the provisioningState value.
     */
    public ProvisioningStateEnum provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the status property: The observed state of marketplace gallery images.
     *
     * @return the status value.
     */
    public MarketplaceGalleryImageStatus status() {
        return this.status;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (osType() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property osType in model MarketplaceGalleryImageProperties"));
        }
        if (identifier() != null) {
            identifier().validate();
        }
        if (version() != null) {
            version().validate();
        }
        if (status() != null) {
            status().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(MarketplaceGalleryImageProperties.class);
}
