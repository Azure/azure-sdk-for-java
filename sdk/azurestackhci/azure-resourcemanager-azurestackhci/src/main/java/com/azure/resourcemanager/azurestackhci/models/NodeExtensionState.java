// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * State of Arc Extension in this node.
 */
public final class NodeExtensionState extends ExpandableStringEnum<NodeExtensionState> {
    /**
     * Static value NotSpecified for NodeExtensionState.
     */
    public static final NodeExtensionState NOT_SPECIFIED = fromString("NotSpecified");

    /**
     * Static value Error for NodeExtensionState.
     */
    public static final NodeExtensionState ERROR = fromString("Error");

    /**
     * Static value Succeeded for NodeExtensionState.
     */
    public static final NodeExtensionState SUCCEEDED = fromString("Succeeded");

    /**
     * Static value Canceled for NodeExtensionState.
     */
    public static final NodeExtensionState CANCELED = fromString("Canceled");

    /**
     * Static value Failed for NodeExtensionState.
     */
    public static final NodeExtensionState FAILED = fromString("Failed");

    /**
     * Static value Connected for NodeExtensionState.
     */
    public static final NodeExtensionState CONNECTED = fromString("Connected");

    /**
     * Static value Disconnected for NodeExtensionState.
     */
    public static final NodeExtensionState DISCONNECTED = fromString("Disconnected");

    /**
     * Static value Deleted for NodeExtensionState.
     */
    public static final NodeExtensionState DELETED = fromString("Deleted");

    /**
     * Static value Creating for NodeExtensionState.
     */
    public static final NodeExtensionState CREATING = fromString("Creating");

    /**
     * Static value Updating for NodeExtensionState.
     */
    public static final NodeExtensionState UPDATING = fromString("Updating");

    /**
     * Static value Deleting for NodeExtensionState.
     */
    public static final NodeExtensionState DELETING = fromString("Deleting");

    /**
     * Static value Moving for NodeExtensionState.
     */
    public static final NodeExtensionState MOVING = fromString("Moving");

    /**
     * Static value PartiallySucceeded for NodeExtensionState.
     */
    public static final NodeExtensionState PARTIALLY_SUCCEEDED = fromString("PartiallySucceeded");

    /**
     * Static value PartiallyConnected for NodeExtensionState.
     */
    public static final NodeExtensionState PARTIALLY_CONNECTED = fromString("PartiallyConnected");

    /**
     * Static value InProgress for NodeExtensionState.
     */
    public static final NodeExtensionState IN_PROGRESS = fromString("InProgress");

    /**
     * Static value Accepted for NodeExtensionState.
     */
    public static final NodeExtensionState ACCEPTED = fromString("Accepted");

    /**
     * Static value Provisioning for NodeExtensionState.
     */
    public static final NodeExtensionState PROVISIONING = fromString("Provisioning");

    /**
     * Creates a new instance of NodeExtensionState value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public NodeExtensionState() {
    }

    /**
     * Creates or finds a NodeExtensionState from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding NodeExtensionState.
     */
    public static NodeExtensionState fromString(String name) {
        return fromString(name, NodeExtensionState.class);
    }

    /**
     * Gets known NodeExtensionState values.
     * 
     * @return known NodeExtensionState values.
     */
    public static Collection<NodeExtensionState> values() {
        return values(NodeExtensionState.class);
    }
}
