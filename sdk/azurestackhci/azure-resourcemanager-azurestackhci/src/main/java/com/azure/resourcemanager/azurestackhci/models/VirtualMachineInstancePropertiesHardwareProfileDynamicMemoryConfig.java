// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig model. */
@Fluent
public final class VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig {
    /*
     * The maximumMemoryMB property.
     */
    @JsonProperty(value = "maximumMemoryMB")
    private Long maximumMemoryMB;

    /*
     * The minimumMemoryMB property.
     */
    @JsonProperty(value = "minimumMemoryMB")
    private Long minimumMemoryMB;

    /*
     * Defines the amount of extra memory that should be reserved for a virtual machine instance at runtime, as a
     * percentage of the total memory that the virtual machine instance is thought to need. This only applies to
     * virtual systems with dynamic memory enabled. This property can be in the range of 5 to 2000.
     */
    @JsonProperty(value = "targetMemoryBuffer")
    private Integer targetMemoryBuffer;

    /** Creates an instance of VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig class. */
    public VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig() {
    }

    /**
     * Get the maximumMemoryMB property: The maximumMemoryMB property.
     *
     * @return the maximumMemoryMB value.
     */
    public Long maximumMemoryMB() {
        return this.maximumMemoryMB;
    }

    /**
     * Set the maximumMemoryMB property: The maximumMemoryMB property.
     *
     * @param maximumMemoryMB the maximumMemoryMB value to set.
     * @return the VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig object itself.
     */
    public VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig withMaximumMemoryMB(
        Long maximumMemoryMB) {
        this.maximumMemoryMB = maximumMemoryMB;
        return this;
    }

    /**
     * Get the minimumMemoryMB property: The minimumMemoryMB property.
     *
     * @return the minimumMemoryMB value.
     */
    public Long minimumMemoryMB() {
        return this.minimumMemoryMB;
    }

    /**
     * Set the minimumMemoryMB property: The minimumMemoryMB property.
     *
     * @param minimumMemoryMB the minimumMemoryMB value to set.
     * @return the VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig object itself.
     */
    public VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig withMinimumMemoryMB(
        Long minimumMemoryMB) {
        this.minimumMemoryMB = minimumMemoryMB;
        return this;
    }

    /**
     * Get the targetMemoryBuffer property: Defines the amount of extra memory that should be reserved for a virtual
     * machine instance at runtime, as a percentage of the total memory that the virtual machine instance is thought to
     * need. This only applies to virtual systems with dynamic memory enabled. This property can be in the range of 5 to
     * 2000.
     *
     * @return the targetMemoryBuffer value.
     */
    public Integer targetMemoryBuffer() {
        return this.targetMemoryBuffer;
    }

    /**
     * Set the targetMemoryBuffer property: Defines the amount of extra memory that should be reserved for a virtual
     * machine instance at runtime, as a percentage of the total memory that the virtual machine instance is thought to
     * need. This only applies to virtual systems with dynamic memory enabled. This property can be in the range of 5 to
     * 2000.
     *
     * @param targetMemoryBuffer the targetMemoryBuffer value to set.
     * @return the VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig object itself.
     */
    public VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig withTargetMemoryBuffer(
        Integer targetMemoryBuffer) {
        this.targetMemoryBuffer = targetMemoryBuffer;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
