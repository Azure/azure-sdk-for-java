// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** OsProfile - describes the configuration of the operating system and sets login data. */
@Fluent
public final class VirtualMachinePropertiesOsProfile {
    /*
     * AdminPassword - admin password
     */
    @JsonProperty(value = "adminPassword")
    private String adminPassword;

    /*
     * AdminUsername - admin username
     */
    @JsonProperty(value = "adminUsername")
    private String adminUsername;

    /*
     * ComputerName - name of the compute
     */
    @JsonProperty(value = "computerName")
    private String computerName;

    /*
     * LinuxConfiguration - linux specific configuration values for the virtual machine
     */
    @JsonProperty(value = "linuxConfiguration")
    private VirtualMachinePropertiesOsProfileLinuxConfiguration linuxConfiguration;

    /*
     * OsType - string specifying whether the OS is Linux or Windows
     */
    @JsonProperty(value = "osType")
    private OsTypeEnum osType;

    /*
     * Windows Configuration for the virtual machine
     */
    @JsonProperty(value = "windowsConfiguration")
    private VirtualMachinePropertiesOsProfileWindowsConfiguration windowsConfiguration;

    /** Creates an instance of VirtualMachinePropertiesOsProfile class. */
    public VirtualMachinePropertiesOsProfile() {
    }

    /**
     * Get the adminPassword property: AdminPassword - admin password.
     *
     * @return the adminPassword value.
     */
    public String adminPassword() {
        return this.adminPassword;
    }

    /**
     * Set the adminPassword property: AdminPassword - admin password.
     *
     * @param adminPassword the adminPassword value to set.
     * @return the VirtualMachinePropertiesOsProfile object itself.
     */
    public VirtualMachinePropertiesOsProfile withAdminPassword(String adminPassword) {
        this.adminPassword = adminPassword;
        return this;
    }

    /**
     * Get the adminUsername property: AdminUsername - admin username.
     *
     * @return the adminUsername value.
     */
    public String adminUsername() {
        return this.adminUsername;
    }

    /**
     * Set the adminUsername property: AdminUsername - admin username.
     *
     * @param adminUsername the adminUsername value to set.
     * @return the VirtualMachinePropertiesOsProfile object itself.
     */
    public VirtualMachinePropertiesOsProfile withAdminUsername(String adminUsername) {
        this.adminUsername = adminUsername;
        return this;
    }

    /**
     * Get the computerName property: ComputerName - name of the compute.
     *
     * @return the computerName value.
     */
    public String computerName() {
        return this.computerName;
    }

    /**
     * Set the computerName property: ComputerName - name of the compute.
     *
     * @param computerName the computerName value to set.
     * @return the VirtualMachinePropertiesOsProfile object itself.
     */
    public VirtualMachinePropertiesOsProfile withComputerName(String computerName) {
        this.computerName = computerName;
        return this;
    }

    /**
     * Get the linuxConfiguration property: LinuxConfiguration - linux specific configuration values for the virtual
     * machine.
     *
     * @return the linuxConfiguration value.
     */
    public VirtualMachinePropertiesOsProfileLinuxConfiguration linuxConfiguration() {
        return this.linuxConfiguration;
    }

    /**
     * Set the linuxConfiguration property: LinuxConfiguration - linux specific configuration values for the virtual
     * machine.
     *
     * @param linuxConfiguration the linuxConfiguration value to set.
     * @return the VirtualMachinePropertiesOsProfile object itself.
     */
    public VirtualMachinePropertiesOsProfile withLinuxConfiguration(
        VirtualMachinePropertiesOsProfileLinuxConfiguration linuxConfiguration) {
        this.linuxConfiguration = linuxConfiguration;
        return this;
    }

    /**
     * Get the osType property: OsType - string specifying whether the OS is Linux or Windows.
     *
     * @return the osType value.
     */
    public OsTypeEnum osType() {
        return this.osType;
    }

    /**
     * Set the osType property: OsType - string specifying whether the OS is Linux or Windows.
     *
     * @param osType the osType value to set.
     * @return the VirtualMachinePropertiesOsProfile object itself.
     */
    public VirtualMachinePropertiesOsProfile withOsType(OsTypeEnum osType) {
        this.osType = osType;
        return this;
    }

    /**
     * Get the windowsConfiguration property: Windows Configuration for the virtual machine.
     *
     * @return the windowsConfiguration value.
     */
    public VirtualMachinePropertiesOsProfileWindowsConfiguration windowsConfiguration() {
        return this.windowsConfiguration;
    }

    /**
     * Set the windowsConfiguration property: Windows Configuration for the virtual machine.
     *
     * @param windowsConfiguration the windowsConfiguration value to set.
     * @return the VirtualMachinePropertiesOsProfile object itself.
     */
    public VirtualMachinePropertiesOsProfile withWindowsConfiguration(
        VirtualMachinePropertiesOsProfileWindowsConfiguration windowsConfiguration) {
        this.windowsConfiguration = windowsConfiguration;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (linuxConfiguration() != null) {
            linuxConfiguration().validate();
        }
        if (windowsConfiguration() != null) {
            windowsConfiguration().validate();
        }
    }
}
