// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Solution builder extension (SBE) deployment package information.
 */
@Immutable
public final class SbeDeploymentPackageInfo implements JsonSerializable<SbeDeploymentPackageInfo> {
    /*
     * SBE deployment validation code.
     */
    private String code;

    /*
     * A detailed message that explains the SBE package validation result.
     */
    private String message;

    /*
     * This represents discovered update results for matching updates and store it as SBE manifest.
     */
    private String sbeManifest;

    /**
     * Creates an instance of SbeDeploymentPackageInfo class.
     */
    public SbeDeploymentPackageInfo() {
    }

    /**
     * Get the code property: SBE deployment validation code.
     * 
     * @return the code value.
     */
    public String code() {
        return this.code;
    }

    /**
     * Get the message property: A detailed message that explains the SBE package validation result.
     * 
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * Get the sbeManifest property: This represents discovered update results for matching updates and store it as SBE
     * manifest.
     * 
     * @return the sbeManifest value.
     */
    public String sbeManifest() {
        return this.sbeManifest;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SbeDeploymentPackageInfo from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SbeDeploymentPackageInfo if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SbeDeploymentPackageInfo.
     */
    public static SbeDeploymentPackageInfo fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SbeDeploymentPackageInfo deserializedSbeDeploymentPackageInfo = new SbeDeploymentPackageInfo();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("code".equals(fieldName)) {
                    deserializedSbeDeploymentPackageInfo.code = reader.getString();
                } else if ("message".equals(fieldName)) {
                    deserializedSbeDeploymentPackageInfo.message = reader.getString();
                } else if ("sbeManifest".equals(fieldName)) {
                    deserializedSbeDeploymentPackageInfo.sbeManifest = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSbeDeploymentPackageInfo;
        });
    }
}
