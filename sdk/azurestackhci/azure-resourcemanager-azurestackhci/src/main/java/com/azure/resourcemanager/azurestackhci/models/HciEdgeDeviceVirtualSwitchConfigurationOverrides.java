// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The VirtualSwitchConfigurationOverrides of a cluster.
 */
@Immutable
public final class HciEdgeDeviceVirtualSwitchConfigurationOverrides
    implements JsonSerializable<HciEdgeDeviceVirtualSwitchConfigurationOverrides> {
    /*
     * Enable IoV for Virtual Switch
     */
    private String enableIov;

    /*
     * Load Balancing Algorithm for Virtual Switch
     */
    private String loadBalancingAlgorithm;

    /**
     * Creates an instance of HciEdgeDeviceVirtualSwitchConfigurationOverrides class.
     */
    public HciEdgeDeviceVirtualSwitchConfigurationOverrides() {
    }

    /**
     * Get the enableIov property: Enable IoV for Virtual Switch.
     * 
     * @return the enableIov value.
     */
    public String enableIov() {
        return this.enableIov;
    }

    /**
     * Get the loadBalancingAlgorithm property: Load Balancing Algorithm for Virtual Switch.
     * 
     * @return the loadBalancingAlgorithm value.
     */
    public String loadBalancingAlgorithm() {
        return this.loadBalancingAlgorithm;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of HciEdgeDeviceVirtualSwitchConfigurationOverrides from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of HciEdgeDeviceVirtualSwitchConfigurationOverrides if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the HciEdgeDeviceVirtualSwitchConfigurationOverrides.
     */
    public static HciEdgeDeviceVirtualSwitchConfigurationOverrides fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            HciEdgeDeviceVirtualSwitchConfigurationOverrides deserializedHciEdgeDeviceVirtualSwitchConfigurationOverrides
                = new HciEdgeDeviceVirtualSwitchConfigurationOverrides();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("enableIov".equals(fieldName)) {
                    deserializedHciEdgeDeviceVirtualSwitchConfigurationOverrides.enableIov = reader.getString();
                } else if ("loadBalancingAlgorithm".equals(fieldName)) {
                    deserializedHciEdgeDeviceVirtualSwitchConfigurationOverrides.loadBalancingAlgorithm
                        = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedHciEdgeDeviceVirtualSwitchConfigurationOverrides;
        });
    }
}
