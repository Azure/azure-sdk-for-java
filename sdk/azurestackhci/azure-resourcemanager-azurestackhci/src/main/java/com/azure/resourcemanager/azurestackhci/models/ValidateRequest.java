// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The validate request for Edge Device.
 */
@Fluent
public final class ValidateRequest implements JsonSerializable<ValidateRequest> {
    /*
     * Node Ids against which, current node has to be validated.
     */
    private List<String> edgeDeviceIds;

    /*
     * Additional info required for validation.
     */
    private String additionalInfo;

    /**
     * Creates an instance of ValidateRequest class.
     */
    public ValidateRequest() {
    }

    /**
     * Get the edgeDeviceIds property: Node Ids against which, current node has to be validated.
     * 
     * @return the edgeDeviceIds value.
     */
    public List<String> edgeDeviceIds() {
        return this.edgeDeviceIds;
    }

    /**
     * Set the edgeDeviceIds property: Node Ids against which, current node has to be validated.
     * 
     * @param edgeDeviceIds the edgeDeviceIds value to set.
     * @return the ValidateRequest object itself.
     */
    public ValidateRequest withEdgeDeviceIds(List<String> edgeDeviceIds) {
        this.edgeDeviceIds = edgeDeviceIds;
        return this;
    }

    /**
     * Get the additionalInfo property: Additional info required for validation.
     * 
     * @return the additionalInfo value.
     */
    public String additionalInfo() {
        return this.additionalInfo;
    }

    /**
     * Set the additionalInfo property: Additional info required for validation.
     * 
     * @param additionalInfo the additionalInfo value to set.
     * @return the ValidateRequest object itself.
     */
    public ValidateRequest withAdditionalInfo(String additionalInfo) {
        this.additionalInfo = additionalInfo;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (edgeDeviceIds() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property edgeDeviceIds in model ValidateRequest"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ValidateRequest.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("edgeDeviceIds", this.edgeDeviceIds,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("additionalInfo", this.additionalInfo);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ValidateRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ValidateRequest if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ValidateRequest.
     */
    public static ValidateRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ValidateRequest deserializedValidateRequest = new ValidateRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("edgeDeviceIds".equals(fieldName)) {
                    List<String> edgeDeviceIds = reader.readArray(reader1 -> reader1.getString());
                    deserializedValidateRequest.edgeDeviceIds = edgeDeviceIds;
                } else if ("additionalInfo".equals(fieldName)) {
                    deserializedValidateRequest.additionalInfo = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedValidateRequest;
        });
    }
}
