// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.vm.models.GpuAssignmentTypeEnum;
import com.azure.resourcemanager.azurestackhci.vm.models.HardwareProfileUpdate;
import com.azure.resourcemanager.azurestackhci.vm.models.VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU;
import com.azure.resourcemanager.azurestackhci.vm.models.VmSizeEnum;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class HardwareProfileUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HardwareProfileUpdate model = BinaryData.fromString(
            "{\"vmSize\":\"Standard_DS3_v2\",\"processors\":709641319,\"memoryMB\":4884898065707354513,\"virtualMachineGPUs\":[{\"assignmentType\":\"GpuDDA\",\"partitionSizeMB\":3591916684499053606,\"gpuName\":\"kzgxhurip\"},{\"assignmentType\":\"GpuP\",\"partitionSizeMB\":5090164062241027652,\"gpuName\":\"unkbebx\"},{\"assignmentType\":\"GpuDDA\",\"partitionSizeMB\":5789185793221344217,\"gpuName\":\"twlrbqt\"},{\"assignmentType\":\"GpuP\",\"partitionSizeMB\":9145634763199835148,\"gpuName\":\"eotg\"}]}")
            .toObject(HardwareProfileUpdate.class);
        Assertions.assertEquals(VmSizeEnum.STANDARD_DS3_V2, model.vmSize());
        Assertions.assertEquals(709641319, model.processors());
        Assertions.assertEquals(4884898065707354513L, model.memoryMB());
        Assertions.assertEquals(GpuAssignmentTypeEnum.GPU_DDA, model.virtualMachineGPUs().get(0).assignmentType());
        Assertions.assertEquals(3591916684499053606L, model.virtualMachineGPUs().get(0).partitionSizeMB());
        Assertions.assertEquals("kzgxhurip", model.virtualMachineGPUs().get(0).gpuName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HardwareProfileUpdate model = new HardwareProfileUpdate().withVmSize(VmSizeEnum.STANDARD_DS3_V2)
            .withProcessors(709641319)
            .withMemoryMB(4884898065707354513L)
            .withVirtualMachineGPUs(Arrays.asList(
                new VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU()
                    .withAssignmentType(GpuAssignmentTypeEnum.GPU_DDA)
                    .withPartitionSizeMB(3591916684499053606L)
                    .withGpuName("kzgxhurip"),
                new VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU()
                    .withAssignmentType(GpuAssignmentTypeEnum.GPUP)
                    .withPartitionSizeMB(5090164062241027652L)
                    .withGpuName("unkbebx"),
                new VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU()
                    .withAssignmentType(GpuAssignmentTypeEnum.GPU_DDA)
                    .withPartitionSizeMB(5789185793221344217L)
                    .withGpuName("twlrbqt"),
                new VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU()
                    .withAssignmentType(GpuAssignmentTypeEnum.GPUP)
                    .withPartitionSizeMB(9145634763199835148L)
                    .withGpuName("eotg")));
        model = BinaryData.fromObject(model).toObject(HardwareProfileUpdate.class);
        Assertions.assertEquals(VmSizeEnum.STANDARD_DS3_V2, model.vmSize());
        Assertions.assertEquals(709641319, model.processors());
        Assertions.assertEquals(4884898065707354513L, model.memoryMB());
        Assertions.assertEquals(GpuAssignmentTypeEnum.GPU_DDA, model.virtualMachineGPUs().get(0).assignmentType());
        Assertions.assertEquals(3591916684499053606L, model.virtualMachineGPUs().get(0).partitionSizeMB());
        Assertions.assertEquals("kzgxhurip", model.virtualMachineGPUs().get(0).gpuName());
    }
}
