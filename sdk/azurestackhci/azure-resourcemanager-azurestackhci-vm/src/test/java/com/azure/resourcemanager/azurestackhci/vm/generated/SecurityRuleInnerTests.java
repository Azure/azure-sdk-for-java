// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.vm.fluent.models.SecurityRuleInner;
import com.azure.resourcemanager.azurestackhci.vm.models.ExtendedLocation;
import com.azure.resourcemanager.azurestackhci.vm.models.ExtendedLocationTypes;
import com.azure.resourcemanager.azurestackhci.vm.models.SecurityRuleAccess;
import com.azure.resourcemanager.azurestackhci.vm.models.SecurityRuleDirection;
import com.azure.resourcemanager.azurestackhci.vm.models.SecurityRuleProperties;
import com.azure.resourcemanager.azurestackhci.vm.models.SecurityRuleProtocol;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SecurityRuleInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SecurityRuleInner model = BinaryData.fromString(
            "{\"properties\":{\"description\":\"ahmgkbrp\",\"protocol\":\"Tcp\",\"sourceAddressPrefixes\":[\"ibnuqqkpik\",\"drgvtqagn\",\"uynhijg\"],\"destinationAddressPrefixes\":[\"bfs\"],\"sourcePortRanges\":[\"butr\"],\"destinationPortRanges\":[\"na\",\"zmhjrunmp\"],\"access\":\"Deny\",\"priority\":18555434,\"direction\":\"Outbound\",\"provisioningState\":\"Failed\"},\"extendedLocation\":{\"name\":\"nlankxmyskpb\",\"type\":\"CustomLocation\"},\"id\":\"tkcxywnytnrsy\",\"name\":\"lqidyby\",\"type\":\"czfc\"}")
            .toObject(SecurityRuleInner.class);
        Assertions.assertEquals("ahmgkbrp", model.properties().description());
        Assertions.assertEquals(SecurityRuleProtocol.TCP, model.properties().protocol());
        Assertions.assertEquals("ibnuqqkpik", model.properties().sourceAddressPrefixes().get(0));
        Assertions.assertEquals("bfs", model.properties().destinationAddressPrefixes().get(0));
        Assertions.assertEquals("butr", model.properties().sourcePortRanges().get(0));
        Assertions.assertEquals("na", model.properties().destinationPortRanges().get(0));
        Assertions.assertEquals(SecurityRuleAccess.DENY, model.properties().access());
        Assertions.assertEquals(18555434, model.properties().priority());
        Assertions.assertEquals(SecurityRuleDirection.OUTBOUND, model.properties().direction());
        Assertions.assertEquals("nlankxmyskpb", model.extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationTypes.CUSTOM_LOCATION, model.extendedLocation().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SecurityRuleInner model = new SecurityRuleInner()
            .withProperties(new SecurityRuleProperties().withDescription("ahmgkbrp")
                .withProtocol(SecurityRuleProtocol.TCP)
                .withSourceAddressPrefixes(Arrays.asList("ibnuqqkpik", "drgvtqagn", "uynhijg"))
                .withDestinationAddressPrefixes(Arrays.asList("bfs"))
                .withSourcePortRanges(Arrays.asList("butr"))
                .withDestinationPortRanges(Arrays.asList("na", "zmhjrunmp"))
                .withAccess(SecurityRuleAccess.DENY)
                .withPriority(18555434)
                .withDirection(SecurityRuleDirection.OUTBOUND))
            .withExtendedLocation(
                new ExtendedLocation().withName("nlankxmyskpb").withType(ExtendedLocationTypes.CUSTOM_LOCATION));
        model = BinaryData.fromObject(model).toObject(SecurityRuleInner.class);
        Assertions.assertEquals("ahmgkbrp", model.properties().description());
        Assertions.assertEquals(SecurityRuleProtocol.TCP, model.properties().protocol());
        Assertions.assertEquals("ibnuqqkpik", model.properties().sourceAddressPrefixes().get(0));
        Assertions.assertEquals("bfs", model.properties().destinationAddressPrefixes().get(0));
        Assertions.assertEquals("butr", model.properties().sourcePortRanges().get(0));
        Assertions.assertEquals("na", model.properties().destinationPortRanges().get(0));
        Assertions.assertEquals(SecurityRuleAccess.DENY, model.properties().access());
        Assertions.assertEquals(18555434, model.properties().priority());
        Assertions.assertEquals(SecurityRuleDirection.OUTBOUND, model.properties().direction());
        Assertions.assertEquals("nlankxmyskpb", model.extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationTypes.CUSTOM_LOCATION, model.extendedLocation().type());
    }
}
