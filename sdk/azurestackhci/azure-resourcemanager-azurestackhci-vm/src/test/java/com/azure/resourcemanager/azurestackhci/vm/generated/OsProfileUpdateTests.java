// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.vm.models.OsProfileUpdate;
import com.azure.resourcemanager.azurestackhci.vm.models.OsProfileUpdateLinuxConfiguration;
import com.azure.resourcemanager.azurestackhci.vm.models.OsProfileUpdateWindowsConfiguration;
import org.junit.jupiter.api.Assertions;

public final class OsProfileUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OsProfileUpdate model = BinaryData.fromString(
            "{\"computerName\":\"tdum\",\"linuxConfiguration\":{\"provisionVMAgent\":true,\"provisionVMConfigAgent\":true},\"windowsConfiguration\":{\"provisionVMAgent\":false,\"provisionVMConfigAgent\":true}}")
            .toObject(OsProfileUpdate.class);
        Assertions.assertEquals("tdum", model.computerName());
        Assertions.assertTrue(model.linuxConfiguration().provisionVMAgent());
        Assertions.assertTrue(model.linuxConfiguration().provisionVMConfigAgent());
        Assertions.assertFalse(model.windowsConfiguration().provisionVMAgent());
        Assertions.assertTrue(model.windowsConfiguration().provisionVMConfigAgent());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OsProfileUpdate model = new OsProfileUpdate().withComputerName("tdum")
            .withLinuxConfiguration(
                new OsProfileUpdateLinuxConfiguration().withProvisionVMAgent(true).withProvisionVMConfigAgent(true))
            .withWindowsConfiguration(
                new OsProfileUpdateWindowsConfiguration().withProvisionVMAgent(false).withProvisionVMConfigAgent(true));
        model = BinaryData.fromObject(model).toObject(OsProfileUpdate.class);
        Assertions.assertEquals("tdum", model.computerName());
        Assertions.assertTrue(model.linuxConfiguration().provisionVMAgent());
        Assertions.assertTrue(model.linuxConfiguration().provisionVMConfigAgent());
        Assertions.assertFalse(model.windowsConfiguration().provisionVMAgent());
        Assertions.assertTrue(model.windowsConfiguration().provisionVMConfigAgent());
    }
}
