// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.vm.fluent.models.RouteTableProperties;
import com.azure.resourcemanager.azurestackhci.vm.models.Route;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RouteTablePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RouteTableProperties model = BinaryData.fromString(
            "{\"routes\":[{\"properties\":{\"addressPrefix\":\"qcjm\",\"nextHopIpAddress\":\"javbqidtqajz\"},\"name\":\"l\"},{\"properties\":{\"addressPrefix\":\"dj\",\"nextHopIpAddress\":\"lkhbz\"},\"name\":\"epgzgqexz\"},{\"properties\":{\"addressPrefix\":\"xscpaierhhbc\",\"nextHopIpAddress\":\"l\"},\"name\":\"majtjaod\"},{\"properties\":{\"addressPrefix\":\"nbdxk\",\"nextHopIpAddress\":\"xo\"},\"name\":\"jionpimexgstxgc\"}]}")
            .toObject(RouteTableProperties.class);
        Assertions.assertEquals("l", model.routes().get(0).name());
        Assertions.assertEquals("qcjm", model.routes().get(0).addressPrefix());
        Assertions.assertEquals("javbqidtqajz", model.routes().get(0).nextHopIpAddress());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RouteTableProperties model = new RouteTableProperties().withRoutes(
            Arrays.asList(new Route().withName("l").withAddressPrefix("qcjm").withNextHopIpAddress("javbqidtqajz"),
                new Route().withName("epgzgqexz").withAddressPrefix("dj").withNextHopIpAddress("lkhbz"),
                new Route().withName("majtjaod").withAddressPrefix("xscpaierhhbc").withNextHopIpAddress("l"),
                new Route().withName("jionpimexgstxgc").withAddressPrefix("nbdxk").withNextHopIpAddress("xo")));
        model = BinaryData.fromObject(model).toObject(RouteTableProperties.class);
        Assertions.assertEquals("l", model.routes().get(0).name());
        Assertions.assertEquals("qcjm", model.routes().get(0).addressPrefix());
        Assertions.assertEquals("javbqidtqajz", model.routes().get(0).nextHopIpAddress());
    }
}
