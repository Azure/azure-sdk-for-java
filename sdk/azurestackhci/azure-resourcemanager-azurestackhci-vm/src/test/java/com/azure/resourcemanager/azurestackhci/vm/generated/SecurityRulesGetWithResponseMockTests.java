// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurestackhci.vm.AzureStackHciVmManager;
import com.azure.resourcemanager.azurestackhci.vm.models.ExtendedLocationTypes;
import com.azure.resourcemanager.azurestackhci.vm.models.SecurityRule;
import com.azure.resourcemanager.azurestackhci.vm.models.SecurityRuleAccess;
import com.azure.resourcemanager.azurestackhci.vm.models.SecurityRuleDirection;
import com.azure.resourcemanager.azurestackhci.vm.models.SecurityRuleProtocol;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SecurityRulesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"description\":\"csnjvcdwxlpqekft\",\"protocol\":\"Tcp\",\"sourceAddressPrefixes\":[\"jsyingwfqatm\",\"dhtmdvypgikd\"],\"destinationAddressPrefixes\":[\"ywkbirryuzhlhkjo\",\"rvqqaatj\"],\"sourcePortRanges\":[\"vgoup\"],\"destinationPortRanges\":[\"ib\",\"ggjioolvr\"],\"access\":\"Allow\",\"priority\":1483667739,\"direction\":\"Inbound\",\"provisioningState\":\"Failed\"},\"extendedLocation\":{\"name\":\"llqwjygvjayvblmh\",\"type\":\"CustomLocation\"},\"id\":\"hbxvvyhgsopbyrqu\",\"name\":\"egxuvwzf\",\"type\":\"nhlmctlpdng\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureStackHciVmManager manager = AzureStackHciVmManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        SecurityRule response = manager.securityRules()
            .getWithResponse("feo", "erqwkyhkobopg", "edkowepbqpcrfk", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("csnjvcdwxlpqekft", response.properties().description());
        Assertions.assertEquals(SecurityRuleProtocol.TCP, response.properties().protocol());
        Assertions.assertEquals("jsyingwfqatm", response.properties().sourceAddressPrefixes().get(0));
        Assertions.assertEquals("ywkbirryuzhlhkjo", response.properties().destinationAddressPrefixes().get(0));
        Assertions.assertEquals("vgoup", response.properties().sourcePortRanges().get(0));
        Assertions.assertEquals("ib", response.properties().destinationPortRanges().get(0));
        Assertions.assertEquals(SecurityRuleAccess.ALLOW, response.properties().access());
        Assertions.assertEquals(1483667739, response.properties().priority());
        Assertions.assertEquals(SecurityRuleDirection.INBOUND, response.properties().direction());
        Assertions.assertEquals("llqwjygvjayvblmh", response.extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationTypes.CUSTOM_LOCATION, response.extendedLocation().type());
    }
}
