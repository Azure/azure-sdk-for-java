// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.vm.models.SecurityRuleAccess;
import com.azure.resourcemanager.azurestackhci.vm.models.SecurityRuleDirection;
import com.azure.resourcemanager.azurestackhci.vm.models.SecurityRuleProperties;
import com.azure.resourcemanager.azurestackhci.vm.models.SecurityRuleProtocol;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SecurityRulePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SecurityRuleProperties model = BinaryData.fromString(
            "{\"description\":\"aaxdbabphlwrq\",\"protocol\":\"Tcp\",\"sourceAddressPrefixes\":[\"sthsu\",\"ocmnyyazttbtwwrq\",\"uedck\"],\"destinationAddressPrefixes\":[\"biexzfeyu\",\"axibxujw\",\"hqwa\"],\"sourcePortRanges\":[\"zyoxaepdkzjan\",\"ux\"],\"destinationPortRanges\":[\"wbavxbniwdj\"],\"access\":\"Allow\",\"priority\":511976912,\"direction\":\"Inbound\",\"provisioningState\":\"Succeeded\"}")
            .toObject(SecurityRuleProperties.class);
        Assertions.assertEquals("aaxdbabphlwrq", model.description());
        Assertions.assertEquals(SecurityRuleProtocol.TCP, model.protocol());
        Assertions.assertEquals("sthsu", model.sourceAddressPrefixes().get(0));
        Assertions.assertEquals("biexzfeyu", model.destinationAddressPrefixes().get(0));
        Assertions.assertEquals("zyoxaepdkzjan", model.sourcePortRanges().get(0));
        Assertions.assertEquals("wbavxbniwdj", model.destinationPortRanges().get(0));
        Assertions.assertEquals(SecurityRuleAccess.ALLOW, model.access());
        Assertions.assertEquals(511976912, model.priority());
        Assertions.assertEquals(SecurityRuleDirection.INBOUND, model.direction());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SecurityRuleProperties model = new SecurityRuleProperties().withDescription("aaxdbabphlwrq")
            .withProtocol(SecurityRuleProtocol.TCP)
            .withSourceAddressPrefixes(Arrays.asList("sthsu", "ocmnyyazttbtwwrq", "uedck"))
            .withDestinationAddressPrefixes(Arrays.asList("biexzfeyu", "axibxujw", "hqwa"))
            .withSourcePortRanges(Arrays.asList("zyoxaepdkzjan", "ux"))
            .withDestinationPortRanges(Arrays.asList("wbavxbniwdj"))
            .withAccess(SecurityRuleAccess.ALLOW)
            .withPriority(511976912)
            .withDirection(SecurityRuleDirection.INBOUND);
        model = BinaryData.fromObject(model).toObject(SecurityRuleProperties.class);
        Assertions.assertEquals("aaxdbabphlwrq", model.description());
        Assertions.assertEquals(SecurityRuleProtocol.TCP, model.protocol());
        Assertions.assertEquals("sthsu", model.sourceAddressPrefixes().get(0));
        Assertions.assertEquals("biexzfeyu", model.destinationAddressPrefixes().get(0));
        Assertions.assertEquals("zyoxaepdkzjan", model.sourcePortRanges().get(0));
        Assertions.assertEquals("wbavxbniwdj", model.destinationPortRanges().get(0));
        Assertions.assertEquals(SecurityRuleAccess.ALLOW, model.access());
        Assertions.assertEquals(511976912, model.priority());
        Assertions.assertEquals(SecurityRuleDirection.INBOUND, model.direction());
    }
}
