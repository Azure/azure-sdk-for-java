// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.vm.models.GpuAssignmentTypeEnum;
import com.azure.resourcemanager.azurestackhci.vm.models.VirtualMachineInstancePropertiesHardwareProfile;
import com.azure.resourcemanager.azurestackhci.vm.models.VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig;
import com.azure.resourcemanager.azurestackhci.vm.models.VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU;
import com.azure.resourcemanager.azurestackhci.vm.models.VmSizeEnum;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VirtualMachineInstancePropertiesHardwareProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VirtualMachineInstancePropertiesHardwareProfile model = BinaryData.fromString(
            "{\"vmSize\":\"Standard_D16s_v3\",\"processors\":1486337456,\"memoryMB\":6144174767385086572,\"dynamicMemoryConfig\":{\"maximumMemoryMB\":4014214152987643703,\"minimumMemoryMB\":6160997583833316786,\"targetMemoryBuffer\":841332893},\"virtualMachineGPUs\":[{\"assignmentType\":\"GpuDDA\",\"partitionSizeMB\":2641489064592308886,\"gpuName\":\"apj\"},{\"assignmentType\":\"GpuP\",\"partitionSizeMB\":7368048825846520103,\"gpuName\":\"qzcjrvxdj\"},{\"assignmentType\":\"GpuP\",\"partitionSizeMB\":6071942572000377997,\"gpuName\":\"kvugfhzovawjvzun\"},{\"assignmentType\":\"GpuP\",\"partitionSizeMB\":5088500223485653746,\"gpuName\":\"prnxipeil\"}]}")
            .toObject(VirtualMachineInstancePropertiesHardwareProfile.class);
        Assertions.assertEquals(VmSizeEnum.STANDARD_D16S_V3, model.vmSize());
        Assertions.assertEquals(1486337456, model.processors());
        Assertions.assertEquals(6144174767385086572L, model.memoryMB());
        Assertions.assertEquals(4014214152987643703L, model.dynamicMemoryConfig().maximumMemoryMB());
        Assertions.assertEquals(6160997583833316786L, model.dynamicMemoryConfig().minimumMemoryMB());
        Assertions.assertEquals(841332893, model.dynamicMemoryConfig().targetMemoryBuffer());
        Assertions.assertEquals(GpuAssignmentTypeEnum.GPU_DDA, model.virtualMachineGPUs().get(0).assignmentType());
        Assertions.assertEquals(2641489064592308886L, model.virtualMachineGPUs().get(0).partitionSizeMB());
        Assertions.assertEquals("apj", model.virtualMachineGPUs().get(0).gpuName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VirtualMachineInstancePropertiesHardwareProfile model
            = new VirtualMachineInstancePropertiesHardwareProfile().withVmSize(VmSizeEnum.STANDARD_D16S_V3)
                .withProcessors(1486337456)
                .withMemoryMB(6144174767385086572L)
                .withDynamicMemoryConfig(new VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig()
                    .withMaximumMemoryMB(4014214152987643703L)
                    .withMinimumMemoryMB(6160997583833316786L)
                    .withTargetMemoryBuffer(841332893))
                .withVirtualMachineGPUs(Arrays.asList(
                    new VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU()
                        .withAssignmentType(GpuAssignmentTypeEnum.GPU_DDA)
                        .withPartitionSizeMB(2641489064592308886L)
                        .withGpuName("apj"),
                    new VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU()
                        .withAssignmentType(GpuAssignmentTypeEnum.GPUP)
                        .withPartitionSizeMB(7368048825846520103L)
                        .withGpuName("qzcjrvxdj"),
                    new VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU()
                        .withAssignmentType(GpuAssignmentTypeEnum.GPUP)
                        .withPartitionSizeMB(6071942572000377997L)
                        .withGpuName("kvugfhzovawjvzun"),
                    new VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU()
                        .withAssignmentType(GpuAssignmentTypeEnum.GPUP)
                        .withPartitionSizeMB(5088500223485653746L)
                        .withGpuName("prnxipeil")));
        model = BinaryData.fromObject(model).toObject(VirtualMachineInstancePropertiesHardwareProfile.class);
        Assertions.assertEquals(VmSizeEnum.STANDARD_D16S_V3, model.vmSize());
        Assertions.assertEquals(1486337456, model.processors());
        Assertions.assertEquals(6144174767385086572L, model.memoryMB());
        Assertions.assertEquals(4014214152987643703L, model.dynamicMemoryConfig().maximumMemoryMB());
        Assertions.assertEquals(6160997583833316786L, model.dynamicMemoryConfig().minimumMemoryMB());
        Assertions.assertEquals(841332893, model.dynamicMemoryConfig().targetMemoryBuffer());
        Assertions.assertEquals(GpuAssignmentTypeEnum.GPU_DDA, model.virtualMachineGPUs().get(0).assignmentType());
        Assertions.assertEquals(2641489064592308886L, model.virtualMachineGPUs().get(0).partitionSizeMB());
        Assertions.assertEquals("apj", model.virtualMachineGPUs().get(0).gpuName());
    }
}
