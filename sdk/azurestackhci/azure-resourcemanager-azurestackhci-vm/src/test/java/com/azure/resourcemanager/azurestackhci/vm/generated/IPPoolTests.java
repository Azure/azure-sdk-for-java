// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestackhci.vm.models.IPPool;
import com.azure.resourcemanager.azurestackhci.vm.models.IPPoolInfo;
import com.azure.resourcemanager.azurestackhci.vm.models.IPPoolTypeEnum;
import org.junit.jupiter.api.Assertions;

public final class IPPoolTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IPPool model = BinaryData.fromString(
            "{\"name\":\"kbfkg\",\"ipPoolType\":\"vippool\",\"start\":\"exxppofmxaxcfjp\",\"end\":\"dtocj\",\"info\":{\"used\":\"vpmouexhdzxib\",\"available\":\"ojnxqbzvdd\"}}")
            .toObject(IPPool.class);
        Assertions.assertEquals("kbfkg", model.name());
        Assertions.assertEquals(IPPoolTypeEnum.VIPPOOL, model.ipPoolType());
        Assertions.assertEquals("exxppofmxaxcfjp", model.start());
        Assertions.assertEquals("dtocj", model.end());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IPPool model = new IPPool().withName("kbfkg")
            .withIpPoolType(IPPoolTypeEnum.VIPPOOL)
            .withStart("exxppofmxaxcfjp")
            .withEnd("dtocj")
            .withInfo(new IPPoolInfo());
        model = BinaryData.fromObject(model).toObject(IPPool.class);
        Assertions.assertEquals("kbfkg", model.name());
        Assertions.assertEquals(IPPoolTypeEnum.VIPPOOL, model.ipPoolType());
        Assertions.assertEquals("exxppofmxaxcfjp", model.start());
        Assertions.assertEquals("dtocj", model.end());
    }
}
