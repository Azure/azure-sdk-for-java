// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.azurestackhci.vm.fluent.models.GalleryImageInner;
import com.azure.resourcemanager.azurestackhci.vm.models.ExtendedLocation;
import com.azure.resourcemanager.azurestackhci.vm.models.GalleryImage;
import com.azure.resourcemanager.azurestackhci.vm.models.GalleryImageProperties;
import com.azure.resourcemanager.azurestackhci.vm.models.GalleryImageTagsUpdate;
import java.util.Collections;
import java.util.Map;

public final class GalleryImageImpl implements GalleryImage, GalleryImage.Definition, GalleryImage.Update {
    private GalleryImageInner innerObject;

    private final com.azure.resourcemanager.azurestackhci.vm.AzureStackHciVmManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public GalleryImageProperties properties() {
        return this.innerModel().properties();
    }

    public ExtendedLocation extendedLocation() {
        return this.innerModel().extendedLocation();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public GalleryImageInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.azurestackhci.vm.AzureStackHciVmManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String galleryImageName;

    private GalleryImageTagsUpdate updateProperties;

    public GalleryImageImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public GalleryImage create() {
        this.innerObject = serviceManager.serviceClient()
            .getGalleryImages()
            .createOrUpdate(resourceGroupName, galleryImageName, this.innerModel(), Context.NONE);
        return this;
    }

    public GalleryImage create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getGalleryImages()
            .createOrUpdate(resourceGroupName, galleryImageName, this.innerModel(), context);
        return this;
    }

    GalleryImageImpl(String name, com.azure.resourcemanager.azurestackhci.vm.AzureStackHciVmManager serviceManager) {
        this.innerObject = new GalleryImageInner();
        this.serviceManager = serviceManager;
        this.galleryImageName = name;
    }

    public GalleryImageImpl update() {
        this.updateProperties = new GalleryImageTagsUpdate();
        return this;
    }

    public GalleryImage apply() {
        this.innerObject = serviceManager.serviceClient()
            .getGalleryImages()
            .update(resourceGroupName, galleryImageName, updateProperties, Context.NONE);
        return this;
    }

    public GalleryImage apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getGalleryImages()
            .update(resourceGroupName, galleryImageName, updateProperties, context);
        return this;
    }

    GalleryImageImpl(GalleryImageInner innerObject,
        com.azure.resourcemanager.azurestackhci.vm.AzureStackHciVmManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.galleryImageName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "galleryImages");
    }

    public GalleryImage refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getGalleryImages()
            .getByResourceGroupWithResponse(resourceGroupName, galleryImageName, Context.NONE)
            .getValue();
        return this;
    }

    public GalleryImage refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getGalleryImages()
            .getByResourceGroupWithResponse(resourceGroupName, galleryImageName, context)
            .getValue();
        return this;
    }

    public GalleryImageImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public GalleryImageImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public GalleryImageImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateProperties.withTags(tags);
            return this;
        }
    }

    public GalleryImageImpl withProperties(GalleryImageProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public GalleryImageImpl withExtendedLocation(ExtendedLocation extendedLocation) {
        this.innerModel().withExtendedLocation(extendedLocation);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel() == null || this.innerModel().id() == null;
    }
}
