// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of VirtualHardDisks.
 */
public interface VirtualHardDisks {
    /**
     * Gets a virtual hard disk.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualHardDiskName Name of the virtual hard disk.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a virtual hard disk along with {@link Response}.
     */
    Response<VirtualHardDisk> getByResourceGroupWithResponse(String resourceGroupName, String virtualHardDiskName,
        Context context);

    /**
     * Gets a virtual hard disk.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualHardDiskName Name of the virtual hard disk.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a virtual hard disk.
     */
    VirtualHardDisk getByResourceGroup(String resourceGroupName, String virtualHardDiskName);

    /**
     * The operation to delete a virtual hard disk.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualHardDiskName Name of the virtual hard disk.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String virtualHardDiskName);

    /**
     * The operation to delete a virtual hard disk.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualHardDiskName Name of the virtual hard disk.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String virtualHardDiskName, Context context);

    /**
     * Lists all of the virtual hard disks in the specified resource group. Use the nextLink property in the response to
     * get the next page of virtual hard disks.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a VirtualHardDisk list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<VirtualHardDisk> listByResourceGroup(String resourceGroupName);

    /**
     * Lists all of the virtual hard disks in the specified resource group. Use the nextLink property in the response to
     * get the next page of virtual hard disks.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a VirtualHardDisk list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<VirtualHardDisk> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Lists all of the virtual hard disks in the specified subscription. Use the nextLink property in the response to
     * get the next page of virtual hard disks.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a VirtualHardDisk list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<VirtualHardDisk> list();

    /**
     * Lists all of the virtual hard disks in the specified subscription. Use the nextLink property in the response to
     * get the next page of virtual hard disks.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a VirtualHardDisk list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<VirtualHardDisk> list(Context context);

    /**
     * The operation to upload a virtual hard disk.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualHardDiskName Name of the virtual hard disk.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    VirtualHardDiskUploadResponse upload(String resourceGroupName, String virtualHardDiskName,
        VirtualHardDiskUploadRequest body);

    /**
     * The operation to upload a virtual hard disk.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualHardDiskName Name of the virtual hard disk.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    VirtualHardDiskUploadResponse upload(String resourceGroupName, String virtualHardDiskName,
        VirtualHardDiskUploadRequest body, Context context);

    /**
     * Gets a virtual hard disk.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a virtual hard disk along with {@link Response}.
     */
    VirtualHardDisk getById(String id);

    /**
     * Gets a virtual hard disk.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a virtual hard disk along with {@link Response}.
     */
    Response<VirtualHardDisk> getByIdWithResponse(String id, Context context);

    /**
     * The operation to delete a virtual hard disk.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * The operation to delete a virtual hard disk.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new VirtualHardDisk resource.
     * 
     * @param name resource name.
     * @return the first stage of the new VirtualHardDisk definition.
     */
    VirtualHardDisk.DefinitionStages.Blank define(String name);
}
