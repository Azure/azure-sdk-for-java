// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Uefi settings - Specifies whether secure boot should be enabled on the virtual machine instance.
 */
@Fluent
public final class VirtualMachineInstancePropertiesSecurityProfileUefiSettings
    implements JsonSerializable<VirtualMachineInstancePropertiesSecurityProfileUefiSettings> {
    /*
     * Specifies whether secure boot should be enabled on the virtual machine instance.
     */
    private Boolean secureBootEnabled;

    /**
     * Creates an instance of VirtualMachineInstancePropertiesSecurityProfileUefiSettings class.
     */
    public VirtualMachineInstancePropertiesSecurityProfileUefiSettings() {
    }

    /**
     * Get the secureBootEnabled property: Specifies whether secure boot should be enabled on the virtual machine
     * instance.
     * 
     * @return the secureBootEnabled value.
     */
    public Boolean secureBootEnabled() {
        return this.secureBootEnabled;
    }

    /**
     * Set the secureBootEnabled property: Specifies whether secure boot should be enabled on the virtual machine
     * instance.
     * 
     * @param secureBootEnabled the secureBootEnabled value to set.
     * @return the VirtualMachineInstancePropertiesSecurityProfileUefiSettings object itself.
     */
    public VirtualMachineInstancePropertiesSecurityProfileUefiSettings
        withSecureBootEnabled(Boolean secureBootEnabled) {
        this.secureBootEnabled = secureBootEnabled;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("secureBootEnabled", this.secureBootEnabled);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VirtualMachineInstancePropertiesSecurityProfileUefiSettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VirtualMachineInstancePropertiesSecurityProfileUefiSettings if the JsonReader was pointing
     * to an instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the
     * VirtualMachineInstancePropertiesSecurityProfileUefiSettings.
     */
    public static VirtualMachineInstancePropertiesSecurityProfileUefiSettings fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            VirtualMachineInstancePropertiesSecurityProfileUefiSettings deserializedVirtualMachineInstancePropertiesSecurityProfileUefiSettings
                = new VirtualMachineInstancePropertiesSecurityProfileUefiSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("secureBootEnabled".equals(fieldName)) {
                    deserializedVirtualMachineInstancePropertiesSecurityProfileUefiSettings.secureBootEnabled
                        = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVirtualMachineInstancePropertiesSecurityProfileUefiSettings;
        });
    }
}
