// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Describes the status of the provisioning.
 */
@Immutable
public final class LogicalNetworkStatusProvisioningStatus
    implements JsonSerializable<LogicalNetworkStatusProvisioningStatus> {
    /*
     * The ID of the operation performed on the logical network
     */
    private String operationId;

    /*
     * The status of the operation performed on the logical network [Succeeded, Failed, InProgress]
     */
    private Status status;

    /**
     * Creates an instance of LogicalNetworkStatusProvisioningStatus class.
     */
    private LogicalNetworkStatusProvisioningStatus() {
    }

    /**
     * Get the operationId property: The ID of the operation performed on the logical network.
     * 
     * @return the operationId value.
     */
    public String operationId() {
        return this.operationId;
    }

    /**
     * Get the status property: The status of the operation performed on the logical network [Succeeded, Failed,
     * InProgress].
     * 
     * @return the status value.
     */
    public Status status() {
        return this.status;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("operationId", this.operationId);
        jsonWriter.writeStringField("status", this.status == null ? null : this.status.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of LogicalNetworkStatusProvisioningStatus from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of LogicalNetworkStatusProvisioningStatus if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the LogicalNetworkStatusProvisioningStatus.
     */
    public static LogicalNetworkStatusProvisioningStatus fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            LogicalNetworkStatusProvisioningStatus deserializedLogicalNetworkStatusProvisioningStatus
                = new LogicalNetworkStatusProvisioningStatus();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("operationId".equals(fieldName)) {
                    deserializedLogicalNetworkStatusProvisioningStatus.operationId = reader.getString();
                } else if ("status".equals(fieldName)) {
                    deserializedLogicalNetworkStatusProvisioningStatus.status = Status.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedLogicalNetworkStatusProvisioningStatus;
        });
    }
}
