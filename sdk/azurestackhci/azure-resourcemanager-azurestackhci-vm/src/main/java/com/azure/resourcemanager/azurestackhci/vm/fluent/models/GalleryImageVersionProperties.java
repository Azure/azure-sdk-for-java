// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.azurestackhci.vm.models.GalleryImageVersionStorageProfile;
import java.io.IOException;

/**
 * Describes the properties of a gallery image version.
 */
@Fluent
public final class GalleryImageVersionProperties implements JsonSerializable<GalleryImageVersionProperties> {
    /*
     * This is the storage profile of a Gallery Image Version.
     */
    private GalleryImageVersionStorageProfile storageProfile;

    /**
     * Creates an instance of GalleryImageVersionProperties class.
     */
    public GalleryImageVersionProperties() {
    }

    /**
     * Get the storageProfile property: This is the storage profile of a Gallery Image Version.
     * 
     * @return the storageProfile value.
     */
    public GalleryImageVersionStorageProfile storageProfile() {
        return this.storageProfile;
    }

    /**
     * Set the storageProfile property: This is the storage profile of a Gallery Image Version.
     * 
     * @param storageProfile the storageProfile value to set.
     * @return the GalleryImageVersionProperties object itself.
     */
    public GalleryImageVersionProperties withStorageProfile(GalleryImageVersionStorageProfile storageProfile) {
        this.storageProfile = storageProfile;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (storageProfile() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property storageProfile in model GalleryImageVersionProperties"));
        } else {
            storageProfile().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(GalleryImageVersionProperties.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("storageProfile", this.storageProfile);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GalleryImageVersionProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GalleryImageVersionProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the GalleryImageVersionProperties.
     */
    public static GalleryImageVersionProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            GalleryImageVersionProperties deserializedGalleryImageVersionProperties
                = new GalleryImageVersionProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("storageProfile".equals(fieldName)) {
                    deserializedGalleryImageVersionProperties.storageProfile
                        = GalleryImageVersionStorageProfile.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedGalleryImageVersionProperties;
        });
    }
}
