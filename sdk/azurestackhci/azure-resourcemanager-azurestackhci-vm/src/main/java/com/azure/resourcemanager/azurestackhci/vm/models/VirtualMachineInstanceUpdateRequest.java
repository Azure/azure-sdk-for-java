// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The virtual machine instance resource patch definition.
 */
@Fluent
public final class VirtualMachineInstanceUpdateRequest
    implements JsonSerializable<VirtualMachineInstanceUpdateRequest> {
    /*
     * Defines the resource properties for the update.
     */
    private VirtualMachineInstanceUpdateProperties properties;

    /*
     * Identity for the resource.
     */
    private Identity identity;

    /**
     * Creates an instance of VirtualMachineInstanceUpdateRequest class.
     */
    public VirtualMachineInstanceUpdateRequest() {
    }

    /**
     * Get the properties property: Defines the resource properties for the update.
     * 
     * @return the properties value.
     */
    public VirtualMachineInstanceUpdateProperties properties() {
        return this.properties;
    }

    /**
     * Set the properties property: Defines the resource properties for the update.
     * 
     * @param properties the properties value to set.
     * @return the VirtualMachineInstanceUpdateRequest object itself.
     */
    public VirtualMachineInstanceUpdateRequest withProperties(VirtualMachineInstanceUpdateProperties properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Get the identity property: Identity for the resource.
     * 
     * @return the identity value.
     */
    public Identity identity() {
        return this.identity;
    }

    /**
     * Set the identity property: Identity for the resource.
     * 
     * @param identity the identity value to set.
     * @return the VirtualMachineInstanceUpdateRequest object itself.
     */
    public VirtualMachineInstanceUpdateRequest withIdentity(Identity identity) {
        this.identity = identity;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (properties() != null) {
            properties().validate();
        }
        if (identity() != null) {
            identity().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.properties);
        jsonWriter.writeJsonField("identity", this.identity);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VirtualMachineInstanceUpdateRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VirtualMachineInstanceUpdateRequest if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the VirtualMachineInstanceUpdateRequest.
     */
    public static VirtualMachineInstanceUpdateRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            VirtualMachineInstanceUpdateRequest deserializedVirtualMachineInstanceUpdateRequest
                = new VirtualMachineInstanceUpdateRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("properties".equals(fieldName)) {
                    deserializedVirtualMachineInstanceUpdateRequest.properties
                        = VirtualMachineInstanceUpdateProperties.fromJson(reader);
                } else if ("identity".equals(fieldName)) {
                    deserializedVirtualMachineInstanceUpdateRequest.identity = Identity.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVirtualMachineInstanceUpdateRequest;
        });
    }
}
