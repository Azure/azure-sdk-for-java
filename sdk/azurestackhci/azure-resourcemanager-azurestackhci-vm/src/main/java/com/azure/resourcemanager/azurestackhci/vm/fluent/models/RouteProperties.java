// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * RoutePropertiesFormat - Route resource.
 */
@Fluent
public final class RouteProperties implements JsonSerializable<RouteProperties> {
    /*
     * The destination CIDR to which the route applies.
     */
    private String addressPrefix;

    /*
     * The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type
     * is VirtualAppliance.
     */
    private String nextHopIpAddress;

    /**
     * Creates an instance of RouteProperties class.
     */
    public RouteProperties() {
    }

    /**
     * Get the addressPrefix property: The destination CIDR to which the route applies.
     * 
     * @return the addressPrefix value.
     */
    public String addressPrefix() {
        return this.addressPrefix;
    }

    /**
     * Set the addressPrefix property: The destination CIDR to which the route applies.
     * 
     * @param addressPrefix the addressPrefix value to set.
     * @return the RouteProperties object itself.
     */
    public RouteProperties withAddressPrefix(String addressPrefix) {
        this.addressPrefix = addressPrefix;
        return this;
    }

    /**
     * Get the nextHopIpAddress property: The IP address packets should be forwarded to. Next hop values are only
     * allowed in routes where the next hop type is VirtualAppliance.
     * 
     * @return the nextHopIpAddress value.
     */
    public String nextHopIpAddress() {
        return this.nextHopIpAddress;
    }

    /**
     * Set the nextHopIpAddress property: The IP address packets should be forwarded to. Next hop values are only
     * allowed in routes where the next hop type is VirtualAppliance.
     * 
     * @param nextHopIpAddress the nextHopIpAddress value to set.
     * @return the RouteProperties object itself.
     */
    public RouteProperties withNextHopIpAddress(String nextHopIpAddress) {
        this.nextHopIpAddress = nextHopIpAddress;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("addressPrefix", this.addressPrefix);
        jsonWriter.writeStringField("nextHopIpAddress", this.nextHopIpAddress);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RouteProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RouteProperties if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the RouteProperties.
     */
    public static RouteProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RouteProperties deserializedRouteProperties = new RouteProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("addressPrefix".equals(fieldName)) {
                    deserializedRouteProperties.addressPrefix = reader.getString();
                } else if ("nextHopIpAddress".equals(fieldName)) {
                    deserializedRouteProperties.nextHopIpAddress = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRouteProperties;
        });
    }
}
