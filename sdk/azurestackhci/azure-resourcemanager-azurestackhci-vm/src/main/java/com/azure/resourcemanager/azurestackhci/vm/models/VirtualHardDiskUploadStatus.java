// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The upload status of the virtual hard disk.
 */
@Immutable
public final class VirtualHardDiskUploadStatus implements JsonSerializable<VirtualHardDiskUploadStatus> {
    /*
     * The uploaded sized of the virtual hard disk in MB
     */
    private Long uploadedSizeInMB;

    /*
     * The status of Uploading virtual hard disk [Succeeded, Failed, InProgress]
     */
    private Status status;

    /*
     * The progress of the operation in percentage
     */
    private Long progressPercentage;

    /*
     * VirtualHardDisk upload error code
     */
    private String errorCode;

    /*
     * Descriptive upload error message
     */
    private String errorMessage;

    /**
     * Creates an instance of VirtualHardDiskUploadStatus class.
     */
    private VirtualHardDiskUploadStatus() {
    }

    /**
     * Get the uploadedSizeInMB property: The uploaded sized of the virtual hard disk in MB.
     * 
     * @return the uploadedSizeInMB value.
     */
    public Long uploadedSizeInMB() {
        return this.uploadedSizeInMB;
    }

    /**
     * Get the status property: The status of Uploading virtual hard disk [Succeeded, Failed, InProgress].
     * 
     * @return the status value.
     */
    public Status status() {
        return this.status;
    }

    /**
     * Get the progressPercentage property: The progress of the operation in percentage.
     * 
     * @return the progressPercentage value.
     */
    public Long progressPercentage() {
        return this.progressPercentage;
    }

    /**
     * Get the errorCode property: VirtualHardDisk upload error code.
     * 
     * @return the errorCode value.
     */
    public String errorCode() {
        return this.errorCode;
    }

    /**
     * Get the errorMessage property: Descriptive upload error message.
     * 
     * @return the errorMessage value.
     */
    public String errorMessage() {
        return this.errorMessage;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("uploadedSizeInMB", this.uploadedSizeInMB);
        jsonWriter.writeStringField("status", this.status == null ? null : this.status.toString());
        jsonWriter.writeNumberField("progressPercentage", this.progressPercentage);
        jsonWriter.writeStringField("errorCode", this.errorCode);
        jsonWriter.writeStringField("errorMessage", this.errorMessage);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VirtualHardDiskUploadStatus from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VirtualHardDiskUploadStatus if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the VirtualHardDiskUploadStatus.
     */
    public static VirtualHardDiskUploadStatus fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            VirtualHardDiskUploadStatus deserializedVirtualHardDiskUploadStatus = new VirtualHardDiskUploadStatus();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("uploadedSizeInMB".equals(fieldName)) {
                    deserializedVirtualHardDiskUploadStatus.uploadedSizeInMB = reader.getNullable(JsonReader::getLong);
                } else if ("status".equals(fieldName)) {
                    deserializedVirtualHardDiskUploadStatus.status = Status.fromString(reader.getString());
                } else if ("progressPercentage".equals(fieldName)) {
                    deserializedVirtualHardDiskUploadStatus.progressPercentage
                        = reader.getNullable(JsonReader::getLong);
                } else if ("errorCode".equals(fieldName)) {
                    deserializedVirtualHardDiskUploadStatus.errorCode = reader.getString();
                } else if ("errorMessage".equals(fieldName)) {
                    deserializedVirtualHardDiskUploadStatus.errorMessage = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVirtualHardDiskUploadStatus;
        });
    }
}
