// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Provisioning state of the resource.
 */
public final class ProvisioningStateEnum extends ExpandableStringEnum<ProvisioningStateEnum> {
    /**
     * Provisioning has succeeded.
     */
    public static final ProvisioningStateEnum SUCCEEDED = fromString("Succeeded");

    /**
     * Provisioning has failed.
     */
    public static final ProvisioningStateEnum FAILED = fromString("Failed");

    /**
     * Provisioning is in progress.
     */
    public static final ProvisioningStateEnum IN_PROGRESS = fromString("InProgress");

    /**
     * Provisioning has been accepted.
     */
    public static final ProvisioningStateEnum ACCEPTED = fromString("Accepted");

    /**
     * Deletion of the resource is in progress.
     */
    public static final ProvisioningStateEnum DELETING = fromString("Deleting");

    /**
     * Provisioning has been canceled.
     */
    public static final ProvisioningStateEnum CANCELED = fromString("Canceled");

    /**
     * Creates a new instance of ProvisioningStateEnum value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public ProvisioningStateEnum() {
    }

    /**
     * Creates or finds a ProvisioningStateEnum from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding ProvisioningStateEnum.
     */
    public static ProvisioningStateEnum fromString(String name) {
        return fromString(name, ProvisioningStateEnum.class);
    }

    /**
     * Gets known ProvisioningStateEnum values.
     * 
     * @return known ProvisioningStateEnum values.
     */
    public static Collection<ProvisioningStateEnum> values() {
        return values(ProvisioningStateEnum.class);
    }
}
