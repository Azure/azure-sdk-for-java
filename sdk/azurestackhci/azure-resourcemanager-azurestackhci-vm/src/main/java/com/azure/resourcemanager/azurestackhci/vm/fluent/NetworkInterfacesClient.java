// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.azurestackhci.vm.fluent.models.NetworkInterfaceInner;
import com.azure.resourcemanager.azurestackhci.vm.models.NetworkInterfacesUpdateRequest;

/**
 * An instance of this class provides access to all the operations defined in NetworkInterfacesClient.
 */
public interface NetworkInterfacesClient {
    /**
     * Gets a network interface.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a network interface along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<NetworkInterfaceInner> getByResourceGroupWithResponse(String resourceGroupName,
        String networkInterfaceName, Context context);

    /**
     * Gets a network interface.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a network interface.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NetworkInterfaceInner getByResourceGroup(String resourceGroupName, String networkInterfaceName);

    /**
     * The operation to create or update a network interface. Please note some properties can be set only during network
     * interface creation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the network interface resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<NetworkInterfaceInner>, NetworkInterfaceInner> beginCreateOrUpdate(String resourceGroupName,
        String networkInterfaceName, NetworkInterfaceInner resource);

    /**
     * The operation to create or update a network interface. Please note some properties can be set only during network
     * interface creation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the network interface resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<NetworkInterfaceInner>, NetworkInterfaceInner> beginCreateOrUpdate(String resourceGroupName,
        String networkInterfaceName, NetworkInterfaceInner resource, Context context);

    /**
     * The operation to create or update a network interface. Please note some properties can be set only during network
     * interface creation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the network interface resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NetworkInterfaceInner createOrUpdate(String resourceGroupName, String networkInterfaceName,
        NetworkInterfaceInner resource);

    /**
     * The operation to create or update a network interface. Please note some properties can be set only during network
     * interface creation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the network interface resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NetworkInterfaceInner createOrUpdate(String resourceGroupName, String networkInterfaceName,
        NetworkInterfaceInner resource, Context context);

    /**
     * The operation to update a network interface.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the network interface resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<NetworkInterfaceInner>, NetworkInterfaceInner> beginUpdate(String resourceGroupName,
        String networkInterfaceName, NetworkInterfacesUpdateRequest properties);

    /**
     * The operation to update a network interface.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the network interface resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<NetworkInterfaceInner>, NetworkInterfaceInner> beginUpdate(String resourceGroupName,
        String networkInterfaceName, NetworkInterfacesUpdateRequest properties, Context context);

    /**
     * The operation to update a network interface.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the network interface resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NetworkInterfaceInner update(String resourceGroupName, String networkInterfaceName,
        NetworkInterfacesUpdateRequest properties);

    /**
     * The operation to update a network interface.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the network interface resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NetworkInterfaceInner update(String resourceGroupName, String networkInterfaceName,
        NetworkInterfacesUpdateRequest properties, Context context);

    /**
     * The operation to delete a network interface.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String networkInterfaceName);

    /**
     * The operation to delete a network interface.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String networkInterfaceName,
        Context context);

    /**
     * The operation to delete a network interface.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String networkInterfaceName);

    /**
     * The operation to delete a network interface.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkInterfaceName Name of the network interface.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String networkInterfaceName, Context context);

    /**
     * Lists all of the network interfaces in the specified resource group. Use the nextLink property in the response to
     * get the next page of network interfaces.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NetworkInterface list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NetworkInterfaceInner> listByResourceGroup(String resourceGroupName);

    /**
     * Lists all of the network interfaces in the specified resource group. Use the nextLink property in the response to
     * get the next page of network interfaces.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NetworkInterface list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NetworkInterfaceInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Lists all of the network interfaces in the specified subscription. Use the nextLink property in the response to
     * get the next page of network interfaces.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NetworkInterface list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NetworkInterfaceInner> list();

    /**
     * Lists all of the network interfaces in the specified subscription. Use the nextLink property in the response to
     * get the next page of network interfaces.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NetworkInterface list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NetworkInterfaceInner> list(Context context);
}
