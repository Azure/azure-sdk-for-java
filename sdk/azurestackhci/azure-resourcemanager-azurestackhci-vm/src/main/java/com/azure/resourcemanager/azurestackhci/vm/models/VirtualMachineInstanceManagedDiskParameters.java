// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The parameters of a managed disk.
 */
@Fluent
public final class VirtualMachineInstanceManagedDiskParameters
    implements JsonSerializable<VirtualMachineInstanceManagedDiskParameters> {
    /*
     * Specifies the security profile for the managed disk.
     */
    private VMDiskSecurityProfile securityProfile;

    /**
     * Creates an instance of VirtualMachineInstanceManagedDiskParameters class.
     */
    public VirtualMachineInstanceManagedDiskParameters() {
    }

    /**
     * Get the securityProfile property: Specifies the security profile for the managed disk.
     * 
     * @return the securityProfile value.
     */
    public VMDiskSecurityProfile securityProfile() {
        return this.securityProfile;
    }

    /**
     * Set the securityProfile property: Specifies the security profile for the managed disk.
     * 
     * @param securityProfile the securityProfile value to set.
     * @return the VirtualMachineInstanceManagedDiskParameters object itself.
     */
    public VirtualMachineInstanceManagedDiskParameters withSecurityProfile(VMDiskSecurityProfile securityProfile) {
        this.securityProfile = securityProfile;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (securityProfile() != null) {
            securityProfile().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("securityProfile", this.securityProfile);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VirtualMachineInstanceManagedDiskParameters from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VirtualMachineInstanceManagedDiskParameters if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the VirtualMachineInstanceManagedDiskParameters.
     */
    public static VirtualMachineInstanceManagedDiskParameters fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            VirtualMachineInstanceManagedDiskParameters deserializedVirtualMachineInstanceManagedDiskParameters
                = new VirtualMachineInstanceManagedDiskParameters();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("securityProfile".equals(fieldName)) {
                    deserializedVirtualMachineInstanceManagedDiskParameters.securityProfile
                        = VMDiskSecurityProfile.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVirtualMachineInstanceManagedDiskParameters;
        });
    }
}
