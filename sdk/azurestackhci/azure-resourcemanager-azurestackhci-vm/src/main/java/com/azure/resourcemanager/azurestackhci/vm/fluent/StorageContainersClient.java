// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.azurestackhci.vm.fluent.models.StorageContainerInner;
import com.azure.resourcemanager.azurestackhci.vm.models.StorageContainerTagsUpdate;

/**
 * An instance of this class provides access to all the operations defined in StorageContainersClient.
 */
public interface StorageContainersClient {
    /**
     * Gets a storage container.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageContainerName Name of the storage container.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a storage container along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<StorageContainerInner> getByResourceGroupWithResponse(String resourceGroupName,
        String storageContainerName, Context context);

    /**
     * Gets a storage container.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageContainerName Name of the storage container.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a storage container.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    StorageContainerInner getByResourceGroup(String resourceGroupName, String storageContainerName);

    /**
     * The operation to create or update a storage container. Please note some properties can be set only during storage
     * container creation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageContainerName Name of the storage container.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the storage container resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<StorageContainerInner>, StorageContainerInner> beginCreateOrUpdate(String resourceGroupName,
        String storageContainerName, StorageContainerInner resource);

    /**
     * The operation to create or update a storage container. Please note some properties can be set only during storage
     * container creation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageContainerName Name of the storage container.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the storage container resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<StorageContainerInner>, StorageContainerInner> beginCreateOrUpdate(String resourceGroupName,
        String storageContainerName, StorageContainerInner resource, Context context);

    /**
     * The operation to create or update a storage container. Please note some properties can be set only during storage
     * container creation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageContainerName Name of the storage container.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the storage container resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    StorageContainerInner createOrUpdate(String resourceGroupName, String storageContainerName,
        StorageContainerInner resource);

    /**
     * The operation to create or update a storage container. Please note some properties can be set only during storage
     * container creation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageContainerName Name of the storage container.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the storage container resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    StorageContainerInner createOrUpdate(String resourceGroupName, String storageContainerName,
        StorageContainerInner resource, Context context);

    /**
     * The operation to update a storage container.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageContainerName Name of the storage container.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the storage container resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<StorageContainerInner>, StorageContainerInner> beginUpdate(String resourceGroupName,
        String storageContainerName, StorageContainerTagsUpdate properties);

    /**
     * The operation to update a storage container.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageContainerName Name of the storage container.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the storage container resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<StorageContainerInner>, StorageContainerInner> beginUpdate(String resourceGroupName,
        String storageContainerName, StorageContainerTagsUpdate properties, Context context);

    /**
     * The operation to update a storage container.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageContainerName Name of the storage container.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the storage container resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    StorageContainerInner update(String resourceGroupName, String storageContainerName,
        StorageContainerTagsUpdate properties);

    /**
     * The operation to update a storage container.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageContainerName Name of the storage container.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the storage container resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    StorageContainerInner update(String resourceGroupName, String storageContainerName,
        StorageContainerTagsUpdate properties, Context context);

    /**
     * The operation to delete a storage container.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageContainerName Name of the storage container.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String storageContainerName);

    /**
     * The operation to delete a storage container.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageContainerName Name of the storage container.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String storageContainerName,
        Context context);

    /**
     * The operation to delete a storage container.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageContainerName Name of the storage container.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String storageContainerName);

    /**
     * The operation to delete a storage container.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageContainerName Name of the storage container.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String storageContainerName, Context context);

    /**
     * Lists all of the storage containers in the specified resource group. Use the nextLink property in the response to
     * get the next page of storage containers.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a StorageContainer list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<StorageContainerInner> listByResourceGroup(String resourceGroupName);

    /**
     * Lists all of the storage containers in the specified resource group. Use the nextLink property in the response to
     * get the next page of storage containers.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a StorageContainer list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<StorageContainerInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Lists all of the storage containers in the specified subscription. Use the nextLink property in the response to
     * get the next page of storage containers.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a StorageContainer list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<StorageContainerInner> list();

    /**
     * Lists all of the storage containers in the specified subscription. Use the nextLink property in the response to
     * get the next page of storage containers.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a StorageContainer list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<StorageContainerInner> list(Context context);
}
