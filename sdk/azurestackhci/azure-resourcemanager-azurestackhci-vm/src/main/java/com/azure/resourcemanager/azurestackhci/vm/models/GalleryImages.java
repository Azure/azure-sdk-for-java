// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of GalleryImages.
 */
public interface GalleryImages {
    /**
     * Gets a gallery image.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a gallery image along with {@link Response}.
     */
    Response<GalleryImage> getByResourceGroupWithResponse(String resourceGroupName, String galleryImageName,
        Context context);

    /**
     * Gets a gallery image.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a gallery image.
     */
    GalleryImage getByResourceGroup(String resourceGroupName, String galleryImageName);

    /**
     * The operation to delete a gallery image.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String galleryImageName);

    /**
     * The operation to delete a gallery image.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String galleryImageName, Context context);

    /**
     * Lists all of the gallery images in the specified resource group. Use the nextLink property in the response to get
     * the next page of gallery images.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a GalleryImage list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<GalleryImage> listByResourceGroup(String resourceGroupName);

    /**
     * Lists all of the gallery images in the specified resource group. Use the nextLink property in the response to get
     * the next page of gallery images.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a GalleryImage list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<GalleryImage> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Lists all of the gallery images in the specified subscription. Use the nextLink property in the response to get
     * the next page of gallery images.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a GalleryImage list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<GalleryImage> list();

    /**
     * Lists all of the gallery images in the specified subscription. Use the nextLink property in the response to get
     * the next page of gallery images.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a GalleryImage list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<GalleryImage> list(Context context);

    /**
     * Gets a gallery image.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a gallery image along with {@link Response}.
     */
    GalleryImage getById(String id);

    /**
     * Gets a gallery image.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a gallery image along with {@link Response}.
     */
    Response<GalleryImage> getByIdWithResponse(String id, Context context);

    /**
     * The operation to delete a gallery image.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * The operation to delete a gallery image.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new GalleryImage resource.
     * 
     * @param name resource name.
     * @return the first stage of the new GalleryImage definition.
     */
    GalleryImage.DefinitionStages.Blank define(String name);
}
