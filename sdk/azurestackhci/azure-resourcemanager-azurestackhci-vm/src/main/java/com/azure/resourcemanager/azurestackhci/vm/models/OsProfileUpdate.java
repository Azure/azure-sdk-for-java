// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * OsProfile - describes the update configuration of the operating system.
 */
@Fluent
public final class OsProfileUpdate implements JsonSerializable<OsProfileUpdate> {
    /*
     * ComputerName - name of the computer
     */
    private String computerName;

    /*
     * Linux configuration properties
     */
    private OsProfileUpdateLinuxConfiguration linuxConfiguration;

    /*
     * Windows configuration properties
     */
    private OsProfileUpdateWindowsConfiguration windowsConfiguration;

    /**
     * Creates an instance of OsProfileUpdate class.
     */
    public OsProfileUpdate() {
    }

    /**
     * Get the computerName property: ComputerName - name of the computer.
     * 
     * @return the computerName value.
     */
    public String computerName() {
        return this.computerName;
    }

    /**
     * Set the computerName property: ComputerName - name of the computer.
     * 
     * @param computerName the computerName value to set.
     * @return the OsProfileUpdate object itself.
     */
    public OsProfileUpdate withComputerName(String computerName) {
        this.computerName = computerName;
        return this;
    }

    /**
     * Get the linuxConfiguration property: Linux configuration properties.
     * 
     * @return the linuxConfiguration value.
     */
    public OsProfileUpdateLinuxConfiguration linuxConfiguration() {
        return this.linuxConfiguration;
    }

    /**
     * Set the linuxConfiguration property: Linux configuration properties.
     * 
     * @param linuxConfiguration the linuxConfiguration value to set.
     * @return the OsProfileUpdate object itself.
     */
    public OsProfileUpdate withLinuxConfiguration(OsProfileUpdateLinuxConfiguration linuxConfiguration) {
        this.linuxConfiguration = linuxConfiguration;
        return this;
    }

    /**
     * Get the windowsConfiguration property: Windows configuration properties.
     * 
     * @return the windowsConfiguration value.
     */
    public OsProfileUpdateWindowsConfiguration windowsConfiguration() {
        return this.windowsConfiguration;
    }

    /**
     * Set the windowsConfiguration property: Windows configuration properties.
     * 
     * @param windowsConfiguration the windowsConfiguration value to set.
     * @return the OsProfileUpdate object itself.
     */
    public OsProfileUpdate withWindowsConfiguration(OsProfileUpdateWindowsConfiguration windowsConfiguration) {
        this.windowsConfiguration = windowsConfiguration;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (linuxConfiguration() != null) {
            linuxConfiguration().validate();
        }
        if (windowsConfiguration() != null) {
            windowsConfiguration().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("computerName", this.computerName);
        jsonWriter.writeJsonField("linuxConfiguration", this.linuxConfiguration);
        jsonWriter.writeJsonField("windowsConfiguration", this.windowsConfiguration);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OsProfileUpdate from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of OsProfileUpdate if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the OsProfileUpdate.
     */
    public static OsProfileUpdate fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OsProfileUpdate deserializedOsProfileUpdate = new OsProfileUpdate();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("computerName".equals(fieldName)) {
                    deserializedOsProfileUpdate.computerName = reader.getString();
                } else if ("linuxConfiguration".equals(fieldName)) {
                    deserializedOsProfileUpdate.linuxConfiguration = OsProfileUpdateLinuxConfiguration.fromJson(reader);
                } else if ("windowsConfiguration".equals(fieldName)) {
                    deserializedOsProfileUpdate.windowsConfiguration
                        = OsProfileUpdateWindowsConfiguration.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedOsProfileUpdate;
        });
    }
}
