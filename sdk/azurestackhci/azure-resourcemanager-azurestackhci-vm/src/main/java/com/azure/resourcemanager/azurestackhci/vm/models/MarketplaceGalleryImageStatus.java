// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The observed state of marketplace gallery images.
 */
@Immutable
public final class MarketplaceGalleryImageStatus implements JsonSerializable<MarketplaceGalleryImageStatus> {
    /*
     * MarketplaceGalleryImage provisioning error code
     */
    private String errorCode;

    /*
     * Descriptive error message
     */
    private String errorMessage;

    /*
     * Provisioning status of marketplace gallery image
     */
    private MarketplaceGalleryImageStatusProvisioningStatus provisioningStatus;

    /*
     * The download status of the gallery image
     */
    private MarketplaceGalleryImageStatusDownloadStatus downloadStatus;

    /*
     * The progress of the operation in percentage
     */
    private Long progressPercentage;

    /**
     * Creates an instance of MarketplaceGalleryImageStatus class.
     */
    private MarketplaceGalleryImageStatus() {
    }

    /**
     * Get the errorCode property: MarketplaceGalleryImage provisioning error code.
     * 
     * @return the errorCode value.
     */
    public String errorCode() {
        return this.errorCode;
    }

    /**
     * Get the errorMessage property: Descriptive error message.
     * 
     * @return the errorMessage value.
     */
    public String errorMessage() {
        return this.errorMessage;
    }

    /**
     * Get the provisioningStatus property: Provisioning status of marketplace gallery image.
     * 
     * @return the provisioningStatus value.
     */
    public MarketplaceGalleryImageStatusProvisioningStatus provisioningStatus() {
        return this.provisioningStatus;
    }

    /**
     * Get the downloadStatus property: The download status of the gallery image.
     * 
     * @return the downloadStatus value.
     */
    public MarketplaceGalleryImageStatusDownloadStatus downloadStatus() {
        return this.downloadStatus;
    }

    /**
     * Get the progressPercentage property: The progress of the operation in percentage.
     * 
     * @return the progressPercentage value.
     */
    public Long progressPercentage() {
        return this.progressPercentage;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (provisioningStatus() != null) {
            provisioningStatus().validate();
        }
        if (downloadStatus() != null) {
            downloadStatus().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("errorCode", this.errorCode);
        jsonWriter.writeStringField("errorMessage", this.errorMessage);
        jsonWriter.writeJsonField("provisioningStatus", this.provisioningStatus);
        jsonWriter.writeJsonField("downloadStatus", this.downloadStatus);
        jsonWriter.writeNumberField("progressPercentage", this.progressPercentage);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MarketplaceGalleryImageStatus from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MarketplaceGalleryImageStatus if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the MarketplaceGalleryImageStatus.
     */
    public static MarketplaceGalleryImageStatus fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MarketplaceGalleryImageStatus deserializedMarketplaceGalleryImageStatus
                = new MarketplaceGalleryImageStatus();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("errorCode".equals(fieldName)) {
                    deserializedMarketplaceGalleryImageStatus.errorCode = reader.getString();
                } else if ("errorMessage".equals(fieldName)) {
                    deserializedMarketplaceGalleryImageStatus.errorMessage = reader.getString();
                } else if ("provisioningStatus".equals(fieldName)) {
                    deserializedMarketplaceGalleryImageStatus.provisioningStatus
                        = MarketplaceGalleryImageStatusProvisioningStatus.fromJson(reader);
                } else if ("downloadStatus".equals(fieldName)) {
                    deserializedMarketplaceGalleryImageStatus.downloadStatus
                        = MarketplaceGalleryImageStatusDownloadStatus.fromJson(reader);
                } else if ("progressPercentage".equals(fieldName)) {
                    deserializedMarketplaceGalleryImageStatus.progressPercentage
                        = reader.getNullable(JsonReader::getLong);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMarketplaceGalleryImageStatus;
        });
    }
}
