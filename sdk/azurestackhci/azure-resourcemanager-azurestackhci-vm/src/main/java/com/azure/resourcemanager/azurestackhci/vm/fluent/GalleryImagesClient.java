// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.azurestackhci.vm.fluent.models.GalleryImageInner;
import com.azure.resourcemanager.azurestackhci.vm.models.GalleryImageTagsUpdate;

/**
 * An instance of this class provides access to all the operations defined in GalleryImagesClient.
 */
public interface GalleryImagesClient {
    /**
     * Gets a gallery image.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a gallery image along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<GalleryImageInner> getByResourceGroupWithResponse(String resourceGroupName, String galleryImageName,
        Context context);

    /**
     * Gets a gallery image.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a gallery image.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GalleryImageInner getByResourceGroup(String resourceGroupName, String galleryImageName);

    /**
     * The operation to create or update a gallery image. Please note some properties can be set only during gallery
     * image creation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the gallery images resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<GalleryImageInner>, GalleryImageInner> beginCreateOrUpdate(String resourceGroupName,
        String galleryImageName, GalleryImageInner resource);

    /**
     * The operation to create or update a gallery image. Please note some properties can be set only during gallery
     * image creation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the gallery images resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<GalleryImageInner>, GalleryImageInner> beginCreateOrUpdate(String resourceGroupName,
        String galleryImageName, GalleryImageInner resource, Context context);

    /**
     * The operation to create or update a gallery image. Please note some properties can be set only during gallery
     * image creation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the gallery images resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GalleryImageInner createOrUpdate(String resourceGroupName, String galleryImageName, GalleryImageInner resource);

    /**
     * The operation to create or update a gallery image. Please note some properties can be set only during gallery
     * image creation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the gallery images resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GalleryImageInner createOrUpdate(String resourceGroupName, String galleryImageName, GalleryImageInner resource,
        Context context);

    /**
     * The operation to update a gallery image.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the gallery images resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<GalleryImageInner>, GalleryImageInner> beginUpdate(String resourceGroupName,
        String galleryImageName, GalleryImageTagsUpdate properties);

    /**
     * The operation to update a gallery image.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the gallery images resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<GalleryImageInner>, GalleryImageInner> beginUpdate(String resourceGroupName,
        String galleryImageName, GalleryImageTagsUpdate properties, Context context);

    /**
     * The operation to update a gallery image.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the gallery images resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GalleryImageInner update(String resourceGroupName, String galleryImageName, GalleryImageTagsUpdate properties);

    /**
     * The operation to update a gallery image.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the gallery images resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GalleryImageInner update(String resourceGroupName, String galleryImageName, GalleryImageTagsUpdate properties,
        Context context);

    /**
     * The operation to delete a gallery image.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String galleryImageName);

    /**
     * The operation to delete a gallery image.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String galleryImageName, Context context);

    /**
     * The operation to delete a gallery image.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String galleryImageName);

    /**
     * The operation to delete a gallery image.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param galleryImageName Name of the gallery image.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String galleryImageName, Context context);

    /**
     * Lists all of the gallery images in the specified resource group. Use the nextLink property in the response to get
     * the next page of gallery images.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a GalleryImage list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<GalleryImageInner> listByResourceGroup(String resourceGroupName);

    /**
     * Lists all of the gallery images in the specified resource group. Use the nextLink property in the response to get
     * the next page of gallery images.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a GalleryImage list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<GalleryImageInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Lists all of the gallery images in the specified subscription. Use the nextLink property in the response to get
     * the next page of gallery images.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a GalleryImage list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<GalleryImageInner> list();

    /**
     * Lists all of the gallery images in the specified subscription. Use the nextLink property in the response to get
     * the next page of gallery images.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a GalleryImage list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<GalleryImageInner> list(Context context);
}
