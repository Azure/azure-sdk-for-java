// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Windows Configuration for the virtual machine instance.
 */
@Fluent
public final class VirtualMachineInstancePropertiesOsProfileWindowsConfiguration
    implements JsonSerializable<VirtualMachineInstancePropertiesOsProfileWindowsConfiguration> {
    /*
     * Whether to EnableAutomaticUpdates on the machine
     */
    private Boolean enableAutomaticUpdates;

    /*
     * Specifies the ssh key configuration for Windows OS.
     */
    private SshConfiguration ssh;

    /*
     * TimeZone for the virtual machine instance
     */
    private String timeZone;

    /*
     * Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance
     * creation process.
     */
    private Boolean provisionVMAgent;

    /*
     * Used to indicate whether the VM Config Agent should be installed during the virtual machine creation process.
     */
    private Boolean provisionVMConfigAgent;

    /**
     * Creates an instance of VirtualMachineInstancePropertiesOsProfileWindowsConfiguration class.
     */
    public VirtualMachineInstancePropertiesOsProfileWindowsConfiguration() {
    }

    /**
     * Get the enableAutomaticUpdates property: Whether to EnableAutomaticUpdates on the machine.
     * 
     * @return the enableAutomaticUpdates value.
     */
    public Boolean enableAutomaticUpdates() {
        return this.enableAutomaticUpdates;
    }

    /**
     * Set the enableAutomaticUpdates property: Whether to EnableAutomaticUpdates on the machine.
     * 
     * @param enableAutomaticUpdates the enableAutomaticUpdates value to set.
     * @return the VirtualMachineInstancePropertiesOsProfileWindowsConfiguration object itself.
     */
    public VirtualMachineInstancePropertiesOsProfileWindowsConfiguration
        withEnableAutomaticUpdates(Boolean enableAutomaticUpdates) {
        this.enableAutomaticUpdates = enableAutomaticUpdates;
        return this;
    }

    /**
     * Get the ssh property: Specifies the ssh key configuration for Windows OS.
     * 
     * @return the ssh value.
     */
    public SshConfiguration ssh() {
        return this.ssh;
    }

    /**
     * Set the ssh property: Specifies the ssh key configuration for Windows OS.
     * 
     * @param ssh the ssh value to set.
     * @return the VirtualMachineInstancePropertiesOsProfileWindowsConfiguration object itself.
     */
    public VirtualMachineInstancePropertiesOsProfileWindowsConfiguration withSsh(SshConfiguration ssh) {
        this.ssh = ssh;
        return this;
    }

    /**
     * Get the timeZone property: TimeZone for the virtual machine instance.
     * 
     * @return the timeZone value.
     */
    public String timeZone() {
        return this.timeZone;
    }

    /**
     * Set the timeZone property: TimeZone for the virtual machine instance.
     * 
     * @param timeZone the timeZone value to set.
     * @return the VirtualMachineInstancePropertiesOsProfileWindowsConfiguration object itself.
     */
    public VirtualMachineInstancePropertiesOsProfileWindowsConfiguration withTimeZone(String timeZone) {
        this.timeZone = timeZone;
        return this;
    }

    /**
     * Get the provisionVMAgent property: Used to indicate whether Arc for Servers agent onboarding should be triggered
     * during the virtual machine instance creation process.
     * 
     * @return the provisionVMAgent value.
     */
    public Boolean provisionVMAgent() {
        return this.provisionVMAgent;
    }

    /**
     * Set the provisionVMAgent property: Used to indicate whether Arc for Servers agent onboarding should be triggered
     * during the virtual machine instance creation process.
     * 
     * @param provisionVMAgent the provisionVMAgent value to set.
     * @return the VirtualMachineInstancePropertiesOsProfileWindowsConfiguration object itself.
     */
    public VirtualMachineInstancePropertiesOsProfileWindowsConfiguration
        withProvisionVMAgent(Boolean provisionVMAgent) {
        this.provisionVMAgent = provisionVMAgent;
        return this;
    }

    /**
     * Get the provisionVMConfigAgent property: Used to indicate whether the VM Config Agent should be installed during
     * the virtual machine creation process.
     * 
     * @return the provisionVMConfigAgent value.
     */
    public Boolean provisionVMConfigAgent() {
        return this.provisionVMConfigAgent;
    }

    /**
     * Set the provisionVMConfigAgent property: Used to indicate whether the VM Config Agent should be installed during
     * the virtual machine creation process.
     * 
     * @param provisionVMConfigAgent the provisionVMConfigAgent value to set.
     * @return the VirtualMachineInstancePropertiesOsProfileWindowsConfiguration object itself.
     */
    public VirtualMachineInstancePropertiesOsProfileWindowsConfiguration
        withProvisionVMConfigAgent(Boolean provisionVMConfigAgent) {
        this.provisionVMConfigAgent = provisionVMConfigAgent;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (ssh() != null) {
            ssh().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("enableAutomaticUpdates", this.enableAutomaticUpdates);
        jsonWriter.writeJsonField("ssh", this.ssh);
        jsonWriter.writeStringField("timeZone", this.timeZone);
        jsonWriter.writeBooleanField("provisionVMAgent", this.provisionVMAgent);
        jsonWriter.writeBooleanField("provisionVMConfigAgent", this.provisionVMConfigAgent);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VirtualMachineInstancePropertiesOsProfileWindowsConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VirtualMachineInstancePropertiesOsProfileWindowsConfiguration if the JsonReader was
     * pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the
     * VirtualMachineInstancePropertiesOsProfileWindowsConfiguration.
     */
    public static VirtualMachineInstancePropertiesOsProfileWindowsConfiguration fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            VirtualMachineInstancePropertiesOsProfileWindowsConfiguration deserializedVirtualMachineInstancePropertiesOsProfileWindowsConfiguration
                = new VirtualMachineInstancePropertiesOsProfileWindowsConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("enableAutomaticUpdates".equals(fieldName)) {
                    deserializedVirtualMachineInstancePropertiesOsProfileWindowsConfiguration.enableAutomaticUpdates
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("ssh".equals(fieldName)) {
                    deserializedVirtualMachineInstancePropertiesOsProfileWindowsConfiguration.ssh
                        = SshConfiguration.fromJson(reader);
                } else if ("timeZone".equals(fieldName)) {
                    deserializedVirtualMachineInstancePropertiesOsProfileWindowsConfiguration.timeZone
                        = reader.getString();
                } else if ("provisionVMAgent".equals(fieldName)) {
                    deserializedVirtualMachineInstancePropertiesOsProfileWindowsConfiguration.provisionVMAgent
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("provisionVMConfigAgent".equals(fieldName)) {
                    deserializedVirtualMachineInstancePropertiesOsProfileWindowsConfiguration.provisionVMConfigAgent
                        = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVirtualMachineInstancePropertiesOsProfileWindowsConfiguration;
        });
    }
}
