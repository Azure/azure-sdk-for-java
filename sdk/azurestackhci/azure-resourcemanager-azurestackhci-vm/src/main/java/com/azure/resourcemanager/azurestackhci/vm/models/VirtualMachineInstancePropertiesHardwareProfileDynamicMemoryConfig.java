// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Dynamic memory config.
 */
@Fluent
public final class VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig
    implements JsonSerializable<VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig> {
    /*
     * Maximum memory in MB
     */
    private Long maximumMemoryMB;

    /*
     * Minimum memory in MB
     */
    private Long minimumMemoryMB;

    /*
     * Defines the amount of extra memory that should be reserved for a virtual machine instance at runtime, as a
     * percentage of the total memory that the virtual machine instance is thought to need. This only applies to virtual
     * systems with dynamic memory enabled. This property can be in the range of 5 to 2000.
     */
    private Integer targetMemoryBuffer;

    /**
     * Creates an instance of VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig class.
     */
    public VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig() {
    }

    /**
     * Get the maximumMemoryMB property: Maximum memory in MB.
     * 
     * @return the maximumMemoryMB value.
     */
    public Long maximumMemoryMB() {
        return this.maximumMemoryMB;
    }

    /**
     * Set the maximumMemoryMB property: Maximum memory in MB.
     * 
     * @param maximumMemoryMB the maximumMemoryMB value to set.
     * @return the VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig object itself.
     */
    public VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig
        withMaximumMemoryMB(Long maximumMemoryMB) {
        this.maximumMemoryMB = maximumMemoryMB;
        return this;
    }

    /**
     * Get the minimumMemoryMB property: Minimum memory in MB.
     * 
     * @return the minimumMemoryMB value.
     */
    public Long minimumMemoryMB() {
        return this.minimumMemoryMB;
    }

    /**
     * Set the minimumMemoryMB property: Minimum memory in MB.
     * 
     * @param minimumMemoryMB the minimumMemoryMB value to set.
     * @return the VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig object itself.
     */
    public VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig
        withMinimumMemoryMB(Long minimumMemoryMB) {
        this.minimumMemoryMB = minimumMemoryMB;
        return this;
    }

    /**
     * Get the targetMemoryBuffer property: Defines the amount of extra memory that should be reserved for a virtual
     * machine instance at runtime, as a percentage of the total memory that the virtual machine instance is thought to
     * need. This only applies to virtual systems with dynamic memory enabled. This property can be in the range of 5 to
     * 2000.
     * 
     * @return the targetMemoryBuffer value.
     */
    public Integer targetMemoryBuffer() {
        return this.targetMemoryBuffer;
    }

    /**
     * Set the targetMemoryBuffer property: Defines the amount of extra memory that should be reserved for a virtual
     * machine instance at runtime, as a percentage of the total memory that the virtual machine instance is thought to
     * need. This only applies to virtual systems with dynamic memory enabled. This property can be in the range of 5 to
     * 2000.
     * 
     * @param targetMemoryBuffer the targetMemoryBuffer value to set.
     * @return the VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig object itself.
     */
    public VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig
        withTargetMemoryBuffer(Integer targetMemoryBuffer) {
        this.targetMemoryBuffer = targetMemoryBuffer;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("maximumMemoryMB", this.maximumMemoryMB);
        jsonWriter.writeNumberField("minimumMemoryMB", this.minimumMemoryMB);
        jsonWriter.writeNumberField("targetMemoryBuffer", this.targetMemoryBuffer);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig if the JsonReader was
     * pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the
     * VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig.
     */
    public static VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig deserializedVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig
                = new VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("maximumMemoryMB".equals(fieldName)) {
                    deserializedVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig.maximumMemoryMB
                        = reader.getNullable(JsonReader::getLong);
                } else if ("minimumMemoryMB".equals(fieldName)) {
                    deserializedVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig.minimumMemoryMB
                        = reader.getNullable(JsonReader::getLong);
                } else if ("targetMemoryBuffer".equals(fieldName)) {
                    deserializedVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig.targetMemoryBuffer
                        = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig;
        });
    }
}
