// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.azurestackhci.vm.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Defines the resource properties for the update.
 */
@Fluent
public final class NetworkInterfacesUpdateProperties implements JsonSerializable<NetworkInterfacesUpdateProperties> {
    /*
     * NetworkSecurityGroup - Network Security Group attached to the network interface.
     */
    private NetworkSecurityGroupArmReference networkSecurityGroup;

    /*
     * DNS Settings for the interface
     */
    private InterfaceDNSSettings dnsSettings;

    /**
     * Creates an instance of NetworkInterfacesUpdateProperties class.
     */
    public NetworkInterfacesUpdateProperties() {
    }

    /**
     * Get the networkSecurityGroup property: NetworkSecurityGroup - Network Security Group attached to the network
     * interface.
     * 
     * @return the networkSecurityGroup value.
     */
    public NetworkSecurityGroupArmReference networkSecurityGroup() {
        return this.networkSecurityGroup;
    }

    /**
     * Set the networkSecurityGroup property: NetworkSecurityGroup - Network Security Group attached to the network
     * interface.
     * 
     * @param networkSecurityGroup the networkSecurityGroup value to set.
     * @return the NetworkInterfacesUpdateProperties object itself.
     */
    public NetworkInterfacesUpdateProperties
        withNetworkSecurityGroup(NetworkSecurityGroupArmReference networkSecurityGroup) {
        this.networkSecurityGroup = networkSecurityGroup;
        return this;
    }

    /**
     * Get the dnsSettings property: DNS Settings for the interface.
     * 
     * @return the dnsSettings value.
     */
    public InterfaceDNSSettings dnsSettings() {
        return this.dnsSettings;
    }

    /**
     * Set the dnsSettings property: DNS Settings for the interface.
     * 
     * @param dnsSettings the dnsSettings value to set.
     * @return the NetworkInterfacesUpdateProperties object itself.
     */
    public NetworkInterfacesUpdateProperties withDnsSettings(InterfaceDNSSettings dnsSettings) {
        this.dnsSettings = dnsSettings;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (networkSecurityGroup() != null) {
            networkSecurityGroup().validate();
        }
        if (dnsSettings() != null) {
            dnsSettings().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("networkSecurityGroup", this.networkSecurityGroup);
        jsonWriter.writeJsonField("dnsSettings", this.dnsSettings);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of NetworkInterfacesUpdateProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of NetworkInterfacesUpdateProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the NetworkInterfacesUpdateProperties.
     */
    public static NetworkInterfacesUpdateProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            NetworkInterfacesUpdateProperties deserializedNetworkInterfacesUpdateProperties
                = new NetworkInterfacesUpdateProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("networkSecurityGroup".equals(fieldName)) {
                    deserializedNetworkInterfacesUpdateProperties.networkSecurityGroup
                        = NetworkSecurityGroupArmReference.fromJson(reader);
                } else if ("dnsSettings".equals(fieldName)) {
                    deserializedNetworkInterfacesUpdateProperties.dnsSettings = InterfaceDNSSettings.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedNetworkInterfacesUpdateProperties;
        });
    }
}
