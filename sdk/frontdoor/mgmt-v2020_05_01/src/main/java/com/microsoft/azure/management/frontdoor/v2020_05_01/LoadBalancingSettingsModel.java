/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.frontdoor.v2020_05_01;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.SubResource;

/**
 * Load balancing settings for a backend pool.
 */
@JsonFlatten
public class LoadBalancingSettingsModel extends SubResource {
    /**
     * The number of samples to consider for load balancing decisions.
     */
    @JsonProperty(value = "properties.sampleSize")
    private Integer sampleSize;

    /**
     * The number of samples within the sample period that must succeed.
     */
    @JsonProperty(value = "properties.successfulSamplesRequired")
    private Integer successfulSamplesRequired;

    /**
     * The additional latency in milliseconds for probes to fall into the
     * lowest latency bucket.
     */
    @JsonProperty(value = "properties.additionalLatencyMilliseconds")
    private Integer additionalLatencyMilliseconds;

    /**
     * Resource status. Possible values include: 'Creating', 'Enabling',
     * 'Enabled', 'Disabling', 'Disabled', 'Deleting'.
     */
    @JsonProperty(value = "properties.resourceState")
    private FrontDoorResourceState resourceState;

    /**
     * Resource name.
     */
    @JsonProperty(value = "name")
    private String name;

    /**
     * Resource type.
     */
    @JsonProperty(value = "type", access = JsonProperty.Access.WRITE_ONLY)
    private String type;

    /**
     * Get the number of samples to consider for load balancing decisions.
     *
     * @return the sampleSize value
     */
    public Integer sampleSize() {
        return this.sampleSize;
    }

    /**
     * Set the number of samples to consider for load balancing decisions.
     *
     * @param sampleSize the sampleSize value to set
     * @return the LoadBalancingSettingsModel object itself.
     */
    public LoadBalancingSettingsModel withSampleSize(Integer sampleSize) {
        this.sampleSize = sampleSize;
        return this;
    }

    /**
     * Get the number of samples within the sample period that must succeed.
     *
     * @return the successfulSamplesRequired value
     */
    public Integer successfulSamplesRequired() {
        return this.successfulSamplesRequired;
    }

    /**
     * Set the number of samples within the sample period that must succeed.
     *
     * @param successfulSamplesRequired the successfulSamplesRequired value to set
     * @return the LoadBalancingSettingsModel object itself.
     */
    public LoadBalancingSettingsModel withSuccessfulSamplesRequired(Integer successfulSamplesRequired) {
        this.successfulSamplesRequired = successfulSamplesRequired;
        return this;
    }

    /**
     * Get the additional latency in milliseconds for probes to fall into the lowest latency bucket.
     *
     * @return the additionalLatencyMilliseconds value
     */
    public Integer additionalLatencyMilliseconds() {
        return this.additionalLatencyMilliseconds;
    }

    /**
     * Set the additional latency in milliseconds for probes to fall into the lowest latency bucket.
     *
     * @param additionalLatencyMilliseconds the additionalLatencyMilliseconds value to set
     * @return the LoadBalancingSettingsModel object itself.
     */
    public LoadBalancingSettingsModel withAdditionalLatencyMilliseconds(Integer additionalLatencyMilliseconds) {
        this.additionalLatencyMilliseconds = additionalLatencyMilliseconds;
        return this;
    }

    /**
     * Get resource status. Possible values include: 'Creating', 'Enabling', 'Enabled', 'Disabling', 'Disabled', 'Deleting'.
     *
     * @return the resourceState value
     */
    public FrontDoorResourceState resourceState() {
        return this.resourceState;
    }

    /**
     * Set resource status. Possible values include: 'Creating', 'Enabling', 'Enabled', 'Disabling', 'Disabled', 'Deleting'.
     *
     * @param resourceState the resourceState value to set
     * @return the LoadBalancingSettingsModel object itself.
     */
    public LoadBalancingSettingsModel withResourceState(FrontDoorResourceState resourceState) {
        this.resourceState = resourceState;
        return this;
    }

    /**
     * Get resource name.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set resource name.
     *
     * @param name the name value to set
     * @return the LoadBalancingSettingsModel object itself.
     */
    public LoadBalancingSettingsModel withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get resource type.
     *
     * @return the type value
     */
    public String type() {
        return this.type;
    }

}
