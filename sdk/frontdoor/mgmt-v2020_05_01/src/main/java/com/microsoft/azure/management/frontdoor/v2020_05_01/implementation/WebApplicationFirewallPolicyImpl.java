/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.frontdoor.v2020_05_01.implementation;

import com.microsoft.azure.arm.resources.models.implementation.GroupableResourceCoreImpl;
import com.microsoft.azure.management.frontdoor.v2020_05_01.WebApplicationFirewallPolicy;
import rx.Observable;
import com.microsoft.azure.management.frontdoor.v2020_05_01.PolicySettings;
import com.microsoft.azure.management.frontdoor.v2020_05_01.CustomRuleList;
import com.microsoft.azure.management.frontdoor.v2020_05_01.ManagedRuleSetList;
import java.util.List;
import com.microsoft.azure.management.frontdoor.v2020_05_01.FrontendEndpointLink;
import com.microsoft.azure.management.frontdoor.v2020_05_01.RoutingRuleLink;
import com.microsoft.azure.management.frontdoor.v2020_05_01.PolicyResourceState;

class WebApplicationFirewallPolicyImpl extends GroupableResourceCoreImpl<WebApplicationFirewallPolicy, WebApplicationFirewallPolicyInner, WebApplicationFirewallPolicyImpl, NetworkManager> implements WebApplicationFirewallPolicy, WebApplicationFirewallPolicy.Definition, WebApplicationFirewallPolicy.Update {
    WebApplicationFirewallPolicyImpl(String name, WebApplicationFirewallPolicyInner inner, NetworkManager manager) {
        super(name, inner, manager);
    }

    @Override
    public Observable<WebApplicationFirewallPolicy> createResourceAsync() {
        PoliciesInner client = this.manager().inner().policies();
        return client.createOrUpdateAsync(this.resourceGroupName(), this.name(), this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<WebApplicationFirewallPolicy> updateResourceAsync() {
        PoliciesInner client = this.manager().inner().policies();
        return client.createOrUpdateAsync(this.resourceGroupName(), this.name(), this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<WebApplicationFirewallPolicyInner> getInnerAsync() {
        PoliciesInner client = this.manager().inner().policies();
        return client.getByResourceGroupAsync(this.resourceGroupName(), this.name());
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public CustomRuleList customRules() {
        return this.inner().customRules();
    }

    @Override
    public String etag() {
        return this.inner().etag();
    }

    @Override
    public List<FrontendEndpointLink> frontendEndpointLinks() {
        return this.inner().frontendEndpointLinks();
    }

    @Override
    public ManagedRuleSetList managedRules() {
        return this.inner().managedRules();
    }

    @Override
    public PolicySettings policySettings() {
        return this.inner().policySettings();
    }

    @Override
    public String provisioningState() {
        return this.inner().provisioningState();
    }

    @Override
    public PolicyResourceState resourceState() {
        return this.inner().resourceState();
    }

    @Override
    public List<RoutingRuleLink> routingRuleLinks() {
        return this.inner().routingRuleLinks();
    }

    @Override
    public WebApplicationFirewallPolicyImpl withCustomRules(CustomRuleList customRules) {
        this.inner().withCustomRules(customRules);
        return this;
    }

    @Override
    public WebApplicationFirewallPolicyImpl withEtag(String etag) {
        this.inner().withEtag(etag);
        return this;
    }

    @Override
    public WebApplicationFirewallPolicyImpl withManagedRules(ManagedRuleSetList managedRules) {
        this.inner().withManagedRules(managedRules);
        return this;
    }

    @Override
    public WebApplicationFirewallPolicyImpl withPolicySettings(PolicySettings policySettings) {
        this.inner().withPolicySettings(policySettings);
        return this;
    }

}
