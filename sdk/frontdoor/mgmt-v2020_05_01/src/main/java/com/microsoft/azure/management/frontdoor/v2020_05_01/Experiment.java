/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.frontdoor.v2020_05_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.frontdoor.v2020_05_01.implementation.ExperimentInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.frontdoor.v2020_05_01.implementation.NetworkManager;
import java.util.Map;
import com.microsoft.azure.management.frontdoor.v2020_05_01.implementation.EndpointInner;

/**
 * Type representing Experiment.
 */
public interface Experiment extends HasInner<ExperimentInner>, Indexable, Refreshable<Experiment>, Updatable<Experiment.Update>, HasManager<NetworkManager> {
    /**
     * @return the description value.
     */
    String description();

    /**
     * @return the enabledState value.
     */
    State enabledState();

    /**
     * @return the endpointA value.
     */
    EndpointInner endpointA();

    /**
     * @return the endpointB value.
     */
    EndpointInner endpointB();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the location value.
     */
    String location();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the resourceState value.
     */
    NetworkExperimentResourceState resourceState();

    /**
     * @return the scriptFileUri value.
     */
    String scriptFileUri();

    /**
     * @return the status value.
     */
    String status();

    /**
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the Experiment definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithNetworkExperimentProfile, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of Experiment definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a Experiment definition.
         */
        interface Blank extends WithNetworkExperimentProfile {
        }

        /**
         * The stage of the experiment definition allowing to specify NetworkExperimentProfile.
         */
        interface WithNetworkExperimentProfile {
           /**
            * Specifies resourceGroupName, profileName.
            * @param resourceGroupName Name of the Resource group within the Azure subscription
            * @param profileName The Profile identifier associated with the Tenant and Partner
            * @return the next definition stage
            */
            WithCreate withExistingNetworkExperimentProfile(String resourceGroupName, String profileName);
        }

        /**
         * The stage of the experiment definition allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             * @param description The description of the details or intents of the Experiment
             * @return the next definition stage
             */
            WithCreate withDescription(String description);
        }

        /**
         * The stage of the experiment definition allowing to specify EnabledState.
         */
        interface WithEnabledState {
            /**
             * Specifies enabledState.
             * @param enabledState The state of the Experiment. Possible values include: 'Enabled', 'Disabled'
             * @return the next definition stage
             */
            WithCreate withEnabledState(State enabledState);
        }

        /**
         * The stage of the experiment definition allowing to specify EndpointA.
         */
        interface WithEndpointA {
            /**
             * Specifies endpointA.
             * @param endpointA The endpoint A of an experiment
             * @return the next definition stage
             */
            WithCreate withEndpointA(EndpointInner endpointA);
        }

        /**
         * The stage of the experiment definition allowing to specify EndpointB.
         */
        interface WithEndpointB {
            /**
             * Specifies endpointB.
             * @param endpointB The endpoint B of an experiment
             * @return the next definition stage
             */
            WithCreate withEndpointB(EndpointInner endpointB);
        }

        /**
         * The stage of the experiment definition allowing to specify Location.
         */
        interface WithLocation {
            /**
             * Specifies location.
             * @param location Resource location
             * @return the next definition stage
             */
            WithCreate withLocation(String location);
        }

        /**
         * The stage of the experiment definition allowing to specify ResourceState.
         */
        interface WithResourceState {
            /**
             * Specifies resourceState.
             * @param resourceState Resource status. Possible values include: 'Creating', 'Enabling', 'Enabled', 'Disabling', 'Disabled', 'Deleting'
             * @return the next definition stage
             */
            WithCreate withResourceState(NetworkExperimentResourceState resourceState);
        }

        /**
         * The stage of the experiment definition allowing to specify Tags.
         */
        interface WithTags {
            /**
             * Specifies tags.
             * @param tags Resource tags
             * @return the next definition stage
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<Experiment>, DefinitionStages.WithDescription, DefinitionStages.WithEnabledState, DefinitionStages.WithEndpointA, DefinitionStages.WithEndpointB, DefinitionStages.WithLocation, DefinitionStages.WithResourceState, DefinitionStages.WithTags {
        }
    }
    /**
     * The template for a Experiment update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<Experiment>, UpdateStages.WithDescription, UpdateStages.WithEnabledState, UpdateStages.WithTags {
    }

    /**
     * Grouping of Experiment update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the experiment update allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             * @param description The description of the intent or details of the Experiment
             * @return the next update stage
             */
            Update withDescription(String description);
        }

        /**
         * The stage of the experiment update allowing to specify EnabledState.
         */
        interface WithEnabledState {
            /**
             * Specifies enabledState.
             * @param enabledState The state of the Experiment. Possible values include: 'Enabled', 'Disabled'
             * @return the next update stage
             */
            Update withEnabledState(State enabledState);
        }

        /**
         * The stage of the experiment update allowing to specify Tags.
         */
        interface WithTags {
            /**
             * Specifies tags.
             * @param tags Resource tags
             * @return the next update stage
             */
            Update withTags(Map<String, String> tags);
        }

    }
}
