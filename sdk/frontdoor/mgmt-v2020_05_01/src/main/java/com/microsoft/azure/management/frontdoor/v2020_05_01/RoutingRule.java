/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.frontdoor.v2020_05_01;

import java.util.List;
import com.microsoft.azure.SubResource;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * A routing rule represents a specification for traffic to treat and where to
 * send it, along with health probe information.
 */
@JsonFlatten
public class RoutingRule extends SubResource {
    /**
     * Frontend endpoints associated with this rule.
     */
    @JsonProperty(value = "properties.frontendEndpoints")
    private List<SubResource> frontendEndpoints;

    /**
     * Protocol schemes to match for this rule.
     */
    @JsonProperty(value = "properties.acceptedProtocols")
    private List<FrontDoorProtocol> acceptedProtocols;

    /**
     * The route patterns of the rule.
     */
    @JsonProperty(value = "properties.patternsToMatch")
    private List<String> patternsToMatch;

    /**
     * Whether to enable use of this rule. Permitted values are 'Enabled' or
     * 'Disabled'. Possible values include: 'Enabled', 'Disabled'.
     */
    @JsonProperty(value = "properties.enabledState")
    private RoutingRuleEnabledState enabledState;

    /**
     * A reference to the routing configuration.
     */
    @JsonProperty(value = "properties.routeConfiguration")
    private RouteConfiguration routeConfiguration;

    /**
     * A reference to a specific Rules Engine Configuration to apply to this
     * route.
     */
    @JsonProperty(value = "properties.rulesEngine")
    private SubResource rulesEngine;

    /**
     * Defines the Web Application Firewall policy for each routing rule (if
     * applicable).
     */
    @JsonProperty(value = "properties.webApplicationFirewallPolicyLink")
    private RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink webApplicationFirewallPolicyLink;

    /**
     * Resource status. Possible values include: 'Creating', 'Enabling',
     * 'Enabled', 'Disabling', 'Disabled', 'Deleting'.
     */
    @JsonProperty(value = "properties.resourceState")
    private FrontDoorResourceState resourceState;

    /**
     * Resource name.
     */
    @JsonProperty(value = "name")
    private String name;

    /**
     * Resource type.
     */
    @JsonProperty(value = "type", access = JsonProperty.Access.WRITE_ONLY)
    private String type;

    /**
     * Get frontend endpoints associated with this rule.
     *
     * @return the frontendEndpoints value
     */
    public List<SubResource> frontendEndpoints() {
        return this.frontendEndpoints;
    }

    /**
     * Set frontend endpoints associated with this rule.
     *
     * @param frontendEndpoints the frontendEndpoints value to set
     * @return the RoutingRule object itself.
     */
    public RoutingRule withFrontendEndpoints(List<SubResource> frontendEndpoints) {
        this.frontendEndpoints = frontendEndpoints;
        return this;
    }

    /**
     * Get protocol schemes to match for this rule.
     *
     * @return the acceptedProtocols value
     */
    public List<FrontDoorProtocol> acceptedProtocols() {
        return this.acceptedProtocols;
    }

    /**
     * Set protocol schemes to match for this rule.
     *
     * @param acceptedProtocols the acceptedProtocols value to set
     * @return the RoutingRule object itself.
     */
    public RoutingRule withAcceptedProtocols(List<FrontDoorProtocol> acceptedProtocols) {
        this.acceptedProtocols = acceptedProtocols;
        return this;
    }

    /**
     * Get the route patterns of the rule.
     *
     * @return the patternsToMatch value
     */
    public List<String> patternsToMatch() {
        return this.patternsToMatch;
    }

    /**
     * Set the route patterns of the rule.
     *
     * @param patternsToMatch the patternsToMatch value to set
     * @return the RoutingRule object itself.
     */
    public RoutingRule withPatternsToMatch(List<String> patternsToMatch) {
        this.patternsToMatch = patternsToMatch;
        return this;
    }

    /**
     * Get whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'. Possible values include: 'Enabled', 'Disabled'.
     *
     * @return the enabledState value
     */
    public RoutingRuleEnabledState enabledState() {
        return this.enabledState;
    }

    /**
     * Set whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'. Possible values include: 'Enabled', 'Disabled'.
     *
     * @param enabledState the enabledState value to set
     * @return the RoutingRule object itself.
     */
    public RoutingRule withEnabledState(RoutingRuleEnabledState enabledState) {
        this.enabledState = enabledState;
        return this;
    }

    /**
     * Get a reference to the routing configuration.
     *
     * @return the routeConfiguration value
     */
    public RouteConfiguration routeConfiguration() {
        return this.routeConfiguration;
    }

    /**
     * Set a reference to the routing configuration.
     *
     * @param routeConfiguration the routeConfiguration value to set
     * @return the RoutingRule object itself.
     */
    public RoutingRule withRouteConfiguration(RouteConfiguration routeConfiguration) {
        this.routeConfiguration = routeConfiguration;
        return this;
    }

    /**
     * Get a reference to a specific Rules Engine Configuration to apply to this route.
     *
     * @return the rulesEngine value
     */
    public SubResource rulesEngine() {
        return this.rulesEngine;
    }

    /**
     * Set a reference to a specific Rules Engine Configuration to apply to this route.
     *
     * @param rulesEngine the rulesEngine value to set
     * @return the RoutingRule object itself.
     */
    public RoutingRule withRulesEngine(SubResource rulesEngine) {
        this.rulesEngine = rulesEngine;
        return this;
    }

    /**
     * Get defines the Web Application Firewall policy for each routing rule (if applicable).
     *
     * @return the webApplicationFirewallPolicyLink value
     */
    public RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink webApplicationFirewallPolicyLink() {
        return this.webApplicationFirewallPolicyLink;
    }

    /**
     * Set defines the Web Application Firewall policy for each routing rule (if applicable).
     *
     * @param webApplicationFirewallPolicyLink the webApplicationFirewallPolicyLink value to set
     * @return the RoutingRule object itself.
     */
    public RoutingRule withWebApplicationFirewallPolicyLink(RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink webApplicationFirewallPolicyLink) {
        this.webApplicationFirewallPolicyLink = webApplicationFirewallPolicyLink;
        return this;
    }

    /**
     * Get resource status. Possible values include: 'Creating', 'Enabling', 'Enabled', 'Disabling', 'Disabled', 'Deleting'.
     *
     * @return the resourceState value
     */
    public FrontDoorResourceState resourceState() {
        return this.resourceState;
    }

    /**
     * Set resource status. Possible values include: 'Creating', 'Enabling', 'Enabled', 'Disabling', 'Disabled', 'Deleting'.
     *
     * @param resourceState the resourceState value to set
     * @return the RoutingRule object itself.
     */
    public RoutingRule withResourceState(FrontDoorResourceState resourceState) {
        this.resourceState = resourceState;
        return this;
    }

    /**
     * Get resource name.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set resource name.
     *
     * @param name the name value to set
     * @return the RoutingRule object itself.
     */
    public RoutingRule withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get resource type.
     *
     * @return the type value
     */
    public String type() {
        return this.type;
    }

}
