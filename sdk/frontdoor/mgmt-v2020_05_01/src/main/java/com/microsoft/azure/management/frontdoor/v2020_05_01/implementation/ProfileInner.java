/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.frontdoor.v2020_05_01.implementation;

import com.microsoft.azure.management.frontdoor.v2020_05_01.NetworkExperimentResourceState;
import com.microsoft.azure.management.frontdoor.v2020_05_01.State;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.rest.SkipParentValidation;
import com.microsoft.azure.Resource;

/**
 * Defines an Network Experiment Profile and lists of Experiments.
 */
@JsonFlatten
@SkipParentValidation
public class ProfileInner extends Resource {
    /**
     * Resource status. Possible values include: 'Creating', 'Enabling',
     * 'Enabled', 'Disabling', 'Disabled', 'Deleting'.
     */
    @JsonProperty(value = "properties.resourceState")
    private NetworkExperimentResourceState resourceState;

    /**
     * The state of the Experiment. Possible values include: 'Enabled',
     * 'Disabled'.
     */
    @JsonProperty(value = "properties.enabledState")
    private State enabledState;

    /**
     * Gets a unique read-only string that changes whenever the resource is
     * updated.
     */
    @JsonProperty(value = "etag")
    private String etag;

    /**
     * Get resource status. Possible values include: 'Creating', 'Enabling', 'Enabled', 'Disabling', 'Disabled', 'Deleting'.
     *
     * @return the resourceState value
     */
    public NetworkExperimentResourceState resourceState() {
        return this.resourceState;
    }

    /**
     * Set resource status. Possible values include: 'Creating', 'Enabling', 'Enabled', 'Disabling', 'Disabled', 'Deleting'.
     *
     * @param resourceState the resourceState value to set
     * @return the ProfileInner object itself.
     */
    public ProfileInner withResourceState(NetworkExperimentResourceState resourceState) {
        this.resourceState = resourceState;
        return this;
    }

    /**
     * Get the state of the Experiment. Possible values include: 'Enabled', 'Disabled'.
     *
     * @return the enabledState value
     */
    public State enabledState() {
        return this.enabledState;
    }

    /**
     * Set the state of the Experiment. Possible values include: 'Enabled', 'Disabled'.
     *
     * @param enabledState the enabledState value to set
     * @return the ProfileInner object itself.
     */
    public ProfileInner withEnabledState(State enabledState) {
        this.enabledState = enabledState;
        return this;
    }

    /**
     * Get gets a unique read-only string that changes whenever the resource is updated.
     *
     * @return the etag value
     */
    public String etag() {
        return this.etag;
    }

    /**
     * Set gets a unique read-only string that changes whenever the resource is updated.
     *
     * @param etag the etag value to set
     * @return the ProfileInner object itself.
     */
    public ProfileInner withEtag(String etag) {
        this.etag = etag;
        return this;
    }

}
