/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.frontdoor.v2020_05_01;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Defines the properties of a latency metric used in the latency scorecard.
 */
public class LatencyMetric {
    /**
     * The name of the Latency Metric.
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /**
     * The end time of the Latency Scorecard in UTC.
     */
    @JsonProperty(value = "endDateTimeUTC", access = JsonProperty.Access.WRITE_ONLY)
    private String endDateTimeUTC;

    /**
     * The metric value of the A endpoint.
     */
    @JsonProperty(value = "aValue", access = JsonProperty.Access.WRITE_ONLY)
    private Double aValue;

    /**
     * The metric value of the B endpoint.
     */
    @JsonProperty(value = "bValue", access = JsonProperty.Access.WRITE_ONLY)
    private Double bValue;

    /**
     * The difference in value between endpoint A and B.
     */
    @JsonProperty(value = "delta", access = JsonProperty.Access.WRITE_ONLY)
    private Double delta;

    /**
     * The percent difference between endpoint A and B.
     */
    @JsonProperty(value = "deltaPercent", access = JsonProperty.Access.WRITE_ONLY)
    private Double deltaPercent;

    /**
     * The lower end of the 95% confidence interval for endpoint A.
     */
    @JsonProperty(value = "aCLower95CI", access = JsonProperty.Access.WRITE_ONLY)
    private Double aCLower95CI;

    /**
     * The upper end of the 95% confidence interval for endpoint A.
     */
    @JsonProperty(value = "aHUpper95CI", access = JsonProperty.Access.WRITE_ONLY)
    private Double aHUpper95CI;

    /**
     * The lower end of the 95% confidence interval for endpoint B.
     */
    @JsonProperty(value = "bCLower95CI", access = JsonProperty.Access.WRITE_ONLY)
    private Double bCLower95CI;

    /**
     * The upper end of the 95% confidence interval for endpoint B.
     */
    @JsonProperty(value = "bUpper95CI", access = JsonProperty.Access.WRITE_ONLY)
    private Double bUpper95CI;

    /**
     * Get the name of the Latency Metric.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the end time of the Latency Scorecard in UTC.
     *
     * @return the endDateTimeUTC value
     */
    public String endDateTimeUTC() {
        return this.endDateTimeUTC;
    }

    /**
     * Get the metric value of the A endpoint.
     *
     * @return the aValue value
     */
    public Double aValue() {
        return this.aValue;
    }

    /**
     * Get the metric value of the B endpoint.
     *
     * @return the bValue value
     */
    public Double bValue() {
        return this.bValue;
    }

    /**
     * Get the difference in value between endpoint A and B.
     *
     * @return the delta value
     */
    public Double delta() {
        return this.delta;
    }

    /**
     * Get the percent difference between endpoint A and B.
     *
     * @return the deltaPercent value
     */
    public Double deltaPercent() {
        return this.deltaPercent;
    }

    /**
     * Get the lower end of the 95% confidence interval for endpoint A.
     *
     * @return the aCLower95CI value
     */
    public Double aCLower95CI() {
        return this.aCLower95CI;
    }

    /**
     * Get the upper end of the 95% confidence interval for endpoint A.
     *
     * @return the aHUpper95CI value
     */
    public Double aHUpper95CI() {
        return this.aHUpper95CI;
    }

    /**
     * Get the lower end of the 95% confidence interval for endpoint B.
     *
     * @return the bCLower95CI value
     */
    public Double bCLower95CI() {
        return this.bCLower95CI;
    }

    /**
     * Get the upper end of the 95% confidence interval for endpoint B.
     *
     * @return the bUpper95CI value
     */
    public Double bUpper95CI() {
        return this.bUpper95CI;
    }

}
