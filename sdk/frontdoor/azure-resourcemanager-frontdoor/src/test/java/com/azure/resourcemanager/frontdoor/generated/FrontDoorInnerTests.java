// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.frontdoor.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.frontdoor.fluent.models.FrontDoorInner;
import com.azure.resourcemanager.frontdoor.fluent.models.FrontendEndpointInner;
import com.azure.resourcemanager.frontdoor.models.BackendPool;
import com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings;
import com.azure.resourcemanager.frontdoor.models.EnforceCertificateNameCheckEnabledState;
import com.azure.resourcemanager.frontdoor.models.FrontDoorEnabledState;
import com.azure.resourcemanager.frontdoor.models.HealthProbeSettingsModel;
import com.azure.resourcemanager.frontdoor.models.LoadBalancingSettingsModel;
import com.azure.resourcemanager.frontdoor.models.RoutingRule;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class FrontDoorInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FrontDoorInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"resourceState\":\"Enabling\",\"provisioningState\":\"bt\",\"cname\":\"rq\",\"frontdoorId\":\"edckzywbiexzfey\",\"rulesEngines\":[{\"id\":\"ibx\",\"name\":\"jwbhqwalmuz\",\"type\":\"oxaepd\"},{\"id\":\"jancu\",\"name\":\"rhdwbavxbniw\",\"type\":\"jswztsdbpg\"}],\"friendlyName\":\"ytxhp\",\"routingRules\":[{\"name\":\"fzab\",\"type\":\"cuh\",\"id\":\"tcty\"},{\"name\":\"lbbovplw\",\"type\":\"hvgyuguosvmk\",\"id\":\"sxqu\"}],\"loadBalancingSettings\":[{\"name\":\"gmgsxnkjzkde\",\"type\":\"pvlopwiyighxpkd\",\"id\":\"baiuebbaumny\"}],\"healthProbeSettings\":[{\"name\":\"eojnabc\",\"type\":\"smtxpsieb\",\"id\":\"hvpesapskrdqm\"}],\"backendPools\":[{\"name\":\"tldwkyzxuutk\",\"type\":\"ws\",\"id\":\"svlxotogtwrup\"},{\"name\":\"vnm\",\"type\":\"ykvceoveil\",\"id\":\"notyfjfcnjbkcn\"},{\"name\":\"bttk\",\"type\":\"ywpnvjt\",\"id\":\"nermcl\"}],\"frontendEndpoints\":[{\"name\":\"oxuscrpabgyepsbj\",\"type\":\"zq\",\"id\":\"xywpmueefjzwfqkq\"},{\"name\":\"dsuyonobgla\",\"type\":\"qxtccmgyudx\",\"id\":\"lmoyrx\"}],\"backendPoolsSettings\":{\"enforceCertificateNameCheck\":\"Enabled\",\"sendRecvTimeoutSeconds\":392126366},\"enabledState\":\"Enabled\"},\"location\":\"ntxhdzhlrqjbhck\",\"tags\":{\"vpycanuzbp\":\"hrxsbk\",\"hhseyv\":\"kafkuwbcrnwbm\",\"tslhspkdeem\":\"us\"},\"id\":\"ofmxagkvtmelmqkr\",\"name\":\"ahvljuaha\",\"type\":\"uhcdhm\"}")
                .toObject(FrontDoorInner.class);
        Assertions.assertEquals("ntxhdzhlrqjbhck", model.location());
        Assertions.assertEquals("hrxsbk", model.tags().get("vpycanuzbp"));
        Assertions.assertEquals("ytxhp", model.friendlyName());
        Assertions.assertEquals("tcty", model.routingRules().get(0).id());
        Assertions.assertEquals("fzab", model.routingRules().get(0).name());
        Assertions.assertEquals("baiuebbaumny", model.loadBalancingSettings().get(0).id());
        Assertions.assertEquals("gmgsxnkjzkde", model.loadBalancingSettings().get(0).name());
        Assertions.assertEquals("hvpesapskrdqm", model.healthProbeSettings().get(0).id());
        Assertions.assertEquals("eojnabc", model.healthProbeSettings().get(0).name());
        Assertions.assertEquals("svlxotogtwrup", model.backendPools().get(0).id());
        Assertions.assertEquals("tldwkyzxuutk", model.backendPools().get(0).name());
        Assertions.assertEquals("xywpmueefjzwfqkq", model.frontendEndpoints().get(0).id());
        Assertions.assertEquals("oxuscrpabgyepsbj", model.frontendEndpoints().get(0).name());
        Assertions
            .assertEquals(
                EnforceCertificateNameCheckEnabledState.ENABLED,
                model.backendPoolsSettings().enforceCertificateNameCheck());
        Assertions.assertEquals(392126366, model.backendPoolsSettings().sendRecvTimeoutSeconds());
        Assertions.assertEquals(FrontDoorEnabledState.ENABLED, model.enabledState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FrontDoorInner model =
            new FrontDoorInner()
                .withLocation("ntxhdzhlrqjbhck")
                .withTags(mapOf("vpycanuzbp", "hrxsbk", "hhseyv", "kafkuwbcrnwbm", "tslhspkdeem", "us"))
                .withFriendlyName("ytxhp")
                .withRoutingRules(
                    Arrays
                        .asList(
                            new RoutingRule().withId("tcty").withName("fzab"),
                            new RoutingRule().withId("sxqu").withName("lbbovplw")))
                .withLoadBalancingSettings(
                    Arrays.asList(new LoadBalancingSettingsModel().withId("baiuebbaumny").withName("gmgsxnkjzkde")))
                .withHealthProbeSettings(
                    Arrays.asList(new HealthProbeSettingsModel().withId("hvpesapskrdqm").withName("eojnabc")))
                .withBackendPools(
                    Arrays
                        .asList(
                            new BackendPool().withId("svlxotogtwrup").withName("tldwkyzxuutk"),
                            new BackendPool().withId("notyfjfcnjbkcn").withName("vnm"),
                            new BackendPool().withId("nermcl").withName("bttk")))
                .withFrontendEndpoints(
                    Arrays
                        .asList(
                            new FrontendEndpointInner().withId("xywpmueefjzwfqkq").withName("oxuscrpabgyepsbj"),
                            new FrontendEndpointInner().withId("lmoyrx").withName("dsuyonobgla")))
                .withBackendPoolsSettings(
                    new BackendPoolsSettings()
                        .withEnforceCertificateNameCheck(EnforceCertificateNameCheckEnabledState.ENABLED)
                        .withSendRecvTimeoutSeconds(392126366))
                .withEnabledState(FrontDoorEnabledState.ENABLED);
        model = BinaryData.fromObject(model).toObject(FrontDoorInner.class);
        Assertions.assertEquals("ntxhdzhlrqjbhck", model.location());
        Assertions.assertEquals("hrxsbk", model.tags().get("vpycanuzbp"));
        Assertions.assertEquals("ytxhp", model.friendlyName());
        Assertions.assertEquals("tcty", model.routingRules().get(0).id());
        Assertions.assertEquals("fzab", model.routingRules().get(0).name());
        Assertions.assertEquals("baiuebbaumny", model.loadBalancingSettings().get(0).id());
        Assertions.assertEquals("gmgsxnkjzkde", model.loadBalancingSettings().get(0).name());
        Assertions.assertEquals("hvpesapskrdqm", model.healthProbeSettings().get(0).id());
        Assertions.assertEquals("eojnabc", model.healthProbeSettings().get(0).name());
        Assertions.assertEquals("svlxotogtwrup", model.backendPools().get(0).id());
        Assertions.assertEquals("tldwkyzxuutk", model.backendPools().get(0).name());
        Assertions.assertEquals("xywpmueefjzwfqkq", model.frontendEndpoints().get(0).id());
        Assertions.assertEquals("oxuscrpabgyepsbj", model.frontendEndpoints().get(0).name());
        Assertions
            .assertEquals(
                EnforceCertificateNameCheckEnabledState.ENABLED,
                model.backendPoolsSettings().enforceCertificateNameCheck());
        Assertions.assertEquals(392126366, model.backendPoolsSettings().sendRecvTimeoutSeconds());
        Assertions.assertEquals(FrontDoorEnabledState.ENABLED, model.enabledState());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
