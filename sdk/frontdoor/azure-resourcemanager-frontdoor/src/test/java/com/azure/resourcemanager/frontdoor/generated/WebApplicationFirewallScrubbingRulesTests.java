// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.frontdoor.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.frontdoor.models.ScrubbingRuleEntryMatchOperator;
import com.azure.resourcemanager.frontdoor.models.ScrubbingRuleEntryMatchVariable;
import com.azure.resourcemanager.frontdoor.models.ScrubbingRuleEntryState;
import com.azure.resourcemanager.frontdoor.models.WebApplicationFirewallScrubbingRules;
import org.junit.jupiter.api.Assertions;

public final class WebApplicationFirewallScrubbingRulesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WebApplicationFirewallScrubbingRules model = BinaryData.fromString(
            "{\"matchVariable\":\"RequestBodyJsonArgNames\",\"selectorMatchOperator\":\"EqualsAny\",\"selector\":\"qqjnqgl\",\"state\":\"Enabled\"}")
            .toObject(WebApplicationFirewallScrubbingRules.class);
        Assertions.assertEquals(ScrubbingRuleEntryMatchVariable.REQUEST_BODY_JSON_ARG_NAMES, model.matchVariable());
        Assertions.assertEquals(ScrubbingRuleEntryMatchOperator.EQUALS_ANY, model.selectorMatchOperator());
        Assertions.assertEquals("qqjnqgl", model.selector());
        Assertions.assertEquals(ScrubbingRuleEntryState.ENABLED, model.state());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WebApplicationFirewallScrubbingRules model = new WebApplicationFirewallScrubbingRules()
            .withMatchVariable(ScrubbingRuleEntryMatchVariable.REQUEST_BODY_JSON_ARG_NAMES)
            .withSelectorMatchOperator(ScrubbingRuleEntryMatchOperator.EQUALS_ANY)
            .withSelector("qqjnqgl")
            .withState(ScrubbingRuleEntryState.ENABLED);
        model = BinaryData.fromObject(model).toObject(WebApplicationFirewallScrubbingRules.class);
        Assertions.assertEquals(ScrubbingRuleEntryMatchVariable.REQUEST_BODY_JSON_ARG_NAMES, model.matchVariable());
        Assertions.assertEquals(ScrubbingRuleEntryMatchOperator.EQUALS_ANY, model.selectorMatchOperator());
        Assertions.assertEquals("qqjnqgl", model.selector());
        Assertions.assertEquals(ScrubbingRuleEntryState.ENABLED, model.state());
    }
}
