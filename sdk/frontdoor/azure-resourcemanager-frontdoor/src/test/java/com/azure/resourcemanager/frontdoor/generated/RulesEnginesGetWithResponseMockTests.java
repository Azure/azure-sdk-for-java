// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.frontdoor.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.frontdoor.FrontDoorManager;
import com.azure.resourcemanager.frontdoor.models.HeaderActionType;
import com.azure.resourcemanager.frontdoor.models.MatchProcessingBehavior;
import com.azure.resourcemanager.frontdoor.models.RulesEngine;
import com.azure.resourcemanager.frontdoor.models.RulesEngineMatchVariable;
import com.azure.resourcemanager.frontdoor.models.RulesEngineOperator;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RulesEnginesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"resourceState\":\"Disabled\",\"rules\":[{\"name\":\"ugfsxzecpaxwk\",\"priority\":1277972193,\"action\":{\"requestHeaderActions\":[{\"headerActionType\":\"Delete\",\"headerName\":\"vuhx\"},{\"headerActionType\":\"Overwrite\",\"headerName\":\"mrutznabaobnsluj\"},{\"headerActionType\":\"Append\",\"headerName\":\"ltymkmvguihywart\"},{\"headerActionType\":\"Append\",\"headerName\":\"phkixkykxdssjpe\"}],\"responseHeaderActions\":[{\"headerActionType\":\"Append\",\"headerName\":\"fxhikkflrmymyi\"}],\"routeConfigurationOverride\":{\"@odata.type\":\"RouteConfiguration\"}},\"matchConditions\":[{\"rulesEngineMatchVariable\":\"RequestFilename\",\"rulesEngineOperator\":\"Any\",\"rulesEngineMatchValue\":[]},{\"rulesEngineMatchVariable\":\"RequestScheme\",\"rulesEngineOperator\":\"EndsWith\",\"rulesEngineMatchValue\":[]}],\"matchProcessingBehavior\":\"Continue\"}]},\"id\":\"lmiiiovg\",\"name\":\"cgxuugqkctotiowl\",\"type\":\"teqdptj\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        FrontDoorManager manager = FrontDoorManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        RulesEngine response = manager.rulesEngines()
            .getWithResponse("srlsmd", "sqplpvmjcd", "ewbidyvteowxv", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ugfsxzecpaxwk", response.rules().get(0).name());
        Assertions.assertEquals(1277972193, response.rules().get(0).priority());
        Assertions.assertEquals(HeaderActionType.DELETE,
            response.rules().get(0).action().requestHeaderActions().get(0).headerActionType());
        Assertions.assertEquals("vuhx", response.rules().get(0).action().requestHeaderActions().get(0).headerName());
        Assertions.assertEquals(HeaderActionType.APPEND,
            response.rules().get(0).action().responseHeaderActions().get(0).headerActionType());
        Assertions.assertEquals("fxhikkflrmymyi",
            response.rules().get(0).action().responseHeaderActions().get(0).headerName());
        Assertions.assertEquals(RulesEngineMatchVariable.REQUEST_FILENAME,
            response.rules().get(0).matchConditions().get(0).rulesEngineMatchVariable());
        Assertions.assertEquals(RulesEngineOperator.ANY,
            response.rules().get(0).matchConditions().get(0).rulesEngineOperator());
        Assertions.assertEquals(MatchProcessingBehavior.CONTINUE, response.rules().get(0).matchProcessingBehavior());
    }
}
