// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.frontdoor.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.frontdoor.models.HeaderAction;
import com.azure.resourcemanager.frontdoor.models.HeaderActionType;
import com.azure.resourcemanager.frontdoor.models.RouteConfiguration;
import com.azure.resourcemanager.frontdoor.models.RulesEngineAction;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RulesEngineActionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RulesEngineAction model = BinaryData.fromString(
            "{\"requestHeaderActions\":[{\"headerActionType\":\"Overwrite\",\"headerName\":\"noigbrnjwmwk\",\"value\":\"bsazejjoqka\"},{\"headerActionType\":\"Delete\",\"headerName\":\"hsxttaugzxnf\",\"value\":\"zpxdt\"}],\"responseHeaderActions\":[{\"headerActionType\":\"Delete\",\"headerName\":\"kqjjlwuenvrkp\",\"value\":\"uaibrebqaaysj\"}],\"routeConfigurationOverride\":{\"@odata.type\":\"RouteConfiguration\"}}")
            .toObject(RulesEngineAction.class);
        Assertions.assertEquals(HeaderActionType.OVERWRITE, model.requestHeaderActions().get(0).headerActionType());
        Assertions.assertEquals("noigbrnjwmwk", model.requestHeaderActions().get(0).headerName());
        Assertions.assertEquals("bsazejjoqka", model.requestHeaderActions().get(0).value());
        Assertions.assertEquals(HeaderActionType.DELETE, model.responseHeaderActions().get(0).headerActionType());
        Assertions.assertEquals("kqjjlwuenvrkp", model.responseHeaderActions().get(0).headerName());
        Assertions.assertEquals("uaibrebqaaysj", model.responseHeaderActions().get(0).value());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RulesEngineAction model = new RulesEngineAction()
            .withRequestHeaderActions(Arrays.asList(
                new HeaderAction().withHeaderActionType(HeaderActionType.OVERWRITE)
                    .withHeaderName("noigbrnjwmwk")
                    .withValue("bsazejjoqka"),
                new HeaderAction().withHeaderActionType(HeaderActionType.DELETE)
                    .withHeaderName("hsxttaugzxnf")
                    .withValue("zpxdt")))
            .withResponseHeaderActions(Arrays.asList(new HeaderAction().withHeaderActionType(HeaderActionType.DELETE)
                .withHeaderName("kqjjlwuenvrkp")
                .withValue("uaibrebqaaysj")))
            .withRouteConfigurationOverride(new RouteConfiguration());
        model = BinaryData.fromObject(model).toObject(RulesEngineAction.class);
        Assertions.assertEquals(HeaderActionType.OVERWRITE, model.requestHeaderActions().get(0).headerActionType());
        Assertions.assertEquals("noigbrnjwmwk", model.requestHeaderActions().get(0).headerName());
        Assertions.assertEquals("bsazejjoqka", model.requestHeaderActions().get(0).value());
        Assertions.assertEquals(HeaderActionType.DELETE, model.responseHeaderActions().get(0).headerActionType());
        Assertions.assertEquals("kqjjlwuenvrkp", model.responseHeaderActions().get(0).headerName());
        Assertions.assertEquals("uaibrebqaaysj", model.responseHeaderActions().get(0).value());
    }
}
