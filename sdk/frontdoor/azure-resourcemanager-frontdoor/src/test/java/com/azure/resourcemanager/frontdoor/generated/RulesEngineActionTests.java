// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.frontdoor.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.frontdoor.models.HeaderAction;
import com.azure.resourcemanager.frontdoor.models.HeaderActionType;
import com.azure.resourcemanager.frontdoor.models.RouteConfiguration;
import com.azure.resourcemanager.frontdoor.models.RulesEngineAction;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RulesEngineActionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RulesEngineAction model = BinaryData.fromString(
            "{\"requestHeaderActions\":[{\"headerActionType\":\"Overwrite\",\"headerName\":\"bhshfwpracstwity\",\"value\":\"evxccedcp\"}],\"responseHeaderActions\":[{\"headerActionType\":\"Delete\",\"headerName\":\"odn\",\"value\":\"xltjcvnhltiu\"},{\"headerActionType\":\"Overwrite\",\"headerName\":\"xnavvwxq\",\"value\":\"y\"},{\"headerActionType\":\"Delete\",\"headerName\":\"nyowxwlmdjrkvfg\",\"value\":\"fvpdbo\"}],\"routeConfigurationOverride\":{\"@odata.type\":\"izsjqlhkrr\"}}")
            .toObject(RulesEngineAction.class);
        Assertions.assertEquals(HeaderActionType.OVERWRITE, model.requestHeaderActions().get(0).headerActionType());
        Assertions.assertEquals("bhshfwpracstwity", model.requestHeaderActions().get(0).headerName());
        Assertions.assertEquals("evxccedcp", model.requestHeaderActions().get(0).value());
        Assertions.assertEquals(HeaderActionType.DELETE, model.responseHeaderActions().get(0).headerActionType());
        Assertions.assertEquals("odn", model.responseHeaderActions().get(0).headerName());
        Assertions.assertEquals("xltjcvnhltiu", model.responseHeaderActions().get(0).value());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RulesEngineAction model = new RulesEngineAction()
            .withRequestHeaderActions(Arrays.asList(new HeaderAction().withHeaderActionType(HeaderActionType.OVERWRITE)
                .withHeaderName("bhshfwpracstwity")
                .withValue("evxccedcp")))
            .withResponseHeaderActions(Arrays.asList(
                new HeaderAction().withHeaderActionType(HeaderActionType.DELETE)
                    .withHeaderName("odn")
                    .withValue("xltjcvnhltiu"),
                new HeaderAction().withHeaderActionType(HeaderActionType.OVERWRITE)
                    .withHeaderName("xnavvwxq")
                    .withValue("y"),
                new HeaderAction().withHeaderActionType(HeaderActionType.DELETE)
                    .withHeaderName("nyowxwlmdjrkvfg")
                    .withValue("fvpdbo")))
            .withRouteConfigurationOverride(new RouteConfiguration());
        model = BinaryData.fromObject(model).toObject(RulesEngineAction.class);
        Assertions.assertEquals(HeaderActionType.OVERWRITE, model.requestHeaderActions().get(0).headerActionType());
        Assertions.assertEquals("bhshfwpracstwity", model.requestHeaderActions().get(0).headerName());
        Assertions.assertEquals("evxccedcp", model.requestHeaderActions().get(0).value());
        Assertions.assertEquals(HeaderActionType.DELETE, model.responseHeaderActions().get(0).headerActionType());
        Assertions.assertEquals("odn", model.responseHeaderActions().get(0).headerName());
        Assertions.assertEquals("xltjcvnhltiu", model.responseHeaderActions().get(0).value());
    }
}
