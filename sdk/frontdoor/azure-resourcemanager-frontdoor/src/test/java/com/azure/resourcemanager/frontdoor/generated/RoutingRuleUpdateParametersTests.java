// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.frontdoor.generated;

import com.azure.core.management.SubResource;
import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.frontdoor.models.FrontDoorProtocol;
import com.azure.resourcemanager.frontdoor.models.RouteConfiguration;
import com.azure.resourcemanager.frontdoor.models.RoutingRuleEnabledState;
import com.azure.resourcemanager.frontdoor.models.RoutingRuleUpdateParameters;
import com.azure.resourcemanager.frontdoor.models.RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RoutingRuleUpdateParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RoutingRuleUpdateParameters model = BinaryData.fromString(
            "{\"frontendEndpoints\":[{\"id\":\"cvpa\"},{\"id\":\"sreuzvxurisjnh\"}],\"acceptedProtocols\":[\"Https\",\"Http\"],\"patternsToMatch\":[\"jzgxmrhublwp\",\"esutrgjupauutpw\",\"qhih\"],\"enabledState\":\"Enabled\",\"routeConfiguration\":{\"@odata.type\":\"zpnfqntcypsxj\"},\"rulesEngine\":{\"id\":\"imwkslircizj\"},\"webApplicationFirewallPolicyLink\":{\"id\":\"dfcea\"}}")
            .toObject(RoutingRuleUpdateParameters.class);
        Assertions.assertEquals("cvpa", model.frontendEndpoints().get(0).id());
        Assertions.assertEquals(FrontDoorProtocol.HTTPS, model.acceptedProtocols().get(0));
        Assertions.assertEquals("jzgxmrhublwp", model.patternsToMatch().get(0));
        Assertions.assertEquals(RoutingRuleEnabledState.ENABLED, model.enabledState());
        Assertions.assertEquals("imwkslircizj", model.rulesEngine().id());
        Assertions.assertEquals("dfcea", model.webApplicationFirewallPolicyLink().id());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RoutingRuleUpdateParameters model = new RoutingRuleUpdateParameters()
            .withFrontendEndpoints(
                Arrays.asList(new SubResource().withId("cvpa"), new SubResource().withId("sreuzvxurisjnh")))
            .withAcceptedProtocols(Arrays.asList(FrontDoorProtocol.HTTPS, FrontDoorProtocol.HTTP))
            .withPatternsToMatch(Arrays.asList("jzgxmrhublwp", "esutrgjupauutpw", "qhih"))
            .withEnabledState(RoutingRuleEnabledState.ENABLED)
            .withRouteConfiguration(new RouteConfiguration())
            .withRulesEngine(new SubResource().withId("imwkslircizj"))
            .withWebApplicationFirewallPolicyLink(
                new RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink().withId("dfcea"));
        model = BinaryData.fromObject(model).toObject(RoutingRuleUpdateParameters.class);
        Assertions.assertEquals("cvpa", model.frontendEndpoints().get(0).id());
        Assertions.assertEquals(FrontDoorProtocol.HTTPS, model.acceptedProtocols().get(0));
        Assertions.assertEquals("jzgxmrhublwp", model.patternsToMatch().get(0));
        Assertions.assertEquals(RoutingRuleEnabledState.ENABLED, model.enabledState());
        Assertions.assertEquals("imwkslircizj", model.rulesEngine().id());
        Assertions.assertEquals("dfcea", model.webApplicationFirewallPolicyLink().id());
    }
}
