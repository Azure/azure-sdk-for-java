// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.frontdoor.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.frontdoor.models.ProfileUpdateModel;
import com.azure.resourcemanager.frontdoor.models.State;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ProfileUpdateModelTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProfileUpdateModel model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"enabledState\":\"Disabled\"},\"tags\":{\"sgsahmkycgr\":\"znqntoru\",\"s\":\"uwjuetaeburuvdmo\",\"tpuqujmq\":\"zlxwabmqoefkifr\"}}")
                .toObject(ProfileUpdateModel.class);
        Assertions.assertEquals("znqntoru", model.tags().get("sgsahmkycgr"));
        Assertions.assertEquals(State.DISABLED, model.enabledState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProfileUpdateModel model =
            new ProfileUpdateModel()
                .withTags(mapOf("sgsahmkycgr", "znqntoru", "s", "uwjuetaeburuvdmo", "tpuqujmq", "zlxwabmqoefkifr"))
                .withEnabledState(State.DISABLED);
        model = BinaryData.fromObject(model).toObject(ProfileUpdateModel.class);
        Assertions.assertEquals("znqntoru", model.tags().get("sgsahmkycgr"));
        Assertions.assertEquals(State.DISABLED, model.enabledState());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
