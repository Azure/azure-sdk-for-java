// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.frontdoor.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.frontdoor.fluent.models.ExperimentProperties;
import com.azure.resourcemanager.frontdoor.models.Endpoint;
import com.azure.resourcemanager.frontdoor.models.State;
import org.junit.jupiter.api.Assertions;

public final class ExperimentPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ExperimentProperties model = BinaryData.fromString(
            "{\"description\":\"yyefrpmpdnqqs\",\"endpointA\":{\"name\":\"ao\",\"endpoint\":\"mmbnpqfrtql\"},\"endpointB\":{\"name\":\"egnitg\",\"endpoint\":\"xlzyqd\"},\"enabledState\":\"Enabled\",\"resourceState\":\"Enabled\",\"status\":\"alzxwhcan\",\"scriptFileUri\":\"moy\"}")
            .toObject(ExperimentProperties.class);
        Assertions.assertEquals("yyefrpmpdnqqs", model.description());
        Assertions.assertEquals("ao", model.endpointA().name());
        Assertions.assertEquals("mmbnpqfrtql", model.endpointA().endpoint());
        Assertions.assertEquals("egnitg", model.endpointB().name());
        Assertions.assertEquals("xlzyqd", model.endpointB().endpoint());
        Assertions.assertEquals(State.ENABLED, model.enabledState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ExperimentProperties model = new ExperimentProperties().withDescription("yyefrpmpdnqqs")
            .withEndpointA(new Endpoint().withName("ao").withEndpoint("mmbnpqfrtql"))
            .withEndpointB(new Endpoint().withName("egnitg").withEndpoint("xlzyqd"))
            .withEnabledState(State.ENABLED);
        model = BinaryData.fromObject(model).toObject(ExperimentProperties.class);
        Assertions.assertEquals("yyefrpmpdnqqs", model.description());
        Assertions.assertEquals("ao", model.endpointA().name());
        Assertions.assertEquals("mmbnpqfrtql", model.endpointA().endpoint());
        Assertions.assertEquals("egnitg", model.endpointB().name());
        Assertions.assertEquals("xlzyqd", model.endpointB().endpoint());
        Assertions.assertEquals(State.ENABLED, model.enabledState());
    }
}
