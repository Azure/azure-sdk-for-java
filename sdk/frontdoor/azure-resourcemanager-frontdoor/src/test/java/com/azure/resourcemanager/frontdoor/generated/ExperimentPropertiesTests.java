// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.frontdoor.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.frontdoor.fluent.models.ExperimentProperties;
import com.azure.resourcemanager.frontdoor.models.Endpoint;
import com.azure.resourcemanager.frontdoor.models.State;
import org.junit.jupiter.api.Assertions;

public final class ExperimentPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ExperimentProperties model = BinaryData.fromString(
            "{\"description\":\"jpsttexoq\",\"endpointA\":{\"name\":\"cyyufmh\",\"endpoint\":\"nc\"},\"endpointB\":{\"name\":\"qspkcdqzhlctd\",\"endpoint\":\"nqndyfpchrqbn\"},\"enabledState\":\"Disabled\",\"resourceState\":\"Creating\",\"status\":\"gydcw\",\"scriptFileUri\":\"xjumvq\"}")
            .toObject(ExperimentProperties.class);
        Assertions.assertEquals("jpsttexoq", model.description());
        Assertions.assertEquals("cyyufmh", model.endpointA().name());
        Assertions.assertEquals("nc", model.endpointA().endpoint());
        Assertions.assertEquals("qspkcdqzhlctd", model.endpointB().name());
        Assertions.assertEquals("nqndyfpchrqbn", model.endpointB().endpoint());
        Assertions.assertEquals(State.DISABLED, model.enabledState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ExperimentProperties model = new ExperimentProperties().withDescription("jpsttexoq")
            .withEndpointA(new Endpoint().withName("cyyufmh").withEndpoint("nc"))
            .withEndpointB(new Endpoint().withName("qspkcdqzhlctd").withEndpoint("nqndyfpchrqbn"))
            .withEnabledState(State.DISABLED);
        model = BinaryData.fromObject(model).toObject(ExperimentProperties.class);
        Assertions.assertEquals("jpsttexoq", model.description());
        Assertions.assertEquals("cyyufmh", model.endpointA().name());
        Assertions.assertEquals("nc", model.endpointA().endpoint());
        Assertions.assertEquals("qspkcdqzhlctd", model.endpointB().name());
        Assertions.assertEquals("nqndyfpchrqbn", model.endpointB().endpoint());
        Assertions.assertEquals(State.DISABLED, model.enabledState());
    }
}
