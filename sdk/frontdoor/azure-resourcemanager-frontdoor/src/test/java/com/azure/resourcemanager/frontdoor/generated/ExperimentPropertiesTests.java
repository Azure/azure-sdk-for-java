// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.frontdoor.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.frontdoor.fluent.models.ExperimentProperties;
import com.azure.resourcemanager.frontdoor.models.Endpoint;
import com.azure.resourcemanager.frontdoor.models.State;
import org.junit.jupiter.api.Assertions;

public final class ExperimentPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ExperimentProperties model =
            BinaryData
                .fromString(
                    "{\"description\":\"zvddntwndeicbtwn\",\"endpointA\":{\"name\":\"oqvuhr\",\"endpoint\":\"f\"},\"endpointB\":{\"name\":\"ddglm\",\"endpoint\":\"hjq\"},\"enabledState\":\"Enabled\",\"resourceState\":\"Creating\",\"status\":\"cxmqciwqvhkhix\",\"scriptFileUri\":\"gdtopbobjogh\"}")
                .toObject(ExperimentProperties.class);
        Assertions.assertEquals("zvddntwndeicbtwn", model.description());
        Assertions.assertEquals("oqvuhr", model.endpointA().name());
        Assertions.assertEquals("f", model.endpointA().endpoint());
        Assertions.assertEquals("ddglm", model.endpointB().name());
        Assertions.assertEquals("hjq", model.endpointB().endpoint());
        Assertions.assertEquals(State.ENABLED, model.enabledState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ExperimentProperties model =
            new ExperimentProperties()
                .withDescription("zvddntwndeicbtwn")
                .withEndpointA(new Endpoint().withName("oqvuhr").withEndpoint("f"))
                .withEndpointB(new Endpoint().withName("ddglm").withEndpoint("hjq"))
                .withEnabledState(State.ENABLED);
        model = BinaryData.fromObject(model).toObject(ExperimentProperties.class);
        Assertions.assertEquals("zvddntwndeicbtwn", model.description());
        Assertions.assertEquals("oqvuhr", model.endpointA().name());
        Assertions.assertEquals("f", model.endpointA().endpoint());
        Assertions.assertEquals("ddglm", model.endpointB().name());
        Assertions.assertEquals("hjq", model.endpointB().endpoint());
        Assertions.assertEquals(State.ENABLED, model.enabledState());
    }
}
