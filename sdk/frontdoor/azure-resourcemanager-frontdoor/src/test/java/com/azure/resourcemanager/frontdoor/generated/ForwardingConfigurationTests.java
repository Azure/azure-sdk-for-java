// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.frontdoor.generated;

import com.azure.core.management.SubResource;
import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.frontdoor.models.CacheConfiguration;
import com.azure.resourcemanager.frontdoor.models.DynamicCompressionEnabled;
import com.azure.resourcemanager.frontdoor.models.ForwardingConfiguration;
import com.azure.resourcemanager.frontdoor.models.FrontDoorForwardingProtocol;
import com.azure.resourcemanager.frontdoor.models.FrontDoorQuery;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;

public final class ForwardingConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ForwardingConfiguration model = BinaryData.fromString(
            "{\"@odata.type\":\"#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration\",\"customForwardingPath\":\"fhvfsl\",\"forwardingProtocol\":\"HttpsOnly\",\"cacheConfiguration\":{\"queryParameterStripDirective\":\"StripOnly\",\"queryParameters\":\"igjkskyrio\",\"dynamicCompression\":\"Enabled\",\"cacheDuration\":\"PT115H46M34S\"},\"backendPool\":{\"id\":\"waabzmifrygzn\"}}")
            .toObject(ForwardingConfiguration.class);
        Assertions.assertEquals("fhvfsl", model.customForwardingPath());
        Assertions.assertEquals(FrontDoorForwardingProtocol.HTTPS_ONLY, model.forwardingProtocol());
        Assertions.assertEquals(FrontDoorQuery.STRIP_ONLY, model.cacheConfiguration().queryParameterStripDirective());
        Assertions.assertEquals("igjkskyrio", model.cacheConfiguration().queryParameters());
        Assertions.assertEquals(DynamicCompressionEnabled.ENABLED, model.cacheConfiguration().dynamicCompression());
        Assertions.assertEquals(Duration.parse("PT115H46M34S"), model.cacheConfiguration().cacheDuration());
        Assertions.assertEquals("waabzmifrygzn", model.backendPool().id());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ForwardingConfiguration model = new ForwardingConfiguration().withCustomForwardingPath("fhvfsl")
            .withForwardingProtocol(FrontDoorForwardingProtocol.HTTPS_ONLY)
            .withCacheConfiguration(new CacheConfiguration().withQueryParameterStripDirective(FrontDoorQuery.STRIP_ONLY)
                .withQueryParameters("igjkskyrio")
                .withDynamicCompression(DynamicCompressionEnabled.ENABLED)
                .withCacheDuration(Duration.parse("PT115H46M34S")))
            .withBackendPool(new SubResource().withId("waabzmifrygzn"));
        model = BinaryData.fromObject(model).toObject(ForwardingConfiguration.class);
        Assertions.assertEquals("fhvfsl", model.customForwardingPath());
        Assertions.assertEquals(FrontDoorForwardingProtocol.HTTPS_ONLY, model.forwardingProtocol());
        Assertions.assertEquals(FrontDoorQuery.STRIP_ONLY, model.cacheConfiguration().queryParameterStripDirective());
        Assertions.assertEquals("igjkskyrio", model.cacheConfiguration().queryParameters());
        Assertions.assertEquals(DynamicCompressionEnabled.ENABLED, model.cacheConfiguration().dynamicCompression());
        Assertions.assertEquals(Duration.parse("PT115H46M34S"), model.cacheConfiguration().cacheDuration());
        Assertions.assertEquals("waabzmifrygzn", model.backendPool().id());
    }
}
