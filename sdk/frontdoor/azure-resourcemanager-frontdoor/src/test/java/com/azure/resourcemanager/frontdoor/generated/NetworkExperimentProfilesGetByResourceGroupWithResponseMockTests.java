// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.frontdoor.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.frontdoor.FrontDoorManager;
import com.azure.resourcemanager.frontdoor.models.Profile;
import com.azure.resourcemanager.frontdoor.models.State;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NetworkExperimentProfilesGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"resourceState\":\"Deleting\",\"enabledState\":\"Enabled\"},\"etag\":\"g\",\"location\":\"knlejjjkxybwfd\",\"tags\":{\"nsxfwu\":\"bztensvkzykjtj\",\"bpkuwxeoio\":\"hcdpkupnqrmgj\"},\"id\":\"fiz\",\"name\":\"av\",\"type\":\"jzwfb\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        FrontDoorManager manager = FrontDoorManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Profile response = manager.networkExperimentProfiles()
            .getByResourceGroupWithResponse("eeksnbksdqhjvyk", "xeslkhhustcpoqm", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("knlejjjkxybwfd", response.location());
        Assertions.assertEquals("bztensvkzykjtj", response.tags().get("nsxfwu"));
        Assertions.assertEquals("g", response.etag());
        Assertions.assertEquals(State.ENABLED, response.enabledState());
    }
}
