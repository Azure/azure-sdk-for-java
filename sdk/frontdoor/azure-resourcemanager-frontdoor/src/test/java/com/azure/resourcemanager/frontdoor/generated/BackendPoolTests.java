// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.frontdoor.generated;

import com.azure.core.management.SubResource;
import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.frontdoor.models.Backend;
import com.azure.resourcemanager.frontdoor.models.BackendEnabledState;
import com.azure.resourcemanager.frontdoor.models.BackendPool;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BackendPoolTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackendPool model = BinaryData.fromString(
            "{\"properties\":{\"resourceState\":\"Deleting\",\"backends\":[{\"address\":\"mojmsvpkjprvkw\",\"privateLinkAlias\":\"zqljyxgtczh\",\"privateLinkResourceId\":\"dbsdshm\",\"privateLinkLocation\":\"maehvbbxurip\",\"privateEndpointStatus\":\"Rejected\",\"privateLinkApprovalMessage\":\"htba\",\"httpPort\":407621468,\"httpsPort\":1532025762,\"enabledState\":\"Enabled\",\"priority\":1975174816,\"weight\":2128748498,\"backendHostHeader\":\"lyhpluodpvruud\"}],\"loadBalancingSettings\":{\"id\":\"ibthostgktstvd\"},\"healthProbeSettings\":{\"id\":\"lzedqbcvhzlhplo\"}},\"name\":\"kdl\",\"type\":\"qfbumlkxtrqjf\",\"id\":\"lmbtxhwgfwsrt\"}")
            .toObject(BackendPool.class);
        Assertions.assertEquals("lmbtxhwgfwsrt", model.id());
        Assertions.assertEquals("kdl", model.name());
        Assertions.assertEquals("mojmsvpkjprvkw", model.backends().get(0).address());
        Assertions.assertEquals("zqljyxgtczh", model.backends().get(0).privateLinkAlias());
        Assertions.assertEquals("dbsdshm", model.backends().get(0).privateLinkResourceId());
        Assertions.assertEquals("maehvbbxurip", model.backends().get(0).privateLinkLocation());
        Assertions.assertEquals("htba", model.backends().get(0).privateLinkApprovalMessage());
        Assertions.assertEquals(407621468, model.backends().get(0).httpPort());
        Assertions.assertEquals(1532025762, model.backends().get(0).httpsPort());
        Assertions.assertEquals(BackendEnabledState.ENABLED, model.backends().get(0).enabledState());
        Assertions.assertEquals(1975174816, model.backends().get(0).priority());
        Assertions.assertEquals(2128748498, model.backends().get(0).weight());
        Assertions.assertEquals("lyhpluodpvruud", model.backends().get(0).backendHostHeader());
        Assertions.assertEquals("ibthostgktstvd", model.loadBalancingSettings().id());
        Assertions.assertEquals("lzedqbcvhzlhplo", model.healthProbeSettings().id());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackendPool model = new BackendPool().withId("lmbtxhwgfwsrt")
            .withName("kdl")
            .withBackends(Arrays.asList(new Backend().withAddress("mojmsvpkjprvkw")
                .withPrivateLinkAlias("zqljyxgtczh")
                .withPrivateLinkResourceId("dbsdshm")
                .withPrivateLinkLocation("maehvbbxurip")
                .withPrivateLinkApprovalMessage("htba")
                .withHttpPort(407621468)
                .withHttpsPort(1532025762)
                .withEnabledState(BackendEnabledState.ENABLED)
                .withPriority(1975174816)
                .withWeight(2128748498)
                .withBackendHostHeader("lyhpluodpvruud")))
            .withLoadBalancingSettings(new SubResource().withId("ibthostgktstvd"))
            .withHealthProbeSettings(new SubResource().withId("lzedqbcvhzlhplo"));
        model = BinaryData.fromObject(model).toObject(BackendPool.class);
        Assertions.assertEquals("lmbtxhwgfwsrt", model.id());
        Assertions.assertEquals("kdl", model.name());
        Assertions.assertEquals("mojmsvpkjprvkw", model.backends().get(0).address());
        Assertions.assertEquals("zqljyxgtczh", model.backends().get(0).privateLinkAlias());
        Assertions.assertEquals("dbsdshm", model.backends().get(0).privateLinkResourceId());
        Assertions.assertEquals("maehvbbxurip", model.backends().get(0).privateLinkLocation());
        Assertions.assertEquals("htba", model.backends().get(0).privateLinkApprovalMessage());
        Assertions.assertEquals(407621468, model.backends().get(0).httpPort());
        Assertions.assertEquals(1532025762, model.backends().get(0).httpsPort());
        Assertions.assertEquals(BackendEnabledState.ENABLED, model.backends().get(0).enabledState());
        Assertions.assertEquals(1975174816, model.backends().get(0).priority());
        Assertions.assertEquals(2128748498, model.backends().get(0).weight());
        Assertions.assertEquals("lyhpluodpvruud", model.backends().get(0).backendHostHeader());
        Assertions.assertEquals("ibthostgktstvd", model.loadBalancingSettings().id());
        Assertions.assertEquals("lzedqbcvhzlhplo", model.healthProbeSettings().id());
    }
}
