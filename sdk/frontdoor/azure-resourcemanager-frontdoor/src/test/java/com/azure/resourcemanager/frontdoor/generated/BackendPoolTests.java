// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.frontdoor.generated;

import com.azure.core.management.SubResource;
import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.frontdoor.models.Backend;
import com.azure.resourcemanager.frontdoor.models.BackendEnabledState;
import com.azure.resourcemanager.frontdoor.models.BackendPool;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BackendPoolTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackendPool model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"resourceState\":\"Enabled\",\"backends\":[{\"address\":\"zikhl\",\"privateLinkAlias\":\"jhdgqggebdunyga\",\"privateLinkResourceId\":\"idb\",\"privateLinkLocation\":\"atpxl\",\"privateEndpointStatus\":\"Disconnected\",\"privateLinkApprovalMessage\":\"yjmoadsu\",\"httpPort\":239264688,\"httpsPort\":726484461,\"enabledState\":\"Enabled\",\"priority\":522176461,\"weight\":1651100345,\"backendHostHeader\":\"bjhhyx\"}],\"loadBalancingSettings\":{\"id\":\"lyc\"},\"healthProbeSettings\":{\"id\":\"hp\"}},\"name\":\"kgymareqnajxqug\",\"type\":\"ky\",\"id\":\"beddgssofw\"}")
                .toObject(BackendPool.class);
        Assertions.assertEquals("beddgssofw", model.id());
        Assertions.assertEquals("kgymareqnajxqug", model.name());
        Assertions.assertEquals("zikhl", model.backends().get(0).address());
        Assertions.assertEquals("jhdgqggebdunyga", model.backends().get(0).privateLinkAlias());
        Assertions.assertEquals("idb", model.backends().get(0).privateLinkResourceId());
        Assertions.assertEquals("atpxl", model.backends().get(0).privateLinkLocation());
        Assertions.assertEquals("yjmoadsu", model.backends().get(0).privateLinkApprovalMessage());
        Assertions.assertEquals(239264688, model.backends().get(0).httpPort());
        Assertions.assertEquals(726484461, model.backends().get(0).httpsPort());
        Assertions.assertEquals(BackendEnabledState.ENABLED, model.backends().get(0).enabledState());
        Assertions.assertEquals(522176461, model.backends().get(0).priority());
        Assertions.assertEquals(1651100345, model.backends().get(0).weight());
        Assertions.assertEquals("bjhhyx", model.backends().get(0).backendHostHeader());
        Assertions.assertEquals("lyc", model.loadBalancingSettings().id());
        Assertions.assertEquals("hp", model.healthProbeSettings().id());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackendPool model =
            new BackendPool()
                .withId("beddgssofw")
                .withName("kgymareqnajxqug")
                .withBackends(
                    Arrays
                        .asList(
                            new Backend()
                                .withAddress("zikhl")
                                .withPrivateLinkAlias("jhdgqggebdunyga")
                                .withPrivateLinkResourceId("idb")
                                .withPrivateLinkLocation("atpxl")
                                .withPrivateLinkApprovalMessage("yjmoadsu")
                                .withHttpPort(239264688)
                                .withHttpsPort(726484461)
                                .withEnabledState(BackendEnabledState.ENABLED)
                                .withPriority(522176461)
                                .withWeight(1651100345)
                                .withBackendHostHeader("bjhhyx")))
                .withLoadBalancingSettings(new SubResource().withId("lyc"))
                .withHealthProbeSettings(new SubResource().withId("hp"));
        model = BinaryData.fromObject(model).toObject(BackendPool.class);
        Assertions.assertEquals("beddgssofw", model.id());
        Assertions.assertEquals("kgymareqnajxqug", model.name());
        Assertions.assertEquals("zikhl", model.backends().get(0).address());
        Assertions.assertEquals("jhdgqggebdunyga", model.backends().get(0).privateLinkAlias());
        Assertions.assertEquals("idb", model.backends().get(0).privateLinkResourceId());
        Assertions.assertEquals("atpxl", model.backends().get(0).privateLinkLocation());
        Assertions.assertEquals("yjmoadsu", model.backends().get(0).privateLinkApprovalMessage());
        Assertions.assertEquals(239264688, model.backends().get(0).httpPort());
        Assertions.assertEquals(726484461, model.backends().get(0).httpsPort());
        Assertions.assertEquals(BackendEnabledState.ENABLED, model.backends().get(0).enabledState());
        Assertions.assertEquals(522176461, model.backends().get(0).priority());
        Assertions.assertEquals(1651100345, model.backends().get(0).weight());
        Assertions.assertEquals("bjhhyx", model.backends().get(0).backendHostHeader());
        Assertions.assertEquals("lyc", model.loadBalancingSettings().id());
        Assertions.assertEquals("hp", model.healthProbeSettings().id());
    }
}
