// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.frontdoor.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.frontdoor.fluent.models.PolicySettingsLogScrubbing;
import com.azure.resourcemanager.frontdoor.models.ScrubbingRuleEntryMatchOperator;
import com.azure.resourcemanager.frontdoor.models.ScrubbingRuleEntryMatchVariable;
import com.azure.resourcemanager.frontdoor.models.ScrubbingRuleEntryState;
import com.azure.resourcemanager.frontdoor.models.WebApplicationFirewallScrubbingRules;
import com.azure.resourcemanager.frontdoor.models.WebApplicationFirewallScrubbingState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PolicySettingsLogScrubbingTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PolicySettingsLogScrubbing model = BinaryData.fromString(
            "{\"state\":\"Enabled\",\"scrubbingRules\":[{\"matchVariable\":\"RequestUri\",\"selectorMatchOperator\":\"EqualsAny\",\"selector\":\"ybqsoqijg\",\"state\":\"Disabled\"},{\"matchVariable\":\"RequestUri\",\"selectorMatchOperator\":\"Equals\",\"selector\":\"zlobcufpd\",\"state\":\"Enabled\"}]}")
            .toObject(PolicySettingsLogScrubbing.class);
        Assertions.assertEquals(WebApplicationFirewallScrubbingState.ENABLED, model.state());
        Assertions.assertEquals(ScrubbingRuleEntryMatchVariable.REQUEST_URI,
            model.scrubbingRules().get(0).matchVariable());
        Assertions.assertEquals(ScrubbingRuleEntryMatchOperator.EQUALS_ANY,
            model.scrubbingRules().get(0).selectorMatchOperator());
        Assertions.assertEquals("ybqsoqijg", model.scrubbingRules().get(0).selector());
        Assertions.assertEquals(ScrubbingRuleEntryState.DISABLED, model.scrubbingRules().get(0).state());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PolicySettingsLogScrubbing model
            = new PolicySettingsLogScrubbing().withState(WebApplicationFirewallScrubbingState.ENABLED)
                .withScrubbingRules(Arrays.asList(
                    new WebApplicationFirewallScrubbingRules()
                        .withMatchVariable(ScrubbingRuleEntryMatchVariable.REQUEST_URI)
                        .withSelectorMatchOperator(ScrubbingRuleEntryMatchOperator.EQUALS_ANY)
                        .withSelector("ybqsoqijg")
                        .withState(ScrubbingRuleEntryState.DISABLED),
                    new WebApplicationFirewallScrubbingRules()
                        .withMatchVariable(ScrubbingRuleEntryMatchVariable.REQUEST_URI)
                        .withSelectorMatchOperator(ScrubbingRuleEntryMatchOperator.EQUALS)
                        .withSelector("zlobcufpd")
                        .withState(ScrubbingRuleEntryState.ENABLED)));
        model = BinaryData.fromObject(model).toObject(PolicySettingsLogScrubbing.class);
        Assertions.assertEquals(WebApplicationFirewallScrubbingState.ENABLED, model.state());
        Assertions.assertEquals(ScrubbingRuleEntryMatchVariable.REQUEST_URI,
            model.scrubbingRules().get(0).matchVariable());
        Assertions.assertEquals(ScrubbingRuleEntryMatchOperator.EQUALS_ANY,
            model.scrubbingRules().get(0).selectorMatchOperator());
        Assertions.assertEquals("ybqsoqijg", model.scrubbingRules().get(0).selector());
        Assertions.assertEquals(ScrubbingRuleEntryState.DISABLED, model.scrubbingRules().get(0).state());
    }
}
