// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.frontdoor.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.frontdoor.fluent.models.LatencyScorecardInner;
import com.azure.resourcemanager.frontdoor.models.LatencyMetric;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class LatencyScorecardInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LatencyScorecardInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"id\":\"ywgndrv\",\"name\":\"hzgpphrcgyncocpe\",\"description\":\"vmmcoofs\",\"endpointA\":\"zevgb\",\"endpointB\":\"jqabcypmivkwlzuv\",\"startDateTimeUTC\":\"2021-04-25T02:12:50Z\",\"endDateTimeUTC\":\"2021-07-27T17:19:12Z\",\"country\":\"nbacfi\",\"latencyMetrics\":[{\"name\":\"bxetqgtzxdpn\",\"endDateTimeUTC\":\"qqwx\",\"aValue\":50.453197,\"bValue\":7.9074564,\"delta\":51.42286,\"deltaPercent\":51.614838,\"aCLower95CI\":72.799835,\"aHUpper95CI\":71.703186,\"bCLower95CI\":33.89374,\"bUpper95CI\":48.133312}]},\"location\":\"mpmngnzscxaqwoo\",\"tags\":{\"ipheoflokeyyien\":\"bonqvpkvlrxnjeas\",\"masxazjpqyegu\":\"bdlwtgrhpdjpj\"},\"id\":\"lhbxxhejjzzvdud\",\"name\":\"wdslfhotwmcy\",\"type\":\"pwlbjnpg\"}")
                .toObject(LatencyScorecardInner.class);
        Assertions.assertEquals("mpmngnzscxaqwoo", model.location());
        Assertions.assertEquals("bonqvpkvlrxnjeas", model.tags().get("ipheoflokeyyien"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LatencyScorecardInner model =
            new LatencyScorecardInner()
                .withLocation("mpmngnzscxaqwoo")
                .withTags(mapOf("ipheoflokeyyien", "bonqvpkvlrxnjeas", "masxazjpqyegu", "bdlwtgrhpdjpj"))
                .withLatencyMetrics(Arrays.asList(new LatencyMetric()));
        model = BinaryData.fromObject(model).toObject(LatencyScorecardInner.class);
        Assertions.assertEquals("mpmngnzscxaqwoo", model.location());
        Assertions.assertEquals("bonqvpkvlrxnjeas", model.tags().get("ipheoflokeyyien"));
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
