// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.frontdoor.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.frontdoor.FrontDoorManager;
import com.azure.resourcemanager.frontdoor.models.EndpointType;
import com.azure.resourcemanager.frontdoor.models.PreconfiguredEndpoint;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PreconfiguredEndpointsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"description\":\"qsg\",\"endpoint\":\"yuuzivens\",\"endpointType\":\"CDN\",\"backend\":\"yyvpkpatlb\"},\"location\":\"jp\",\"tags\":{\"fvolmknbnxwcd\":\"ksrf\",\"awz\":\"mmpvf\",\"uiaclkiexhajlfn\":\"gbrt\",\"b\":\"hiqfyuttdiy\"},\"id\":\"vnwsw\",\"name\":\"txkyctwwgzwxjlm\",\"type\":\"cvogygzyvne\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        FrontDoorManager manager = FrontDoorManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<PreconfiguredEndpoint> response = manager.preconfiguredEndpoints()
            .list("mlghktuidvrmazlp", "wwexymzvlazipbh", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("jp", response.iterator().next().location());
        Assertions.assertEquals("ksrf", response.iterator().next().tags().get("fvolmknbnxwcd"));
        Assertions.assertEquals("qsg", response.iterator().next().description());
        Assertions.assertEquals("yuuzivens", response.iterator().next().endpoint());
        Assertions.assertEquals(EndpointType.CDN, response.iterator().next().endpointType());
        Assertions.assertEquals("yyvpkpatlb", response.iterator().next().backend());
    }
}
