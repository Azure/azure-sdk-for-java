// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.frontdoor.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.frontdoor.FrontDoorManager;
import com.azure.resourcemanager.frontdoor.models.Experiment;
import com.azure.resourcemanager.frontdoor.models.State;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ExperimentsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"description\":\"sjvh\",\"endpointA\":{\"name\":\"ftkwq\",\"endpoint\":\"pmvssehaep\"},\"endpointB\":{\"name\":\"cxtczhupeukn\",\"endpoint\":\"d\"},\"enabledState\":\"Disabled\",\"resourceState\":\"Disabled\",\"status\":\"ydjfb\",\"scriptFileUri\":\"yv\"},\"location\":\"hulrtywikdmhla\",\"tags\":{\"mxu\":\"lgbhgauacdi\",\"yjq\":\"rs\"},\"id\":\"dkfnozoeoqbvj\",\"name\":\"vefgwbmqjchntas\",\"type\":\"ay\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        FrontDoorManager manager = FrontDoorManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Experiment response = manager.experiments()
            .getWithResponse("chillcecf", "huwaoaguhic", "llizs", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("hulrtywikdmhla", response.location());
        Assertions.assertEquals("lgbhgauacdi", response.tags().get("mxu"));
        Assertions.assertEquals("sjvh", response.description());
        Assertions.assertEquals("ftkwq", response.endpointA().name());
        Assertions.assertEquals("pmvssehaep", response.endpointA().endpoint());
        Assertions.assertEquals("cxtczhupeukn", response.endpointB().name());
        Assertions.assertEquals("d", response.endpointB().endpoint());
        Assertions.assertEquals(State.DISABLED, response.enabledState());
    }
}
