// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datadog.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datadog.models.DatadogHostMetadata;
import com.azure.resourcemanager.datadog.models.DatadogInstallMethod;
import com.azure.resourcemanager.datadog.models.DatadogLogsAgent;
import org.junit.jupiter.api.Assertions;

public final class DatadogHostMetadataTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DatadogHostMetadata model =
            BinaryData
                .fromString(
                    "{\"agentVersion\":\"mbmbexppbh\",\"installMethod\":{\"tool\":\"rolfpfp\",\"toolVersion\":\"lgbquxig\",\"installerVersion\":\"jgzjaoyfhrtx\"},\"logsAgent\":{\"transport\":\"erkujys\"}}")
                .toObject(DatadogHostMetadata.class);
        Assertions.assertEquals("mbmbexppbh", model.agentVersion());
        Assertions.assertEquals("rolfpfp", model.installMethod().tool());
        Assertions.assertEquals("lgbquxig", model.installMethod().toolVersion());
        Assertions.assertEquals("jgzjaoyfhrtx", model.installMethod().installerVersion());
        Assertions.assertEquals("erkujys", model.logsAgent().transport());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DatadogHostMetadata model =
            new DatadogHostMetadata()
                .withAgentVersion("mbmbexppbh")
                .withInstallMethod(
                    new DatadogInstallMethod()
                        .withTool("rolfpfp")
                        .withToolVersion("lgbquxig")
                        .withInstallerVersion("jgzjaoyfhrtx"))
                .withLogsAgent(new DatadogLogsAgent().withTransport("erkujys"));
        model = BinaryData.fromObject(model).toObject(DatadogHostMetadata.class);
        Assertions.assertEquals("mbmbexppbh", model.agentVersion());
        Assertions.assertEquals("rolfpfp", model.installMethod().tool());
        Assertions.assertEquals("lgbquxig", model.installMethod().toolVersion());
        Assertions.assertEquals("jgzjaoyfhrtx", model.installMethod().installerVersion());
        Assertions.assertEquals("erkujys", model.logsAgent().transport());
    }
}
