// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datadog.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datadog.fluent.models.OperationResultInner;
import com.azure.resourcemanager.datadog.models.OperationDisplay;
import org.junit.jupiter.api.Assertions;

public final class OperationResultInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationResultInner model =
            BinaryData
                .fromString(
                    "{\"name\":\"npime\",\"display\":{\"provider\":\"txgcpodgmaajr\",\"resource\":\"djwzrlov\",\"operation\":\"lwhijcoejctbzaq\",\"description\":\"sycbkbfk\"},\"isDataAction\":false}")
                .toObject(OperationResultInner.class);
        Assertions.assertEquals("npime", model.name());
        Assertions.assertEquals("txgcpodgmaajr", model.display().provider());
        Assertions.assertEquals("djwzrlov", model.display().resource());
        Assertions.assertEquals("lwhijcoejctbzaq", model.display().operation());
        Assertions.assertEquals("sycbkbfk", model.display().description());
        Assertions.assertEquals(false, model.isDataAction());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationResultInner model =
            new OperationResultInner()
                .withName("npime")
                .withDisplay(
                    new OperationDisplay()
                        .withProvider("txgcpodgmaajr")
                        .withResource("djwzrlov")
                        .withOperation("lwhijcoejctbzaq")
                        .withDescription("sycbkbfk"))
                .withIsDataAction(false);
        model = BinaryData.fromObject(model).toObject(OperationResultInner.class);
        Assertions.assertEquals("npime", model.name());
        Assertions.assertEquals("txgcpodgmaajr", model.display().provider());
        Assertions.assertEquals("djwzrlov", model.display().resource());
        Assertions.assertEquals("lwhijcoejctbzaq", model.display().operation());
        Assertions.assertEquals("sycbkbfk", model.display().description());
        Assertions.assertEquals(false, model.isDataAction());
    }
}
