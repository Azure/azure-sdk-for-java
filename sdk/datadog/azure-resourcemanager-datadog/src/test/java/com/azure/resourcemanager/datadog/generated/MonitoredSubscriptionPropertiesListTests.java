// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datadog.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datadog.fluent.models.MonitoredSubscriptionPropertiesInner;
import com.azure.resourcemanager.datadog.models.MonitoredSubscription;
import com.azure.resourcemanager.datadog.models.MonitoredSubscriptionPropertiesList;
import com.azure.resourcemanager.datadog.models.MonitoringTagRulesProperties;
import com.azure.resourcemanager.datadog.models.Operation;
import com.azure.resourcemanager.datadog.models.Status;
import com.azure.resourcemanager.datadog.models.SubscriptionList;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MonitoredSubscriptionPropertiesListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MonitoredSubscriptionPropertiesList model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"name\":\"aos\",\"id\":\"xc\",\"type\":\"npc\",\"properties\":{\"operation\":\"AddComplete\",\"monitoredSubscriptionList\":[{\"subscriptionId\":\"lkevle\",\"status\":\"Active\",\"error\":\"buhfmvfaxkffeiit\",\"tagRules\":{}},{\"subscriptionId\":\"m\",\"status\":\"Active\",\"error\":\"shxmzsbbzoggigrx\",\"tagRules\":{}},{\"subscriptionId\":\"rvjx\",\"status\":\"Deleting\",\"error\":\"pydptko\",\"tagRules\":{}}]}}]}")
                .toObject(MonitoredSubscriptionPropertiesList.class);
        Assertions.assertEquals(Operation.ADD_COMPLETE, model.value().get(0).properties().operation());
        Assertions
            .assertEquals(
                "lkevle", model.value().get(0).properties().monitoredSubscriptionList().get(0).subscriptionId());
        Assertions
            .assertEquals(Status.ACTIVE, model.value().get(0).properties().monitoredSubscriptionList().get(0).status());
        Assertions
            .assertEquals(
                "buhfmvfaxkffeiit", model.value().get(0).properties().monitoredSubscriptionList().get(0).error());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MonitoredSubscriptionPropertiesList model =
            new MonitoredSubscriptionPropertiesList()
                .withValue(
                    Arrays
                        .asList(
                            new MonitoredSubscriptionPropertiesInner()
                                .withProperties(
                                    new SubscriptionList()
                                        .withOperation(Operation.ADD_COMPLETE)
                                        .withMonitoredSubscriptionList(
                                            Arrays
                                                .asList(
                                                    new MonitoredSubscription()
                                                        .withSubscriptionId("lkevle")
                                                        .withStatus(Status.ACTIVE)
                                                        .withError("buhfmvfaxkffeiit")
                                                        .withTagRules(new MonitoringTagRulesProperties()),
                                                    new MonitoredSubscription()
                                                        .withSubscriptionId("m")
                                                        .withStatus(Status.ACTIVE)
                                                        .withError("shxmzsbbzoggigrx")
                                                        .withTagRules(new MonitoringTagRulesProperties()),
                                                    new MonitoredSubscription()
                                                        .withSubscriptionId("rvjx")
                                                        .withStatus(Status.DELETING)
                                                        .withError("pydptko")
                                                        .withTagRules(new MonitoringTagRulesProperties()))))));
        model = BinaryData.fromObject(model).toObject(MonitoredSubscriptionPropertiesList.class);
        Assertions.assertEquals(Operation.ADD_COMPLETE, model.value().get(0).properties().operation());
        Assertions
            .assertEquals(
                "lkevle", model.value().get(0).properties().monitoredSubscriptionList().get(0).subscriptionId());
        Assertions
            .assertEquals(Status.ACTIVE, model.value().get(0).properties().monitoredSubscriptionList().get(0).status());
        Assertions
            .assertEquals(
                "buhfmvfaxkffeiit", model.value().get(0).properties().monitoredSubscriptionList().get(0).error());
    }
}
