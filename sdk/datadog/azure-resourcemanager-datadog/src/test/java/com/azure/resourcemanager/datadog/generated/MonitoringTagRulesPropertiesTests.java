// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datadog.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datadog.models.FilteringTag;
import com.azure.resourcemanager.datadog.models.LogRules;
import com.azure.resourcemanager.datadog.models.MetricRules;
import com.azure.resourcemanager.datadog.models.MonitoringTagRulesProperties;
import com.azure.resourcemanager.datadog.models.TagAction;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MonitoringTagRulesPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MonitoringTagRulesProperties model =
            BinaryData
                .fromString(
                    "{\"provisioningState\":\"Creating\",\"logRules\":{\"sendAadLogs\":false,\"sendSubscriptionLogs\":false,\"sendResourceLogs\":true,\"filteringTags\":[{\"name\":\"cattpngjcrcczsq\",\"value\":\"hvmdajvnysounq\",\"action\":\"Include\"}]},\"metricRules\":{\"filteringTags\":[{\"name\":\"upfh\",\"value\":\"ltrpmopj\",\"action\":\"Include\"}]},\"automuting\":false}")
                .toObject(MonitoringTagRulesProperties.class);
        Assertions.assertEquals(false, model.logRules().sendAadLogs());
        Assertions.assertEquals(false, model.logRules().sendSubscriptionLogs());
        Assertions.assertEquals(true, model.logRules().sendResourceLogs());
        Assertions.assertEquals("cattpngjcrcczsq", model.logRules().filteringTags().get(0).name());
        Assertions.assertEquals("hvmdajvnysounq", model.logRules().filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.INCLUDE, model.logRules().filteringTags().get(0).action());
        Assertions.assertEquals("upfh", model.metricRules().filteringTags().get(0).name());
        Assertions.assertEquals("ltrpmopj", model.metricRules().filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.INCLUDE, model.metricRules().filteringTags().get(0).action());
        Assertions.assertEquals(false, model.automuting());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MonitoringTagRulesProperties model =
            new MonitoringTagRulesProperties()
                .withLogRules(
                    new LogRules()
                        .withSendAadLogs(false)
                        .withSendSubscriptionLogs(false)
                        .withSendResourceLogs(true)
                        .withFilteringTags(
                            Arrays
                                .asList(
                                    new FilteringTag()
                                        .withName("cattpngjcrcczsq")
                                        .withValue("hvmdajvnysounq")
                                        .withAction(TagAction.INCLUDE))))
                .withMetricRules(
                    new MetricRules()
                        .withFilteringTags(
                            Arrays
                                .asList(
                                    new FilteringTag()
                                        .withName("upfh")
                                        .withValue("ltrpmopj")
                                        .withAction(TagAction.INCLUDE))))
                .withAutomuting(false);
        model = BinaryData.fromObject(model).toObject(MonitoringTagRulesProperties.class);
        Assertions.assertEquals(false, model.logRules().sendAadLogs());
        Assertions.assertEquals(false, model.logRules().sendSubscriptionLogs());
        Assertions.assertEquals(true, model.logRules().sendResourceLogs());
        Assertions.assertEquals("cattpngjcrcczsq", model.logRules().filteringTags().get(0).name());
        Assertions.assertEquals("hvmdajvnysounq", model.logRules().filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.INCLUDE, model.logRules().filteringTags().get(0).action());
        Assertions.assertEquals("upfh", model.metricRules().filteringTags().get(0).name());
        Assertions.assertEquals("ltrpmopj", model.metricRules().filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.INCLUDE, model.metricRules().filteringTags().get(0).action());
        Assertions.assertEquals(false, model.automuting());
    }
}
