// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datadog.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datadog.models.FilteringTag;
import com.azure.resourcemanager.datadog.models.LogRules;
import com.azure.resourcemanager.datadog.models.MetricRules;
import com.azure.resourcemanager.datadog.models.MonitoredSubscription;
import com.azure.resourcemanager.datadog.models.MonitoringTagRulesProperties;
import com.azure.resourcemanager.datadog.models.Status;
import com.azure.resourcemanager.datadog.models.TagAction;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MonitoredSubscriptionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MonitoredSubscription model =
            BinaryData
                .fromString(
                    "{\"subscriptionId\":\"gyxzk\",\"status\":\"Failed\",\"error\":\"uko\",\"tagRules\":{\"provisioningState\":\"Deleting\",\"logRules\":{\"sendAadLogs\":true,\"sendSubscriptionLogs\":true,\"sendResourceLogs\":false,\"filteringTags\":[{\"name\":\"kbeype\",\"value\":\"mjmwvvjektcx\",\"action\":\"Exclude\"}]},\"metricRules\":{\"filteringTags\":[{\"name\":\"s\",\"value\":\"rzpwvlqdqgbiq\",\"action\":\"Exclude\"}]},\"automuting\":false}}")
                .toObject(MonitoredSubscription.class);
        Assertions.assertEquals("gyxzk", model.subscriptionId());
        Assertions.assertEquals(Status.FAILED, model.status());
        Assertions.assertEquals("uko", model.error());
        Assertions.assertEquals(true, model.tagRules().logRules().sendAadLogs());
        Assertions.assertEquals(true, model.tagRules().logRules().sendSubscriptionLogs());
        Assertions.assertEquals(false, model.tagRules().logRules().sendResourceLogs());
        Assertions.assertEquals("kbeype", model.tagRules().logRules().filteringTags().get(0).name());
        Assertions.assertEquals("mjmwvvjektcx", model.tagRules().logRules().filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.EXCLUDE, model.tagRules().logRules().filteringTags().get(0).action());
        Assertions.assertEquals("s", model.tagRules().metricRules().filteringTags().get(0).name());
        Assertions.assertEquals("rzpwvlqdqgbiq", model.tagRules().metricRules().filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.EXCLUDE, model.tagRules().metricRules().filteringTags().get(0).action());
        Assertions.assertEquals(false, model.tagRules().automuting());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MonitoredSubscription model =
            new MonitoredSubscription()
                .withSubscriptionId("gyxzk")
                .withStatus(Status.FAILED)
                .withError("uko")
                .withTagRules(
                    new MonitoringTagRulesProperties()
                        .withLogRules(
                            new LogRules()
                                .withSendAadLogs(true)
                                .withSendSubscriptionLogs(true)
                                .withSendResourceLogs(false)
                                .withFilteringTags(
                                    Arrays
                                        .asList(
                                            new FilteringTag()
                                                .withName("kbeype")
                                                .withValue("mjmwvvjektcx")
                                                .withAction(TagAction.EXCLUDE))))
                        .withMetricRules(
                            new MetricRules()
                                .withFilteringTags(
                                    Arrays
                                        .asList(
                                            new FilteringTag()
                                                .withName("s")
                                                .withValue("rzpwvlqdqgbiq")
                                                .withAction(TagAction.EXCLUDE))))
                        .withAutomuting(false));
        model = BinaryData.fromObject(model).toObject(MonitoredSubscription.class);
        Assertions.assertEquals("gyxzk", model.subscriptionId());
        Assertions.assertEquals(Status.FAILED, model.status());
        Assertions.assertEquals("uko", model.error());
        Assertions.assertEquals(true, model.tagRules().logRules().sendAadLogs());
        Assertions.assertEquals(true, model.tagRules().logRules().sendSubscriptionLogs());
        Assertions.assertEquals(false, model.tagRules().logRules().sendResourceLogs());
        Assertions.assertEquals("kbeype", model.tagRules().logRules().filteringTags().get(0).name());
        Assertions.assertEquals("mjmwvvjektcx", model.tagRules().logRules().filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.EXCLUDE, model.tagRules().logRules().filteringTags().get(0).action());
        Assertions.assertEquals("s", model.tagRules().metricRules().filteringTags().get(0).name());
        Assertions.assertEquals("rzpwvlqdqgbiq", model.tagRules().metricRules().filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.EXCLUDE, model.tagRules().metricRules().filteringTags().get(0).action());
        Assertions.assertEquals(false, model.tagRules().automuting());
    }
}
