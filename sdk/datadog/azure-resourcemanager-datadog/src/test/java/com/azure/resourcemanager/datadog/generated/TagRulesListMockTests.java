// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datadog.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.datadog.MicrosoftDatadogManager;
import com.azure.resourcemanager.datadog.models.MonitoringTagRules;
import com.azure.resourcemanager.datadog.models.TagAction;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class TagRulesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"NotSpecified\",\"logRules\":{\"sendAadLogs\":false,\"sendSubscriptionLogs\":true,\"sendResourceLogs\":false,\"filteringTags\":[{\"name\":\"loayqcgw\",\"value\":\"zjuzgwyz\",\"action\":\"Include\"},{\"name\":\"ongmtsa\",\"value\":\"cbpwxqpsrknft\",\"action\":\"Exclude\"},{\"name\":\"iuhprwmdyvxqta\",\"value\":\"iwwroyqbexrmc\",\"action\":\"Exclude\"}]},\"metricRules\":{\"filteringTags\":[{\"name\":\"jvkn\",\"value\":\"fqsgzvahapjy\",\"action\":\"Exclude\"},{\"name\":\"gqzcjr\",\"value\":\"djzlmwlx\",\"action\":\"Include\"},{\"name\":\"fhzovawjvzunluth\",\"value\":\"prnxipeil\",\"action\":\"Include\"}]},\"automuting\":false},\"id\":\"jxdultskzbbtdzu\",\"name\":\"veekgpwozuhkfp\",\"type\":\"sjyofdx\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MicrosoftDatadogManager manager = MicrosoftDatadogManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<MonitoringTagRules> response
            = manager.tagRules().list("c", "wxzvlvqhjkb", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(false, response.iterator().next().properties().logRules().sendAadLogs());
        Assertions.assertEquals(true, response.iterator().next().properties().logRules().sendSubscriptionLogs());
        Assertions.assertEquals(false, response.iterator().next().properties().logRules().sendResourceLogs());
        Assertions.assertEquals("loayqcgw",
            response.iterator().next().properties().logRules().filteringTags().get(0).name());
        Assertions.assertEquals("zjuzgwyz",
            response.iterator().next().properties().logRules().filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.INCLUDE,
            response.iterator().next().properties().logRules().filteringTags().get(0).action());
        Assertions.assertEquals("jvkn",
            response.iterator().next().properties().metricRules().filteringTags().get(0).name());
        Assertions.assertEquals("fqsgzvahapjy",
            response.iterator().next().properties().metricRules().filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.EXCLUDE,
            response.iterator().next().properties().metricRules().filteringTags().get(0).action());
        Assertions.assertEquals(false, response.iterator().next().properties().automuting());
    }
}
