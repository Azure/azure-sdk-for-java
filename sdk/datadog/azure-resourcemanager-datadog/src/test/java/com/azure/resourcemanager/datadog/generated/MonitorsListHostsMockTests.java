// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datadog.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.datadog.MicrosoftDatadogManager;
import com.azure.resourcemanager.datadog.models.DatadogHost;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MonitorsListHostsMockTests {
    @Test
    public void testListHosts() throws Exception {
        String responseStr
            = "{\"value\":[{\"name\":\"ebtfhvpesap\",\"aliases\":[\"dqmh\",\"jdhtldwkyzxu\",\"tkncwsc\",\"svlxotogtwrup\"],\"apps\":[\"vnm\",\"cykvceo\",\"eil\",\"vnotyfjfcnj\"],\"meta\":{\"agentVersion\":\"nxdhbt\",\"installMethod\":{\"tool\":\"h\",\"toolVersion\":\"pnvjtoqnermclf\",\"installerVersion\":\"phoxus\"},\"logsAgent\":{\"transport\":\"abgy\"}}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MicrosoftDatadogManager manager = MicrosoftDatadogManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<DatadogHost> response
            = manager.monitors().listHosts("upedeojnabckhs", "txp", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ebtfhvpesap", response.iterator().next().name());
        Assertions.assertEquals("dqmh", response.iterator().next().aliases().get(0));
        Assertions.assertEquals("vnm", response.iterator().next().apps().get(0));
        Assertions.assertEquals("nxdhbt", response.iterator().next().meta().agentVersion());
        Assertions.assertEquals("h", response.iterator().next().meta().installMethod().tool());
        Assertions.assertEquals("pnvjtoqnermclf", response.iterator().next().meta().installMethod().toolVersion());
        Assertions.assertEquals("phoxus", response.iterator().next().meta().installMethod().installerVersion());
        Assertions.assertEquals("abgy", response.iterator().next().meta().logsAgent().transport());
    }
}
