// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datadog.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.datadog.MicrosoftDatadogManager;
import com.azure.resourcemanager.datadog.models.MonitoredSubscriptionProperties;
import com.azure.resourcemanager.datadog.models.Operation;
import com.azure.resourcemanager.datadog.models.Status;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MonitoredSubscriptionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"name\":\"gx\",\"id\":\"rslpmutwuoeg\",\"type\":\"khjwn\",\"properties\":{\"operation\":\"DeleteComplete\",\"monitoredSubscriptionList\":[{\"subscriptionId\":\"cpdggkzzlvmbmp\",\"status\":\"Deleting\",\"error\":\"dfvue\",\"tagRules\":{\"provisioningState\":\"Deleted\",\"logRules\":{},\"metricRules\":{},\"automuting\":false}},{\"subscriptionId\":\"wyhrfouyftaakc\",\"status\":\"Failed\",\"error\":\"zvqtmnubexkp\",\"tagRules\":{\"provisioningState\":\"Deleting\",\"logRules\":{},\"metricRules\":{},\"automuting\":true}}]}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MicrosoftDatadogManager manager = MicrosoftDatadogManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        MonitoredSubscriptionProperties response = manager.monitoredSubscriptions()
            .getWithResponse("drhvoodsotbo", "zdopcjwvnhd", "d", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(Operation.DELETE_COMPLETE, response.properties().operation());
        Assertions.assertEquals("cpdggkzzlvmbmp",
            response.properties().monitoredSubscriptionList().get(0).subscriptionId());
        Assertions.assertEquals(Status.DELETING, response.properties().monitoredSubscriptionList().get(0).status());
        Assertions.assertEquals("dfvue", response.properties().monitoredSubscriptionList().get(0).error());
        Assertions.assertEquals(false,
            response.properties().monitoredSubscriptionList().get(0).tagRules().automuting());
    }
}
