// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datadog.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Datadog resource can be created or not properties.
 */
@Immutable
public final class CreateResourceSupportedProperties implements JsonSerializable<CreateResourceSupportedProperties> {
    /*
     * The ARM id of the subscription.
     */
    private String name;

    /*
     * Indicates if selected subscription supports Datadog resource creation, if not it is already being monitored for
     * the selected organization via multi subscription feature.
     */
    private Boolean creationSupported;

    /**
     * Creates an instance of CreateResourceSupportedProperties class.
     */
    public CreateResourceSupportedProperties() {
    }

    /**
     * Get the name property: The ARM id of the subscription.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the creationSupported property: Indicates if selected subscription supports Datadog resource creation, if not
     * it is already being monitored for the selected organization via multi subscription feature.
     * 
     * @return the creationSupported value.
     */
    public Boolean creationSupported() {
        return this.creationSupported;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CreateResourceSupportedProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CreateResourceSupportedProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CreateResourceSupportedProperties.
     */
    public static CreateResourceSupportedProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CreateResourceSupportedProperties deserializedCreateResourceSupportedProperties
                = new CreateResourceSupportedProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedCreateResourceSupportedProperties.name = reader.getString();
                } else if ("creationSupported".equals(fieldName)) {
                    deserializedCreateResourceSupportedProperties.creationSupported
                        = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCreateResourceSupportedProperties;
        });
    }
}
