// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datadog.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The DatadogInstallMethod model.
 */
@Fluent
public final class DatadogInstallMethod implements JsonSerializable<DatadogInstallMethod> {
    /*
     * The tool.
     */
    private String tool;

    /*
     * The tool version.
     */
    private String toolVersion;

    /*
     * The installer version.
     */
    private String installerVersion;

    /**
     * Creates an instance of DatadogInstallMethod class.
     */
    public DatadogInstallMethod() {
    }

    /**
     * Get the tool property: The tool.
     * 
     * @return the tool value.
     */
    public String tool() {
        return this.tool;
    }

    /**
     * Set the tool property: The tool.
     * 
     * @param tool the tool value to set.
     * @return the DatadogInstallMethod object itself.
     */
    public DatadogInstallMethod withTool(String tool) {
        this.tool = tool;
        return this;
    }

    /**
     * Get the toolVersion property: The tool version.
     * 
     * @return the toolVersion value.
     */
    public String toolVersion() {
        return this.toolVersion;
    }

    /**
     * Set the toolVersion property: The tool version.
     * 
     * @param toolVersion the toolVersion value to set.
     * @return the DatadogInstallMethod object itself.
     */
    public DatadogInstallMethod withToolVersion(String toolVersion) {
        this.toolVersion = toolVersion;
        return this;
    }

    /**
     * Get the installerVersion property: The installer version.
     * 
     * @return the installerVersion value.
     */
    public String installerVersion() {
        return this.installerVersion;
    }

    /**
     * Set the installerVersion property: The installer version.
     * 
     * @param installerVersion the installerVersion value to set.
     * @return the DatadogInstallMethod object itself.
     */
    public DatadogInstallMethod withInstallerVersion(String installerVersion) {
        this.installerVersion = installerVersion;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("tool", this.tool);
        jsonWriter.writeStringField("toolVersion", this.toolVersion);
        jsonWriter.writeStringField("installerVersion", this.installerVersion);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DatadogInstallMethod from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DatadogInstallMethod if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the DatadogInstallMethod.
     */
    public static DatadogInstallMethod fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DatadogInstallMethod deserializedDatadogInstallMethod = new DatadogInstallMethod();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("tool".equals(fieldName)) {
                    deserializedDatadogInstallMethod.tool = reader.getString();
                } else if ("toolVersion".equals(fieldName)) {
                    deserializedDatadogInstallMethod.toolVersion = reader.getString();
                } else if ("installerVersion".equals(fieldName)) {
                    deserializedDatadogInstallMethod.installerVersion = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDatadogInstallMethod;
        });
    }
}
