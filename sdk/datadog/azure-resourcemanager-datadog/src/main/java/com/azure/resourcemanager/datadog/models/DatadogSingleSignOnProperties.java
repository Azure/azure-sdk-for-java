// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datadog.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The DatadogSingleSignOnProperties model.
 */
@Fluent
public final class DatadogSingleSignOnProperties implements JsonSerializable<DatadogSingleSignOnProperties> {
    /*
     * The provisioningState property.
     */
    private ProvisioningState provisioningState;

    /*
     * Various states of the SSO resource
     */
    private SingleSignOnStates singleSignOnState;

    /*
     * The Id of the Enterprise App used for Single sign-on.
     */
    private String enterpriseAppId;

    /*
     * The login URL specific to this Datadog Organization.
     */
    private String singleSignOnUrl;

    /**
     * Creates an instance of DatadogSingleSignOnProperties class.
     */
    public DatadogSingleSignOnProperties() {
    }

    /**
     * Get the provisioningState property: The provisioningState property.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the singleSignOnState property: Various states of the SSO resource.
     * 
     * @return the singleSignOnState value.
     */
    public SingleSignOnStates singleSignOnState() {
        return this.singleSignOnState;
    }

    /**
     * Set the singleSignOnState property: Various states of the SSO resource.
     * 
     * @param singleSignOnState the singleSignOnState value to set.
     * @return the DatadogSingleSignOnProperties object itself.
     */
    public DatadogSingleSignOnProperties withSingleSignOnState(SingleSignOnStates singleSignOnState) {
        this.singleSignOnState = singleSignOnState;
        return this;
    }

    /**
     * Get the enterpriseAppId property: The Id of the Enterprise App used for Single sign-on.
     * 
     * @return the enterpriseAppId value.
     */
    public String enterpriseAppId() {
        return this.enterpriseAppId;
    }

    /**
     * Set the enterpriseAppId property: The Id of the Enterprise App used for Single sign-on.
     * 
     * @param enterpriseAppId the enterpriseAppId value to set.
     * @return the DatadogSingleSignOnProperties object itself.
     */
    public DatadogSingleSignOnProperties withEnterpriseAppId(String enterpriseAppId) {
        this.enterpriseAppId = enterpriseAppId;
        return this;
    }

    /**
     * Get the singleSignOnUrl property: The login URL specific to this Datadog Organization.
     * 
     * @return the singleSignOnUrl value.
     */
    public String singleSignOnUrl() {
        return this.singleSignOnUrl;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("singleSignOnState",
            this.singleSignOnState == null ? null : this.singleSignOnState.toString());
        jsonWriter.writeStringField("enterpriseAppId", this.enterpriseAppId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DatadogSingleSignOnProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DatadogSingleSignOnProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the DatadogSingleSignOnProperties.
     */
    public static DatadogSingleSignOnProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DatadogSingleSignOnProperties deserializedDatadogSingleSignOnProperties
                = new DatadogSingleSignOnProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("provisioningState".equals(fieldName)) {
                    deserializedDatadogSingleSignOnProperties.provisioningState
                        = ProvisioningState.fromString(reader.getString());
                } else if ("singleSignOnState".equals(fieldName)) {
                    deserializedDatadogSingleSignOnProperties.singleSignOnState
                        = SingleSignOnStates.fromString(reader.getString());
                } else if ("enterpriseAppId".equals(fieldName)) {
                    deserializedDatadogSingleSignOnProperties.enterpriseAppId = reader.getString();
                } else if ("singleSignOnUrl".equals(fieldName)) {
                    deserializedDatadogSingleSignOnProperties.singleSignOnUrl = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDatadogSingleSignOnProperties;
        });
    }
}
