// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datadog.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The request to update subscriptions needed to be monitored by the Datadog monitor resource. */
@Fluent
public final class SubscriptionList {
    /*
     * The operation for the patch on the resource.
     */
    @JsonProperty(value = "operation")
    private Operation operation;

    /*
     * List of subscriptions and the state of the monitoring.
     */
    @JsonProperty(value = "monitoredSubscriptionList")
    private List<MonitoredSubscription> monitoredSubscriptionList;

    /** Creates an instance of SubscriptionList class. */
    public SubscriptionList() {
    }

    /**
     * Get the operation property: The operation for the patch on the resource.
     *
     * @return the operation value.
     */
    public Operation operation() {
        return this.operation;
    }

    /**
     * Set the operation property: The operation for the patch on the resource.
     *
     * @param operation the operation value to set.
     * @return the SubscriptionList object itself.
     */
    public SubscriptionList withOperation(Operation operation) {
        this.operation = operation;
        return this;
    }

    /**
     * Get the monitoredSubscriptionList property: List of subscriptions and the state of the monitoring.
     *
     * @return the monitoredSubscriptionList value.
     */
    public List<MonitoredSubscription> monitoredSubscriptionList() {
        return this.monitoredSubscriptionList;
    }

    /**
     * Set the monitoredSubscriptionList property: List of subscriptions and the state of the monitoring.
     *
     * @param monitoredSubscriptionList the monitoredSubscriptionList value to set.
     * @return the SubscriptionList object itself.
     */
    public SubscriptionList withMonitoredSubscriptionList(List<MonitoredSubscription> monitoredSubscriptionList) {
        this.monitoredSubscriptionList = monitoredSubscriptionList;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (monitoredSubscriptionList() != null) {
            monitoredSubscriptionList().forEach(e -> e.validate());
        }
    }
}
