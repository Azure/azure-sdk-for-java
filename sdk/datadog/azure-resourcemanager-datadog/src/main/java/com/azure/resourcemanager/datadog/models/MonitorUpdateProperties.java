// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datadog.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The set of properties that can be update in a PATCH request to a monitor resource.
 */
@Fluent
public final class MonitorUpdateProperties implements JsonSerializable<MonitorUpdateProperties> {
    /*
     * Flag specifying if the resource monitoring is enabled or disabled.
     */
    private MonitoringStatus monitoringStatus;

    /*
     * The new cloud security posture management value of the monitor resource. This collects configuration information
     * for all resources in a subscription and track conformance to industry benchmarks.
     */
    private Boolean cspm;

    /**
     * Creates an instance of MonitorUpdateProperties class.
     */
    public MonitorUpdateProperties() {
    }

    /**
     * Get the monitoringStatus property: Flag specifying if the resource monitoring is enabled or disabled.
     * 
     * @return the monitoringStatus value.
     */
    public MonitoringStatus monitoringStatus() {
        return this.monitoringStatus;
    }

    /**
     * Set the monitoringStatus property: Flag specifying if the resource monitoring is enabled or disabled.
     * 
     * @param monitoringStatus the monitoringStatus value to set.
     * @return the MonitorUpdateProperties object itself.
     */
    public MonitorUpdateProperties withMonitoringStatus(MonitoringStatus monitoringStatus) {
        this.monitoringStatus = monitoringStatus;
        return this;
    }

    /**
     * Get the cspm property: The new cloud security posture management value of the monitor resource. This collects
     * configuration information for all resources in a subscription and track conformance to industry benchmarks.
     * 
     * @return the cspm value.
     */
    public Boolean cspm() {
        return this.cspm;
    }

    /**
     * Set the cspm property: The new cloud security posture management value of the monitor resource. This collects
     * configuration information for all resources in a subscription and track conformance to industry benchmarks.
     * 
     * @param cspm the cspm value to set.
     * @return the MonitorUpdateProperties object itself.
     */
    public MonitorUpdateProperties withCspm(Boolean cspm) {
        this.cspm = cspm;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("monitoringStatus",
            this.monitoringStatus == null ? null : this.monitoringStatus.toString());
        jsonWriter.writeBooleanField("cspm", this.cspm);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MonitorUpdateProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MonitorUpdateProperties if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the MonitorUpdateProperties.
     */
    public static MonitorUpdateProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MonitorUpdateProperties deserializedMonitorUpdateProperties = new MonitorUpdateProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("monitoringStatus".equals(fieldName)) {
                    deserializedMonitorUpdateProperties.monitoringStatus
                        = MonitoringStatus.fromString(reader.getString());
                } else if ("cspm".equals(fieldName)) {
                    deserializedMonitorUpdateProperties.cspm = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMonitorUpdateProperties;
        });
    }
}
