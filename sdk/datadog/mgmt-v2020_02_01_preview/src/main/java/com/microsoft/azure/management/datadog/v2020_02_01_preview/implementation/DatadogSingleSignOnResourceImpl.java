/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datadog.v2020_02_01_preview.implementation;

import com.microsoft.azure.management.datadog.v2020_02_01_preview.DatadogSingleSignOnResource;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;
import com.microsoft.azure.management.datadog.v2020_02_01_preview.DatadogSingleSignOnProperties;
import rx.functions.Func1;

class DatadogSingleSignOnResourceImpl extends CreatableUpdatableImpl<DatadogSingleSignOnResource, DatadogSingleSignOnResourceInner, DatadogSingleSignOnResourceImpl> implements DatadogSingleSignOnResource, DatadogSingleSignOnResource.Definition, DatadogSingleSignOnResource.Update {
    private final DatadogManager manager;
    private String resourceGroupName;
    private String monitorName;
    private String configurationName;
    private DatadogSingleSignOnProperties cproperties;
    private DatadogSingleSignOnProperties uproperties;

    DatadogSingleSignOnResourceImpl(String name, DatadogManager manager) {
        super(name, new DatadogSingleSignOnResourceInner());
        this.manager = manager;
        // Set resource name
        this.configurationName = name;
        //
        this.cproperties = new DatadogSingleSignOnProperties();
        this.uproperties = new DatadogSingleSignOnProperties();
    }

    DatadogSingleSignOnResourceImpl(DatadogSingleSignOnResourceInner inner, DatadogManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.configurationName = inner.name();
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.monitorName = IdParsingUtils.getValueFromIdByName(inner.id(), "monitors");
        this.configurationName = IdParsingUtils.getValueFromIdByName(inner.id(), "singleSignOnConfigurations");
        //
        this.cproperties = new DatadogSingleSignOnProperties();
        this.uproperties = new DatadogSingleSignOnProperties();
    }

    @Override
    public DatadogManager manager() {
        return this.manager;
    }

    @Override
    public Observable<DatadogSingleSignOnResource> createResourceAsync() {
        SingleSignOnConfigurationsInner client = this.manager().inner().singleSignOnConfigurations();
        return client.createOrUpdateAsync(this.resourceGroupName, this.monitorName, this.configurationName, this.cproperties)
            .map(new Func1<DatadogSingleSignOnResourceInner, DatadogSingleSignOnResourceInner>() {
               @Override
               public DatadogSingleSignOnResourceInner call(DatadogSingleSignOnResourceInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<DatadogSingleSignOnResource> updateResourceAsync() {
        SingleSignOnConfigurationsInner client = this.manager().inner().singleSignOnConfigurations();
        return client.createOrUpdateAsync(this.resourceGroupName, this.monitorName, this.configurationName, this.uproperties)
            .map(new Func1<DatadogSingleSignOnResourceInner, DatadogSingleSignOnResourceInner>() {
               @Override
               public DatadogSingleSignOnResourceInner call(DatadogSingleSignOnResourceInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<DatadogSingleSignOnResourceInner> getInnerAsync() {
        SingleSignOnConfigurationsInner client = this.manager().inner().singleSignOnConfigurations();
        return client.getAsync(this.resourceGroupName, this.monitorName, this.configurationName);
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }

    private void resetCreateUpdateParameters() {
        this.cproperties = new DatadogSingleSignOnProperties();
        this.uproperties = new DatadogSingleSignOnProperties();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public DatadogSingleSignOnProperties properties() {
        return this.inner().properties();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public DatadogSingleSignOnResourceImpl withExistingMonitor(String resourceGroupName, String monitorName) {
        this.resourceGroupName = resourceGroupName;
        this.monitorName = monitorName;
        return this;
    }

    @Override
    public DatadogSingleSignOnResourceImpl withProperties(DatadogSingleSignOnProperties properties) {
        if (isInCreateMode()) {
            this.cproperties = properties;
        } else {
            this.uproperties = properties;
        }
        return this;
    }

}
