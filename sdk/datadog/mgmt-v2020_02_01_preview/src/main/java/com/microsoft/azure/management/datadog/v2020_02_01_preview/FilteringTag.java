/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datadog.v2020_02_01_preview;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The definition of a filtering tag. Filtering tags are used for capturing
 * resources and include/exclude them from being monitored.
 */
public class FilteringTag {
    /**
     * The name (also known as the key) of the tag.
     */
    @JsonProperty(value = "name")
    private String name;

    /**
     * The value of the tag.
     */
    @JsonProperty(value = "value")
    private String value;

    /**
     * Possible values include: 'Include', 'Exclude'.
     */
    @JsonProperty(value = "action")
    private TagAction action;

    /**
     * Get the name (also known as the key) of the tag.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name (also known as the key) of the tag.
     *
     * @param name the name value to set
     * @return the FilteringTag object itself.
     */
    public FilteringTag withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the value of the tag.
     *
     * @return the value value
     */
    public String value() {
        return this.value;
    }

    /**
     * Set the value of the tag.
     *
     * @param value the value value to set
     * @return the FilteringTag object itself.
     */
    public FilteringTag withValue(String value) {
        this.value = value;
        return this;
    }

    /**
     * Get possible values include: 'Include', 'Exclude'.
     *
     * @return the action value
     */
    public TagAction action() {
        return this.action;
    }

    /**
     * Set possible values include: 'Include', 'Exclude'.
     *
     * @param action the action value to set
     * @return the FilteringTag object itself.
     */
    public FilteringTag withAction(TagAction action) {
        this.action = action;
        return this;
    }

}
