/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.datadog.v2020_02_01_preview.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.datadog.v2020_02_01_preview.MonitoredResources;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.Page;
import com.microsoft.azure.management.datadog.v2020_02_01_preview.MonitoredResource;

class MonitoredResourcesImpl extends WrapperImpl<MonitoredResourcesInner> implements MonitoredResources {
    private final DatadogManager manager;

    MonitoredResourcesImpl(DatadogManager manager) {
        super(manager.inner().monitoredResources());
        this.manager = manager;
    }

    public DatadogManager manager() {
        return this.manager;
    }

    @Override
    public Observable<MonitoredResource> listAsync(final String resourceGroupName, final String monitorName) {
        MonitoredResourcesInner client = this.inner();
        return client.listAsync(resourceGroupName, monitorName)
        .flatMapIterable(new Func1<Page<MonitoredResourceInner>, Iterable<MonitoredResourceInner>>() {
            @Override
            public Iterable<MonitoredResourceInner> call(Page<MonitoredResourceInner> page) {
                return page.items();
            }
        })
        .map(new Func1<MonitoredResourceInner, MonitoredResource>() {
            @Override
            public MonitoredResource call(MonitoredResourceInner inner) {
                return new MonitoredResourceImpl(inner, manager());
            }
        });
    }

}
