/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.implementation.VMwareCloudSimpleManager;
import java.util.UUID;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.implementation.DedicatedCloudNodeInner;

/**
 * Type representing DedicatedCloudNode.
 */
public interface DedicatedCloudNode extends HasInner<DedicatedCloudNodeInner>, Resource, GroupableResourceCore<VMwareCloudSimpleManager, DedicatedCloudNodeInner>, HasResourceGroup, Refreshable<DedicatedCloudNode>, Updatable<DedicatedCloudNode.Update>, HasManager<VMwareCloudSimpleManager> {
    /**
     * @return the availabilityZoneId value.
     */
    String availabilityZoneId();

    /**
     * @return the availabilityZoneName value.
     */
    String availabilityZoneName();

    /**
     * @return the cloudRackName value.
     */
    String cloudRackName();

    /**
     * @return the created value.
     */
    Object created();

    /**
     * @return the id1 value.
     */
    String id1();

    /**
     * @return the name1 value.
     */
    String name1();

    /**
     * @return the nodesCount value.
     */
    int nodesCount();

    /**
     * @return the placementGroupId value.
     */
    String placementGroupId();

    /**
     * @return the placementGroupName value.
     */
    String placementGroupName();

    /**
     * @return the privateCloudId value.
     */
    String privateCloudId();

    /**
     * @return the privateCloudName value.
     */
    String privateCloudName();

    /**
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * @return the purchaseId value.
     */
    UUID purchaseId();

    /**
     * @return the sku value.
     */
    Sku sku();

    /**
     * @return the status value.
     */
    NodeStatus status();

    /**
     * @return the vmwareClusterName value.
     */
    String vmwareClusterName();

    /**
     * The entirety of the DedicatedCloudNode definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithAvailabilityZoneId, DefinitionStages.WithId1, DefinitionStages.WithName1, DefinitionStages.WithNodesCount, DefinitionStages.WithPlacementGroupId, DefinitionStages.WithPurchaseId, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of DedicatedCloudNode definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a DedicatedCloudNode definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the DedicatedCloudNode definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithAvailabilityZoneId> {
        }

        /**
         * The stage of the dedicatedcloudnode definition allowing to specify AvailabilityZoneId.
         */
        interface WithAvailabilityZoneId {
           /**
            * Specifies availabilityZoneId.
            * @param availabilityZoneId Availability Zone id, e.g. "az1"
            * @return the next definition stage
*/
            WithId1 withAvailabilityZoneId(String availabilityZoneId);
        }

        /**
         * The stage of the dedicatedcloudnode definition allowing to specify Id1.
         */
        interface WithId1 {
           /**
            * Specifies id1.
            * @param id1 SKU's id
            * @return the next definition stage
*/
            WithName1 withId1(String id1);
        }

        /**
         * The stage of the dedicatedcloudnode definition allowing to specify Name1.
         */
        interface WithName1 {
           /**
            * Specifies name1.
            * @param name1 SKU's name
            * @return the next definition stage
*/
            WithNodesCount withName1(String name1);
        }

        /**
         * The stage of the dedicatedcloudnode definition allowing to specify NodesCount.
         */
        interface WithNodesCount {
           /**
            * Specifies nodesCount.
            * @param nodesCount count of nodes to create
            * @return the next definition stage
*/
            WithPlacementGroupId withNodesCount(int nodesCount);
        }

        /**
         * The stage of the dedicatedcloudnode definition allowing to specify PlacementGroupId.
         */
        interface WithPlacementGroupId {
           /**
            * Specifies placementGroupId.
            * @param placementGroupId Placement Group id, e.g. "n1"
            * @return the next definition stage
*/
            WithPurchaseId withPlacementGroupId(String placementGroupId);
        }

        /**
         * The stage of the dedicatedcloudnode definition allowing to specify PurchaseId.
         */
        interface WithPurchaseId {
           /**
            * Specifies purchaseId.
            * @param purchaseId purchase id
            * @return the next definition stage
*/
            WithCreate withPurchaseId(UUID purchaseId);
        }

        /**
         * The stage of the dedicatedcloudnode definition allowing to specify Sku.
         */
        interface WithSku {
            /**
             * Specifies sku.
             * @param sku Dedicated Cloud Nodes SKU
             * @return the next definition stage
             */
            WithCreate withSku(Sku sku);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<DedicatedCloudNode>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithSku {
        }
    }
    /**
     * The template for a DedicatedCloudNode update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<DedicatedCloudNode>, Resource.UpdateWithTags<Update>, UpdateStages.WithSku {
    }

    /**
     * Grouping of DedicatedCloudNode update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the dedicatedcloudnode update allowing to specify Sku.
         */
        interface WithSku {
            /**
             * Specifies sku.
             * @param sku Dedicated Cloud Nodes SKU
             * @return the next update stage
             */
            Update withSku(Sku sku);
        }

    }
}
