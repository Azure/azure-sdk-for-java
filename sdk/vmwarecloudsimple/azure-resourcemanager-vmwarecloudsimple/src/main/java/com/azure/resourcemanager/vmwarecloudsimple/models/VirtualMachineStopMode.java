// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.vmwarecloudsimple.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * List of virtual machine stop modes.
 */
@Fluent
public final class VirtualMachineStopMode implements JsonSerializable<VirtualMachineStopMode> {
    /*
     * mode indicates a type of stop operation - reboot, suspend, shutdown or power-off
     */
    private StopMode mode;

    /**
     * Creates an instance of VirtualMachineStopMode class.
     */
    public VirtualMachineStopMode() {
    }

    /**
     * Get the mode property: mode indicates a type of stop operation - reboot, suspend, shutdown or power-off.
     * 
     * @return the mode value.
     */
    public StopMode mode() {
        return this.mode;
    }

    /**
     * Set the mode property: mode indicates a type of stop operation - reboot, suspend, shutdown or power-off.
     * 
     * @param mode the mode value to set.
     * @return the VirtualMachineStopMode object itself.
     */
    public VirtualMachineStopMode withMode(StopMode mode) {
        this.mode = mode;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("mode", this.mode == null ? null : this.mode.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VirtualMachineStopMode from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VirtualMachineStopMode if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the VirtualMachineStopMode.
     */
    public static VirtualMachineStopMode fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            VirtualMachineStopMode deserializedVirtualMachineStopMode = new VirtualMachineStopMode();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("mode".equals(fieldName)) {
                    deserializedVirtualMachineStopMode.mode = StopMode.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVirtualMachineStopMode;
        });
    }
}
