// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.vmwarecloudsimple.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.vmwarecloudsimple.models.AvailableOperationDisplayPropertyServiceSpecificationMetricsList;
import java.io.IOException;

/**
 * Available operation display property service specification model.
 */
@Fluent
public final class AvailableOperationDisplayPropertyServiceSpecification
    implements JsonSerializable<AvailableOperationDisplayPropertyServiceSpecification> {
    /*
     * The list of specification's service metrics
     */
    private AvailableOperationDisplayPropertyServiceSpecificationMetricsList serviceSpecification;

    /**
     * Creates an instance of AvailableOperationDisplayPropertyServiceSpecification class.
     */
    public AvailableOperationDisplayPropertyServiceSpecification() {
    }

    /**
     * Get the serviceSpecification property: The list of specification's service metrics.
     * 
     * @return the serviceSpecification value.
     */
    public AvailableOperationDisplayPropertyServiceSpecificationMetricsList serviceSpecification() {
        return this.serviceSpecification;
    }

    /**
     * Set the serviceSpecification property: The list of specification's service metrics.
     * 
     * @param serviceSpecification the serviceSpecification value to set.
     * @return the AvailableOperationDisplayPropertyServiceSpecification object itself.
     */
    public AvailableOperationDisplayPropertyServiceSpecification withServiceSpecification(
        AvailableOperationDisplayPropertyServiceSpecificationMetricsList serviceSpecification) {
        this.serviceSpecification = serviceSpecification;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (serviceSpecification() != null) {
            serviceSpecification().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("serviceSpecification", this.serviceSpecification);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AvailableOperationDisplayPropertyServiceSpecification from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AvailableOperationDisplayPropertyServiceSpecification if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AvailableOperationDisplayPropertyServiceSpecification.
     */
    public static AvailableOperationDisplayPropertyServiceSpecification fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            AvailableOperationDisplayPropertyServiceSpecification deserializedAvailableOperationDisplayPropertyServiceSpecification
                = new AvailableOperationDisplayPropertyServiceSpecification();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("serviceSpecification".equals(fieldName)) {
                    deserializedAvailableOperationDisplayPropertyServiceSpecification.serviceSpecification
                        = AvailableOperationDisplayPropertyServiceSpecificationMetricsList.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAvailableOperationDisplayPropertyServiceSpecification;
        });
    }
}
