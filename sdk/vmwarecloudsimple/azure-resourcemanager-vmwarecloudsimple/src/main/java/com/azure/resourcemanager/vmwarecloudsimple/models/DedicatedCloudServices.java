// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.vmwarecloudsimple.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of DedicatedCloudServices. */
public interface DedicatedCloudServices {
    /**
     * Returns list of dedicated cloud services within a subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of dedicated cloud services.
     */
    PagedIterable<DedicatedCloudService> list();

    /**
     * Returns list of dedicated cloud services within a subscription.
     *
     * @param filter The filter to apply on the list operation.
     * @param top The maximum number of record sets to return.
     * @param skipToken to be used by nextLink implementation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of dedicated cloud services.
     */
    PagedIterable<DedicatedCloudService> list(String filter, Integer top, String skipToken, Context context);

    /**
     * Returns list of dedicated cloud services within a resource group.
     *
     * @param resourceGroupName The name of the resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of dedicated cloud services.
     */
    PagedIterable<DedicatedCloudService> listByResourceGroup(String resourceGroupName);

    /**
     * Returns list of dedicated cloud services within a resource group.
     *
     * @param resourceGroupName The name of the resource group.
     * @param filter The filter to apply on the list operation.
     * @param top The maximum number of record sets to return.
     * @param skipToken to be used by nextLink implementation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of dedicated cloud services.
     */
    PagedIterable<DedicatedCloudService> listByResourceGroup(
        String resourceGroupName, String filter, Integer top, String skipToken, Context context);

    /**
     * Returns Dedicate Cloud Service.
     *
     * @param resourceGroupName The name of the resource group.
     * @param dedicatedCloudServiceName dedicated cloud Service name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return dedicated cloud service model.
     */
    DedicatedCloudService getByResourceGroup(String resourceGroupName, String dedicatedCloudServiceName);

    /**
     * Returns Dedicate Cloud Service.
     *
     * @param resourceGroupName The name of the resource group.
     * @param dedicatedCloudServiceName dedicated cloud Service name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return dedicated cloud service model.
     */
    Response<DedicatedCloudService> getByResourceGroupWithResponse(
        String resourceGroupName, String dedicatedCloudServiceName, Context context);

    /**
     * Delete dedicate cloud service.
     *
     * @param resourceGroupName The name of the resource group.
     * @param dedicatedCloudServiceName dedicated cloud service name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String dedicatedCloudServiceName);

    /**
     * Delete dedicate cloud service.
     *
     * @param resourceGroupName The name of the resource group.
     * @param dedicatedCloudServiceName dedicated cloud service name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String dedicatedCloudServiceName, Context context);

    /**
     * Returns Dedicate Cloud Service.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return dedicated cloud service model.
     */
    DedicatedCloudService getById(String id);

    /**
     * Returns Dedicate Cloud Service.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return dedicated cloud service model.
     */
    Response<DedicatedCloudService> getByIdWithResponse(String id, Context context);

    /**
     * Delete dedicate cloud service.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete dedicate cloud service.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new DedicatedCloudService resource.
     *
     * @param name resource name.
     * @return the first stage of the new DedicatedCloudService definition.
     */
    DedicatedCloudService.DefinitionStages.Blank define(String name);
}
