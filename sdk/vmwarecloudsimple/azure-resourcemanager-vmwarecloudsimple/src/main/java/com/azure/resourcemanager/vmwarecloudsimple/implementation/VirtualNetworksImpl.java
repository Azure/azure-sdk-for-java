// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.vmwarecloudsimple.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.vmwarecloudsimple.fluent.VirtualNetworksClient;
import com.azure.resourcemanager.vmwarecloudsimple.fluent.models.VirtualNetworkInner;
import com.azure.resourcemanager.vmwarecloudsimple.models.VirtualNetwork;
import com.azure.resourcemanager.vmwarecloudsimple.models.VirtualNetworks;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class VirtualNetworksImpl implements VirtualNetworks {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(VirtualNetworksImpl.class);

    private final VirtualNetworksClient innerClient;

    private final com.azure.resourcemanager.vmwarecloudsimple.VMwareCloudSimpleManager serviceManager;

    public VirtualNetworksImpl(
        VirtualNetworksClient innerClient,
        com.azure.resourcemanager.vmwarecloudsimple.VMwareCloudSimpleManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<VirtualNetwork> list(String regionId, String pcName, String resourcePoolName) {
        PagedIterable<VirtualNetworkInner> inner = this.serviceClient().list(regionId, pcName, resourcePoolName);
        return Utils.mapPage(inner, inner1 -> new VirtualNetworkImpl(inner1, this.manager()));
    }

    public PagedIterable<VirtualNetwork> list(
        String regionId, String pcName, String resourcePoolName, Context context) {
        PagedIterable<VirtualNetworkInner> inner =
            this.serviceClient().list(regionId, pcName, resourcePoolName, context);
        return Utils.mapPage(inner, inner1 -> new VirtualNetworkImpl(inner1, this.manager()));
    }

    public VirtualNetwork get(String regionId, String pcName, String virtualNetworkName) {
        VirtualNetworkInner inner = this.serviceClient().get(regionId, pcName, virtualNetworkName);
        if (inner != null) {
            return new VirtualNetworkImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<VirtualNetwork> getWithResponse(
        String regionId, String pcName, String virtualNetworkName, Context context) {
        Response<VirtualNetworkInner> inner =
            this.serviceClient().getWithResponse(regionId, pcName, virtualNetworkName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new VirtualNetworkImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private VirtualNetworksClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.vmwarecloudsimple.VMwareCloudSimpleManager manager() {
        return this.serviceManager;
    }
}
