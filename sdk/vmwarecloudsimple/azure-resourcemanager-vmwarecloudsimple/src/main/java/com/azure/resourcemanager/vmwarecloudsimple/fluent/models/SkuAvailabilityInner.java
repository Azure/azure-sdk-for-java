// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.vmwarecloudsimple.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * SKU availability model.
 */
@Fluent
public final class SkuAvailabilityInner implements JsonSerializable<SkuAvailabilityInner> {
    /*
     * CloudSimple Availability Zone id
     */
    private String dedicatedAvailabilityZoneId;

    /*
     * CloudSimple Availability Zone Name
     */
    private String dedicatedAvailabilityZoneName;

    /*
     * CloudSimple Placement Group Id
     */
    private String dedicatedPlacementGroupId;

    /*
     * CloudSimple Placement Group name
     */
    private String dedicatedPlacementGroupName;

    /*
     * indicates how many resources of a given SKU is available in a AZ->PG
     */
    private int limit;

    /*
     * resource type e.g. DedicatedCloudNodes
     */
    private String resourceType;

    /*
     * sku id
     */
    private String skuId;

    /*
     * sku name
     */
    private String skuName;

    /**
     * Creates an instance of SkuAvailabilityInner class.
     */
    public SkuAvailabilityInner() {
    }

    /**
     * Get the dedicatedAvailabilityZoneId property: CloudSimple Availability Zone id.
     * 
     * @return the dedicatedAvailabilityZoneId value.
     */
    public String dedicatedAvailabilityZoneId() {
        return this.dedicatedAvailabilityZoneId;
    }

    /**
     * Set the dedicatedAvailabilityZoneId property: CloudSimple Availability Zone id.
     * 
     * @param dedicatedAvailabilityZoneId the dedicatedAvailabilityZoneId value to set.
     * @return the SkuAvailabilityInner object itself.
     */
    public SkuAvailabilityInner withDedicatedAvailabilityZoneId(String dedicatedAvailabilityZoneId) {
        this.dedicatedAvailabilityZoneId = dedicatedAvailabilityZoneId;
        return this;
    }

    /**
     * Get the dedicatedAvailabilityZoneName property: CloudSimple Availability Zone Name.
     * 
     * @return the dedicatedAvailabilityZoneName value.
     */
    public String dedicatedAvailabilityZoneName() {
        return this.dedicatedAvailabilityZoneName;
    }

    /**
     * Set the dedicatedAvailabilityZoneName property: CloudSimple Availability Zone Name.
     * 
     * @param dedicatedAvailabilityZoneName the dedicatedAvailabilityZoneName value to set.
     * @return the SkuAvailabilityInner object itself.
     */
    public SkuAvailabilityInner withDedicatedAvailabilityZoneName(String dedicatedAvailabilityZoneName) {
        this.dedicatedAvailabilityZoneName = dedicatedAvailabilityZoneName;
        return this;
    }

    /**
     * Get the dedicatedPlacementGroupId property: CloudSimple Placement Group Id.
     * 
     * @return the dedicatedPlacementGroupId value.
     */
    public String dedicatedPlacementGroupId() {
        return this.dedicatedPlacementGroupId;
    }

    /**
     * Set the dedicatedPlacementGroupId property: CloudSimple Placement Group Id.
     * 
     * @param dedicatedPlacementGroupId the dedicatedPlacementGroupId value to set.
     * @return the SkuAvailabilityInner object itself.
     */
    public SkuAvailabilityInner withDedicatedPlacementGroupId(String dedicatedPlacementGroupId) {
        this.dedicatedPlacementGroupId = dedicatedPlacementGroupId;
        return this;
    }

    /**
     * Get the dedicatedPlacementGroupName property: CloudSimple Placement Group name.
     * 
     * @return the dedicatedPlacementGroupName value.
     */
    public String dedicatedPlacementGroupName() {
        return this.dedicatedPlacementGroupName;
    }

    /**
     * Set the dedicatedPlacementGroupName property: CloudSimple Placement Group name.
     * 
     * @param dedicatedPlacementGroupName the dedicatedPlacementGroupName value to set.
     * @return the SkuAvailabilityInner object itself.
     */
    public SkuAvailabilityInner withDedicatedPlacementGroupName(String dedicatedPlacementGroupName) {
        this.dedicatedPlacementGroupName = dedicatedPlacementGroupName;
        return this;
    }

    /**
     * Get the limit property: indicates how many resources of a given SKU is available in a AZ-&gt;PG.
     * 
     * @return the limit value.
     */
    public int limit() {
        return this.limit;
    }

    /**
     * Set the limit property: indicates how many resources of a given SKU is available in a AZ-&gt;PG.
     * 
     * @param limit the limit value to set.
     * @return the SkuAvailabilityInner object itself.
     */
    public SkuAvailabilityInner withLimit(int limit) {
        this.limit = limit;
        return this;
    }

    /**
     * Get the resourceType property: resource type e.g. DedicatedCloudNodes.
     * 
     * @return the resourceType value.
     */
    public String resourceType() {
        return this.resourceType;
    }

    /**
     * Set the resourceType property: resource type e.g. DedicatedCloudNodes.
     * 
     * @param resourceType the resourceType value to set.
     * @return the SkuAvailabilityInner object itself.
     */
    public SkuAvailabilityInner withResourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }

    /**
     * Get the skuId property: sku id.
     * 
     * @return the skuId value.
     */
    public String skuId() {
        return this.skuId;
    }

    /**
     * Set the skuId property: sku id.
     * 
     * @param skuId the skuId value to set.
     * @return the SkuAvailabilityInner object itself.
     */
    public SkuAvailabilityInner withSkuId(String skuId) {
        this.skuId = skuId;
        return this;
    }

    /**
     * Get the skuName property: sku name.
     * 
     * @return the skuName value.
     */
    public String skuName() {
        return this.skuName;
    }

    /**
     * Set the skuName property: sku name.
     * 
     * @param skuName the skuName value to set.
     * @return the SkuAvailabilityInner object itself.
     */
    public SkuAvailabilityInner withSkuName(String skuName) {
        this.skuName = skuName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeIntField("limit", this.limit);
        jsonWriter.writeStringField("dedicatedAvailabilityZoneId", this.dedicatedAvailabilityZoneId);
        jsonWriter.writeStringField("dedicatedAvailabilityZoneName", this.dedicatedAvailabilityZoneName);
        jsonWriter.writeStringField("dedicatedPlacementGroupId", this.dedicatedPlacementGroupId);
        jsonWriter.writeStringField("dedicatedPlacementGroupName", this.dedicatedPlacementGroupName);
        jsonWriter.writeStringField("resourceType", this.resourceType);
        jsonWriter.writeStringField("skuId", this.skuId);
        jsonWriter.writeStringField("skuName", this.skuName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SkuAvailabilityInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SkuAvailabilityInner if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the SkuAvailabilityInner.
     */
    public static SkuAvailabilityInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SkuAvailabilityInner deserializedSkuAvailabilityInner = new SkuAvailabilityInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("limit".equals(fieldName)) {
                    deserializedSkuAvailabilityInner.limit = reader.getInt();
                } else if ("dedicatedAvailabilityZoneId".equals(fieldName)) {
                    deserializedSkuAvailabilityInner.dedicatedAvailabilityZoneId = reader.getString();
                } else if ("dedicatedAvailabilityZoneName".equals(fieldName)) {
                    deserializedSkuAvailabilityInner.dedicatedAvailabilityZoneName = reader.getString();
                } else if ("dedicatedPlacementGroupId".equals(fieldName)) {
                    deserializedSkuAvailabilityInner.dedicatedPlacementGroupId = reader.getString();
                } else if ("dedicatedPlacementGroupName".equals(fieldName)) {
                    deserializedSkuAvailabilityInner.dedicatedPlacementGroupName = reader.getString();
                } else if ("resourceType".equals(fieldName)) {
                    deserializedSkuAvailabilityInner.resourceType = reader.getString();
                } else if ("skuId".equals(fieldName)) {
                    deserializedSkuAvailabilityInner.skuId = reader.getString();
                } else if ("skuName".equals(fieldName)) {
                    deserializedSkuAvailabilityInner.skuName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSkuAvailabilityInner;
        });
    }
}
