// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.vmwarecloudsimple.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.resourcemanager.vmwarecloudsimple.fluent.models.AvailableOperationInner;
import com.azure.resourcemanager.vmwarecloudsimple.fluent.models.OperationResourceInner;
import com.azure.resourcemanager.vmwarecloudsimple.models.OperationsGetResponse;

/** An instance of this class provides access to all the operations defined in OperationsClient. */
public interface OperationsClient {
    /**
     * Implements list of available operations
     *
     * <p>Return list of operations.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of available operations as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AvailableOperationInner> list();

    /**
     * Implements list of available operations
     *
     * <p>Return list of operations.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of available operations as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AvailableOperationInner> list(Context context);

    /**
     * Implements get of async operation
     *
     * <p>Return an async operation.
     *
     * @param regionId The region Id (westus, eastus).
     * @param referer referer url.
     * @param operationId operation id.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return operation status response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    OperationsGetResponse getWithResponse(String regionId, String referer, String operationId, Context context);

    /**
     * Implements get of async operation
     *
     * <p>Return an async operation.
     *
     * @param regionId The region Id (westus, eastus).
     * @param referer referer url.
     * @param operationId operation id.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return operation status response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    OperationResourceInner get(String regionId, String referer, String operationId);
}
