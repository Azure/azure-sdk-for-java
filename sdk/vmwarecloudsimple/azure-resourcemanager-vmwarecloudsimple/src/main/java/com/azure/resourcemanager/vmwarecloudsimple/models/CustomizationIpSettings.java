// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.vmwarecloudsimple.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The CustomizationIpSettings model.
 */
@Fluent
public final class CustomizationIpSettings implements JsonSerializable<CustomizationIpSettings> {
    /*
     * The list of gateways
     */
    private List<String> gateway;

    /*
     * Ip address customization settings
     */
    private CustomizationIpAddress ip;

    /*
     * Adapter subnet mask
     */
    private String subnetMask;

    /**
     * Creates an instance of CustomizationIpSettings class.
     */
    public CustomizationIpSettings() {
    }

    /**
     * Get the gateway property: The list of gateways.
     * 
     * @return the gateway value.
     */
    public List<String> gateway() {
        return this.gateway;
    }

    /**
     * Set the gateway property: The list of gateways.
     * 
     * @param gateway the gateway value to set.
     * @return the CustomizationIpSettings object itself.
     */
    public CustomizationIpSettings withGateway(List<String> gateway) {
        this.gateway = gateway;
        return this;
    }

    /**
     * Get the ip property: Ip address customization settings.
     * 
     * @return the ip value.
     */
    public CustomizationIpAddress ip() {
        return this.ip;
    }

    /**
     * Set the ip property: Ip address customization settings.
     * 
     * @param ip the ip value to set.
     * @return the CustomizationIpSettings object itself.
     */
    public CustomizationIpSettings withIp(CustomizationIpAddress ip) {
        this.ip = ip;
        return this;
    }

    /**
     * Get the subnetMask property: Adapter subnet mask.
     * 
     * @return the subnetMask value.
     */
    public String subnetMask() {
        return this.subnetMask;
    }

    /**
     * Set the subnetMask property: Adapter subnet mask.
     * 
     * @param subnetMask the subnetMask value to set.
     * @return the CustomizationIpSettings object itself.
     */
    public CustomizationIpSettings withSubnetMask(String subnetMask) {
        this.subnetMask = subnetMask;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (ip() != null) {
            ip().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("gateway", this.gateway, (writer, element) -> writer.writeString(element));
        jsonWriter.writeJsonField("ip", this.ip);
        jsonWriter.writeStringField("subnetMask", this.subnetMask);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CustomizationIpSettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CustomizationIpSettings if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CustomizationIpSettings.
     */
    public static CustomizationIpSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CustomizationIpSettings deserializedCustomizationIpSettings = new CustomizationIpSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("gateway".equals(fieldName)) {
                    List<String> gateway = reader.readArray(reader1 -> reader1.getString());
                    deserializedCustomizationIpSettings.gateway = gateway;
                } else if ("ip".equals(fieldName)) {
                    deserializedCustomizationIpSettings.ip = CustomizationIpAddress.fromJson(reader);
                } else if ("subnetMask".equals(fieldName)) {
                    deserializedCustomizationIpSettings.subnetMask = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCustomizationIpSettings;
        });
    }
}
