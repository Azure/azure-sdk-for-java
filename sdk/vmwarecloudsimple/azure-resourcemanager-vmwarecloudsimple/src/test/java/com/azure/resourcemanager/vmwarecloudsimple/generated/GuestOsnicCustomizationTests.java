// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.vmwarecloudsimple.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.vmwarecloudsimple.models.GuestOsnicCustomization;
import com.azure.resourcemanager.vmwarecloudsimple.models.GuestOsnicCustomizationAllocation;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class GuestOsnicCustomizationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GuestOsnicCustomization model = BinaryData.fromString(
            "{\"allocation\":\"static\",\"dnsServers\":[\"cesutrgjupauut\",\"woqhihe\"],\"gateway\":[\"w\"],\"ipAddress\":\"nfqn\",\"mask\":\"ypsxjvfoim\",\"primaryWinsServer\":\"slirciz\",\"secondaryWinsServer\":\"vydfceacvlhvygdy\"}")
            .toObject(GuestOsnicCustomization.class);
        Assertions.assertEquals(GuestOsnicCustomizationAllocation.STATIC, model.allocation());
        Assertions.assertEquals("cesutrgjupauut", model.dnsServers().get(0));
        Assertions.assertEquals("w", model.gateway().get(0));
        Assertions.assertEquals("nfqn", model.ipAddress());
        Assertions.assertEquals("ypsxjvfoim", model.mask());
        Assertions.assertEquals("slirciz", model.primaryWinsServer());
        Assertions.assertEquals("vydfceacvlhvygdy", model.secondaryWinsServer());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GuestOsnicCustomization model
            = new GuestOsnicCustomization().withAllocation(GuestOsnicCustomizationAllocation.STATIC)
                .withDnsServers(Arrays.asList("cesutrgjupauut", "woqhihe"))
                .withGateway(Arrays.asList("w"))
                .withIpAddress("nfqn")
                .withMask("ypsxjvfoim")
                .withPrimaryWinsServer("slirciz")
                .withSecondaryWinsServer("vydfceacvlhvygdy");
        model = BinaryData.fromObject(model).toObject(GuestOsnicCustomization.class);
        Assertions.assertEquals(GuestOsnicCustomizationAllocation.STATIC, model.allocation());
        Assertions.assertEquals("cesutrgjupauut", model.dnsServers().get(0));
        Assertions.assertEquals("w", model.gateway().get(0));
        Assertions.assertEquals("nfqn", model.ipAddress());
        Assertions.assertEquals("ypsxjvfoim", model.mask());
        Assertions.assertEquals("slirciz", model.primaryWinsServer());
        Assertions.assertEquals("vydfceacvlhvygdy", model.secondaryWinsServer());
    }
}
