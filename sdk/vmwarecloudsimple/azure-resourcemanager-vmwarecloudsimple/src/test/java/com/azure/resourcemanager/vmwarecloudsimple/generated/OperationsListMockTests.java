// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.vmwarecloudsimple.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.vmwarecloudsimple.VMwareCloudSimpleManager;
import com.azure.resourcemanager.vmwarecloudsimple.models.AggregationType;
import com.azure.resourcemanager.vmwarecloudsimple.models.AvailableOperation;
import com.azure.resourcemanager.vmwarecloudsimple.models.OperationOrigin;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OperationsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"display\":{\"description\":\"chzyvlixqnrk\",\"operation\":\"kjibnxmysuxswqrn\",\"provider\":\"lwi\",\"resource\":\"sttex\"},\"isDataAction\":true,\"name\":\"wcyyufmhruncu\",\"origin\":\"user\",\"properties\":{\"serviceSpecification\":{\"metricSpecifications\":[{\"aggregationType\":\"Average\",\"displayDescription\":\"qzhlctddunq\",\"displayName\":\"dyfpchrqbnj\",\"name\":\"rcgegydcwboxjum\",\"unit\":\"qqoli\"},{\"aggregationType\":\"Average\",\"displayDescription\":\"raiouaubrjtl\",\"displayName\":\"qxfuojrngif\",\"name\":\"rzpasccbiuimzdly\",\"unit\":\"dfqwmkyoq\"},{\"aggregationType\":\"Average\",\"displayDescription\":\"dvruzslzojhpctf\",\"displayName\":\"mdxotngfdgu\",\"name\":\"eyzihgrky\",\"unit\":\"i\"}]}}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        VMwareCloudSimpleManager manager = VMwareCloudSimpleManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<AvailableOperation> response = manager.operations().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("chzyvlixqnrk", response.iterator().next().display().description());
        Assertions.assertEquals("kjibnxmysuxswqrn", response.iterator().next().display().operation());
        Assertions.assertEquals("lwi", response.iterator().next().display().provider());
        Assertions.assertEquals("sttex", response.iterator().next().display().resource());
        Assertions.assertEquals(true, response.iterator().next().isDataAction());
        Assertions.assertEquals("wcyyufmhruncu", response.iterator().next().name());
        Assertions.assertEquals(OperationOrigin.USER, response.iterator().next().origin());
        Assertions.assertEquals(AggregationType.AVERAGE,
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).aggregationType());
        Assertions.assertEquals("qzhlctddunq",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).displayDescription());
        Assertions.assertEquals("dyfpchrqbnj",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).displayName());
        Assertions.assertEquals("rcgegydcwboxjum",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).name());
        Assertions.assertEquals("qqoli",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).unit());
    }
}
