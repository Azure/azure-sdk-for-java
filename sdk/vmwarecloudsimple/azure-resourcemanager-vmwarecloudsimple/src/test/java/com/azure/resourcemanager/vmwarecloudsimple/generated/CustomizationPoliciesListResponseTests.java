// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.vmwarecloudsimple.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.vmwarecloudsimple.fluent.models.CustomizationPolicyInner;
import com.azure.resourcemanager.vmwarecloudsimple.models.CustomizationHostname;
import com.azure.resourcemanager.vmwarecloudsimple.models.CustomizationIdentity;
import com.azure.resourcemanager.vmwarecloudsimple.models.CustomizationIdentityType;
import com.azure.resourcemanager.vmwarecloudsimple.models.CustomizationIdentityUserData;
import com.azure.resourcemanager.vmwarecloudsimple.models.CustomizationNicSetting;
import com.azure.resourcemanager.vmwarecloudsimple.models.CustomizationPoliciesListResponse;
import com.azure.resourcemanager.vmwarecloudsimple.models.CustomizationPolicyPropertiesType;
import com.azure.resourcemanager.vmwarecloudsimple.models.CustomizationSpecification;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CustomizationPoliciesListResponseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CustomizationPoliciesListResponse model = BinaryData.fromString(
            "{\"nextLink\":\"mvikl\",\"value\":[{\"id\":\"khbejdznxc\",\"location\":\"srhnjivo\",\"name\":\"tnovqfzgemjdftul\",\"properties\":{\"description\":\"duceamtmc\",\"privateCloudId\":\"o\",\"specification\":{\"identity\":{\"data\":\"cwwqiokn\",\"hostName\":{},\"type\":\"WINDOWS\",\"userData\":{}},\"nicSettings\":[{},{}]},\"type\":\"LINUX\",\"version\":\"kjprvk\"},\"type\":\"fz\"}]}")
            .toObject(CustomizationPoliciesListResponse.class);
        Assertions.assertEquals("mvikl", model.nextLink());
        Assertions.assertEquals("khbejdznxc", model.value().get(0).id());
        Assertions.assertEquals("srhnjivo", model.value().get(0).location());
        Assertions.assertEquals("duceamtmc", model.value().get(0).description());
        Assertions.assertEquals("o", model.value().get(0).privateCloudId());
        Assertions.assertEquals("cwwqiokn", model.value().get(0).specification().identity().data());
        Assertions.assertEquals(CustomizationIdentityType.WINDOWS,
            model.value().get(0).specification().identity().type());
        Assertions.assertEquals(CustomizationPolicyPropertiesType.LINUX, model.value().get(0).typePropertiesType());
        Assertions.assertEquals("kjprvk", model.value().get(0).version());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CustomizationPoliciesListResponse model = new CustomizationPoliciesListResponse().withNextLink("mvikl")
            .withValue(Arrays.asList(new CustomizationPolicyInner().withId("khbejdznxc")
                .withLocation("srhnjivo")
                .withDescription("duceamtmc")
                .withPrivateCloudId("o")
                .withSpecification(new CustomizationSpecification()
                    .withIdentity(new CustomizationIdentity().withData("cwwqiokn")
                        .withHostname(new CustomizationHostname())
                        .withType(CustomizationIdentityType.WINDOWS)
                        .withUserData(new CustomizationIdentityUserData()))
                    .withNicSettings(Arrays.asList(new CustomizationNicSetting(), new CustomizationNicSetting())))
                .withTypePropertiesType(CustomizationPolicyPropertiesType.LINUX)
                .withVersion("kjprvk")));
        model = BinaryData.fromObject(model).toObject(CustomizationPoliciesListResponse.class);
        Assertions.assertEquals("mvikl", model.nextLink());
        Assertions.assertEquals("khbejdznxc", model.value().get(0).id());
        Assertions.assertEquals("srhnjivo", model.value().get(0).location());
        Assertions.assertEquals("duceamtmc", model.value().get(0).description());
        Assertions.assertEquals("o", model.value().get(0).privateCloudId());
        Assertions.assertEquals("cwwqiokn", model.value().get(0).specification().identity().data());
        Assertions.assertEquals(CustomizationIdentityType.WINDOWS,
            model.value().get(0).specification().identity().type());
        Assertions.assertEquals(CustomizationPolicyPropertiesType.LINUX, model.value().get(0).typePropertiesType());
        Assertions.assertEquals("kjprvk", model.value().get(0).version());
    }
}
