// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.vmwarecloudsimple.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.vmwarecloudsimple.models.CustomizationIpAddress;
import com.azure.resourcemanager.vmwarecloudsimple.models.CustomizationIpAddressType;
import com.azure.resourcemanager.vmwarecloudsimple.models.CustomizationIpSettings;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CustomizationIpSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CustomizationIpSettings model = BinaryData.fromString(
            "{\"gateway\":[\"hmxtdr\",\"futacoebjvewzc\",\"znmwcp\"],\"ip\":{\"argument\":\"aadraufactkahz\",\"ipAddress\":\"ajjziuxxpshne\",\"type\":\"DHCP_IP\"},\"subnetMask\":\"fgslqubkwdl\"}")
            .toObject(CustomizationIpSettings.class);
        Assertions.assertEquals("hmxtdr", model.gateway().get(0));
        Assertions.assertEquals("aadraufactkahz", model.ip().argument());
        Assertions.assertEquals("ajjziuxxpshne", model.ip().ipAddress());
        Assertions.assertEquals(CustomizationIpAddressType.DHCP_IP, model.ip().type());
        Assertions.assertEquals("fgslqubkwdl", model.subnetMask());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CustomizationIpSettings model
            = new CustomizationIpSettings().withGateway(Arrays.asList("hmxtdr", "futacoebjvewzc", "znmwcp"))
                .withIp(new CustomizationIpAddress().withArgument("aadraufactkahz")
                    .withIpAddress("ajjziuxxpshne")
                    .withType(CustomizationIpAddressType.DHCP_IP))
                .withSubnetMask("fgslqubkwdl");
        model = BinaryData.fromObject(model).toObject(CustomizationIpSettings.class);
        Assertions.assertEquals("hmxtdr", model.gateway().get(0));
        Assertions.assertEquals("aadraufactkahz", model.ip().argument());
        Assertions.assertEquals("ajjziuxxpshne", model.ip().ipAddress());
        Assertions.assertEquals(CustomizationIpAddressType.DHCP_IP, model.ip().type());
        Assertions.assertEquals("fgslqubkwdl", model.subnetMask());
    }
}
