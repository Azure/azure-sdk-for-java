// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.vmwarecloudsimple.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.vmwarecloudsimple.fluent.models.UsageInner;
import com.azure.resourcemanager.vmwarecloudsimple.models.UsageCount;
import com.azure.resourcemanager.vmwarecloudsimple.models.UsageName;
import org.junit.jupiter.api.Assertions;

public final class UsageInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UsageInner model = BinaryData.fromString(
            "{\"currentValue\":913425762,\"limit\":737206023,\"name\":{\"localizedValue\":\"jrwhryvy\",\"value\":\"t\"},\"unit\":\"CountPerSecond\"}")
            .toObject(UsageInner.class);
        Assertions.assertEquals(913425762, model.currentValue());
        Assertions.assertEquals(737206023, model.limit());
        Assertions.assertEquals("jrwhryvy", model.name().localizedValue());
        Assertions.assertEquals("t", model.name().value());
        Assertions.assertEquals(UsageCount.COUNT_PER_SECOND, model.unit());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UsageInner model = new UsageInner().withCurrentValue(913425762)
            .withLimit(737206023)
            .withName(new UsageName().withLocalizedValue("jrwhryvy").withValue("t"))
            .withUnit(UsageCount.COUNT_PER_SECOND);
        model = BinaryData.fromObject(model).toObject(UsageInner.class);
        Assertions.assertEquals(913425762, model.currentValue());
        Assertions.assertEquals(737206023, model.limit());
        Assertions.assertEquals("jrwhryvy", model.name().localizedValue());
        Assertions.assertEquals("t", model.name().value());
        Assertions.assertEquals(UsageCount.COUNT_PER_SECOND, model.unit());
    }
}
