// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.vmwarecloudsimple.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.vmwarecloudsimple.fluent.models.SkuAvailabilityInner;
import org.junit.jupiter.api.Assertions;

public final class SkuAvailabilityInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SkuAvailabilityInner model = BinaryData.fromString(
            "{\"dedicatedAvailabilityZoneId\":\"qnwvlrya\",\"dedicatedAvailabilityZoneName\":\"hheunmmqhgyx\",\"dedicatedPlacementGroupId\":\"onocukok\",\"dedicatedPlacementGroupName\":\"axuconuq\",\"limit\":447504444,\"resourceType\":\"kbeype\",\"skuId\":\"mjmwvvjektcx\",\"skuName\":\"nhwlrsffrzpwvl\"}")
            .toObject(SkuAvailabilityInner.class);
        Assertions.assertEquals("qnwvlrya", model.dedicatedAvailabilityZoneId());
        Assertions.assertEquals("hheunmmqhgyx", model.dedicatedAvailabilityZoneName());
        Assertions.assertEquals("onocukok", model.dedicatedPlacementGroupId());
        Assertions.assertEquals("axuconuq", model.dedicatedPlacementGroupName());
        Assertions.assertEquals(447504444, model.limit());
        Assertions.assertEquals("kbeype", model.resourceType());
        Assertions.assertEquals("mjmwvvjektcx", model.skuId());
        Assertions.assertEquals("nhwlrsffrzpwvl", model.skuName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SkuAvailabilityInner model = new SkuAvailabilityInner().withDedicatedAvailabilityZoneId("qnwvlrya")
            .withDedicatedAvailabilityZoneName("hheunmmqhgyx")
            .withDedicatedPlacementGroupId("onocukok")
            .withDedicatedPlacementGroupName("axuconuq")
            .withLimit(447504444)
            .withResourceType("kbeype")
            .withSkuId("mjmwvvjektcx")
            .withSkuName("nhwlrsffrzpwvl");
        model = BinaryData.fromObject(model).toObject(SkuAvailabilityInner.class);
        Assertions.assertEquals("qnwvlrya", model.dedicatedAvailabilityZoneId());
        Assertions.assertEquals("hheunmmqhgyx", model.dedicatedAvailabilityZoneName());
        Assertions.assertEquals("onocukok", model.dedicatedPlacementGroupId());
        Assertions.assertEquals("axuconuq", model.dedicatedPlacementGroupName());
        Assertions.assertEquals(447504444, model.limit());
        Assertions.assertEquals("kbeype", model.resourceType());
        Assertions.assertEquals("mjmwvvjektcx", model.skuId());
        Assertions.assertEquals("nhwlrsffrzpwvl", model.skuName());
    }
}
