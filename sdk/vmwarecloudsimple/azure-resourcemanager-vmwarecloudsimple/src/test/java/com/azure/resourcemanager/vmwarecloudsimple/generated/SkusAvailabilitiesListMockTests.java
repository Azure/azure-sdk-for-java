// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.vmwarecloudsimple.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.vmwarecloudsimple.VMwareCloudSimpleManager;
import com.azure.resourcemanager.vmwarecloudsimple.models.SkuAvailability;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SkusAvailabilitiesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"dedicatedAvailabilityZoneId\":\"glqivbgkcv\",\"dedicatedAvailabilityZoneName\":\"pzvuqdflvo\",\"dedicatedPlacementGroupId\":\"yp\",\"dedicatedPlacementGroupName\":\"ubcpzgpxti\",\"limit\":47968251,\"resourceType\":\"knidib\",\"skuId\":\"jxgpnrhgovfg\",\"skuName\":\"kqmhhaowjr\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        VMwareCloudSimpleManager manager = VMwareCloudSimpleManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<SkuAvailability> response
            = manager.skusAvailabilities().list("rxmunjdxvgln", "vxlx", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("glqivbgkcv", response.iterator().next().dedicatedAvailabilityZoneId());
        Assertions.assertEquals("pzvuqdflvo", response.iterator().next().dedicatedAvailabilityZoneName());
        Assertions.assertEquals("yp", response.iterator().next().dedicatedPlacementGroupId());
        Assertions.assertEquals("ubcpzgpxti", response.iterator().next().dedicatedPlacementGroupName());
        Assertions.assertEquals(47968251, response.iterator().next().limit());
        Assertions.assertEquals("knidib", response.iterator().next().resourceType());
        Assertions.assertEquals("jxgpnrhgovfg", response.iterator().next().skuId());
        Assertions.assertEquals("kqmhhaowjr", response.iterator().next().skuName());
    }
}
