/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.implementation;

import com.microsoft.azure.AzureEnvironment;
import com.microsoft.azure.AzureResponseBuilder;
import com.microsoft.azure.credentials.AzureTokenCredentials;
import com.microsoft.azure.management.apigeneration.Beta;
import com.microsoft.azure.management.apigeneration.Beta.SinceVersion;
import com.microsoft.azure.arm.resources.AzureConfigurable;
import com.microsoft.azure.serializer.AzureJacksonAdapter;
import com.microsoft.rest.RestClient;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.Operations;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.DedicatedCloudNodes;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.DedicatedCloudServices;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.SkusAvailabilitys;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.PrivateClouds;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.ResourcePools;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.VirtualMachineTemplates;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.VirtualNetworks;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.Usages;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.VirtualMachines;
import com.microsoft.azure.arm.resources.implementation.AzureConfigurableCoreImpl;
import com.microsoft.azure.arm.resources.implementation.ManagerCore;

/**
 * Entry point to Azure VMwareCloudSimple resource management.
 */
public final class VMwareCloudSimpleManager extends ManagerCore<VMwareCloudSimpleManager, VMwareCloudSimpleClientImpl> {
    private Operations operations;
    private DedicatedCloudNodes dedicatedCloudNodes;
    private DedicatedCloudServices dedicatedCloudServices;
    private SkusAvailabilitys skusAvailabilitys;
    private PrivateClouds privateClouds;
    private ResourcePools resourcePools;
    private VirtualMachineTemplates virtualMachineTemplates;
    private VirtualNetworks virtualNetworks;
    private Usages usages;
    private VirtualMachines virtualMachines;
    /**
    * Get a Configurable instance that can be used to create VMwareCloudSimpleManager with optional configuration.
    *
    * @return the instance allowing configurations
    */
    public static Configurable configure() {
        return new VMwareCloudSimpleManager.ConfigurableImpl();
    }
    /**
    * Creates an instance of VMwareCloudSimpleManager that exposes VMwareCloudSimple resource management API entry points.
    *
    * @param credentials the credentials to use
    * @param subscriptionId the subscription UUID
    * @return the VMwareCloudSimpleManager
    */
    public static VMwareCloudSimpleManager authenticate(AzureTokenCredentials credentials, String subscriptionId) {
        return new VMwareCloudSimpleManager(new RestClient.Builder()
            .withBaseUrl(credentials.environment(), AzureEnvironment.Endpoint.RESOURCE_MANAGER)
            .withCredentials(credentials)
            .withSerializerAdapter(new AzureJacksonAdapter())
            .withResponseBuilderFactory(new AzureResponseBuilder.Factory())
            .build(), subscriptionId);
    }
    /**
    * Creates an instance of VMwareCloudSimpleManager that exposes VMwareCloudSimple resource management API entry points.
    *
    * @param restClient the RestClient to be used for API calls.
    * @param subscriptionId the subscription UUID
    * @return the VMwareCloudSimpleManager
    */
    public static VMwareCloudSimpleManager authenticate(RestClient restClient, String subscriptionId) {
        return new VMwareCloudSimpleManager(restClient, subscriptionId);
    }
    /**
    * The interface allowing configurations to be set.
    */
    public interface Configurable extends AzureConfigurable<Configurable> {
        /**
        * Creates an instance of VMwareCloudSimpleManager that exposes VMwareCloudSimple management API entry points.
        *
        * @param credentials the credentials to use
        * @param subscriptionId the subscription UUID
        * @return the interface exposing VMwareCloudSimple management API entry points that work across subscriptions
        */
        VMwareCloudSimpleManager authenticate(AzureTokenCredentials credentials, String subscriptionId);
    }

    /**
     * @return Entry point to manage Operations.
     */
    public Operations operations() {
        if (this.operations == null) {
            this.operations = new OperationsImpl(this);
        }
        return this.operations;
    }

    /**
     * @return Entry point to manage DedicatedCloudNodes.
     */
    public DedicatedCloudNodes dedicatedCloudNodes() {
        if (this.dedicatedCloudNodes == null) {
            this.dedicatedCloudNodes = new DedicatedCloudNodesImpl(this);
        }
        return this.dedicatedCloudNodes;
    }

    /**
     * @return Entry point to manage DedicatedCloudServices.
     */
    public DedicatedCloudServices dedicatedCloudServices() {
        if (this.dedicatedCloudServices == null) {
            this.dedicatedCloudServices = new DedicatedCloudServicesImpl(this);
        }
        return this.dedicatedCloudServices;
    }

    /**
     * @return Entry point to manage SkusAvailabilitys.
     */
    public SkusAvailabilitys skusAvailabilitys() {
        if (this.skusAvailabilitys == null) {
            this.skusAvailabilitys = new SkusAvailabilitysImpl(this);
        }
        return this.skusAvailabilitys;
    }

    /**
     * @return Entry point to manage PrivateClouds.
     */
    public PrivateClouds privateClouds() {
        if (this.privateClouds == null) {
            this.privateClouds = new PrivateCloudsImpl(this);
        }
        return this.privateClouds;
    }

    /**
     * @return Entry point to manage ResourcePools.
     */
    public ResourcePools resourcePools() {
        if (this.resourcePools == null) {
            this.resourcePools = new ResourcePoolsImpl(this);
        }
        return this.resourcePools;
    }

    /**
     * @return Entry point to manage VirtualMachineTemplates.
     */
    public VirtualMachineTemplates virtualMachineTemplates() {
        if (this.virtualMachineTemplates == null) {
            this.virtualMachineTemplates = new VirtualMachineTemplatesImpl(this);
        }
        return this.virtualMachineTemplates;
    }

    /**
     * @return Entry point to manage VirtualNetworks.
     */
    public VirtualNetworks virtualNetworks() {
        if (this.virtualNetworks == null) {
            this.virtualNetworks = new VirtualNetworksImpl(this);
        }
        return this.virtualNetworks;
    }

    /**
     * @return Entry point to manage Usages.
     */
    public Usages usages() {
        if (this.usages == null) {
            this.usages = new UsagesImpl(this);
        }
        return this.usages;
    }

    /**
     * @return Entry point to manage VirtualMachines.
     */
    public VirtualMachines virtualMachines() {
        if (this.virtualMachines == null) {
            this.virtualMachines = new VirtualMachinesImpl(this);
        }
        return this.virtualMachines;
    }

    /**
    * The implementation for Configurable interface.
    */
    private static final class ConfigurableImpl extends AzureConfigurableCoreImpl<Configurable> implements Configurable {
        public VMwareCloudSimpleManager authenticate(AzureTokenCredentials credentials, String subscriptionId) {
           return VMwareCloudSimpleManager.authenticate(buildRestClient(credentials), subscriptionId);
        }
     }
    private VMwareCloudSimpleManager(RestClient restClient, String subscriptionId) {
        super(
            restClient,
            subscriptionId,
            new VMwareCloudSimpleClientImpl(restClient).withSubscriptionId(subscriptionId));
    }
}
