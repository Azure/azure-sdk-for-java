{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "The base resource name."
      }
    },
    "eventHubName": {
      "type": "string",
      "defaultValue": "javaeventhub"
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47",
      "metadata": {
        "description": "The tenant ID to which the application and resources belong."
      }
    },
    "testApplicationId": {
      "type": "string",
      "metadata": {
        "description": "The application client ID used to run tests."
      }
    },
    "testApplicationSecret": {
      "type": "string",
      "metadata": {
        "description": "The application client secret used to run tests."
      }
    },
    "testApplicationOid": {
      "type": "string",
      "defaultValue": "b3653439-8136-4cd5-aac3-2a9460871ca6",
      "metadata": {
        "description": "The client OID to grant access to test resources."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of the resource. By default, this is the same as the resource group."
      }
    },
    "partitionsCount": {
      "type": "int",
      "defaultValue": 5,
      "metadata": {
        "description": "Number of partitions in the event hub"
      }
    },
    "retentionTimeInDays": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of days a message will be retained for in the event hub"
      }
    }
  },
  "variables": {
    "apiVersion": "2022-10-01-preview",
    "baseNameAvro": "[concat(parameters('baseName'), '-avro')]",
    "baseNameCustom": "[concat(parameters('baseName'), '-custom')]",
    "baseNameJson": "[concat(parameters('baseName'), '-json')]",

    "schemaRegistryEndpointAvro": "[format('https://{0}.servicebus.windows.net', variables('baseNameAvro'))]",
    "schemaRegistryEndpointCustom": "[format('https://{0}.servicebus.windows.net', variables('baseNameCustom'))]",
    "schemaRegistryEndpointJson": "[format('https://{0}.servicebus.windows.net', variables('baseNameJson'))]",

    "schemaRegistryGroup": "azsdk_java_group",
    "authorizationNameAvro": "[concat(variables('baseNameAvro'), '/RootManageSharedAccessKey')]"
  },
  "resources": [
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('baseNameAvro')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {
        "zoneRedundant": false,
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0,
        "kafkaEnabled": true
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('baseNameCustom')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {
        "zoneRedundant": false,
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0,
        "kafkaEnabled": true
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('baseNameJson')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {
        "zoneRedundant": false,
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0,
        "kafkaEnabled": true
      }
    },

    {
      "type": "Microsoft.EventHub/namespaces/schemagroups",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[format('{0}/{1}', variables('baseNameAvro'), variables('schemaRegistryGroup'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('baseNameAvro'))]"
      ],
      "properties": {
        "schemaType": "avro"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/schemagroups",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[format('{0}/{1}', variables('baseNameCustom'), variables('schemaRegistryGroup'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('baseNameCustom'))]"
      ],
      "properties": {
        "schemaType": "custom"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/schemagroups",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[format('{0}/{1}', variables('baseNameJson'), variables('schemaRegistryGroup'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('baseNameJson'))]"
      ],
      "properties": {
        "schemaType": "json"
      }
    },

    {
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[concat(variables('baseNameAvro'), '/', parameters('eventHubName'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('baseNameAvro'))]"
      ],
      "properties": {
        "messageRetentionInDays": 1,
        "partitionCount": 5,
        "status": "Active"
      }
    },

    {
      "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('authorizationNameAvro')]",
      "location": "[parameters('location')]",
      "dependsOn": ["[resourceId('Microsoft.EventHub/namespaces', variables('baseNameAvro'))]"],
      "properties": {
        "rights": ["Listen", "Manage", "Send"]
      }
    }
  ],
  "outputs": {
    "AZURE_TENANT_ID": {
      "type": "string",
      "value": "[parameters('tenantId')]"
    },
    "AZURE_CLIENT_ID": {
      "type": "string",
      "value": "[parameters('testApplicationId')]"
    },
    "AZURE_CLIENT_SECRET": {
      "type": "string",
      "value": "[parameters('testApplicationSecret')]"
    },

    "SCHEMA_REGISTRY_AVRO_EVENT_HUB_NAME": {
      "type": "string",
      "value": "[parameters('eventHubName')]"
    },

    "SCHEMA_REGISTRY_AVRO_EVENT_HUB_CONNECTION_STRING": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.EventHub/namespaces/authorizationRules', variables('baseNameAvro'), 'RootManageSharedAccessKey'), variables('apiVersion')).primaryConnectionString]"
    },

    "SCHEMA_REGISTRY_AVRO_FULLY_QUALIFIED_NAMESPACE": {
      "type": "string",
      "value": "[variables('schemaRegistryEndpointAvro')]"
    },
    "SCHEMA_REGISTRY_JSON_FULLY_QUALIFIED_NAMESPACE": {
      "type": "string",
      "value": "[variables('schemaRegistryEndpointJson')]"
    },
    "SCHEMA_REGISTRY_CUSTOM_FULLY_QUALIFIED_NAMESPACE": {
      "type": "string",
      "value": "[variables('schemaRegistryEndpointCustom')]"
    },

    "SCHEMA_REGISTRY_GROUP": {
      "type": "string",
      "value": "[variables('schemaRegistryGroup')]"
    }
  }
}
