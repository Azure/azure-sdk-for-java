swagger: '2.0'
info:
  title: Azure Schema Registry
  version: 0.1.9
paths:
  /$schemagroups/getSchemaById/{schema-id}:
    get:
      summary: Get schema by ID
      description: Get schema by ID.  Azure Schema Registry guarantees that ID is unique within a namespace.
      operationId: getSchemaById
      produces:
        - application/json
      parameters:
        - name: schema-id
          in: path
          description: schema ID referencing specific schema in registry namespace
          required: true
          type: string
      responses:
        '200':
          description: OK
          headers:
            Location:
              type: string
            X-Serialization:
              type: string
              description: schema type
            X-Schema-Id:
              type: string
              description: unique schema identifier
            X-Schema-Id-Location:
              type: string
              description: location of schema resource
            X-Schema-Version:
              type: integer
              description: version of returned schema
          schema:
            $ref: '#/definitions/SchemaBytePayload'
  '/$schemagroups/{group-name}/schemas/{schema-name}':
    post:
      summary: Get schema ID by schema content
      description: Get ID for schema with matching byte content and serialization format.
      operationId: getIdBySchemaContent
      produces:
        - application/json
      parameters:
        - name: group-name
          in: path
          description: schema group
          required: true
          type: string
        - name: schema-name
          in: path
          description: schema name
          required: true
          type: string
        - name: schema-content
          in: body
          description: schema content
          required: true
          schema:
            $ref: '#/definitions/SchemaBytePayload'
        - name: serialization-type
          in: header
          description: serialization type for schema being registered
          required: true
          type: string
      responses:
        '200':
          description: OK
          headers:
            Location:
              type: string
            X-Serialization:
              type: string
              description: schema type
            X-Schema-Id:
              type: string
              description: unique schema identifier
            X-Schema-Id-Location:
              type: string
              description: location of schema resource
            X-Schema-Version:
              type: integer
              description: version of returned schema
          schema:
            $ref: '#/definitions/SchemaId'
        '404':
          description: Matching schema not found
    put:
      summary: Create new schema
      description: |
        Create new schema. If schema of specified name does not exist in specified group, schema is created at version 1. If schema of specified name exists already in specified group, schema is created at latest version + 1.
      operationId: createSchema
      produces:
        - application/json
      parameters:
        - name: group-name
          in: path
          description: schema group
          required: true
          type: string
        - name: schema-name
          in: path
          description: schema name
          required: true
          type: string
        - name: schema-content
          in: body
          description: schema content
          required: true
          schema:
            $ref: '#/definitions/SchemaBytePayload'
        - name: serialization-type
          in: header
          description: serialization type for schema being registered
          required: true
          type: string
      responses:
        '200':
          description: OK
          headers:
            Location:
              type: string
            X-Serialization:
              type: string
              description: schema type
            X-Schema-Id:
              type: string
              description: unique schema identifier
            X-Schema-Id-Location:
              type: string
              description: location of schema resource
            X-Schema-Version:
              type: integer
              description: version of returned schema
          schema:
            $ref: '#/definitions/SchemaId'
        '400':
          description: Invalid request
definitions:
  SchemaId:
    type: object
    properties:
      id:
        type: string
  SchemaBytePayload:
    type: string
