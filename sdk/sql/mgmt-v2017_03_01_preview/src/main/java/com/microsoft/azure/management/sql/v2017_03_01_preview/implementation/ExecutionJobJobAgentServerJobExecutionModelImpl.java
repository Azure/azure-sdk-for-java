/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.sql.v2017_03_01_preview.implementation;

import com.microsoft.azure.management.sql.v2017_03_01_preview.ExecutionJobJobAgentServerJobExecutionModel;
import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import rx.Observable;
import org.joda.time.DateTime;
import java.util.UUID;
import com.microsoft.azure.management.sql.v2017_03_01_preview.JobExecutionLifecycle;
import com.microsoft.azure.management.sql.v2017_03_01_preview.ProvisioningState;
import com.microsoft.azure.management.sql.v2017_03_01_preview.JobExecutionTarget;

class ExecutionJobJobAgentServerJobExecutionModelImpl extends WrapperImpl<JobExecutionInner> implements ExecutionJobJobAgentServerJobExecutionModel {
    private final SqlManager manager;

    ExecutionJobJobAgentServerJobExecutionModelImpl(JobExecutionInner inner,  SqlManager manager) {
        super(inner);
        this.manager = manager;
    }

    @Override
    public SqlManager manager() {
        return this.manager;
    }



    @Override
    public DateTime createTime() {
        return this.inner().createTime();
    }

    @Override
    public Integer currentAttempts() {
        return this.inner().currentAttempts();
    }

    @Override
    public DateTime currentAttemptStartTime() {
        return this.inner().currentAttemptStartTime();
    }

    @Override
    public DateTime endTime() {
        return this.inner().endTime();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public UUID jobExecutionId() {
        return this.inner().jobExecutionId();
    }

    @Override
    public Integer jobVersion() {
        return this.inner().jobVersion();
    }

    @Override
    public String lastMessage() {
        return this.inner().lastMessage();
    }

    @Override
    public JobExecutionLifecycle lifecycle() {
        return this.inner().lifecycle();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public ProvisioningState provisioningState() {
        return this.inner().provisioningState();
    }

    @Override
    public DateTime startTime() {
        return this.inner().startTime();
    }

    @Override
    public Integer stepId() {
        return this.inner().stepId();
    }

    @Override
    public String stepName() {
        return this.inner().stepName();
    }

    @Override
    public JobExecutionTarget target() {
        return this.inner().target();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

}
