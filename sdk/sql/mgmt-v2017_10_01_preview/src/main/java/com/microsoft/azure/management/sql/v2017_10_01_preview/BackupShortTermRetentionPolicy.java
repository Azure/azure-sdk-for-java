/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.sql.v2017_10_01_preview;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.sql.v2017_10_01_preview.implementation.BackupShortTermRetentionPolicyInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.sql.v2017_10_01_preview.implementation.SqlManager;

/**
 * Type representing BackupShortTermRetentionPolicy.
 */
public interface BackupShortTermRetentionPolicy extends HasInner<BackupShortTermRetentionPolicyInner>, Indexable, Refreshable<BackupShortTermRetentionPolicy>, Updatable<BackupShortTermRetentionPolicy.Update>, HasManager<SqlManager> {
    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the retentionDays value.
     */
    Integer retentionDays();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the BackupShortTermRetentionPolicy definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithDatabasis, DefinitionStages.WithRetentionDays, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of BackupShortTermRetentionPolicy definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a BackupShortTermRetentionPolicy definition.
         */
        interface Blank extends WithDatabasis {
        }

        /**
         * The stage of the backupshorttermretentionpolicy definition allowing to specify Databasis.
         */
        interface WithDatabasis {
           /**
            * Specifies resourceGroupName, serverName, databaseName.
            * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal
            * @param serverName The name of the server
            * @param databaseName The name of the database
            * @return the next definition stage
            */
            WithRetentionDays withExistingDatabasis(String resourceGroupName, String serverName, String databaseName);
        }

        /**
         * The stage of the backupshorttermretentionpolicy definition allowing to specify RetentionDays.
         */
        interface WithRetentionDays {
           /**
            * Specifies retentionDays.
            * @param retentionDays The backup retention period in days. This is how many days Point-in-Time Restore will be supported
            * @return the next definition stage
            */
            WithCreate withRetentionDays(Integer retentionDays);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<BackupShortTermRetentionPolicy> {
        }
    }
    /**
     * The template for a BackupShortTermRetentionPolicy update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<BackupShortTermRetentionPolicy>, UpdateStages.WithRetentionDays {
    }

    /**
     * Grouping of BackupShortTermRetentionPolicy update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the backupshorttermretentionpolicy update allowing to specify RetentionDays.
         */
        interface WithRetentionDays {
            /**
             * Specifies retentionDays.
             * @param retentionDays The backup retention period in days. This is how many days Point-in-Time Restore will be supported
             * @return the next update stage
             */
            Update withRetentionDays(Integer retentionDays);
        }

    }
}
