// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.sql.fluent.MaintenanceWindowsOperationsClient;
import com.azure.resourcemanager.sql.fluent.models.MaintenanceWindowsInner;
import com.azure.resourcemanager.sql.models.MaintenanceWindows;
import com.azure.resourcemanager.sql.models.MaintenanceWindowsOperations;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class MaintenanceWindowsOperationsImpl implements MaintenanceWindowsOperations {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(MaintenanceWindowsOperationsImpl.class);

    private final MaintenanceWindowsOperationsClient innerClient;

    private final com.azure.resourcemanager.sql.SqlManager serviceManager;

    public MaintenanceWindowsOperationsImpl(
        MaintenanceWindowsOperationsClient innerClient, com.azure.resourcemanager.sql.SqlManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public MaintenanceWindows get(
        String resourceGroupName, String serverName, String databaseName, String maintenanceWindowName) {
        MaintenanceWindowsInner inner =
            this.serviceClient().get(resourceGroupName, serverName, databaseName, maintenanceWindowName);
        if (inner != null) {
            return new MaintenanceWindowsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<MaintenanceWindows> getWithResponse(
        String resourceGroupName,
        String serverName,
        String databaseName,
        String maintenanceWindowName,
        Context context) {
        Response<MaintenanceWindowsInner> inner =
            this
                .serviceClient()
                .getWithResponse(resourceGroupName, serverName, databaseName, maintenanceWindowName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new MaintenanceWindowsImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public void createOrUpdate(
        String resourceGroupName,
        String serverName,
        String databaseName,
        String maintenanceWindowName,
        MaintenanceWindowsInner parameters) {
        this
            .serviceClient()
            .createOrUpdate(resourceGroupName, serverName, databaseName, maintenanceWindowName, parameters);
    }

    public Response<Void> createOrUpdateWithResponse(
        String resourceGroupName,
        String serverName,
        String databaseName,
        String maintenanceWindowName,
        MaintenanceWindowsInner parameters,
        Context context) {
        return this
            .serviceClient()
            .createOrUpdateWithResponse(
                resourceGroupName, serverName, databaseName, maintenanceWindowName, parameters, context);
    }

    private MaintenanceWindowsOperationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.sql.SqlManager manager() {
        return this.serviceManager;
    }
}
