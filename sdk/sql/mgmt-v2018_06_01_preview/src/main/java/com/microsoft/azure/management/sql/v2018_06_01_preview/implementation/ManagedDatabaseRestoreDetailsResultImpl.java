/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.sql.v2018_06_01_preview.implementation;

import com.microsoft.azure.management.sql.v2018_06_01_preview.ManagedDatabaseRestoreDetailsResult;
import com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl;
import rx.Observable;
import org.joda.time.DateTime;
import java.util.List;

class ManagedDatabaseRestoreDetailsResultImpl extends IndexableRefreshableWrapperImpl<ManagedDatabaseRestoreDetailsResult, ManagedDatabaseRestoreDetailsResultInner> implements ManagedDatabaseRestoreDetailsResult {
    private final SqlManager manager;
    private String resourceGroupName;
    private String managedInstanceName;
    private String databaseName;

    ManagedDatabaseRestoreDetailsResultImpl(ManagedDatabaseRestoreDetailsResultInner inner,  SqlManager manager) {
        super(null, inner);
        this.manager = manager;
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.managedInstanceName = IdParsingUtils.getValueFromIdByName(inner.id(), "managedInstances");
        this.databaseName = IdParsingUtils.getValueFromIdByName(inner.id(), "databases");
    }

    @Override
    public SqlManager manager() {
        return this.manager;
    }

    @Override
    protected Observable<ManagedDatabaseRestoreDetailsResultInner> getInnerAsync() {
        ManagedDatabaseRestoreDetailsInner client = this.manager().inner().managedDatabaseRestoreDetails();
        return client.getAsync(this.resourceGroupName, this.managedInstanceName, this.databaseName);
    }



    @Override
    public String blockReason() {
        return this.inner().blockReason();
    }

    @Override
    public String currentRestoringFileName() {
        return this.inner().currentRestoringFileName();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String lastRestoredFileName() {
        return this.inner().lastRestoredFileName();
    }

    @Override
    public DateTime lastRestoredFileTime() {
        return this.inner().lastRestoredFileTime();
    }

    @Override
    public String lastUploadedFileName() {
        return this.inner().lastUploadedFileName();
    }

    @Override
    public DateTime lastUploadedFileTime() {
        return this.inner().lastUploadedFileTime();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public Long numberOfFilesDetected() {
        return this.inner().numberOfFilesDetected();
    }

    @Override
    public Double percentCompleted() {
        return this.inner().percentCompleted();
    }

    @Override
    public String status() {
        return this.inner().status();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public List<String> unrestorableFiles() {
        return this.inner().unrestorableFiles();
    }

}
