/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.sql.v2018_06_01_preview.implementation;

import com.microsoft.azure.management.sql.v2018_06_01_preview.ManagedInstanceLongTermRetentionPolicy;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;

class ManagedInstanceLongTermRetentionPolicyImpl extends CreatableUpdatableImpl<ManagedInstanceLongTermRetentionPolicy, ManagedInstanceLongTermRetentionPolicyInner, ManagedInstanceLongTermRetentionPolicyImpl> implements ManagedInstanceLongTermRetentionPolicy, ManagedInstanceLongTermRetentionPolicy.Definition, ManagedInstanceLongTermRetentionPolicy.Update {
    private final SqlManager manager;
    private String resourceGroupName;
    private String managedInstanceName;
    private String databaseName;

    ManagedInstanceLongTermRetentionPolicyImpl(String name, SqlManager manager) {
        super(name, new ManagedInstanceLongTermRetentionPolicyInner());
        this.manager = manager;
        // Set resource name
        this.databaseName = name;
        //
    }

    ManagedInstanceLongTermRetentionPolicyImpl(ManagedInstanceLongTermRetentionPolicyInner inner, SqlManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.databaseName = inner.name();
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.managedInstanceName = IdParsingUtils.getValueFromIdByName(inner.id(), "managedInstances");
        this.databaseName = IdParsingUtils.getValueFromIdByName(inner.id(), "databases");
        //
    }

    @Override
    public SqlManager manager() {
        return this.manager;
    }

    @Override
    public Observable<ManagedInstanceLongTermRetentionPolicy> createResourceAsync() {
        ManagedInstanceLongTermRetentionPoliciesInner client = this.manager().inner().managedInstanceLongTermRetentionPolicies();
        return client.createOrUpdateAsync(this.resourceGroupName, this.managedInstanceName, this.databaseName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<ManagedInstanceLongTermRetentionPolicy> updateResourceAsync() {
        ManagedInstanceLongTermRetentionPoliciesInner client = this.manager().inner().managedInstanceLongTermRetentionPolicies();
        return client.createOrUpdateAsync(this.resourceGroupName, this.managedInstanceName, this.databaseName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<ManagedInstanceLongTermRetentionPolicyInner> getInnerAsync() {
        ManagedInstanceLongTermRetentionPoliciesInner client = this.manager().inner().managedInstanceLongTermRetentionPolicies();
        return client.getAsync(this.resourceGroupName, this.managedInstanceName, this.databaseName);
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String monthlyRetention() {
        return this.inner().monthlyRetention();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public String weeklyRetention() {
        return this.inner().weeklyRetention();
    }

    @Override
    public Integer weekOfYear() {
        return this.inner().weekOfYear();
    }

    @Override
    public String yearlyRetention() {
        return this.inner().yearlyRetention();
    }

    @Override
    public ManagedInstanceLongTermRetentionPolicyImpl withExistingDatabasis(String resourceGroupName, String managedInstanceName, String databaseName) {
        this.resourceGroupName = resourceGroupName;
        this.managedInstanceName = managedInstanceName;
        this.databaseName = databaseName;
        return this;
    }

    @Override
    public ManagedInstanceLongTermRetentionPolicyImpl withMonthlyRetention(String monthlyRetention) {
        this.inner().withMonthlyRetention(monthlyRetention);
        return this;
    }

    @Override
    public ManagedInstanceLongTermRetentionPolicyImpl withWeeklyRetention(String weeklyRetention) {
        this.inner().withWeeklyRetention(weeklyRetention);
        return this;
    }

    @Override
    public ManagedInstanceLongTermRetentionPolicyImpl withWeekOfYear(Integer weekOfYear) {
        this.inner().withWeekOfYear(weekOfYear);
        return this;
    }

    @Override
    public ManagedInstanceLongTermRetentionPolicyImpl withYearlyRetention(String yearlyRetention) {
        this.inner().withYearlyRetention(yearlyRetention);
        return this;
    }

}
