// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.generated;

import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseCreateMode;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;

/** Samples for ManagedDatabases CreateOrUpdate. */
public final class ManagedDatabasesCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ManagedDatabaseCreateRecovery.json
     */
    /**
     * Sample code: Creates a new managed database from restoring a geo-replicated backup.
     *
     * @param manager Entry point to SqlManager.
     */
    public static void createsANewManagedDatabaseFromRestoringAGeoReplicatedBackup(
        com.azure.resourcemanager.sql.generated.SqlManager manager) {
        manager
            .managedDatabases()
            .define("testdb_recovered")
            .withRegion("southeastasia")
            .withExistingManagedInstance("Default-SQL-SouthEastAsia", "server1")
            .withCreateMode(ManagedDatabaseCreateMode.RECOVERY)
            .withRecoverableDatabaseId(
                "/subscriptions/11111111-2222-3333-4444-555555555555/resourceGroups/Default-SQL-WestEurope/providers/Microsoft.Sql/managedInstances/testsvr/recoverableDatabases/testdb")
            .create();
    }

    /*
     * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ManagedDatabaseCreateRestoreExternalBackup.json
     */
    /**
     * Sample code: Creates a new managed database by restoring from an external backup.
     *
     * @param manager Entry point to SqlManager.
     */
    public static void createsANewManagedDatabaseByRestoringFromAnExternalBackup(
        com.azure.resourcemanager.sql.generated.SqlManager manager) {
        manager
            .managedDatabases()
            .define("managedDatabase")
            .withRegion("southeastasia")
            .withExistingManagedInstance("Default-SQL-SouthEastAsia", "managedInstance")
            .withCollation("SQL_Latin1_General_CP1_CI_AS")
            .withCreateMode(ManagedDatabaseCreateMode.RESTORE_EXTERNAL_BACKUP)
            .withStorageContainerUri("https://myaccountname.blob.core.windows.net/backups")
            .withStorageContainerSasToken("sv=2015-12-11&sr=c&sp=rl&sig=1234")
            .withAutoCompleteRestore(true)
            .withLastBackupName("last_backup_name")
            .create();
    }

    /*
     * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ManagedDatabaseCreateMax.json
     */
    /**
     * Sample code: Creates a new managed database with maximal properties.
     *
     * @param manager Entry point to SqlManager.
     */
    public static void createsANewManagedDatabaseWithMaximalProperties(
        com.azure.resourcemanager.sql.generated.SqlManager manager) {
        manager
            .managedDatabases()
            .define("managedDatabase")
            .withRegion("southeastasia")
            .withExistingManagedInstance("Default-SQL-SouthEastAsia", "managedInstance")
            .withTags(mapOf("tagKey1", "TagValue1"))
            .create();
    }

    /*
     * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ManagedDatabaseCreateMin.json
     */
    /**
     * Sample code: Creates a new managed database with minimal properties.
     *
     * @param manager Entry point to SqlManager.
     */
    public static void createsANewManagedDatabaseWithMinimalProperties(
        com.azure.resourcemanager.sql.generated.SqlManager manager) {
        manager
            .managedDatabases()
            .define("managedDatabase")
            .withRegion("southeastasia")
            .withExistingManagedInstance("Default-SQL-SouthEastAsia", "managedInstance")
            .create();
    }

    /*
     * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ManagedDatabaseCreatePointInTimeRestore.json
     */
    /**
     * Sample code: Creates a new managed database using point in time restore.
     *
     * @param manager Entry point to SqlManager.
     */
    public static void createsANewManagedDatabaseUsingPointInTimeRestore(
        com.azure.resourcemanager.sql.generated.SqlManager manager) {
        manager
            .managedDatabases()
            .define("managedDatabase")
            .withRegion("southeastasia")
            .withExistingManagedInstance("Default-SQL-SouthEastAsia", "managedInstance")
            .withRestorePointInTime(OffsetDateTime.parse("2017-07-14T05:35:31.503Z"))
            .withCreateMode(ManagedDatabaseCreateMode.POINT_IN_TIME_RESTORE)
            .withSourceDatabaseId(
                "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default-SQL-SouthEastAsia/providers/Microsoft.Sql/managedInstances/testsvr/databases/testdb")
            .create();
    }

    /*
     * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ManagedDatabaseCreateRestoreLtrBackup.json
     */
    /**
     * Sample code: Creates a new managed database from restoring a long term retention backup.
     *
     * @param manager Entry point to SqlManager.
     */
    public static void createsANewManagedDatabaseFromRestoringALongTermRetentionBackup(
        com.azure.resourcemanager.sql.generated.SqlManager manager) {
        manager
            .managedDatabases()
            .define("managedDatabase")
            .withRegion("southeastasia")
            .withExistingManagedInstance("Default-SQL-SouthEastAsia", "managedInstance")
            .withCollation("SQL_Latin1_General_CP1_CI_AS")
            .withCreateMode(ManagedDatabaseCreateMode.RESTORE_EXTERNAL_BACKUP)
            .withStorageContainerUri("https://myaccountname.blob.core.windows.net/backups")
            .withStorageContainerSasToken("sv=2015-12-11&sr=c&sp=rl&sig=1234")
            .create();
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
