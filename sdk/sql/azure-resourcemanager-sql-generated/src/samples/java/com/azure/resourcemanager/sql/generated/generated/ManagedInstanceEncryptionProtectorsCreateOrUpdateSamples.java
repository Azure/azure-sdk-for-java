// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.generated;

import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.models.EncryptionProtectorName;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceEncryptionProtector;

/** Samples for ManagedInstanceEncryptionProtectors CreateOrUpdate. */
public final class ManagedInstanceEncryptionProtectorsCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ManagedInstanceEncryptionProtectorCreateOrUpdateKeyVault.json
     */
    /**
     * Sample code: Update the encryption protector to key vault.
     *
     * @param manager Entry point to SqlManager.
     */
    public static void updateTheEncryptionProtectorToKeyVault(
        com.azure.resourcemanager.sql.generated.SqlManager manager) {
        ManagedInstanceEncryptionProtector resource =
            manager
                .managedInstanceEncryptionProtectors()
                .getWithResponse("sqlcrudtest-7398", "sqlcrudtest-4645", EncryptionProtectorName.CURRENT, Context.NONE)
                .getValue();
        resource
            .update()
            .withServerKeyName("someVault_someKey_01234567890123456789012345678901")
            .withAutoRotationEnabled(false)
            .apply();
    }

    /*
     * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ManagedInstanceEncryptionProtectorCreateOrUpdateServiceManaged.json
     */
    /**
     * Sample code: Update the encryption protector to service managed.
     *
     * @param manager Entry point to SqlManager.
     */
    public static void updateTheEncryptionProtectorToServiceManaged(
        com.azure.resourcemanager.sql.generated.SqlManager manager) {
        ManagedInstanceEncryptionProtector resource =
            manager
                .managedInstanceEncryptionProtectors()
                .getWithResponse("sqlcrudtest-7398", "sqlcrudtest-4645", EncryptionProtectorName.CURRENT, Context.NONE)
                .getValue();
        resource.update().withServerKeyName("ServiceManaged").apply();
    }
}
