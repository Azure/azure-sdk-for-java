// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.SqlManager;
import com.azure.resourcemanager.sql.generated.fluent.models.ServerCommunicationLinkInner;
import com.azure.resourcemanager.sql.generated.models.ServerCommunicationLink;

public final class ServerCommunicationLinkImpl
    implements ServerCommunicationLink, ServerCommunicationLink.Definition, ServerCommunicationLink.Update {
    private ServerCommunicationLinkInner innerObject;

    private final SqlManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public String kind() {
        return this.innerModel().kind();
    }

    public String state() {
        return this.innerModel().state();
    }

    public String partnerServer() {
        return this.innerModel().partnerServer();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public ServerCommunicationLinkInner innerModel() {
        return this.innerObject;
    }

    private SqlManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String serverName;

    private String communicationLinkName;

    public ServerCommunicationLinkImpl withExistingServer(String resourceGroupName, String serverName) {
        this.resourceGroupName = resourceGroupName;
        this.serverName = serverName;
        return this;
    }

    public ServerCommunicationLink create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getServerCommunicationLinks()
                .createOrUpdate(resourceGroupName, serverName, communicationLinkName, this.innerModel(), Context.NONE);
        return this;
    }

    public ServerCommunicationLink create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getServerCommunicationLinks()
                .createOrUpdate(resourceGroupName, serverName, communicationLinkName, this.innerModel(), context);
        return this;
    }

    public ServerCommunicationLinkImpl(String name, SqlManager serviceManager) {
        this.innerObject = new ServerCommunicationLinkInner();
        this.serviceManager = serviceManager;
        this.communicationLinkName = name;
    }

    public ServerCommunicationLinkImpl update() {
        return this;
    }

    public ServerCommunicationLink apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getServerCommunicationLinks()
                .createOrUpdate(resourceGroupName, serverName, communicationLinkName, this.innerModel(), Context.NONE);
        return this;
    }

    public ServerCommunicationLink apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getServerCommunicationLinks()
                .createOrUpdate(resourceGroupName, serverName, communicationLinkName, this.innerModel(), context);
        return this;
    }

    public ServerCommunicationLinkImpl(ServerCommunicationLinkInner innerObject, SqlManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.serverName = Utils.getValueFromIdByName(innerObject.id(), "servers");
        this.communicationLinkName = Utils.getValueFromIdByName(innerObject.id(), "communicationLinks");
    }

    public ServerCommunicationLink refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getServerCommunicationLinks()
                .getWithResponse(resourceGroupName, serverName, communicationLinkName, Context.NONE)
                .getValue();
        return this;
    }

    public ServerCommunicationLink refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getServerCommunicationLinks()
                .getWithResponse(resourceGroupName, serverName, communicationLinkName, context)
                .getValue();
        return this;
    }

    public ServerCommunicationLinkImpl withPartnerServer(String partnerServer) {
        this.innerModel().withPartnerServer(partnerServer);
        return this;
    }
}
