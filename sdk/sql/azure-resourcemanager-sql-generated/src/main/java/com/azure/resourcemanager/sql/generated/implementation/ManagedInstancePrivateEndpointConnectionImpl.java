// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.fluent.models.ManagedInstancePrivateEndpointConnectionInner;
import com.azure.resourcemanager.sql.generated.models.ManagedInstancePrivateEndpointConnection;
import com.azure.resourcemanager.sql.generated.models.ManagedInstancePrivateEndpointProperty;
import com.azure.resourcemanager.sql.generated.models.ManagedInstancePrivateLinkServiceConnectionStateProperty;

public final class ManagedInstancePrivateEndpointConnectionImpl
    implements ManagedInstancePrivateEndpointConnection,
        ManagedInstancePrivateEndpointConnection.Definition,
        ManagedInstancePrivateEndpointConnection.Update {
    private ManagedInstancePrivateEndpointConnectionInner innerObject;

    private final com.azure.resourcemanager.sql.generated.SqlManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public ManagedInstancePrivateEndpointProperty privateEndpoint() {
        return this.innerModel().privateEndpoint();
    }

    public ManagedInstancePrivateLinkServiceConnectionStateProperty privateLinkServiceConnectionState() {
        return this.innerModel().privateLinkServiceConnectionState();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public ManagedInstancePrivateEndpointConnectionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.sql.generated.SqlManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String managedInstanceName;

    private String privateEndpointConnectionName;

    public ManagedInstancePrivateEndpointConnectionImpl withExistingManagedInstance(
        String resourceGroupName, String managedInstanceName) {
        this.resourceGroupName = resourceGroupName;
        this.managedInstanceName = managedInstanceName;
        return this;
    }

    public ManagedInstancePrivateEndpointConnection create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedInstancePrivateEndpointConnections()
                .createOrUpdate(
                    resourceGroupName,
                    managedInstanceName,
                    privateEndpointConnectionName,
                    this.innerModel(),
                    Context.NONE);
        return this;
    }

    public ManagedInstancePrivateEndpointConnection create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedInstancePrivateEndpointConnections()
                .createOrUpdate(
                    resourceGroupName, managedInstanceName, privateEndpointConnectionName, this.innerModel(), context);
        return this;
    }

    ManagedInstancePrivateEndpointConnectionImpl(
        String name, com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerObject = new ManagedInstancePrivateEndpointConnectionInner();
        this.serviceManager = serviceManager;
        this.privateEndpointConnectionName = name;
    }

    public ManagedInstancePrivateEndpointConnectionImpl update() {
        return this;
    }

    public ManagedInstancePrivateEndpointConnection apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedInstancePrivateEndpointConnections()
                .createOrUpdate(
                    resourceGroupName,
                    managedInstanceName,
                    privateEndpointConnectionName,
                    this.innerModel(),
                    Context.NONE);
        return this;
    }

    public ManagedInstancePrivateEndpointConnection apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedInstancePrivateEndpointConnections()
                .createOrUpdate(
                    resourceGroupName, managedInstanceName, privateEndpointConnectionName, this.innerModel(), context);
        return this;
    }

    ManagedInstancePrivateEndpointConnectionImpl(
        ManagedInstancePrivateEndpointConnectionInner innerObject,
        com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.managedInstanceName = Utils.getValueFromIdByName(innerObject.id(), "managedInstances");
        this.privateEndpointConnectionName = Utils.getValueFromIdByName(innerObject.id(), "privateEndpointConnections");
    }

    public ManagedInstancePrivateEndpointConnection refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedInstancePrivateEndpointConnections()
                .getWithResponse(resourceGroupName, managedInstanceName, privateEndpointConnectionName, Context.NONE)
                .getValue();
        return this;
    }

    public ManagedInstancePrivateEndpointConnection refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedInstancePrivateEndpointConnections()
                .getWithResponse(resourceGroupName, managedInstanceName, privateEndpointConnectionName, context)
                .getValue();
        return this;
    }

    public ManagedInstancePrivateEndpointConnectionImpl withPrivateEndpoint(
        ManagedInstancePrivateEndpointProperty privateEndpoint) {
        this.innerModel().withPrivateEndpoint(privateEndpoint);
        return this;
    }

    public ManagedInstancePrivateEndpointConnectionImpl withPrivateLinkServiceConnectionState(
        ManagedInstancePrivateLinkServiceConnectionStateProperty privateLinkServiceConnectionState) {
        this.innerModel().withPrivateLinkServiceConnectionState(privateLinkServiceConnectionState);
        return this;
    }
}
