// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.sql.generated.SqlManager;
import com.azure.resourcemanager.sql.generated.fluent.RecoverableManagedDatabasesClient;
import com.azure.resourcemanager.sql.generated.fluent.models.RecoverableManagedDatabaseInner;
import com.azure.resourcemanager.sql.generated.models.RecoverableManagedDatabase;
import com.azure.resourcemanager.sql.generated.models.RecoverableManagedDatabases;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class RecoverableManagedDatabasesImpl implements RecoverableManagedDatabases {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(RecoverableManagedDatabasesImpl.class);

    private final RecoverableManagedDatabasesClient innerClient;

    private final SqlManager serviceManager;

    public RecoverableManagedDatabasesImpl(RecoverableManagedDatabasesClient innerClient, SqlManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<RecoverableManagedDatabase> listByInstance(
        String resourceGroupName, String managedInstanceName) {
        PagedIterable<RecoverableManagedDatabaseInner> inner =
            this.serviceClient().listByInstance(resourceGroupName, managedInstanceName);
        return inner.mapPage(inner1 -> new RecoverableManagedDatabaseImpl(inner1, this.manager()));
    }

    public PagedIterable<RecoverableManagedDatabase> listByInstance(
        String resourceGroupName, String managedInstanceName, Context context) {
        PagedIterable<RecoverableManagedDatabaseInner> inner =
            this.serviceClient().listByInstance(resourceGroupName, managedInstanceName, context);
        return inner.mapPage(inner1 -> new RecoverableManagedDatabaseImpl(inner1, this.manager()));
    }

    public RecoverableManagedDatabase get(
        String resourceGroupName, String managedInstanceName, String recoverableDatabaseName) {
        RecoverableManagedDatabaseInner inner =
            this.serviceClient().get(resourceGroupName, managedInstanceName, recoverableDatabaseName);
        if (inner != null) {
            return new RecoverableManagedDatabaseImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<RecoverableManagedDatabase> getWithResponse(
        String resourceGroupName, String managedInstanceName, String recoverableDatabaseName, Context context) {
        Response<RecoverableManagedDatabaseInner> inner =
            this
                .serviceClient()
                .getWithResponse(resourceGroupName, managedInstanceName, recoverableDatabaseName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new RecoverableManagedDatabaseImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private RecoverableManagedDatabasesClient serviceClient() {
        return this.innerClient;
    }

    private SqlManager manager() {
        return this.serviceManager;
    }
}
