// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Contains the information necessary to perform long term retention backup update operation. */
@JsonFlatten
@Fluent
public class UpdateLongTermRetentionBackupParameters {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(UpdateLongTermRetentionBackupParameters.class);

    /*
     * The storage redundancy type of the copied backup
     */
    @JsonProperty(value = "properties.requestedBackupStorageRedundancy")
    private RequestedBackupStorageRedundancy requestedBackupStorageRedundancy;

    /**
     * Get the requestedBackupStorageRedundancy property: The storage redundancy type of the copied backup.
     *
     * @return the requestedBackupStorageRedundancy value.
     */
    public RequestedBackupStorageRedundancy requestedBackupStorageRedundancy() {
        return this.requestedBackupStorageRedundancy;
    }

    /**
     * Set the requestedBackupStorageRedundancy property: The storage redundancy type of the copied backup.
     *
     * @param requestedBackupStorageRedundancy the requestedBackupStorageRedundancy value to set.
     * @return the UpdateLongTermRetentionBackupParameters object itself.
     */
    public UpdateLongTermRetentionBackupParameters withRequestedBackupStorageRedundancy(
        RequestedBackupStorageRedundancy requestedBackupStorageRedundancy) {
        this.requestedBackupStorageRedundancy = requestedBackupStorageRedundancy;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
