// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of ServerTrustCertificates. */
public interface ServerTrustCertificates {
    /**
     * Gets a list of server trust certificates that were uploaded from box to the given Sql Managed Instance.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of server trust certificates that were uploaded from box to the given Sql Managed Instance as
     *     paginated response with {@link PagedIterable}.
     */
    PagedIterable<ServerTrustCertificate> listByInstance(String resourceGroupName, String managedInstanceName);

    /**
     * Gets a list of server trust certificates that were uploaded from box to the given Sql Managed Instance.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of server trust certificates that were uploaded from box to the given Sql Managed Instance as
     *     paginated response with {@link PagedIterable}.
     */
    PagedIterable<ServerTrustCertificate> listByInstance(
        String resourceGroupName, String managedInstanceName, Context context);

    /**
     * Gets a server trust certificate that was uploaded from box to Sql Managed Instance.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param certificateName Name of of the certificate to get.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a server trust certificate that was uploaded from box to Sql Managed Instance.
     */
    ServerTrustCertificate get(String resourceGroupName, String managedInstanceName, String certificateName);

    /**
     * Gets a server trust certificate that was uploaded from box to Sql Managed Instance.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param certificateName Name of of the certificate to get.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a server trust certificate that was uploaded from box to Sql Managed Instance along with {@link
     *     Response}.
     */
    Response<ServerTrustCertificate> getWithResponse(
        String resourceGroupName, String managedInstanceName, String certificateName, Context context);

    /**
     * Deletes a server trust certificate that was uploaded from box to Sql Managed Instance.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param certificateName Name of of the certificate to delete.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String managedInstanceName, String certificateName);

    /**
     * Deletes a server trust certificate that was uploaded from box to Sql Managed Instance.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param certificateName Name of of the certificate to delete.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String managedInstanceName, String certificateName, Context context);

    /**
     * Gets a server trust certificate that was uploaded from box to Sql Managed Instance.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a server trust certificate that was uploaded from box to Sql Managed Instance along with {@link
     *     Response}.
     */
    ServerTrustCertificate getById(String id);

    /**
     * Gets a server trust certificate that was uploaded from box to Sql Managed Instance.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a server trust certificate that was uploaded from box to Sql Managed Instance along with {@link
     *     Response}.
     */
    Response<ServerTrustCertificate> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a server trust certificate that was uploaded from box to Sql Managed Instance.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes a server trust certificate that was uploaded from box to Sql Managed Instance.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new ServerTrustCertificate resource.
     *
     * @param name resource name.
     * @return the first stage of the new ServerTrustCertificate definition.
     */
    ServerTrustCertificate.DefinitionStages.Blank define(String name);
}
