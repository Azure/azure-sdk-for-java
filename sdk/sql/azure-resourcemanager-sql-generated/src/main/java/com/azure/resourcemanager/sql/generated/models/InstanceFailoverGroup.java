// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.fluent.models.InstanceFailoverGroupInner;
import java.util.List;

/** An immutable client-side representation of InstanceFailoverGroup. */
public interface InstanceFailoverGroup {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the readWriteEndpoint property: Read-write endpoint of the failover group instance.
     *
     * @return the readWriteEndpoint value.
     */
    InstanceFailoverGroupReadWriteEndpoint readWriteEndpoint();

    /**
     * Gets the readOnlyEndpoint property: Read-only endpoint of the failover group instance.
     *
     * @return the readOnlyEndpoint value.
     */
    InstanceFailoverGroupReadOnlyEndpoint readOnlyEndpoint();

    /**
     * Gets the replicationRole property: Local replication role of the failover group instance.
     *
     * @return the replicationRole value.
     */
    InstanceFailoverGroupReplicationRole replicationRole();

    /**
     * Gets the replicationState property: Replication state of the failover group instance.
     *
     * @return the replicationState value.
     */
    String replicationState();

    /**
     * Gets the partnerRegions property: Partner region information for the failover group.
     *
     * @return the partnerRegions value.
     */
    List<PartnerRegionInfo> partnerRegions();

    /**
     * Gets the managedInstancePairs property: List of managed instance pairs in the failover group.
     *
     * @return the managedInstancePairs value.
     */
    List<ManagedInstancePairInfo> managedInstancePairs();

    /**
     * Gets the inner com.azure.resourcemanager.sql.generated.fluent.models.InstanceFailoverGroupInner object.
     *
     * @return the inner object.
     */
    InstanceFailoverGroupInner innerModel();

    /** The entirety of the InstanceFailoverGroup definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The InstanceFailoverGroup definition stages. */
    interface DefinitionStages {
        /** The first stage of the InstanceFailoverGroup definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the InstanceFailoverGroup definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, locationName.
             *
             * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this
             *     value from the Azure Resource Manager API or the portal.
             * @param locationName The name of the region where the resource is located.
             * @return the next definition stage.
             */
            WithCreate withExistingLocation(String resourceGroupName, String locationName);
        }
        /**
         * The stage of the InstanceFailoverGroup definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithReadWriteEndpoint,
                DefinitionStages.WithReadOnlyEndpoint,
                DefinitionStages.WithPartnerRegions,
                DefinitionStages.WithManagedInstancePairs {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            InstanceFailoverGroup create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            InstanceFailoverGroup create(Context context);
        }
        /** The stage of the InstanceFailoverGroup definition allowing to specify readWriteEndpoint. */
        interface WithReadWriteEndpoint {
            /**
             * Specifies the readWriteEndpoint property: Read-write endpoint of the failover group instance..
             *
             * @param readWriteEndpoint Read-write endpoint of the failover group instance.
             * @return the next definition stage.
             */
            WithCreate withReadWriteEndpoint(InstanceFailoverGroupReadWriteEndpoint readWriteEndpoint);
        }
        /** The stage of the InstanceFailoverGroup definition allowing to specify readOnlyEndpoint. */
        interface WithReadOnlyEndpoint {
            /**
             * Specifies the readOnlyEndpoint property: Read-only endpoint of the failover group instance..
             *
             * @param readOnlyEndpoint Read-only endpoint of the failover group instance.
             * @return the next definition stage.
             */
            WithCreate withReadOnlyEndpoint(InstanceFailoverGroupReadOnlyEndpoint readOnlyEndpoint);
        }
        /** The stage of the InstanceFailoverGroup definition allowing to specify partnerRegions. */
        interface WithPartnerRegions {
            /**
             * Specifies the partnerRegions property: Partner region information for the failover group..
             *
             * @param partnerRegions Partner region information for the failover group.
             * @return the next definition stage.
             */
            WithCreate withPartnerRegions(List<PartnerRegionInfo> partnerRegions);
        }
        /** The stage of the InstanceFailoverGroup definition allowing to specify managedInstancePairs. */
        interface WithManagedInstancePairs {
            /**
             * Specifies the managedInstancePairs property: List of managed instance pairs in the failover group..
             *
             * @param managedInstancePairs List of managed instance pairs in the failover group.
             * @return the next definition stage.
             */
            WithCreate withManagedInstancePairs(List<ManagedInstancePairInfo> managedInstancePairs);
        }
    }
    /**
     * Begins update for the InstanceFailoverGroup resource.
     *
     * @return the stage of resource update.
     */
    InstanceFailoverGroup.Update update();

    /** The template for InstanceFailoverGroup update. */
    interface Update
        extends UpdateStages.WithReadWriteEndpoint,
            UpdateStages.WithReadOnlyEndpoint,
            UpdateStages.WithPartnerRegions,
            UpdateStages.WithManagedInstancePairs {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        InstanceFailoverGroup apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        InstanceFailoverGroup apply(Context context);
    }
    /** The InstanceFailoverGroup update stages. */
    interface UpdateStages {
        /** The stage of the InstanceFailoverGroup update allowing to specify readWriteEndpoint. */
        interface WithReadWriteEndpoint {
            /**
             * Specifies the readWriteEndpoint property: Read-write endpoint of the failover group instance..
             *
             * @param readWriteEndpoint Read-write endpoint of the failover group instance.
             * @return the next definition stage.
             */
            Update withReadWriteEndpoint(InstanceFailoverGroupReadWriteEndpoint readWriteEndpoint);
        }
        /** The stage of the InstanceFailoverGroup update allowing to specify readOnlyEndpoint. */
        interface WithReadOnlyEndpoint {
            /**
             * Specifies the readOnlyEndpoint property: Read-only endpoint of the failover group instance..
             *
             * @param readOnlyEndpoint Read-only endpoint of the failover group instance.
             * @return the next definition stage.
             */
            Update withReadOnlyEndpoint(InstanceFailoverGroupReadOnlyEndpoint readOnlyEndpoint);
        }
        /** The stage of the InstanceFailoverGroup update allowing to specify partnerRegions. */
        interface WithPartnerRegions {
            /**
             * Specifies the partnerRegions property: Partner region information for the failover group..
             *
             * @param partnerRegions Partner region information for the failover group.
             * @return the next definition stage.
             */
            Update withPartnerRegions(List<PartnerRegionInfo> partnerRegions);
        }
        /** The stage of the InstanceFailoverGroup update allowing to specify managedInstancePairs. */
        interface WithManagedInstancePairs {
            /**
             * Specifies the managedInstancePairs property: List of managed instance pairs in the failover group..
             *
             * @param managedInstancePairs List of managed instance pairs in the failover group.
             * @return the next definition stage.
             */
            Update withManagedInstancePairs(List<ManagedInstancePairInfo> managedInstancePairs);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    InstanceFailoverGroup refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    InstanceFailoverGroup refresh(Context context);

    /**
     * Fails over from the current primary managed instance to this managed instance.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an instance failover group.
     */
    InstanceFailoverGroup failover();

    /**
     * Fails over from the current primary managed instance to this managed instance.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an instance failover group.
     */
    InstanceFailoverGroup failover(Context context);

    /**
     * Fails over from the current primary managed instance to this managed instance. This operation might result in
     * data loss.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an instance failover group.
     */
    InstanceFailoverGroup forceFailoverAllowDataLoss();

    /**
     * Fails over from the current primary managed instance to this managed instance. This operation might result in
     * data loss.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an instance failover group.
     */
    InstanceFailoverGroup forceFailoverAllowDataLoss(Context context);
}
