// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.sql.generated.fluent.OperationsHealthsClient;
import com.azure.resourcemanager.sql.generated.fluent.models.OperationsHealthInner;
import com.azure.resourcemanager.sql.generated.models.OperationsHealth;
import com.azure.resourcemanager.sql.generated.models.OperationsHealths;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class OperationsHealthsImpl implements OperationsHealths {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(OperationsHealthsImpl.class);

    private final OperationsHealthsClient innerClient;

    private final com.azure.resourcemanager.sql.generated.SqlManager serviceManager;

    public OperationsHealthsImpl(
        OperationsHealthsClient innerClient, com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<OperationsHealth> listByLocation(String locationName) {
        PagedIterable<OperationsHealthInner> inner = this.serviceClient().listByLocation(locationName);
        return Utils.mapPage(inner, inner1 -> new OperationsHealthImpl(inner1, this.manager()));
    }

    public PagedIterable<OperationsHealth> listByLocation(String locationName, Context context) {
        PagedIterable<OperationsHealthInner> inner = this.serviceClient().listByLocation(locationName, context);
        return Utils.mapPage(inner, inner1 -> new OperationsHealthImpl(inner1, this.manager()));
    }

    private OperationsHealthsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.sql.generated.SqlManager manager() {
        return this.serviceManager;
    }
}
