// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated;

import com.azure.core.credential.TokenCredential;
import com.azure.core.http.HttpClient;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.AddDatePolicy;
import com.azure.core.http.policy.HttpLogOptions;
import com.azure.core.http.policy.HttpLoggingPolicy;
import com.azure.core.http.policy.HttpPipelinePolicy;
import com.azure.core.http.policy.HttpPolicyProviders;
import com.azure.core.http.policy.RequestIdPolicy;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.management.http.policy.ArmChallengeAuthenticationPolicy;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.util.Configuration;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.sql.generated.fluent.SqlManagementClient;
import com.azure.resourcemanager.sql.generated.implementation.BackupShortTermRetentionPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.CapabilitiesImpl;
import com.azure.resourcemanager.sql.generated.implementation.DataMaskingPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.DataMaskingRulesImpl;
import com.azure.resourcemanager.sql.generated.implementation.DataWarehouseUserActivitiesOperationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseAdvisorsImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseAutomaticTuningsImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseBlobAuditingPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseColumnsImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseExtensionsOperationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseOperationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseRecommendedActionsImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseSchemasImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseSecurityAlertPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseTablesImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseUsagesImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseVulnerabilityAssessmentRuleBaselinesImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseVulnerabilityAssessmentScansImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseVulnerabilityAssessmentsImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabasesImpl;
import com.azure.resourcemanager.sql.generated.implementation.DeletedServersImpl;
import com.azure.resourcemanager.sql.generated.implementation.ElasticPoolActivitiesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ElasticPoolDatabaseActivitiesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ElasticPoolOperationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ElasticPoolsImpl;
import com.azure.resourcemanager.sql.generated.implementation.EncryptionProtectorsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ExtendedDatabaseBlobAuditingPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ExtendedServerBlobAuditingPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.FailoverGroupsImpl;
import com.azure.resourcemanager.sql.generated.implementation.FirewallRulesImpl;
import com.azure.resourcemanager.sql.generated.implementation.GeoBackupPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.InstanceFailoverGroupsImpl;
import com.azure.resourcemanager.sql.generated.implementation.InstancePoolsImpl;
import com.azure.resourcemanager.sql.generated.implementation.JobAgentsImpl;
import com.azure.resourcemanager.sql.generated.implementation.JobCredentialsImpl;
import com.azure.resourcemanager.sql.generated.implementation.JobExecutionsImpl;
import com.azure.resourcemanager.sql.generated.implementation.JobStepExecutionsImpl;
import com.azure.resourcemanager.sql.generated.implementation.JobStepsImpl;
import com.azure.resourcemanager.sql.generated.implementation.JobTargetExecutionsImpl;
import com.azure.resourcemanager.sql.generated.implementation.JobTargetGroupsImpl;
import com.azure.resourcemanager.sql.generated.implementation.JobVersionsImpl;
import com.azure.resourcemanager.sql.generated.implementation.JobsImpl;
import com.azure.resourcemanager.sql.generated.implementation.LedgerDigestUploadsOperationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.LongTermRetentionBackupsImpl;
import com.azure.resourcemanager.sql.generated.implementation.LongTermRetentionManagedInstanceBackupsImpl;
import com.azure.resourcemanager.sql.generated.implementation.LongTermRetentionPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.MaintenanceWindowOptionsOperationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.MaintenanceWindowsOperationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedBackupShortTermRetentionPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseColumnsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseQueriesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseRecommendedSensitivityLabelsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseRestoreDetailsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseSchemasImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseSecurityAlertPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseSecurityEventsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseSensitivityLabelsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseTablesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseTransparentDataEncryptionsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseVulnerabilityAssessmentRuleBaselinesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseVulnerabilityAssessmentScansImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseVulnerabilityAssessmentsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabasesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceAdministratorsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceAzureADOnlyAuthenticationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceEncryptionProtectorsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceKeysImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceLongTermRetentionPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceOperationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedInstancePrivateEndpointConnectionsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedInstancePrivateLinkResourcesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceTdeCertificatesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceVulnerabilityAssessmentsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedInstancesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedServerSecurityAlertPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.OperationsHealthsImpl;
import com.azure.resourcemanager.sql.generated.implementation.OperationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.OutboundFirewallRulesImpl;
import com.azure.resourcemanager.sql.generated.implementation.PrivateEndpointConnectionsImpl;
import com.azure.resourcemanager.sql.generated.implementation.PrivateLinkResourcesImpl;
import com.azure.resourcemanager.sql.generated.implementation.RecommendedSensitivityLabelsImpl;
import com.azure.resourcemanager.sql.generated.implementation.RecoverableDatabasesImpl;
import com.azure.resourcemanager.sql.generated.implementation.RecoverableManagedDatabasesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ReplicationLinksImpl;
import com.azure.resourcemanager.sql.generated.implementation.RestorableDroppedDatabasesImpl;
import com.azure.resourcemanager.sql.generated.implementation.RestorableDroppedManagedDatabasesImpl;
import com.azure.resourcemanager.sql.generated.implementation.RestorePointsImpl;
import com.azure.resourcemanager.sql.generated.implementation.SensitivityLabelsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerAdvisorsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerAutomaticTuningsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerAzureADAdministratorsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerAzureADOnlyAuthenticationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerBlobAuditingPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerCommunicationLinksImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerConnectionPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerDevOpsAuditSettingsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerDnsAliasesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerKeysImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerOperationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerSecurityAlertPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerTrustGroupsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerUsagesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerVulnerabilityAssessmentsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServersImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServiceObjectivesImpl;
import com.azure.resourcemanager.sql.generated.implementation.SqlAgentsImpl;
import com.azure.resourcemanager.sql.generated.implementation.SqlManagementClientBuilder;
import com.azure.resourcemanager.sql.generated.implementation.SubscriptionUsagesImpl;
import com.azure.resourcemanager.sql.generated.implementation.SyncAgentsImpl;
import com.azure.resourcemanager.sql.generated.implementation.SyncGroupsImpl;
import com.azure.resourcemanager.sql.generated.implementation.SyncMembersImpl;
import com.azure.resourcemanager.sql.generated.implementation.TdeCertificatesImpl;
import com.azure.resourcemanager.sql.generated.implementation.TimeZonesImpl;
import com.azure.resourcemanager.sql.generated.implementation.TransparentDataEncryptionActivitiesImpl;
import com.azure.resourcemanager.sql.generated.implementation.TransparentDataEncryptionsImpl;
import com.azure.resourcemanager.sql.generated.implementation.UsagesImpl;
import com.azure.resourcemanager.sql.generated.implementation.VirtualClustersImpl;
import com.azure.resourcemanager.sql.generated.implementation.VirtualNetworkRulesImpl;
import com.azure.resourcemanager.sql.generated.implementation.WorkloadClassifiersImpl;
import com.azure.resourcemanager.sql.generated.implementation.WorkloadGroupsImpl;
import com.azure.resourcemanager.sql.generated.models.BackupShortTermRetentionPolicies;
import com.azure.resourcemanager.sql.generated.models.Capabilities;
import com.azure.resourcemanager.sql.generated.models.DataMaskingPolicies;
import com.azure.resourcemanager.sql.generated.models.DataMaskingRules;
import com.azure.resourcemanager.sql.generated.models.DataWarehouseUserActivitiesOperations;
import com.azure.resourcemanager.sql.generated.models.DatabaseAdvisors;
import com.azure.resourcemanager.sql.generated.models.DatabaseAutomaticTunings;
import com.azure.resourcemanager.sql.generated.models.DatabaseBlobAuditingPolicies;
import com.azure.resourcemanager.sql.generated.models.DatabaseColumns;
import com.azure.resourcemanager.sql.generated.models.DatabaseExtensionsOperations;
import com.azure.resourcemanager.sql.generated.models.DatabaseOperations;
import com.azure.resourcemanager.sql.generated.models.DatabaseRecommendedActions;
import com.azure.resourcemanager.sql.generated.models.DatabaseSchemas;
import com.azure.resourcemanager.sql.generated.models.DatabaseSecurityAlertPolicies;
import com.azure.resourcemanager.sql.generated.models.DatabaseTables;
import com.azure.resourcemanager.sql.generated.models.DatabaseUsages;
import com.azure.resourcemanager.sql.generated.models.DatabaseVulnerabilityAssessmentRuleBaselines;
import com.azure.resourcemanager.sql.generated.models.DatabaseVulnerabilityAssessmentScans;
import com.azure.resourcemanager.sql.generated.models.DatabaseVulnerabilityAssessments;
import com.azure.resourcemanager.sql.generated.models.Databases;
import com.azure.resourcemanager.sql.generated.models.DeletedServers;
import com.azure.resourcemanager.sql.generated.models.ElasticPoolActivities;
import com.azure.resourcemanager.sql.generated.models.ElasticPoolDatabaseActivities;
import com.azure.resourcemanager.sql.generated.models.ElasticPoolOperations;
import com.azure.resourcemanager.sql.generated.models.ElasticPools;
import com.azure.resourcemanager.sql.generated.models.EncryptionProtectors;
import com.azure.resourcemanager.sql.generated.models.ExtendedDatabaseBlobAuditingPolicies;
import com.azure.resourcemanager.sql.generated.models.ExtendedServerBlobAuditingPolicies;
import com.azure.resourcemanager.sql.generated.models.FailoverGroups;
import com.azure.resourcemanager.sql.generated.models.FirewallRules;
import com.azure.resourcemanager.sql.generated.models.GeoBackupPolicies;
import com.azure.resourcemanager.sql.generated.models.InstanceFailoverGroups;
import com.azure.resourcemanager.sql.generated.models.InstancePools;
import com.azure.resourcemanager.sql.generated.models.JobAgents;
import com.azure.resourcemanager.sql.generated.models.JobCredentials;
import com.azure.resourcemanager.sql.generated.models.JobExecutions;
import com.azure.resourcemanager.sql.generated.models.JobStepExecutions;
import com.azure.resourcemanager.sql.generated.models.JobSteps;
import com.azure.resourcemanager.sql.generated.models.JobTargetExecutions;
import com.azure.resourcemanager.sql.generated.models.JobTargetGroups;
import com.azure.resourcemanager.sql.generated.models.JobVersions;
import com.azure.resourcemanager.sql.generated.models.Jobs;
import com.azure.resourcemanager.sql.generated.models.LedgerDigestUploadsOperations;
import com.azure.resourcemanager.sql.generated.models.LongTermRetentionBackups;
import com.azure.resourcemanager.sql.generated.models.LongTermRetentionManagedInstanceBackups;
import com.azure.resourcemanager.sql.generated.models.LongTermRetentionPolicies;
import com.azure.resourcemanager.sql.generated.models.MaintenanceWindowOptionsOperations;
import com.azure.resourcemanager.sql.generated.models.MaintenanceWindowsOperations;
import com.azure.resourcemanager.sql.generated.models.ManagedBackupShortTermRetentionPolicies;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseColumns;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseQueries;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseRecommendedSensitivityLabels;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseRestoreDetails;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseSchemas;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseSecurityAlertPolicies;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseSecurityEvents;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseSensitivityLabels;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseTables;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseTransparentDataEncryptions;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseVulnerabilityAssessmentRuleBaselines;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseVulnerabilityAssessmentScans;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseVulnerabilityAssessments;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabases;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceAdministrators;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceAzureADOnlyAuthentications;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceEncryptionProtectors;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceKeys;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceLongTermRetentionPolicies;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceOperations;
import com.azure.resourcemanager.sql.generated.models.ManagedInstancePrivateEndpointConnections;
import com.azure.resourcemanager.sql.generated.models.ManagedInstancePrivateLinkResources;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceTdeCertificates;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceVulnerabilityAssessments;
import com.azure.resourcemanager.sql.generated.models.ManagedInstances;
import com.azure.resourcemanager.sql.generated.models.ManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies;
import com.azure.resourcemanager.sql.generated.models.ManagedServerSecurityAlertPolicies;
import com.azure.resourcemanager.sql.generated.models.Operations;
import com.azure.resourcemanager.sql.generated.models.OperationsHealths;
import com.azure.resourcemanager.sql.generated.models.OutboundFirewallRules;
import com.azure.resourcemanager.sql.generated.models.PrivateEndpointConnections;
import com.azure.resourcemanager.sql.generated.models.PrivateLinkResources;
import com.azure.resourcemanager.sql.generated.models.RecommendedSensitivityLabels;
import com.azure.resourcemanager.sql.generated.models.RecoverableDatabases;
import com.azure.resourcemanager.sql.generated.models.RecoverableManagedDatabases;
import com.azure.resourcemanager.sql.generated.models.ReplicationLinks;
import com.azure.resourcemanager.sql.generated.models.RestorableDroppedDatabases;
import com.azure.resourcemanager.sql.generated.models.RestorableDroppedManagedDatabases;
import com.azure.resourcemanager.sql.generated.models.RestorePoints;
import com.azure.resourcemanager.sql.generated.models.SensitivityLabels;
import com.azure.resourcemanager.sql.generated.models.ServerAdvisors;
import com.azure.resourcemanager.sql.generated.models.ServerAutomaticTunings;
import com.azure.resourcemanager.sql.generated.models.ServerAzureADAdministrators;
import com.azure.resourcemanager.sql.generated.models.ServerAzureADOnlyAuthentications;
import com.azure.resourcemanager.sql.generated.models.ServerBlobAuditingPolicies;
import com.azure.resourcemanager.sql.generated.models.ServerCommunicationLinks;
import com.azure.resourcemanager.sql.generated.models.ServerConnectionPolicies;
import com.azure.resourcemanager.sql.generated.models.ServerDevOpsAuditSettings;
import com.azure.resourcemanager.sql.generated.models.ServerDnsAliases;
import com.azure.resourcemanager.sql.generated.models.ServerKeys;
import com.azure.resourcemanager.sql.generated.models.ServerOperations;
import com.azure.resourcemanager.sql.generated.models.ServerSecurityAlertPolicies;
import com.azure.resourcemanager.sql.generated.models.ServerTrustGroups;
import com.azure.resourcemanager.sql.generated.models.ServerUsages;
import com.azure.resourcemanager.sql.generated.models.ServerVulnerabilityAssessments;
import com.azure.resourcemanager.sql.generated.models.Servers;
import com.azure.resourcemanager.sql.generated.models.ServiceObjectives;
import com.azure.resourcemanager.sql.generated.models.SqlAgents;
import com.azure.resourcemanager.sql.generated.models.SubscriptionUsages;
import com.azure.resourcemanager.sql.generated.models.SyncAgents;
import com.azure.resourcemanager.sql.generated.models.SyncGroups;
import com.azure.resourcemanager.sql.generated.models.SyncMembers;
import com.azure.resourcemanager.sql.generated.models.TdeCertificates;
import com.azure.resourcemanager.sql.generated.models.TimeZones;
import com.azure.resourcemanager.sql.generated.models.TransparentDataEncryptionActivities;
import com.azure.resourcemanager.sql.generated.models.TransparentDataEncryptions;
import com.azure.resourcemanager.sql.generated.models.Usages;
import com.azure.resourcemanager.sql.generated.models.VirtualClusters;
import com.azure.resourcemanager.sql.generated.models.VirtualNetworkRules;
import com.azure.resourcemanager.sql.generated.models.WorkloadClassifiers;
import com.azure.resourcemanager.sql.generated.models.WorkloadGroups;
import java.time.Duration;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Entry point to SqlManager. The Azure SQL Database management API provides a RESTful set of web services that interact
 * with Azure SQL Database services to manage your databases. The API enables you to create, retrieve, update, and
 * delete databases.
 */
public final class SqlManager {
    private RecoverableDatabases recoverableDatabases;

    private ServerConnectionPolicies serverConnectionPolicies;

    private DataMaskingPolicies dataMaskingPolicies;

    private DataMaskingRules dataMaskingRules;

    private GeoBackupPolicies geoBackupPolicies;

    private Databases databases;

    private ElasticPools elasticPools;

    private ReplicationLinks replicationLinks;

    private ServerCommunicationLinks serverCommunicationLinks;

    private ServiceObjectives serviceObjectives;

    private ElasticPoolActivities elasticPoolActivities;

    private ElasticPoolDatabaseActivities elasticPoolDatabaseActivities;

    private TransparentDataEncryptions transparentDataEncryptions;

    private TransparentDataEncryptionActivities transparentDataEncryptionActivities;

    private ServerUsages serverUsages;

    private ExtendedDatabaseBlobAuditingPolicies extendedDatabaseBlobAuditingPolicies;

    private ExtendedServerBlobAuditingPolicies extendedServerBlobAuditingPolicies;

    private ServerBlobAuditingPolicies serverBlobAuditingPolicies;

    private DatabaseBlobAuditingPolicies databaseBlobAuditingPolicies;

    private DatabaseAdvisors databaseAdvisors;

    private DatabaseAutomaticTunings databaseAutomaticTunings;

    private DatabaseColumns databaseColumns;

    private DatabaseRecommendedActions databaseRecommendedActions;

    private DatabaseSchemas databaseSchemas;

    private DatabaseSecurityAlertPolicies databaseSecurityAlertPolicies;

    private DatabaseTables databaseTables;

    private DatabaseVulnerabilityAssessmentRuleBaselines databaseVulnerabilityAssessmentRuleBaselines;

    private DatabaseVulnerabilityAssessments databaseVulnerabilityAssessments;

    private DatabaseVulnerabilityAssessmentScans databaseVulnerabilityAssessmentScans;

    private DataWarehouseUserActivitiesOperations dataWarehouseUserActivitiesOperations;

    private DeletedServers deletedServers;

    private ElasticPoolOperations elasticPoolOperations;

    private EncryptionProtectors encryptionProtectors;

    private FailoverGroups failoverGroups;

    private FirewallRules firewallRules;

    private InstanceFailoverGroups instanceFailoverGroups;

    private InstancePools instancePools;

    private JobAgents jobAgents;

    private JobCredentials jobCredentials;

    private JobExecutions jobExecutions;

    private Jobs jobs;

    private JobStepExecutions jobStepExecutions;

    private JobSteps jobSteps;

    private JobTargetExecutions jobTargetExecutions;

    private JobTargetGroups jobTargetGroups;

    private JobVersions jobVersions;

    private Capabilities capabilities;

    private LongTermRetentionBackups longTermRetentionBackups;

    private LongTermRetentionManagedInstanceBackups longTermRetentionManagedInstanceBackups;

    private LongTermRetentionPolicies longTermRetentionPolicies;

    private MaintenanceWindowOptionsOperations maintenanceWindowOptionsOperations;

    private MaintenanceWindowsOperations maintenanceWindowsOperations;

    private ManagedBackupShortTermRetentionPolicies managedBackupShortTermRetentionPolicies;

    private ManagedDatabaseColumns managedDatabaseColumns;

    private ManagedDatabaseQueries managedDatabaseQueries;

    private ManagedDatabaseRestoreDetails managedDatabaseRestoreDetails;

    private ManagedDatabases managedDatabases;

    private ManagedDatabaseSchemas managedDatabaseSchemas;

    private ManagedDatabaseSecurityAlertPolicies managedDatabaseSecurityAlertPolicies;

    private ManagedDatabaseSecurityEvents managedDatabaseSecurityEvents;

    private ManagedDatabaseSensitivityLabels managedDatabaseSensitivityLabels;

    private ManagedDatabaseRecommendedSensitivityLabels managedDatabaseRecommendedSensitivityLabels;

    private ManagedDatabaseTables managedDatabaseTables;

    private ManagedDatabaseTransparentDataEncryptions managedDatabaseTransparentDataEncryptions;

    private ManagedDatabaseVulnerabilityAssessmentRuleBaselines managedDatabaseVulnerabilityAssessmentRuleBaselines;

    private ManagedDatabaseVulnerabilityAssessments managedDatabaseVulnerabilityAssessments;

    private ManagedDatabaseVulnerabilityAssessmentScans managedDatabaseVulnerabilityAssessmentScans;

    private ManagedInstanceAdministrators managedInstanceAdministrators;

    private ManagedInstanceAzureADOnlyAuthentications managedInstanceAzureADOnlyAuthentications;

    private ManagedInstanceEncryptionProtectors managedInstanceEncryptionProtectors;

    private ManagedInstanceKeys managedInstanceKeys;

    private ManagedInstanceLongTermRetentionPolicies managedInstanceLongTermRetentionPolicies;

    private ManagedInstanceOperations managedInstanceOperations;

    private ManagedInstancePrivateEndpointConnections managedInstancePrivateEndpointConnections;

    private ManagedInstancePrivateLinkResources managedInstancePrivateLinkResources;

    private ManagedInstances managedInstances;

    private ManagedInstanceTdeCertificates managedInstanceTdeCertificates;

    private ManagedInstanceVulnerabilityAssessments managedInstanceVulnerabilityAssessments;

    private ManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies
        managedRestorableDroppedDatabaseBackupShortTermRetentionPolicies;

    private ManagedServerSecurityAlertPolicies managedServerSecurityAlertPolicies;

    private Operations operations;

    private OperationsHealths operationsHealths;

    private PrivateEndpointConnections privateEndpointConnections;

    private PrivateLinkResources privateLinkResources;

    private RecoverableManagedDatabases recoverableManagedDatabases;

    private RestorePoints restorePoints;

    private SensitivityLabels sensitivityLabels;

    private RecommendedSensitivityLabels recommendedSensitivityLabels;

    private ServerAdvisors serverAdvisors;

    private ServerAutomaticTunings serverAutomaticTunings;

    private ServerAzureADAdministrators serverAzureADAdministrators;

    private ServerAzureADOnlyAuthentications serverAzureADOnlyAuthentications;

    private ServerDevOpsAuditSettings serverDevOpsAuditSettings;

    private ServerDnsAliases serverDnsAliases;

    private ServerKeys serverKeys;

    private ServerOperations serverOperations;

    private ServerSecurityAlertPolicies serverSecurityAlertPolicies;

    private ServerTrustGroups serverTrustGroups;

    private ServerVulnerabilityAssessments serverVulnerabilityAssessments;

    private SqlAgents sqlAgents;

    private SubscriptionUsages subscriptionUsages;

    private SyncAgents syncAgents;

    private SyncGroups syncGroups;

    private SyncMembers syncMembers;

    private TdeCertificates tdeCertificates;

    private TimeZones timeZones;

    private VirtualClusters virtualClusters;

    private VirtualNetworkRules virtualNetworkRules;

    private WorkloadClassifiers workloadClassifiers;

    private WorkloadGroups workloadGroups;

    private BackupShortTermRetentionPolicies backupShortTermRetentionPolicies;

    private DatabaseExtensionsOperations databaseExtensionsOperations;

    private DatabaseOperations databaseOperations;

    private DatabaseUsages databaseUsages;

    private LedgerDigestUploadsOperations ledgerDigestUploadsOperations;

    private OutboundFirewallRules outboundFirewallRules;

    private RestorableDroppedDatabases restorableDroppedDatabases;

    private RestorableDroppedManagedDatabases restorableDroppedManagedDatabases;

    private Servers servers;

    private Usages usages;

    private final SqlManagementClient clientObject;

    private SqlManager(HttpPipeline httpPipeline, AzureProfile profile, Duration defaultPollInterval) {
        Objects.requireNonNull(httpPipeline, "'httpPipeline' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        this.clientObject =
            new SqlManagementClientBuilder()
                .pipeline(httpPipeline)
                .endpoint(profile.getEnvironment().getResourceManagerEndpoint())
                .subscriptionId(profile.getSubscriptionId())
                .defaultPollInterval(defaultPollInterval)
                .buildClient();
    }

    /**
     * Creates an instance of Sql service API entry point.
     *
     * @param credential the credential to use.
     * @param profile the Azure profile for client.
     * @return the Sql service API instance.
     */
    public static SqlManager authenticate(TokenCredential credential, AzureProfile profile) {
        Objects.requireNonNull(credential, "'credential' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        return configure().authenticate(credential, profile);
    }

    /**
     * Gets a Configurable instance that can be used to create SqlManager with optional configuration.
     *
     * @return the Configurable instance allowing configurations.
     */
    public static Configurable configure() {
        return new SqlManager.Configurable();
    }

    /** The Configurable allowing configurations to be set. */
    public static final class Configurable {
        private final ClientLogger logger = new ClientLogger(Configurable.class);

        private HttpClient httpClient;
        private HttpLogOptions httpLogOptions;
        private final List<HttpPipelinePolicy> policies = new ArrayList<>();
        private final List<String> scopes = new ArrayList<>();
        private RetryPolicy retryPolicy;
        private Duration defaultPollInterval;

        private Configurable() {
        }

        /**
         * Sets the http client.
         *
         * @param httpClient the HTTP client.
         * @return the configurable object itself.
         */
        public Configurable withHttpClient(HttpClient httpClient) {
            this.httpClient = Objects.requireNonNull(httpClient, "'httpClient' cannot be null.");
            return this;
        }

        /**
         * Sets the logging options to the HTTP pipeline.
         *
         * @param httpLogOptions the HTTP log options.
         * @return the configurable object itself.
         */
        public Configurable withLogOptions(HttpLogOptions httpLogOptions) {
            this.httpLogOptions = Objects.requireNonNull(httpLogOptions, "'httpLogOptions' cannot be null.");
            return this;
        }

        /**
         * Adds the pipeline policy to the HTTP pipeline.
         *
         * @param policy the HTTP pipeline policy.
         * @return the configurable object itself.
         */
        public Configurable withPolicy(HttpPipelinePolicy policy) {
            this.policies.add(Objects.requireNonNull(policy, "'policy' cannot be null."));
            return this;
        }

        /**
         * Adds the scope to permission sets.
         *
         * @param scope the scope.
         * @return the configurable object itself.
         */
        public Configurable withScope(String scope) {
            this.scopes.add(Objects.requireNonNull(scope, "'scope' cannot be null."));
            return this;
        }

        /**
         * Sets the retry policy to the HTTP pipeline.
         *
         * @param retryPolicy the HTTP pipeline retry policy.
         * @return the configurable object itself.
         */
        public Configurable withRetryPolicy(RetryPolicy retryPolicy) {
            this.retryPolicy = Objects.requireNonNull(retryPolicy, "'retryPolicy' cannot be null.");
            return this;
        }

        /**
         * Sets the default poll interval, used when service does not provide "Retry-After" header.
         *
         * @param defaultPollInterval the default poll interval.
         * @return the configurable object itself.
         */
        public Configurable withDefaultPollInterval(Duration defaultPollInterval) {
            this.defaultPollInterval = Objects.requireNonNull(defaultPollInterval, "'retryPolicy' cannot be null.");
            if (this.defaultPollInterval.isNegative()) {
                throw logger.logExceptionAsError(new IllegalArgumentException("'httpPipeline' cannot be negative"));
            }
            return this;
        }

        /**
         * Creates an instance of Sql service API entry point.
         *
         * @param credential the credential to use.
         * @param profile the Azure profile for client.
         * @return the Sql service API instance.
         */
        public SqlManager authenticate(TokenCredential credential, AzureProfile profile) {
            Objects.requireNonNull(credential, "'credential' cannot be null.");
            Objects.requireNonNull(profile, "'profile' cannot be null.");

            StringBuilder userAgentBuilder = new StringBuilder();
            userAgentBuilder
                .append("azsdk-java")
                .append("-")
                .append("com.azure.resourcemanager.sql.generated")
                .append("/")
                .append("1.0.0-beta.1");
            if (!Configuration.getGlobalConfiguration().get("AZURE_TELEMETRY_DISABLED", false)) {
                userAgentBuilder
                    .append(" (")
                    .append(Configuration.getGlobalConfiguration().get("java.version"))
                    .append("; ")
                    .append(Configuration.getGlobalConfiguration().get("os.name"))
                    .append("; ")
                    .append(Configuration.getGlobalConfiguration().get("os.version"))
                    .append("; auto-generated)");
            } else {
                userAgentBuilder.append(" (auto-generated)");
            }

            if (scopes.isEmpty()) {
                scopes.add(profile.getEnvironment().getManagementEndpoint() + "/.default");
            }
            if (retryPolicy == null) {
                retryPolicy = new RetryPolicy("Retry-After", ChronoUnit.SECONDS);
            }
            List<HttpPipelinePolicy> policies = new ArrayList<>();
            policies.add(new UserAgentPolicy(userAgentBuilder.toString()));
            policies.add(new RequestIdPolicy());
            HttpPolicyProviders.addBeforeRetryPolicies(policies);
            policies.add(retryPolicy);
            policies.add(new AddDatePolicy());
            policies.add(new ArmChallengeAuthenticationPolicy(credential, scopes.toArray(new String[0])));
            policies.addAll(this.policies);
            HttpPolicyProviders.addAfterRetryPolicies(policies);
            policies.add(new HttpLoggingPolicy(httpLogOptions));
            HttpPipeline httpPipeline =
                new HttpPipelineBuilder()
                    .httpClient(httpClient)
                    .policies(policies.toArray(new HttpPipelinePolicy[0]))
                    .build();
            return new SqlManager(httpPipeline, profile, defaultPollInterval);
        }
    }

    /** @return Resource collection API of RecoverableDatabases. */
    public RecoverableDatabases recoverableDatabases() {
        if (this.recoverableDatabases == null) {
            this.recoverableDatabases = new RecoverableDatabasesImpl(clientObject.getRecoverableDatabases(), this);
        }
        return recoverableDatabases;
    }

    /** @return Resource collection API of ServerConnectionPolicies. */
    public ServerConnectionPolicies serverConnectionPolicies() {
        if (this.serverConnectionPolicies == null) {
            this.serverConnectionPolicies =
                new ServerConnectionPoliciesImpl(clientObject.getServerConnectionPolicies(), this);
        }
        return serverConnectionPolicies;
    }

    /** @return Resource collection API of DataMaskingPolicies. */
    public DataMaskingPolicies dataMaskingPolicies() {
        if (this.dataMaskingPolicies == null) {
            this.dataMaskingPolicies = new DataMaskingPoliciesImpl(clientObject.getDataMaskingPolicies(), this);
        }
        return dataMaskingPolicies;
    }

    /** @return Resource collection API of DataMaskingRules. */
    public DataMaskingRules dataMaskingRules() {
        if (this.dataMaskingRules == null) {
            this.dataMaskingRules = new DataMaskingRulesImpl(clientObject.getDataMaskingRules(), this);
        }
        return dataMaskingRules;
    }

    /** @return Resource collection API of GeoBackupPolicies. */
    public GeoBackupPolicies geoBackupPolicies() {
        if (this.geoBackupPolicies == null) {
            this.geoBackupPolicies = new GeoBackupPoliciesImpl(clientObject.getGeoBackupPolicies(), this);
        }
        return geoBackupPolicies;
    }

    /** @return Resource collection API of Databases. */
    public Databases databases() {
        if (this.databases == null) {
            this.databases = new DatabasesImpl(clientObject.getDatabases(), this);
        }
        return databases;
    }

    /** @return Resource collection API of ElasticPools. */
    public ElasticPools elasticPools() {
        if (this.elasticPools == null) {
            this.elasticPools = new ElasticPoolsImpl(clientObject.getElasticPools(), this);
        }
        return elasticPools;
    }

    /** @return Resource collection API of ReplicationLinks. */
    public ReplicationLinks replicationLinks() {
        if (this.replicationLinks == null) {
            this.replicationLinks = new ReplicationLinksImpl(clientObject.getReplicationLinks(), this);
        }
        return replicationLinks;
    }

    /** @return Resource collection API of ServerCommunicationLinks. */
    public ServerCommunicationLinks serverCommunicationLinks() {
        if (this.serverCommunicationLinks == null) {
            this.serverCommunicationLinks =
                new ServerCommunicationLinksImpl(clientObject.getServerCommunicationLinks(), this);
        }
        return serverCommunicationLinks;
    }

    /** @return Resource collection API of ServiceObjectives. */
    public ServiceObjectives serviceObjectives() {
        if (this.serviceObjectives == null) {
            this.serviceObjectives = new ServiceObjectivesImpl(clientObject.getServiceObjectives(), this);
        }
        return serviceObjectives;
    }

    /** @return Resource collection API of ElasticPoolActivities. */
    public ElasticPoolActivities elasticPoolActivities() {
        if (this.elasticPoolActivities == null) {
            this.elasticPoolActivities = new ElasticPoolActivitiesImpl(clientObject.getElasticPoolActivities(), this);
        }
        return elasticPoolActivities;
    }

    /** @return Resource collection API of ElasticPoolDatabaseActivities. */
    public ElasticPoolDatabaseActivities elasticPoolDatabaseActivities() {
        if (this.elasticPoolDatabaseActivities == null) {
            this.elasticPoolDatabaseActivities =
                new ElasticPoolDatabaseActivitiesImpl(clientObject.getElasticPoolDatabaseActivities(), this);
        }
        return elasticPoolDatabaseActivities;
    }

    /** @return Resource collection API of TransparentDataEncryptions. */
    public TransparentDataEncryptions transparentDataEncryptions() {
        if (this.transparentDataEncryptions == null) {
            this.transparentDataEncryptions =
                new TransparentDataEncryptionsImpl(clientObject.getTransparentDataEncryptions(), this);
        }
        return transparentDataEncryptions;
    }

    /** @return Resource collection API of TransparentDataEncryptionActivities. */
    public TransparentDataEncryptionActivities transparentDataEncryptionActivities() {
        if (this.transparentDataEncryptionActivities == null) {
            this.transparentDataEncryptionActivities =
                new TransparentDataEncryptionActivitiesImpl(
                    clientObject.getTransparentDataEncryptionActivities(), this);
        }
        return transparentDataEncryptionActivities;
    }

    /** @return Resource collection API of ServerUsages. */
    public ServerUsages serverUsages() {
        if (this.serverUsages == null) {
            this.serverUsages = new ServerUsagesImpl(clientObject.getServerUsages(), this);
        }
        return serverUsages;
    }

    /** @return Resource collection API of ExtendedDatabaseBlobAuditingPolicies. */
    public ExtendedDatabaseBlobAuditingPolicies extendedDatabaseBlobAuditingPolicies() {
        if (this.extendedDatabaseBlobAuditingPolicies == null) {
            this.extendedDatabaseBlobAuditingPolicies =
                new ExtendedDatabaseBlobAuditingPoliciesImpl(
                    clientObject.getExtendedDatabaseBlobAuditingPolicies(), this);
        }
        return extendedDatabaseBlobAuditingPolicies;
    }

    /** @return Resource collection API of ExtendedServerBlobAuditingPolicies. */
    public ExtendedServerBlobAuditingPolicies extendedServerBlobAuditingPolicies() {
        if (this.extendedServerBlobAuditingPolicies == null) {
            this.extendedServerBlobAuditingPolicies =
                new ExtendedServerBlobAuditingPoliciesImpl(clientObject.getExtendedServerBlobAuditingPolicies(), this);
        }
        return extendedServerBlobAuditingPolicies;
    }

    /** @return Resource collection API of ServerBlobAuditingPolicies. */
    public ServerBlobAuditingPolicies serverBlobAuditingPolicies() {
        if (this.serverBlobAuditingPolicies == null) {
            this.serverBlobAuditingPolicies =
                new ServerBlobAuditingPoliciesImpl(clientObject.getServerBlobAuditingPolicies(), this);
        }
        return serverBlobAuditingPolicies;
    }

    /** @return Resource collection API of DatabaseBlobAuditingPolicies. */
    public DatabaseBlobAuditingPolicies databaseBlobAuditingPolicies() {
        if (this.databaseBlobAuditingPolicies == null) {
            this.databaseBlobAuditingPolicies =
                new DatabaseBlobAuditingPoliciesImpl(clientObject.getDatabaseBlobAuditingPolicies(), this);
        }
        return databaseBlobAuditingPolicies;
    }

    /** @return Resource collection API of DatabaseAdvisors. */
    public DatabaseAdvisors databaseAdvisors() {
        if (this.databaseAdvisors == null) {
            this.databaseAdvisors = new DatabaseAdvisorsImpl(clientObject.getDatabaseAdvisors(), this);
        }
        return databaseAdvisors;
    }

    /** @return Resource collection API of DatabaseAutomaticTunings. */
    public DatabaseAutomaticTunings databaseAutomaticTunings() {
        if (this.databaseAutomaticTunings == null) {
            this.databaseAutomaticTunings =
                new DatabaseAutomaticTuningsImpl(clientObject.getDatabaseAutomaticTunings(), this);
        }
        return databaseAutomaticTunings;
    }

    /** @return Resource collection API of DatabaseColumns. */
    public DatabaseColumns databaseColumns() {
        if (this.databaseColumns == null) {
            this.databaseColumns = new DatabaseColumnsImpl(clientObject.getDatabaseColumns(), this);
        }
        return databaseColumns;
    }

    /** @return Resource collection API of DatabaseRecommendedActions. */
    public DatabaseRecommendedActions databaseRecommendedActions() {
        if (this.databaseRecommendedActions == null) {
            this.databaseRecommendedActions =
                new DatabaseRecommendedActionsImpl(clientObject.getDatabaseRecommendedActions(), this);
        }
        return databaseRecommendedActions;
    }

    /** @return Resource collection API of DatabaseSchemas. */
    public DatabaseSchemas databaseSchemas() {
        if (this.databaseSchemas == null) {
            this.databaseSchemas = new DatabaseSchemasImpl(clientObject.getDatabaseSchemas(), this);
        }
        return databaseSchemas;
    }

    /** @return Resource collection API of DatabaseSecurityAlertPolicies. */
    public DatabaseSecurityAlertPolicies databaseSecurityAlertPolicies() {
        if (this.databaseSecurityAlertPolicies == null) {
            this.databaseSecurityAlertPolicies =
                new DatabaseSecurityAlertPoliciesImpl(clientObject.getDatabaseSecurityAlertPolicies(), this);
        }
        return databaseSecurityAlertPolicies;
    }

    /** @return Resource collection API of DatabaseTables. */
    public DatabaseTables databaseTables() {
        if (this.databaseTables == null) {
            this.databaseTables = new DatabaseTablesImpl(clientObject.getDatabaseTables(), this);
        }
        return databaseTables;
    }

    /** @return Resource collection API of DatabaseVulnerabilityAssessmentRuleBaselines. */
    public DatabaseVulnerabilityAssessmentRuleBaselines databaseVulnerabilityAssessmentRuleBaselines() {
        if (this.databaseVulnerabilityAssessmentRuleBaselines == null) {
            this.databaseVulnerabilityAssessmentRuleBaselines =
                new DatabaseVulnerabilityAssessmentRuleBaselinesImpl(
                    clientObject.getDatabaseVulnerabilityAssessmentRuleBaselines(), this);
        }
        return databaseVulnerabilityAssessmentRuleBaselines;
    }

    /** @return Resource collection API of DatabaseVulnerabilityAssessments. */
    public DatabaseVulnerabilityAssessments databaseVulnerabilityAssessments() {
        if (this.databaseVulnerabilityAssessments == null) {
            this.databaseVulnerabilityAssessments =
                new DatabaseVulnerabilityAssessmentsImpl(clientObject.getDatabaseVulnerabilityAssessments(), this);
        }
        return databaseVulnerabilityAssessments;
    }

    /** @return Resource collection API of DatabaseVulnerabilityAssessmentScans. */
    public DatabaseVulnerabilityAssessmentScans databaseVulnerabilityAssessmentScans() {
        if (this.databaseVulnerabilityAssessmentScans == null) {
            this.databaseVulnerabilityAssessmentScans =
                new DatabaseVulnerabilityAssessmentScansImpl(
                    clientObject.getDatabaseVulnerabilityAssessmentScans(), this);
        }
        return databaseVulnerabilityAssessmentScans;
    }

    /** @return Resource collection API of DataWarehouseUserActivitiesOperations. */
    public DataWarehouseUserActivitiesOperations dataWarehouseUserActivitiesOperations() {
        if (this.dataWarehouseUserActivitiesOperations == null) {
            this.dataWarehouseUserActivitiesOperations =
                new DataWarehouseUserActivitiesOperationsImpl(
                    clientObject.getDataWarehouseUserActivitiesOperations(), this);
        }
        return dataWarehouseUserActivitiesOperations;
    }

    /** @return Resource collection API of DeletedServers. */
    public DeletedServers deletedServers() {
        if (this.deletedServers == null) {
            this.deletedServers = new DeletedServersImpl(clientObject.getDeletedServers(), this);
        }
        return deletedServers;
    }

    /** @return Resource collection API of ElasticPoolOperations. */
    public ElasticPoolOperations elasticPoolOperations() {
        if (this.elasticPoolOperations == null) {
            this.elasticPoolOperations = new ElasticPoolOperationsImpl(clientObject.getElasticPoolOperations(), this);
        }
        return elasticPoolOperations;
    }

    /** @return Resource collection API of EncryptionProtectors. */
    public EncryptionProtectors encryptionProtectors() {
        if (this.encryptionProtectors == null) {
            this.encryptionProtectors = new EncryptionProtectorsImpl(clientObject.getEncryptionProtectors(), this);
        }
        return encryptionProtectors;
    }

    /** @return Resource collection API of FailoverGroups. */
    public FailoverGroups failoverGroups() {
        if (this.failoverGroups == null) {
            this.failoverGroups = new FailoverGroupsImpl(clientObject.getFailoverGroups(), this);
        }
        return failoverGroups;
    }

    /** @return Resource collection API of FirewallRules. */
    public FirewallRules firewallRules() {
        if (this.firewallRules == null) {
            this.firewallRules = new FirewallRulesImpl(clientObject.getFirewallRules(), this);
        }
        return firewallRules;
    }

    /** @return Resource collection API of InstanceFailoverGroups. */
    public InstanceFailoverGroups instanceFailoverGroups() {
        if (this.instanceFailoverGroups == null) {
            this.instanceFailoverGroups =
                new InstanceFailoverGroupsImpl(clientObject.getInstanceFailoverGroups(), this);
        }
        return instanceFailoverGroups;
    }

    /** @return Resource collection API of InstancePools. */
    public InstancePools instancePools() {
        if (this.instancePools == null) {
            this.instancePools = new InstancePoolsImpl(clientObject.getInstancePools(), this);
        }
        return instancePools;
    }

    /** @return Resource collection API of JobAgents. */
    public JobAgents jobAgents() {
        if (this.jobAgents == null) {
            this.jobAgents = new JobAgentsImpl(clientObject.getJobAgents(), this);
        }
        return jobAgents;
    }

    /** @return Resource collection API of JobCredentials. */
    public JobCredentials jobCredentials() {
        if (this.jobCredentials == null) {
            this.jobCredentials = new JobCredentialsImpl(clientObject.getJobCredentials(), this);
        }
        return jobCredentials;
    }

    /** @return Resource collection API of JobExecutions. */
    public JobExecutions jobExecutions() {
        if (this.jobExecutions == null) {
            this.jobExecutions = new JobExecutionsImpl(clientObject.getJobExecutions(), this);
        }
        return jobExecutions;
    }

    /** @return Resource collection API of Jobs. */
    public Jobs jobs() {
        if (this.jobs == null) {
            this.jobs = new JobsImpl(clientObject.getJobs(), this);
        }
        return jobs;
    }

    /** @return Resource collection API of JobStepExecutions. */
    public JobStepExecutions jobStepExecutions() {
        if (this.jobStepExecutions == null) {
            this.jobStepExecutions = new JobStepExecutionsImpl(clientObject.getJobStepExecutions(), this);
        }
        return jobStepExecutions;
    }

    /** @return Resource collection API of JobSteps. */
    public JobSteps jobSteps() {
        if (this.jobSteps == null) {
            this.jobSteps = new JobStepsImpl(clientObject.getJobSteps(), this);
        }
        return jobSteps;
    }

    /** @return Resource collection API of JobTargetExecutions. */
    public JobTargetExecutions jobTargetExecutions() {
        if (this.jobTargetExecutions == null) {
            this.jobTargetExecutions = new JobTargetExecutionsImpl(clientObject.getJobTargetExecutions(), this);
        }
        return jobTargetExecutions;
    }

    /** @return Resource collection API of JobTargetGroups. */
    public JobTargetGroups jobTargetGroups() {
        if (this.jobTargetGroups == null) {
            this.jobTargetGroups = new JobTargetGroupsImpl(clientObject.getJobTargetGroups(), this);
        }
        return jobTargetGroups;
    }

    /** @return Resource collection API of JobVersions. */
    public JobVersions jobVersions() {
        if (this.jobVersions == null) {
            this.jobVersions = new JobVersionsImpl(clientObject.getJobVersions(), this);
        }
        return jobVersions;
    }

    /** @return Resource collection API of Capabilities. */
    public Capabilities capabilities() {
        if (this.capabilities == null) {
            this.capabilities = new CapabilitiesImpl(clientObject.getCapabilities(), this);
        }
        return capabilities;
    }

    /** @return Resource collection API of LongTermRetentionBackups. */
    public LongTermRetentionBackups longTermRetentionBackups() {
        if (this.longTermRetentionBackups == null) {
            this.longTermRetentionBackups =
                new LongTermRetentionBackupsImpl(clientObject.getLongTermRetentionBackups(), this);
        }
        return longTermRetentionBackups;
    }

    /** @return Resource collection API of LongTermRetentionManagedInstanceBackups. */
    public LongTermRetentionManagedInstanceBackups longTermRetentionManagedInstanceBackups() {
        if (this.longTermRetentionManagedInstanceBackups == null) {
            this.longTermRetentionManagedInstanceBackups =
                new LongTermRetentionManagedInstanceBackupsImpl(
                    clientObject.getLongTermRetentionManagedInstanceBackups(), this);
        }
        return longTermRetentionManagedInstanceBackups;
    }

    /** @return Resource collection API of LongTermRetentionPolicies. */
    public LongTermRetentionPolicies longTermRetentionPolicies() {
        if (this.longTermRetentionPolicies == null) {
            this.longTermRetentionPolicies =
                new LongTermRetentionPoliciesImpl(clientObject.getLongTermRetentionPolicies(), this);
        }
        return longTermRetentionPolicies;
    }

    /** @return Resource collection API of MaintenanceWindowOptionsOperations. */
    public MaintenanceWindowOptionsOperations maintenanceWindowOptionsOperations() {
        if (this.maintenanceWindowOptionsOperations == null) {
            this.maintenanceWindowOptionsOperations =
                new MaintenanceWindowOptionsOperationsImpl(clientObject.getMaintenanceWindowOptionsOperations(), this);
        }
        return maintenanceWindowOptionsOperations;
    }

    /** @return Resource collection API of MaintenanceWindowsOperations. */
    public MaintenanceWindowsOperations maintenanceWindowsOperations() {
        if (this.maintenanceWindowsOperations == null) {
            this.maintenanceWindowsOperations =
                new MaintenanceWindowsOperationsImpl(clientObject.getMaintenanceWindowsOperations(), this);
        }
        return maintenanceWindowsOperations;
    }

    /** @return Resource collection API of ManagedBackupShortTermRetentionPolicies. */
    public ManagedBackupShortTermRetentionPolicies managedBackupShortTermRetentionPolicies() {
        if (this.managedBackupShortTermRetentionPolicies == null) {
            this.managedBackupShortTermRetentionPolicies =
                new ManagedBackupShortTermRetentionPoliciesImpl(
                    clientObject.getManagedBackupShortTermRetentionPolicies(), this);
        }
        return managedBackupShortTermRetentionPolicies;
    }

    /** @return Resource collection API of ManagedDatabaseColumns. */
    public ManagedDatabaseColumns managedDatabaseColumns() {
        if (this.managedDatabaseColumns == null) {
            this.managedDatabaseColumns =
                new ManagedDatabaseColumnsImpl(clientObject.getManagedDatabaseColumns(), this);
        }
        return managedDatabaseColumns;
    }

    /** @return Resource collection API of ManagedDatabaseQueries. */
    public ManagedDatabaseQueries managedDatabaseQueries() {
        if (this.managedDatabaseQueries == null) {
            this.managedDatabaseQueries =
                new ManagedDatabaseQueriesImpl(clientObject.getManagedDatabaseQueries(), this);
        }
        return managedDatabaseQueries;
    }

    /** @return Resource collection API of ManagedDatabaseRestoreDetails. */
    public ManagedDatabaseRestoreDetails managedDatabaseRestoreDetails() {
        if (this.managedDatabaseRestoreDetails == null) {
            this.managedDatabaseRestoreDetails =
                new ManagedDatabaseRestoreDetailsImpl(clientObject.getManagedDatabaseRestoreDetails(), this);
        }
        return managedDatabaseRestoreDetails;
    }

    /** @return Resource collection API of ManagedDatabases. */
    public ManagedDatabases managedDatabases() {
        if (this.managedDatabases == null) {
            this.managedDatabases = new ManagedDatabasesImpl(clientObject.getManagedDatabases(), this);
        }
        return managedDatabases;
    }

    /** @return Resource collection API of ManagedDatabaseSchemas. */
    public ManagedDatabaseSchemas managedDatabaseSchemas() {
        if (this.managedDatabaseSchemas == null) {
            this.managedDatabaseSchemas =
                new ManagedDatabaseSchemasImpl(clientObject.getManagedDatabaseSchemas(), this);
        }
        return managedDatabaseSchemas;
    }

    /** @return Resource collection API of ManagedDatabaseSecurityAlertPolicies. */
    public ManagedDatabaseSecurityAlertPolicies managedDatabaseSecurityAlertPolicies() {
        if (this.managedDatabaseSecurityAlertPolicies == null) {
            this.managedDatabaseSecurityAlertPolicies =
                new ManagedDatabaseSecurityAlertPoliciesImpl(
                    clientObject.getManagedDatabaseSecurityAlertPolicies(), this);
        }
        return managedDatabaseSecurityAlertPolicies;
    }

    /** @return Resource collection API of ManagedDatabaseSecurityEvents. */
    public ManagedDatabaseSecurityEvents managedDatabaseSecurityEvents() {
        if (this.managedDatabaseSecurityEvents == null) {
            this.managedDatabaseSecurityEvents =
                new ManagedDatabaseSecurityEventsImpl(clientObject.getManagedDatabaseSecurityEvents(), this);
        }
        return managedDatabaseSecurityEvents;
    }

    /** @return Resource collection API of ManagedDatabaseSensitivityLabels. */
    public ManagedDatabaseSensitivityLabels managedDatabaseSensitivityLabels() {
        if (this.managedDatabaseSensitivityLabels == null) {
            this.managedDatabaseSensitivityLabels =
                new ManagedDatabaseSensitivityLabelsImpl(clientObject.getManagedDatabaseSensitivityLabels(), this);
        }
        return managedDatabaseSensitivityLabels;
    }

    /** @return Resource collection API of ManagedDatabaseRecommendedSensitivityLabels. */
    public ManagedDatabaseRecommendedSensitivityLabels managedDatabaseRecommendedSensitivityLabels() {
        if (this.managedDatabaseRecommendedSensitivityLabels == null) {
            this.managedDatabaseRecommendedSensitivityLabels =
                new ManagedDatabaseRecommendedSensitivityLabelsImpl(
                    clientObject.getManagedDatabaseRecommendedSensitivityLabels(), this);
        }
        return managedDatabaseRecommendedSensitivityLabels;
    }

    /** @return Resource collection API of ManagedDatabaseTables. */
    public ManagedDatabaseTables managedDatabaseTables() {
        if (this.managedDatabaseTables == null) {
            this.managedDatabaseTables = new ManagedDatabaseTablesImpl(clientObject.getManagedDatabaseTables(), this);
        }
        return managedDatabaseTables;
    }

    /** @return Resource collection API of ManagedDatabaseTransparentDataEncryptions. */
    public ManagedDatabaseTransparentDataEncryptions managedDatabaseTransparentDataEncryptions() {
        if (this.managedDatabaseTransparentDataEncryptions == null) {
            this.managedDatabaseTransparentDataEncryptions =
                new ManagedDatabaseTransparentDataEncryptionsImpl(
                    clientObject.getManagedDatabaseTransparentDataEncryptions(), this);
        }
        return managedDatabaseTransparentDataEncryptions;
    }

    /** @return Resource collection API of ManagedDatabaseVulnerabilityAssessmentRuleBaselines. */
    public ManagedDatabaseVulnerabilityAssessmentRuleBaselines managedDatabaseVulnerabilityAssessmentRuleBaselines() {
        if (this.managedDatabaseVulnerabilityAssessmentRuleBaselines == null) {
            this.managedDatabaseVulnerabilityAssessmentRuleBaselines =
                new ManagedDatabaseVulnerabilityAssessmentRuleBaselinesImpl(
                    clientObject.getManagedDatabaseVulnerabilityAssessmentRuleBaselines(), this);
        }
        return managedDatabaseVulnerabilityAssessmentRuleBaselines;
    }

    /** @return Resource collection API of ManagedDatabaseVulnerabilityAssessments. */
    public ManagedDatabaseVulnerabilityAssessments managedDatabaseVulnerabilityAssessments() {
        if (this.managedDatabaseVulnerabilityAssessments == null) {
            this.managedDatabaseVulnerabilityAssessments =
                new ManagedDatabaseVulnerabilityAssessmentsImpl(
                    clientObject.getManagedDatabaseVulnerabilityAssessments(), this);
        }
        return managedDatabaseVulnerabilityAssessments;
    }

    /** @return Resource collection API of ManagedDatabaseVulnerabilityAssessmentScans. */
    public ManagedDatabaseVulnerabilityAssessmentScans managedDatabaseVulnerabilityAssessmentScans() {
        if (this.managedDatabaseVulnerabilityAssessmentScans == null) {
            this.managedDatabaseVulnerabilityAssessmentScans =
                new ManagedDatabaseVulnerabilityAssessmentScansImpl(
                    clientObject.getManagedDatabaseVulnerabilityAssessmentScans(), this);
        }
        return managedDatabaseVulnerabilityAssessmentScans;
    }

    /** @return Resource collection API of ManagedInstanceAdministrators. */
    public ManagedInstanceAdministrators managedInstanceAdministrators() {
        if (this.managedInstanceAdministrators == null) {
            this.managedInstanceAdministrators =
                new ManagedInstanceAdministratorsImpl(clientObject.getManagedInstanceAdministrators(), this);
        }
        return managedInstanceAdministrators;
    }

    /** @return Resource collection API of ManagedInstanceAzureADOnlyAuthentications. */
    public ManagedInstanceAzureADOnlyAuthentications managedInstanceAzureADOnlyAuthentications() {
        if (this.managedInstanceAzureADOnlyAuthentications == null) {
            this.managedInstanceAzureADOnlyAuthentications =
                new ManagedInstanceAzureADOnlyAuthenticationsImpl(
                    clientObject.getManagedInstanceAzureADOnlyAuthentications(), this);
        }
        return managedInstanceAzureADOnlyAuthentications;
    }

    /** @return Resource collection API of ManagedInstanceEncryptionProtectors. */
    public ManagedInstanceEncryptionProtectors managedInstanceEncryptionProtectors() {
        if (this.managedInstanceEncryptionProtectors == null) {
            this.managedInstanceEncryptionProtectors =
                new ManagedInstanceEncryptionProtectorsImpl(
                    clientObject.getManagedInstanceEncryptionProtectors(), this);
        }
        return managedInstanceEncryptionProtectors;
    }

    /** @return Resource collection API of ManagedInstanceKeys. */
    public ManagedInstanceKeys managedInstanceKeys() {
        if (this.managedInstanceKeys == null) {
            this.managedInstanceKeys = new ManagedInstanceKeysImpl(clientObject.getManagedInstanceKeys(), this);
        }
        return managedInstanceKeys;
    }

    /** @return Resource collection API of ManagedInstanceLongTermRetentionPolicies. */
    public ManagedInstanceLongTermRetentionPolicies managedInstanceLongTermRetentionPolicies() {
        if (this.managedInstanceLongTermRetentionPolicies == null) {
            this.managedInstanceLongTermRetentionPolicies =
                new ManagedInstanceLongTermRetentionPoliciesImpl(
                    clientObject.getManagedInstanceLongTermRetentionPolicies(), this);
        }
        return managedInstanceLongTermRetentionPolicies;
    }

    /** @return Resource collection API of ManagedInstanceOperations. */
    public ManagedInstanceOperations managedInstanceOperations() {
        if (this.managedInstanceOperations == null) {
            this.managedInstanceOperations =
                new ManagedInstanceOperationsImpl(clientObject.getManagedInstanceOperations(), this);
        }
        return managedInstanceOperations;
    }

    /** @return Resource collection API of ManagedInstancePrivateEndpointConnections. */
    public ManagedInstancePrivateEndpointConnections managedInstancePrivateEndpointConnections() {
        if (this.managedInstancePrivateEndpointConnections == null) {
            this.managedInstancePrivateEndpointConnections =
                new ManagedInstancePrivateEndpointConnectionsImpl(
                    clientObject.getManagedInstancePrivateEndpointConnections(), this);
        }
        return managedInstancePrivateEndpointConnections;
    }

    /** @return Resource collection API of ManagedInstancePrivateLinkResources. */
    public ManagedInstancePrivateLinkResources managedInstancePrivateLinkResources() {
        if (this.managedInstancePrivateLinkResources == null) {
            this.managedInstancePrivateLinkResources =
                new ManagedInstancePrivateLinkResourcesImpl(
                    clientObject.getManagedInstancePrivateLinkResources(), this);
        }
        return managedInstancePrivateLinkResources;
    }

    /** @return Resource collection API of ManagedInstances. */
    public ManagedInstances managedInstances() {
        if (this.managedInstances == null) {
            this.managedInstances = new ManagedInstancesImpl(clientObject.getManagedInstances(), this);
        }
        return managedInstances;
    }

    /** @return Resource collection API of ManagedInstanceTdeCertificates. */
    public ManagedInstanceTdeCertificates managedInstanceTdeCertificates() {
        if (this.managedInstanceTdeCertificates == null) {
            this.managedInstanceTdeCertificates =
                new ManagedInstanceTdeCertificatesImpl(clientObject.getManagedInstanceTdeCertificates(), this);
        }
        return managedInstanceTdeCertificates;
    }

    /** @return Resource collection API of ManagedInstanceVulnerabilityAssessments. */
    public ManagedInstanceVulnerabilityAssessments managedInstanceVulnerabilityAssessments() {
        if (this.managedInstanceVulnerabilityAssessments == null) {
            this.managedInstanceVulnerabilityAssessments =
                new ManagedInstanceVulnerabilityAssessmentsImpl(
                    clientObject.getManagedInstanceVulnerabilityAssessments(), this);
        }
        return managedInstanceVulnerabilityAssessments;
    }

    /** @return Resource collection API of ManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies. */
    public ManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies
        managedRestorableDroppedDatabaseBackupShortTermRetentionPolicies() {
        if (this.managedRestorableDroppedDatabaseBackupShortTermRetentionPolicies == null) {
            this.managedRestorableDroppedDatabaseBackupShortTermRetentionPolicies =
                new ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesImpl(
                    clientObject.getManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies(), this);
        }
        return managedRestorableDroppedDatabaseBackupShortTermRetentionPolicies;
    }

    /** @return Resource collection API of ManagedServerSecurityAlertPolicies. */
    public ManagedServerSecurityAlertPolicies managedServerSecurityAlertPolicies() {
        if (this.managedServerSecurityAlertPolicies == null) {
            this.managedServerSecurityAlertPolicies =
                new ManagedServerSecurityAlertPoliciesImpl(clientObject.getManagedServerSecurityAlertPolicies(), this);
        }
        return managedServerSecurityAlertPolicies;
    }

    /** @return Resource collection API of Operations. */
    public Operations operations() {
        if (this.operations == null) {
            this.operations = new OperationsImpl(clientObject.getOperations(), this);
        }
        return operations;
    }

    /** @return Resource collection API of OperationsHealths. */
    public OperationsHealths operationsHealths() {
        if (this.operationsHealths == null) {
            this.operationsHealths = new OperationsHealthsImpl(clientObject.getOperationsHealths(), this);
        }
        return operationsHealths;
    }

    /** @return Resource collection API of PrivateEndpointConnections. */
    public PrivateEndpointConnections privateEndpointConnections() {
        if (this.privateEndpointConnections == null) {
            this.privateEndpointConnections =
                new PrivateEndpointConnectionsImpl(clientObject.getPrivateEndpointConnections(), this);
        }
        return privateEndpointConnections;
    }

    /** @return Resource collection API of PrivateLinkResources. */
    public PrivateLinkResources privateLinkResources() {
        if (this.privateLinkResources == null) {
            this.privateLinkResources = new PrivateLinkResourcesImpl(clientObject.getPrivateLinkResources(), this);
        }
        return privateLinkResources;
    }

    /** @return Resource collection API of RecoverableManagedDatabases. */
    public RecoverableManagedDatabases recoverableManagedDatabases() {
        if (this.recoverableManagedDatabases == null) {
            this.recoverableManagedDatabases =
                new RecoverableManagedDatabasesImpl(clientObject.getRecoverableManagedDatabases(), this);
        }
        return recoverableManagedDatabases;
    }

    /** @return Resource collection API of RestorePoints. */
    public RestorePoints restorePoints() {
        if (this.restorePoints == null) {
            this.restorePoints = new RestorePointsImpl(clientObject.getRestorePoints(), this);
        }
        return restorePoints;
    }

    /** @return Resource collection API of SensitivityLabels. */
    public SensitivityLabels sensitivityLabels() {
        if (this.sensitivityLabels == null) {
            this.sensitivityLabels = new SensitivityLabelsImpl(clientObject.getSensitivityLabels(), this);
        }
        return sensitivityLabels;
    }

    /** @return Resource collection API of RecommendedSensitivityLabels. */
    public RecommendedSensitivityLabels recommendedSensitivityLabels() {
        if (this.recommendedSensitivityLabels == null) {
            this.recommendedSensitivityLabels =
                new RecommendedSensitivityLabelsImpl(clientObject.getRecommendedSensitivityLabels(), this);
        }
        return recommendedSensitivityLabels;
    }

    /** @return Resource collection API of ServerAdvisors. */
    public ServerAdvisors serverAdvisors() {
        if (this.serverAdvisors == null) {
            this.serverAdvisors = new ServerAdvisorsImpl(clientObject.getServerAdvisors(), this);
        }
        return serverAdvisors;
    }

    /** @return Resource collection API of ServerAutomaticTunings. */
    public ServerAutomaticTunings serverAutomaticTunings() {
        if (this.serverAutomaticTunings == null) {
            this.serverAutomaticTunings =
                new ServerAutomaticTuningsImpl(clientObject.getServerAutomaticTunings(), this);
        }
        return serverAutomaticTunings;
    }

    /** @return Resource collection API of ServerAzureADAdministrators. */
    public ServerAzureADAdministrators serverAzureADAdministrators() {
        if (this.serverAzureADAdministrators == null) {
            this.serverAzureADAdministrators =
                new ServerAzureADAdministratorsImpl(clientObject.getServerAzureADAdministrators(), this);
        }
        return serverAzureADAdministrators;
    }

    /** @return Resource collection API of ServerAzureADOnlyAuthentications. */
    public ServerAzureADOnlyAuthentications serverAzureADOnlyAuthentications() {
        if (this.serverAzureADOnlyAuthentications == null) {
            this.serverAzureADOnlyAuthentications =
                new ServerAzureADOnlyAuthenticationsImpl(clientObject.getServerAzureADOnlyAuthentications(), this);
        }
        return serverAzureADOnlyAuthentications;
    }

    /** @return Resource collection API of ServerDevOpsAuditSettings. */
    public ServerDevOpsAuditSettings serverDevOpsAuditSettings() {
        if (this.serverDevOpsAuditSettings == null) {
            this.serverDevOpsAuditSettings =
                new ServerDevOpsAuditSettingsImpl(clientObject.getServerDevOpsAuditSettings(), this);
        }
        return serverDevOpsAuditSettings;
    }

    /** @return Resource collection API of ServerDnsAliases. */
    public ServerDnsAliases serverDnsAliases() {
        if (this.serverDnsAliases == null) {
            this.serverDnsAliases = new ServerDnsAliasesImpl(clientObject.getServerDnsAliases(), this);
        }
        return serverDnsAliases;
    }

    /** @return Resource collection API of ServerKeys. */
    public ServerKeys serverKeys() {
        if (this.serverKeys == null) {
            this.serverKeys = new ServerKeysImpl(clientObject.getServerKeys(), this);
        }
        return serverKeys;
    }

    /** @return Resource collection API of ServerOperations. */
    public ServerOperations serverOperations() {
        if (this.serverOperations == null) {
            this.serverOperations = new ServerOperationsImpl(clientObject.getServerOperations(), this);
        }
        return serverOperations;
    }

    /** @return Resource collection API of ServerSecurityAlertPolicies. */
    public ServerSecurityAlertPolicies serverSecurityAlertPolicies() {
        if (this.serverSecurityAlertPolicies == null) {
            this.serverSecurityAlertPolicies =
                new ServerSecurityAlertPoliciesImpl(clientObject.getServerSecurityAlertPolicies(), this);
        }
        return serverSecurityAlertPolicies;
    }

    /** @return Resource collection API of ServerTrustGroups. */
    public ServerTrustGroups serverTrustGroups() {
        if (this.serverTrustGroups == null) {
            this.serverTrustGroups = new ServerTrustGroupsImpl(clientObject.getServerTrustGroups(), this);
        }
        return serverTrustGroups;
    }

    /** @return Resource collection API of ServerVulnerabilityAssessments. */
    public ServerVulnerabilityAssessments serverVulnerabilityAssessments() {
        if (this.serverVulnerabilityAssessments == null) {
            this.serverVulnerabilityAssessments =
                new ServerVulnerabilityAssessmentsImpl(clientObject.getServerVulnerabilityAssessments(), this);
        }
        return serverVulnerabilityAssessments;
    }

    /** @return Resource collection API of SqlAgents. */
    public SqlAgents sqlAgents() {
        if (this.sqlAgents == null) {
            this.sqlAgents = new SqlAgentsImpl(clientObject.getSqlAgents(), this);
        }
        return sqlAgents;
    }

    /** @return Resource collection API of SubscriptionUsages. */
    public SubscriptionUsages subscriptionUsages() {
        if (this.subscriptionUsages == null) {
            this.subscriptionUsages = new SubscriptionUsagesImpl(clientObject.getSubscriptionUsages(), this);
        }
        return subscriptionUsages;
    }

    /** @return Resource collection API of SyncAgents. */
    public SyncAgents syncAgents() {
        if (this.syncAgents == null) {
            this.syncAgents = new SyncAgentsImpl(clientObject.getSyncAgents(), this);
        }
        return syncAgents;
    }

    /** @return Resource collection API of SyncGroups. */
    public SyncGroups syncGroups() {
        if (this.syncGroups == null) {
            this.syncGroups = new SyncGroupsImpl(clientObject.getSyncGroups(), this);
        }
        return syncGroups;
    }

    /** @return Resource collection API of SyncMembers. */
    public SyncMembers syncMembers() {
        if (this.syncMembers == null) {
            this.syncMembers = new SyncMembersImpl(clientObject.getSyncMembers(), this);
        }
        return syncMembers;
    }

    /** @return Resource collection API of TdeCertificates. */
    public TdeCertificates tdeCertificates() {
        if (this.tdeCertificates == null) {
            this.tdeCertificates = new TdeCertificatesImpl(clientObject.getTdeCertificates(), this);
        }
        return tdeCertificates;
    }

    /** @return Resource collection API of TimeZones. */
    public TimeZones timeZones() {
        if (this.timeZones == null) {
            this.timeZones = new TimeZonesImpl(clientObject.getTimeZones(), this);
        }
        return timeZones;
    }

    /** @return Resource collection API of VirtualClusters. */
    public VirtualClusters virtualClusters() {
        if (this.virtualClusters == null) {
            this.virtualClusters = new VirtualClustersImpl(clientObject.getVirtualClusters(), this);
        }
        return virtualClusters;
    }

    /** @return Resource collection API of VirtualNetworkRules. */
    public VirtualNetworkRules virtualNetworkRules() {
        if (this.virtualNetworkRules == null) {
            this.virtualNetworkRules = new VirtualNetworkRulesImpl(clientObject.getVirtualNetworkRules(), this);
        }
        return virtualNetworkRules;
    }

    /** @return Resource collection API of WorkloadClassifiers. */
    public WorkloadClassifiers workloadClassifiers() {
        if (this.workloadClassifiers == null) {
            this.workloadClassifiers = new WorkloadClassifiersImpl(clientObject.getWorkloadClassifiers(), this);
        }
        return workloadClassifiers;
    }

    /** @return Resource collection API of WorkloadGroups. */
    public WorkloadGroups workloadGroups() {
        if (this.workloadGroups == null) {
            this.workloadGroups = new WorkloadGroupsImpl(clientObject.getWorkloadGroups(), this);
        }
        return workloadGroups;
    }

    /** @return Resource collection API of BackupShortTermRetentionPolicies. */
    public BackupShortTermRetentionPolicies backupShortTermRetentionPolicies() {
        if (this.backupShortTermRetentionPolicies == null) {
            this.backupShortTermRetentionPolicies =
                new BackupShortTermRetentionPoliciesImpl(clientObject.getBackupShortTermRetentionPolicies(), this);
        }
        return backupShortTermRetentionPolicies;
    }

    /** @return Resource collection API of DatabaseExtensionsOperations. */
    public DatabaseExtensionsOperations databaseExtensionsOperations() {
        if (this.databaseExtensionsOperations == null) {
            this.databaseExtensionsOperations =
                new DatabaseExtensionsOperationsImpl(clientObject.getDatabaseExtensionsOperations(), this);
        }
        return databaseExtensionsOperations;
    }

    /** @return Resource collection API of DatabaseOperations. */
    public DatabaseOperations databaseOperations() {
        if (this.databaseOperations == null) {
            this.databaseOperations = new DatabaseOperationsImpl(clientObject.getDatabaseOperations(), this);
        }
        return databaseOperations;
    }

    /** @return Resource collection API of DatabaseUsages. */
    public DatabaseUsages databaseUsages() {
        if (this.databaseUsages == null) {
            this.databaseUsages = new DatabaseUsagesImpl(clientObject.getDatabaseUsages(), this);
        }
        return databaseUsages;
    }

    /** @return Resource collection API of LedgerDigestUploadsOperations. */
    public LedgerDigestUploadsOperations ledgerDigestUploadsOperations() {
        if (this.ledgerDigestUploadsOperations == null) {
            this.ledgerDigestUploadsOperations =
                new LedgerDigestUploadsOperationsImpl(clientObject.getLedgerDigestUploadsOperations(), this);
        }
        return ledgerDigestUploadsOperations;
    }

    /** @return Resource collection API of OutboundFirewallRules. */
    public OutboundFirewallRules outboundFirewallRules() {
        if (this.outboundFirewallRules == null) {
            this.outboundFirewallRules = new OutboundFirewallRulesImpl(clientObject.getOutboundFirewallRules(), this);
        }
        return outboundFirewallRules;
    }

    /** @return Resource collection API of RestorableDroppedDatabases. */
    public RestorableDroppedDatabases restorableDroppedDatabases() {
        if (this.restorableDroppedDatabases == null) {
            this.restorableDroppedDatabases =
                new RestorableDroppedDatabasesImpl(clientObject.getRestorableDroppedDatabases(), this);
        }
        return restorableDroppedDatabases;
    }

    /** @return Resource collection API of RestorableDroppedManagedDatabases. */
    public RestorableDroppedManagedDatabases restorableDroppedManagedDatabases() {
        if (this.restorableDroppedManagedDatabases == null) {
            this.restorableDroppedManagedDatabases =
                new RestorableDroppedManagedDatabasesImpl(clientObject.getRestorableDroppedManagedDatabases(), this);
        }
        return restorableDroppedManagedDatabases;
    }

    /** @return Resource collection API of Servers. */
    public Servers servers() {
        if (this.servers == null) {
            this.servers = new ServersImpl(clientObject.getServers(), this);
        }
        return servers;
    }

    /** @return Resource collection API of Usages. */
    public Usages usages() {
        if (this.usages == null) {
            this.usages = new UsagesImpl(clientObject.getUsages(), this);
        }
        return usages;
    }

    /**
     * @return Wrapped service client SqlManagementClient providing direct access to the underlying auto-generated API
     *     implementation, based on Azure REST API.
     */
    public SqlManagementClient serviceClient() {
        return this.clientObject;
    }
}
