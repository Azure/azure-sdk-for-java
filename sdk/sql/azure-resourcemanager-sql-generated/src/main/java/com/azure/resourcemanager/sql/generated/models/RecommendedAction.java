// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.models;

import com.azure.resourcemanager.sql.generated.fluent.models.RecommendedActionInner;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of RecommendedAction. */
public interface RecommendedAction {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the kind property: Resource kind.
     *
     * @return the kind value.
     */
    String kind();

    /**
     * Gets the location property: Resource location.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the recommendationReason property: Gets the reason for recommending this action. e.g., DuplicateIndex.
     *
     * @return the recommendationReason value.
     */
    String recommendationReason();

    /**
     * Gets the validSince property: Gets the time since when this recommended action is valid.
     *
     * @return the validSince value.
     */
    OffsetDateTime validSince();

    /**
     * Gets the lastRefresh property: Gets time when this recommended action was last refreshed.
     *
     * @return the lastRefresh value.
     */
    OffsetDateTime lastRefresh();

    /**
     * Gets the state property: Gets the info of the current state the recommended action is in.
     *
     * @return the state value.
     */
    RecommendedActionStateInfo state();

    /**
     * Gets the isExecutableAction property: Gets if this recommended action is actionable by user.
     *
     * @return the isExecutableAction value.
     */
    Boolean isExecutableAction();

    /**
     * Gets the isRevertableAction property: Gets if changes applied by this recommended action can be reverted by user.
     *
     * @return the isRevertableAction value.
     */
    Boolean isRevertableAction();

    /**
     * Gets the isArchivedAction property: Gets if this recommended action was suggested some time ago but user chose to
     * ignore this and system added a new recommended action again.
     *
     * @return the isArchivedAction value.
     */
    Boolean isArchivedAction();

    /**
     * Gets the executeActionStartTime property: Gets the time when system started applying this recommended action on
     * the user resource. e.g., index creation start time.
     *
     * @return the executeActionStartTime value.
     */
    OffsetDateTime executeActionStartTime();

    /**
     * Gets the executeActionDuration property: Gets the time taken for applying this recommended action on user
     * resource. e.g., time taken for index creation.
     *
     * @return the executeActionDuration value.
     */
    String executeActionDuration();

    /**
     * Gets the revertActionStartTime property: Gets the time when system started reverting changes of this recommended
     * action on user resource. e.g., time when index drop is executed.
     *
     * @return the revertActionStartTime value.
     */
    OffsetDateTime revertActionStartTime();

    /**
     * Gets the revertActionDuration property: Gets the time taken for reverting changes of this recommended action on
     * user resource. e.g., time taken for dropping the created index.
     *
     * @return the revertActionDuration value.
     */
    String revertActionDuration();

    /**
     * Gets the executeActionInitiatedBy property: Gets if approval for applying this recommended action was given by
     * user/system.
     *
     * @return the executeActionInitiatedBy value.
     */
    RecommendedActionInitiatedBy executeActionInitiatedBy();

    /**
     * Gets the executeActionInitiatedTime property: Gets the time when this recommended action was approved for
     * execution.
     *
     * @return the executeActionInitiatedTime value.
     */
    OffsetDateTime executeActionInitiatedTime();

    /**
     * Gets the revertActionInitiatedBy property: Gets if approval for reverting this recommended action was given by
     * user/system.
     *
     * @return the revertActionInitiatedBy value.
     */
    RecommendedActionInitiatedBy revertActionInitiatedBy();

    /**
     * Gets the revertActionInitiatedTime property: Gets the time when this recommended action was approved for revert.
     *
     * @return the revertActionInitiatedTime value.
     */
    OffsetDateTime revertActionInitiatedTime();

    /**
     * Gets the score property: Gets the impact of this recommended action. Possible values are 1 - Low impact, 2 -
     * Medium Impact and 3 - High Impact.
     *
     * @return the score value.
     */
    Integer score();

    /**
     * Gets the implementationDetails property: Gets the implementation details of this recommended action for user to
     * apply it manually.
     *
     * @return the implementationDetails value.
     */
    RecommendedActionImplementationInfo implementationDetails();

    /**
     * Gets the errorDetails property: Gets the error details if and why this recommended action is put to error state.
     *
     * @return the errorDetails value.
     */
    RecommendedActionErrorInfo errorDetails();

    /**
     * Gets the estimatedImpact property: Gets the estimated impact info for this recommended action e.g., Estimated CPU
     * gain, Estimated Disk Space change.
     *
     * @return the estimatedImpact value.
     */
    List<RecommendedActionImpactRecord> estimatedImpact();

    /**
     * Gets the observedImpact property: Gets the observed/actual impact info for this recommended action e.g., Actual
     * CPU gain, Actual Disk Space change.
     *
     * @return the observedImpact value.
     */
    List<RecommendedActionImpactRecord> observedImpact();

    /**
     * Gets the timeSeries property: Gets the time series info of metrics for this recommended action e.g., CPU
     * consumption time series.
     *
     * @return the timeSeries value.
     */
    List<RecommendedActionMetricInfo> timeSeries();

    /**
     * Gets the linkedObjects property: Gets the linked objects, if any.
     *
     * @return the linkedObjects value.
     */
    List<String> linkedObjects();

    /**
     * Gets the details property: Gets additional details specific to this recommended action.
     *
     * @return the details value.
     */
    Map<String, Object> details();

    /**
     * Gets the inner com.azure.resourcemanager.sql.generated.fluent.models.RecommendedActionInner object.
     *
     * @return the inner object.
     */
    RecommendedActionInner innerModel();
}
