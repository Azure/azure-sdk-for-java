// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.SqlManager;
import com.azure.resourcemanager.sql.generated.fluent.models.ManagedInstanceKeyInner;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceKey;
import com.azure.resourcemanager.sql.generated.models.ServerKeyType;
import java.time.OffsetDateTime;

public final class ManagedInstanceKeyImpl
    implements ManagedInstanceKey, ManagedInstanceKey.Definition, ManagedInstanceKey.Update {
    private ManagedInstanceKeyInner innerObject;

    private final SqlManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String kind() {
        return this.innerModel().kind();
    }

    public ServerKeyType serverKeyType() {
        return this.innerModel().serverKeyType();
    }

    public String uri() {
        return this.innerModel().uri();
    }

    public String thumbprint() {
        return this.innerModel().thumbprint();
    }

    public OffsetDateTime creationDate() {
        return this.innerModel().creationDate();
    }

    public ManagedInstanceKeyInner innerModel() {
        return this.innerObject;
    }

    private SqlManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String managedInstanceName;

    private String keyName;

    public ManagedInstanceKeyImpl withExistingManagedInstance(String resourceGroupName, String managedInstanceName) {
        this.resourceGroupName = resourceGroupName;
        this.managedInstanceName = managedInstanceName;
        return this;
    }

    public ManagedInstanceKey create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedInstanceKeys()
                .createOrUpdate(resourceGroupName, managedInstanceName, keyName, this.innerModel(), Context.NONE);
        return this;
    }

    public ManagedInstanceKey create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedInstanceKeys()
                .createOrUpdate(resourceGroupName, managedInstanceName, keyName, this.innerModel(), context);
        return this;
    }

    public ManagedInstanceKeyImpl(String name, SqlManager serviceManager) {
        this.innerObject = new ManagedInstanceKeyInner();
        this.serviceManager = serviceManager;
        this.keyName = name;
    }

    public ManagedInstanceKeyImpl update() {
        return this;
    }

    public ManagedInstanceKey apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedInstanceKeys()
                .createOrUpdate(resourceGroupName, managedInstanceName, keyName, this.innerModel(), Context.NONE);
        return this;
    }

    public ManagedInstanceKey apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedInstanceKeys()
                .createOrUpdate(resourceGroupName, managedInstanceName, keyName, this.innerModel(), context);
        return this;
    }

    public ManagedInstanceKeyImpl(ManagedInstanceKeyInner innerObject, SqlManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.managedInstanceName = Utils.getValueFromIdByName(innerObject.id(), "managedInstances");
        this.keyName = Utils.getValueFromIdByName(innerObject.id(), "keys");
    }

    public ManagedInstanceKey refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedInstanceKeys()
                .getWithResponse(resourceGroupName, managedInstanceName, keyName, Context.NONE)
                .getValue();
        return this;
    }

    public ManagedInstanceKey refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedInstanceKeys()
                .getWithResponse(resourceGroupName, managedInstanceName, keyName, context)
                .getValue();
        return this;
    }

    public ManagedInstanceKeyImpl withServerKeyType(ServerKeyType serverKeyType) {
        this.innerModel().withServerKeyType(serverKeyType);
        return this;
    }

    public ManagedInstanceKeyImpl withUri(String uri) {
        this.innerModel().withUri(uri);
        return this;
    }
}
