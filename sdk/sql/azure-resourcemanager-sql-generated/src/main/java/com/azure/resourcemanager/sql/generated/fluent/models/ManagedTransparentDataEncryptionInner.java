// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.sql.generated.models.TransparentDataEncryptionState;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** A managed database transparent data encryption state. */
@JsonFlatten
@Fluent
public class ManagedTransparentDataEncryptionInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ManagedTransparentDataEncryptionInner.class);

    /*
     * Specifies the state of the transparent data encryption.
     */
    @JsonProperty(value = "properties.state")
    private TransparentDataEncryptionState state;

    /**
     * Get the state property: Specifies the state of the transparent data encryption.
     *
     * @return the state value.
     */
    public TransparentDataEncryptionState state() {
        return this.state;
    }

    /**
     * Set the state property: Specifies the state of the transparent data encryption.
     *
     * @param state the state value to set.
     * @return the ManagedTransparentDataEncryptionInner object itself.
     */
    public ManagedTransparentDataEncryptionInner withState(TransparentDataEncryptionState state) {
        this.state = state;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
