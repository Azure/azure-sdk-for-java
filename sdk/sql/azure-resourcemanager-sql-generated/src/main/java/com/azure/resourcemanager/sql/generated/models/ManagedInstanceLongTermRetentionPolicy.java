// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.fluent.models.ManagedInstanceLongTermRetentionPolicyInner;

/** An immutable client-side representation of ManagedInstanceLongTermRetentionPolicy. */
public interface ManagedInstanceLongTermRetentionPolicy {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the weeklyRetention property: The weekly retention policy for an LTR backup in an ISO 8601 format.
     *
     * @return the weeklyRetention value.
     */
    String weeklyRetention();

    /**
     * Gets the monthlyRetention property: The monthly retention policy for an LTR backup in an ISO 8601 format.
     *
     * @return the monthlyRetention value.
     */
    String monthlyRetention();

    /**
     * Gets the yearlyRetention property: The yearly retention policy for an LTR backup in an ISO 8601 format.
     *
     * @return the yearlyRetention value.
     */
    String yearlyRetention();

    /**
     * Gets the weekOfYear property: The week of year to take the yearly backup in an ISO 8601 format.
     *
     * @return the weekOfYear value.
     */
    Integer weekOfYear();

    /**
     * Gets the inner com.azure.resourcemanager.sql.generated.fluent.models.ManagedInstanceLongTermRetentionPolicyInner
     * object.
     *
     * @return the inner object.
     */
    ManagedInstanceLongTermRetentionPolicyInner innerModel();

    /** The entirety of the ManagedInstanceLongTermRetentionPolicy definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The ManagedInstanceLongTermRetentionPolicy definition stages. */
    interface DefinitionStages {
        /** The first stage of the ManagedInstanceLongTermRetentionPolicy definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the ManagedInstanceLongTermRetentionPolicy definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, managedInstanceName, databaseName.
             *
             * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this
             *     value from the Azure Resource Manager API or the portal.
             * @param managedInstanceName The name of the managed instance.
             * @param databaseName The name of the database.
             * @return the next definition stage.
             */
            WithCreate withExistingDatabase(String resourceGroupName, String managedInstanceName, String databaseName);
        }
        /**
         * The stage of the ManagedInstanceLongTermRetentionPolicy definition which contains all the minimum required
         * properties for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithWeeklyRetention,
                DefinitionStages.WithMonthlyRetention,
                DefinitionStages.WithYearlyRetention,
                DefinitionStages.WithWeekOfYear {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            ManagedInstanceLongTermRetentionPolicy create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ManagedInstanceLongTermRetentionPolicy create(Context context);
        }
        /** The stage of the ManagedInstanceLongTermRetentionPolicy definition allowing to specify weeklyRetention. */
        interface WithWeeklyRetention {
            /**
             * Specifies the weeklyRetention property: The weekly retention policy for an LTR backup in an ISO 8601
             * format..
             *
             * @param weeklyRetention The weekly retention policy for an LTR backup in an ISO 8601 format.
             * @return the next definition stage.
             */
            WithCreate withWeeklyRetention(String weeklyRetention);
        }
        /** The stage of the ManagedInstanceLongTermRetentionPolicy definition allowing to specify monthlyRetention. */
        interface WithMonthlyRetention {
            /**
             * Specifies the monthlyRetention property: The monthly retention policy for an LTR backup in an ISO 8601
             * format..
             *
             * @param monthlyRetention The monthly retention policy for an LTR backup in an ISO 8601 format.
             * @return the next definition stage.
             */
            WithCreate withMonthlyRetention(String monthlyRetention);
        }
        /** The stage of the ManagedInstanceLongTermRetentionPolicy definition allowing to specify yearlyRetention. */
        interface WithYearlyRetention {
            /**
             * Specifies the yearlyRetention property: The yearly retention policy for an LTR backup in an ISO 8601
             * format..
             *
             * @param yearlyRetention The yearly retention policy for an LTR backup in an ISO 8601 format.
             * @return the next definition stage.
             */
            WithCreate withYearlyRetention(String yearlyRetention);
        }
        /** The stage of the ManagedInstanceLongTermRetentionPolicy definition allowing to specify weekOfYear. */
        interface WithWeekOfYear {
            /**
             * Specifies the weekOfYear property: The week of year to take the yearly backup in an ISO 8601 format..
             *
             * @param weekOfYear The week of year to take the yearly backup in an ISO 8601 format.
             * @return the next definition stage.
             */
            WithCreate withWeekOfYear(Integer weekOfYear);
        }
    }
    /**
     * Begins update for the ManagedInstanceLongTermRetentionPolicy resource.
     *
     * @return the stage of resource update.
     */
    ManagedInstanceLongTermRetentionPolicy.Update update();

    /** The template for ManagedInstanceLongTermRetentionPolicy update. */
    interface Update
        extends UpdateStages.WithWeeklyRetention,
            UpdateStages.WithMonthlyRetention,
            UpdateStages.WithYearlyRetention,
            UpdateStages.WithWeekOfYear {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        ManagedInstanceLongTermRetentionPolicy apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ManagedInstanceLongTermRetentionPolicy apply(Context context);
    }
    /** The ManagedInstanceLongTermRetentionPolicy update stages. */
    interface UpdateStages {
        /** The stage of the ManagedInstanceLongTermRetentionPolicy update allowing to specify weeklyRetention. */
        interface WithWeeklyRetention {
            /**
             * Specifies the weeklyRetention property: The weekly retention policy for an LTR backup in an ISO 8601
             * format..
             *
             * @param weeklyRetention The weekly retention policy for an LTR backup in an ISO 8601 format.
             * @return the next definition stage.
             */
            Update withWeeklyRetention(String weeklyRetention);
        }
        /** The stage of the ManagedInstanceLongTermRetentionPolicy update allowing to specify monthlyRetention. */
        interface WithMonthlyRetention {
            /**
             * Specifies the monthlyRetention property: The monthly retention policy for an LTR backup in an ISO 8601
             * format..
             *
             * @param monthlyRetention The monthly retention policy for an LTR backup in an ISO 8601 format.
             * @return the next definition stage.
             */
            Update withMonthlyRetention(String monthlyRetention);
        }
        /** The stage of the ManagedInstanceLongTermRetentionPolicy update allowing to specify yearlyRetention. */
        interface WithYearlyRetention {
            /**
             * Specifies the yearlyRetention property: The yearly retention policy for an LTR backup in an ISO 8601
             * format..
             *
             * @param yearlyRetention The yearly retention policy for an LTR backup in an ISO 8601 format.
             * @return the next definition stage.
             */
            Update withYearlyRetention(String yearlyRetention);
        }
        /** The stage of the ManagedInstanceLongTermRetentionPolicy update allowing to specify weekOfYear. */
        interface WithWeekOfYear {
            /**
             * Specifies the weekOfYear property: The week of year to take the yearly backup in an ISO 8601 format..
             *
             * @param weekOfYear The week of year to take the yearly backup in an ISO 8601 format.
             * @return the next definition stage.
             */
            Update withWeekOfYear(Integer weekOfYear);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    ManagedInstanceLongTermRetentionPolicy refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ManagedInstanceLongTermRetentionPolicy refresh(Context context);
}
