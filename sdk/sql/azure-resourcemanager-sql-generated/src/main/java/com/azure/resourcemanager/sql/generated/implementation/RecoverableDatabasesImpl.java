// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.sql.generated.SqlManager;
import com.azure.resourcemanager.sql.generated.fluent.RecoverableDatabasesClient;
import com.azure.resourcemanager.sql.generated.fluent.models.RecoverableDatabaseInner;
import com.azure.resourcemanager.sql.generated.models.RecoverableDatabase;
import com.azure.resourcemanager.sql.generated.models.RecoverableDatabases;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class RecoverableDatabasesImpl implements RecoverableDatabases {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(RecoverableDatabasesImpl.class);

    private final RecoverableDatabasesClient innerClient;

    private final SqlManager serviceManager;

    public RecoverableDatabasesImpl(RecoverableDatabasesClient innerClient, SqlManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public RecoverableDatabase get(String resourceGroupName, String serverName, String databaseName) {
        RecoverableDatabaseInner inner = this.serviceClient().get(resourceGroupName, serverName, databaseName);
        if (inner != null) {
            return new RecoverableDatabaseImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<RecoverableDatabase> getWithResponse(
        String resourceGroupName, String serverName, String databaseName, Context context) {
        Response<RecoverableDatabaseInner> inner =
            this.serviceClient().getWithResponse(resourceGroupName, serverName, databaseName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new RecoverableDatabaseImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public PagedIterable<RecoverableDatabase> listByServer(String resourceGroupName, String serverName) {
        PagedIterable<RecoverableDatabaseInner> inner =
            this.serviceClient().listByServer(resourceGroupName, serverName);
        return inner.mapPage(inner1 -> new RecoverableDatabaseImpl(inner1, this.manager()));
    }

    public PagedIterable<RecoverableDatabase> listByServer(
        String resourceGroupName, String serverName, Context context) {
        PagedIterable<RecoverableDatabaseInner> inner =
            this.serviceClient().listByServer(resourceGroupName, serverName, context);
        return inner.mapPage(inner1 -> new RecoverableDatabaseImpl(inner1, this.manager()));
    }

    private RecoverableDatabasesClient serviceClient() {
        return this.innerClient;
    }

    private SqlManager manager() {
        return this.serviceManager;
    }
}
