// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.fluent.models.ManagedInstanceKeyInner;
import java.time.OffsetDateTime;

/** An immutable client-side representation of ManagedInstanceKey. */
public interface ManagedInstanceKey {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the kind property: Kind of encryption protector. This is metadata used for the Azure portal experience.
     *
     * @return the kind value.
     */
    String kind();

    /**
     * Gets the serverKeyType property: The key type like 'ServiceManaged', 'AzureKeyVault'.
     *
     * @return the serverKeyType value.
     */
    ServerKeyType serverKeyType();

    /**
     * Gets the uri property: The URI of the key. If the ServerKeyType is AzureKeyVault, then the URI is required.
     *
     * @return the uri value.
     */
    String uri();

    /**
     * Gets the thumbprint property: Thumbprint of the key.
     *
     * @return the thumbprint value.
     */
    String thumbprint();

    /**
     * Gets the creationDate property: The key creation date.
     *
     * @return the creationDate value.
     */
    OffsetDateTime creationDate();

    /**
     * Gets the autoRotationEnabled property: Key auto rotation opt-in flag. Either true or false.
     *
     * @return the autoRotationEnabled value.
     */
    Boolean autoRotationEnabled();

    /**
     * Gets the inner com.azure.resourcemanager.sql.generated.fluent.models.ManagedInstanceKeyInner object.
     *
     * @return the inner object.
     */
    ManagedInstanceKeyInner innerModel();

    /** The entirety of the ManagedInstanceKey definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The ManagedInstanceKey definition stages. */
    interface DefinitionStages {
        /** The first stage of the ManagedInstanceKey definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the ManagedInstanceKey definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, managedInstanceName.
             *
             * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this
             *     value from the Azure Resource Manager API or the portal.
             * @param managedInstanceName The name of the managed instance.
             * @return the next definition stage.
             */
            WithCreate withExistingManagedInstance(String resourceGroupName, String managedInstanceName);
        }
        /**
         * The stage of the ManagedInstanceKey definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithServerKeyType, DefinitionStages.WithUri {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            ManagedInstanceKey create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ManagedInstanceKey create(Context context);
        }
        /** The stage of the ManagedInstanceKey definition allowing to specify serverKeyType. */
        interface WithServerKeyType {
            /**
             * Specifies the serverKeyType property: The key type like 'ServiceManaged', 'AzureKeyVault'..
             *
             * @param serverKeyType The key type like 'ServiceManaged', 'AzureKeyVault'.
             * @return the next definition stage.
             */
            WithCreate withServerKeyType(ServerKeyType serverKeyType);
        }
        /** The stage of the ManagedInstanceKey definition allowing to specify uri. */
        interface WithUri {
            /**
             * Specifies the uri property: The URI of the key. If the ServerKeyType is AzureKeyVault, then the URI is
             * required..
             *
             * @param uri The URI of the key. If the ServerKeyType is AzureKeyVault, then the URI is required.
             * @return the next definition stage.
             */
            WithCreate withUri(String uri);
        }
    }
    /**
     * Begins update for the ManagedInstanceKey resource.
     *
     * @return the stage of resource update.
     */
    ManagedInstanceKey.Update update();

    /** The template for ManagedInstanceKey update. */
    interface Update extends UpdateStages.WithServerKeyType, UpdateStages.WithUri {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        ManagedInstanceKey apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ManagedInstanceKey apply(Context context);
    }
    /** The ManagedInstanceKey update stages. */
    interface UpdateStages {
        /** The stage of the ManagedInstanceKey update allowing to specify serverKeyType. */
        interface WithServerKeyType {
            /**
             * Specifies the serverKeyType property: The key type like 'ServiceManaged', 'AzureKeyVault'..
             *
             * @param serverKeyType The key type like 'ServiceManaged', 'AzureKeyVault'.
             * @return the next definition stage.
             */
            Update withServerKeyType(ServerKeyType serverKeyType);
        }
        /** The stage of the ManagedInstanceKey update allowing to specify uri. */
        interface WithUri {
            /**
             * Specifies the uri property: The URI of the key. If the ServerKeyType is AzureKeyVault, then the URI is
             * required..
             *
             * @param uri The URI of the key. If the ServerKeyType is AzureKeyVault, then the URI is required.
             * @return the next definition stage.
             */
            Update withUri(String uri);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    ManagedInstanceKey refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ManagedInstanceKey refresh(Context context);
}
