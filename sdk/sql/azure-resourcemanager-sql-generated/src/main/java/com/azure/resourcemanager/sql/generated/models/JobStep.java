// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.fluent.models.JobStepInner;

/** An immutable client-side representation of JobStep. */
public interface JobStep {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the stepId property: The job step's index within the job. If not specified when creating the job step, it
     * will be created as the last step. If not specified when updating the job step, the step id is not modified.
     *
     * @return the stepId value.
     */
    Integer stepId();

    /**
     * Gets the targetGroup property: The resource ID of the target group that the job step will be executed on.
     *
     * @return the targetGroup value.
     */
    String targetGroup();

    /**
     * Gets the credential property: The resource ID of the job credential that will be used to connect to the targets.
     *
     * @return the credential value.
     */
    String credential();

    /**
     * Gets the action property: The action payload of the job step.
     *
     * @return the action value.
     */
    JobStepAction action();

    /**
     * Gets the output property: Output destination properties of the job step.
     *
     * @return the output value.
     */
    JobStepOutput output();

    /**
     * Gets the executionOptions property: Execution options for the job step.
     *
     * @return the executionOptions value.
     */
    JobStepExecutionOptions executionOptions();

    /**
     * Gets the inner com.azure.resourcemanager.sql.generated.fluent.models.JobStepInner object.
     *
     * @return the inner object.
     */
    JobStepInner innerModel();

    /** The entirety of the JobStep definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The JobStep definition stages. */
    interface DefinitionStages {
        /** The first stage of the JobStep definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the JobStep definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, serverName, jobAgentName, jobName.
             *
             * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this
             *     value from the Azure Resource Manager API or the portal.
             * @param serverName The name of the server.
             * @param jobAgentName The name of the job agent.
             * @param jobName The name of the job.
             * @return the next definition stage.
             */
            WithCreate withExistingJob(
                String resourceGroupName, String serverName, String jobAgentName, String jobName);
        }
        /**
         * The stage of the JobStep definition which contains all the minimum required properties for the resource to be
         * created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithStepId,
                DefinitionStages.WithTargetGroup,
                DefinitionStages.WithCredential,
                DefinitionStages.WithAction,
                DefinitionStages.WithOutput,
                DefinitionStages.WithExecutionOptions {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            JobStep create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            JobStep create(Context context);
        }
        /** The stage of the JobStep definition allowing to specify stepId. */
        interface WithStepId {
            /**
             * Specifies the stepId property: The job step's index within the job. If not specified when creating the
             * job step, it will be created as the last step. If not specified when updating the job step, the step id
             * is not modified..
             *
             * @param stepId The job step's index within the job. If not specified when creating the job step, it will
             *     be created as the last step. If not specified when updating the job step, the step id is not
             *     modified.
             * @return the next definition stage.
             */
            WithCreate withStepId(Integer stepId);
        }
        /** The stage of the JobStep definition allowing to specify targetGroup. */
        interface WithTargetGroup {
            /**
             * Specifies the targetGroup property: The resource ID of the target group that the job step will be
             * executed on..
             *
             * @param targetGroup The resource ID of the target group that the job step will be executed on.
             * @return the next definition stage.
             */
            WithCreate withTargetGroup(String targetGroup);
        }
        /** The stage of the JobStep definition allowing to specify credential. */
        interface WithCredential {
            /**
             * Specifies the credential property: The resource ID of the job credential that will be used to connect to
             * the targets..
             *
             * @param credential The resource ID of the job credential that will be used to connect to the targets.
             * @return the next definition stage.
             */
            WithCreate withCredential(String credential);
        }
        /** The stage of the JobStep definition allowing to specify action. */
        interface WithAction {
            /**
             * Specifies the action property: The action payload of the job step..
             *
             * @param action The action payload of the job step.
             * @return the next definition stage.
             */
            WithCreate withAction(JobStepAction action);
        }
        /** The stage of the JobStep definition allowing to specify output. */
        interface WithOutput {
            /**
             * Specifies the output property: Output destination properties of the job step..
             *
             * @param output Output destination properties of the job step.
             * @return the next definition stage.
             */
            WithCreate withOutput(JobStepOutput output);
        }
        /** The stage of the JobStep definition allowing to specify executionOptions. */
        interface WithExecutionOptions {
            /**
             * Specifies the executionOptions property: Execution options for the job step..
             *
             * @param executionOptions Execution options for the job step.
             * @return the next definition stage.
             */
            WithCreate withExecutionOptions(JobStepExecutionOptions executionOptions);
        }
    }
    /**
     * Begins update for the JobStep resource.
     *
     * @return the stage of resource update.
     */
    JobStep.Update update();

    /** The template for JobStep update. */
    interface Update
        extends UpdateStages.WithStepId,
            UpdateStages.WithTargetGroup,
            UpdateStages.WithCredential,
            UpdateStages.WithAction,
            UpdateStages.WithOutput,
            UpdateStages.WithExecutionOptions {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        JobStep apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        JobStep apply(Context context);
    }
    /** The JobStep update stages. */
    interface UpdateStages {
        /** The stage of the JobStep update allowing to specify stepId. */
        interface WithStepId {
            /**
             * Specifies the stepId property: The job step's index within the job. If not specified when creating the
             * job step, it will be created as the last step. If not specified when updating the job step, the step id
             * is not modified..
             *
             * @param stepId The job step's index within the job. If not specified when creating the job step, it will
             *     be created as the last step. If not specified when updating the job step, the step id is not
             *     modified.
             * @return the next definition stage.
             */
            Update withStepId(Integer stepId);
        }
        /** The stage of the JobStep update allowing to specify targetGroup. */
        interface WithTargetGroup {
            /**
             * Specifies the targetGroup property: The resource ID of the target group that the job step will be
             * executed on..
             *
             * @param targetGroup The resource ID of the target group that the job step will be executed on.
             * @return the next definition stage.
             */
            Update withTargetGroup(String targetGroup);
        }
        /** The stage of the JobStep update allowing to specify credential. */
        interface WithCredential {
            /**
             * Specifies the credential property: The resource ID of the job credential that will be used to connect to
             * the targets..
             *
             * @param credential The resource ID of the job credential that will be used to connect to the targets.
             * @return the next definition stage.
             */
            Update withCredential(String credential);
        }
        /** The stage of the JobStep update allowing to specify action. */
        interface WithAction {
            /**
             * Specifies the action property: The action payload of the job step..
             *
             * @param action The action payload of the job step.
             * @return the next definition stage.
             */
            Update withAction(JobStepAction action);
        }
        /** The stage of the JobStep update allowing to specify output. */
        interface WithOutput {
            /**
             * Specifies the output property: Output destination properties of the job step..
             *
             * @param output Output destination properties of the job step.
             * @return the next definition stage.
             */
            Update withOutput(JobStepOutput output);
        }
        /** The stage of the JobStep update allowing to specify executionOptions. */
        interface WithExecutionOptions {
            /**
             * Specifies the executionOptions property: Execution options for the job step..
             *
             * @param executionOptions Execution options for the job step.
             * @return the next definition stage.
             */
            Update withExecutionOptions(JobStepExecutionOptions executionOptions);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    JobStep refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    JobStep refresh(Context context);
}
