// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.sql.generated.fluent.SqlAgentsClient;
import com.azure.resourcemanager.sql.generated.fluent.models.SqlAgentConfigurationInner;
import com.azure.resourcemanager.sql.generated.models.SqlAgentConfiguration;
import com.azure.resourcemanager.sql.generated.models.SqlAgents;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class SqlAgentsImpl implements SqlAgents {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(SqlAgentsImpl.class);

    private final SqlAgentsClient innerClient;

    private final com.azure.resourcemanager.sql.generated.SqlManager serviceManager;

    public SqlAgentsImpl(
        SqlAgentsClient innerClient, com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public SqlAgentConfiguration get(String resourceGroupName, String managedInstanceName) {
        SqlAgentConfigurationInner inner = this.serviceClient().get(resourceGroupName, managedInstanceName);
        if (inner != null) {
            return new SqlAgentConfigurationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<SqlAgentConfiguration> getWithResponse(
        String resourceGroupName, String managedInstanceName, Context context) {
        Response<SqlAgentConfigurationInner> inner =
            this.serviceClient().getWithResponse(resourceGroupName, managedInstanceName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SqlAgentConfigurationImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public SqlAgentConfiguration createOrUpdate(
        String resourceGroupName, String managedInstanceName, SqlAgentConfigurationInner parameters) {
        SqlAgentConfigurationInner inner =
            this.serviceClient().createOrUpdate(resourceGroupName, managedInstanceName, parameters);
        if (inner != null) {
            return new SqlAgentConfigurationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<SqlAgentConfiguration> createOrUpdateWithResponse(
        String resourceGroupName, String managedInstanceName, SqlAgentConfigurationInner parameters, Context context) {
        Response<SqlAgentConfigurationInner> inner =
            this
                .serviceClient()
                .createOrUpdateWithResponse(resourceGroupName, managedInstanceName, parameters, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SqlAgentConfigurationImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private SqlAgentsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.sql.generated.SqlManager manager() {
        return this.serviceManager;
    }
}
