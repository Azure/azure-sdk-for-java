// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** An export managed database operation result resource. */
@JsonFlatten
@Fluent
public class DatabaseExtensions extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DatabaseExtensions.class);

    /*
     * Operation Mode.
     */
    @JsonProperty(value = "properties.operationMode")
    private OperationMode operationMode;

    /*
     * Storage key type.
     */
    @JsonProperty(value = "properties.storageKeyType")
    private StorageKeyType storageKeyType;

    /*
     * Storage key.
     */
    @JsonProperty(value = "properties.storageKey")
    private String storageKey;

    /*
     * Storage Uri.
     */
    @JsonProperty(value = "properties.storageUri")
    private String storageUri;

    /**
     * Get the operationMode property: Operation Mode.
     *
     * @return the operationMode value.
     */
    public OperationMode operationMode() {
        return this.operationMode;
    }

    /**
     * Set the operationMode property: Operation Mode.
     *
     * @param operationMode the operationMode value to set.
     * @return the DatabaseExtensions object itself.
     */
    public DatabaseExtensions withOperationMode(OperationMode operationMode) {
        this.operationMode = operationMode;
        return this;
    }

    /**
     * Get the storageKeyType property: Storage key type.
     *
     * @return the storageKeyType value.
     */
    public StorageKeyType storageKeyType() {
        return this.storageKeyType;
    }

    /**
     * Set the storageKeyType property: Storage key type.
     *
     * @param storageKeyType the storageKeyType value to set.
     * @return the DatabaseExtensions object itself.
     */
    public DatabaseExtensions withStorageKeyType(StorageKeyType storageKeyType) {
        this.storageKeyType = storageKeyType;
        return this;
    }

    /**
     * Get the storageKey property: Storage key.
     *
     * @return the storageKey value.
     */
    public String storageKey() {
        return this.storageKey;
    }

    /**
     * Set the storageKey property: Storage key.
     *
     * @param storageKey the storageKey value to set.
     * @return the DatabaseExtensions object itself.
     */
    public DatabaseExtensions withStorageKey(String storageKey) {
        this.storageKey = storageKey;
        return this;
    }

    /**
     * Get the storageUri property: Storage Uri.
     *
     * @return the storageUri value.
     */
    public String storageUri() {
        return this.storageUri;
    }

    /**
     * Set the storageUri property: Storage Uri.
     *
     * @param storageUri the storageUri value to set.
     * @return the DatabaseExtensions object itself.
     */
    public DatabaseExtensions withStorageUri(String storageUri) {
        this.storageUri = storageUri;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
