// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.SqlManager;
import com.azure.resourcemanager.sql.generated.fluent.models.ManagedInstanceVulnerabilityAssessmentInner;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceVulnerabilityAssessment;
import com.azure.resourcemanager.sql.generated.models.VulnerabilityAssessmentName;
import com.azure.resourcemanager.sql.generated.models.VulnerabilityAssessmentRecurringScansProperties;

public final class ManagedInstanceVulnerabilityAssessmentImpl
    implements ManagedInstanceVulnerabilityAssessment,
        ManagedInstanceVulnerabilityAssessment.Definition,
        ManagedInstanceVulnerabilityAssessment.Update {
    private ManagedInstanceVulnerabilityAssessmentInner innerObject;

    private final SqlManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String storageContainerPath() {
        return this.innerModel().storageContainerPath();
    }

    public String storageContainerSasKey() {
        return this.innerModel().storageContainerSasKey();
    }

    public String storageAccountAccessKey() {
        return this.innerModel().storageAccountAccessKey();
    }

    public VulnerabilityAssessmentRecurringScansProperties recurringScans() {
        return this.innerModel().recurringScans();
    }

    public ManagedInstanceVulnerabilityAssessmentInner innerModel() {
        return this.innerObject;
    }

    private SqlManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String managedInstanceName;

    private VulnerabilityAssessmentName vulnerabilityAssessmentName;

    public ManagedInstanceVulnerabilityAssessmentImpl withExistingManagedInstance(
        String resourceGroupName, String managedInstanceName) {
        this.resourceGroupName = resourceGroupName;
        this.managedInstanceName = managedInstanceName;
        return this;
    }

    public ManagedInstanceVulnerabilityAssessment create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedInstanceVulnerabilityAssessments()
                .createOrUpdateWithResponse(
                    resourceGroupName,
                    managedInstanceName,
                    vulnerabilityAssessmentName,
                    this.innerModel(),
                    Context.NONE)
                .getValue();
        return this;
    }

    public ManagedInstanceVulnerabilityAssessment create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedInstanceVulnerabilityAssessments()
                .createOrUpdateWithResponse(
                    resourceGroupName, managedInstanceName, vulnerabilityAssessmentName, this.innerModel(), context)
                .getValue();
        return this;
    }

    public ManagedInstanceVulnerabilityAssessmentImpl(VulnerabilityAssessmentName name, SqlManager serviceManager) {
        this.innerObject = new ManagedInstanceVulnerabilityAssessmentInner();
        this.serviceManager = serviceManager;
        this.vulnerabilityAssessmentName = name;
    }

    public ManagedInstanceVulnerabilityAssessmentImpl update() {
        return this;
    }

    public ManagedInstanceVulnerabilityAssessment apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedInstanceVulnerabilityAssessments()
                .createOrUpdateWithResponse(
                    resourceGroupName,
                    managedInstanceName,
                    vulnerabilityAssessmentName,
                    this.innerModel(),
                    Context.NONE)
                .getValue();
        return this;
    }

    public ManagedInstanceVulnerabilityAssessment apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedInstanceVulnerabilityAssessments()
                .createOrUpdateWithResponse(
                    resourceGroupName, managedInstanceName, vulnerabilityAssessmentName, this.innerModel(), context)
                .getValue();
        return this;
    }

    public ManagedInstanceVulnerabilityAssessmentImpl(
        ManagedInstanceVulnerabilityAssessmentInner innerObject, SqlManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.managedInstanceName = Utils.getValueFromIdByName(innerObject.id(), "managedInstances");
        this.vulnerabilityAssessmentName =
            VulnerabilityAssessmentName
                .fromString(Utils.getValueFromIdByName(innerObject.id(), "vulnerabilityAssessments"));
    }

    public ManagedInstanceVulnerabilityAssessment refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedInstanceVulnerabilityAssessments()
                .getWithResponse(resourceGroupName, managedInstanceName, vulnerabilityAssessmentName, Context.NONE)
                .getValue();
        return this;
    }

    public ManagedInstanceVulnerabilityAssessment refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedInstanceVulnerabilityAssessments()
                .getWithResponse(resourceGroupName, managedInstanceName, vulnerabilityAssessmentName, context)
                .getValue();
        return this;
    }

    public ManagedInstanceVulnerabilityAssessmentImpl withStorageContainerPath(String storageContainerPath) {
        this.innerModel().withStorageContainerPath(storageContainerPath);
        return this;
    }

    public ManagedInstanceVulnerabilityAssessmentImpl withStorageContainerSasKey(String storageContainerSasKey) {
        this.innerModel().withStorageContainerSasKey(storageContainerSasKey);
        return this;
    }

    public ManagedInstanceVulnerabilityAssessmentImpl withStorageAccountAccessKey(String storageAccountAccessKey) {
        this.innerModel().withStorageAccountAccessKey(storageAccountAccessKey);
        return this;
    }

    public ManagedInstanceVulnerabilityAssessmentImpl withRecurringScans(
        VulnerabilityAssessmentRecurringScansProperties recurringScans) {
        this.innerModel().withRecurringScans(recurringScans);
        return this;
    }
}
