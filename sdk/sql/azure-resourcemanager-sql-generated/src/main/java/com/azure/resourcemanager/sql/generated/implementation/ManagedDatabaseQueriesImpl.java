// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.sql.generated.fluent.ManagedDatabaseQueriesClient;
import com.azure.resourcemanager.sql.generated.fluent.models.ManagedInstanceQueryInner;
import com.azure.resourcemanager.sql.generated.fluent.models.QueryStatisticsInner;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseQueries;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceQuery;
import com.azure.resourcemanager.sql.generated.models.QueryStatistics;
import com.azure.resourcemanager.sql.generated.models.QueryTimeGrainType;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class ManagedDatabaseQueriesImpl implements ManagedDatabaseQueries {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ManagedDatabaseQueriesImpl.class);

    private final ManagedDatabaseQueriesClient innerClient;

    private final com.azure.resourcemanager.sql.generated.SqlManager serviceManager;

    public ManagedDatabaseQueriesImpl(
        ManagedDatabaseQueriesClient innerClient, com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public ManagedInstanceQuery get(
        String resourceGroupName, String managedInstanceName, String databaseName, String queryId) {
        ManagedInstanceQueryInner inner =
            this.serviceClient().get(resourceGroupName, managedInstanceName, databaseName, queryId);
        if (inner != null) {
            return new ManagedInstanceQueryImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<ManagedInstanceQuery> getWithResponse(
        String resourceGroupName, String managedInstanceName, String databaseName, String queryId, Context context) {
        Response<ManagedInstanceQueryInner> inner =
            this
                .serviceClient()
                .getWithResponse(resourceGroupName, managedInstanceName, databaseName, queryId, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new ManagedInstanceQueryImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public PagedIterable<QueryStatistics> listByQuery(
        String resourceGroupName, String managedInstanceName, String databaseName, String queryId) {
        PagedIterable<QueryStatisticsInner> inner =
            this.serviceClient().listByQuery(resourceGroupName, managedInstanceName, databaseName, queryId);
        return Utils.mapPage(inner, inner1 -> new QueryStatisticsImpl(inner1, this.manager()));
    }

    public PagedIterable<QueryStatistics> listByQuery(
        String resourceGroupName,
        String managedInstanceName,
        String databaseName,
        String queryId,
        String startTime,
        String endTime,
        QueryTimeGrainType interval,
        Context context) {
        PagedIterable<QueryStatisticsInner> inner =
            this
                .serviceClient()
                .listByQuery(
                    resourceGroupName,
                    managedInstanceName,
                    databaseName,
                    queryId,
                    startTime,
                    endTime,
                    interval,
                    context);
        return Utils.mapPage(inner, inner1 -> new QueryStatisticsImpl(inner1, this.manager()));
    }

    private ManagedDatabaseQueriesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.sql.generated.SqlManager manager() {
        return this.serviceManager;
    }
}
