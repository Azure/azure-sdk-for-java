// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.sql.generated.fluent.ManagedDatabaseSchemasClient;
import com.azure.resourcemanager.sql.generated.fluent.models.DatabaseSchemaInner;
import com.azure.resourcemanager.sql.generated.models.DatabaseSchema;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseSchemas;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class ManagedDatabaseSchemasImpl implements ManagedDatabaseSchemas {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ManagedDatabaseSchemasImpl.class);

    private final ManagedDatabaseSchemasClient innerClient;

    private final com.azure.resourcemanager.sql.generated.SqlManager serviceManager;

    public ManagedDatabaseSchemasImpl(
        ManagedDatabaseSchemasClient innerClient, com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<DatabaseSchema> listByDatabase(
        String resourceGroupName, String managedInstanceName, String databaseName) {
        PagedIterable<DatabaseSchemaInner> inner =
            this.serviceClient().listByDatabase(resourceGroupName, managedInstanceName, databaseName);
        return Utils.mapPage(inner, inner1 -> new DatabaseSchemaImpl(inner1, this.manager()));
    }

    public PagedIterable<DatabaseSchema> listByDatabase(
        String resourceGroupName, String managedInstanceName, String databaseName, String filter, Context context) {
        PagedIterable<DatabaseSchemaInner> inner =
            this.serviceClient().listByDatabase(resourceGroupName, managedInstanceName, databaseName, filter, context);
        return Utils.mapPage(inner, inner1 -> new DatabaseSchemaImpl(inner1, this.manager()));
    }

    public DatabaseSchema get(
        String resourceGroupName, String managedInstanceName, String databaseName, String schemaName) {
        DatabaseSchemaInner inner =
            this.serviceClient().get(resourceGroupName, managedInstanceName, databaseName, schemaName);
        if (inner != null) {
            return new DatabaseSchemaImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<DatabaseSchema> getWithResponse(
        String resourceGroupName, String managedInstanceName, String databaseName, String schemaName, Context context) {
        Response<DatabaseSchemaInner> inner =
            this
                .serviceClient()
                .getWithResponse(resourceGroupName, managedInstanceName, databaseName, schemaName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new DatabaseSchemaImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private ManagedDatabaseSchemasClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.sql.generated.SqlManager manager() {
        return this.serviceManager;
    }
}
