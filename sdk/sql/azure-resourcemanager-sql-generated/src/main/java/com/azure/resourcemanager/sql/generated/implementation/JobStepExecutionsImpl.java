// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.sql.generated.fluent.JobStepExecutionsClient;
import com.azure.resourcemanager.sql.generated.fluent.models.JobExecutionInner;
import com.azure.resourcemanager.sql.generated.models.JobExecution;
import com.azure.resourcemanager.sql.generated.models.JobStepExecutions;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.time.OffsetDateTime;
import java.util.UUID;

public final class JobStepExecutionsImpl implements JobStepExecutions {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(JobStepExecutionsImpl.class);

    private final JobStepExecutionsClient innerClient;

    private final com.azure.resourcemanager.sql.generated.SqlManager serviceManager;

    public JobStepExecutionsImpl(
        JobStepExecutionsClient innerClient, com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<JobExecution> listByJobExecution(
        String resourceGroupName, String serverName, String jobAgentName, String jobName, UUID jobExecutionId) {
        PagedIterable<JobExecutionInner> inner =
            this
                .serviceClient()
                .listByJobExecution(resourceGroupName, serverName, jobAgentName, jobName, jobExecutionId);
        return Utils.mapPage(inner, inner1 -> new JobExecutionImpl(inner1, this.manager()));
    }

    public PagedIterable<JobExecution> listByJobExecution(
        String resourceGroupName,
        String serverName,
        String jobAgentName,
        String jobName,
        UUID jobExecutionId,
        OffsetDateTime createTimeMin,
        OffsetDateTime createTimeMax,
        OffsetDateTime endTimeMin,
        OffsetDateTime endTimeMax,
        Boolean isActive,
        Integer skip,
        Integer top,
        Context context) {
        PagedIterable<JobExecutionInner> inner =
            this
                .serviceClient()
                .listByJobExecution(
                    resourceGroupName,
                    serverName,
                    jobAgentName,
                    jobName,
                    jobExecutionId,
                    createTimeMin,
                    createTimeMax,
                    endTimeMin,
                    endTimeMax,
                    isActive,
                    skip,
                    top,
                    context);
        return Utils.mapPage(inner, inner1 -> new JobExecutionImpl(inner1, this.manager()));
    }

    public JobExecution get(
        String resourceGroupName,
        String serverName,
        String jobAgentName,
        String jobName,
        UUID jobExecutionId,
        String stepName) {
        JobExecutionInner inner =
            this.serviceClient().get(resourceGroupName, serverName, jobAgentName, jobName, jobExecutionId, stepName);
        if (inner != null) {
            return new JobExecutionImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<JobExecution> getWithResponse(
        String resourceGroupName,
        String serverName,
        String jobAgentName,
        String jobName,
        UUID jobExecutionId,
        String stepName,
        Context context) {
        Response<JobExecutionInner> inner =
            this
                .serviceClient()
                .getWithResponse(
                    resourceGroupName, serverName, jobAgentName, jobName, jobExecutionId, stepName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new JobExecutionImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private JobStepExecutionsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.sql.generated.SqlManager manager() {
        return this.serviceManager;
    }
}
