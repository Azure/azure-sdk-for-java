// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.fluent.models.BackupShortTermRetentionPolicyInner;

/** An immutable client-side representation of BackupShortTermRetentionPolicy. */
public interface BackupShortTermRetentionPolicy {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the retentionDays property: The backup retention period in days. This is how many days Point-in-Time Restore
     * will be supported.
     *
     * @return the retentionDays value.
     */
    Integer retentionDays();

    /**
     * Gets the diffBackupIntervalInHours property: The differential backup interval in hours. This is how many interval
     * hours between each differential backup will be supported. This is only applicable to live databases but not
     * dropped databases.
     *
     * @return the diffBackupIntervalInHours value.
     */
    DiffBackupIntervalInHours diffBackupIntervalInHours();

    /**
     * Gets the inner com.azure.resourcemanager.sql.generated.fluent.models.BackupShortTermRetentionPolicyInner object.
     *
     * @return the inner object.
     */
    BackupShortTermRetentionPolicyInner innerModel();

    /** The entirety of the BackupShortTermRetentionPolicy definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The BackupShortTermRetentionPolicy definition stages. */
    interface DefinitionStages {
        /** The first stage of the BackupShortTermRetentionPolicy definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the BackupShortTermRetentionPolicy definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, serverName, databaseName.
             *
             * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this
             *     value from the Azure Resource Manager API or the portal.
             * @param serverName The name of the server.
             * @param databaseName The name of the database.
             * @return the next definition stage.
             */
            WithCreate withExistingDatabase(String resourceGroupName, String serverName, String databaseName);
        }
        /**
         * The stage of the BackupShortTermRetentionPolicy definition which contains all the minimum required properties
         * for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithRetentionDays, DefinitionStages.WithDiffBackupIntervalInHours {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            BackupShortTermRetentionPolicy create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            BackupShortTermRetentionPolicy create(Context context);
        }
        /** The stage of the BackupShortTermRetentionPolicy definition allowing to specify retentionDays. */
        interface WithRetentionDays {
            /**
             * Specifies the retentionDays property: The backup retention period in days. This is how many days
             * Point-in-Time Restore will be supported..
             *
             * @param retentionDays The backup retention period in days. This is how many days Point-in-Time Restore
             *     will be supported.
             * @return the next definition stage.
             */
            WithCreate withRetentionDays(Integer retentionDays);
        }
        /** The stage of the BackupShortTermRetentionPolicy definition allowing to specify diffBackupIntervalInHours. */
        interface WithDiffBackupIntervalInHours {
            /**
             * Specifies the diffBackupIntervalInHours property: The differential backup interval in hours. This is how
             * many interval hours between each differential backup will be supported. This is only applicable to live
             * databases but not dropped databases..
             *
             * @param diffBackupIntervalInHours The differential backup interval in hours. This is how many interval
             *     hours between each differential backup will be supported. This is only applicable to live databases
             *     but not dropped databases.
             * @return the next definition stage.
             */
            WithCreate withDiffBackupIntervalInHours(DiffBackupIntervalInHours diffBackupIntervalInHours);
        }
    }
    /**
     * Begins update for the BackupShortTermRetentionPolicy resource.
     *
     * @return the stage of resource update.
     */
    BackupShortTermRetentionPolicy.Update update();

    /** The template for BackupShortTermRetentionPolicy update. */
    interface Update extends UpdateStages.WithRetentionDays, UpdateStages.WithDiffBackupIntervalInHours {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        BackupShortTermRetentionPolicy apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        BackupShortTermRetentionPolicy apply(Context context);
    }
    /** The BackupShortTermRetentionPolicy update stages. */
    interface UpdateStages {
        /** The stage of the BackupShortTermRetentionPolicy update allowing to specify retentionDays. */
        interface WithRetentionDays {
            /**
             * Specifies the retentionDays property: The backup retention period in days. This is how many days
             * Point-in-Time Restore will be supported..
             *
             * @param retentionDays The backup retention period in days. This is how many days Point-in-Time Restore
             *     will be supported.
             * @return the next definition stage.
             */
            Update withRetentionDays(Integer retentionDays);
        }
        /** The stage of the BackupShortTermRetentionPolicy update allowing to specify diffBackupIntervalInHours. */
        interface WithDiffBackupIntervalInHours {
            /**
             * Specifies the diffBackupIntervalInHours property: The differential backup interval in hours. This is how
             * many interval hours between each differential backup will be supported. This is only applicable to live
             * databases but not dropped databases..
             *
             * @param diffBackupIntervalInHours The differential backup interval in hours. This is how many interval
             *     hours between each differential backup will be supported. This is only applicable to live databases
             *     but not dropped databases.
             * @return the next definition stage.
             */
            Update withDiffBackupIntervalInHours(DiffBackupIntervalInHours diffBackupIntervalInHours);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    BackupShortTermRetentionPolicy refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    BackupShortTermRetentionPolicy refresh(Context context);
}
