// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.resourcemanager.sql.generated.fluent.models.RecommendedActionInner;
import com.azure.resourcemanager.sql.generated.models.RecommendedAction;
import com.azure.resourcemanager.sql.generated.models.RecommendedActionErrorInfo;
import com.azure.resourcemanager.sql.generated.models.RecommendedActionImpactRecord;
import com.azure.resourcemanager.sql.generated.models.RecommendedActionImplementationInfo;
import com.azure.resourcemanager.sql.generated.models.RecommendedActionInitiatedBy;
import com.azure.resourcemanager.sql.generated.models.RecommendedActionMetricInfo;
import com.azure.resourcemanager.sql.generated.models.RecommendedActionStateInfo;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class RecommendedActionImpl implements RecommendedAction {
    private RecommendedActionInner innerObject;

    private final com.azure.resourcemanager.sql.generated.SqlManager serviceManager;

    RecommendedActionImpl(
        RecommendedActionInner innerObject, com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String kind() {
        return this.innerModel().kind();
    }

    public String location() {
        return this.innerModel().location();
    }

    public String recommendationReason() {
        return this.innerModel().recommendationReason();
    }

    public OffsetDateTime validSince() {
        return this.innerModel().validSince();
    }

    public OffsetDateTime lastRefresh() {
        return this.innerModel().lastRefresh();
    }

    public RecommendedActionStateInfo state() {
        return this.innerModel().state();
    }

    public Boolean isExecutableAction() {
        return this.innerModel().isExecutableAction();
    }

    public Boolean isRevertableAction() {
        return this.innerModel().isRevertableAction();
    }

    public Boolean isArchivedAction() {
        return this.innerModel().isArchivedAction();
    }

    public OffsetDateTime executeActionStartTime() {
        return this.innerModel().executeActionStartTime();
    }

    public String executeActionDuration() {
        return this.innerModel().executeActionDuration();
    }

    public OffsetDateTime revertActionStartTime() {
        return this.innerModel().revertActionStartTime();
    }

    public String revertActionDuration() {
        return this.innerModel().revertActionDuration();
    }

    public RecommendedActionInitiatedBy executeActionInitiatedBy() {
        return this.innerModel().executeActionInitiatedBy();
    }

    public OffsetDateTime executeActionInitiatedTime() {
        return this.innerModel().executeActionInitiatedTime();
    }

    public RecommendedActionInitiatedBy revertActionInitiatedBy() {
        return this.innerModel().revertActionInitiatedBy();
    }

    public OffsetDateTime revertActionInitiatedTime() {
        return this.innerModel().revertActionInitiatedTime();
    }

    public Integer score() {
        return this.innerModel().score();
    }

    public RecommendedActionImplementationInfo implementationDetails() {
        return this.innerModel().implementationDetails();
    }

    public RecommendedActionErrorInfo errorDetails() {
        return this.innerModel().errorDetails();
    }

    public List<RecommendedActionImpactRecord> estimatedImpact() {
        List<RecommendedActionImpactRecord> inner = this.innerModel().estimatedImpact();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<RecommendedActionImpactRecord> observedImpact() {
        List<RecommendedActionImpactRecord> inner = this.innerModel().observedImpact();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<RecommendedActionMetricInfo> timeSeries() {
        List<RecommendedActionMetricInfo> inner = this.innerModel().timeSeries();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> linkedObjects() {
        List<String> inner = this.innerModel().linkedObjects();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public Map<String, Object> details() {
        Map<String, Object> inner = this.innerModel().details();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public RecommendedActionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.sql.generated.SqlManager manager() {
        return this.serviceManager;
    }
}
