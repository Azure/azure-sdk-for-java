// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.sql.generated.fluent.ManagedDatabaseTablesClient;
import com.azure.resourcemanager.sql.generated.fluent.models.DatabaseTableInner;
import com.azure.resourcemanager.sql.generated.models.DatabaseTable;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseTables;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class ManagedDatabaseTablesImpl implements ManagedDatabaseTables {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ManagedDatabaseTablesImpl.class);

    private final ManagedDatabaseTablesClient innerClient;

    private final com.azure.resourcemanager.sql.generated.SqlManager serviceManager;

    public ManagedDatabaseTablesImpl(
        ManagedDatabaseTablesClient innerClient, com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<DatabaseTable> listBySchema(
        String resourceGroupName, String managedInstanceName, String databaseName, String schemaName) {
        PagedIterable<DatabaseTableInner> inner =
            this.serviceClient().listBySchema(resourceGroupName, managedInstanceName, databaseName, schemaName);
        return Utils.mapPage(inner, inner1 -> new DatabaseTableImpl(inner1, this.manager()));
    }

    public PagedIterable<DatabaseTable> listBySchema(
        String resourceGroupName,
        String managedInstanceName,
        String databaseName,
        String schemaName,
        String filter,
        Context context) {
        PagedIterable<DatabaseTableInner> inner =
            this
                .serviceClient()
                .listBySchema(resourceGroupName, managedInstanceName, databaseName, schemaName, filter, context);
        return Utils.mapPage(inner, inner1 -> new DatabaseTableImpl(inner1, this.manager()));
    }

    public DatabaseTable get(
        String resourceGroupName,
        String managedInstanceName,
        String databaseName,
        String schemaName,
        String tableName) {
        DatabaseTableInner inner =
            this.serviceClient().get(resourceGroupName, managedInstanceName, databaseName, schemaName, tableName);
        if (inner != null) {
            return new DatabaseTableImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<DatabaseTable> getWithResponse(
        String resourceGroupName,
        String managedInstanceName,
        String databaseName,
        String schemaName,
        String tableName,
        Context context) {
        Response<DatabaseTableInner> inner =
            this
                .serviceClient()
                .getWithResponse(resourceGroupName, managedInstanceName, databaseName, schemaName, tableName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new DatabaseTableImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private ManagedDatabaseTablesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.sql.generated.SqlManager manager() {
        return this.serviceManager;
    }
}
