// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.resourcemanager.sql.generated.SqlManager;
import com.azure.resourcemanager.sql.generated.fluent.models.VulnerabilityAssessmentScanRecordInner;
import com.azure.resourcemanager.sql.generated.models.VulnerabilityAssessmentScanError;
import com.azure.resourcemanager.sql.generated.models.VulnerabilityAssessmentScanRecord;
import com.azure.resourcemanager.sql.generated.models.VulnerabilityAssessmentScanState;
import com.azure.resourcemanager.sql.generated.models.VulnerabilityAssessmentScanTriggerType;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.List;

public final class VulnerabilityAssessmentScanRecordImpl implements VulnerabilityAssessmentScanRecord {
    private VulnerabilityAssessmentScanRecordInner innerObject;

    private final SqlManager serviceManager;

    public VulnerabilityAssessmentScanRecordImpl(
        VulnerabilityAssessmentScanRecordInner innerObject, SqlManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String scanId() {
        return this.innerModel().scanId();
    }

    public VulnerabilityAssessmentScanTriggerType triggerType() {
        return this.innerModel().triggerType();
    }

    public VulnerabilityAssessmentScanState state() {
        return this.innerModel().state();
    }

    public OffsetDateTime startTime() {
        return this.innerModel().startTime();
    }

    public OffsetDateTime endTime() {
        return this.innerModel().endTime();
    }

    public List<VulnerabilityAssessmentScanError> errors() {
        List<VulnerabilityAssessmentScanError> inner = this.innerModel().errors();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String storageContainerPath() {
        return this.innerModel().storageContainerPath();
    }

    public Integer numberOfFailedSecurityChecks() {
        return this.innerModel().numberOfFailedSecurityChecks();
    }

    public VulnerabilityAssessmentScanRecordInner innerModel() {
        return this.innerObject;
    }

    private SqlManager manager() {
        return this.serviceManager;
    }
}
