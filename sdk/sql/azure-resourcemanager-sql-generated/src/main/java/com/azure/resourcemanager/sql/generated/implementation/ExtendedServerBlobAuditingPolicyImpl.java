// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.fluent.models.ExtendedServerBlobAuditingPolicyInner;
import com.azure.resourcemanager.sql.generated.models.BlobAuditingPolicyState;
import com.azure.resourcemanager.sql.generated.models.ExtendedServerBlobAuditingPolicy;
import java.util.Collections;
import java.util.List;
import java.util.UUID;

public final class ExtendedServerBlobAuditingPolicyImpl
    implements ExtendedServerBlobAuditingPolicy,
        ExtendedServerBlobAuditingPolicy.Definition,
        ExtendedServerBlobAuditingPolicy.Update {
    private ExtendedServerBlobAuditingPolicyInner innerObject;

    private final com.azure.resourcemanager.sql.generated.SqlManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public Boolean isDevopsAuditEnabled() {
        return this.innerModel().isDevopsAuditEnabled();
    }

    public String predicateExpression() {
        return this.innerModel().predicateExpression();
    }

    public Integer retentionDays() {
        return this.innerModel().retentionDays();
    }

    public List<String> auditActionsAndGroups() {
        List<String> inner = this.innerModel().auditActionsAndGroups();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public Boolean isStorageSecondaryKeyInUse() {
        return this.innerModel().isStorageSecondaryKeyInUse();
    }

    public Boolean isAzureMonitorTargetEnabled() {
        return this.innerModel().isAzureMonitorTargetEnabled();
    }

    public Integer queueDelayMs() {
        return this.innerModel().queueDelayMs();
    }

    public BlobAuditingPolicyState state() {
        return this.innerModel().state();
    }

    public String storageEndpoint() {
        return this.innerModel().storageEndpoint();
    }

    public String storageAccountAccessKey() {
        return this.innerModel().storageAccountAccessKey();
    }

    public UUID storageAccountSubscriptionId() {
        return this.innerModel().storageAccountSubscriptionId();
    }

    public ExtendedServerBlobAuditingPolicyInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.sql.generated.SqlManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String serverName;

    public ExtendedServerBlobAuditingPolicyImpl withExistingServer(String resourceGroupName, String serverName) {
        this.resourceGroupName = resourceGroupName;
        this.serverName = serverName;
        return this;
    }

    public ExtendedServerBlobAuditingPolicy create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExtendedServerBlobAuditingPolicies()
                .createOrUpdate(resourceGroupName, serverName, this.innerModel(), Context.NONE);
        return this;
    }

    public ExtendedServerBlobAuditingPolicy create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExtendedServerBlobAuditingPolicies()
                .createOrUpdate(resourceGroupName, serverName, this.innerModel(), context);
        return this;
    }

    ExtendedServerBlobAuditingPolicyImpl(com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerObject = new ExtendedServerBlobAuditingPolicyInner();
        this.serviceManager = serviceManager;
    }

    public ExtendedServerBlobAuditingPolicyImpl update() {
        return this;
    }

    public ExtendedServerBlobAuditingPolicy apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExtendedServerBlobAuditingPolicies()
                .createOrUpdate(resourceGroupName, serverName, this.innerModel(), Context.NONE);
        return this;
    }

    public ExtendedServerBlobAuditingPolicy apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExtendedServerBlobAuditingPolicies()
                .createOrUpdate(resourceGroupName, serverName, this.innerModel(), context);
        return this;
    }

    ExtendedServerBlobAuditingPolicyImpl(
        ExtendedServerBlobAuditingPolicyInner innerObject,
        com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.serverName = Utils.getValueFromIdByName(innerObject.id(), "servers");
    }

    public ExtendedServerBlobAuditingPolicy refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExtendedServerBlobAuditingPolicies()
                .getWithResponse(resourceGroupName, serverName, Context.NONE)
                .getValue();
        return this;
    }

    public ExtendedServerBlobAuditingPolicy refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExtendedServerBlobAuditingPolicies()
                .getWithResponse(resourceGroupName, serverName, context)
                .getValue();
        return this;
    }

    public ExtendedServerBlobAuditingPolicyImpl withIsDevopsAuditEnabled(Boolean isDevopsAuditEnabled) {
        this.innerModel().withIsDevopsAuditEnabled(isDevopsAuditEnabled);
        return this;
    }

    public ExtendedServerBlobAuditingPolicyImpl withPredicateExpression(String predicateExpression) {
        this.innerModel().withPredicateExpression(predicateExpression);
        return this;
    }

    public ExtendedServerBlobAuditingPolicyImpl withRetentionDays(Integer retentionDays) {
        this.innerModel().withRetentionDays(retentionDays);
        return this;
    }

    public ExtendedServerBlobAuditingPolicyImpl withAuditActionsAndGroups(List<String> auditActionsAndGroups) {
        this.innerModel().withAuditActionsAndGroups(auditActionsAndGroups);
        return this;
    }

    public ExtendedServerBlobAuditingPolicyImpl withIsStorageSecondaryKeyInUse(Boolean isStorageSecondaryKeyInUse) {
        this.innerModel().withIsStorageSecondaryKeyInUse(isStorageSecondaryKeyInUse);
        return this;
    }

    public ExtendedServerBlobAuditingPolicyImpl withIsAzureMonitorTargetEnabled(Boolean isAzureMonitorTargetEnabled) {
        this.innerModel().withIsAzureMonitorTargetEnabled(isAzureMonitorTargetEnabled);
        return this;
    }

    public ExtendedServerBlobAuditingPolicyImpl withQueueDelayMs(Integer queueDelayMs) {
        this.innerModel().withQueueDelayMs(queueDelayMs);
        return this;
    }

    public ExtendedServerBlobAuditingPolicyImpl withState(BlobAuditingPolicyState state) {
        this.innerModel().withState(state);
        return this;
    }

    public ExtendedServerBlobAuditingPolicyImpl withStorageEndpoint(String storageEndpoint) {
        this.innerModel().withStorageEndpoint(storageEndpoint);
        return this;
    }

    public ExtendedServerBlobAuditingPolicyImpl withStorageAccountAccessKey(String storageAccountAccessKey) {
        this.innerModel().withStorageAccountAccessKey(storageAccountAccessKey);
        return this;
    }

    public ExtendedServerBlobAuditingPolicyImpl withStorageAccountSubscriptionId(UUID storageAccountSubscriptionId) {
        this.innerModel().withStorageAccountSubscriptionId(storageAccountSubscriptionId);
        return this;
    }
}
