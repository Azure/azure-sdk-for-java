// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.fluent.models.ManagedInstanceAdministratorInner;
import java.util.UUID;

/** An immutable client-side representation of ManagedInstanceAdministrator. */
public interface ManagedInstanceAdministrator {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the administratorType property: Type of the managed instance administrator.
     *
     * @return the administratorType value.
     */
    ManagedInstanceAdministratorType administratorType();

    /**
     * Gets the login property: Login name of the managed instance administrator.
     *
     * @return the login value.
     */
    String login();

    /**
     * Gets the sid property: SID (object ID) of the managed instance administrator.
     *
     * @return the sid value.
     */
    UUID sid();

    /**
     * Gets the tenantId property: Tenant ID of the managed instance administrator.
     *
     * @return the tenantId value.
     */
    UUID tenantId();

    /**
     * Gets the inner com.azure.resourcemanager.sql.generated.fluent.models.ManagedInstanceAdministratorInner object.
     *
     * @return the inner object.
     */
    ManagedInstanceAdministratorInner innerModel();

    /** The entirety of the ManagedInstanceAdministrator definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The ManagedInstanceAdministrator definition stages. */
    interface DefinitionStages {
        /** The first stage of the ManagedInstanceAdministrator definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the ManagedInstanceAdministrator definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this
             *     value from the Azure Resource Manager API or the portal.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the ManagedInstanceAdministrator definition which contains all the minimum required properties
         * for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithAdministratorType,
                DefinitionStages.WithLogin,
                DefinitionStages.WithSid,
                DefinitionStages.WithTenantId {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            ManagedInstanceAdministrator create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ManagedInstanceAdministrator create(Context context);
        }
        /** The stage of the ManagedInstanceAdministrator definition allowing to specify administratorType. */
        interface WithAdministratorType {
            /**
             * Specifies the administratorType property: Type of the managed instance administrator..
             *
             * @param administratorType Type of the managed instance administrator.
             * @return the next definition stage.
             */
            WithCreate withAdministratorType(ManagedInstanceAdministratorType administratorType);
        }
        /** The stage of the ManagedInstanceAdministrator definition allowing to specify login. */
        interface WithLogin {
            /**
             * Specifies the login property: Login name of the managed instance administrator..
             *
             * @param login Login name of the managed instance administrator.
             * @return the next definition stage.
             */
            WithCreate withLogin(String login);
        }
        /** The stage of the ManagedInstanceAdministrator definition allowing to specify sid. */
        interface WithSid {
            /**
             * Specifies the sid property: SID (object ID) of the managed instance administrator..
             *
             * @param sid SID (object ID) of the managed instance administrator.
             * @return the next definition stage.
             */
            WithCreate withSid(UUID sid);
        }
        /** The stage of the ManagedInstanceAdministrator definition allowing to specify tenantId. */
        interface WithTenantId {
            /**
             * Specifies the tenantId property: Tenant ID of the managed instance administrator..
             *
             * @param tenantId Tenant ID of the managed instance administrator.
             * @return the next definition stage.
             */
            WithCreate withTenantId(UUID tenantId);
        }
    }
    /**
     * Begins update for the ManagedInstanceAdministrator resource.
     *
     * @return the stage of resource update.
     */
    ManagedInstanceAdministrator.Update update();

    /** The template for ManagedInstanceAdministrator update. */
    interface Update
        extends UpdateStages.WithAdministratorType,
            UpdateStages.WithLogin,
            UpdateStages.WithSid,
            UpdateStages.WithTenantId {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        ManagedInstanceAdministrator apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ManagedInstanceAdministrator apply(Context context);
    }
    /** The ManagedInstanceAdministrator update stages. */
    interface UpdateStages {
        /** The stage of the ManagedInstanceAdministrator update allowing to specify administratorType. */
        interface WithAdministratorType {
            /**
             * Specifies the administratorType property: Type of the managed instance administrator..
             *
             * @param administratorType Type of the managed instance administrator.
             * @return the next definition stage.
             */
            Update withAdministratorType(ManagedInstanceAdministratorType administratorType);
        }
        /** The stage of the ManagedInstanceAdministrator update allowing to specify login. */
        interface WithLogin {
            /**
             * Specifies the login property: Login name of the managed instance administrator..
             *
             * @param login Login name of the managed instance administrator.
             * @return the next definition stage.
             */
            Update withLogin(String login);
        }
        /** The stage of the ManagedInstanceAdministrator update allowing to specify sid. */
        interface WithSid {
            /**
             * Specifies the sid property: SID (object ID) of the managed instance administrator..
             *
             * @param sid SID (object ID) of the managed instance administrator.
             * @return the next definition stage.
             */
            Update withSid(UUID sid);
        }
        /** The stage of the ManagedInstanceAdministrator update allowing to specify tenantId. */
        interface WithTenantId {
            /**
             * Specifies the tenantId property: Tenant ID of the managed instance administrator..
             *
             * @param tenantId Tenant ID of the managed instance administrator.
             * @return the next definition stage.
             */
            Update withTenantId(UUID tenantId);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    ManagedInstanceAdministrator refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ManagedInstanceAdministrator refresh(Context context);
}
