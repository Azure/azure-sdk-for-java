// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.SqlManager;
import com.azure.resourcemanager.sql.generated.fluent.models.SyncMemberInner;
import com.azure.resourcemanager.sql.generated.models.SyncDirection;
import com.azure.resourcemanager.sql.generated.models.SyncMember;
import com.azure.resourcemanager.sql.generated.models.SyncMemberDbType;
import com.azure.resourcemanager.sql.generated.models.SyncMemberState;
import java.util.UUID;

public final class SyncMemberImpl implements SyncMember, SyncMember.Definition, SyncMember.Update {
    private SyncMemberInner innerObject;

    private final SqlManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SyncMemberDbType databaseType() {
        return this.innerModel().databaseType();
    }

    public String syncAgentId() {
        return this.innerModel().syncAgentId();
    }

    public UUID sqlServerDatabaseId() {
        return this.innerModel().sqlServerDatabaseId();
    }

    public String syncMemberAzureDatabaseResourceId() {
        return this.innerModel().syncMemberAzureDatabaseResourceId();
    }

    public Boolean usePrivateLinkConnection() {
        return this.innerModel().usePrivateLinkConnection();
    }

    public String privateEndpointName() {
        return this.innerModel().privateEndpointName();
    }

    public String serverName() {
        return this.innerModel().serverName();
    }

    public String databaseName() {
        return this.innerModel().databaseName();
    }

    public String username() {
        return this.innerModel().username();
    }

    public String password() {
        return this.innerModel().password();
    }

    public SyncDirection syncDirection() {
        return this.innerModel().syncDirection();
    }

    public SyncMemberState syncState() {
        return this.innerModel().syncState();
    }

    public SyncMemberInner innerModel() {
        return this.innerObject;
    }

    private SqlManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String serverName;

    private String databaseName;

    private String syncGroupName;

    private String syncMemberName;

    public SyncMemberImpl withExistingSyncGroup(
        String resourceGroupName, String serverName, String databaseName, String syncGroupName) {
        this.resourceGroupName = resourceGroupName;
        this.serverName = serverName;
        this.databaseName = databaseName;
        this.syncGroupName = syncGroupName;
        return this;
    }

    public SyncMember create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSyncMembers()
                .createOrUpdate(
                    resourceGroupName,
                    serverName,
                    databaseName,
                    syncGroupName,
                    syncMemberName,
                    this.innerModel(),
                    Context.NONE);
        return this;
    }

    public SyncMember create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSyncMembers()
                .createOrUpdate(
                    resourceGroupName,
                    serverName,
                    databaseName,
                    syncGroupName,
                    syncMemberName,
                    this.innerModel(),
                    context);
        return this;
    }

    public SyncMemberImpl(String name, SqlManager serviceManager) {
        this.innerObject = new SyncMemberInner();
        this.serviceManager = serviceManager;
        this.syncMemberName = name;
    }

    public SyncMemberImpl update() {
        return this;
    }

    public SyncMember apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSyncMembers()
                .update(
                    resourceGroupName,
                    serverName,
                    databaseName,
                    syncGroupName,
                    syncMemberName,
                    this.innerModel(),
                    Context.NONE);
        return this;
    }

    public SyncMember apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSyncMembers()
                .update(
                    resourceGroupName,
                    serverName,
                    databaseName,
                    syncGroupName,
                    syncMemberName,
                    this.innerModel(),
                    context);
        return this;
    }

    public SyncMemberImpl(SyncMemberInner innerObject, SqlManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.serverName = Utils.getValueFromIdByName(innerObject.id(), "servers");
        this.databaseName = Utils.getValueFromIdByName(innerObject.id(), "databases");
        this.syncGroupName = Utils.getValueFromIdByName(innerObject.id(), "syncGroups");
        this.syncMemberName = Utils.getValueFromIdByName(innerObject.id(), "syncMembers");
    }

    public SyncMember refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSyncMembers()
                .getWithResponse(
                    resourceGroupName, serverName, databaseName, syncGroupName, syncMemberName, Context.NONE)
                .getValue();
        return this;
    }

    public SyncMember refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSyncMembers()
                .getWithResponse(resourceGroupName, serverName, databaseName, syncGroupName, syncMemberName, context)
                .getValue();
        return this;
    }

    public SyncMemberImpl withDatabaseType(SyncMemberDbType databaseType) {
        this.innerModel().withDatabaseType(databaseType);
        return this;
    }

    public SyncMemberImpl withSyncAgentId(String syncAgentId) {
        this.innerModel().withSyncAgentId(syncAgentId);
        return this;
    }

    public SyncMemberImpl withSqlServerDatabaseId(UUID sqlServerDatabaseId) {
        this.innerModel().withSqlServerDatabaseId(sqlServerDatabaseId);
        return this;
    }

    public SyncMemberImpl withSyncMemberAzureDatabaseResourceId(String syncMemberAzureDatabaseResourceId) {
        this.innerModel().withSyncMemberAzureDatabaseResourceId(syncMemberAzureDatabaseResourceId);
        return this;
    }

    public SyncMemberImpl withUsePrivateLinkConnection(Boolean usePrivateLinkConnection) {
        this.innerModel().withUsePrivateLinkConnection(usePrivateLinkConnection);
        return this;
    }

    public SyncMemberImpl withServerName(String serverName) {
        this.innerModel().withServerName(serverName);
        return this;
    }

    public SyncMemberImpl withDatabaseName(String databaseName) {
        this.innerModel().withDatabaseName(databaseName);
        return this;
    }

    public SyncMemberImpl withUsername(String username) {
        this.innerModel().withUsername(username);
        return this;
    }

    public SyncMemberImpl withPassword(String password) {
        this.innerModel().withPassword(password);
        return this;
    }

    public SyncMemberImpl withSyncDirection(SyncDirection syncDirection) {
        this.innerModel().withSyncDirection(syncDirection);
        return this;
    }
}
