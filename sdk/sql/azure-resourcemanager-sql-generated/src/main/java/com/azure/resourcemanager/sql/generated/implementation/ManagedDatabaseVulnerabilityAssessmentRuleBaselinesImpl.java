// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.sql.generated.fluent.ManagedDatabaseVulnerabilityAssessmentRuleBaselinesClient;
import com.azure.resourcemanager.sql.generated.fluent.models.DatabaseVulnerabilityAssessmentRuleBaselineInner;
import com.azure.resourcemanager.sql.generated.models.DatabaseVulnerabilityAssessmentRuleBaseline;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseVulnerabilityAssessmentRuleBaselines;
import com.azure.resourcemanager.sql.generated.models.VulnerabilityAssessmentName;
import com.azure.resourcemanager.sql.generated.models.VulnerabilityAssessmentPolicyBaselineName;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class ManagedDatabaseVulnerabilityAssessmentRuleBaselinesImpl
    implements ManagedDatabaseVulnerabilityAssessmentRuleBaselines {
    @JsonIgnore
    private final ClientLogger logger = new ClientLogger(ManagedDatabaseVulnerabilityAssessmentRuleBaselinesImpl.class);

    private final ManagedDatabaseVulnerabilityAssessmentRuleBaselinesClient innerClient;

    private final com.azure.resourcemanager.sql.generated.SqlManager serviceManager;

    public ManagedDatabaseVulnerabilityAssessmentRuleBaselinesImpl(
        ManagedDatabaseVulnerabilityAssessmentRuleBaselinesClient innerClient,
        com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public DatabaseVulnerabilityAssessmentRuleBaseline get(
        String resourceGroupName,
        String managedInstanceName,
        String databaseName,
        VulnerabilityAssessmentName vulnerabilityAssessmentName,
        String ruleId,
        VulnerabilityAssessmentPolicyBaselineName baselineName) {
        DatabaseVulnerabilityAssessmentRuleBaselineInner inner =
            this
                .serviceClient()
                .get(
                    resourceGroupName,
                    managedInstanceName,
                    databaseName,
                    vulnerabilityAssessmentName,
                    ruleId,
                    baselineName);
        if (inner != null) {
            return new DatabaseVulnerabilityAssessmentRuleBaselineImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<DatabaseVulnerabilityAssessmentRuleBaseline> getWithResponse(
        String resourceGroupName,
        String managedInstanceName,
        String databaseName,
        VulnerabilityAssessmentName vulnerabilityAssessmentName,
        String ruleId,
        VulnerabilityAssessmentPolicyBaselineName baselineName,
        Context context) {
        Response<DatabaseVulnerabilityAssessmentRuleBaselineInner> inner =
            this
                .serviceClient()
                .getWithResponse(
                    resourceGroupName,
                    managedInstanceName,
                    databaseName,
                    vulnerabilityAssessmentName,
                    ruleId,
                    baselineName,
                    context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new DatabaseVulnerabilityAssessmentRuleBaselineImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public DatabaseVulnerabilityAssessmentRuleBaseline createOrUpdate(
        String resourceGroupName,
        String managedInstanceName,
        String databaseName,
        VulnerabilityAssessmentName vulnerabilityAssessmentName,
        String ruleId,
        VulnerabilityAssessmentPolicyBaselineName baselineName,
        DatabaseVulnerabilityAssessmentRuleBaselineInner parameters) {
        DatabaseVulnerabilityAssessmentRuleBaselineInner inner =
            this
                .serviceClient()
                .createOrUpdate(
                    resourceGroupName,
                    managedInstanceName,
                    databaseName,
                    vulnerabilityAssessmentName,
                    ruleId,
                    baselineName,
                    parameters);
        if (inner != null) {
            return new DatabaseVulnerabilityAssessmentRuleBaselineImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<DatabaseVulnerabilityAssessmentRuleBaseline> createOrUpdateWithResponse(
        String resourceGroupName,
        String managedInstanceName,
        String databaseName,
        VulnerabilityAssessmentName vulnerabilityAssessmentName,
        String ruleId,
        VulnerabilityAssessmentPolicyBaselineName baselineName,
        DatabaseVulnerabilityAssessmentRuleBaselineInner parameters,
        Context context) {
        Response<DatabaseVulnerabilityAssessmentRuleBaselineInner> inner =
            this
                .serviceClient()
                .createOrUpdateWithResponse(
                    resourceGroupName,
                    managedInstanceName,
                    databaseName,
                    vulnerabilityAssessmentName,
                    ruleId,
                    baselineName,
                    parameters,
                    context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new DatabaseVulnerabilityAssessmentRuleBaselineImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public void delete(
        String resourceGroupName,
        String managedInstanceName,
        String databaseName,
        VulnerabilityAssessmentName vulnerabilityAssessmentName,
        String ruleId,
        VulnerabilityAssessmentPolicyBaselineName baselineName) {
        this
            .serviceClient()
            .delete(
                resourceGroupName,
                managedInstanceName,
                databaseName,
                vulnerabilityAssessmentName,
                ruleId,
                baselineName);
    }

    public Response<Void> deleteWithResponse(
        String resourceGroupName,
        String managedInstanceName,
        String databaseName,
        VulnerabilityAssessmentName vulnerabilityAssessmentName,
        String ruleId,
        VulnerabilityAssessmentPolicyBaselineName baselineName,
        Context context) {
        return this
            .serviceClient()
            .deleteWithResponse(
                resourceGroupName,
                managedInstanceName,
                databaseName,
                vulnerabilityAssessmentName,
                ruleId,
                baselineName,
                context);
    }

    private ManagedDatabaseVulnerabilityAssessmentRuleBaselinesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.sql.generated.SqlManager manager() {
        return this.serviceManager;
    }
}
