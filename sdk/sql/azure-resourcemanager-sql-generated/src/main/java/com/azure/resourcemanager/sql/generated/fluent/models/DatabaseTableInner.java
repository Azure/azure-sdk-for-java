// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.sql.generated.models.TableTemporalType;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** A database table resource. */
@JsonFlatten
@Fluent
public class DatabaseTableInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DatabaseTableInner.class);

    /*
     * The table temporal type.
     */
    @JsonProperty(value = "properties.temporalType")
    private TableTemporalType temporalType;

    /*
     * Whether or not the table is memory optimized.
     */
    @JsonProperty(value = "properties.memoryOptimized")
    private Boolean memoryOptimized;

    /**
     * Get the temporalType property: The table temporal type.
     *
     * @return the temporalType value.
     */
    public TableTemporalType temporalType() {
        return this.temporalType;
    }

    /**
     * Set the temporalType property: The table temporal type.
     *
     * @param temporalType the temporalType value to set.
     * @return the DatabaseTableInner object itself.
     */
    public DatabaseTableInner withTemporalType(TableTemporalType temporalType) {
        this.temporalType = temporalType;
        return this;
    }

    /**
     * Get the memoryOptimized property: Whether or not the table is memory optimized.
     *
     * @return the memoryOptimized value.
     */
    public Boolean memoryOptimized() {
        return this.memoryOptimized;
    }

    /**
     * Set the memoryOptimized property: Whether or not the table is memory optimized.
     *
     * @param memoryOptimized the memoryOptimized value to set.
     * @return the DatabaseTableInner object itself.
     */
    public DatabaseTableInner withMemoryOptimized(Boolean memoryOptimized) {
        this.memoryOptimized = memoryOptimized;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
