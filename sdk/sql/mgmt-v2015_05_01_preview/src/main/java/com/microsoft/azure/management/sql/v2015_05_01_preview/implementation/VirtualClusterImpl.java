/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.sql.v2015_05_01_preview.implementation;

import com.microsoft.azure.arm.resources.models.implementation.GroupableResourceCoreImpl;
import com.microsoft.azure.management.sql.v2015_05_01_preview.VirtualCluster;
import rx.Observable;
import com.microsoft.azure.management.sql.v2015_05_01_preview.VirtualClusterUpdate;
import java.util.List;
import rx.functions.Func1;

class VirtualClusterImpl extends GroupableResourceCoreImpl<VirtualCluster, VirtualClusterInner, VirtualClusterImpl, SqlManager> implements VirtualCluster, VirtualCluster.Update {
    private VirtualClusterUpdate updateParameter;
    VirtualClusterImpl(String name, VirtualClusterInner inner, SqlManager manager) {
        super(name, inner, manager);
        this.updateParameter = new VirtualClusterUpdate();
    }

    @Override
    public Observable<VirtualCluster> createResourceAsync() {
        VirtualClustersInner client = this.manager().inner().virtualClusters();
        return null; // NOP createResourceAsync implementation as create is not supported
    }

    @Override
    public Observable<VirtualCluster> updateResourceAsync() {
        VirtualClustersInner client = this.manager().inner().virtualClusters();
        return client.updateAsync(this.resourceGroupName(), this.name(), this.updateParameter)
            .map(new Func1<VirtualClusterInner, VirtualClusterInner>() {
               @Override
               public VirtualClusterInner call(VirtualClusterInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<VirtualClusterInner> getInnerAsync() {
        VirtualClustersInner client = this.manager().inner().virtualClusters();
        return client.getByResourceGroupAsync(this.resourceGroupName(), this.name());
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }

    private void resetCreateUpdateParameters() {
        this.updateParameter = new VirtualClusterUpdate();
    }

    @Override
    public List<String> childResources() {
        return this.inner().childResources();
    }

    @Override
    public String family() {
        return this.inner().family();
    }

    @Override
    public String subnetId() {
        return this.inner().subnetId();
    }

    @Override
    public VirtualClusterImpl withFamily(String family) {
        this.updateParameter.withFamily(family);
        return this;
    }

}
