/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.sql.v2015_05_01_preview;

import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Contains information of current state for an Azure SQL Database, Server or
 * Elastic Pool Recommended Action.
 */
public class RecommendedActionStateInfo {
    /**
     * Current state the recommended action is in. Some commonly used states
     * are: Active      -&gt; recommended action is active and no action has
     * been taken yet. Pending     -&gt; recommended action is approved for and
     * is awaiting execution. Executing   -&gt; recommended action is being
     * applied on the user database. Verifying   -&gt; recommended action was
     * applied and is being verified of its usefulness by the system. Success
     * -&gt; recommended action was applied and improvement found during
     * verification. Pending Revert  -&gt; verification found little or no
     * improvement so recommended action is queued for revert or user has
     * manually reverted. Reverting   -&gt; changes made while applying
     * recommended action are being reverted on the user database. Reverted
     * -&gt; successfully reverted the changes made by recommended action on
     * user database. Ignored     -&gt; user explicitly ignored/discarded the
     * recommended action. Possible values include: 'Active', 'Pending',
     * 'Executing', 'Verifying', 'PendingRevert', 'RevertCancelled',
     * 'Reverting', 'Reverted', 'Ignored', 'Expired', 'Monitoring', 'Resolved',
     * 'Success', 'Error'.
     */
    @JsonProperty(value = "currentValue", required = true)
    private RecommendedActionCurrentState currentValue;

    /**
     * Gets who initiated the execution of this recommended action. Possible
     * Value are: User    -&gt; When user explicitly notified system to apply
     * the recommended action. System  -&gt; When auto-execute status of this
     * advisor was set to 'Enabled', in which case the system applied it.
     * Possible values include: 'User', 'System'.
     */
    @JsonProperty(value = "actionInitiatedBy", access = JsonProperty.Access.WRITE_ONLY)
    private RecommendedActionInitiatedBy actionInitiatedBy;

    /**
     * Gets the time when the state was last modified.
     */
    @JsonProperty(value = "lastModified", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime lastModified;

    /**
     * Get current state the recommended action is in. Some commonly used states are: Active      -&gt; recommended action is active and no action has been taken yet. Pending     -&gt; recommended action is approved for and is awaiting execution. Executing   -&gt; recommended action is being applied on the user database. Verifying   -&gt; recommended action was applied and is being verified of its usefulness by the system. Success     -&gt; recommended action was applied and improvement found during verification. Pending Revert  -&gt; verification found little or no improvement so recommended action is queued for revert or user has manually reverted. Reverting   -&gt; changes made while applying recommended action are being reverted on the user database. Reverted    -&gt; successfully reverted the changes made by recommended action on user database. Ignored     -&gt; user explicitly ignored/discarded the recommended action. Possible values include: 'Active', 'Pending', 'Executing', 'Verifying', 'PendingRevert', 'RevertCancelled', 'Reverting', 'Reverted', 'Ignored', 'Expired', 'Monitoring', 'Resolved', 'Success', 'Error'.
     *
     * @return the currentValue value
     */
    public RecommendedActionCurrentState currentValue() {
        return this.currentValue;
    }

    /**
     * Set current state the recommended action is in. Some commonly used states are: Active      -&gt; recommended action is active and no action has been taken yet. Pending     -&gt; recommended action is approved for and is awaiting execution. Executing   -&gt; recommended action is being applied on the user database. Verifying   -&gt; recommended action was applied and is being verified of its usefulness by the system. Success     -&gt; recommended action was applied and improvement found during verification. Pending Revert  -&gt; verification found little or no improvement so recommended action is queued for revert or user has manually reverted. Reverting   -&gt; changes made while applying recommended action are being reverted on the user database. Reverted    -&gt; successfully reverted the changes made by recommended action on user database. Ignored     -&gt; user explicitly ignored/discarded the recommended action. Possible values include: 'Active', 'Pending', 'Executing', 'Verifying', 'PendingRevert', 'RevertCancelled', 'Reverting', 'Reverted', 'Ignored', 'Expired', 'Monitoring', 'Resolved', 'Success', 'Error'.
     *
     * @param currentValue the currentValue value to set
     * @return the RecommendedActionStateInfo object itself.
     */
    public RecommendedActionStateInfo withCurrentValue(RecommendedActionCurrentState currentValue) {
        this.currentValue = currentValue;
        return this;
    }

    /**
     * Get gets who initiated the execution of this recommended action. Possible Value are: User    -&gt; When user explicitly notified system to apply the recommended action. System  -&gt; When auto-execute status of this advisor was set to 'Enabled', in which case the system applied it. Possible values include: 'User', 'System'.
     *
     * @return the actionInitiatedBy value
     */
    public RecommendedActionInitiatedBy actionInitiatedBy() {
        return this.actionInitiatedBy;
    }

    /**
     * Get gets the time when the state was last modified.
     *
     * @return the lastModified value
     */
    public DateTime lastModified() {
        return this.lastModified;
    }

}
