/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.sql.v2015_05_01_preview;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.sql.v2015_05_01_preview.implementation.SqlManager;
import java.util.List;
import com.microsoft.azure.management.sql.v2015_05_01_preview.implementation.VirtualClusterInner;

/**
 * Type representing VirtualCluster.
 */
public interface VirtualCluster extends HasInner<VirtualClusterInner>, Resource, GroupableResourceCore<SqlManager, VirtualClusterInner>, HasResourceGroup, Refreshable<VirtualCluster>, Updatable<VirtualCluster.Update>, HasManager<SqlManager> {
    /**
     * @return the childResources value.
     */
    List<String> childResources();

    /**
     * @return the family value.
     */
    String family();

    /**
     * @return the subnetId value.
     */
    String subnetId();

    /**
     * The template for a VirtualCluster update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<VirtualCluster>, Resource.UpdateWithTags<Update>, UpdateStages.WithFamily {
    }

    /**
     * Grouping of VirtualCluster update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the virtualcluster update allowing to specify Family.
         */
        interface WithFamily {
            /**
             * Specifies family.
             * @param family If the service has different generations of hardware, for the same SKU, then that can be captured here
             * @return the next update stage
             */
            Update withFamily(String family);
        }

    }
}
