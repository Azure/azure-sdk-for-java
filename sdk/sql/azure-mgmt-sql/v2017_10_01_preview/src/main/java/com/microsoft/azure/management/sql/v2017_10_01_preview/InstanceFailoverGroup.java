/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.sql.v2017_10_01_preview;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.sql.v2017_10_01_preview.implementation.InstanceFailoverGroupInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.sql.v2017_10_01_preview.implementation.SqlManager;
import java.util.List;

/**
 * Type representing InstanceFailoverGroup.
 */
public interface InstanceFailoverGroup extends HasInner<InstanceFailoverGroupInner>, Indexable, Refreshable<InstanceFailoverGroup>, Updatable<InstanceFailoverGroup.Update>, HasManager<SqlManager> {
    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the managedInstancePairs value.
     */
    List<ManagedInstancePairInfo> managedInstancePairs();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the partnerRegions value.
     */
    List<PartnerRegionInfo> partnerRegions();

    /**
     * @return the readOnlyEndpoint value.
     */
    InstanceFailoverGroupReadOnlyEndpoint readOnlyEndpoint();

    /**
     * @return the readWriteEndpoint value.
     */
    InstanceFailoverGroupReadWriteEndpoint readWriteEndpoint();

    /**
     * @return the replicationRole value.
     */
    InstanceFailoverGroupReplicationRole replicationRole();

    /**
     * @return the replicationState value.
     */
    String replicationState();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the InstanceFailoverGroup definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLocation, DefinitionStages.WithManagedInstancePairs, DefinitionStages.WithPartnerRegions, DefinitionStages.WithReadWriteEndpoint, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of InstanceFailoverGroup definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a InstanceFailoverGroup definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the instancefailovergroup definition allowing to specify Location.
         */
        interface WithLocation {
           /**
            * Specifies resourceGroupName, locationName.
            * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal
            * @param locationName The name of the region where the resource is located
            * @return the next definition stage
            */
            WithManagedInstancePairs withExistingLocation(String resourceGroupName, String locationName);
        }

        /**
         * The stage of the instancefailovergroup definition allowing to specify ManagedInstancePairs.
         */
        interface WithManagedInstancePairs {
           /**
            * Specifies managedInstancePairs.
            * @param managedInstancePairs List of managed instance pairs in the failover group
            * @return the next definition stage
            */
            WithPartnerRegions withManagedInstancePairs(List<ManagedInstancePairInfo> managedInstancePairs);
        }

        /**
         * The stage of the instancefailovergroup definition allowing to specify PartnerRegions.
         */
        interface WithPartnerRegions {
           /**
            * Specifies partnerRegions.
            * @param partnerRegions Partner region information for the failover group
            * @return the next definition stage
            */
            WithReadWriteEndpoint withPartnerRegions(List<PartnerRegionInfo> partnerRegions);
        }

        /**
         * The stage of the instancefailovergroup definition allowing to specify ReadWriteEndpoint.
         */
        interface WithReadWriteEndpoint {
           /**
            * Specifies readWriteEndpoint.
            * @param readWriteEndpoint Read-write endpoint of the failover group instance
            * @return the next definition stage
            */
            WithCreate withReadWriteEndpoint(InstanceFailoverGroupReadWriteEndpoint readWriteEndpoint);
        }

        /**
         * The stage of the instancefailovergroup definition allowing to specify ReadOnlyEndpoint.
         */
        interface WithReadOnlyEndpoint {
            /**
             * Specifies readOnlyEndpoint.
             * @param readOnlyEndpoint Read-only endpoint of the failover group instance
             * @return the next definition stage
             */
            WithCreate withReadOnlyEndpoint(InstanceFailoverGroupReadOnlyEndpoint readOnlyEndpoint);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<InstanceFailoverGroup>, DefinitionStages.WithReadOnlyEndpoint {
        }
    }
    /**
     * The template for a InstanceFailoverGroup update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<InstanceFailoverGroup>, UpdateStages.WithReadOnlyEndpoint {
    }

    /**
     * Grouping of InstanceFailoverGroup update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the instancefailovergroup update allowing to specify ReadOnlyEndpoint.
         */
        interface WithReadOnlyEndpoint {
            /**
             * Specifies readOnlyEndpoint.
             * @param readOnlyEndpoint Read-only endpoint of the failover group instance
             * @return the next update stage
             */
            Update withReadOnlyEndpoint(InstanceFailoverGroupReadOnlyEndpoint readOnlyEndpoint);
        }

    }
}
