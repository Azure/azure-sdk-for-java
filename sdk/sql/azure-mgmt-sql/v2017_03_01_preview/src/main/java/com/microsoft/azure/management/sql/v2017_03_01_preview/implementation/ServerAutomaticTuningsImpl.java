/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.sql.v2017_03_01_preview.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.sql.v2017_03_01_preview.ServerAutomaticTunings;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.management.sql.v2017_03_01_preview.ServerAutomaticTuning;

class ServerAutomaticTuningsImpl extends WrapperImpl<ServerAutomaticTuningsInner> implements ServerAutomaticTunings {
    private final SqlManager manager;

    ServerAutomaticTuningsImpl(SqlManager manager) {
        super(manager.inner().serverAutomaticTunings());
        this.manager = manager;
    }

    public SqlManager manager() {
        return this.manager;
    }

    @Override
    public Observable<ServerAutomaticTuning> getAsync(String resourceGroupName, String serverName) {
        ServerAutomaticTuningsInner client = this.inner();
        return client.getAsync(resourceGroupName, serverName)
        .map(new Func1<ServerAutomaticTuningInner, ServerAutomaticTuning>() {
            @Override
            public ServerAutomaticTuning call(ServerAutomaticTuningInner inner) {
                return new ServerAutomaticTuningImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<ServerAutomaticTuning> updateAsync(String resourceGroupName, String serverName, ServerAutomaticTuningInner parameters) {
        ServerAutomaticTuningsInner client = this.inner();
        return client.updateAsync(resourceGroupName, serverName, parameters)
        .map(new Func1<ServerAutomaticTuningInner, ServerAutomaticTuning>() {
            @Override
            public ServerAutomaticTuning call(ServerAutomaticTuningInner inner) {
                return new ServerAutomaticTuningImpl(inner, manager());
            }
        });
    }

}
