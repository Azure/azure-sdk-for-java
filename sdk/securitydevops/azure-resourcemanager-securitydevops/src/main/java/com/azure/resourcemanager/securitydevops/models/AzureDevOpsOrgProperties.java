// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securitydevops.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** AzureDevOps Org properties. */
@Fluent
public final class AzureDevOpsOrgProperties {
    /*
     * The provisioningState property.
     */
    @JsonProperty(value = "provisioningState")
    private ProvisioningState provisioningState;

    /*
     * The autoDiscovery property.
     */
    @JsonProperty(value = "autoDiscovery")
    private AutoDiscovery autoDiscovery;

    /** Creates an instance of AzureDevOpsOrgProperties class. */
    public AzureDevOpsOrgProperties() {
    }

    /**
     * Get the provisioningState property: The provisioningState property.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set the provisioningState property: The provisioningState property.
     *
     * @param provisioningState the provisioningState value to set.
     * @return the AzureDevOpsOrgProperties object itself.
     */
    public AzureDevOpsOrgProperties withProvisioningState(ProvisioningState provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Get the autoDiscovery property: The autoDiscovery property.
     *
     * @return the autoDiscovery value.
     */
    public AutoDiscovery autoDiscovery() {
        return this.autoDiscovery;
    }

    /**
     * Set the autoDiscovery property: The autoDiscovery property.
     *
     * @param autoDiscovery the autoDiscovery value to set.
     * @return the AzureDevOpsOrgProperties object itself.
     */
    public AzureDevOpsOrgProperties withAutoDiscovery(AutoDiscovery autoDiscovery) {
        this.autoDiscovery = autoDiscovery;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
