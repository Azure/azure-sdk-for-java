// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.resourcemanager.apimanagement.models.CertificateCreateOrUpdateParameters;
import com.azure.resourcemanager.apimanagement.models.KeyVaultContractCreateProperties;

/**
 * Samples for WorkspaceCertificate CreateOrUpdate.
 */
public final class WorkspaceCertificateCreateOrUpdateSamples {
    /*
     * x-ms-original-file:
     * specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2024-05-01/examples/
     * ApiManagementCreateWorkspaceCertificateWithKeyVault.json
     */
    /**
     * Sample code: ApiManagementCreateWorkspaceCertificateWithKeyVault.
     * 
     * @param manager Entry point to ApiManagementManager.
     */
    public static void apiManagementCreateWorkspaceCertificateWithKeyVault(
        com.azure.resourcemanager.apimanagement.ApiManagementManager manager) {
        manager.workspaceCertificates()
            .createOrUpdateWithResponse("rg1", "apimService1", "wks1", "templateCertkv",
                new CertificateCreateOrUpdateParameters()
                    .withKeyVault(new KeyVaultContractCreateProperties().withSecretIdentifier("fakeTokenPlaceholder")
                        .withIdentityClientId("ceaa6b06-c00f-43ef-99ac-f53d1fe876a0")),
                null, com.azure.core.util.Context.NONE);
    }

    /*
     * x-ms-original-file:
     * specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2024-05-01/examples/
     * ApiManagementCreateWorkspaceCertificate.json
     */
    /**
     * Sample code: ApiManagementCreateWorkspaceCertificate.
     * 
     * @param manager Entry point to ApiManagementManager.
     */
    public static void
        apiManagementCreateWorkspaceCertificate(com.azure.resourcemanager.apimanagement.ApiManagementManager manager) {
        manager.workspaceCertificates()
            .createOrUpdateWithResponse("rg1", "apimService1", "wks1", "tempcert",
                new CertificateCreateOrUpdateParameters()
                    .withData("****************Base 64 Encoded Certificate *******************************")
                    .withPassword("fakeTokenPlaceholder"),
                null, com.azure.core.util.Context.NONE);
    }
}
