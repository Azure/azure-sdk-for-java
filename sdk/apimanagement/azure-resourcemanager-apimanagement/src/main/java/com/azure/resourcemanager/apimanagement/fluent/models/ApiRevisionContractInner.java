// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Summary of revision metadata. */
@Immutable
public final class ApiRevisionContractInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ApiRevisionContractInner.class);

    /*
     * Identifier of the API Revision.
     */
    @JsonProperty(value = "apiId", access = JsonProperty.Access.WRITE_ONLY)
    private String apiId;

    /*
     * Revision number of API.
     */
    @JsonProperty(value = "apiRevision", access = JsonProperty.Access.WRITE_ONLY)
    private String apiRevision;

    /*
     * The time the API Revision was created. The date conforms to the
     * following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601
     * standard.
     */
    @JsonProperty(value = "createdDateTime", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime createdDateTime;

    /*
     * The time the API Revision were updated. The date conforms to the
     * following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601
     * standard.
     */
    @JsonProperty(value = "updatedDateTime", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime updatedDateTime;

    /*
     * Description of the API Revision.
     */
    @JsonProperty(value = "description", access = JsonProperty.Access.WRITE_ONLY)
    private String description;

    /*
     * Gateway URL for accessing the non-current API Revision.
     */
    @JsonProperty(value = "privateUrl", access = JsonProperty.Access.WRITE_ONLY)
    private String privateUrl;

    /*
     * Indicates if API revision is the current api revision.
     */
    @JsonProperty(value = "isOnline", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean isOnline;

    /*
     * Indicates if API revision is accessible via the gateway.
     */
    @JsonProperty(value = "isCurrent", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean isCurrent;

    /**
     * Get the apiId property: Identifier of the API Revision.
     *
     * @return the apiId value.
     */
    public String apiId() {
        return this.apiId;
    }

    /**
     * Get the apiRevision property: Revision number of API.
     *
     * @return the apiRevision value.
     */
    public String apiRevision() {
        return this.apiRevision;
    }

    /**
     * Get the createdDateTime property: The time the API Revision was created. The date conforms to the following
     * format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
     *
     * @return the createdDateTime value.
     */
    public OffsetDateTime createdDateTime() {
        return this.createdDateTime;
    }

    /**
     * Get the updatedDateTime property: The time the API Revision were updated. The date conforms to the following
     * format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
     *
     * @return the updatedDateTime value.
     */
    public OffsetDateTime updatedDateTime() {
        return this.updatedDateTime;
    }

    /**
     * Get the description property: Description of the API Revision.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Get the privateUrl property: Gateway URL for accessing the non-current API Revision.
     *
     * @return the privateUrl value.
     */
    public String privateUrl() {
        return this.privateUrl;
    }

    /**
     * Get the isOnline property: Indicates if API revision is the current api revision.
     *
     * @return the isOnline value.
     */
    public Boolean isOnline() {
        return this.isOnline;
    }

    /**
     * Get the isCurrent property: Indicates if API revision is accessible via the gateway.
     *
     * @return the isCurrent value.
     */
    public Boolean isCurrent() {
        return this.isCurrent;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
