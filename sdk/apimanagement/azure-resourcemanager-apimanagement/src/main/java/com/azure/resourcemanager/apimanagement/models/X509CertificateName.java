// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Properties of server X509Names. */
@Fluent
public final class X509CertificateName {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(X509CertificateName.class);

    /*
     * Common Name of the Certificate.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * Thumbprint for the Issuer of the Certificate.
     */
    @JsonProperty(value = "issuerCertificateThumbprint")
    private String issuerCertificateThumbprint;

    /**
     * Get the name property: Common Name of the Certificate.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Common Name of the Certificate.
     *
     * @param name the name value to set.
     * @return the X509CertificateName object itself.
     */
    public X509CertificateName withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the issuerCertificateThumbprint property: Thumbprint for the Issuer of the Certificate.
     *
     * @return the issuerCertificateThumbprint value.
     */
    public String issuerCertificateThumbprint() {
        return this.issuerCertificateThumbprint;
    }

    /**
     * Set the issuerCertificateThumbprint property: Thumbprint for the Issuer of the Certificate.
     *
     * @param issuerCertificateThumbprint the issuerCertificateThumbprint value to set.
     * @return the X509CertificateName object itself.
     */
    public X509CertificateName withIssuerCertificateThumbprint(String issuerCertificateThumbprint) {
        this.issuerCertificateThumbprint = issuerCertificateThumbprint;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
