// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Content type contract details. */
@JsonFlatten
@Fluent
public class ContentTypeContractInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ContentTypeContractInner.class);

    /*
     * Content type identifier
     */
    @JsonProperty(value = "properties.id")
    private String idPropertiesId;

    /*
     * Content type name. Must be 1 to 250 characters long.
     */
    @JsonProperty(value = "properties.name")
    private String namePropertiesName;

    /*
     * Content type description.
     */
    @JsonProperty(value = "properties.description")
    private String description;

    /*
     * Content type schema.
     */
    @JsonProperty(value = "properties.schema")
    private Object schema;

    /*
     * Content type version.
     */
    @JsonProperty(value = "properties.version")
    private String version;

    /**
     * Get the idPropertiesId property: Content type identifier.
     *
     * @return the idPropertiesId value.
     */
    public String idPropertiesId() {
        return this.idPropertiesId;
    }

    /**
     * Set the idPropertiesId property: Content type identifier.
     *
     * @param idPropertiesId the idPropertiesId value to set.
     * @return the ContentTypeContractInner object itself.
     */
    public ContentTypeContractInner withIdPropertiesId(String idPropertiesId) {
        this.idPropertiesId = idPropertiesId;
        return this;
    }

    /**
     * Get the namePropertiesName property: Content type name. Must be 1 to 250 characters long.
     *
     * @return the namePropertiesName value.
     */
    public String namePropertiesName() {
        return this.namePropertiesName;
    }

    /**
     * Set the namePropertiesName property: Content type name. Must be 1 to 250 characters long.
     *
     * @param namePropertiesName the namePropertiesName value to set.
     * @return the ContentTypeContractInner object itself.
     */
    public ContentTypeContractInner withNamePropertiesName(String namePropertiesName) {
        this.namePropertiesName = namePropertiesName;
        return this;
    }

    /**
     * Get the description property: Content type description.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Content type description.
     *
     * @param description the description value to set.
     * @return the ContentTypeContractInner object itself.
     */
    public ContentTypeContractInner withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the schema property: Content type schema.
     *
     * @return the schema value.
     */
    public Object schema() {
        return this.schema;
    }

    /**
     * Set the schema property: Content type schema.
     *
     * @param schema the schema value to set.
     * @return the ContentTypeContractInner object itself.
     */
    public ContentTypeContractInner withSchema(Object schema) {
        this.schema = schema;
        return this;
    }

    /**
     * Get the version property: Content type version.
     *
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Set the version property: Content type version.
     *
     * @param version the version value to set.
     * @return the ContentTypeContractInner object itself.
     */
    public ContentTypeContractInner withVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
