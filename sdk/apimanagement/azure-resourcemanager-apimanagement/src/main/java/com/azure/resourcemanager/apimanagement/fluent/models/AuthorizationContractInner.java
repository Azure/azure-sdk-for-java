// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.resourcemanager.apimanagement.models.AuthorizationError;
import com.azure.resourcemanager.apimanagement.models.AuthorizationType;
import com.azure.resourcemanager.apimanagement.models.OAuth2GrantType;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Authorization contract. */
@Fluent
public final class AuthorizationContractInner extends ProxyResource {
    /*
     * Properties of the Authorization Contract.
     */
    @JsonProperty(value = "properties")
    private AuthorizationContractProperties innerProperties;

    /** Creates an instance of AuthorizationContractInner class. */
    public AuthorizationContractInner() {
    }

    /**
     * Get the innerProperties property: Properties of the Authorization Contract.
     *
     * @return the innerProperties value.
     */
    private AuthorizationContractProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the authorizationType property: Authorization type options.
     *
     * @return the authorizationType value.
     */
    public AuthorizationType authorizationType() {
        return this.innerProperties() == null ? null : this.innerProperties().authorizationType();
    }

    /**
     * Set the authorizationType property: Authorization type options.
     *
     * @param authorizationType the authorizationType value to set.
     * @return the AuthorizationContractInner object itself.
     */
    public AuthorizationContractInner withAuthorizationType(AuthorizationType authorizationType) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AuthorizationContractProperties();
        }
        this.innerProperties().withAuthorizationType(authorizationType);
        return this;
    }

    /**
     * Get the oAuth2GrantType property: OAuth2 grant type options.
     *
     * @return the oAuth2GrantType value.
     */
    public OAuth2GrantType oAuth2GrantType() {
        return this.innerProperties() == null ? null : this.innerProperties().oAuth2GrantType();
    }

    /**
     * Set the oAuth2GrantType property: OAuth2 grant type options.
     *
     * @param oAuth2GrantType the oAuth2GrantType value to set.
     * @return the AuthorizationContractInner object itself.
     */
    public AuthorizationContractInner withOAuth2GrantType(OAuth2GrantType oAuth2GrantType) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AuthorizationContractProperties();
        }
        this.innerProperties().withOAuth2GrantType(oAuth2GrantType);
        return this;
    }

    /**
     * Get the parameters property: Authorization parameters.
     *
     * @return the parameters value.
     */
    public Map<String, String> parameters() {
        return this.innerProperties() == null ? null : this.innerProperties().parameters();
    }

    /**
     * Set the parameters property: Authorization parameters.
     *
     * @param parameters the parameters value to set.
     * @return the AuthorizationContractInner object itself.
     */
    public AuthorizationContractInner withParameters(Map<String, String> parameters) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AuthorizationContractProperties();
        }
        this.innerProperties().withParameters(parameters);
        return this;
    }

    /**
     * Get the error property: Authorization error details.
     *
     * @return the error value.
     */
    public AuthorizationError error() {
        return this.innerProperties() == null ? null : this.innerProperties().error();
    }

    /**
     * Set the error property: Authorization error details.
     *
     * @param error the error value to set.
     * @return the AuthorizationContractInner object itself.
     */
    public AuthorizationContractInner withError(AuthorizationError error) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AuthorizationContractProperties();
        }
        this.innerProperties().withError(error);
        return this;
    }

    /**
     * Get the status property: Status of the Authorization.
     *
     * @return the status value.
     */
    public String status() {
        return this.innerProperties() == null ? null : this.innerProperties().status();
    }

    /**
     * Set the status property: Status of the Authorization.
     *
     * @param status the status value to set.
     * @return the AuthorizationContractInner object itself.
     */
    public AuthorizationContractInner withStatus(String status) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AuthorizationContractProperties();
        }
        this.innerProperties().withStatus(status);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
