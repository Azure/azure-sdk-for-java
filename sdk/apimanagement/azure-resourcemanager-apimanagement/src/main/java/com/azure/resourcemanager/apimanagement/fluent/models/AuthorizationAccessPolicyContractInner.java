// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Authorization access policy contract. */
@Fluent
public final class AuthorizationAccessPolicyContractInner extends ProxyResource {
    /*
     * Properties of the Authorization Contract.
     */
    @JsonProperty(value = "properties")
    private AuthorizationAccessPolicyContractProperties innerProperties;

    /** Creates an instance of AuthorizationAccessPolicyContractInner class. */
    public AuthorizationAccessPolicyContractInner() {
    }

    /**
     * Get the innerProperties property: Properties of the Authorization Contract.
     *
     * @return the innerProperties value.
     */
    private AuthorizationAccessPolicyContractProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the tenantId property: The Tenant Id.
     *
     * @return the tenantId value.
     */
    public String tenantId() {
        return this.innerProperties() == null ? null : this.innerProperties().tenantId();
    }

    /**
     * Set the tenantId property: The Tenant Id.
     *
     * @param tenantId the tenantId value to set.
     * @return the AuthorizationAccessPolicyContractInner object itself.
     */
    public AuthorizationAccessPolicyContractInner withTenantId(String tenantId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AuthorizationAccessPolicyContractProperties();
        }
        this.innerProperties().withTenantId(tenantId);
        return this;
    }

    /**
     * Get the objectId property: The Object Id.
     *
     * @return the objectId value.
     */
    public String objectId() {
        return this.innerProperties() == null ? null : this.innerProperties().objectId();
    }

    /**
     * Set the objectId property: The Object Id.
     *
     * @param objectId the objectId value to set.
     * @return the AuthorizationAccessPolicyContractInner object itself.
     */
    public AuthorizationAccessPolicyContractInner withObjectId(String objectId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AuthorizationAccessPolicyContractProperties();
        }
        this.innerProperties().withObjectId(objectId);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
