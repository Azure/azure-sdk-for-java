// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Subscription key parameter names details. */
@Fluent
public final class SubscriptionKeyParameterNamesContract {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(SubscriptionKeyParameterNamesContract.class);

    /*
     * Subscription key header name.
     */
    @JsonProperty(value = "header")
    private String headerProperty;

    /*
     * Subscription key query string parameter name.
     */
    @JsonProperty(value = "query")
    private String query;

    /**
     * Get the headerProperty property: Subscription key header name.
     *
     * @return the headerProperty value.
     */
    public String headerProperty() {
        return this.headerProperty;
    }

    /**
     * Set the headerProperty property: Subscription key header name.
     *
     * @param headerProperty the headerProperty value to set.
     * @return the SubscriptionKeyParameterNamesContract object itself.
     */
    public SubscriptionKeyParameterNamesContract withHeaderProperty(String headerProperty) {
        this.headerProperty = headerProperty;
        return this;
    }

    /**
     * Get the query property: Subscription key query string parameter name.
     *
     * @return the query value.
     */
    public String query() {
        return this.query;
    }

    /**
     * Set the query property: Subscription key query string parameter name.
     *
     * @param query the query value to set.
     * @return the SubscriptionKeyParameterNamesContract object itself.
     */
    public SubscriptionKeyParameterNamesContract withQuery(String query) {
        this.query = query;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
