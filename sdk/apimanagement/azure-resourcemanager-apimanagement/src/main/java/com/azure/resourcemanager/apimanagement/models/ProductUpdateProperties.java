// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Parameters supplied to the Update Product operation. */
@Fluent
public final class ProductUpdateProperties extends ProductEntityBaseParameters {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ProductUpdateProperties.class);

    /*
     * Product name.
     */
    @JsonProperty(value = "displayName")
    private String displayName;

    /**
     * Get the displayName property: Product name.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: Product name.
     *
     * @param displayName the displayName value to set.
     * @return the ProductUpdateProperties object itself.
     */
    public ProductUpdateProperties withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ProductUpdateProperties withDescription(String description) {
        super.withDescription(description);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ProductUpdateProperties withTerms(String terms) {
        super.withTerms(terms);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ProductUpdateProperties withSubscriptionRequired(Boolean subscriptionRequired) {
        super.withSubscriptionRequired(subscriptionRequired);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ProductUpdateProperties withApprovalRequired(Boolean approvalRequired) {
        super.withApprovalRequired(approvalRequired);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ProductUpdateProperties withSubscriptionsLimit(Integer subscriptionsLimit) {
        super.withSubscriptionsLimit(subscriptionsLimit);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ProductUpdateProperties withState(ProductState state) {
        super.withState(state);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
