// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Tenant Settings. */
@JsonFlatten
@Fluent
public class AccessInformationContractInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(AccessInformationContractInner.class);

    /*
     * Access Information type ('access' or 'gitAccess')
     */
    @JsonProperty(value = "properties.id")
    private String idPropertiesId;

    /*
     * Principal (User) Identifier.
     */
    @JsonProperty(value = "properties.principalId")
    private String principalId;

    /*
     * Determines whether direct access is enabled.
     */
    @JsonProperty(value = "properties.enabled")
    private Boolean enabled;

    /**
     * Get the idPropertiesId property: Access Information type ('access' or 'gitAccess').
     *
     * @return the idPropertiesId value.
     */
    public String idPropertiesId() {
        return this.idPropertiesId;
    }

    /**
     * Set the idPropertiesId property: Access Information type ('access' or 'gitAccess').
     *
     * @param idPropertiesId the idPropertiesId value to set.
     * @return the AccessInformationContractInner object itself.
     */
    public AccessInformationContractInner withIdPropertiesId(String idPropertiesId) {
        this.idPropertiesId = idPropertiesId;
        return this;
    }

    /**
     * Get the principalId property: Principal (User) Identifier.
     *
     * @return the principalId value.
     */
    public String principalId() {
        return this.principalId;
    }

    /**
     * Set the principalId property: Principal (User) Identifier.
     *
     * @param principalId the principalId value to set.
     * @return the AccessInformationContractInner object itself.
     */
    public AccessInformationContractInner withPrincipalId(String principalId) {
        this.principalId = principalId;
        return this;
    }

    /**
     * Get the enabled property: Determines whether direct access is enabled.
     *
     * @return the enabled value.
     */
    public Boolean enabled() {
        return this.enabled;
    }

    /**
     * Set the enabled property: Determines whether direct access is enabled.
     *
     * @param enabled the enabled value to set.
     * @return the AccessInformationContractInner object itself.
     */
    public AccessInformationContractInner withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
