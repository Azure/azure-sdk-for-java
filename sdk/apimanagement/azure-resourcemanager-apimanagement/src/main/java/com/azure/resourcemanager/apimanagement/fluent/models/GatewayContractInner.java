// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.apimanagement.models.ResourceLocationDataContract;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Gateway details. */
@JsonFlatten
@Fluent
public class GatewayContractInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(GatewayContractInner.class);

    /*
     * Gateway location.
     */
    @JsonProperty(value = "properties.locationData")
    private ResourceLocationDataContract locationData;

    /*
     * Gateway description
     */
    @JsonProperty(value = "properties.description")
    private String description;

    /**
     * Get the locationData property: Gateway location.
     *
     * @return the locationData value.
     */
    public ResourceLocationDataContract locationData() {
        return this.locationData;
    }

    /**
     * Set the locationData property: Gateway location.
     *
     * @param locationData the locationData value to set.
     * @return the GatewayContractInner object itself.
     */
    public GatewayContractInner withLocationData(ResourceLocationDataContract locationData) {
        this.locationData = locationData;
        return this;
    }

    /**
     * Get the description property: Gateway description.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Gateway description.
     *
     * @param description the description value to set.
     * @return the GatewayContractInner object itself.
     */
    public GatewayContractInner withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (locationData() != null) {
            locationData().validate();
        }
    }
}
