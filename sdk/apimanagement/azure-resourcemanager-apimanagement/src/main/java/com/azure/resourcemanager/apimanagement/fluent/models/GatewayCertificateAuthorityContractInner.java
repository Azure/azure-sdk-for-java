// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Gateway certificate authority details. */
@JsonFlatten
@Fluent
public class GatewayCertificateAuthorityContractInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(GatewayCertificateAuthorityContractInner.class);

    /*
     * Determines whether certificate authority is trusted.
     */
    @JsonProperty(value = "properties.isTrusted")
    private Boolean isTrusted;

    /**
     * Get the isTrusted property: Determines whether certificate authority is trusted.
     *
     * @return the isTrusted value.
     */
    public Boolean isTrusted() {
        return this.isTrusted;
    }

    /**
     * Set the isTrusted property: Determines whether certificate authority is trusted.
     *
     * @param isTrusted the isTrusted value to set.
     * @return the GatewayCertificateAuthorityContractInner object itself.
     */
    public GatewayCertificateAuthorityContractInner withIsTrusted(Boolean isTrusted) {
        this.isTrusted = isTrusted;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
