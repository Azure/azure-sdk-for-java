// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The DataMaskingEntity model. */
@Fluent
public final class DataMaskingEntity {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DataMaskingEntity.class);

    /*
     * The name of an entity to mask (e.g. a name of a header or a query
     * parameter).
     */
    @JsonProperty(value = "value")
    private String value;

    /*
     * Data masking mode.
     */
    @JsonProperty(value = "mode")
    private DataMaskingMode mode;

    /**
     * Get the value property: The name of an entity to mask (e.g. a name of a header or a query parameter).
     *
     * @return the value value.
     */
    public String value() {
        return this.value;
    }

    /**
     * Set the value property: The name of an entity to mask (e.g. a name of a header or a query parameter).
     *
     * @param value the value value to set.
     * @return the DataMaskingEntity object itself.
     */
    public DataMaskingEntity withValue(String value) {
        this.value = value;
        return this;
    }

    /**
     * Get the mode property: Data masking mode.
     *
     * @return the mode value.
     */
    public DataMaskingMode mode() {
        return this.mode;
    }

    /**
     * Set the mode property: Data masking mode.
     *
     * @param mode the mode value to set.
     * @return the DataMaskingEntity object itself.
     */
    public DataMaskingEntity withMode(DataMaskingMode mode) {
        this.mode = mode;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
