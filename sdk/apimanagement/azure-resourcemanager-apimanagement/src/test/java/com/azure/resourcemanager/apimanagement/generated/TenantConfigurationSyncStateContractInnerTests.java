// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.TenantConfigurationSyncStateContractInner;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class TenantConfigurationSyncStateContractInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TenantConfigurationSyncStateContractInner model = BinaryData.fromString(
            "{\"properties\":{\"branch\":\"ounzsiywh\",\"commitId\":\"ymfpopikz\",\"isExport\":false,\"isSynced\":false,\"isGitEnabled\":false,\"syncDate\":\"2021-09-07T18:51:20Z\",\"configurationChangeDate\":\"2021-02-24T08:18:58Z\",\"lastOperationId\":\"w\"},\"id\":\"dlkhczygpm\",\"name\":\"fjc\",\"type\":\"lojhhyl\"}")
            .toObject(TenantConfigurationSyncStateContractInner.class);
        Assertions.assertEquals("ounzsiywh", model.branch());
        Assertions.assertEquals("ymfpopikz", model.commitId());
        Assertions.assertEquals(false, model.isExport());
        Assertions.assertEquals(false, model.isSynced());
        Assertions.assertEquals(false, model.isGitEnabled());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-07T18:51:20Z"), model.syncDate());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-24T08:18:58Z"), model.configurationChangeDate());
        Assertions.assertEquals("w", model.lastOperationId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TenantConfigurationSyncStateContractInner model
            = new TenantConfigurationSyncStateContractInner().withBranch("ounzsiywh")
                .withCommitId("ymfpopikz")
                .withIsExport(false)
                .withIsSynced(false)
                .withIsGitEnabled(false)
                .withSyncDate(OffsetDateTime.parse("2021-09-07T18:51:20Z"))
                .withConfigurationChangeDate(OffsetDateTime.parse("2021-02-24T08:18:58Z"))
                .withLastOperationId("w");
        model = BinaryData.fromObject(model).toObject(TenantConfigurationSyncStateContractInner.class);
        Assertions.assertEquals("ounzsiywh", model.branch());
        Assertions.assertEquals("ymfpopikz", model.commitId());
        Assertions.assertEquals(false, model.isExport());
        Assertions.assertEquals(false, model.isSynced());
        Assertions.assertEquals(false, model.isGitEnabled());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-07T18:51:20Z"), model.syncDate());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-24T08:18:58Z"), model.configurationChangeDate());
        Assertions.assertEquals("w", model.lastOperationId());
    }
}
