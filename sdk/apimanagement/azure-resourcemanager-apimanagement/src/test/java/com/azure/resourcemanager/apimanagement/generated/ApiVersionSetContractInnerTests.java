// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.ApiVersionSetContractInner;
import com.azure.resourcemanager.apimanagement.models.VersioningScheme;
import org.junit.jupiter.api.Assertions;

public final class ApiVersionSetContractInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ApiVersionSetContractInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"displayName\":\"wbeqrkuor\",\"versioningScheme\":\"Query\",\"description\":\"sruqnmdvha\",\"versionQueryName\":\"vjytiqswbq\",\"versionHeaderName\":\"zwxiytx\"},\"id\":\"dgukvlbpktgds\",\"name\":\"youambewr\",\"type\":\"swmowegmmuteyxe\"}")
                .toObject(ApiVersionSetContractInner.class);
        Assertions.assertEquals("wbeqrkuor", model.displayName());
        Assertions.assertEquals(VersioningScheme.QUERY, model.versioningScheme());
        Assertions.assertEquals("sruqnmdvha", model.description());
        Assertions.assertEquals("vjytiqswbq", model.versionQueryName());
        Assertions.assertEquals("zwxiytx", model.versionHeaderName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ApiVersionSetContractInner model =
            new ApiVersionSetContractInner()
                .withDisplayName("wbeqrkuor")
                .withVersioningScheme(VersioningScheme.QUERY)
                .withDescription("sruqnmdvha")
                .withVersionQueryName("vjytiqswbq")
                .withVersionHeaderName("zwxiytx");
        model = BinaryData.fromObject(model).toObject(ApiVersionSetContractInner.class);
        Assertions.assertEquals("wbeqrkuor", model.displayName());
        Assertions.assertEquals(VersioningScheme.QUERY, model.versioningScheme());
        Assertions.assertEquals("sruqnmdvha", model.description());
        Assertions.assertEquals("vjytiqswbq", model.versionQueryName());
        Assertions.assertEquals("zwxiytx", model.versionHeaderName());
    }
}
