// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.CacheContractInner;
import com.azure.resourcemanager.apimanagement.models.CacheCollection;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CacheCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CacheCollection model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"description\":\"ztx\",\"connectionString\":\"brfgdrwji\",\"useFromLocation\":\"ewhfjsrwqrxetf\",\"resourceId\":\"wvrrmdqn\"},\"id\":\"ycnawthvmaxgnuy\",\"name\":\"a\",\"type\":\"cmh\"}],\"count\":7145608410541121603,\"nextLink\":\"cehokw\"}")
                .toObject(CacheCollection.class);
        Assertions.assertEquals("ztx", model.value().get(0).description());
        Assertions.assertEquals("brfgdrwji", model.value().get(0).connectionString());
        Assertions.assertEquals("ewhfjsrwqrxetf", model.value().get(0).useFromLocation());
        Assertions.assertEquals("wvrrmdqn", model.value().get(0).resourceId());
        Assertions.assertEquals(7145608410541121603L, model.count());
        Assertions.assertEquals("cehokw", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CacheCollection model =
            new CacheCollection()
                .withValue(
                    Arrays
                        .asList(
                            new CacheContractInner()
                                .withDescription("ztx")
                                .withConnectionString("brfgdrwji")
                                .withUseFromLocation("ewhfjsrwqrxetf")
                                .withResourceId("wvrrmdqn")))
                .withCount(7145608410541121603L)
                .withNextLink("cehokw");
        model = BinaryData.fromObject(model).toObject(CacheCollection.class);
        Assertions.assertEquals("ztx", model.value().get(0).description());
        Assertions.assertEquals("brfgdrwji", model.value().get(0).connectionString());
        Assertions.assertEquals("ewhfjsrwqrxetf", model.value().get(0).useFromLocation());
        Assertions.assertEquals("wvrrmdqn", model.value().get(0).resourceId());
        Assertions.assertEquals(7145608410541121603L, model.count());
        Assertions.assertEquals("cehokw", model.nextLink());
    }
}
