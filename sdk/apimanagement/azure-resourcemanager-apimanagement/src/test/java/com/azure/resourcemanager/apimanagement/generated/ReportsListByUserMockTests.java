// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.models.ReportRecordContract;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReportsListByUserMockTests {
    @Test
    public void testListByUser() throws Exception {
        String responseStr
            = "{\"value\":[{\"name\":\"igawlojwvrovjvj\",\"timestamp\":\"2021-12-03T10:47:52Z\",\"interval\":\"cnbucb\",\"country\":\"mujzmfpspaxhfu\",\"region\":\"gssssjcpfepylms\",\"zip\":\"vjvdcciyz\",\"userId\":\"jfmmwk\",\"productId\":\"yxyksdel\",\"apiId\":\"qmffv\",\"operationId\":\"tu\",\"apiRegion\":\"nxkxqnwcekqsb\",\"subscriptionId\":\"adfapzebjegwwgve\",\"callCountSuccess\":705637482,\"callCountBlocked\":902540957,\"callCountFailed\":2047322905,\"callCountOther\":23773969,\"callCountTotal\":1200766437,\"bandwidth\":1282938280074693087,\"cacheHitCount\":763056770,\"cacheMissCount\":1949528039,\"apiTimeAvg\":13.994787229971184,\"apiTimeMin\":18.122817592285134,\"apiTimeMax\":61.72163500085921,\"serviceTimeAvg\":5.543209389555493,\"serviceTimeMin\":54.57257112590772,\"serviceTimeMax\":5.668342718576669}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<ReportRecordContract> response = manager.reports()
            .listByUser("eamzlqvajztsvc", "sythuioixpfgqlw", "ojwvvqcjrmnverbf", 510508458, 717884344, "uweuitqeyon",
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("igawlojwvrovjvj", response.iterator().next().name());
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-03T10:47:52Z"), response.iterator().next().timestamp());
        Assertions.assertEquals("cnbucb", response.iterator().next().interval());
        Assertions.assertEquals("mujzmfpspaxhfu", response.iterator().next().country());
        Assertions.assertEquals("gssssjcpfepylms", response.iterator().next().region());
        Assertions.assertEquals("vjvdcciyz", response.iterator().next().zip());
        Assertions.assertEquals("qmffv", response.iterator().next().apiId());
        Assertions.assertEquals("tu", response.iterator().next().operationId());
        Assertions.assertEquals("nxkxqnwcekqsb", response.iterator().next().apiRegion());
        Assertions.assertEquals("adfapzebjegwwgve", response.iterator().next().subscriptionId());
        Assertions.assertEquals(705637482, response.iterator().next().callCountSuccess());
        Assertions.assertEquals(902540957, response.iterator().next().callCountBlocked());
        Assertions.assertEquals(2047322905, response.iterator().next().callCountFailed());
        Assertions.assertEquals(23773969, response.iterator().next().callCountOther());
        Assertions.assertEquals(1200766437, response.iterator().next().callCountTotal());
        Assertions.assertEquals(1282938280074693087L, response.iterator().next().bandwidth());
        Assertions.assertEquals(763056770, response.iterator().next().cacheHitCount());
        Assertions.assertEquals(1949528039, response.iterator().next().cacheMissCount());
        Assertions.assertEquals(13.994787229971184D, response.iterator().next().apiTimeAvg());
        Assertions.assertEquals(18.122817592285134D, response.iterator().next().apiTimeMin());
        Assertions.assertEquals(61.72163500085921D, response.iterator().next().apiTimeMax());
        Assertions.assertEquals(5.543209389555493D, response.iterator().next().serviceTimeAvg());
        Assertions.assertEquals(54.57257112590772D, response.iterator().next().serviceTimeMin());
        Assertions.assertEquals(5.668342718576669D, response.iterator().next().serviceTimeMax());
    }
}
