// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.models.ConfigurationIdName;
import com.azure.resourcemanager.apimanagement.models.TenantConfigurationSyncStateContract;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class TenantConfigurationsGetSyncStateWithResponseMockTests {
    @Test
    public void testGetSyncStateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"branch\":\"yorlrdamyumrob\",\"commitId\":\"xnymuygjwq\",\"isExport\":true,\"isSynced\":false,\"isGitEnabled\":false,\"syncDate\":\"2021-08-26T17:55:34Z\",\"configurationChangeDate\":\"2020-12-28T06:51:19Z\",\"lastOperationId\":\"sdgyhe\"},\"id\":\"ayktutflh\",\"name\":\"gox\",\"type\":\"fsahm\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        TenantConfigurationSyncStateContract response = manager.tenantConfigurations()
            .getSyncStateWithResponse("aaiqyxlro", "xpebsxcnhq", ConfigurationIdName.CONFIGURATION,
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("yorlrdamyumrob", response.branch());
        Assertions.assertEquals("xnymuygjwq", response.commitId());
        Assertions.assertTrue(response.isExport());
        Assertions.assertFalse(response.isSynced());
        Assertions.assertFalse(response.isGitEnabled());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-26T17:55:34Z"), response.syncDate());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-28T06:51:19Z"), response.configurationChangeDate());
        Assertions.assertEquals("sdgyhe", response.lastOperationId());
    }
}
