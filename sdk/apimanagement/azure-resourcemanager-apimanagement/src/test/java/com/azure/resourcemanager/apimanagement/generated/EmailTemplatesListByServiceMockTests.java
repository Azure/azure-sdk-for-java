// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.models.EmailTemplateContract;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class EmailTemplatesListByServiceMockTests {
    @Test
    public void testListByService() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"subject\":\"litxrrgkwiyoyh\",\"body\":\"oivxcodwkwoytc\",\"title\":\"hhsiz\",\"description\":\"ewlfwfiikqcdnzs\",\"isDefault\":true,\"parameters\":[{\"name\":\"eoodmcrxly\",\"title\":\"ah\",\"description\":\"ufakrxjjwnbrmdwt\"}]},\"id\":\"rnlsyiaanistc\",\"name\":\"hatclpphcstmryc\",\"type\":\"anapfaoiz\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<EmailTemplateContract> response = manager.emailTemplates()
            .listByService("eaeyzwloqrmgdhym", "pvlxtywu", "hj", 884047458, 1471562389,
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("litxrrgkwiyoyh", response.iterator().next().subject());
        Assertions.assertEquals("oivxcodwkwoytc", response.iterator().next().body());
        Assertions.assertEquals("hhsiz", response.iterator().next().title());
        Assertions.assertEquals("ewlfwfiikqcdnzs", response.iterator().next().description());
        Assertions.assertEquals("eoodmcrxly", response.iterator().next().parameters().get(0).name());
        Assertions.assertEquals("ah", response.iterator().next().parameters().get(0).title());
        Assertions.assertEquals("ufakrxjjwnbrmdwt", response.iterator().next().parameters().get(0).description());
    }
}
