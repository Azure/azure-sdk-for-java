// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.IssueContractInner;
import com.azure.resourcemanager.apimanagement.models.State;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class IssueContractInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IssueContractInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"title\":\"eysfaqegplw\",\"description\":\"ysh\",\"userId\":\"ddkvbxgkqu\",\"createdDate\":\"2021-03-15T20:21:34Z\",\"state\":\"removed\",\"apiId\":\"dacarvvlfnty\"},\"id\":\"tpo\",\"name\":\"wenaz\",\"type\":\"r\"}")
                .toObject(IssueContractInner.class);
        Assertions.assertEquals("eysfaqegplw", model.title());
        Assertions.assertEquals("ysh", model.description());
        Assertions.assertEquals("ddkvbxgkqu", model.userId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-15T20:21:34Z"), model.createdDate());
        Assertions.assertEquals(State.REMOVED, model.state());
        Assertions.assertEquals("dacarvvlfnty", model.apiId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IssueContractInner model =
            new IssueContractInner()
                .withTitle("eysfaqegplw")
                .withDescription("ysh")
                .withUserId("ddkvbxgkqu")
                .withCreatedDate(OffsetDateTime.parse("2021-03-15T20:21:34Z"))
                .withState(State.REMOVED)
                .withApiId("dacarvvlfnty");
        model = BinaryData.fromObject(model).toObject(IssueContractInner.class);
        Assertions.assertEquals("eysfaqegplw", model.title());
        Assertions.assertEquals("ysh", model.description());
        Assertions.assertEquals("ddkvbxgkqu", model.userId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-15T20:21:34Z"), model.createdDate());
        Assertions.assertEquals(State.REMOVED, model.state());
        Assertions.assertEquals("dacarvvlfnty", model.apiId());
    }
}
