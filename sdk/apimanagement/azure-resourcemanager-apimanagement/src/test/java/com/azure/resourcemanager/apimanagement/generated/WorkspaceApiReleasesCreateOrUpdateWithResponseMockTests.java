// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.fluent.models.ApiReleaseContractInner;
import com.azure.resourcemanager.apimanagement.models.ApiReleaseContract;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkspaceApiReleasesCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"apiId\":\"ptvbudb\",\"createdDateTime\":\"2021-11-26T08:59:50Z\",\"updatedDateTime\":\"2021-05-23T16:20:07Z\",\"notes\":\"lyjel\"},\"id\":\"hmuzhxkofzx\",\"name\":\"qsl\",\"type\":\"okbamah\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ApiReleaseContract response = manager.workspaceApiReleases()
            .createOrUpdateWithResponse("bosacrnpscfkef", "ltxefamimgjuvjv", "gecehennledhouk", "jwkctdnnqokqeu", "sl",
                new ApiReleaseContractInner().withApiId("p").withNotes("lpe"), "lskeifwqtcownx",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ptvbudb", response.apiId());
        Assertions.assertEquals("lyjel", response.notes());
    }
}
