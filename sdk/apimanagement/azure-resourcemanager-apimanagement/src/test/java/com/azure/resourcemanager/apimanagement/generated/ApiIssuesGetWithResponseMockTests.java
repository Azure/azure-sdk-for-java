// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.models.IssueContract;
import com.azure.resourcemanager.apimanagement.models.State;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ApiIssuesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"title\":\"clnh\",\"description\":\"jcyuzlybqsci\",\"userId\":\"vylkvckcafnwq\",\"createdDate\":\"2021-03-11T12:54:46Z\",\"state\":\"open\",\"apiId\":\"viulbyl\"},\"id\":\"g\",\"name\":\"zrycw\",\"type\":\"bgumwhmxpuckns\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        IssueContract response = manager.apiIssues()
            .getWithResponse("ejqaw", "usqpfzxkczbd", "pbbimh", "bozvo", false, com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("clnh", response.title());
        Assertions.assertEquals("jcyuzlybqsci", response.description());
        Assertions.assertEquals("vylkvckcafnwq", response.userId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-11T12:54:46Z"), response.createdDate());
        Assertions.assertEquals(State.OPEN, response.state());
        Assertions.assertEquals("viulbyl", response.apiId());
    }
}
