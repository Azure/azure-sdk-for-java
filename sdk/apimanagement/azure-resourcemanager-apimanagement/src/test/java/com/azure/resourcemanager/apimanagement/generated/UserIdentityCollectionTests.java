// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.UserIdentityContractInner;
import com.azure.resourcemanager.apimanagement.models.UserIdentityCollection;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UserIdentityCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UserIdentityCollection model = BinaryData.fromString(
            "{\"value\":[{\"provider\":\"mrnotocjnzdaiovr\",\"id\":\"rpqphkvyyzad\"},{\"provider\":\"xylaypdtyzvelffo\",\"id\":\"riwhjdfrwp\"},{\"provider\":\"h\",\"id\":\"nkcclpctuog\"}],\"count\":1046375942793669965,\"nextLink\":\"fsgmospo\"}")
            .toObject(UserIdentityCollection.class);
        Assertions.assertEquals("mrnotocjnzdaiovr", model.value().get(0).provider());
        Assertions.assertEquals("rpqphkvyyzad", model.value().get(0).id());
        Assertions.assertEquals(1046375942793669965L, model.count());
        Assertions.assertEquals("fsgmospo", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UserIdentityCollection model = new UserIdentityCollection()
            .withValue(
                Arrays.asList(new UserIdentityContractInner().withProvider("mrnotocjnzdaiovr").withId("rpqphkvyyzad"),
                    new UserIdentityContractInner().withProvider("xylaypdtyzvelffo").withId("riwhjdfrwp"),
                    new UserIdentityContractInner().withProvider("h").withId("nkcclpctuog")))
            .withCount(1046375942793669965L)
            .withNextLink("fsgmospo");
        model = BinaryData.fromObject(model).toObject(UserIdentityCollection.class);
        Assertions.assertEquals("mrnotocjnzdaiovr", model.value().get(0).provider());
        Assertions.assertEquals("rpqphkvyyzad", model.value().get(0).id());
        Assertions.assertEquals(1046375942793669965L, model.count());
        Assertions.assertEquals("fsgmospo", model.nextLink());
    }
}
