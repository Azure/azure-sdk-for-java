// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.UserIdentityContractInner;
import com.azure.resourcemanager.apimanagement.models.UserIdentityCollection;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UserIdentityCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UserIdentityCollection model = BinaryData.fromString(
            "{\"value\":[{\"provider\":\"newuhwfw\",\"id\":\"oxuo\"},{\"provider\":\"fnres\",\"id\":\"epgckn\"},{\"provider\":\"mgvsnvbtqdxfmj\",\"id\":\"jnhj\"},{\"provider\":\"qllbsupubdxc\",\"id\":\"lhzwh\"}],\"count\":4830047349745388329,\"nextLink\":\"osj\"}")
            .toObject(UserIdentityCollection.class);
        Assertions.assertEquals("newuhwfw", model.value().get(0).provider());
        Assertions.assertEquals("oxuo", model.value().get(0).id());
        Assertions.assertEquals(4830047349745388329L, model.count());
        Assertions.assertEquals("osj", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UserIdentityCollection model = new UserIdentityCollection()
            .withValue(Arrays.asList(new UserIdentityContractInner().withProvider("newuhwfw").withId("oxuo"),
                new UserIdentityContractInner().withProvider("fnres").withId("epgckn"),
                new UserIdentityContractInner().withProvider("mgvsnvbtqdxfmj").withId("jnhj"),
                new UserIdentityContractInner().withProvider("qllbsupubdxc").withId("lhzwh")))
            .withCount(4830047349745388329L)
            .withNextLink("osj");
        model = BinaryData.fromObject(model).toObject(UserIdentityCollection.class);
        Assertions.assertEquals("newuhwfw", model.value().get(0).provider());
        Assertions.assertEquals("oxuo", model.value().get(0).id());
        Assertions.assertEquals(4830047349745388329L, model.count());
        Assertions.assertEquals("osj", model.nextLink());
    }
}
