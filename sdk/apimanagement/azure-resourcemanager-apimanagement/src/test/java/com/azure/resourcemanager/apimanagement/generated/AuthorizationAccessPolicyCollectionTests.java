// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.AuthorizationAccessPolicyContractInner;
import com.azure.resourcemanager.apimanagement.models.AuthorizationAccessPolicyCollection;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AuthorizationAccessPolicyCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AuthorizationAccessPolicyCollection model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"appIds\":[\"dlqidywmhmp\"],\"tenantId\":\"ril\",\"objectId\":\"bnrqq\"},\"id\":\"vzt\",\"name\":\"bnfnqtxjtoma\",\"type\":\"swbnfddepldwqjns\"},{\"properties\":{\"appIds\":[\"leexahvmywh\"],\"tenantId\":\"rcarycsjj\",\"objectId\":\"voaqajuvehzptdmk\"},\"id\":\"rbhmpfulubef\",\"name\":\"ybpmf\",\"type\":\"fununmpzk\"}],\"count\":4170483792389777203,\"nextLink\":\"fkd\"}")
            .toObject(AuthorizationAccessPolicyCollection.class);
        Assertions.assertEquals("dlqidywmhmp", model.value().get(0).appIds().get(0));
        Assertions.assertEquals("ril", model.value().get(0).tenantId());
        Assertions.assertEquals("bnrqq", model.value().get(0).objectId());
        Assertions.assertEquals(4170483792389777203L, model.count());
        Assertions.assertEquals("fkd", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AuthorizationAccessPolicyCollection model = new AuthorizationAccessPolicyCollection().withValue(Arrays.asList(
            new AuthorizationAccessPolicyContractInner().withAppIds(Arrays.asList("dlqidywmhmp"))
                .withTenantId("ril")
                .withObjectId("bnrqq"),
            new AuthorizationAccessPolicyContractInner().withAppIds(Arrays.asList("leexahvmywh"))
                .withTenantId("rcarycsjj")
                .withObjectId("voaqajuvehzptdmk")))
            .withCount(4170483792389777203L)
            .withNextLink("fkd");
        model = BinaryData.fromObject(model).toObject(AuthorizationAccessPolicyCollection.class);
        Assertions.assertEquals("dlqidywmhmp", model.value().get(0).appIds().get(0));
        Assertions.assertEquals("ril", model.value().get(0).tenantId());
        Assertions.assertEquals("bnrqq", model.value().get(0).objectId());
        Assertions.assertEquals(4170483792389777203L, model.count());
        Assertions.assertEquals("fkd", model.nextLink());
    }
}
