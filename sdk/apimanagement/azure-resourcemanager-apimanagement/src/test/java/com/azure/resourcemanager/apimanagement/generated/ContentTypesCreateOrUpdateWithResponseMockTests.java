// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.models.ContentTypeContract;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ContentTypesCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"id\":\"yhenfsfyqncowmh\",\"name\":\"zfbywji\",\"description\":\"osladagwaakktbj\",\"schema\":\"datatztkajqhsnse\",\"version\":\"lislxyljzbkd\"},\"id\":\"lfjwxgvtkjctv\",\"name\":\"peawzzkvfccozv\",\"type\":\"xsp\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ContentTypeContract response = manager.contentTypes()
            .define("nrjocogwf")
            .withExistingService("klmnjqzmqynhitr", "wqgqrbthbfpi")
            .withIdPropertiesId("wzrqeia")
            .withNamePropertiesName("pkhuvnlmdcnut")
            .withDescription("xmi")
            .withSchema("datanzbqvioynctfq")
            .withVersion("vvwzprjaaaiaib")
            .withIfMatch("v")
            .create();

        Assertions.assertEquals("yhenfsfyqncowmh", response.idPropertiesId());
        Assertions.assertEquals("zfbywji", response.namePropertiesName());
        Assertions.assertEquals("osladagwaakktbj", response.description());
        Assertions.assertEquals("lislxyljzbkd", response.version());
    }
}
