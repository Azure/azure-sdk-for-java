// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.models.ContentTypeContract;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ContentTypesCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"id\":\"saqhvia\",\"name\":\"q\",\"description\":\"uhv\",\"schema\":\"datafznfgpbc\",\"version\":\"c\"},\"id\":\"ympdjieas\",\"name\":\"lkqcln\",\"type\":\"usrgno\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ContentTypeContract response = manager.contentTypes()
            .define("moub")
            .withExistingService("rfe", "zunbua")
            .withIdPropertiesId("mi")
            .withNamePropertiesName("z")
            .withDescription("obvveq")
            .withSchema("datayt")
            .withVersion("gzdhzbjec")
            .withIfMatch("sfqeaxdqel")
            .create();

        Assertions.assertEquals("saqhvia", response.idPropertiesId());
        Assertions.assertEquals("q", response.namePropertiesName());
        Assertions.assertEquals("uhv", response.description());
        Assertions.assertEquals("c", response.version());
    }
}
