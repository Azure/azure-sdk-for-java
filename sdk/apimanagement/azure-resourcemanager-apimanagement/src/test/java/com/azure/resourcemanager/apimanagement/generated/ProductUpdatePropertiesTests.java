// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.ProductUpdateProperties;
import com.azure.resourcemanager.apimanagement.models.ProductState;
import org.junit.jupiter.api.Assertions;

public final class ProductUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProductUpdateProperties model = BinaryData.fromString(
            "{\"displayName\":\"vdlsflxkqesdfeds\",\"description\":\"zancoinmp\",\"terms\":\"mcqidkltvdhqnufb\",\"subscriptionRequired\":false,\"approvalRequired\":false,\"subscriptionsLimit\":2120747022,\"state\":\"published\"}")
            .toObject(ProductUpdateProperties.class);
        Assertions.assertEquals("zancoinmp", model.description());
        Assertions.assertEquals("mcqidkltvdhqnufb", model.terms());
        Assertions.assertFalse(model.subscriptionRequired());
        Assertions.assertFalse(model.approvalRequired());
        Assertions.assertEquals(2120747022, model.subscriptionsLimit());
        Assertions.assertEquals(ProductState.PUBLISHED, model.state());
        Assertions.assertEquals("vdlsflxkqesdfeds", model.displayName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProductUpdateProperties model = new ProductUpdateProperties().withDescription("zancoinmp")
            .withTerms("mcqidkltvdhqnufb")
            .withSubscriptionRequired(false)
            .withApprovalRequired(false)
            .withSubscriptionsLimit(2120747022)
            .withState(ProductState.PUBLISHED)
            .withDisplayName("vdlsflxkqesdfeds");
        model = BinaryData.fromObject(model).toObject(ProductUpdateProperties.class);
        Assertions.assertEquals("zancoinmp", model.description());
        Assertions.assertEquals("mcqidkltvdhqnufb", model.terms());
        Assertions.assertFalse(model.subscriptionRequired());
        Assertions.assertFalse(model.approvalRequired());
        Assertions.assertEquals(2120747022, model.subscriptionsLimit());
        Assertions.assertEquals(ProductState.PUBLISHED, model.state());
        Assertions.assertEquals("vdlsflxkqesdfeds", model.displayName());
    }
}
