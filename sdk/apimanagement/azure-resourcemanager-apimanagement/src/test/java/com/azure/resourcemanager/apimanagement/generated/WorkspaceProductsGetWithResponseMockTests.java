// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.models.ProductContract;
import com.azure.resourcemanager.apimanagement.models.ProductState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkspaceProductsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"sipfwlyei\",\"description\":\"dp\",\"terms\":\"qteirrjjmvr\",\"subscriptionRequired\":false,\"approvalRequired\":true,\"subscriptionsLimit\":596450742,\"state\":\"published\"},\"id\":\"dgzhnpxbu\",\"name\":\"auytqdkgaxl\",\"type\":\"afwsu\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ProductContract response = manager.workspaceProducts()
            .getWithResponse("uvnclntaoidjhoy", "gtyvrnfikireet", "jfizafd", "jhnuvndgrolgxa",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("sipfwlyei", response.displayName());
        Assertions.assertEquals("dp", response.description());
        Assertions.assertEquals("qteirrjjmvr", response.terms());
        Assertions.assertFalse(response.subscriptionRequired());
        Assertions.assertTrue(response.approvalRequired());
        Assertions.assertEquals(596450742, response.subscriptionsLimit());
        Assertions.assertEquals(ProductState.PUBLISHED, response.state());
    }
}
