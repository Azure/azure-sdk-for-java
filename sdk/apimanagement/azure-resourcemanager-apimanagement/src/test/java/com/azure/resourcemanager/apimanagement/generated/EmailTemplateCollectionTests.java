// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.EmailTemplateContractInner;
import com.azure.resourcemanager.apimanagement.models.EmailTemplateCollection;
import com.azure.resourcemanager.apimanagement.models.EmailTemplateParametersContractProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class EmailTemplateCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EmailTemplateCollection model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"subject\":\"akgddhjkrukizy\",\"body\":\"gsq\",\"title\":\"qsktxqf\",\"description\":\"bqggw\",\"isDefault\":true,\"parameters\":[{\"name\":\"dmncgbf\",\"title\":\"scstunmlhxd\",\"description\":\"klciichgjsysm\"}]},\"id\":\"xodgw\",\"name\":\"f\",\"type\":\"zsifcuvbdujgcwx\"}],\"count\":3985935086976308825,\"nextLink\":\"wjtrdxriza\"}")
            .toObject(EmailTemplateCollection.class);
        Assertions.assertEquals("akgddhjkrukizy", model.value().get(0).subject());
        Assertions.assertEquals("gsq", model.value().get(0).body());
        Assertions.assertEquals("qsktxqf", model.value().get(0).title());
        Assertions.assertEquals("bqggw", model.value().get(0).description());
        Assertions.assertEquals("dmncgbf", model.value().get(0).parameters().get(0).name());
        Assertions.assertEquals("scstunmlhxd", model.value().get(0).parameters().get(0).title());
        Assertions.assertEquals("klciichgjsysm", model.value().get(0).parameters().get(0).description());
        Assertions.assertEquals(3985935086976308825L, model.count());
        Assertions.assertEquals("wjtrdxriza", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EmailTemplateCollection model
            = new EmailTemplateCollection()
                .withValue(Arrays.asList(new EmailTemplateContractInner().withSubject("akgddhjkrukizy")
                    .withBody("gsq")
                    .withTitle("qsktxqf")
                    .withDescription("bqggw")
                    .withParameters(Arrays.asList(new EmailTemplateParametersContractProperties().withName("dmncgbf")
                        .withTitle("scstunmlhxd")
                        .withDescription("klciichgjsysm")))))
                .withCount(3985935086976308825L)
                .withNextLink("wjtrdxriza");
        model = BinaryData.fromObject(model).toObject(EmailTemplateCollection.class);
        Assertions.assertEquals("akgddhjkrukizy", model.value().get(0).subject());
        Assertions.assertEquals("gsq", model.value().get(0).body());
        Assertions.assertEquals("qsktxqf", model.value().get(0).title());
        Assertions.assertEquals("bqggw", model.value().get(0).description());
        Assertions.assertEquals("dmncgbf", model.value().get(0).parameters().get(0).name());
        Assertions.assertEquals("scstunmlhxd", model.value().get(0).parameters().get(0).title());
        Assertions.assertEquals("klciichgjsysm", model.value().get(0).parameters().get(0).description());
        Assertions.assertEquals(3985935086976308825L, model.count());
        Assertions.assertEquals("wjtrdxriza", model.nextLink());
    }
}
