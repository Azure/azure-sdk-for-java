// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.models.ApiGatewaySkuType;
import com.azure.resourcemanager.apimanagement.models.ApiManagementGatewaySkuPropertiesForPatch;
import com.azure.resourcemanager.apimanagement.models.ApiManagementGatewayUpdateParameters;
import com.azure.resourcemanager.apimanagement.models.BackendConfiguration;
import com.azure.resourcemanager.apimanagement.models.BackendSubnetConfiguration;
import com.azure.resourcemanager.apimanagement.models.FrontendConfiguration;
import com.azure.resourcemanager.apimanagement.models.GatewayConfigurationApi;
import com.azure.resourcemanager.apimanagement.models.VirtualNetworkType;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ApiManagementGatewayUpdateParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ApiManagementGatewayUpdateParameters model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"nhsjcnyej\",\"targetProvisioningState\":\"ryhtnapczwlokjy\",\"createdAtUtc\":\"2021-11-19T05:46:28Z\",\"frontend\":{\"defaultHostname\":\"ni\"},\"backend\":{\"subnet\":{\"id\":\"z\"}},\"configurationApi\":{\"hostname\":\"hgejspodma\"},\"virtualNetworkType\":\"External\"},\"sku\":{\"name\":\"Standard\",\"capacity\":52138230},\"etag\":\"wyahuxinpmqnja\",\"tags\":{\"prozvcputegjvwmf\":\"xj\",\"pjhulsuuvmkj\":\"atscmd\",\"iodjp\":\"zkrwfn\",\"ryo\":\"lwejdpv\"},\"id\":\"psoacctazakljl\",\"name\":\"hbcryffdfdosyge\",\"type\":\"paojakhmsbzjh\"}")
            .toObject(ApiManagementGatewayUpdateParameters.class);
        Assertions.assertEquals("xj", model.tags().get("prozvcputegjvwmf"));
        Assertions.assertEquals(ApiGatewaySkuType.STANDARD, model.sku().name());
        Assertions.assertEquals(52138230, model.sku().capacity());
        Assertions.assertEquals("z", model.backend().subnet().id());
        Assertions.assertEquals(VirtualNetworkType.EXTERNAL, model.virtualNetworkType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ApiManagementGatewayUpdateParameters model = new ApiManagementGatewayUpdateParameters()
            .withTags(mapOf("prozvcputegjvwmf", "xj", "pjhulsuuvmkj", "atscmd", "iodjp", "zkrwfn", "ryo", "lwejdpv"))
            .withSku(new ApiManagementGatewaySkuPropertiesForPatch().withName(ApiGatewaySkuType.STANDARD)
                .withCapacity(52138230))
            .withFrontend(new FrontendConfiguration())
            .withBackend(new BackendConfiguration().withSubnet(new BackendSubnetConfiguration().withId("z")))
            .withConfigurationApi(new GatewayConfigurationApi())
            .withVirtualNetworkType(VirtualNetworkType.EXTERNAL);
        model = BinaryData.fromObject(model).toObject(ApiManagementGatewayUpdateParameters.class);
        Assertions.assertEquals("xj", model.tags().get("prozvcputegjvwmf"));
        Assertions.assertEquals(ApiGatewaySkuType.STANDARD, model.sku().name());
        Assertions.assertEquals(52138230, model.sku().capacity());
        Assertions.assertEquals("z", model.backend().subnet().id());
        Assertions.assertEquals(VirtualNetworkType.EXTERNAL, model.virtualNetworkType());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
