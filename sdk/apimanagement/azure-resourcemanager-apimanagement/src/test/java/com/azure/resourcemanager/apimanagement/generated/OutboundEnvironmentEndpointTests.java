// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.models.EndpointDependency;
import com.azure.resourcemanager.apimanagement.models.EndpointDetail;
import com.azure.resourcemanager.apimanagement.models.OutboundEnvironmentEndpoint;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OutboundEnvironmentEndpointTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OutboundEnvironmentEndpoint model = BinaryData.fromString(
            "{\"category\":\"hcucsqsnx\",\"endpoints\":[{\"domainName\":\"feapdrbzyvbsuadu\",\"endpointDetails\":[{\"port\":850839270,\"region\":\"x\"},{\"port\":1799159582,\"region\":\"kzhmhj\"},{\"port\":445646949,\"region\":\"deluqroja\"},{\"port\":1330049410,\"region\":\"tlraysr\"}]},{\"domainName\":\"zkyhudbkuwpz\",\"endpointDetails\":[{\"port\":887680905,\"region\":\"akfe\"}]}]}")
            .toObject(OutboundEnvironmentEndpoint.class);
        Assertions.assertEquals("hcucsqsnx", model.category());
        Assertions.assertEquals("feapdrbzyvbsuadu", model.endpoints().get(0).domainName());
        Assertions.assertEquals(850839270, model.endpoints().get(0).endpointDetails().get(0).port());
        Assertions.assertEquals("x", model.endpoints().get(0).endpointDetails().get(0).region());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OutboundEnvironmentEndpoint model = new OutboundEnvironmentEndpoint().withCategory("hcucsqsnx")
            .withEndpoints(Arrays.asList(
                new EndpointDependency().withDomainName("feapdrbzyvbsuadu")
                    .withEndpointDetails(Arrays.asList(new EndpointDetail().withPort(850839270).withRegion("x"),
                        new EndpointDetail().withPort(1799159582).withRegion("kzhmhj"),
                        new EndpointDetail().withPort(445646949).withRegion("deluqroja"),
                        new EndpointDetail().withPort(1330049410).withRegion("tlraysr"))),
                new EndpointDependency().withDomainName("zkyhudbkuwpz")
                    .withEndpointDetails(Arrays.asList(new EndpointDetail().withPort(887680905).withRegion("akfe")))));
        model = BinaryData.fromObject(model).toObject(OutboundEnvironmentEndpoint.class);
        Assertions.assertEquals("hcucsqsnx", model.category());
        Assertions.assertEquals("feapdrbzyvbsuadu", model.endpoints().get(0).domainName());
        Assertions.assertEquals(850839270, model.endpoints().get(0).endpointDetails().get(0).port());
        Assertions.assertEquals("x", model.endpoints().get(0).endpointDetails().get(0).region());
    }
}
