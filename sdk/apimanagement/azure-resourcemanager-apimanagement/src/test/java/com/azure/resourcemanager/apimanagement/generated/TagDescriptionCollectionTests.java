// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.TagDescriptionContractInner;
import com.azure.resourcemanager.apimanagement.models.TagDescriptionCollection;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class TagDescriptionCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TagDescriptionCollection model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"tagId\":\"guqigijiitns\",\"displayName\":\"lz\",\"description\":\"sygrijwa\",\"externalDocsUrl\":\"fanraybfu\",\"externalDocsDescription\":\"frojsydgr\"},\"id\":\"ydkygywezskieca\",\"name\":\"ygzmxieqvdsmak\",\"type\":\"ixqcahyhxalybxaw\"}],\"count\":7522784857273296474,\"nextLink\":\"dtblxpk\"}")
            .toObject(TagDescriptionCollection.class);
        Assertions.assertEquals("guqigijiitns", model.value().get(0).tagId());
        Assertions.assertEquals("lz", model.value().get(0).displayName());
        Assertions.assertEquals("sygrijwa", model.value().get(0).description());
        Assertions.assertEquals("fanraybfu", model.value().get(0).externalDocsUrl());
        Assertions.assertEquals("frojsydgr", model.value().get(0).externalDocsDescription());
        Assertions.assertEquals(7522784857273296474L, model.count());
        Assertions.assertEquals("dtblxpk", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TagDescriptionCollection model = new TagDescriptionCollection()
            .withValue(Arrays.asList(new TagDescriptionContractInner().withTagId("guqigijiitns")
                .withDisplayName("lz")
                .withDescription("sygrijwa")
                .withExternalDocsUrl("fanraybfu")
                .withExternalDocsDescription("frojsydgr")))
            .withCount(7522784857273296474L)
            .withNextLink("dtblxpk");
        model = BinaryData.fromObject(model).toObject(TagDescriptionCollection.class);
        Assertions.assertEquals("guqigijiitns", model.value().get(0).tagId());
        Assertions.assertEquals("lz", model.value().get(0).displayName());
        Assertions.assertEquals("sygrijwa", model.value().get(0).description());
        Assertions.assertEquals("fanraybfu", model.value().get(0).externalDocsUrl());
        Assertions.assertEquals("frojsydgr", model.value().get(0).externalDocsDescription());
        Assertions.assertEquals(7522784857273296474L, model.count());
        Assertions.assertEquals("dtblxpk", model.nextLink());
    }
}
