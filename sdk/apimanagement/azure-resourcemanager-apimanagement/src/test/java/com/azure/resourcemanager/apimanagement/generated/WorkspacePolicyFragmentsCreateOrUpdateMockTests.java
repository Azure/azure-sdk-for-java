// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.fluent.models.PolicyFragmentContractInner;
import com.azure.resourcemanager.apimanagement.models.PolicyFragmentContentFormat;
import com.azure.resourcemanager.apimanagement.models.PolicyFragmentContract;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkspacePolicyFragmentsCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"value\":\"eomufazacwzb\",\"description\":\"pbsspexejhwpnjco\",\"format\":\"rawxml\",\"provisioningState\":\"Succeeded\"},\"id\":\"dqtir\",\"name\":\"uajsrdecbowkhm\",\"type\":\"ffllpdnnsujxoueq\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PolicyFragmentContract response = manager.workspacePolicyFragments()
            .createOrUpdate("mng", "qwxxynttrn", "svximgnsiy", "xuyzrnngnmfhmw",
                new PolicyFragmentContractInner().withValue("um")
                    .withDescription("o")
                    .withFormat(PolicyFragmentContentFormat.RAWXML),
                "fcrb", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("eomufazacwzb", response.value());
        Assertions.assertEquals("pbsspexejhwpnjco", response.description());
        Assertions.assertEquals(PolicyFragmentContentFormat.RAWXML, response.format());
    }
}
