// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.models.ProductEntityBaseParameters;
import com.azure.resourcemanager.apimanagement.models.ProductState;
import org.junit.jupiter.api.Assertions;

public final class ProductEntityBaseParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProductEntityBaseParameters model = BinaryData.fromString(
            "{\"description\":\"nnggiycwkdtaawxw\",\"terms\":\"ka\",\"subscriptionRequired\":true,\"approvalRequired\":false,\"subscriptionsLimit\":404469261,\"state\":\"notPublished\"}")
            .toObject(ProductEntityBaseParameters.class);
        Assertions.assertEquals("nnggiycwkdtaawxw", model.description());
        Assertions.assertEquals("ka", model.terms());
        Assertions.assertTrue(model.subscriptionRequired());
        Assertions.assertFalse(model.approvalRequired());
        Assertions.assertEquals(404469261, model.subscriptionsLimit());
        Assertions.assertEquals(ProductState.NOT_PUBLISHED, model.state());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProductEntityBaseParameters model = new ProductEntityBaseParameters().withDescription("nnggiycwkdtaawxw")
            .withTerms("ka")
            .withSubscriptionRequired(true)
            .withApprovalRequired(false)
            .withSubscriptionsLimit(404469261)
            .withState(ProductState.NOT_PUBLISHED);
        model = BinaryData.fromObject(model).toObject(ProductEntityBaseParameters.class);
        Assertions.assertEquals("nnggiycwkdtaawxw", model.description());
        Assertions.assertEquals("ka", model.terms());
        Assertions.assertTrue(model.subscriptionRequired());
        Assertions.assertFalse(model.approvalRequired());
        Assertions.assertEquals(404469261, model.subscriptionsLimit());
        Assertions.assertEquals(ProductState.NOT_PUBLISHED, model.state());
    }
}
