// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.models.BackendProperties;
import com.azure.resourcemanager.apimanagement.models.BackendServiceFabricClusterProperties;
import com.azure.resourcemanager.apimanagement.models.X509CertificateName;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BackendPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackendProperties model = BinaryData.fromString(
            "{\"serviceFabricCluster\":{\"clientCertificateId\":\"ri\",\"clientCertificatethumbprint\":\"hxdqaol\",\"maxPartitionResolutionRetries\":2070703880,\"managementEndpoints\":[\"kkbjpjv\",\"ywltmfwobbjwhlwy\",\"fnqzocr\",\"zgczeu\"],\"serverCertificateThumbprints\":[\"xdncaqtt\"],\"serverX509Names\":[{\"name\":\"i\",\"issuerCertificateThumbprint\":\"vnyttzgi\"},{\"name\":\"yri\",\"issuerCertificateThumbprint\":\"gm\"},{\"name\":\"ehlq\",\"issuerCertificateThumbprint\":\"nrflkndrndpg\"}]}}")
            .toObject(BackendProperties.class);
        Assertions.assertEquals("ri", model.serviceFabricCluster().clientCertificateId());
        Assertions.assertEquals("hxdqaol", model.serviceFabricCluster().clientCertificatethumbprint());
        Assertions.assertEquals(2070703880, model.serviceFabricCluster().maxPartitionResolutionRetries());
        Assertions.assertEquals("kkbjpjv", model.serviceFabricCluster().managementEndpoints().get(0));
        Assertions.assertEquals("xdncaqtt", model.serviceFabricCluster().serverCertificateThumbprints().get(0));
        Assertions.assertEquals("i", model.serviceFabricCluster().serverX509Names().get(0).name());
        Assertions.assertEquals("vnyttzgi",
            model.serviceFabricCluster().serverX509Names().get(0).issuerCertificateThumbprint());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackendProperties model
            = new BackendProperties()
                .withServiceFabricCluster(new BackendServiceFabricClusterProperties().withClientCertificateId("ri")
                    .withClientCertificatethumbprint("hxdqaol")
                    .withMaxPartitionResolutionRetries(2070703880)
                    .withManagementEndpoints(Arrays.asList("kkbjpjv", "ywltmfwobbjwhlwy", "fnqzocr", "zgczeu"))
                    .withServerCertificateThumbprints(Arrays.asList("xdncaqtt"))
                    .withServerX509Names(Arrays.asList(
                        new X509CertificateName().withName("i").withIssuerCertificateThumbprint("vnyttzgi"),
                        new X509CertificateName().withName("yri").withIssuerCertificateThumbprint("gm"),
                        new X509CertificateName().withName("ehlq").withIssuerCertificateThumbprint("nrflkndrndpg"))));
        model = BinaryData.fromObject(model).toObject(BackendProperties.class);
        Assertions.assertEquals("ri", model.serviceFabricCluster().clientCertificateId());
        Assertions.assertEquals("hxdqaol", model.serviceFabricCluster().clientCertificatethumbprint());
        Assertions.assertEquals(2070703880, model.serviceFabricCluster().maxPartitionResolutionRetries());
        Assertions.assertEquals("kkbjpjv", model.serviceFabricCluster().managementEndpoints().get(0));
        Assertions.assertEquals("xdncaqtt", model.serviceFabricCluster().serverCertificateThumbprints().get(0));
        Assertions.assertEquals("i", model.serviceFabricCluster().serverX509Names().get(0).name());
        Assertions.assertEquals("vnyttzgi",
            model.serviceFabricCluster().serverX509Names().get(0).issuerCertificateThumbprint());
    }
}
