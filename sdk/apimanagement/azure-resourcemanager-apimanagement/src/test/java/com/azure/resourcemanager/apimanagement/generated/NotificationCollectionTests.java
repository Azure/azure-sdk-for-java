// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.NotificationContractInner;
import com.azure.resourcemanager.apimanagement.models.NotificationCollection;
import com.azure.resourcemanager.apimanagement.models.RecipientsContractProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NotificationCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NotificationCollection model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"title\":\"aqpqifdbm\",\"description\":\"rwtx\",\"recipients\":{\"emails\":[\"amonatnizex\",\"oqsqjghr\"],\"users\":[\"splwsttxs\",\"gxfqpan\",\"ceov\",\"gzwhsxyrujmtik\"]}},\"id\":\"s\",\"name\":\"ik\",\"type\":\"ohzixyqhfnkvycqq\"},{\"properties\":{\"title\":\"seip\",\"description\":\"uwzxhr\",\"recipients\":{\"emails\":[\"dl\",\"kfktltdds\",\"bjop\"],\"users\":[\"hbq\"]}},\"id\":\"zkqxsalu\",\"name\":\"yigfcvcew\",\"type\":\"wqhdgsjsa\"},{\"properties\":{\"title\":\"rncmazdfsqxh\",\"description\":\"mrejparnpvgr\",\"recipients\":{\"emails\":[\"wtdrcwg\",\"w\"],\"users\":[\"zlhhfix\"]}},\"id\":\"cfculzj\",\"name\":\"mhpfywvy\",\"type\":\"dqpz\"},{\"properties\":{\"title\":\"xsoxi\",\"description\":\"nj\",\"recipients\":{\"emails\":[\"rocqsxy\",\"qqt\",\"miwdwisvnme\"],\"users\":[\"jamca\",\"yh\"]}},\"id\":\"tpzcr\",\"name\":\"yklleynqanhkiggl\",\"type\":\"lwalhvu\"}],\"count\":8543644785764880489,\"nextLink\":\"hetxdqcmyctajqz\"}")
                .toObject(NotificationCollection.class);
        Assertions.assertEquals("aqpqifdbm", model.value().get(0).title());
        Assertions.assertEquals("rwtx", model.value().get(0).description());
        Assertions.assertEquals("amonatnizex", model.value().get(0).recipients().emails().get(0));
        Assertions.assertEquals("splwsttxs", model.value().get(0).recipients().users().get(0));
        Assertions.assertEquals(8543644785764880489L, model.count());
        Assertions.assertEquals("hetxdqcmyctajqz", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NotificationCollection model =
            new NotificationCollection()
                .withValue(
                    Arrays
                        .asList(
                            new NotificationContractInner()
                                .withTitle("aqpqifdbm")
                                .withDescription("rwtx")
                                .withRecipients(
                                    new RecipientsContractProperties()
                                        .withEmails(Arrays.asList("amonatnizex", "oqsqjghr"))
                                        .withUsers(Arrays.asList("splwsttxs", "gxfqpan", "ceov", "gzwhsxyrujmtik"))),
                            new NotificationContractInner()
                                .withTitle("seip")
                                .withDescription("uwzxhr")
                                .withRecipients(
                                    new RecipientsContractProperties()
                                        .withEmails(Arrays.asList("dl", "kfktltdds", "bjop"))
                                        .withUsers(Arrays.asList("hbq"))),
                            new NotificationContractInner()
                                .withTitle("rncmazdfsqxh")
                                .withDescription("mrejparnpvgr")
                                .withRecipients(
                                    new RecipientsContractProperties()
                                        .withEmails(Arrays.asList("wtdrcwg", "w"))
                                        .withUsers(Arrays.asList("zlhhfix"))),
                            new NotificationContractInner()
                                .withTitle("xsoxi")
                                .withDescription("nj")
                                .withRecipients(
                                    new RecipientsContractProperties()
                                        .withEmails(Arrays.asList("rocqsxy", "qqt", "miwdwisvnme"))
                                        .withUsers(Arrays.asList("jamca", "yh")))))
                .withCount(8543644785764880489L)
                .withNextLink("hetxdqcmyctajqz");
        model = BinaryData.fromObject(model).toObject(NotificationCollection.class);
        Assertions.assertEquals("aqpqifdbm", model.value().get(0).title());
        Assertions.assertEquals("rwtx", model.value().get(0).description());
        Assertions.assertEquals("amonatnizex", model.value().get(0).recipients().emails().get(0));
        Assertions.assertEquals("splwsttxs", model.value().get(0).recipients().users().get(0));
        Assertions.assertEquals(8543644785764880489L, model.count());
        Assertions.assertEquals("hetxdqcmyctajqz", model.nextLink());
    }
}
