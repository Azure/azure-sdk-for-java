// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.models.BackendServiceFabricClusterProperties;
import com.azure.resourcemanager.apimanagement.models.X509CertificateName;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BackendServiceFabricClusterPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackendServiceFabricClusterProperties model = BinaryData.fromString(
            "{\"clientCertificateId\":\"odhda\",\"clientCertificatethumbprint\":\"twfhi\",\"maxPartitionResolutionRetries\":477775762,\"managementEndpoints\":[\"sabvcip\",\"wza\",\"czuumljcir\",\"pefyc\"],\"serverCertificateThumbprints\":[\"ititjnsxza\"],\"serverX509Names\":[{\"name\":\"jhwjuyxx\",\"issuerCertificateThumbprint\":\"qvmvuaytuadxkxe\"},{\"name\":\"wp\",\"issuerCertificateThumbprint\":\"ghyksarcdrnxs\"},{\"name\":\"vlzladl\",\"issuerCertificateThumbprint\":\"kpbqhvfdqqjw\"}]}")
            .toObject(BackendServiceFabricClusterProperties.class);
        Assertions.assertEquals("odhda", model.clientCertificateId());
        Assertions.assertEquals("twfhi", model.clientCertificatethumbprint());
        Assertions.assertEquals(477775762, model.maxPartitionResolutionRetries());
        Assertions.assertEquals("sabvcip", model.managementEndpoints().get(0));
        Assertions.assertEquals("ititjnsxza", model.serverCertificateThumbprints().get(0));
        Assertions.assertEquals("jhwjuyxx", model.serverX509Names().get(0).name());
        Assertions.assertEquals("qvmvuaytuadxkxe", model.serverX509Names().get(0).issuerCertificateThumbprint());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackendServiceFabricClusterProperties model
            = new BackendServiceFabricClusterProperties().withClientCertificateId("odhda")
                .withClientCertificatethumbprint("twfhi")
                .withMaxPartitionResolutionRetries(477775762)
                .withManagementEndpoints(Arrays.asList("sabvcip", "wza", "czuumljcir", "pefyc"))
                .withServerCertificateThumbprints(Arrays.asList("ititjnsxza"))
                .withServerX509Names(Arrays.asList(
                    new X509CertificateName().withName("jhwjuyxx").withIssuerCertificateThumbprint("qvmvuaytuadxkxe"),
                    new X509CertificateName().withName("wp").withIssuerCertificateThumbprint("ghyksarcdrnxs"),
                    new X509CertificateName().withName("vlzladl").withIssuerCertificateThumbprint("kpbqhvfdqqjw")));
        model = BinaryData.fromObject(model).toObject(BackendServiceFabricClusterProperties.class);
        Assertions.assertEquals("odhda", model.clientCertificateId());
        Assertions.assertEquals("twfhi", model.clientCertificatethumbprint());
        Assertions.assertEquals(477775762, model.maxPartitionResolutionRetries());
        Assertions.assertEquals("sabvcip", model.managementEndpoints().get(0));
        Assertions.assertEquals("ititjnsxza", model.serverCertificateThumbprints().get(0));
        Assertions.assertEquals("jhwjuyxx", model.serverX509Names().get(0).name());
        Assertions.assertEquals("qvmvuaytuadxkxe", model.serverX509Names().get(0).issuerCertificateThumbprint());
    }
}
