// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.CacheContractInner;
import org.junit.jupiter.api.Assertions;

public final class CacheContractInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CacheContractInner model = BinaryData.fromString(
            "{\"properties\":{\"description\":\"mtmjzw\",\"connectionString\":\"uqgovsxpwwztjfm\",\"useFromLocation\":\"khtgfredmlscgrll\",\"resourceId\":\"na\"},\"id\":\"vjowazhpabac\",\"name\":\"mlyotg\",\"type\":\"wsxnsrqor\"}")
            .toObject(CacheContractInner.class);
        Assertions.assertEquals("mtmjzw", model.description());
        Assertions.assertEquals("uqgovsxpwwztjfm", model.connectionString());
        Assertions.assertEquals("khtgfredmlscgrll", model.useFromLocation());
        Assertions.assertEquals("na", model.resourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CacheContractInner model = new CacheContractInner().withDescription("mtmjzw")
            .withConnectionString("uqgovsxpwwztjfm")
            .withUseFromLocation("khtgfredmlscgrll")
            .withResourceId("na");
        model = BinaryData.fromObject(model).toObject(CacheContractInner.class);
        Assertions.assertEquals("mtmjzw", model.description());
        Assertions.assertEquals("uqgovsxpwwztjfm", model.connectionString());
        Assertions.assertEquals("khtgfredmlscgrll", model.useFromLocation());
        Assertions.assertEquals("na", model.resourceId());
    }
}
