// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.CacheContractInner;
import org.junit.jupiter.api.Assertions;

public final class CacheContractInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CacheContractInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"description\":\"twloesqr\",\"connectionString\":\"gvrbny\",\"useFromLocation\":\"ukoila\",\"resourceId\":\"duwjleipjlhwy\"},\"id\":\"p\",\"name\":\"ruzythqkkwhbg\",\"type\":\"vellvulnxdmnitm\"}")
                .toObject(CacheContractInner.class);
        Assertions.assertEquals("twloesqr", model.description());
        Assertions.assertEquals("gvrbny", model.connectionString());
        Assertions.assertEquals("ukoila", model.useFromLocation());
        Assertions.assertEquals("duwjleipjlhwy", model.resourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CacheContractInner model =
            new CacheContractInner()
                .withDescription("twloesqr")
                .withConnectionString("gvrbny")
                .withUseFromLocation("ukoila")
                .withResourceId("duwjleipjlhwy");
        model = BinaryData.fromObject(model).toObject(CacheContractInner.class);
        Assertions.assertEquals("twloesqr", model.description());
        Assertions.assertEquals("gvrbny", model.connectionString());
        Assertions.assertEquals("ukoila", model.useFromLocation());
        Assertions.assertEquals("duwjleipjlhwy", model.resourceId());
    }
}
