// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.models.ConnectivityStatusType;
import com.azure.resourcemanager.apimanagement.models.NetworkStatusContractByLocation;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NetworkStatusListByServiceWithResponseMockTests {
    @Test
    public void testListByServiceWithResponse() throws Exception {
        String responseStr
            = "[{\"location\":\"zmzctbxzjk\",\"networkStatus\":{\"dnsServers\":[\"pucv\",\"dozw\",\"sk\"],\"connectivityStatus\":[{\"name\":\"afzsq\",\"status\":\"success\",\"error\":\"npxmiwtkqifp\",\"lastUpdated\":\"2021-07-05T10:06:31Z\",\"lastStatusChange\":\"2021-09-17T21:43:47Z\",\"resourceType\":\"ukcdnzoxlabu\",\"isOptional\":false}]}},{\"location\":\"gba\",\"networkStatus\":{\"dnsServers\":[\"ram\",\"sugqcglma\"],\"connectivityStatus\":[{\"name\":\"ztofxvqla\",\"status\":\"success\",\"error\":\"gwa\",\"lastUpdated\":\"2021-02-16T13:43:28Z\",\"lastStatusChange\":\"2021-05-13T04:45:23Z\",\"resourceType\":\"cerfxfeiqbasthz\",\"isOptional\":true}]}},{\"location\":\"pssvnonij\",\"networkStatus\":{\"dnsServers\":[\"jozzjkugp\"],\"connectivityStatus\":[{\"name\":\"qbtokvocuzxl\",\"status\":\"initializing\",\"error\":\"warhwett\",\"lastUpdated\":\"2021-11-19T09:33:44Z\",\"lastStatusChange\":\"2021-06-23T01:24:41Z\",\"resourceType\":\"pzwxy\",\"isOptional\":true}]}}]";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        List<NetworkStatusContractByLocation> response = manager.networkStatus()
            .listByServiceWithResponse("rycpanapfa", "izrinlpxngzzxqb", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("zmzctbxzjk", response.get(0).location());
        Assertions.assertEquals("pucv", response.get(0).networkStatus().dnsServers().get(0));
        Assertions.assertEquals("afzsq", response.get(0).networkStatus().connectivityStatus().get(0).name());
        Assertions.assertEquals(ConnectivityStatusType.SUCCESS,
            response.get(0).networkStatus().connectivityStatus().get(0).status());
        Assertions.assertEquals("npxmiwtkqifp", response.get(0).networkStatus().connectivityStatus().get(0).error());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-05T10:06:31Z"),
            response.get(0).networkStatus().connectivityStatus().get(0).lastUpdated());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-17T21:43:47Z"),
            response.get(0).networkStatus().connectivityStatus().get(0).lastStatusChange());
        Assertions.assertEquals("ukcdnzoxlabu",
            response.get(0).networkStatus().connectivityStatus().get(0).resourceType());
        Assertions.assertEquals(false, response.get(0).networkStatus().connectivityStatus().get(0).isOptional());
    }
}
