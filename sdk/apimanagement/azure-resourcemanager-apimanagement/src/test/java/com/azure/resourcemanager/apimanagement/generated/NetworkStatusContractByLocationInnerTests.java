// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.NetworkStatusContractByLocationInner;
import com.azure.resourcemanager.apimanagement.fluent.models.NetworkStatusContractInner;
import com.azure.resourcemanager.apimanagement.models.ConnectivityStatusContract;
import com.azure.resourcemanager.apimanagement.models.ConnectivityStatusType;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkStatusContractByLocationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkStatusContractByLocationInner model =
            BinaryData
                .fromString(
                    "{\"location\":\"vlrdsmovpi\",\"networkStatus\":{\"dnsServers\":[\"dnox\",\"xn\",\"qaqotnn\"],\"connectivityStatus\":[{\"name\":\"olousdvrg\",\"status\":\"success\",\"error\":\"m\",\"lastUpdated\":\"2021-04-09T03:39:28Z\",\"lastStatusChange\":\"2021-03-27T11:50:58Z\",\"resourceType\":\"jdrpizfulgycts\",\"isOptional\":true},{\"name\":\"tqgkujd\",\"status\":\"failure\",\"error\":\"xrqwo\",\"lastUpdated\":\"2021-03-21T10:31:02Z\",\"lastStatusChange\":\"2021-01-29T18:30:42Z\",\"resourceType\":\"btigapdyarikeejd\",\"isOptional\":true}]}}")
                .toObject(NetworkStatusContractByLocationInner.class);
        Assertions.assertEquals("vlrdsmovpi", model.location());
        Assertions.assertEquals("dnox", model.networkStatus().dnsServers().get(0));
        Assertions.assertEquals("olousdvrg", model.networkStatus().connectivityStatus().get(0).name());
        Assertions
            .assertEquals(ConnectivityStatusType.SUCCESS, model.networkStatus().connectivityStatus().get(0).status());
        Assertions.assertEquals("m", model.networkStatus().connectivityStatus().get(0).error());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-04-09T03:39:28Z"),
                model.networkStatus().connectivityStatus().get(0).lastUpdated());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-03-27T11:50:58Z"),
                model.networkStatus().connectivityStatus().get(0).lastStatusChange());
        Assertions.assertEquals("jdrpizfulgycts", model.networkStatus().connectivityStatus().get(0).resourceType());
        Assertions.assertEquals(true, model.networkStatus().connectivityStatus().get(0).isOptional());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkStatusContractByLocationInner model =
            new NetworkStatusContractByLocationInner()
                .withLocation("vlrdsmovpi")
                .withNetworkStatus(
                    new NetworkStatusContractInner()
                        .withDnsServers(Arrays.asList("dnox", "xn", "qaqotnn"))
                        .withConnectivityStatus(
                            Arrays
                                .asList(
                                    new ConnectivityStatusContract()
                                        .withName("olousdvrg")
                                        .withStatus(ConnectivityStatusType.SUCCESS)
                                        .withError("m")
                                        .withLastUpdated(OffsetDateTime.parse("2021-04-09T03:39:28Z"))
                                        .withLastStatusChange(OffsetDateTime.parse("2021-03-27T11:50:58Z"))
                                        .withResourceType("jdrpizfulgycts")
                                        .withIsOptional(true),
                                    new ConnectivityStatusContract()
                                        .withName("tqgkujd")
                                        .withStatus(ConnectivityStatusType.FAILURE)
                                        .withError("xrqwo")
                                        .withLastUpdated(OffsetDateTime.parse("2021-03-21T10:31:02Z"))
                                        .withLastStatusChange(OffsetDateTime.parse("2021-01-29T18:30:42Z"))
                                        .withResourceType("btigapdyarikeejd")
                                        .withIsOptional(true))));
        model = BinaryData.fromObject(model).toObject(NetworkStatusContractByLocationInner.class);
        Assertions.assertEquals("vlrdsmovpi", model.location());
        Assertions.assertEquals("dnox", model.networkStatus().dnsServers().get(0));
        Assertions.assertEquals("olousdvrg", model.networkStatus().connectivityStatus().get(0).name());
        Assertions
            .assertEquals(ConnectivityStatusType.SUCCESS, model.networkStatus().connectivityStatus().get(0).status());
        Assertions.assertEquals("m", model.networkStatus().connectivityStatus().get(0).error());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-04-09T03:39:28Z"),
                model.networkStatus().connectivityStatus().get(0).lastUpdated());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-03-27T11:50:58Z"),
                model.networkStatus().connectivityStatus().get(0).lastStatusChange());
        Assertions.assertEquals("jdrpizfulgycts", model.networkStatus().connectivityStatus().get(0).resourceType());
        Assertions.assertEquals(true, model.networkStatus().connectivityStatus().get(0).isOptional());
    }
}
