// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.models.ProductContract;
import com.azure.resourcemanager.apimanagement.models.ProductState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ProductsListByServiceMockTests {
    @Test
    public void testListByService() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"displayName\":\"lonalpwaulkwuy\",\"description\":\"j\",\"terms\":\"wnjdrnfgtmupbl\",\"subscriptionRequired\":true,\"approvalRequired\":false,\"subscriptionsLimit\":2027369838,\"state\":\"notPublished\"},\"id\":\"xufuwcajyezlk\",\"name\":\"iveftugiwsvlfp\",\"type\":\"bpnrgnxwrfu\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<ProductContract> response = manager.products()
            .listByService("fxlrxixymfqmvnh", "fjxtus", "jxpuokkd", 1535635275, 187284174, false, "pg",
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("lonalpwaulkwuy", response.iterator().next().displayName());
        Assertions.assertEquals("j", response.iterator().next().description());
        Assertions.assertEquals("wnjdrnfgtmupbl", response.iterator().next().terms());
        Assertions.assertEquals(true, response.iterator().next().subscriptionRequired());
        Assertions.assertEquals(false, response.iterator().next().approvalRequired());
        Assertions.assertEquals(2027369838, response.iterator().next().subscriptionsLimit());
        Assertions.assertEquals(ProductState.NOT_PUBLISHED, response.iterator().next().state());
    }
}
