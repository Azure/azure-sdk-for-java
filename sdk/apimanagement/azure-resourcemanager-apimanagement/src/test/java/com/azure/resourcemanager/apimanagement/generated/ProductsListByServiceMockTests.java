// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.models.ProductContract;
import com.azure.resourcemanager.apimanagement.models.ProductState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ProductsListByServiceMockTests {
    @Test
    public void testListByService() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"displayName\":\"rbi\",\"description\":\"jlgrwjb\",\"terms\":\"cukboc\",\"subscriptionRequired\":false,\"approvalRequired\":false,\"subscriptionsLimit\":681367402,\"state\":\"published\"},\"id\":\"zp\",\"name\":\"qi\",\"type\":\"yxjkctyq\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ProductContract> response = manager.products()
            .listByService("dusebkcfetxp", "nterma", "uiqr", 150990617, 1183893831, true, "tubqwxv",
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("rbi", response.iterator().next().displayName());
        Assertions.assertEquals("jlgrwjb", response.iterator().next().description());
        Assertions.assertEquals("cukboc", response.iterator().next().terms());
        Assertions.assertEquals(false, response.iterator().next().subscriptionRequired());
        Assertions.assertEquals(false, response.iterator().next().approvalRequired());
        Assertions.assertEquals(681367402, response.iterator().next().subscriptionsLimit());
        Assertions.assertEquals(ProductState.PUBLISHED, response.iterator().next().state());
    }
}
