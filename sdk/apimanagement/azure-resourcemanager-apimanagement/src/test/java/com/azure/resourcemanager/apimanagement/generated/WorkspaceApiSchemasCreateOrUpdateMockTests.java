// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.fluent.models.SchemaContractInner;
import com.azure.resourcemanager.apimanagement.models.SchemaContract;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkspaceApiSchemasCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"contentType\":\"mfdylvpyhhgqysz\",\"document\":{\"value\":\"ijzhv\",\"definitions\":\"dataqjekol\",\"components\":\"datalpykjpakaouyaan\"},\"provisioningState\":\"Succeeded\"},\"id\":\"eycakkon\",\"name\":\"yd\",\"type\":\"dwyhadz\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        SchemaContract response = manager.workspaceApiSchemas()
            .createOrUpdate("ygtdfqlfdmly", "zdbrw", "l", "fthfrxwiqjsfg", "wrc",
                new SchemaContractInner().withContentType("xyprabpyweczo")
                    .withValue("abjb")
                    .withDefinitions("datayddijfkktigisee")
                    .withComponents("datazrerxyds"),
                "sfanmjmpce", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("mfdylvpyhhgqysz", response.contentType());
        Assertions.assertEquals("ijzhv", response.value());
    }
}
