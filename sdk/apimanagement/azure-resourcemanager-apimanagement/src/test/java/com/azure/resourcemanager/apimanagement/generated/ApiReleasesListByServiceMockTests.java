// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.models.ApiReleaseContract;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ApiReleasesListByServiceMockTests {
    @Test
    public void testListByService() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"apiId\":\"gdheronsd\",\"createdDateTime\":\"2021-01-13T11:49:05Z\",\"updatedDateTime\":\"2021-09-04T01:46:34Z\",\"notes\":\"zuatqhgzuyxt\"},\"id\":\"vfdbqskgqjbvitpt\",\"name\":\"vs\",\"type\":\"favdhpiwrm\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<ApiReleaseContract> response = manager.apiReleases()
            .listByService("saujqg", "bjvov", "a", "hgjsmbcsloy", 1205136049, 985080577,
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("gdheronsd", response.iterator().next().apiId());
        Assertions.assertEquals("zuatqhgzuyxt", response.iterator().next().notes());
    }
}
