// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.models.ReportRecordContract;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReportsListByOperationMockTests {
    @Test
    public void testListByOperation() throws Exception {
        String responseStr
            = "{\"value\":[{\"name\":\"wmdr\",\"timestamp\":\"2021-03-01T17:27:57Z\",\"interval\":\"ilyoix\",\"country\":\"iznqizvsihsmtxj\",\"region\":\"jhsjuqqtzr\",\"zip\":\"bodgo\",\"userId\":\"kia\",\"productId\":\"gugrjxx\",\"apiId\":\"gorvumwnbzslmff\",\"operationId\":\"tkprxypxtipkd\",\"apiRegion\":\"bafiqxomevketa\",\"subscriptionId\":\"vncxtnbutytoaini\",\"callCountSuccess\":694442583,\"callCountBlocked\":673942114,\"callCountFailed\":423606100,\"callCountOther\":1548565202,\"callCountTotal\":1049722240,\"bandwidth\":5130328230233834657,\"cacheHitCount\":2133932186,\"cacheMissCount\":1351003269,\"apiTimeAvg\":13.008521212698309,\"apiTimeMin\":22.05441397596942,\"apiTimeMax\":3.8618052111017542,\"serviceTimeAvg\":69.36172947631427,\"serviceTimeMin\":11.646438286380068,\"serviceTimeMax\":98.16220096422359}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<ReportRecordContract> response = manager.reports()
            .listByOperation("vzjqf", "fiyjzu", "gxbovtjm", 982396462, 2063707565, "dypsxkwwfyevhurk",
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("wmdr", response.iterator().next().name());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-01T17:27:57Z"), response.iterator().next().timestamp());
        Assertions.assertEquals("ilyoix", response.iterator().next().interval());
        Assertions.assertEquals("iznqizvsihsmtxj", response.iterator().next().country());
        Assertions.assertEquals("jhsjuqqtzr", response.iterator().next().region());
        Assertions.assertEquals("bodgo", response.iterator().next().zip());
        Assertions.assertEquals("gorvumwnbzslmff", response.iterator().next().apiId());
        Assertions.assertEquals("tkprxypxtipkd", response.iterator().next().operationId());
        Assertions.assertEquals("bafiqxomevketa", response.iterator().next().apiRegion());
        Assertions.assertEquals("vncxtnbutytoaini", response.iterator().next().subscriptionId());
        Assertions.assertEquals(694442583, response.iterator().next().callCountSuccess());
        Assertions.assertEquals(673942114, response.iterator().next().callCountBlocked());
        Assertions.assertEquals(423606100, response.iterator().next().callCountFailed());
        Assertions.assertEquals(1548565202, response.iterator().next().callCountOther());
        Assertions.assertEquals(1049722240, response.iterator().next().callCountTotal());
        Assertions.assertEquals(5130328230233834657L, response.iterator().next().bandwidth());
        Assertions.assertEquals(2133932186, response.iterator().next().cacheHitCount());
        Assertions.assertEquals(1351003269, response.iterator().next().cacheMissCount());
        Assertions.assertEquals(13.008521212698309D, response.iterator().next().apiTimeAvg());
        Assertions.assertEquals(22.05441397596942D, response.iterator().next().apiTimeMin());
        Assertions.assertEquals(3.8618052111017542D, response.iterator().next().apiTimeMax());
        Assertions.assertEquals(69.36172947631427D, response.iterator().next().serviceTimeAvg());
        Assertions.assertEquals(11.646438286380068D, response.iterator().next().serviceTimeMin());
        Assertions.assertEquals(98.16220096422359D, response.iterator().next().serviceTimeMax());
    }
}
