// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.models.DeletedServiceContract;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DeletedServicesPurgeMockTests {
    @Test
    public void testPurge() throws Exception {
        String responseStr
            = "{\"properties\":{\"serviceId\":\"va\",\"scheduledPurgeDate\":\"2021-11-01T12:37:16Z\",\"deletionDate\":\"2021-09-09T07:02:40Z\"},\"location\":\"yeedvpmodktdut\",\"id\":\"dvvgkmorbpcje\",\"name\":\"fyvuztnsv\",\"type\":\"shkkgygfohrmehh\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        DeletedServiceContract response
            = manager.deletedServices().purge("cuiaun", "odincfbaoboiahk", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("va", response.serviceId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-01T12:37:16Z"), response.scheduledPurgeDate());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-09T07:02:40Z"), response.deletionDate());
    }
}
