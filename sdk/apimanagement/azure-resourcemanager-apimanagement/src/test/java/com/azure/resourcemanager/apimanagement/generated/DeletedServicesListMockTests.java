// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.models.DeletedServiceContract;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DeletedServicesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"serviceId\":\"mazuflfpiuufhp\",\"scheduledPurgeDate\":\"2021-06-21T14:37:43Z\",\"deletionDate\":\"2021-09-29T05:27:44Z\"},\"location\":\"rgivbh\",\"id\":\"nimjlyhbjfnmmib\",\"name\":\"wcduyrgcay\",\"type\":\"umqeobrwreu\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<DeletedServiceContract> response
            = manager.deletedServices().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("mazuflfpiuufhp", response.iterator().next().serviceId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-21T14:37:43Z"),
            response.iterator().next().scheduledPurgeDate());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-29T05:27:44Z"),
            response.iterator().next().deletionDate());
    }
}
