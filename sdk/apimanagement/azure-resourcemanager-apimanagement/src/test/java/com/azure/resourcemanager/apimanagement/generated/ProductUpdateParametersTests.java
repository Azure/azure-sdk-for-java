// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.models.ProductState;
import com.azure.resourcemanager.apimanagement.models.ProductUpdateParameters;
import org.junit.jupiter.api.Assertions;

public final class ProductUpdateParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProductUpdateParameters model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"nmpaklwzlweepr\",\"description\":\"jzltkaszfjs\",\"terms\":\"cbduxapgrcqebmvr\",\"subscriptionRequired\":false,\"approvalRequired\":true,\"subscriptionsLimit\":1987382491,\"state\":\"published\"}}")
            .toObject(ProductUpdateParameters.class);
        Assertions.assertEquals("nmpaklwzlweepr", model.displayName());
        Assertions.assertEquals("jzltkaszfjs", model.description());
        Assertions.assertEquals("cbduxapgrcqebmvr", model.terms());
        Assertions.assertEquals(false, model.subscriptionRequired());
        Assertions.assertEquals(true, model.approvalRequired());
        Assertions.assertEquals(1987382491, model.subscriptionsLimit());
        Assertions.assertEquals(ProductState.PUBLISHED, model.state());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProductUpdateParameters model = new ProductUpdateParameters().withDisplayName("nmpaklwzlweepr")
            .withDescription("jzltkaszfjs")
            .withTerms("cbduxapgrcqebmvr")
            .withSubscriptionRequired(false)
            .withApprovalRequired(true)
            .withSubscriptionsLimit(1987382491)
            .withState(ProductState.PUBLISHED);
        model = BinaryData.fromObject(model).toObject(ProductUpdateParameters.class);
        Assertions.assertEquals("nmpaklwzlweepr", model.displayName());
        Assertions.assertEquals("jzltkaszfjs", model.description());
        Assertions.assertEquals("cbduxapgrcqebmvr", model.terms());
        Assertions.assertEquals(false, model.subscriptionRequired());
        Assertions.assertEquals(true, model.approvalRequired());
        Assertions.assertEquals(1987382491, model.subscriptionsLimit());
        Assertions.assertEquals(ProductState.PUBLISHED, model.state());
    }
}
