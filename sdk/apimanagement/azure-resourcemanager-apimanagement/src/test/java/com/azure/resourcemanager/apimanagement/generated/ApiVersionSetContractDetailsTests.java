// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.models.ApiVersionSetContractDetails;
import com.azure.resourcemanager.apimanagement.models.VersioningScheme;
import org.junit.jupiter.api.Assertions;

public final class ApiVersionSetContractDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ApiVersionSetContractDetails model =
            BinaryData
                .fromString(
                    "{\"id\":\"git\",\"name\":\"qhabifpikxwcz\",\"description\":\"scnpqxuhivy\",\"versioningScheme\":\"Header\",\"versionQueryName\":\"b\",\"versionHeaderName\":\"rkxvdum\"}")
                .toObject(ApiVersionSetContractDetails.class);
        Assertions.assertEquals("git", model.id());
        Assertions.assertEquals("qhabifpikxwcz", model.name());
        Assertions.assertEquals("scnpqxuhivy", model.description());
        Assertions.assertEquals(VersioningScheme.HEADER, model.versioningScheme());
        Assertions.assertEquals("b", model.versionQueryName());
        Assertions.assertEquals("rkxvdum", model.versionHeaderName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ApiVersionSetContractDetails model =
            new ApiVersionSetContractDetails()
                .withId("git")
                .withName("qhabifpikxwcz")
                .withDescription("scnpqxuhivy")
                .withVersioningScheme(VersioningScheme.HEADER)
                .withVersionQueryName("b")
                .withVersionHeaderName("rkxvdum");
        model = BinaryData.fromObject(model).toObject(ApiVersionSetContractDetails.class);
        Assertions.assertEquals("git", model.id());
        Assertions.assertEquals("qhabifpikxwcz", model.name());
        Assertions.assertEquals("scnpqxuhivy", model.description());
        Assertions.assertEquals(VersioningScheme.HEADER, model.versioningScheme());
        Assertions.assertEquals("b", model.versionQueryName());
        Assertions.assertEquals("rkxvdum", model.versionHeaderName());
    }
}
