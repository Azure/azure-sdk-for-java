// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.TenantConfigurationSyncStateContractProperties;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class TenantConfigurationSyncStateContractPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TenantConfigurationSyncStateContractProperties model = BinaryData.fromString(
            "{\"branch\":\"evfiyymotu\",\"commitId\":\"ybwjmtftc\",\"isExport\":false,\"isSynced\":true,\"isGitEnabled\":false,\"syncDate\":\"2021-06-22T09:02:33Z\",\"configurationChangeDate\":\"2021-01-12T10:32:48Z\",\"lastOperationId\":\"tpaqpibjgb\"}")
            .toObject(TenantConfigurationSyncStateContractProperties.class);
        Assertions.assertEquals("evfiyymotu", model.branch());
        Assertions.assertEquals("ybwjmtftc", model.commitId());
        Assertions.assertEquals(false, model.isExport());
        Assertions.assertEquals(true, model.isSynced());
        Assertions.assertEquals(false, model.isGitEnabled());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-22T09:02:33Z"), model.syncDate());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-12T10:32:48Z"), model.configurationChangeDate());
        Assertions.assertEquals("tpaqpibjgb", model.lastOperationId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TenantConfigurationSyncStateContractProperties model
            = new TenantConfigurationSyncStateContractProperties().withBranch("evfiyymotu")
                .withCommitId("ybwjmtftc")
                .withIsExport(false)
                .withIsSynced(true)
                .withIsGitEnabled(false)
                .withSyncDate(OffsetDateTime.parse("2021-06-22T09:02:33Z"))
                .withConfigurationChangeDate(OffsetDateTime.parse("2021-01-12T10:32:48Z"))
                .withLastOperationId("tpaqpibjgb");
        model = BinaryData.fromObject(model).toObject(TenantConfigurationSyncStateContractProperties.class);
        Assertions.assertEquals("evfiyymotu", model.branch());
        Assertions.assertEquals("ybwjmtftc", model.commitId());
        Assertions.assertEquals(false, model.isExport());
        Assertions.assertEquals(true, model.isSynced());
        Assertions.assertEquals(false, model.isGitEnabled());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-22T09:02:33Z"), model.syncDate());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-12T10:32:48Z"), model.configurationChangeDate());
        Assertions.assertEquals("tpaqpibjgb", model.lastOperationId());
    }
}
