// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.TenantConfigurationSyncStateContractProperties;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class TenantConfigurationSyncStateContractPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TenantConfigurationSyncStateContractProperties model = BinaryData.fromString(
            "{\"branch\":\"l\",\"commitId\":\"rnqujywzcqy\",\"isExport\":false,\"isSynced\":false,\"isGitEnabled\":false,\"syncDate\":\"2021-09-11T16:52:45Z\",\"configurationChangeDate\":\"2020-12-21T03:43:13Z\",\"lastOperationId\":\"iwyejtobdr\"}")
            .toObject(TenantConfigurationSyncStateContractProperties.class);
        Assertions.assertEquals("l", model.branch());
        Assertions.assertEquals("rnqujywzcqy", model.commitId());
        Assertions.assertEquals(false, model.isExport());
        Assertions.assertEquals(false, model.isSynced());
        Assertions.assertEquals(false, model.isGitEnabled());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-11T16:52:45Z"), model.syncDate());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-21T03:43:13Z"), model.configurationChangeDate());
        Assertions.assertEquals("iwyejtobdr", model.lastOperationId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TenantConfigurationSyncStateContractProperties model
            = new TenantConfigurationSyncStateContractProperties().withBranch("l")
                .withCommitId("rnqujywzcqy")
                .withIsExport(false)
                .withIsSynced(false)
                .withIsGitEnabled(false)
                .withSyncDate(OffsetDateTime.parse("2021-09-11T16:52:45Z"))
                .withConfigurationChangeDate(OffsetDateTime.parse("2020-12-21T03:43:13Z"))
                .withLastOperationId("iwyejtobdr");
        model = BinaryData.fromObject(model).toObject(TenantConfigurationSyncStateContractProperties.class);
        Assertions.assertEquals("l", model.branch());
        Assertions.assertEquals("rnqujywzcqy", model.commitId());
        Assertions.assertEquals(false, model.isExport());
        Assertions.assertEquals(false, model.isSynced());
        Assertions.assertEquals(false, model.isGitEnabled());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-11T16:52:45Z"), model.syncDate());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-21T03:43:13Z"), model.configurationChangeDate());
        Assertions.assertEquals("iwyejtobdr", model.lastOperationId());
    }
}
