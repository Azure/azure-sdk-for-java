// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.IssueUpdateContractProperties;
import com.azure.resourcemanager.apimanagement.models.State;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class IssueUpdateContractPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IssueUpdateContractProperties model = BinaryData.fromString(
            "{\"title\":\"hjrmkuhmaxl\",\"description\":\"lfihcj\",\"userId\":\"bc\",\"createdDate\":\"2021-12-03T02:48:29Z\",\"state\":\"proposed\",\"apiId\":\"xqcwgax\"}")
            .toObject(IssueUpdateContractProperties.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-03T02:48:29Z"), model.createdDate());
        Assertions.assertEquals(State.PROPOSED, model.state());
        Assertions.assertEquals("xqcwgax", model.apiId());
        Assertions.assertEquals("hjrmkuhmaxl", model.title());
        Assertions.assertEquals("lfihcj", model.description());
        Assertions.assertEquals("bc", model.userId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IssueUpdateContractProperties model
            = new IssueUpdateContractProperties().withCreatedDate(OffsetDateTime.parse("2021-12-03T02:48:29Z"))
                .withState(State.PROPOSED)
                .withApiId("xqcwgax")
                .withTitle("hjrmkuhmaxl")
                .withDescription("lfihcj")
                .withUserId("bc");
        model = BinaryData.fromObject(model).toObject(IssueUpdateContractProperties.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-03T02:48:29Z"), model.createdDate());
        Assertions.assertEquals(State.PROPOSED, model.state());
        Assertions.assertEquals("xqcwgax", model.apiId());
        Assertions.assertEquals("hjrmkuhmaxl", model.title());
        Assertions.assertEquals("lfihcj", model.description());
        Assertions.assertEquals("bc", model.userId());
    }
}
