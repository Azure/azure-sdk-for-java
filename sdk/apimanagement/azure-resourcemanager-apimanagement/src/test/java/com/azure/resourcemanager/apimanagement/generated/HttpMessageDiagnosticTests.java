// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.models.BodyDiagnosticSettings;
import com.azure.resourcemanager.apimanagement.models.DataMasking;
import com.azure.resourcemanager.apimanagement.models.DataMaskingEntity;
import com.azure.resourcemanager.apimanagement.models.DataMaskingMode;
import com.azure.resourcemanager.apimanagement.models.HttpMessageDiagnostic;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class HttpMessageDiagnosticTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HttpMessageDiagnostic model = BinaryData.fromString(
            "{\"headers\":[\"aderzmw\"],\"body\":{\"bytes\":664347452},\"dataMasking\":{\"queryParams\":[{\"value\":\"mvmmagoaqylkjz\",\"mode\":\"Mask\"},{\"value\":\"azjcgmxitpfin\",\"mode\":\"Mask\"},{\"value\":\"ltkrl\",\"mode\":\"Hide\"},{\"value\":\"bd\",\"mode\":\"Mask\"}],\"headers\":[{\"value\":\"efz\",\"mode\":\"Mask\"},{\"value\":\"heqdurelyujlfyou\",\"mode\":\"Hide\"}]}}")
            .toObject(HttpMessageDiagnostic.class);
        Assertions.assertEquals("aderzmw", model.headers().get(0));
        Assertions.assertEquals(664347452, model.body().bytes());
        Assertions.assertEquals("mvmmagoaqylkjz", model.dataMasking().queryParams().get(0).value());
        Assertions.assertEquals(DataMaskingMode.MASK, model.dataMasking().queryParams().get(0).mode());
        Assertions.assertEquals("efz", model.dataMasking().headers().get(0).value());
        Assertions.assertEquals(DataMaskingMode.MASK, model.dataMasking().headers().get(0).mode());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HttpMessageDiagnostic model = new HttpMessageDiagnostic().withHeaders(Arrays.asList("aderzmw"))
            .withBody(new BodyDiagnosticSettings().withBytes(664347452))
            .withDataMasking(new DataMasking()
                .withQueryParams(
                    Arrays.asList(new DataMaskingEntity().withValue("mvmmagoaqylkjz").withMode(DataMaskingMode.MASK),
                        new DataMaskingEntity().withValue("azjcgmxitpfin").withMode(DataMaskingMode.MASK),
                        new DataMaskingEntity().withValue("ltkrl").withMode(DataMaskingMode.HIDE),
                        new DataMaskingEntity().withValue("bd").withMode(DataMaskingMode.MASK)))
                .withHeaders(Arrays.asList(new DataMaskingEntity().withValue("efz").withMode(DataMaskingMode.MASK),
                    new DataMaskingEntity().withValue("heqdurelyujlfyou").withMode(DataMaskingMode.HIDE))));
        model = BinaryData.fromObject(model).toObject(HttpMessageDiagnostic.class);
        Assertions.assertEquals("aderzmw", model.headers().get(0));
        Assertions.assertEquals(664347452, model.body().bytes());
        Assertions.assertEquals("mvmmagoaqylkjz", model.dataMasking().queryParams().get(0).value());
        Assertions.assertEquals(DataMaskingMode.MASK, model.dataMasking().queryParams().get(0).mode());
        Assertions.assertEquals("efz", model.dataMasking().headers().get(0).value());
        Assertions.assertEquals(DataMaskingMode.MASK, model.dataMasking().headers().get(0).mode());
    }
}
