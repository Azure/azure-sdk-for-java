// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.models.IssueUpdateContract;
import com.azure.resourcemanager.apimanagement.models.State;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class IssueUpdateContractTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IssueUpdateContract model = BinaryData.fromString(
            "{\"properties\":{\"title\":\"uo\",\"description\":\"gtgitsqhzvbrzcdb\",\"userId\":\"fzndscxmxeatkd\",\"createdDate\":\"2021-06-16T10:55:30Z\",\"state\":\"proposed\",\"apiId\":\"jyibqbna\"}}")
            .toObject(IssueUpdateContract.class);
        Assertions.assertEquals("uo", model.title());
        Assertions.assertEquals("gtgitsqhzvbrzcdb", model.description());
        Assertions.assertEquals("fzndscxmxeatkd", model.userId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-16T10:55:30Z"), model.createdDate());
        Assertions.assertEquals(State.PROPOSED, model.state());
        Assertions.assertEquals("jyibqbna", model.apiId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IssueUpdateContract model = new IssueUpdateContract().withTitle("uo")
            .withDescription("gtgitsqhzvbrzcdb")
            .withUserId("fzndscxmxeatkd")
            .withCreatedDate(OffsetDateTime.parse("2021-06-16T10:55:30Z"))
            .withState(State.PROPOSED)
            .withApiId("jyibqbna");
        model = BinaryData.fromObject(model).toObject(IssueUpdateContract.class);
        Assertions.assertEquals("uo", model.title());
        Assertions.assertEquals("gtgitsqhzvbrzcdb", model.description());
        Assertions.assertEquals("fzndscxmxeatkd", model.userId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-16T10:55:30Z"), model.createdDate());
        Assertions.assertEquals(State.PROPOSED, model.state());
        Assertions.assertEquals("jyibqbna", model.apiId());
    }
}
