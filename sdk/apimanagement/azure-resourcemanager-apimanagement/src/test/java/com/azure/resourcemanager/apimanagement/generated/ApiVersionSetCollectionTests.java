// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.ApiVersionSetContractInner;
import com.azure.resourcemanager.apimanagement.models.ApiVersionSetCollection;
import com.azure.resourcemanager.apimanagement.models.VersioningScheme;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ApiVersionSetCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ApiVersionSetCollection model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"displayName\":\"fmmp\",\"versioningScheme\":\"Segment\",\"description\":\"zwv\",\"versionQueryName\":\"rgyngydgrpxnca\",\"versionHeaderName\":\"qao\"},\"id\":\"djrkclamggl\",\"name\":\"lmf\",\"type\":\"jdoq\"},{\"properties\":{\"displayName\":\"kgltyg\",\"versioningScheme\":\"Segment\",\"description\":\"fgqka\",\"versionQueryName\":\"jsxtlgflwfgziiuc\",\"versionHeaderName\":\"jceatlijjjrtva\"},\"id\":\"caszk\",\"name\":\"xk\",\"type\":\"ccxetyvkun\"},{\"properties\":{\"displayName\":\"gno\",\"versioningScheme\":\"Segment\",\"description\":\"kgqogjw\",\"versionQueryName\":\"nd\",\"versionHeaderName\":\"vabbx\"},\"id\":\"hmedeilbjywfcfxz\",\"name\":\"rzzihvwypus\",\"type\":\"vjslczwcii\"},{\"properties\":{\"displayName\":\"sllfryvdmvxad\",\"versioningScheme\":\"Header\",\"description\":\"frgnawbabgfbktyj\",\"versionQueryName\":\"czlfsy\",\"versionHeaderName\":\"frbzgowo\"},\"id\":\"qmje\",\"name\":\"jcx\",\"type\":\"yqgxhlus\"}],\"count\":4395926953552775706,\"nextLink\":\"i\"}")
            .toObject(ApiVersionSetCollection.class);
        Assertions.assertEquals("fmmp", model.value().get(0).displayName());
        Assertions.assertEquals(VersioningScheme.SEGMENT, model.value().get(0).versioningScheme());
        Assertions.assertEquals("zwv", model.value().get(0).description());
        Assertions.assertEquals("rgyngydgrpxnca", model.value().get(0).versionQueryName());
        Assertions.assertEquals("qao", model.value().get(0).versionHeaderName());
        Assertions.assertEquals(4395926953552775706L, model.count());
        Assertions.assertEquals("i", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ApiVersionSetCollection model = new ApiVersionSetCollection().withValue(Arrays.asList(
            new ApiVersionSetContractInner().withDisplayName("fmmp")
                .withVersioningScheme(VersioningScheme.SEGMENT)
                .withDescription("zwv")
                .withVersionQueryName("rgyngydgrpxnca")
                .withVersionHeaderName("qao"),
            new ApiVersionSetContractInner().withDisplayName("kgltyg")
                .withVersioningScheme(VersioningScheme.SEGMENT)
                .withDescription("fgqka")
                .withVersionQueryName("jsxtlgflwfgziiuc")
                .withVersionHeaderName("jceatlijjjrtva"),
            new ApiVersionSetContractInner().withDisplayName("gno")
                .withVersioningScheme(VersioningScheme.SEGMENT)
                .withDescription("kgqogjw")
                .withVersionQueryName("nd")
                .withVersionHeaderName("vabbx"),
            new ApiVersionSetContractInner().withDisplayName("sllfryvdmvxad")
                .withVersioningScheme(VersioningScheme.HEADER)
                .withDescription("frgnawbabgfbktyj")
                .withVersionQueryName("czlfsy")
                .withVersionHeaderName("frbzgowo")))
            .withCount(4395926953552775706L)
            .withNextLink("i");
        model = BinaryData.fromObject(model).toObject(ApiVersionSetCollection.class);
        Assertions.assertEquals("fmmp", model.value().get(0).displayName());
        Assertions.assertEquals(VersioningScheme.SEGMENT, model.value().get(0).versioningScheme());
        Assertions.assertEquals("zwv", model.value().get(0).description());
        Assertions.assertEquals("rgyngydgrpxnca", model.value().get(0).versionQueryName());
        Assertions.assertEquals("qao", model.value().get(0).versionHeaderName());
        Assertions.assertEquals(4395926953552775706L, model.count());
        Assertions.assertEquals("i", model.nextLink());
    }
}
