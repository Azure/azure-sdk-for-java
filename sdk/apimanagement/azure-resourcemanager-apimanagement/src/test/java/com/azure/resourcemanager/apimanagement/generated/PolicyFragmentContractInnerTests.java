// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.PolicyFragmentContractInner;
import com.azure.resourcemanager.apimanagement.models.PolicyFragmentContentFormat;
import org.junit.jupiter.api.Assertions;

public final class PolicyFragmentContractInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PolicyFragmentContractInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"value\":\"sk\",\"description\":\"ddida\",\"format\":\"rawxml\"},\"id\":\"lrqmtlp\",\"name\":\"yxroiduyqypffmno\",\"type\":\"ic\"}")
                .toObject(PolicyFragmentContractInner.class);
        Assertions.assertEquals("sk", model.value());
        Assertions.assertEquals("ddida", model.description());
        Assertions.assertEquals(PolicyFragmentContentFormat.RAWXML, model.format());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PolicyFragmentContractInner model =
            new PolicyFragmentContractInner()
                .withValue("sk")
                .withDescription("ddida")
                .withFormat(PolicyFragmentContentFormat.RAWXML);
        model = BinaryData.fromObject(model).toObject(PolicyFragmentContractInner.class);
        Assertions.assertEquals("sk", model.value());
        Assertions.assertEquals("ddida", model.description());
        Assertions.assertEquals(PolicyFragmentContentFormat.RAWXML, model.format());
    }
}
