// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.models.ProductState;
import com.azure.resourcemanager.apimanagement.models.ProductTagResourceContractProperties;
import org.junit.jupiter.api.Assertions;

public final class ProductTagResourceContractPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProductTagResourceContractProperties model = BinaryData.fromString(
            "{\"id\":\"yo\",\"name\":\"kxkxhnegk\",\"description\":\"z\",\"terms\":\"h\",\"subscriptionRequired\":false,\"approvalRequired\":true,\"subscriptionsLimit\":1783999067,\"state\":\"notPublished\"}")
            .toObject(ProductTagResourceContractProperties.class);
        Assertions.assertEquals("z", model.description());
        Assertions.assertEquals("h", model.terms());
        Assertions.assertEquals(false, model.subscriptionRequired());
        Assertions.assertEquals(true, model.approvalRequired());
        Assertions.assertEquals(1783999067, model.subscriptionsLimit());
        Assertions.assertEquals(ProductState.NOT_PUBLISHED, model.state());
        Assertions.assertEquals("yo", model.id());
        Assertions.assertEquals("kxkxhnegk", model.name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProductTagResourceContractProperties model = new ProductTagResourceContractProperties().withDescription("z")
            .withTerms("h")
            .withSubscriptionRequired(false)
            .withApprovalRequired(true)
            .withSubscriptionsLimit(1783999067)
            .withState(ProductState.NOT_PUBLISHED)
            .withId("yo")
            .withName("kxkxhnegk");
        model = BinaryData.fromObject(model).toObject(ProductTagResourceContractProperties.class);
        Assertions.assertEquals("z", model.description());
        Assertions.assertEquals("h", model.terms());
        Assertions.assertEquals(false, model.subscriptionRequired());
        Assertions.assertEquals(true, model.approvalRequired());
        Assertions.assertEquals(1783999067, model.subscriptionsLimit());
        Assertions.assertEquals(ProductState.NOT_PUBLISHED, model.state());
        Assertions.assertEquals("yo", model.id());
        Assertions.assertEquals("kxkxhnegk", model.name());
    }
}
