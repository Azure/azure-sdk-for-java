// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.models.IssueCommentContract;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ApiIssueCommentsListByServiceMockTests {
    @Test
    public void testListByService() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"text\":\"k\",\"createdDate\":\"2021-04-05T21:35:25Z\",\"userId\":\"znfgvlx\"},\"id\":\"xmnctigpksywi\",\"name\":\"k\",\"type\":\"ktgkdprtqjytdc\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<IssueCommentContract> response = manager.apiIssueComments()
            .listByService("ms", "auemqomxoa", "knuyapvibzicyvi", "hcaptkhjx", "rkbn", 1045968811, 1932908026,
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("k", response.iterator().next().text());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-05T21:35:25Z"), response.iterator().next().createdDate());
        Assertions.assertEquals("znfgvlx", response.iterator().next().userId());
    }
}
