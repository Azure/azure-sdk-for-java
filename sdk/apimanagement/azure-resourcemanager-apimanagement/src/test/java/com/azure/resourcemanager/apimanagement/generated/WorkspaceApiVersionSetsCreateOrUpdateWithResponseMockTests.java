// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.fluent.models.ApiVersionSetContractInner;
import com.azure.resourcemanager.apimanagement.models.ApiVersionSetContract;
import com.azure.resourcemanager.apimanagement.models.VersioningScheme;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkspaceApiVersionSetsCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"jkraleglpyns\",\"versioningScheme\":\"Header\",\"description\":\"wiwrubxeyralhb\",\"versionQueryName\":\"altvkyl\",\"versionHeaderName\":\"opqtegkrjolbaegh\"},\"id\":\"ksscismrn\",\"name\":\"eklf\",\"type\":\"b\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ApiVersionSetContract response = manager.workspaceApiVersionSets()
            .createOrUpdateWithResponse("xabmxoowp", "ogozercczvpbnkgk", "uj", "qqjqafjk",
                new ApiVersionSetContractInner().withDisplayName("logvfnwqzolva")
                    .withVersioningScheme(VersioningScheme.HEADER)
                    .withDescription("kycge")
                    .withVersionQueryName("wehjybboqyxi")
                    .withVersionHeaderName("dvdgemy"),
                "grhrdnsgvsrtqlt", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("jkraleglpyns", response.displayName());
        Assertions.assertEquals(VersioningScheme.HEADER, response.versioningScheme());
        Assertions.assertEquals("wiwrubxeyralhb", response.description());
        Assertions.assertEquals("altvkyl", response.versionQueryName());
        Assertions.assertEquals("opqtegkrjolbaegh", response.versionHeaderName());
    }
}
