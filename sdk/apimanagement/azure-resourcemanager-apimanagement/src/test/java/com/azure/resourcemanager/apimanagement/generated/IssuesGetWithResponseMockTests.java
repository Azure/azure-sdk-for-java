// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.models.IssueContract;
import com.azure.resourcemanager.apimanagement.models.State;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IssuesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"title\":\"bpvsobamtarir\",\"description\":\"zd\",\"userId\":\"vqoflzukeg\",\"createdDate\":\"2021-07-18T00:06:58Z\",\"state\":\"removed\",\"apiId\":\"pbmzq\"},\"id\":\"xblmnxrxk\",\"name\":\"lytivviyqonbxx\",\"type\":\"fozbgodywxj\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        IssueContract response = manager.issues()
            .getWithResponse("lrvwsgseqj", "eo", "xirmgiswr", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("bpvsobamtarir", response.title());
        Assertions.assertEquals("zd", response.description());
        Assertions.assertEquals("vqoflzukeg", response.userId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-18T00:06:58Z"), response.createdDate());
        Assertions.assertEquals(State.REMOVED, response.state());
        Assertions.assertEquals("pbmzq", response.apiId());
    }
}
