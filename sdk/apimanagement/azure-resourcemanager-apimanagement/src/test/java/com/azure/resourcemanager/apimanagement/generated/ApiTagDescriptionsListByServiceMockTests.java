// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.models.TagDescriptionContract;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ApiTagDescriptionsListByServiceMockTests {
    @Test
    public void testListByService() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"tagId\":\"vbuc\",\"displayName\":\"rovomep\",\"description\":\"sicvwqzocsf\",\"externalDocsUrl\":\"ennmsgpywdib\",\"externalDocsDescription\":\"vnrgalv\"},\"id\":\"rhryibrbknuub\",\"name\":\"cwojt\",\"type\":\"p\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<TagDescriptionContract> response = manager.apiTagDescriptions()
            .listByService("nmzaofro", "fqckie", "yr", "jyoybkqftusdw", 810308745, 1884133811,
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("vbuc", response.iterator().next().tagId());
        Assertions.assertEquals("rovomep", response.iterator().next().displayName());
        Assertions.assertEquals("sicvwqzocsf", response.iterator().next().description());
        Assertions.assertEquals("ennmsgpywdib", response.iterator().next().externalDocsUrl());
        Assertions.assertEquals("vnrgalv", response.iterator().next().externalDocsDescription());
    }
}
