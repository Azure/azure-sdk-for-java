// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.ProductContractProperties;
import com.azure.resourcemanager.apimanagement.models.ProductState;
import org.junit.jupiter.api.Assertions;

public final class ProductContractPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProductContractProperties model =
            BinaryData
                .fromString(
                    "{\"displayName\":\"grebwggahttzlsw\",\"description\":\"jqfutlxj\",\"terms\":\"zasunwqrjzfrgq\",\"subscriptionRequired\":false,\"approvalRequired\":true,\"subscriptionsLimit\":1754842932,\"state\":\"notPublished\"}")
                .toObject(ProductContractProperties.class);
        Assertions.assertEquals("jqfutlxj", model.description());
        Assertions.assertEquals("zasunwqrjzfrgq", model.terms());
        Assertions.assertEquals(false, model.subscriptionRequired());
        Assertions.assertEquals(true, model.approvalRequired());
        Assertions.assertEquals(1754842932, model.subscriptionsLimit());
        Assertions.assertEquals(ProductState.NOT_PUBLISHED, model.state());
        Assertions.assertEquals("grebwggahttzlsw", model.displayName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProductContractProperties model =
            new ProductContractProperties()
                .withDescription("jqfutlxj")
                .withTerms("zasunwqrjzfrgq")
                .withSubscriptionRequired(false)
                .withApprovalRequired(true)
                .withSubscriptionsLimit(1754842932)
                .withState(ProductState.NOT_PUBLISHED)
                .withDisplayName("grebwggahttzlsw");
        model = BinaryData.fromObject(model).toObject(ProductContractProperties.class);
        Assertions.assertEquals("jqfutlxj", model.description());
        Assertions.assertEquals("zasunwqrjzfrgq", model.terms());
        Assertions.assertEquals(false, model.subscriptionRequired());
        Assertions.assertEquals(true, model.approvalRequired());
        Assertions.assertEquals(1754842932, model.subscriptionsLimit());
        Assertions.assertEquals(ProductState.NOT_PUBLISHED, model.state());
        Assertions.assertEquals("grebwggahttzlsw", model.displayName());
    }
}
