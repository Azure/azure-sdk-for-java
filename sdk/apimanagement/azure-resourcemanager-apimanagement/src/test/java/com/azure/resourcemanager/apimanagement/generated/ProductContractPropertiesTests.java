// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.ProductContractProperties;
import com.azure.resourcemanager.apimanagement.models.ProductState;
import org.junit.jupiter.api.Assertions;

public final class ProductContractPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProductContractProperties model = BinaryData.fromString(
            "{\"displayName\":\"ad\",\"description\":\"qegxyivpin\",\"terms\":\"hwbjijkgqxnhmbk\",\"subscriptionRequired\":true,\"approvalRequired\":false,\"subscriptionsLimit\":1346150225,\"state\":\"notPublished\"}")
            .toObject(ProductContractProperties.class);
        Assertions.assertEquals("qegxyivpin", model.description());
        Assertions.assertEquals("hwbjijkgqxnhmbk", model.terms());
        Assertions.assertTrue(model.subscriptionRequired());
        Assertions.assertFalse(model.approvalRequired());
        Assertions.assertEquals(1346150225, model.subscriptionsLimit());
        Assertions.assertEquals(ProductState.NOT_PUBLISHED, model.state());
        Assertions.assertEquals("ad", model.displayName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProductContractProperties model = new ProductContractProperties().withDescription("qegxyivpin")
            .withTerms("hwbjijkgqxnhmbk")
            .withSubscriptionRequired(true)
            .withApprovalRequired(false)
            .withSubscriptionsLimit(1346150225)
            .withState(ProductState.NOT_PUBLISHED)
            .withDisplayName("ad");
        model = BinaryData.fromObject(model).toObject(ProductContractProperties.class);
        Assertions.assertEquals("qegxyivpin", model.description());
        Assertions.assertEquals("hwbjijkgqxnhmbk", model.terms());
        Assertions.assertTrue(model.subscriptionRequired());
        Assertions.assertFalse(model.approvalRequired());
        Assertions.assertEquals(1346150225, model.subscriptionsLimit());
        Assertions.assertEquals(ProductState.NOT_PUBLISHED, model.state());
        Assertions.assertEquals("ad", model.displayName());
    }
}
