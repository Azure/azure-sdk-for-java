// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.fluent.models.ProductContractInner;
import com.azure.resourcemanager.apimanagement.models.ProductContract;
import com.azure.resourcemanager.apimanagement.models.ProductState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkspaceProductsCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"c\",\"description\":\"zvxjsv\",\"terms\":\"l\",\"subscriptionRequired\":false,\"approvalRequired\":true,\"subscriptionsLimit\":485672029,\"state\":\"notPublished\"},\"id\":\"xzrfloqzmvemliy\",\"name\":\"dfqfnftrrhhgwaw\",\"type\":\"zhanvcf\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ProductContract response = manager.workspaceProducts()
            .createOrUpdateWithResponse("xqrokw", "dipnd", "ql", "jrhctb",
                new ProductContractInner().withDisplayName("e")
                    .withDescription("amoyvqfjpkezq")
                    .withTerms("zbyczm")
                    .withSubscriptionRequired(false)
                    .withApprovalRequired(true)
                    .withSubscriptionsLimit(133461212)
                    .withState(ProductState.NOT_PUBLISHED),
                "hcrffjxex", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("c", response.displayName());
        Assertions.assertEquals("zvxjsv", response.description());
        Assertions.assertEquals("l", response.terms());
        Assertions.assertEquals(false, response.subscriptionRequired());
        Assertions.assertEquals(true, response.approvalRequired());
        Assertions.assertEquals(485672029, response.subscriptionsLimit());
        Assertions.assertEquals(ProductState.NOT_PUBLISHED, response.state());
    }
}
