// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.GatewayHostnameConfigurationContractInner;
import org.junit.jupiter.api.Assertions;

public final class GatewayHostnameConfigurationContractInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GatewayHostnameConfigurationContractInner model = BinaryData.fromString(
            "{\"properties\":{\"hostname\":\"wki\",\"certificateId\":\"dgfhbssdpje\",\"negotiateClientCertificate\":false,\"tls10Enabled\":true,\"tls11Enabled\":true,\"http2Enabled\":true},\"id\":\"f\",\"name\":\"wh\",\"type\":\"gxsur\"}")
            .toObject(GatewayHostnameConfigurationContractInner.class);
        Assertions.assertEquals("wki", model.hostname());
        Assertions.assertEquals("dgfhbssdpje", model.certificateId());
        Assertions.assertFalse(model.negotiateClientCertificate());
        Assertions.assertTrue(model.tls10Enabled());
        Assertions.assertTrue(model.tls11Enabled());
        Assertions.assertTrue(model.http2Enabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GatewayHostnameConfigurationContractInner model
            = new GatewayHostnameConfigurationContractInner().withHostname("wki")
                .withCertificateId("dgfhbssdpje")
                .withNegotiateClientCertificate(false)
                .withTls10Enabled(true)
                .withTls11Enabled(true)
                .withHttp2Enabled(true);
        model = BinaryData.fromObject(model).toObject(GatewayHostnameConfigurationContractInner.class);
        Assertions.assertEquals("wki", model.hostname());
        Assertions.assertEquals("dgfhbssdpje", model.certificateId());
        Assertions.assertFalse(model.negotiateClientCertificate());
        Assertions.assertTrue(model.tls10Enabled());
        Assertions.assertTrue(model.tls11Enabled());
        Assertions.assertTrue(model.http2Enabled());
    }
}
