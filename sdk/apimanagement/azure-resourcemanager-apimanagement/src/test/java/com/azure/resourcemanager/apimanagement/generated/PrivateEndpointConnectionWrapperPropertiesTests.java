// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.PrivateEndpointConnectionWrapperProperties;
import com.azure.resourcemanager.apimanagement.models.ArmIdWrapper;
import com.azure.resourcemanager.apimanagement.models.PrivateEndpointServiceConnectionStatus;
import com.azure.resourcemanager.apimanagement.models.PrivateLinkServiceConnectionState;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionWrapperPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionWrapperProperties model = BinaryData.fromString(
            "{\"privateEndpoint\":{\"id\":\"dk\"},\"privateLinkServiceConnectionState\":{\"status\":\"Rejected\",\"description\":\"asgmatrnzpd\",\"actionsRequired\":\"daaktuj\"},\"provisioningState\":\"zboimyfpqdo\",\"groupIds\":[\"pnw\",\"ytfvpctfji\",\"ffffg\",\"uhznwhvuldbk\"]}")
            .toObject(PrivateEndpointConnectionWrapperProperties.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.REJECTED,
            model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("asgmatrnzpd", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("daaktuj", model.privateLinkServiceConnectionState().actionsRequired());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionWrapperProperties model
            = new PrivateEndpointConnectionWrapperProperties().withPrivateEndpoint(new ArmIdWrapper())
                .withPrivateLinkServiceConnectionState(
                    new PrivateLinkServiceConnectionState().withStatus(PrivateEndpointServiceConnectionStatus.REJECTED)
                        .withDescription("asgmatrnzpd")
                        .withActionsRequired("daaktuj"));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionWrapperProperties.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.REJECTED,
            model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("asgmatrnzpd", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("daaktuj", model.privateLinkServiceConnectionState().actionsRequired());
    }
}
