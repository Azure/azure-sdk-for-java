// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.models.BackendBaseParametersPool;
import com.azure.resourcemanager.apimanagement.models.BackendPoolItem;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BackendBaseParametersPoolTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackendBaseParametersPool model = BinaryData.fromString(
            "{\"services\":[{\"id\":\"kpsimsfeypofqp\",\"weight\":1287259355,\"priority\":1252944000},{\"id\":\"gsdrm\",\"weight\":1091258235,\"priority\":333069354},{\"id\":\"ophgerh\",\"weight\":1577410561,\"priority\":439989356},{\"id\":\"htwzmqilr\",\"weight\":1067607887,\"priority\":771927713}]}")
            .toObject(BackendBaseParametersPool.class);
        Assertions.assertEquals("kpsimsfeypofqp", model.services().get(0).id());
        Assertions.assertEquals(1287259355, model.services().get(0).weight());
        Assertions.assertEquals(1252944000, model.services().get(0).priority());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackendBaseParametersPool model = new BackendBaseParametersPool().withServices(Arrays.asList(
            new BackendPoolItem().withId("kpsimsfeypofqp").withWeight(1287259355).withPriority(1252944000),
            new BackendPoolItem().withId("gsdrm").withWeight(1091258235).withPriority(333069354),
            new BackendPoolItem().withId("ophgerh").withWeight(1577410561).withPriority(439989356),
            new BackendPoolItem().withId("htwzmqilr").withWeight(1067607887).withPriority(771927713)));
        model = BinaryData.fromObject(model).toObject(BackendBaseParametersPool.class);
        Assertions.assertEquals("kpsimsfeypofqp", model.services().get(0).id());
        Assertions.assertEquals(1287259355, model.services().get(0).weight());
        Assertions.assertEquals(1252944000, model.services().get(0).priority());
    }
}
