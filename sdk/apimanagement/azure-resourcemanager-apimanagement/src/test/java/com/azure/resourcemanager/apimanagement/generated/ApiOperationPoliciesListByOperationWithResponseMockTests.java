// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.models.PolicyCollection;
import com.azure.resourcemanager.apimanagement.models.PolicyContentFormat;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ApiOperationPoliciesListByOperationWithResponseMockTests {
    @Test
    public void testListByOperationWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"value\":\"vjelei\",\"format\":\"xml\"},\"id\":\"d\",\"name\":\"twwulkrybpaev\",\"type\":\"kbyje\"},{\"properties\":{\"value\":\"qkwakkchsfoulb\",\"format\":\"xml\"},\"id\":\"xuibsdq\",\"name\":\"dyblpe\",\"type\":\"t\"}],\"count\":1743405341403451489,\"nextLink\":\"weoqhb\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PolicyCollection response = manager.apiOperationPolicies()
            .listByOperationWithResponse("uoi", "dlpsx", "tug", "wimqnryclocfm", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("vjelei", response.value().get(0).value());
        Assertions.assertEquals(PolicyContentFormat.XML, response.value().get(0).format());
        Assertions.assertEquals(1743405341403451489L, response.count());
        Assertions.assertEquals("weoqhb", response.nextLink());
    }
}
