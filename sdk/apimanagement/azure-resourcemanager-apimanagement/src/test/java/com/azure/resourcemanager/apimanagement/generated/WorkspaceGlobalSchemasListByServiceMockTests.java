// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract;
import com.azure.resourcemanager.apimanagement.models.SchemaType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkspaceGlobalSchemasListByServiceMockTests {
    @Test
    public void testListByService() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"schemaType\":\"xml\",\"description\":\"zbp\",\"value\":\"dataxvftjdrqgionmoky\",\"document\":\"datatdnym\",\"provisioningState\":\"eyskbqlca\"},\"id\":\"lesjgxdhgez\",\"name\":\"hphaokhb\",\"type\":\"mxgglkqitpbyne\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<GlobalSchemaContract> response = manager.workspaceGlobalSchemas()
            .listByService("cjztziuuuyvpcfvi", "jxciu", "etcxgd", "qkle", 1088944806, 293868559,
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals(SchemaType.XML, response.iterator().next().schemaType());
        Assertions.assertEquals("zbp", response.iterator().next().description());
    }
}
