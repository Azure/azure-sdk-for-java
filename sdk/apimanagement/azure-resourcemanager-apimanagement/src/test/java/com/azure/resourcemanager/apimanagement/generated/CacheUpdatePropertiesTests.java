// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.CacheUpdateProperties;
import org.junit.jupiter.api.Assertions;

public final class CacheUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CacheUpdateProperties model = BinaryData.fromString(
            "{\"description\":\"ejrthcfjzhxlyub\",\"connectionString\":\"rostvrjeqmtzz\",\"useFromLocation\":\"qrztrxal\",\"resourceId\":\"d\"}")
            .toObject(CacheUpdateProperties.class);
        Assertions.assertEquals("ejrthcfjzhxlyub", model.description());
        Assertions.assertEquals("rostvrjeqmtzz", model.connectionString());
        Assertions.assertEquals("qrztrxal", model.useFromLocation());
        Assertions.assertEquals("d", model.resourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CacheUpdateProperties model = new CacheUpdateProperties().withDescription("ejrthcfjzhxlyub")
            .withConnectionString("rostvrjeqmtzz")
            .withUseFromLocation("qrztrxal")
            .withResourceId("d");
        model = BinaryData.fromObject(model).toObject(CacheUpdateProperties.class);
        Assertions.assertEquals("ejrthcfjzhxlyub", model.description());
        Assertions.assertEquals("rostvrjeqmtzz", model.connectionString());
        Assertions.assertEquals("qrztrxal", model.useFromLocation());
        Assertions.assertEquals("d", model.resourceId());
    }
}
