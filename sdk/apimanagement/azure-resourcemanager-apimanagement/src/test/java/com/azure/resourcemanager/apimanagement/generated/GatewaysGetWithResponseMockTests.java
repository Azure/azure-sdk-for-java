// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.models.GatewayContract;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class GatewaysGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"locationData\":{\"name\":\"u\",\"city\":\"jvvcrsmwojm\",\"district\":\"c\",\"countryOrRegion\":\"mnrut\"},\"description\":\"keqjftvltjop\"},\"id\":\"cvpkb\",\"name\":\"ltnowpajfhxsmub\",\"type\":\"zadzglmuu\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        GatewayContract response
            = manager.gateways().getWithResponse("u", "c", "yg", com.azure.core.util.Context.NONE).getValue();

        Assertions.assertEquals("u", response.locationData().name());
        Assertions.assertEquals("jvvcrsmwojm", response.locationData().city());
        Assertions.assertEquals("c", response.locationData().district());
        Assertions.assertEquals("mnrut", response.locationData().countryOrRegion());
        Assertions.assertEquals("keqjftvltjop", response.description());
    }
}
