// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.IssueContractProperties;
import com.azure.resourcemanager.apimanagement.models.State;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class IssueContractPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IssueContractProperties model = BinaryData.fromString(
            "{\"title\":\"aadl\",\"description\":\"nwf\",\"userId\":\"anniyopetxivcnr\",\"createdDate\":\"2021-06-10T00:54:20Z\",\"state\":\"proposed\",\"apiId\":\"aephblkw\"}")
            .toObject(IssueContractProperties.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-10T00:54:20Z"), model.createdDate());
        Assertions.assertEquals(State.PROPOSED, model.state());
        Assertions.assertEquals("aephblkw", model.apiId());
        Assertions.assertEquals("aadl", model.title());
        Assertions.assertEquals("nwf", model.description());
        Assertions.assertEquals("anniyopetxivcnr", model.userId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IssueContractProperties model
            = new IssueContractProperties().withCreatedDate(OffsetDateTime.parse("2021-06-10T00:54:20Z"))
                .withState(State.PROPOSED)
                .withApiId("aephblkw")
                .withTitle("aadl")
                .withDescription("nwf")
                .withUserId("anniyopetxivcnr");
        model = BinaryData.fromObject(model).toObject(IssueContractProperties.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-10T00:54:20Z"), model.createdDate());
        Assertions.assertEquals(State.PROPOSED, model.state());
        Assertions.assertEquals("aephblkw", model.apiId());
        Assertions.assertEquals("aadl", model.title());
        Assertions.assertEquals("nwf", model.description());
        Assertions.assertEquals("anniyopetxivcnr", model.userId());
    }
}
