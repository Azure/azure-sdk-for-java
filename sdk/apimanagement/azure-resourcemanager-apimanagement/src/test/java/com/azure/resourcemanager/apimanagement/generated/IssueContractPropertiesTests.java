// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.IssueContractProperties;
import com.azure.resourcemanager.apimanagement.models.State;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class IssueContractPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IssueContractProperties model =
            BinaryData
                .fromString(
                    "{\"title\":\"hzr\",\"description\":\"qalsxkd\",\"userId\":\"wqapfgsdp\",\"createdDate\":\"2021-04-22T07:14:35Z\",\"state\":\"open\",\"apiId\":\"zhhkuuipldqqc\"}")
                .toObject(IssueContractProperties.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-22T07:14:35Z"), model.createdDate());
        Assertions.assertEquals(State.OPEN, model.state());
        Assertions.assertEquals("zhhkuuipldqqc", model.apiId());
        Assertions.assertEquals("hzr", model.title());
        Assertions.assertEquals("qalsxkd", model.description());
        Assertions.assertEquals("wqapfgsdp", model.userId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IssueContractProperties model =
            new IssueContractProperties()
                .withCreatedDate(OffsetDateTime.parse("2021-04-22T07:14:35Z"))
                .withState(State.OPEN)
                .withApiId("zhhkuuipldqqc")
                .withTitle("hzr")
                .withDescription("qalsxkd")
                .withUserId("wqapfgsdp");
        model = BinaryData.fromObject(model).toObject(IssueContractProperties.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-22T07:14:35Z"), model.createdDate());
        Assertions.assertEquals(State.OPEN, model.state());
        Assertions.assertEquals("zhhkuuipldqqc", model.apiId());
        Assertions.assertEquals("hzr", model.title());
        Assertions.assertEquals("qalsxkd", model.description());
        Assertions.assertEquals("wqapfgsdp", model.userId());
    }
}
