// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.models.GroupContract;
import com.azure.resourcemanager.apimanagement.models.GroupType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class UserGroupsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"displayName\":\"exgien\",\"description\":\"sijqygofshdaehxv\",\"builtIn\":true,\"type\":\"system\",\"externalId\":\"fgkysymhuxslm\"},\"id\":\"lbpegcetezaa\",\"name\":\"wszrbttzsqeyr\",\"type\":\"fhfgoyxxszpai\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<GroupContract> response = manager.userGroups()
            .list("uveljfa", "in", "fziztgddahymvk", "jtdhmig", 1266685077, 2018246432,
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("exgien", response.iterator().next().displayName());
        Assertions.assertEquals("sijqygofshdaehxv", response.iterator().next().description());
        Assertions.assertEquals(GroupType.SYSTEM, response.iterator().next().typePropertiesType());
        Assertions.assertEquals("fgkysymhuxslm", response.iterator().next().externalId());
    }
}
