// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.OperationInner;
import com.azure.resourcemanager.apimanagement.models.OperationDisplay;
import org.junit.jupiter.api.Assertions;

public final class OperationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationInner model = BinaryData.fromString(
            "{\"name\":\"mlccmetjscz\",\"display\":{\"provider\":\"q\",\"operation\":\"nasd\",\"resource\":\"enz\",\"description\":\"euscplhyv\"},\"origin\":\"xlyzkxit\",\"properties\":\"datahezsvkolrupjovm\"}")
            .toObject(OperationInner.class);
        Assertions.assertEquals("mlccmetjscz", model.name());
        Assertions.assertEquals("q", model.display().provider());
        Assertions.assertEquals("nasd", model.display().operation());
        Assertions.assertEquals("enz", model.display().resource());
        Assertions.assertEquals("euscplhyv", model.display().description());
        Assertions.assertEquals("xlyzkxit", model.origin());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationInner model = new OperationInner().withName("mlccmetjscz")
            .withDisplay(new OperationDisplay().withProvider("q")
                .withOperation("nasd")
                .withResource("enz")
                .withDescription("euscplhyv"))
            .withOrigin("xlyzkxit")
            .withProperties("datahezsvkolrupjovm");
        model = BinaryData.fromObject(model).toObject(OperationInner.class);
        Assertions.assertEquals("mlccmetjscz", model.name());
        Assertions.assertEquals("q", model.display().provider());
        Assertions.assertEquals("nasd", model.display().operation());
        Assertions.assertEquals("enz", model.display().resource());
        Assertions.assertEquals("euscplhyv", model.display().description());
        Assertions.assertEquals("xlyzkxit", model.origin());
    }
}
