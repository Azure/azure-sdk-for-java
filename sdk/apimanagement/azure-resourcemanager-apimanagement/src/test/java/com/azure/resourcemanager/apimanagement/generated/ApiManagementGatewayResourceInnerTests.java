// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.fluent.models.ApiManagementGatewayResourceInner;
import com.azure.resourcemanager.apimanagement.models.ApiGatewaySkuType;
import com.azure.resourcemanager.apimanagement.models.ApiManagementGatewaySkuProperties;
import com.azure.resourcemanager.apimanagement.models.BackendConfiguration;
import com.azure.resourcemanager.apimanagement.models.BackendSubnetConfiguration;
import com.azure.resourcemanager.apimanagement.models.FrontendConfiguration;
import com.azure.resourcemanager.apimanagement.models.GatewayConfigurationApi;
import com.azure.resourcemanager.apimanagement.models.VirtualNetworkType;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ApiManagementGatewayResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ApiManagementGatewayResourceInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"mhquvgjxp\",\"targetProvisioningState\":\"czmehmtzopbsp\",\"createdAtUtc\":\"2021-08-10T17:20:59Z\",\"frontend\":{\"defaultHostname\":\"dgs\"},\"backend\":{\"subnet\":{\"id\":\"jhphoyc\"}},\"configurationApi\":{\"hostname\":\"ao\"},\"virtualNetworkType\":\"None\"},\"sku\":{\"name\":\"Standard\",\"capacity\":1091416458},\"location\":\"qioqjzehtbmu\",\"etag\":\"ownoizhw\",\"tags\":{\"dmbpazlobcufpdz\":\"ybqsoqijg\",\"qqjnqgl\":\"rbt\",\"foooj\":\"qgn\"},\"id\":\"wifsq\",\"name\":\"saagdf\",\"type\":\"glzlhjxrifkwmrv\"}")
            .toObject(ApiManagementGatewayResourceInner.class);
        Assertions.assertEquals("ybqsoqijg", model.tags().get("dmbpazlobcufpdz"));
        Assertions.assertEquals(ApiGatewaySkuType.STANDARD, model.sku().name());
        Assertions.assertEquals(1091416458, model.sku().capacity());
        Assertions.assertEquals("qioqjzehtbmu", model.location());
        Assertions.assertEquals("jhphoyc", model.backend().subnet().id());
        Assertions.assertEquals(VirtualNetworkType.NONE, model.virtualNetworkType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ApiManagementGatewayResourceInner model = new ApiManagementGatewayResourceInner()
            .withTags(mapOf("dmbpazlobcufpdz", "ybqsoqijg", "qqjnqgl", "rbt", "foooj", "qgn"))
            .withSku(
                new ApiManagementGatewaySkuProperties().withName(ApiGatewaySkuType.STANDARD).withCapacity(1091416458))
            .withLocation("qioqjzehtbmu")
            .withFrontend(new FrontendConfiguration())
            .withBackend(new BackendConfiguration().withSubnet(new BackendSubnetConfiguration().withId("jhphoyc")))
            .withConfigurationApi(new GatewayConfigurationApi())
            .withVirtualNetworkType(VirtualNetworkType.NONE);
        model = BinaryData.fromObject(model).toObject(ApiManagementGatewayResourceInner.class);
        Assertions.assertEquals("ybqsoqijg", model.tags().get("dmbpazlobcufpdz"));
        Assertions.assertEquals(ApiGatewaySkuType.STANDARD, model.sku().name());
        Assertions.assertEquals(1091416458, model.sku().capacity());
        Assertions.assertEquals("qioqjzehtbmu", model.location());
        Assertions.assertEquals("jhphoyc", model.backend().subnet().id());
        Assertions.assertEquals(VirtualNetworkType.NONE, model.virtualNetworkType());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
