// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.apimanagement.ApiManagementManager;
import com.azure.resourcemanager.apimanagement.fluent.models.PolicyContractInner;
import com.azure.resourcemanager.apimanagement.models.PolicyContentFormat;
import com.azure.resourcemanager.apimanagement.models.PolicyContract;
import com.azure.resourcemanager.apimanagement.models.PolicyIdName;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkspaceApiOperationPoliciesCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"value\":\"opfrdfjjrhxornuo\",\"format\":\"xml-link\"},\"id\":\"bwarsd\",\"name\":\"kwmqevx\",\"type\":\"qyavcx\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApiManagementManager manager = ApiManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PolicyContract response = manager.workspaceApiOperationPolicies()
            .createOrUpdateWithResponse("pgvjmllzyk", "l", "aummddwqiucpjp", "tbss", "tjwze", PolicyIdName.POLICY,
                new PolicyContractInner().withValue("ftt").withFormat(PolicyContentFormat.RAWXML_LINK),
                "uahllmbllshkfdri", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("opfrdfjjrhxornuo", response.value());
        Assertions.assertEquals(PolicyContentFormat.XML_LINK, response.format());
    }
}
