// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.models.ArmIdWrapper;
import com.azure.resourcemanager.apimanagement.models.PrivateEndpointServiceConnectionStatus;
import com.azure.resourcemanager.apimanagement.models.PrivateLinkServiceConnectionState;
import com.azure.resourcemanager.apimanagement.models.RemotePrivateEndpointConnectionWrapper;
import org.junit.jupiter.api.Assertions;

public final class RemotePrivateEndpointConnectionWrapperTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RemotePrivateEndpointConnectionWrapper model = BinaryData.fromString(
            "{\"id\":\"aj\",\"name\":\"yizyddcvxodk\",\"type\":\"fsxxby\",\"properties\":{\"privateEndpoint\":{\"id\":\"lvgecpwgoljtz\"},\"privateLinkServiceConnectionState\":{\"status\":\"Pending\",\"description\":\"sdobygoogxq\",\"actionsRequired\":\"j\"},\"provisioningState\":\"azyj\",\"groupIds\":[\"saodj\"]}}")
            .toObject(RemotePrivateEndpointConnectionWrapper.class);
        Assertions.assertEquals("aj", model.id());
        Assertions.assertEquals("yizyddcvxodk", model.name());
        Assertions.assertEquals("fsxxby", model.type());
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.PENDING,
            model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("sdobygoogxq", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("j", model.privateLinkServiceConnectionState().actionsRequired());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RemotePrivateEndpointConnectionWrapper model = new RemotePrivateEndpointConnectionWrapper().withId("aj")
            .withName("yizyddcvxodk")
            .withType("fsxxby")
            .withPrivateEndpoint(new ArmIdWrapper())
            .withPrivateLinkServiceConnectionState(
                new PrivateLinkServiceConnectionState().withStatus(PrivateEndpointServiceConnectionStatus.PENDING)
                    .withDescription("sdobygoogxq")
                    .withActionsRequired("j"));
        model = BinaryData.fromObject(model).toObject(RemotePrivateEndpointConnectionWrapper.class);
        Assertions.assertEquals("aj", model.id());
        Assertions.assertEquals("yizyddcvxodk", model.name());
        Assertions.assertEquals("fsxxby", model.type());
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.PENDING,
            model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("sdobygoogxq", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("j", model.privateLinkServiceConnectionState().actionsRequired());
    }
}
