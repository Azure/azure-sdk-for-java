// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apimanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.apimanagement.models.CacheUpdateParameters;
import org.junit.jupiter.api.Assertions;

public final class CacheUpdateParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CacheUpdateParameters model = BinaryData.fromString(
            "{\"properties\":{\"description\":\"qqrsil\",\"connectionString\":\"hskxx\",\"useFromLocation\":\"nsbvr\",\"resourceId\":\"qgvtojrulfu\"}}")
            .toObject(CacheUpdateParameters.class);
        Assertions.assertEquals("qqrsil", model.description());
        Assertions.assertEquals("hskxx", model.connectionString());
        Assertions.assertEquals("nsbvr", model.useFromLocation());
        Assertions.assertEquals("qgvtojrulfu", model.resourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CacheUpdateParameters model = new CacheUpdateParameters().withDescription("qqrsil")
            .withConnectionString("hskxx")
            .withUseFromLocation("nsbvr")
            .withResourceId("qgvtojrulfu");
        model = BinaryData.fromObject(model).toObject(CacheUpdateParameters.class);
        Assertions.assertEquals("qqrsil", model.description());
        Assertions.assertEquals("hskxx", model.connectionString());
        Assertions.assertEquals("nsbvr", model.useFromLocation());
        Assertions.assertEquals("qgvtojrulfu", model.resourceId());
    }
}
