/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * jkl
 */

package com.microsoft.azure.management.apimanagement.v2019_12_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.apimanagement.v2019_12_01.OpenIdConnectProviders;
import rx.Completable;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.Page;
import com.microsoft.azure.management.apimanagement.v2019_12_01.OpenidConnectProviderContract;
import com.microsoft.azure.management.apimanagement.v2019_12_01.ClientSecretContract;

class OpenIdConnectProvidersImpl extends WrapperImpl<OpenIdConnectProvidersInner> implements OpenIdConnectProviders {
    private final ApiManagementManager manager;

    OpenIdConnectProvidersImpl(ApiManagementManager manager) {
        super(manager.inner().openIdConnectProviders());
        this.manager = manager;
    }

    public ApiManagementManager manager() {
        return this.manager;
    }

    @Override
    public OpenidConnectProviderContractImpl define(String name) {
        return wrapModel(name);
    }

    private OpenidConnectProviderContractImpl wrapModel(OpenidConnectProviderContractInner inner) {
        return  new OpenidConnectProviderContractImpl(inner, manager());
    }

    private OpenidConnectProviderContractImpl wrapModel(String name) {
        return new OpenidConnectProviderContractImpl(name, this.manager());
    }

    @Override
    public Observable<OpenidConnectProviderContract> listByServiceAsync(final String resourceGroupName, final String serviceName) {
        OpenIdConnectProvidersInner client = this.inner();
        return client.listByServiceAsync(resourceGroupName, serviceName)
        .flatMapIterable(new Func1<Page<OpenidConnectProviderContractInner>, Iterable<OpenidConnectProviderContractInner>>() {
            @Override
            public Iterable<OpenidConnectProviderContractInner> call(Page<OpenidConnectProviderContractInner> page) {
                return page.items();
            }
        })
        .map(new Func1<OpenidConnectProviderContractInner, OpenidConnectProviderContract>() {
            @Override
            public OpenidConnectProviderContract call(OpenidConnectProviderContractInner inner) {
                return new OpenidConnectProviderContractImpl(inner, manager());
            }
        });
    }

    @Override
    public Completable getEntityTagAsync(String resourceGroupName, String serviceName, String opid) {
        OpenIdConnectProvidersInner client = this.inner();
        return client.getEntityTagAsync(resourceGroupName, serviceName, opid).toCompletable();
    }

    @Override
    public Observable<OpenidConnectProviderContract> getAsync(String resourceGroupName, String serviceName, String opid) {
        OpenIdConnectProvidersInner client = this.inner();
        return client.getAsync(resourceGroupName, serviceName, opid)
        .map(new Func1<OpenidConnectProviderContractInner, OpenidConnectProviderContract>() {
            @Override
            public OpenidConnectProviderContract call(OpenidConnectProviderContractInner inner) {
                return new OpenidConnectProviderContractImpl(inner, manager());
            }
        });
    }

    @Override
    public Completable deleteAsync(String resourceGroupName, String serviceName, String opid, String ifMatch) {
        OpenIdConnectProvidersInner client = this.inner();
        return client.deleteAsync(resourceGroupName, serviceName, opid, ifMatch).toCompletable();
    }

    @Override
    public Observable<ClientSecretContract> listSecretsAsync(String resourceGroupName, String serviceName, String opid) {
        OpenIdConnectProvidersInner client = this.inner();
        return client.listSecretsAsync(resourceGroupName, serviceName, opid)
        .map(new Func1<ClientSecretContractInner, ClientSecretContract>() {
            @Override
            public ClientSecretContract call(ClientSecretContractInner inner) {
                return new ClientSecretContractImpl(inner, manager());
            }
        });
    }

}
