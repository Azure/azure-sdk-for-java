/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.apimanagement.v2019_12_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.apimanagement.v2019_12_01.implementation.ApiContractInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.apimanagement.v2019_12_01.implementation.ApiManagementManager;
import java.util.List;

/**
 * Type representing GatewayApiContract.
 */
public interface GatewayApiContract extends HasInner<ApiContractInner>, Indexable, Updatable<GatewayApiContract.Update>, HasManager<ApiManagementManager> {
    /**
     * @return the apiRevision value.
     */
    String apiRevision();

    /**
     * @return the apiRevisionDescription value.
     */
    String apiRevisionDescription();

    /**
     * @return the apiType value.
     */
    ApiType apiType();

    /**
     * @return the apiVersion value.
     */
    String apiVersion();

    /**
     * @return the apiVersionDescription value.
     */
    String apiVersionDescription();

    /**
     * @return the apiVersionSet value.
     */
    ApiVersionSetContractDetails apiVersionSet();

    /**
     * @return the apiVersionSetId value.
     */
    String apiVersionSetId();

    /**
     * @return the authenticationSettings value.
     */
    AuthenticationSettingsContract authenticationSettings();

    /**
     * @return the description value.
     */
    String description();

    /**
     * @return the displayName value.
     */
    String displayName();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the isCurrent value.
     */
    Boolean isCurrent();

    /**
     * @return the isOnline value.
     */
    Boolean isOnline();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the path value.
     */
    String path();

    /**
     * @return the protocols value.
     */
    List<Protocol> protocols();

    /**
     * @return the serviceUrl value.
     */
    String serviceUrl();

    /**
     * @return the sourceApiId value.
     */
    String sourceApiId();

    /**
     * @return the subscriptionKeyParameterNames value.
     */
    SubscriptionKeyParameterNamesContract subscriptionKeyParameterNames();

    /**
     * @return the subscriptionRequired value.
     */
    Boolean subscriptionRequired();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the GatewayApiContract definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGateway, DefinitionStages.WithProvisioningState, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of GatewayApiContract definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a GatewayApiContract definition.
         */
        interface Blank extends WithGateway {
        }

        /**
         * The stage of the gatewayapicontract definition allowing to specify Gateway.
         */
        interface WithGateway {
           /**
            * Specifies resourceGroupName, serviceName, gatewayId.
            * @param resourceGroupName The name of the resource group
            * @param serviceName The name of the API Management service
            * @param gatewayId Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'
            * @return the next definition stage
            */
            WithProvisioningState withExistingGateway(String resourceGroupName, String serviceName, String gatewayId);
        }

        /**
         * The stage of the gatewayapicontract definition allowing to specify ProvisioningState.
         */
        interface WithProvisioningState {
           /**
            * Specifies provisioningState.
            * @param provisioningState Provisioning state. Possible values include: 'created'
            * @return the next definition stage
            */
            WithCreate withProvisioningState(ProvisioningState provisioningState);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<GatewayApiContract> {
        }
    }
    /**
     * The template for a GatewayApiContract update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<GatewayApiContract>, UpdateStages.WithProvisioningState {
    }

    /**
     * Grouping of GatewayApiContract update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the gatewayapicontract update allowing to specify ProvisioningState.
         */
        interface WithProvisioningState {
            /**
             * Specifies provisioningState.
             * @param provisioningState Provisioning state. Possible values include: 'created'
             * @return the next update stage
             */
            Update withProvisioningState(ProvisioningState provisioningState);
        }

    }
}
