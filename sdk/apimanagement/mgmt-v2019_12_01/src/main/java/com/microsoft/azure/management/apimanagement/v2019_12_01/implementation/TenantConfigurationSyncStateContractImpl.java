/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.apimanagement.v2019_12_01.implementation;

import com.microsoft.azure.management.apimanagement.v2019_12_01.TenantConfigurationSyncStateContract;
import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import org.joda.time.DateTime;

class TenantConfigurationSyncStateContractImpl extends WrapperImpl<TenantConfigurationSyncStateContractInner> implements TenantConfigurationSyncStateContract {
    private final ApiManagementManager manager;
    TenantConfigurationSyncStateContractImpl(TenantConfigurationSyncStateContractInner inner, ApiManagementManager manager) {
        super(inner);
        this.manager = manager;
    }

    @Override
    public ApiManagementManager manager() {
        return this.manager;
    }

    @Override
    public String branch() {
        return this.inner().branch();
    }

    @Override
    public String commitId() {
        return this.inner().commitId();
    }

    @Override
    public DateTime configurationChangeDate() {
        return this.inner().configurationChangeDate();
    }

    @Override
    public Boolean isExport() {
        return this.inner().isExport();
    }

    @Override
    public Boolean isGitEnabled() {
        return this.inner().isGitEnabled();
    }

    @Override
    public Boolean isSynced() {
        return this.inner().isSynced();
    }

    @Override
    public DateTime syncDate() {
        return this.inner().syncDate();
    }

}
