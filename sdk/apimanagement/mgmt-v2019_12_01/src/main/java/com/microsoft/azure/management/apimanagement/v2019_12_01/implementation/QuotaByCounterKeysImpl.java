/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.apimanagement.v2019_12_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.apimanagement.v2019_12_01.QuotaByCounterKeys;
import rx.Completable;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.management.apimanagement.v2019_12_01.QuotaCounterCollection;
import com.microsoft.azure.management.apimanagement.v2019_12_01.QuotaCounterValueContractProperties;

class QuotaByCounterKeysImpl extends WrapperImpl<QuotaByCounterKeysInner> implements QuotaByCounterKeys {
    private final ApiManagementManager manager;

    QuotaByCounterKeysImpl(ApiManagementManager manager) {
        super(manager.inner().quotaByCounterKeys());
        this.manager = manager;
    }

    public ApiManagementManager manager() {
        return this.manager;
    }

    @Override
    public Observable<QuotaCounterCollection> listByServiceAsync(String resourceGroupName, String serviceName, String quotaCounterKey) {
        QuotaByCounterKeysInner client = this.inner();
        return client.listByServiceAsync(resourceGroupName, serviceName, quotaCounterKey)
        .map(new Func1<QuotaCounterCollectionInner, QuotaCounterCollection>() {
            @Override
            public QuotaCounterCollection call(QuotaCounterCollectionInner inner) {
                return new QuotaCounterCollectionImpl(inner, manager());
            }
        });
    }

    @Override
    public Completable updateAsync(String resourceGroupName, String serviceName, String quotaCounterKey, QuotaCounterValueContractProperties parameters) {
        QuotaByCounterKeysInner client = this.inner();
        return client.updateAsync(resourceGroupName, serviceName, quotaCounterKey, parameters).toCompletable();
    }

}
