/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.apimanagement.v2019_12_01.implementation;

import com.microsoft.azure.management.apimanagement.v2019_12_01.UserState;
import java.util.List;
import org.joda.time.DateTime;
import com.microsoft.azure.management.apimanagement.v2019_12_01.GroupContractProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.ProxyResource;

/**
 * User details.
 */
@JsonFlatten
public class UserContractInner extends ProxyResource {
    /**
     * Account state. Specifies whether the user is active or not. Blocked
     * users are unable to sign into the developer portal or call any APIs of
     * subscribed products. Default state is Active. Possible values include:
     * 'active', 'blocked', 'pending', 'deleted'.
     */
    @JsonProperty(value = "properties.state")
    private UserState state;

    /**
     * Optional note about a user set by the administrator.
     */
    @JsonProperty(value = "properties.note")
    private String note;

    /**
     * Collection of user identities.
     */
    @JsonProperty(value = "properties.identities")
    private List<UserIdentityContractInner> identities;

    /**
     * First name.
     */
    @JsonProperty(value = "properties.firstName")
    private String firstName;

    /**
     * Last name.
     */
    @JsonProperty(value = "properties.lastName")
    private String lastName;

    /**
     * Email address.
     */
    @JsonProperty(value = "properties.email")
    private String email;

    /**
     * Date of user registration. The date conforms to the following format:
     * `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
     */
    @JsonProperty(value = "properties.registrationDate")
    private DateTime registrationDate;

    /**
     * Collection of groups user is part of.
     */
    @JsonProperty(value = "properties.groups", access = JsonProperty.Access.WRITE_ONLY)
    private List<GroupContractProperties> groups;

    /**
     * Get account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active. Possible values include: 'active', 'blocked', 'pending', 'deleted'.
     *
     * @return the state value
     */
    public UserState state() {
        return this.state;
    }

    /**
     * Set account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active. Possible values include: 'active', 'blocked', 'pending', 'deleted'.
     *
     * @param state the state value to set
     * @return the UserContractInner object itself.
     */
    public UserContractInner withState(UserState state) {
        this.state = state;
        return this;
    }

    /**
     * Get optional note about a user set by the administrator.
     *
     * @return the note value
     */
    public String note() {
        return this.note;
    }

    /**
     * Set optional note about a user set by the administrator.
     *
     * @param note the note value to set
     * @return the UserContractInner object itself.
     */
    public UserContractInner withNote(String note) {
        this.note = note;
        return this;
    }

    /**
     * Get collection of user identities.
     *
     * @return the identities value
     */
    public List<UserIdentityContractInner> identities() {
        return this.identities;
    }

    /**
     * Set collection of user identities.
     *
     * @param identities the identities value to set
     * @return the UserContractInner object itself.
     */
    public UserContractInner withIdentities(List<UserIdentityContractInner> identities) {
        this.identities = identities;
        return this;
    }

    /**
     * Get first name.
     *
     * @return the firstName value
     */
    public String firstName() {
        return this.firstName;
    }

    /**
     * Set first name.
     *
     * @param firstName the firstName value to set
     * @return the UserContractInner object itself.
     */
    public UserContractInner withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }

    /**
     * Get last name.
     *
     * @return the lastName value
     */
    public String lastName() {
        return this.lastName;
    }

    /**
     * Set last name.
     *
     * @param lastName the lastName value to set
     * @return the UserContractInner object itself.
     */
    public UserContractInner withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }

    /**
     * Get email address.
     *
     * @return the email value
     */
    public String email() {
        return this.email;
    }

    /**
     * Set email address.
     *
     * @param email the email value to set
     * @return the UserContractInner object itself.
     */
    public UserContractInner withEmail(String email) {
        this.email = email;
        return this;
    }

    /**
     * Get date of user registration. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
     *
     * @return the registrationDate value
     */
    public DateTime registrationDate() {
        return this.registrationDate;
    }

    /**
     * Set date of user registration. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
     *
     * @param registrationDate the registrationDate value to set
     * @return the UserContractInner object itself.
     */
    public UserContractInner withRegistrationDate(DateTime registrationDate) {
        this.registrationDate = registrationDate;
        return this;
    }

    /**
     * Get collection of groups user is part of.
     *
     * @return the groups value
     */
    public List<GroupContractProperties> groups() {
        return this.groups;
    }

}
