/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.apimanagement.v2019_12_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.apimanagement.v2019_12_01.GatewayApis;
import rx.Completable;
import rx.Observable;
import rx.functions.Func1;
import com.microsoft.azure.Page;
import com.microsoft.azure.management.apimanagement.v2019_12_01.GatewayApiContract;

class GatewayApisImpl extends WrapperImpl<GatewayApisInner> implements GatewayApis {
    private final ApiManagementManager manager;

    GatewayApisImpl(ApiManagementManager manager) {
        super(manager.inner().gatewayApis());
        this.manager = manager;
    }

    public ApiManagementManager manager() {
        return this.manager;
    }

    @Override
    public GatewayApiContractImpl define(String name) {
        return wrapModel(name);
    }

    private GatewayApiContractImpl wrapModel(ApiContractInner inner) {
        return  new GatewayApiContractImpl(inner, manager());
    }

    private GatewayApiContractImpl wrapModel(String name) {
        return new GatewayApiContractImpl(name, this.manager());
    }

    @Override
    public Completable getEntityTagAsync(String resourceGroupName, String serviceName, String gatewayId, String apiId) {
        GatewayApisInner client = this.inner();
        return client.getEntityTagAsync(resourceGroupName, serviceName, gatewayId, apiId).toCompletable();
    }

    @Override
    public Observable<GatewayApiContract> listByServiceAsync(final String resourceGroupName, final String serviceName, final String gatewayId) {
        GatewayApisInner client = this.inner();
        return client.listByServiceAsync(resourceGroupName, serviceName, gatewayId)
        .flatMapIterable(new Func1<Page<ApiContractInner>, Iterable<ApiContractInner>>() {
            @Override
            public Iterable<ApiContractInner> call(Page<ApiContractInner> page) {
                return page.items();
            }
        })
        .map(new Func1<ApiContractInner, GatewayApiContract>() {
            @Override
            public GatewayApiContract call(ApiContractInner inner) {
                return wrapModel(inner);
            }
        });
    }

    @Override
    public Completable deleteAsync(String resourceGroupName, String serviceName, String gatewayId, String apiId) {
        GatewayApisInner client = this.inner();
        return client.deleteAsync(resourceGroupName, serviceName, gatewayId, apiId).toCompletable();
    }

}
