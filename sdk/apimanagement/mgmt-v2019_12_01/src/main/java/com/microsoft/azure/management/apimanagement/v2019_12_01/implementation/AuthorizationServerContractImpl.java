/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.apimanagement.v2019_12_01.implementation;

import com.microsoft.azure.management.apimanagement.v2019_12_01.AuthorizationServerContract;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;
import java.util.List;
import com.microsoft.azure.management.apimanagement.v2019_12_01.AuthorizationMethod;
import com.microsoft.azure.management.apimanagement.v2019_12_01.ClientAuthenticationMethod;
import com.microsoft.azure.management.apimanagement.v2019_12_01.TokenBodyParameterContract;
import com.microsoft.azure.management.apimanagement.v2019_12_01.BearerTokenSendingMethod;
import com.microsoft.azure.management.apimanagement.v2019_12_01.GrantType;

class AuthorizationServerContractImpl extends CreatableUpdatableImpl<AuthorizationServerContract, AuthorizationServerContractInner, AuthorizationServerContractImpl> implements AuthorizationServerContract, AuthorizationServerContract.Definition, AuthorizationServerContract.Update {
    private String resourceGroupName;
    private String serviceName;
    private String authsid;
    private String cifMatch;
    private String uifMatch;
    private final ApiManagementManager manager;

    AuthorizationServerContractImpl(String name, ApiManagementManager manager) {
        super(name, new AuthorizationServerContractInner());
        this.manager = manager;
        // Set resource name
        this.authsid = name;
        //
    }

    AuthorizationServerContractImpl(AuthorizationServerContractInner inner, ApiManagementManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.authsid = inner.name();
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.serviceName = IdParsingUtils.getValueFromIdByName(inner.id(), "service");
        this.authsid = IdParsingUtils.getValueFromIdByName(inner.id(), "authorizationServers");
        // set other parameters for create and update
    }

    @Override
    public ApiManagementManager manager() {
        return this.manager;
    }

    @Override
    public Observable<AuthorizationServerContract> createResourceAsync() {
        AuthorizationServersInner client = this.manager().inner().authorizationServers();
        return client.createOrUpdateAsync(this.resourceGroupName, this.serviceName, this.authsid, this.inner(), this.cifMatch)
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<AuthorizationServerContract> updateResourceAsync() {
        AuthorizationServersInner client = this.manager().inner().authorizationServers();
        return client.createOrUpdateAsync(this.resourceGroupName, this.serviceName, this.authsid, this.inner(), this.uifMatch)
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<AuthorizationServerContractInner> getInnerAsync() {
        AuthorizationServersInner client = this.manager().inner().authorizationServers();
        return null; // NOP getInnerAsync implementation as get is not supported
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public String authorizationEndpoint() {
        return this.inner().authorizationEndpoint();
    }

    @Override
    public List<AuthorizationMethod> authorizationMethods() {
        return this.inner().authorizationMethods();
    }

    @Override
    public List<BearerTokenSendingMethod> bearerTokenSendingMethods() {
        return this.inner().bearerTokenSendingMethods();
    }

    @Override
    public List<ClientAuthenticationMethod> clientAuthenticationMethod() {
        return this.inner().clientAuthenticationMethod();
    }

    @Override
    public String clientId() {
        return this.inner().clientId();
    }

    @Override
    public String clientRegistrationEndpoint() {
        return this.inner().clientRegistrationEndpoint();
    }

    @Override
    public String clientSecret() {
        return this.inner().clientSecret();
    }

    @Override
    public String defaultScope() {
        return this.inner().defaultScope();
    }

    @Override
    public String description() {
        return this.inner().description();
    }

    @Override
    public String displayName() {
        return this.inner().displayName();
    }

    @Override
    public List<GrantType> grantTypes() {
        return this.inner().grantTypes();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String resourceOwnerPassword() {
        return this.inner().resourceOwnerPassword();
    }

    @Override
    public String resourceOwnerUsername() {
        return this.inner().resourceOwnerUsername();
    }

    @Override
    public Boolean supportState() {
        return this.inner().supportState();
    }

    @Override
    public List<TokenBodyParameterContract> tokenBodyParameters() {
        return this.inner().tokenBodyParameters();
    }

    @Override
    public String tokenEndpoint() {
        return this.inner().tokenEndpoint();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public AuthorizationServerContractImpl withResourceGroupName(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    @Override
    public AuthorizationServerContractImpl withServiceName(String serviceName) {
        this.serviceName = serviceName;
        return this;
    }

    @Override
    public AuthorizationServerContractImpl withAuthorizationEndpoint(String authorizationEndpoint) {
        this.inner().withAuthorizationEndpoint(authorizationEndpoint);
        return this;
    }

    @Override
    public AuthorizationServerContractImpl withClientId(String clientId) {
        this.inner().withClientId(clientId);
        return this;
    }

    @Override
    public AuthorizationServerContractImpl withClientRegistrationEndpoint(String clientRegistrationEndpoint) {
        this.inner().withClientRegistrationEndpoint(clientRegistrationEndpoint);
        return this;
    }

    @Override
    public AuthorizationServerContractImpl withDisplayName(String displayName) {
        this.inner().withDisplayName(displayName);
        return this;
    }

    @Override
    public AuthorizationServerContractImpl withGrantTypes(List<GrantType> grantTypes) {
        this.inner().withGrantTypes(grantTypes);
        return this;
    }

    @Override
    public AuthorizationServerContractImpl withIfMatch(String ifMatch) {
        if (isInCreateMode()) {
            this.cifMatch = ifMatch;
        } else {
            this.uifMatch = ifMatch;
        }
        return this;
    }

    @Override
    public AuthorizationServerContractImpl withAuthorizationMethods(List<AuthorizationMethod> authorizationMethods) {
        this.inner().withAuthorizationMethods(authorizationMethods);
        return this;
    }

    @Override
    public AuthorizationServerContractImpl withBearerTokenSendingMethods(List<BearerTokenSendingMethod> bearerTokenSendingMethods) {
        this.inner().withBearerTokenSendingMethods(bearerTokenSendingMethods);
        return this;
    }

    @Override
    public AuthorizationServerContractImpl withClientAuthenticationMethod(List<ClientAuthenticationMethod> clientAuthenticationMethod) {
        this.inner().withClientAuthenticationMethod(clientAuthenticationMethod);
        return this;
    }

    @Override
    public AuthorizationServerContractImpl withClientSecret(String clientSecret) {
        this.inner().withClientSecret(clientSecret);
        return this;
    }

    @Override
    public AuthorizationServerContractImpl withDefaultScope(String defaultScope) {
        this.inner().withDefaultScope(defaultScope);
        return this;
    }

    @Override
    public AuthorizationServerContractImpl withDescription(String description) {
        this.inner().withDescription(description);
        return this;
    }

    @Override
    public AuthorizationServerContractImpl withResourceOwnerPassword(String resourceOwnerPassword) {
        this.inner().withResourceOwnerPassword(resourceOwnerPassword);
        return this;
    }

    @Override
    public AuthorizationServerContractImpl withResourceOwnerUsername(String resourceOwnerUsername) {
        this.inner().withResourceOwnerUsername(resourceOwnerUsername);
        return this;
    }

    @Override
    public AuthorizationServerContractImpl withSupportState(Boolean supportState) {
        this.inner().withSupportState(supportState);
        return this;
    }

    @Override
    public AuthorizationServerContractImpl withTokenBodyParameters(List<TokenBodyParameterContract> tokenBodyParameters) {
        this.inner().withTokenBodyParameters(tokenBodyParameters);
        return this;
    }

    @Override
    public AuthorizationServerContractImpl withTokenEndpoint(String tokenEndpoint) {
        this.inner().withTokenEndpoint(tokenEndpoint);
        return this;
    }

}
