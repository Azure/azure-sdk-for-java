/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.apimanagement.v2019_12_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.apimanagement.v2019_12_01.implementation.GroupContractInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.apimanagement.v2019_12_01.implementation.ApiManagementManager;

/**
 * Type representing GroupContract.
 */
public interface GroupContract extends HasInner<GroupContractInner>, Indexable, Updatable<GroupContract.Update>, HasManager<ApiManagementManager> {
    /**
     * @return the builtIn value.
     */
    Boolean builtIn();

    /**
     * @return the description value.
     */
    String description();

    /**
     * @return the displayName value.
     */
    String displayName();

    /**
     * @return the externalId value.
     */
    String externalId();

    /**
     * @return the groupContractType value.
     */
    GroupType groupContractType();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the GroupContract definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithResourceGroupName, DefinitionStages.WithServiceName, DefinitionStages.WithIfMatch, DefinitionStages.WithDisplayName, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of GroupContract definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a GroupContract definition.
         */
        interface Blank extends WithResourceGroupName {
        }

        /**
         * The stage of the groupcontract definition allowing to specify ResourceGroupName.
         */
        interface WithResourceGroupName {
           /**
            * Specifies resourceGroupName.
            * @param resourceGroupName The name of the resource group
            * @return the next definition stage
            */
            WithServiceName withResourceGroupName(String resourceGroupName);
        }

        /**
         * The stage of the groupcontract definition allowing to specify ServiceName.
         */
        interface WithServiceName {
           /**
            * Specifies serviceName.
            * @param serviceName The name of the API Management service
            * @return the next definition stage
            */
            WithIfMatch withServiceName(String serviceName);
        }

        /**
         * The stage of the groupcontract definition allowing to specify IfMatch.
         */
        interface WithIfMatch {
           /**
            * Specifies ifMatch.
            * @param ifMatch ETag of the Entity. Not required when creating an entity, but required when updating an entity
            * @return the next definition stage
            */
            WithDisplayName withIfMatch(String ifMatch);
        }

        /**
         * The stage of the groupcontract definition allowing to specify DisplayName.
         */
        interface WithDisplayName {
           /**
            * Specifies displayName.
            * @param displayName Group name
            * @return the next definition stage
            */
            WithCreate withDisplayName(String displayName);
        }

        /**
         * The stage of the groupcontract definition allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             * @param description Group description
             * @return the next definition stage
             */
            WithCreate withDescription(String description);
        }

        /**
         * The stage of the groupcontract definition allowing to specify ExternalId.
         */
        interface WithExternalId {
            /**
             * Specifies externalId.
             * @param externalId Identifier of the external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://&lt;tenant&gt;.onmicrosoft.com/groups/&lt;group object id&gt;`; otherwise the value is null
             * @return the next definition stage
             */
            WithCreate withExternalId(String externalId);
        }

        /**
         * The stage of the groupcontract definition allowing to specify Type.
         */
        interface WithType {
            /**
             * Specifies type.
             * @param type Group type. Possible values include: 'custom', 'system', 'external'
             * @return the next definition stage
             */
            WithCreate withType(GroupType type);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<GroupContract>, DefinitionStages.WithDescription, DefinitionStages.WithExternalId, DefinitionStages.WithType {
        }
    }
    /**
     * The template for a GroupContract update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<GroupContract>, UpdateStages.WithIfMatch, UpdateStages.WithDescription, UpdateStages.WithExternalId, UpdateStages.WithType {
    }

    /**
     * Grouping of GroupContract update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the groupcontract update allowing to specify IfMatch.
         */
        interface WithIfMatch {
            /**
             * Specifies ifMatch.
             * @param ifMatch ETag of the Entity. Not required when creating an entity, but required when updating an entity
             * @return the next update stage
             */
            Update withIfMatch(String ifMatch);
        }

        /**
         * The stage of the groupcontract update allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             * @param description Group description
             * @return the next update stage
             */
            Update withDescription(String description);
        }

        /**
         * The stage of the groupcontract update allowing to specify ExternalId.
         */
        interface WithExternalId {
            /**
             * Specifies externalId.
             * @param externalId Identifier of the external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://&lt;tenant&gt;.onmicrosoft.com/groups/&lt;group object id&gt;`; otherwise the value is null
             * @return the next update stage
             */
            Update withExternalId(String externalId);
        }

        /**
         * The stage of the groupcontract update allowing to specify Type.
         */
        interface WithType {
            /**
             * Specifies type.
             * @param type Group type. Possible values include: 'custom', 'system', 'external'
             * @return the next update stage
             */
            Update withType(GroupType type);
        }

    }
}
