/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.apimanagement.v2019_12_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.apimanagement.v2019_12_01.NetworkStatus;
import rx.functions.Func1;
import rx.Observable;
import java.util.List;
import com.microsoft.azure.management.apimanagement.v2019_12_01.NetworkStatusContractByLocation;
import com.microsoft.azure.management.apimanagement.v2019_12_01.NetworkStatusContract;

class NetworkStatusImpl extends WrapperImpl<NetworkStatusInner> implements NetworkStatus {
    private final ApiManagementManager manager;

    NetworkStatusImpl(ApiManagementManager manager) {
        super(manager.inner().networkStatus());
        this.manager = manager;
    }

    public ApiManagementManager manager() {
        return this.manager;
    }

    @Override
    public Observable<NetworkStatusContractByLocation> listByServiceAsync(String resourceGroupName, String serviceName) {
        NetworkStatusInner client = this.inner();
        return client.listByServiceAsync(resourceGroupName, serviceName)
        .flatMap(new Func1<List<NetworkStatusContractByLocationInner>, Observable<NetworkStatusContractByLocationInner>>() {
            @Override
            public Observable<NetworkStatusContractByLocationInner> call(List<NetworkStatusContractByLocationInner> innerList) {
                return Observable.from(innerList);
            }
        })
        .map(new Func1<NetworkStatusContractByLocationInner, NetworkStatusContractByLocation>() {
            @Override
            public NetworkStatusContractByLocation call(NetworkStatusContractByLocationInner inner) {
                return new NetworkStatusContractByLocationImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<NetworkStatusContract> listByLocationAsync(String resourceGroupName, String serviceName, String locationName) {
        NetworkStatusInner client = this.inner();
        return client.listByLocationAsync(resourceGroupName, serviceName, locationName)
        .map(new Func1<NetworkStatusContractInner, NetworkStatusContract>() {
            @Override
            public NetworkStatusContract call(NetworkStatusContractInner inner) {
                return new NetworkStatusContractImpl(inner, manager());
            }
        });
    }

}
