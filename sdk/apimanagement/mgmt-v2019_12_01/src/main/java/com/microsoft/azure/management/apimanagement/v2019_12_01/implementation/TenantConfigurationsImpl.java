/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.apimanagement.v2019_12_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.apimanagement.v2019_12_01.TenantConfigurations;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.management.apimanagement.v2019_12_01.OperationResultContract;
import com.microsoft.azure.management.apimanagement.v2019_12_01.TenantConfigurationSyncStateContract;
import com.microsoft.azure.management.apimanagement.v2019_12_01.DeployConfigurationParameters;
import com.microsoft.azure.management.apimanagement.v2019_12_01.SaveConfigurationParameter;

class TenantConfigurationsImpl extends WrapperImpl<TenantConfigurationsInner> implements TenantConfigurations {
    private final ApiManagementManager manager;

    TenantConfigurationsImpl(ApiManagementManager manager) {
        super(manager.inner().tenantConfigurations());
        this.manager = manager;
    }

    public ApiManagementManager manager() {
        return this.manager;
    }

    @Override
    public Observable<OperationResultContract> deployAsync(String resourceGroupName, String serviceName, DeployConfigurationParameters parameters) {
        TenantConfigurationsInner client = this.inner();
        return client.deployAsync(resourceGroupName, serviceName, parameters)
        .map(new Func1<OperationResultContractInner, OperationResultContract>() {
            @Override
            public OperationResultContract call(OperationResultContractInner inner) {
                return new OperationResultContractImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<OperationResultContract> saveAsync(String resourceGroupName, String serviceName, SaveConfigurationParameter parameters) {
        TenantConfigurationsInner client = this.inner();
        return client.saveAsync(resourceGroupName, serviceName, parameters)
        .map(new Func1<OperationResultContractInner, OperationResultContract>() {
            @Override
            public OperationResultContract call(OperationResultContractInner inner) {
                return new OperationResultContractImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<OperationResultContract> validateAsync(String resourceGroupName, String serviceName, DeployConfigurationParameters parameters) {
        TenantConfigurationsInner client = this.inner();
        return client.validateAsync(resourceGroupName, serviceName, parameters)
        .map(new Func1<OperationResultContractInner, OperationResultContract>() {
            @Override
            public OperationResultContract call(OperationResultContractInner inner) {
                return new OperationResultContractImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<TenantConfigurationSyncStateContract> getSyncStateAsync(String resourceGroupName, String serviceName) {
        TenantConfigurationsInner client = this.inner();
        return client.getSyncStateAsync(resourceGroupName, serviceName)
        .map(new Func1<TenantConfigurationSyncStateContractInner, TenantConfigurationSyncStateContract>() {
            @Override
            public TenantConfigurationSyncStateContract call(TenantConfigurationSyncStateContractInner inner) {
                return new TenantConfigurationSyncStateContractImpl(inner, manager());
            }
        });
    }

}
