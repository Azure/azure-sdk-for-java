/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.apimanagement.v2019_12_01;

import rx.Observable;
import com.microsoft.azure.management.apimanagement.v2019_12_01.implementation.TenantConfigurationsInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing TenantConfigurations.
 */
public interface TenantConfigurations extends HasInner<TenantConfigurationsInner> {
    /**
     * This operation applies changes from the specified Git branch to the configuration database. This is a long running operation and could take several minutes to complete.
     *
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param parameters Deploy Configuration parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<OperationResultContract> deployAsync(String resourceGroupName, String serviceName, DeployConfigurationParameters parameters);

    /**
     * This operation creates a commit with the current configuration snapshot to the specified branch in the repository. This is a long running operation and could take several minutes to complete.
     *
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param parameters Save Configuration parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<OperationResultContract> saveAsync(String resourceGroupName, String serviceName, SaveConfigurationParameter parameters);

    /**
     * This operation validates the changes in the specified Git branch. This is a long running operation and could take several minutes to complete.
     *
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param parameters Validate Configuration parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<OperationResultContract> validateAsync(String resourceGroupName, String serviceName, DeployConfigurationParameters parameters);

    /**
     * Gets the status of the most recent synchronization between the configuration database and the Git repository.
     *
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<TenantConfigurationSyncStateContract> getSyncStateAsync(String resourceGroupName, String serviceName);

}
