/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.apimanagement.v2019_12_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.apimanagement.v2019_12_01.implementation.IssueAttachmentContractInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.apimanagement.v2019_12_01.implementation.ApiManagementManager;

/**
 * Type representing IssueAttachmentContract.
 */
public interface IssueAttachmentContract extends HasInner<IssueAttachmentContractInner>, Indexable, Refreshable<IssueAttachmentContract>, Updatable<IssueAttachmentContract.Update>, HasManager<ApiManagementManager> {
    /**
     * @return the content value.
     */
    String content();

    /**
     * @return the contentFormat value.
     */
    String contentFormat();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the title value.
     */
    String title();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the IssueAttachmentContract definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithIssue, DefinitionStages.WithIfMatch, DefinitionStages.WithContent, DefinitionStages.WithContentFormat, DefinitionStages.WithTitle, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of IssueAttachmentContract definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a IssueAttachmentContract definition.
         */
        interface Blank extends WithIssue {
        }

        /**
         * The stage of the issueattachmentcontract definition allowing to specify Issue.
         */
        interface WithIssue {
           /**
            * Specifies resourceGroupName, serviceName, apiId, issueId.
            * @param resourceGroupName The name of the resource group
            * @param serviceName The name of the API Management service
            * @param apiId API identifier. Must be unique in the current API Management service instance
            * @param issueId Issue identifier. Must be unique in the current API Management service instance
            * @return the next definition stage
            */
            WithIfMatch withExistingIssue(String resourceGroupName, String serviceName, String apiId, String issueId);
        }

        /**
         * The stage of the issueattachmentcontract definition allowing to specify IfMatch.
         */
        interface WithIfMatch {
           /**
            * Specifies ifMatch.
            * @param ifMatch ETag of the Entity. Not required when creating an entity, but required when updating an entity
            * @return the next definition stage
            */
            WithContent withIfMatch(String ifMatch);
        }

        /**
         * The stage of the issueattachmentcontract definition allowing to specify Content.
         */
        interface WithContent {
           /**
            * Specifies content.
            * @param content An HTTP link or Base64-encoded binary data
            * @return the next definition stage
            */
            WithContentFormat withContent(String content);
        }

        /**
         * The stage of the issueattachmentcontract definition allowing to specify ContentFormat.
         */
        interface WithContentFormat {
           /**
            * Specifies contentFormat.
            * @param contentFormat Either 'link' if content is provided via an HTTP link or the MIME type of the Base64-encoded binary data provided in the 'content' property
            * @return the next definition stage
            */
            WithTitle withContentFormat(String contentFormat);
        }

        /**
         * The stage of the issueattachmentcontract definition allowing to specify Title.
         */
        interface WithTitle {
           /**
            * Specifies title.
            * @param title Filename by which the binary data will be saved
            * @return the next definition stage
            */
            WithCreate withTitle(String title);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<IssueAttachmentContract> {
        }
    }
    /**
     * The template for a IssueAttachmentContract update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<IssueAttachmentContract>, UpdateStages.WithIfMatch {
    }

    /**
     * Grouping of IssueAttachmentContract update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the issueattachmentcontract update allowing to specify IfMatch.
         */
        interface WithIfMatch {
            /**
             * Specifies ifMatch.
             * @param ifMatch ETag of the Entity. Not required when creating an entity, but required when updating an entity
             * @return the next update stage
             */
            Update withIfMatch(String ifMatch);
        }

    }
}
