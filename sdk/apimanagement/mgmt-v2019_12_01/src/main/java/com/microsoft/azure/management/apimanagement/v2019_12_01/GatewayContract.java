/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.apimanagement.v2019_12_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.apimanagement.v2019_12_01.implementation.GatewayContractInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.apimanagement.v2019_12_01.implementation.ApiManagementManager;

/**
 * Type representing GatewayContract.
 */
public interface GatewayContract extends HasInner<GatewayContractInner>, Indexable, Updatable<GatewayContract.Update>, HasManager<ApiManagementManager> {
    /**
     * @return the description value.
     */
    String description();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the locationData value.
     */
    ResourceLocationDataContract locationData();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the GatewayContract definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithResourceGroupName, DefinitionStages.WithServiceName, DefinitionStages.WithIfMatch, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of GatewayContract definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a GatewayContract definition.
         */
        interface Blank extends WithResourceGroupName {
        }

        /**
         * The stage of the gatewaycontract definition allowing to specify ResourceGroupName.
         */
        interface WithResourceGroupName {
           /**
            * Specifies resourceGroupName.
            * @param resourceGroupName The name of the resource group
            * @return the next definition stage
            */
            WithServiceName withResourceGroupName(String resourceGroupName);
        }

        /**
         * The stage of the gatewaycontract definition allowing to specify ServiceName.
         */
        interface WithServiceName {
           /**
            * Specifies serviceName.
            * @param serviceName The name of the API Management service
            * @return the next definition stage
            */
            WithIfMatch withServiceName(String serviceName);
        }

        /**
         * The stage of the gatewaycontract definition allowing to specify IfMatch.
         */
        interface WithIfMatch {
           /**
            * Specifies ifMatch.
            * @param ifMatch ETag of the Entity. Not required when creating an entity, but required when updating an entity
            * @return the next definition stage
            */
            WithCreate withIfMatch(String ifMatch);
        }

        /**
         * The stage of the gatewaycontract definition allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             * @param description Gateway description
             * @return the next definition stage
             */
            WithCreate withDescription(String description);
        }

        /**
         * The stage of the gatewaycontract definition allowing to specify LocationData.
         */
        interface WithLocationData {
            /**
             * Specifies locationData.
             * @param locationData Gateway location
             * @return the next definition stage
             */
            WithCreate withLocationData(ResourceLocationDataContract locationData);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<GatewayContract>, DefinitionStages.WithDescription, DefinitionStages.WithLocationData {
        }
    }
    /**
     * The template for a GatewayContract update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<GatewayContract>, UpdateStages.WithIfMatch, UpdateStages.WithDescription, UpdateStages.WithLocationData {
    }

    /**
     * Grouping of GatewayContract update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the gatewaycontract update allowing to specify IfMatch.
         */
        interface WithIfMatch {
            /**
             * Specifies ifMatch.
             * @param ifMatch ETag of the Entity. Not required when creating an entity, but required when updating an entity
             * @return the next update stage
             */
            Update withIfMatch(String ifMatch);
        }

        /**
         * The stage of the gatewaycontract update allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             * @param description Gateway description
             * @return the next update stage
             */
            Update withDescription(String description);
        }

        /**
         * The stage of the gatewaycontract update allowing to specify LocationData.
         */
        interface WithLocationData {
            /**
             * Specifies locationData.
             * @param locationData Gateway location
             * @return the next update stage
             */
            Update withLocationData(ResourceLocationDataContract locationData);
        }

    }
}
