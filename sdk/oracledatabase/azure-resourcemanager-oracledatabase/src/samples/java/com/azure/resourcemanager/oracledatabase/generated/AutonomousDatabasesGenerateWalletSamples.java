// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.resourcemanager.oracledatabase.models.GenerateAutonomousDatabaseWalletDetails;
import com.azure.resourcemanager.oracledatabase.models.GenerateType;

/**
 * Samples for AutonomousDatabases GenerateWallet.
 */
public final class AutonomousDatabasesGenerateWalletSamples {
    /*
     * x-ms-original-file: 2025-09-01/AutonomousDatabases_GenerateWallet_MaximumSet_Gen.json
     */
    /**
     * Sample code: Generate wallet action on Autonomous Database - generated by [MaximumSet] rule.
     * 
     * @param manager Entry point to OracleDatabaseManager.
     */
    public static void generateWalletActionOnAutonomousDatabaseGeneratedByMaximumSetRule(
        com.azure.resourcemanager.oracledatabase.OracleDatabaseManager manager) {
        manager.autonomousDatabases()
            .generateWalletWithResponse("rgopenapi", "databasedb1",
                new GenerateAutonomousDatabaseWalletDetails().withGenerateType(GenerateType.SINGLE)
                    .withIsRegional(true)
                    .withPassword("fakeTokenPlaceholder"),
                com.azure.core.util.Context.NONE);
    }

    /*
     * x-ms-original-file: 2025-09-01/autonomousDatabase_generateWallet.json
     */
    /**
     * Sample code: AutonomousDatabases_generateWallet.
     * 
     * @param manager Entry point to OracleDatabaseManager.
     */
    public static void
        autonomousDatabasesGenerateWallet(com.azure.resourcemanager.oracledatabase.OracleDatabaseManager manager) {
        manager.autonomousDatabases()
            .generateWalletWithResponse("rg000", "databasedb1",
                new GenerateAutonomousDatabaseWalletDetails().withGenerateType(GenerateType.SINGLE)
                    .withIsRegional(false)
                    .withPassword("fakeTokenPlaceholder"),
                com.azure.core.util.Context.NONE);
    }
}
