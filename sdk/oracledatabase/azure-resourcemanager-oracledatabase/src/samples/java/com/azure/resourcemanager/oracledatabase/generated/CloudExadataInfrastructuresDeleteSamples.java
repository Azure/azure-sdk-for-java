// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

/**
 * Samples for CloudExadataInfrastructures Delete.
 */
public final class CloudExadataInfrastructuresDeleteSamples {
    /*
     * x-ms-original-file: 2025-09-01/exaInfra_delete.json
     */
    /**
     * Sample code: CloudExadataInfrastructures_delete.
     * 
     * @param manager Entry point to OracleDatabaseManager.
     */
    public static void
        cloudExadataInfrastructuresDelete(com.azure.resourcemanager.oracledatabase.OracleDatabaseManager manager) {
        manager.cloudExadataInfrastructures().delete("rg000", "infra1", com.azure.core.util.Context.NONE);
    }

    /*
     * x-ms-original-file: 2025-09-01/CloudExadataInfrastructures_Delete_MinimumSet_Gen.json
     */
    /**
     * Sample code: Delete Exadata Infrastructure - generated by [MinimumSet] rule.
     * 
     * @param manager Entry point to OracleDatabaseManager.
     */
    public static void deleteExadataInfrastructureGeneratedByMinimumSetRule(
        com.azure.resourcemanager.oracledatabase.OracleDatabaseManager manager) {
        manager.cloudExadataInfrastructures()
            .delete("rgopenapi", "Replace this value with a string matching RegExp .*",
                com.azure.core.util.Context.NONE);
    }

    /*
     * x-ms-original-file: 2025-09-01/CloudExadataInfrastructures_Delete_MaximumSet_Gen.json
     */
    /**
     * Sample code: Delete Exadata Infrastructure - generated by [MaximumSet] rule.
     * 
     * @param manager Entry point to OracleDatabaseManager.
     */
    public static void deleteExadataInfrastructureGeneratedByMaximumSetRule(
        com.azure.resourcemanager.oracledatabase.OracleDatabaseManager manager) {
        manager.cloudExadataInfrastructures()
            .delete("rgopenapi", "Replace this value with a string matching RegExp .*",
                com.azure.core.util.Context.NONE);
    }
}
