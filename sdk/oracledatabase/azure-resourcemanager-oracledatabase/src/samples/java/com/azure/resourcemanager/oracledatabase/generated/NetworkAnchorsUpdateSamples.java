// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.resourcemanager.oracledatabase.models.NetworkAnchor;
import com.azure.resourcemanager.oracledatabase.models.NetworkAnchorUpdateProperties;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for NetworkAnchors Update.
 */
public final class NetworkAnchorsUpdateSamples {
    /*
     * x-ms-original-file: 2025-09-01/NetworkAnchors_Update_MaximumSet_Gen.json
     */
    /**
     * Sample code: NetworkAnchors_Update_MaximumSet.
     * 
     * @param manager Entry point to OracleDatabaseManager.
     */
    public static void
        networkAnchorsUpdateMaximumSet(com.azure.resourcemanager.oracledatabase.OracleDatabaseManager manager) {
        NetworkAnchor resource = manager.networkAnchors()
            .getByResourceGroupWithResponse("rgopenapi", "networkanchor1", com.azure.core.util.Context.NONE)
            .getValue();
        resource.update()
            .withTags(mapOf("key8038", "fakeTokenPlaceholder"))
            .withZones(Arrays.asList("zone1"))
            .withProperties(new NetworkAnchorUpdateProperties().withOciBackupCidrBlock("waoztwkdpplgjtkiwkfnnohu")
                .withIsOracleToAzureDnsZoneSyncEnabled(true)
                .withIsOracleDnsListeningEndpointEnabled(true)
                .withIsOracleDnsForwardingEndpointEnabled(true))
            .apply();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
