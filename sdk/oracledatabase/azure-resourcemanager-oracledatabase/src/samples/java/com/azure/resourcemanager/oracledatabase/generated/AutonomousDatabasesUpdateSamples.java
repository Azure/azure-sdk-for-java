// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.resourcemanager.oracledatabase.models.AutonomousDatabase;
import com.azure.resourcemanager.oracledatabase.models.AutonomousDatabaseUpdateProperties;
import com.azure.resourcemanager.oracledatabase.models.AutonomousMaintenanceScheduleType;
import com.azure.resourcemanager.oracledatabase.models.CustomerContact;
import com.azure.resourcemanager.oracledatabase.models.DatabaseEditionType;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekName;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekUpdate;
import com.azure.resourcemanager.oracledatabase.models.LicenseModel;
import com.azure.resourcemanager.oracledatabase.models.LongTermBackUpScheduleDetails;
import com.azure.resourcemanager.oracledatabase.models.OpenModeType;
import com.azure.resourcemanager.oracledatabase.models.PermissionLevelType;
import com.azure.resourcemanager.oracledatabase.models.RepeatCadenceType;
import com.azure.resourcemanager.oracledatabase.models.RoleType;
import com.azure.resourcemanager.oracledatabase.models.ScheduledOperationsTypeUpdate;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for AutonomousDatabases Update.
 */
public final class AutonomousDatabasesUpdateSamples {
    /*
     * x-ms-original-file: 2025-09-01/autonomousDatabase_patch.json
     */
    /**
     * Sample code: AutonomousDatabases_update.
     * 
     * @param manager Entry point to OracleDatabaseManager.
     */
    public static void
        autonomousDatabasesUpdate(com.azure.resourcemanager.oracledatabase.OracleDatabaseManager manager) {
        AutonomousDatabase resource = manager.autonomousDatabases()
            .getByResourceGroupWithResponse("rg000", "databasedb1", com.azure.core.util.Context.NONE)
            .getValue();
        resource.update().apply();
    }

    /*
     * x-ms-original-file: 2025-09-01/AutonomousDatabases_Update_MaximumSet_Gen.json
     */
    /**
     * Sample code: Patch Autonomous Database - generated by [MaximumSet] rule.
     * 
     * @param manager Entry point to OracleDatabaseManager.
     */
    public static void patchAutonomousDatabaseGeneratedByMaximumSetRule(
        com.azure.resourcemanager.oracledatabase.OracleDatabaseManager manager) {
        AutonomousDatabase resource = manager.autonomousDatabases()
            .getByResourceGroupWithResponse("rgopenapi", "databasedb1", com.azure.core.util.Context.NONE)
            .getValue();
        resource.update()
            .withTags(mapOf("key9827", "fakeTokenPlaceholder"))
            .withProperties(new AutonomousDatabaseUpdateProperties().withAdminPassword("fakeTokenPlaceholder")
                .withAutonomousMaintenanceScheduleType(AutonomousMaintenanceScheduleType.EARLY)
                .withComputeCount(56.1D)
                .withCpuCoreCount(45)
                .withCustomerContacts(Arrays.asList(new CustomerContact().withEmail("dummyemail@microsoft.com")))
                .withDataStorageSizeInTbs(133)
                .withDataStorageSizeInGbs(175271)
                .withDisplayName("lrdrjpyyvufnxdzpwvlkmfukpstrjftdxcejcxtnqhxqbhvtzeiokllnspotsqeggddxkjjtf")
                .withIsAutoScalingEnabled(true)
                .withIsAutoScalingForStorageEnabled(true)
                .withPeerDbId("qmpfwtvpfvbgmulethqznsyyjlpxmyfqfanrymzqsgraavtmlqqbexpzguyqybngoupbshlzpxv")
                .withIsLocalDataGuardEnabled(true)
                .withIsMtlsConnectionRequired(true)
                .withLicenseModel(LicenseModel.LICENSE_INCLUDED)
                .withScheduledOperationsList(Arrays.asList(new ScheduledOperationsTypeUpdate()
                    .withDayOfWeek(new DayOfWeekUpdate().withName(DayOfWeekName.MONDAY))
                    .withScheduledStartTime("lwwvkazgmfremfwhckfb")
                    .withScheduledStopTime("hjwagzxijpiaogulmnmbuqakpqxhkjvaypjqnvbvtjddc")))
                .withDatabaseEdition(DatabaseEditionType.STANDARD_EDITION)
                .withLongTermBackupSchedule(
                    new LongTermBackUpScheduleDetails().withRepeatCadence(RepeatCadenceType.ONE_TIME)
                        .withTimeOfBackup(OffsetDateTime.parse("2025-08-01T04:32:58.715Z"))
                        .withRetentionPeriodInDays(188)
                        .withIsDisabled(true))
                .withLocalAdgAutoFailoverMaxDataLossLimit(212)
                .withOpenMode(OpenModeType.READ_ONLY)
                .withPermissionLevel(PermissionLevelType.RESTRICTED)
                .withRole(RoleType.PRIMARY)
                .withBackupRetentionPeriodInDays(12)
                .withWhitelistedIps(Arrays.asList(
                    "kfierlppwurtqrhfxwgfgrnqtmvraignzwsddwmpdijeveuevuoejfmbjvpnlrmmdflilxcwkkzvdofctsdjfxrrrwctihhnchtrouauesqbmlcqhzwnppnhrtitecenlfyshassvajukbwxudhlwixkvkgsessvshcwmleoqujeemwenhwlsccbcjnnviugzgylsxkssalqoicatcvkahogdvweymhdxboyqwhaxuzlmrdbvgbnnetobkbwygcsflzanwknlybvvzgjzjirpfrksbxwgllgfxwdflcisvxpkjecpgdaxccqkzxofedkrawvhzeabmunpykwd")))
            .apply();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
