// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * Details for the long-term backup schedule.
 */
@Fluent
public final class LongTermBackUpScheduleDetails {
    /*
     * The frequency of the long-term backup schedule
     */
    @JsonProperty(value = "repeatCadence")
    private RepeatCadenceType repeatCadence;

    /*
     * The timestamp for the long-term backup schedule. For a MONTHLY cadence, months having fewer days than the provided date will have the backup taken on the last day of that month.
     */
    @JsonProperty(value = "timeOfBackup")
    private OffsetDateTime timeOfBackup;

    /*
     * Retention period, in days, for backups.
     */
    @JsonProperty(value = "retentionPeriodInDays")
    private Integer retentionPeriodInDays;

    /*
     * Indicates if the long-term backup schedule should be deleted. The default value is `FALSE`.
     */
    @JsonProperty(value = "isDisabled")
    private Boolean isDisabled;

    /**
     * Creates an instance of LongTermBackUpScheduleDetails class.
     */
    public LongTermBackUpScheduleDetails() {
    }

    /**
     * Get the repeatCadence property: The frequency of the long-term backup schedule.
     * 
     * @return the repeatCadence value.
     */
    public RepeatCadenceType repeatCadence() {
        return this.repeatCadence;
    }

    /**
     * Set the repeatCadence property: The frequency of the long-term backup schedule.
     * 
     * @param repeatCadence the repeatCadence value to set.
     * @return the LongTermBackUpScheduleDetails object itself.
     */
    public LongTermBackUpScheduleDetails withRepeatCadence(RepeatCadenceType repeatCadence) {
        this.repeatCadence = repeatCadence;
        return this;
    }

    /**
     * Get the timeOfBackup property: The timestamp for the long-term backup schedule. For a MONTHLY cadence, months
     * having fewer days than the provided date will have the backup taken on the last day of that month.
     * 
     * @return the timeOfBackup value.
     */
    public OffsetDateTime timeOfBackup() {
        return this.timeOfBackup;
    }

    /**
     * Set the timeOfBackup property: The timestamp for the long-term backup schedule. For a MONTHLY cadence, months
     * having fewer days than the provided date will have the backup taken on the last day of that month.
     * 
     * @param timeOfBackup the timeOfBackup value to set.
     * @return the LongTermBackUpScheduleDetails object itself.
     */
    public LongTermBackUpScheduleDetails withTimeOfBackup(OffsetDateTime timeOfBackup) {
        this.timeOfBackup = timeOfBackup;
        return this;
    }

    /**
     * Get the retentionPeriodInDays property: Retention period, in days, for backups.
     * 
     * @return the retentionPeriodInDays value.
     */
    public Integer retentionPeriodInDays() {
        return this.retentionPeriodInDays;
    }

    /**
     * Set the retentionPeriodInDays property: Retention period, in days, for backups.
     * 
     * @param retentionPeriodInDays the retentionPeriodInDays value to set.
     * @return the LongTermBackUpScheduleDetails object itself.
     */
    public LongTermBackUpScheduleDetails withRetentionPeriodInDays(Integer retentionPeriodInDays) {
        this.retentionPeriodInDays = retentionPeriodInDays;
        return this;
    }

    /**
     * Get the isDisabled property: Indicates if the long-term backup schedule should be deleted. The default value is
     * `FALSE`.
     * 
     * @return the isDisabled value.
     */
    public Boolean isDisabled() {
        return this.isDisabled;
    }

    /**
     * Set the isDisabled property: Indicates if the long-term backup schedule should be deleted. The default value is
     * `FALSE`.
     * 
     * @param isDisabled the isDisabled value to set.
     * @return the LongTermBackUpScheduleDetails object itself.
     */
    public LongTermBackUpScheduleDetails withIsDisabled(Boolean isDisabled) {
        this.isDisabled = isDisabled;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
