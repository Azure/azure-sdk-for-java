// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * ExadataIormConfig for cloud vm cluster.
 */
@Fluent
public final class ExadataIormConfig {
    /*
     * An array of IORM settings for all the database in the Exadata DB system.
     */
    @JsonProperty(value = "dbPlans")
    private List<DbIormConfig> dbPlans;

    /*
     * Additional information about the current lifecycleState.
     */
    @JsonProperty(value = "lifecycleDetails")
    private String lifecycleDetails;

    /*
     * The current state of IORM configuration for the Exadata DB system.
     */
    @JsonProperty(value = "lifecycleState")
    private IormLifecycleState lifecycleState;

    /*
     * The current value for the IORM objective. The default is AUTO.
     */
    @JsonProperty(value = "objective")
    private Objective objective;

    /**
     * Creates an instance of ExadataIormConfig class.
     */
    public ExadataIormConfig() {
    }

    /**
     * Get the dbPlans property: An array of IORM settings for all the database in the Exadata DB system.
     * 
     * @return the dbPlans value.
     */
    public List<DbIormConfig> dbPlans() {
        return this.dbPlans;
    }

    /**
     * Set the dbPlans property: An array of IORM settings for all the database in the Exadata DB system.
     * 
     * @param dbPlans the dbPlans value to set.
     * @return the ExadataIormConfig object itself.
     */
    public ExadataIormConfig withDbPlans(List<DbIormConfig> dbPlans) {
        this.dbPlans = dbPlans;
        return this;
    }

    /**
     * Get the lifecycleDetails property: Additional information about the current lifecycleState.
     * 
     * @return the lifecycleDetails value.
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }

    /**
     * Set the lifecycleDetails property: Additional information about the current lifecycleState.
     * 
     * @param lifecycleDetails the lifecycleDetails value to set.
     * @return the ExadataIormConfig object itself.
     */
    public ExadataIormConfig withLifecycleDetails(String lifecycleDetails) {
        this.lifecycleDetails = lifecycleDetails;
        return this;
    }

    /**
     * Get the lifecycleState property: The current state of IORM configuration for the Exadata DB system.
     * 
     * @return the lifecycleState value.
     */
    public IormLifecycleState lifecycleState() {
        return this.lifecycleState;
    }

    /**
     * Set the lifecycleState property: The current state of IORM configuration for the Exadata DB system.
     * 
     * @param lifecycleState the lifecycleState value to set.
     * @return the ExadataIormConfig object itself.
     */
    public ExadataIormConfig withLifecycleState(IormLifecycleState lifecycleState) {
        this.lifecycleState = lifecycleState;
        return this;
    }

    /**
     * Get the objective property: The current value for the IORM objective. The default is AUTO.
     * 
     * @return the objective value.
     */
    public Objective objective() {
        return this.objective;
    }

    /**
     * Set the objective property: The current value for the IORM objective. The default is AUTO.
     * 
     * @param objective the objective value to set.
     * @return the ExadataIormConfig object itself.
     */
    public ExadataIormConfig withObjective(Objective objective) {
        this.objective = objective;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (dbPlans() != null) {
            dbPlans().forEach(e -> e.validate());
        }
    }
}
