// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.oracledatabase.fluent.models.GiMinorVersionInner;
import com.azure.resourcemanager.oracledatabase.models.ShapeFamily;

/**
 * An instance of this class provides access to all the operations defined in GiMinorVersionsClient.
 */
public interface GiMinorVersionsClient {
    /**
     * List GiMinorVersion resources by GiVersion.
     * 
     * @param location The name of the Azure region.
     * @param giversionname GiVersion name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a GiMinorVersion list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<GiMinorVersionInner> listByParent(String location, String giversionname);

    /**
     * List GiMinorVersion resources by GiVersion.
     * 
     * @param location The name of the Azure region.
     * @param giversionname GiVersion name.
     * @param shapeFamily If provided, filters the results to the set of database versions which are supported for the
     * given shape family.
     * @param zone Filters the result for the given Azure Availability Zone.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a GiMinorVersion list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<GiMinorVersionInner> listByParent(String location, String giversionname, ShapeFamily shapeFamily,
        String zone, Context context);

    /**
     * Get a GiMinorVersion.
     * 
     * @param location The name of the Azure region.
     * @param giversionname GiVersion name.
     * @param giMinorVersionName The name of the GiMinorVersion.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a GiMinorVersion along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<GiMinorVersionInner> getWithResponse(String location, String giversionname, String giMinorVersionName,
        Context context);

    /**
     * Get a GiMinorVersion.
     * 
     * @param location The name of the Azure region.
     * @param giversionname GiVersion name.
     * @param giMinorVersionName The name of the GiMinorVersion.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a GiMinorVersion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GiMinorVersionInner get(String location, String giversionname, String giMinorVersionName);
}
