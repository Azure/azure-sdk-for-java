// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.time.OffsetDateTime;
import java.util.List;

/**
 * Autonomous Database base resource model.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "dataBaseType",
    defaultImpl = AutonomousDatabaseBaseProperties.class,
    visible = true)
@JsonTypeName("AutonomousDatabaseBaseProperties")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "Clone", value = AutonomousDatabaseCloneProperties.class),
    @JsonSubTypes.Type(name = "Regular", value = AutonomousDatabaseProperties.class) })
@Fluent
public class AutonomousDatabaseBaseProperties {
    /*
     * Database type to be created.
     */
    @JsonTypeId
    @JsonProperty(value = "dataBaseType", required = true)
    private DataBaseType dataBaseType;

    /*
     * Admin password.
     */
    @JsonProperty(value = "adminPassword")
    private String adminPassword;

    /*
     * The maintenance schedule type of the Autonomous Database Serverless.
     */
    @JsonProperty(value = "autonomousMaintenanceScheduleType")
    private AutonomousMaintenanceScheduleType autonomousMaintenanceScheduleType;

    /*
     * The character set for the autonomous database.
     */
    @JsonProperty(value = "characterSet")
    private String characterSet;

    /*
     * The compute amount (CPUs) available to the database.
     */
    @JsonProperty(value = "computeCount")
    private Float computeCount;

    /*
     * The compute model of the Autonomous Database.
     */
    @JsonProperty(value = "computeModel")
    private ComputeModel computeModel;

    /*
     * The number of CPU cores to be made available to the database.
     */
    @JsonProperty(value = "cpuCoreCount")
    private Integer cpuCoreCount;

    /*
     * Customer Contacts.
     */
    @JsonProperty(value = "customerContacts")
    private List<CustomerContact> customerContacts;

    /*
     * The quantity of data in the database, in terabytes.
     */
    @JsonProperty(value = "dataStorageSizeInTbs")
    private Integer dataStorageSizeInTbs;

    /*
     * The size, in gigabytes, of the data volume that will be created and attached to the database.
     */
    @JsonProperty(value = "dataStorageSizeInGbs")
    private Integer dataStorageSizeInGbs;

    /*
     * A valid Oracle Database version for Autonomous Database.
     */
    @JsonProperty(value = "dbVersion")
    private String dbVersion;

    /*
     * The Autonomous Database workload type
     */
    @JsonProperty(value = "dbWorkload")
    private WorkloadType dbWorkload;

    /*
     * The user-friendly name for the Autonomous Database.
     */
    @JsonProperty(value = "displayName")
    private String displayName;

    /*
     * Indicates if auto scaling is enabled for the Autonomous Database CPU core count.
     */
    @JsonProperty(value = "isAutoScalingEnabled")
    private Boolean isAutoScalingEnabled;

    /*
     * Indicates if auto scaling is enabled for the Autonomous Database storage.
     */
    @JsonProperty(value = "isAutoScalingForStorageEnabled")
    private Boolean isAutoScalingForStorageEnabled;

    /*
     * The list of [OCIDs](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of standby databases located in Autonomous Data Guard remote regions that are associated with the source database. Note that for Autonomous Database Serverless instances, standby databases located in the same region as the source primary database do not have OCIDs.
     */
    @JsonProperty(value = "peerDbIds", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> peerDbIds;

    /*
     * The database OCID of the Disaster Recovery peer database, which is located in a different region from the current peer database.
     */
    @JsonProperty(value = "peerDbId")
    private String peerDbId;

    /*
     * Indicates whether the Autonomous Database has local or called in-region Data Guard enabled.
     */
    @JsonProperty(value = "isLocalDataGuardEnabled")
    private Boolean isLocalDataGuardEnabled;

    /*
     * Indicates whether the Autonomous Database has Cross Region Data Guard enabled.
     */
    @JsonProperty(value = "isRemoteDataGuardEnabled", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean isRemoteDataGuardEnabled;

    /*
     * Indicates the local disaster recovery (DR) type of the Autonomous Database Serverless instance.Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover.Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover.
     */
    @JsonProperty(value = "localDisasterRecoveryType", access = JsonProperty.Access.WRITE_ONLY)
    private DisasterRecoveryType localDisasterRecoveryType;

    /*
     * Local Autonomous Disaster Recovery standby database details.
     */
    @JsonProperty(value = "localStandbyDb", access = JsonProperty.Access.WRITE_ONLY)
    private AutonomousDatabaseStandbySummary localStandbyDb;

    /*
     * Indicates the number of seconds of data loss for a Data Guard failover.
     */
    @JsonProperty(value = "failedDataRecoveryInSeconds", access = JsonProperty.Access.WRITE_ONLY)
    private Integer failedDataRecoveryInSeconds;

    /*
     * Specifies if the Autonomous Database requires mTLS connections.
     */
    @JsonProperty(value = "isMtlsConnectionRequired")
    private Boolean isMtlsConnectionRequired;

    /*
     * Specifies if the Autonomous Database preview version is being provisioned.
     */
    @JsonProperty(value = "isPreviewVersionWithServiceTermsAccepted")
    private Boolean isPreviewVersionWithServiceTermsAccepted;

    /*
     * The Oracle license model that applies to the Oracle Autonomous Database. The default is LICENSE_INCLUDED.
     */
    @JsonProperty(value = "licenseModel")
    private LicenseModel licenseModel;

    /*
     * The character set for the Autonomous Database.
     */
    @JsonProperty(value = "ncharacterSet")
    private String ncharacterSet;

    /*
     * Additional information about the current lifecycle state.
     */
    @JsonProperty(value = "lifecycleDetails", access = JsonProperty.Access.WRITE_ONLY)
    private String lifecycleDetails;

    /*
     * Azure resource provisioning state.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private AzureResourceProvisioningState provisioningState;

    /*
     * Views lifecycleState
     */
    @JsonProperty(value = "lifecycleState", access = JsonProperty.Access.WRITE_ONLY)
    private AutonomousDatabaseLifecycleState lifecycleState;

    /*
     * The list of scheduled operations.
     */
    @JsonProperty(value = "scheduledOperations")
    private ScheduledOperationsType scheduledOperations;

    /*
     * The private endpoint Ip address for the resource.
     */
    @JsonProperty(value = "privateEndpointIp")
    private String privateEndpointIp;

    /*
     * The resource's private endpoint label.
     */
    @JsonProperty(value = "privateEndpointLabel")
    private String privateEndpointLabel;

    /*
     * HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.
     */
    @JsonProperty(value = "ociUrl", access = JsonProperty.Access.WRITE_ONLY)
    private String ociUrl;

    /*
     * Client subnet
     */
    @JsonProperty(value = "subnetId")
    private String subnetId;

    /*
     * VNET for network connectivity
     */
    @JsonProperty(value = "vnetId")
    private String vnetId;

    /*
     * The date and time that the database was created.
     */
    @JsonProperty(value = "timeCreated", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime timeCreated;

    /*
     * The date and time when maintenance will begin.
     */
    @JsonProperty(value = "timeMaintenanceBegin", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime timeMaintenanceBegin;

    /*
     * The date and time when maintenance will end.
     */
    @JsonProperty(value = "timeMaintenanceEnd", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime timeMaintenanceEnd;

    /*
     * The current amount of storage in use for user and system data, in terabytes (TB).
     */
    @JsonProperty(value = "actualUsedDataStorageSizeInTbs", access = JsonProperty.Access.WRITE_ONLY)
    private Double actualUsedDataStorageSizeInTbs;

    /*
     * The amount of storage currently allocated for the database tables and billed for, rounded up.
     */
    @JsonProperty(value = "allocatedStorageSizeInTbs", access = JsonProperty.Access.WRITE_ONLY)
    private Double allocatedStorageSizeInTbs;

    /*
     * Information about Oracle APEX Application Development.
     */
    @JsonProperty(value = "apexDetails", access = JsonProperty.Access.WRITE_ONLY)
    private ApexDetailsType apexDetails;

    /*
     * List of Oracle Database versions available for a database upgrade. If there are no version upgrades available, this list is empty.
     */
    @JsonProperty(value = "availableUpgradeVersions", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> availableUpgradeVersions;

    /*
     * The connection string used to connect to the Autonomous Database.
     */
    @JsonProperty(value = "connectionStrings", access = JsonProperty.Access.WRITE_ONLY)
    private ConnectionStringType connectionStrings;

    /*
     * The URLs for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN. 
     */
    @JsonProperty(value = "connectionUrls", access = JsonProperty.Access.WRITE_ONLY)
    private ConnectionUrlType connectionUrls;

    /*
     * Status of the Data Safe registration for this Autonomous Database.
     */
    @JsonProperty(value = "dataSafeStatus", access = JsonProperty.Access.WRITE_ONLY)
    private DataSafeStatusType dataSafeStatus;

    /*
     * The Oracle Database Edition that applies to the Autonomous databases.
     */
    @JsonProperty(value = "databaseEdition")
    private DatabaseEditionType databaseEdition;

    /*
     * Autonomous Database ID
     */
    @JsonProperty(value = "autonomousDatabaseId")
    private String autonomousDatabaseId;

    /*
     * The area assigned to In-Memory tables in Autonomous Database.
     */
    @JsonProperty(value = "inMemoryAreaInGbs", access = JsonProperty.Access.WRITE_ONLY)
    private Integer inMemoryAreaInGbs;

    /*
     * Indicates if the Autonomous Database version is a preview version.
     */
    @JsonProperty(value = "isPreview", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean isPreview;

    /*
     * Parameter that allows users to select an acceptable maximum data loss limit in seconds, up to which Automatic Failover will be triggered when necessary for a Local Autonomous Data Guard
     */
    @JsonProperty(value = "localAdgAutoFailoverMaxDataLossLimit")
    private Integer localAdgAutoFailoverMaxDataLossLimit;

    /*
     * The amount of memory (in GBs) enabled per ECPU or OCPU.
     */
    @JsonProperty(value = "memoryPerOracleComputeUnitInGbs", access = JsonProperty.Access.WRITE_ONLY)
    private Integer memoryPerOracleComputeUnitInGbs;

    /*
     * Indicates the Autonomous Database mode.
     */
    @JsonProperty(value = "openMode")
    private OpenModeType openMode;

    /*
     * Status of Operations Insights for this Autonomous Database.
     */
    @JsonProperty(value = "operationsInsightsStatus", access = JsonProperty.Access.WRITE_ONLY)
    private OperationsInsightsStatusType operationsInsightsStatus;

    /*
     * The Autonomous Database permission level.
     */
    @JsonProperty(value = "permissionLevel")
    private PermissionLevelType permissionLevel;

    /*
     * The private endpoint for the resource.
     */
    @JsonProperty(value = "privateEndpoint", access = JsonProperty.Access.WRITE_ONLY)
    private String privateEndpoint;

    /*
     * An array of CPU values that an Autonomous Database can be scaled to.
     */
    @JsonProperty(value = "provisionableCpus", access = JsonProperty.Access.WRITE_ONLY)
    private List<Integer> provisionableCpus;

    /*
     * The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
     */
    @JsonProperty(value = "role")
    private RoleType role;

    /*
     * The URL of the Service Console for the Autonomous Database.
     */
    @JsonProperty(value = "serviceConsoleUrl", access = JsonProperty.Access.WRITE_ONLY)
    private String serviceConsoleUrl;

    /*
     * The SQL Web Developer URL for the Oracle Autonomous Database.
     */
    @JsonProperty(value = "sqlWebDeveloperUrl", access = JsonProperty.Access.WRITE_ONLY)
    private String sqlWebDeveloperUrl;

    /*
     * The list of regions that support the creation of an Autonomous Database clone or an Autonomous Data Guard standby database.
     */
    @JsonProperty(value = "supportedRegionsToCloneTo", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> supportedRegionsToCloneTo;

    /*
     * The date and time the Autonomous Data Guard role was switched for the Autonomous Database.
     */
    @JsonProperty(value = "timeDataGuardRoleChanged", access = JsonProperty.Access.WRITE_ONLY)
    private String timeDataGuardRoleChanged;

    /*
     * The date and time the Always Free database will be automatically deleted because of inactivity.
     */
    @JsonProperty(value = "timeDeletionOfFreeAutonomousDatabase", access = JsonProperty.Access.WRITE_ONLY)
    private String timeDeletionOfFreeAutonomousDatabase;

    /*
     * The date and time that Autonomous Data Guard was enabled for an Autonomous Database where the standby was provisioned in the same region as the primary database.
     */
    @JsonProperty(value = "timeLocalDataGuardEnabled", access = JsonProperty.Access.WRITE_ONLY)
    private String timeLocalDataGuardEnabled;

    /*
     * The timestamp of the last failover operation.
     */
    @JsonProperty(value = "timeOfLastFailover", access = JsonProperty.Access.WRITE_ONLY)
    private String timeOfLastFailover;

    /*
     * The date and time when last refresh happened.
     */
    @JsonProperty(value = "timeOfLastRefresh", access = JsonProperty.Access.WRITE_ONLY)
    private String timeOfLastRefresh;

    /*
     * The refresh point timestamp (UTC).
     */
    @JsonProperty(value = "timeOfLastRefreshPoint", access = JsonProperty.Access.WRITE_ONLY)
    private String timeOfLastRefreshPoint;

    /*
     * The timestamp of the last switchover operation for the Autonomous Database.
     */
    @JsonProperty(value = "timeOfLastSwitchover", access = JsonProperty.Access.WRITE_ONLY)
    private String timeOfLastSwitchover;

    /*
     * The date and time the Always Free database will be stopped because of inactivity.
     */
    @JsonProperty(value = "timeReclamationOfFreeAutonomousDatabase", access = JsonProperty.Access.WRITE_ONLY)
    private String timeReclamationOfFreeAutonomousDatabase;

    /*
     * The storage space consumed by Autonomous Database in GBs.
     */
    @JsonProperty(value = "usedDataStorageSizeInGbs", access = JsonProperty.Access.WRITE_ONLY)
    private Integer usedDataStorageSizeInGbs;

    /*
     * The amount of storage that has been used, in terabytes.
     */
    @JsonProperty(value = "usedDataStorageSizeInTbs", access = JsonProperty.Access.WRITE_ONLY)
    private Integer usedDataStorageSizeInTbs;

    /*
     * Database ocid
     */
    @JsonProperty(value = "ocid", access = JsonProperty.Access.WRITE_ONLY)
    private String ocid;

    /*
     * Retention period, in days, for long-term backups
     */
    @JsonProperty(value = "backupRetentionPeriodInDays")
    private Integer backupRetentionPeriodInDays;

    /*
     * The client IP access control list (ACL). This is an array of CIDR notations and/or IP addresses. Values should be separate strings, separated by commas. Example: ['1.1.1.1','1.1.1.0/24','1.1.2.25']
     */
    @JsonProperty(value = "whitelistedIps")
    private List<String> whitelistedIps;

    /**
     * Creates an instance of AutonomousDatabaseBaseProperties class.
     */
    public AutonomousDatabaseBaseProperties() {
        this.dataBaseType = DataBaseType.fromString("AutonomousDatabaseBaseProperties");
    }

    /**
     * Get the dataBaseType property: Database type to be created.
     * 
     * @return the dataBaseType value.
     */
    public DataBaseType dataBaseType() {
        return this.dataBaseType;
    }

    /**
     * Get the adminPassword property: Admin password.
     * 
     * @return the adminPassword value.
     */
    public String adminPassword() {
        return this.adminPassword;
    }

    /**
     * Set the adminPassword property: Admin password.
     * 
     * @param adminPassword the adminPassword value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withAdminPassword(String adminPassword) {
        this.adminPassword = adminPassword;
        return this;
    }

    /**
     * Get the autonomousMaintenanceScheduleType property: The maintenance schedule type of the Autonomous Database
     * Serverless.
     * 
     * @return the autonomousMaintenanceScheduleType value.
     */
    public AutonomousMaintenanceScheduleType autonomousMaintenanceScheduleType() {
        return this.autonomousMaintenanceScheduleType;
    }

    /**
     * Set the autonomousMaintenanceScheduleType property: The maintenance schedule type of the Autonomous Database
     * Serverless.
     * 
     * @param autonomousMaintenanceScheduleType the autonomousMaintenanceScheduleType value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties
        withAutonomousMaintenanceScheduleType(AutonomousMaintenanceScheduleType autonomousMaintenanceScheduleType) {
        this.autonomousMaintenanceScheduleType = autonomousMaintenanceScheduleType;
        return this;
    }

    /**
     * Get the characterSet property: The character set for the autonomous database.
     * 
     * @return the characterSet value.
     */
    public String characterSet() {
        return this.characterSet;
    }

    /**
     * Set the characterSet property: The character set for the autonomous database.
     * 
     * @param characterSet the characterSet value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withCharacterSet(String characterSet) {
        this.characterSet = characterSet;
        return this;
    }

    /**
     * Get the computeCount property: The compute amount (CPUs) available to the database.
     * 
     * @return the computeCount value.
     */
    public Float computeCount() {
        return this.computeCount;
    }

    /**
     * Set the computeCount property: The compute amount (CPUs) available to the database.
     * 
     * @param computeCount the computeCount value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withComputeCount(Float computeCount) {
        this.computeCount = computeCount;
        return this;
    }

    /**
     * Get the computeModel property: The compute model of the Autonomous Database.
     * 
     * @return the computeModel value.
     */
    public ComputeModel computeModel() {
        return this.computeModel;
    }

    /**
     * Set the computeModel property: The compute model of the Autonomous Database.
     * 
     * @param computeModel the computeModel value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withComputeModel(ComputeModel computeModel) {
        this.computeModel = computeModel;
        return this;
    }

    /**
     * Get the cpuCoreCount property: The number of CPU cores to be made available to the database.
     * 
     * @return the cpuCoreCount value.
     */
    public Integer cpuCoreCount() {
        return this.cpuCoreCount;
    }

    /**
     * Set the cpuCoreCount property: The number of CPU cores to be made available to the database.
     * 
     * @param cpuCoreCount the cpuCoreCount value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withCpuCoreCount(Integer cpuCoreCount) {
        this.cpuCoreCount = cpuCoreCount;
        return this;
    }

    /**
     * Get the customerContacts property: Customer Contacts.
     * 
     * @return the customerContacts value.
     */
    public List<CustomerContact> customerContacts() {
        return this.customerContacts;
    }

    /**
     * Set the customerContacts property: Customer Contacts.
     * 
     * @param customerContacts the customerContacts value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withCustomerContacts(List<CustomerContact> customerContacts) {
        this.customerContacts = customerContacts;
        return this;
    }

    /**
     * Get the dataStorageSizeInTbs property: The quantity of data in the database, in terabytes.
     * 
     * @return the dataStorageSizeInTbs value.
     */
    public Integer dataStorageSizeInTbs() {
        return this.dataStorageSizeInTbs;
    }

    /**
     * Set the dataStorageSizeInTbs property: The quantity of data in the database, in terabytes.
     * 
     * @param dataStorageSizeInTbs the dataStorageSizeInTbs value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withDataStorageSizeInTbs(Integer dataStorageSizeInTbs) {
        this.dataStorageSizeInTbs = dataStorageSizeInTbs;
        return this;
    }

    /**
     * Get the dataStorageSizeInGbs property: The size, in gigabytes, of the data volume that will be created and
     * attached to the database.
     * 
     * @return the dataStorageSizeInGbs value.
     */
    public Integer dataStorageSizeInGbs() {
        return this.dataStorageSizeInGbs;
    }

    /**
     * Set the dataStorageSizeInGbs property: The size, in gigabytes, of the data volume that will be created and
     * attached to the database.
     * 
     * @param dataStorageSizeInGbs the dataStorageSizeInGbs value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withDataStorageSizeInGbs(Integer dataStorageSizeInGbs) {
        this.dataStorageSizeInGbs = dataStorageSizeInGbs;
        return this;
    }

    /**
     * Get the dbVersion property: A valid Oracle Database version for Autonomous Database.
     * 
     * @return the dbVersion value.
     */
    public String dbVersion() {
        return this.dbVersion;
    }

    /**
     * Set the dbVersion property: A valid Oracle Database version for Autonomous Database.
     * 
     * @param dbVersion the dbVersion value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withDbVersion(String dbVersion) {
        this.dbVersion = dbVersion;
        return this;
    }

    /**
     * Get the dbWorkload property: The Autonomous Database workload type.
     * 
     * @return the dbWorkload value.
     */
    public WorkloadType dbWorkload() {
        return this.dbWorkload;
    }

    /**
     * Set the dbWorkload property: The Autonomous Database workload type.
     * 
     * @param dbWorkload the dbWorkload value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withDbWorkload(WorkloadType dbWorkload) {
        this.dbWorkload = dbWorkload;
        return this;
    }

    /**
     * Get the displayName property: The user-friendly name for the Autonomous Database.
     * 
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: The user-friendly name for the Autonomous Database.
     * 
     * @param displayName the displayName value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the isAutoScalingEnabled property: Indicates if auto scaling is enabled for the Autonomous Database CPU core
     * count.
     * 
     * @return the isAutoScalingEnabled value.
     */
    public Boolean isAutoScalingEnabled() {
        return this.isAutoScalingEnabled;
    }

    /**
     * Set the isAutoScalingEnabled property: Indicates if auto scaling is enabled for the Autonomous Database CPU core
     * count.
     * 
     * @param isAutoScalingEnabled the isAutoScalingEnabled value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withIsAutoScalingEnabled(Boolean isAutoScalingEnabled) {
        this.isAutoScalingEnabled = isAutoScalingEnabled;
        return this;
    }

    /**
     * Get the isAutoScalingForStorageEnabled property: Indicates if auto scaling is enabled for the Autonomous Database
     * storage.
     * 
     * @return the isAutoScalingForStorageEnabled value.
     */
    public Boolean isAutoScalingForStorageEnabled() {
        return this.isAutoScalingForStorageEnabled;
    }

    /**
     * Set the isAutoScalingForStorageEnabled property: Indicates if auto scaling is enabled for the Autonomous Database
     * storage.
     * 
     * @param isAutoScalingForStorageEnabled the isAutoScalingForStorageEnabled value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withIsAutoScalingForStorageEnabled(Boolean isAutoScalingForStorageEnabled) {
        this.isAutoScalingForStorageEnabled = isAutoScalingForStorageEnabled;
        return this;
    }

    /**
     * Get the peerDbIds property: The list of
     * [OCIDs](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of standby databases located in
     * Autonomous Data Guard remote regions that are associated with the source database. Note that for Autonomous
     * Database Serverless instances, standby databases located in the same region as the source primary database do not
     * have OCIDs.
     * 
     * @return the peerDbIds value.
     */
    public List<String> peerDbIds() {
        return this.peerDbIds;
    }

    /**
     * Get the peerDbId property: The database OCID of the Disaster Recovery peer database, which is located in a
     * different region from the current peer database.
     * 
     * @return the peerDbId value.
     */
    public String peerDbId() {
        return this.peerDbId;
    }

    /**
     * Set the peerDbId property: The database OCID of the Disaster Recovery peer database, which is located in a
     * different region from the current peer database.
     * 
     * @param peerDbId the peerDbId value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withPeerDbId(String peerDbId) {
        this.peerDbId = peerDbId;
        return this;
    }

    /**
     * Get the isLocalDataGuardEnabled property: Indicates whether the Autonomous Database has local or called in-region
     * Data Guard enabled.
     * 
     * @return the isLocalDataGuardEnabled value.
     */
    public Boolean isLocalDataGuardEnabled() {
        return this.isLocalDataGuardEnabled;
    }

    /**
     * Set the isLocalDataGuardEnabled property: Indicates whether the Autonomous Database has local or called in-region
     * Data Guard enabled.
     * 
     * @param isLocalDataGuardEnabled the isLocalDataGuardEnabled value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withIsLocalDataGuardEnabled(Boolean isLocalDataGuardEnabled) {
        this.isLocalDataGuardEnabled = isLocalDataGuardEnabled;
        return this;
    }

    /**
     * Get the isRemoteDataGuardEnabled property: Indicates whether the Autonomous Database has Cross Region Data Guard
     * enabled.
     * 
     * @return the isRemoteDataGuardEnabled value.
     */
    public Boolean isRemoteDataGuardEnabled() {
        return this.isRemoteDataGuardEnabled;
    }

    /**
     * Get the localDisasterRecoveryType property: Indicates the local disaster recovery (DR) type of the Autonomous
     * Database Serverless instance.Autonomous Data Guard (ADG) DR type provides business critical DR with a faster
     * recovery time objective (RTO) during failover or switchover.Backup-based DR type provides lower cost DR with a
     * slower RTO during failover or switchover.
     * 
     * @return the localDisasterRecoveryType value.
     */
    public DisasterRecoveryType localDisasterRecoveryType() {
        return this.localDisasterRecoveryType;
    }

    /**
     * Get the localStandbyDb property: Local Autonomous Disaster Recovery standby database details.
     * 
     * @return the localStandbyDb value.
     */
    public AutonomousDatabaseStandbySummary localStandbyDb() {
        return this.localStandbyDb;
    }

    /**
     * Get the failedDataRecoveryInSeconds property: Indicates the number of seconds of data loss for a Data Guard
     * failover.
     * 
     * @return the failedDataRecoveryInSeconds value.
     */
    public Integer failedDataRecoveryInSeconds() {
        return this.failedDataRecoveryInSeconds;
    }

    /**
     * Get the isMtlsConnectionRequired property: Specifies if the Autonomous Database requires mTLS connections.
     * 
     * @return the isMtlsConnectionRequired value.
     */
    public Boolean isMtlsConnectionRequired() {
        return this.isMtlsConnectionRequired;
    }

    /**
     * Set the isMtlsConnectionRequired property: Specifies if the Autonomous Database requires mTLS connections.
     * 
     * @param isMtlsConnectionRequired the isMtlsConnectionRequired value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withIsMtlsConnectionRequired(Boolean isMtlsConnectionRequired) {
        this.isMtlsConnectionRequired = isMtlsConnectionRequired;
        return this;
    }

    /**
     * Get the isPreviewVersionWithServiceTermsAccepted property: Specifies if the Autonomous Database preview version
     * is being provisioned.
     * 
     * @return the isPreviewVersionWithServiceTermsAccepted value.
     */
    public Boolean isPreviewVersionWithServiceTermsAccepted() {
        return this.isPreviewVersionWithServiceTermsAccepted;
    }

    /**
     * Set the isPreviewVersionWithServiceTermsAccepted property: Specifies if the Autonomous Database preview version
     * is being provisioned.
     * 
     * @param isPreviewVersionWithServiceTermsAccepted the isPreviewVersionWithServiceTermsAccepted value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties
        withIsPreviewVersionWithServiceTermsAccepted(Boolean isPreviewVersionWithServiceTermsAccepted) {
        this.isPreviewVersionWithServiceTermsAccepted = isPreviewVersionWithServiceTermsAccepted;
        return this;
    }

    /**
     * Get the licenseModel property: The Oracle license model that applies to the Oracle Autonomous Database. The
     * default is LICENSE_INCLUDED.
     * 
     * @return the licenseModel value.
     */
    public LicenseModel licenseModel() {
        return this.licenseModel;
    }

    /**
     * Set the licenseModel property: The Oracle license model that applies to the Oracle Autonomous Database. The
     * default is LICENSE_INCLUDED.
     * 
     * @param licenseModel the licenseModel value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withLicenseModel(LicenseModel licenseModel) {
        this.licenseModel = licenseModel;
        return this;
    }

    /**
     * Get the ncharacterSet property: The character set for the Autonomous Database.
     * 
     * @return the ncharacterSet value.
     */
    public String ncharacterSet() {
        return this.ncharacterSet;
    }

    /**
     * Set the ncharacterSet property: The character set for the Autonomous Database.
     * 
     * @param ncharacterSet the ncharacterSet value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withNcharacterSet(String ncharacterSet) {
        this.ncharacterSet = ncharacterSet;
        return this;
    }

    /**
     * Get the lifecycleDetails property: Additional information about the current lifecycle state.
     * 
     * @return the lifecycleDetails value.
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }

    /**
     * Get the provisioningState property: Azure resource provisioning state.
     * 
     * @return the provisioningState value.
     */
    public AzureResourceProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the lifecycleState property: Views lifecycleState.
     * 
     * @return the lifecycleState value.
     */
    public AutonomousDatabaseLifecycleState lifecycleState() {
        return this.lifecycleState;
    }

    /**
     * Get the scheduledOperations property: The list of scheduled operations.
     * 
     * @return the scheduledOperations value.
     */
    public ScheduledOperationsType scheduledOperations() {
        return this.scheduledOperations;
    }

    /**
     * Set the scheduledOperations property: The list of scheduled operations.
     * 
     * @param scheduledOperations the scheduledOperations value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withScheduledOperations(ScheduledOperationsType scheduledOperations) {
        this.scheduledOperations = scheduledOperations;
        return this;
    }

    /**
     * Get the privateEndpointIp property: The private endpoint Ip address for the resource.
     * 
     * @return the privateEndpointIp value.
     */
    public String privateEndpointIp() {
        return this.privateEndpointIp;
    }

    /**
     * Set the privateEndpointIp property: The private endpoint Ip address for the resource.
     * 
     * @param privateEndpointIp the privateEndpointIp value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withPrivateEndpointIp(String privateEndpointIp) {
        this.privateEndpointIp = privateEndpointIp;
        return this;
    }

    /**
     * Get the privateEndpointLabel property: The resource's private endpoint label.
     * 
     * @return the privateEndpointLabel value.
     */
    public String privateEndpointLabel() {
        return this.privateEndpointLabel;
    }

    /**
     * Set the privateEndpointLabel property: The resource's private endpoint label.
     * 
     * @param privateEndpointLabel the privateEndpointLabel value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withPrivateEndpointLabel(String privateEndpointLabel) {
        this.privateEndpointLabel = privateEndpointLabel;
        return this;
    }

    /**
     * Get the ociUrl property: HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.
     * 
     * @return the ociUrl value.
     */
    public String ociUrl() {
        return this.ociUrl;
    }

    /**
     * Get the subnetId property: Client subnet.
     * 
     * @return the subnetId value.
     */
    public String subnetId() {
        return this.subnetId;
    }

    /**
     * Set the subnetId property: Client subnet.
     * 
     * @param subnetId the subnetId value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withSubnetId(String subnetId) {
        this.subnetId = subnetId;
        return this;
    }

    /**
     * Get the vnetId property: VNET for network connectivity.
     * 
     * @return the vnetId value.
     */
    public String vnetId() {
        return this.vnetId;
    }

    /**
     * Set the vnetId property: VNET for network connectivity.
     * 
     * @param vnetId the vnetId value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withVnetId(String vnetId) {
        this.vnetId = vnetId;
        return this;
    }

    /**
     * Get the timeCreated property: The date and time that the database was created.
     * 
     * @return the timeCreated value.
     */
    public OffsetDateTime timeCreated() {
        return this.timeCreated;
    }

    /**
     * Get the timeMaintenanceBegin property: The date and time when maintenance will begin.
     * 
     * @return the timeMaintenanceBegin value.
     */
    public OffsetDateTime timeMaintenanceBegin() {
        return this.timeMaintenanceBegin;
    }

    /**
     * Get the timeMaintenanceEnd property: The date and time when maintenance will end.
     * 
     * @return the timeMaintenanceEnd value.
     */
    public OffsetDateTime timeMaintenanceEnd() {
        return this.timeMaintenanceEnd;
    }

    /**
     * Get the actualUsedDataStorageSizeInTbs property: The current amount of storage in use for user and system data,
     * in terabytes (TB).
     * 
     * @return the actualUsedDataStorageSizeInTbs value.
     */
    public Double actualUsedDataStorageSizeInTbs() {
        return this.actualUsedDataStorageSizeInTbs;
    }

    /**
     * Get the allocatedStorageSizeInTbs property: The amount of storage currently allocated for the database tables and
     * billed for, rounded up.
     * 
     * @return the allocatedStorageSizeInTbs value.
     */
    public Double allocatedStorageSizeInTbs() {
        return this.allocatedStorageSizeInTbs;
    }

    /**
     * Get the apexDetails property: Information about Oracle APEX Application Development.
     * 
     * @return the apexDetails value.
     */
    public ApexDetailsType apexDetails() {
        return this.apexDetails;
    }

    /**
     * Get the availableUpgradeVersions property: List of Oracle Database versions available for a database upgrade. If
     * there are no version upgrades available, this list is empty.
     * 
     * @return the availableUpgradeVersions value.
     */
    public List<String> availableUpgradeVersions() {
        return this.availableUpgradeVersions;
    }

    /**
     * Get the connectionStrings property: The connection string used to connect to the Autonomous Database.
     * 
     * @return the connectionStrings value.
     */
    public ConnectionStringType connectionStrings() {
        return this.connectionStrings;
    }

    /**
     * Get the connectionUrls property: The URLs for accessing Oracle Application Express (APEX) and SQL Developer Web
     * with a browser from a Compute instance within your VCN or that has a direct connection to your VCN.
     * 
     * @return the connectionUrls value.
     */
    public ConnectionUrlType connectionUrls() {
        return this.connectionUrls;
    }

    /**
     * Get the dataSafeStatus property: Status of the Data Safe registration for this Autonomous Database.
     * 
     * @return the dataSafeStatus value.
     */
    public DataSafeStatusType dataSafeStatus() {
        return this.dataSafeStatus;
    }

    /**
     * Get the databaseEdition property: The Oracle Database Edition that applies to the Autonomous databases.
     * 
     * @return the databaseEdition value.
     */
    public DatabaseEditionType databaseEdition() {
        return this.databaseEdition;
    }

    /**
     * Set the databaseEdition property: The Oracle Database Edition that applies to the Autonomous databases.
     * 
     * @param databaseEdition the databaseEdition value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withDatabaseEdition(DatabaseEditionType databaseEdition) {
        this.databaseEdition = databaseEdition;
        return this;
    }

    /**
     * Get the autonomousDatabaseId property: Autonomous Database ID.
     * 
     * @return the autonomousDatabaseId value.
     */
    public String autonomousDatabaseId() {
        return this.autonomousDatabaseId;
    }

    /**
     * Set the autonomousDatabaseId property: Autonomous Database ID.
     * 
     * @param autonomousDatabaseId the autonomousDatabaseId value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withAutonomousDatabaseId(String autonomousDatabaseId) {
        this.autonomousDatabaseId = autonomousDatabaseId;
        return this;
    }

    /**
     * Get the inMemoryAreaInGbs property: The area assigned to In-Memory tables in Autonomous Database.
     * 
     * @return the inMemoryAreaInGbs value.
     */
    public Integer inMemoryAreaInGbs() {
        return this.inMemoryAreaInGbs;
    }

    /**
     * Get the isPreview property: Indicates if the Autonomous Database version is a preview version.
     * 
     * @return the isPreview value.
     */
    public Boolean isPreview() {
        return this.isPreview;
    }

    /**
     * Get the localAdgAutoFailoverMaxDataLossLimit property: Parameter that allows users to select an acceptable
     * maximum data loss limit in seconds, up to which Automatic Failover will be triggered when necessary for a Local
     * Autonomous Data Guard.
     * 
     * @return the localAdgAutoFailoverMaxDataLossLimit value.
     */
    public Integer localAdgAutoFailoverMaxDataLossLimit() {
        return this.localAdgAutoFailoverMaxDataLossLimit;
    }

    /**
     * Set the localAdgAutoFailoverMaxDataLossLimit property: Parameter that allows users to select an acceptable
     * maximum data loss limit in seconds, up to which Automatic Failover will be triggered when necessary for a Local
     * Autonomous Data Guard.
     * 
     * @param localAdgAutoFailoverMaxDataLossLimit the localAdgAutoFailoverMaxDataLossLimit value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties
        withLocalAdgAutoFailoverMaxDataLossLimit(Integer localAdgAutoFailoverMaxDataLossLimit) {
        this.localAdgAutoFailoverMaxDataLossLimit = localAdgAutoFailoverMaxDataLossLimit;
        return this;
    }

    /**
     * Get the memoryPerOracleComputeUnitInGbs property: The amount of memory (in GBs) enabled per ECPU or OCPU.
     * 
     * @return the memoryPerOracleComputeUnitInGbs value.
     */
    public Integer memoryPerOracleComputeUnitInGbs() {
        return this.memoryPerOracleComputeUnitInGbs;
    }

    /**
     * Get the openMode property: Indicates the Autonomous Database mode.
     * 
     * @return the openMode value.
     */
    public OpenModeType openMode() {
        return this.openMode;
    }

    /**
     * Set the openMode property: Indicates the Autonomous Database mode.
     * 
     * @param openMode the openMode value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withOpenMode(OpenModeType openMode) {
        this.openMode = openMode;
        return this;
    }

    /**
     * Get the operationsInsightsStatus property: Status of Operations Insights for this Autonomous Database.
     * 
     * @return the operationsInsightsStatus value.
     */
    public OperationsInsightsStatusType operationsInsightsStatus() {
        return this.operationsInsightsStatus;
    }

    /**
     * Get the permissionLevel property: The Autonomous Database permission level.
     * 
     * @return the permissionLevel value.
     */
    public PermissionLevelType permissionLevel() {
        return this.permissionLevel;
    }

    /**
     * Set the permissionLevel property: The Autonomous Database permission level.
     * 
     * @param permissionLevel the permissionLevel value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withPermissionLevel(PermissionLevelType permissionLevel) {
        this.permissionLevel = permissionLevel;
        return this;
    }

    /**
     * Get the privateEndpoint property: The private endpoint for the resource.
     * 
     * @return the privateEndpoint value.
     */
    public String privateEndpoint() {
        return this.privateEndpoint;
    }

    /**
     * Get the provisionableCpus property: An array of CPU values that an Autonomous Database can be scaled to.
     * 
     * @return the provisionableCpus value.
     */
    public List<Integer> provisionableCpus() {
        return this.provisionableCpus;
    }

    /**
     * Get the role property: The Data Guard role of the Autonomous Container Database or Autonomous Database, if
     * Autonomous Data Guard is enabled.
     * 
     * @return the role value.
     */
    public RoleType role() {
        return this.role;
    }

    /**
     * Set the role property: The Data Guard role of the Autonomous Container Database or Autonomous Database, if
     * Autonomous Data Guard is enabled.
     * 
     * @param role the role value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withRole(RoleType role) {
        this.role = role;
        return this;
    }

    /**
     * Get the serviceConsoleUrl property: The URL of the Service Console for the Autonomous Database.
     * 
     * @return the serviceConsoleUrl value.
     */
    public String serviceConsoleUrl() {
        return this.serviceConsoleUrl;
    }

    /**
     * Get the sqlWebDeveloperUrl property: The SQL Web Developer URL for the Oracle Autonomous Database.
     * 
     * @return the sqlWebDeveloperUrl value.
     */
    public String sqlWebDeveloperUrl() {
        return this.sqlWebDeveloperUrl;
    }

    /**
     * Get the supportedRegionsToCloneTo property: The list of regions that support the creation of an Autonomous
     * Database clone or an Autonomous Data Guard standby database.
     * 
     * @return the supportedRegionsToCloneTo value.
     */
    public List<String> supportedRegionsToCloneTo() {
        return this.supportedRegionsToCloneTo;
    }

    /**
     * Get the timeDataGuardRoleChanged property: The date and time the Autonomous Data Guard role was switched for the
     * Autonomous Database.
     * 
     * @return the timeDataGuardRoleChanged value.
     */
    public String timeDataGuardRoleChanged() {
        return this.timeDataGuardRoleChanged;
    }

    /**
     * Get the timeDeletionOfFreeAutonomousDatabase property: The date and time the Always Free database will be
     * automatically deleted because of inactivity.
     * 
     * @return the timeDeletionOfFreeAutonomousDatabase value.
     */
    public String timeDeletionOfFreeAutonomousDatabase() {
        return this.timeDeletionOfFreeAutonomousDatabase;
    }

    /**
     * Get the timeLocalDataGuardEnabled property: The date and time that Autonomous Data Guard was enabled for an
     * Autonomous Database where the standby was provisioned in the same region as the primary database.
     * 
     * @return the timeLocalDataGuardEnabled value.
     */
    public String timeLocalDataGuardEnabled() {
        return this.timeLocalDataGuardEnabled;
    }

    /**
     * Get the timeOfLastFailover property: The timestamp of the last failover operation.
     * 
     * @return the timeOfLastFailover value.
     */
    public String timeOfLastFailover() {
        return this.timeOfLastFailover;
    }

    /**
     * Get the timeOfLastRefresh property: The date and time when last refresh happened.
     * 
     * @return the timeOfLastRefresh value.
     */
    public String timeOfLastRefresh() {
        return this.timeOfLastRefresh;
    }

    /**
     * Get the timeOfLastRefreshPoint property: The refresh point timestamp (UTC).
     * 
     * @return the timeOfLastRefreshPoint value.
     */
    public String timeOfLastRefreshPoint() {
        return this.timeOfLastRefreshPoint;
    }

    /**
     * Get the timeOfLastSwitchover property: The timestamp of the last switchover operation for the Autonomous
     * Database.
     * 
     * @return the timeOfLastSwitchover value.
     */
    public String timeOfLastSwitchover() {
        return this.timeOfLastSwitchover;
    }

    /**
     * Get the timeReclamationOfFreeAutonomousDatabase property: The date and time the Always Free database will be
     * stopped because of inactivity.
     * 
     * @return the timeReclamationOfFreeAutonomousDatabase value.
     */
    public String timeReclamationOfFreeAutonomousDatabase() {
        return this.timeReclamationOfFreeAutonomousDatabase;
    }

    /**
     * Get the usedDataStorageSizeInGbs property: The storage space consumed by Autonomous Database in GBs.
     * 
     * @return the usedDataStorageSizeInGbs value.
     */
    public Integer usedDataStorageSizeInGbs() {
        return this.usedDataStorageSizeInGbs;
    }

    /**
     * Get the usedDataStorageSizeInTbs property: The amount of storage that has been used, in terabytes.
     * 
     * @return the usedDataStorageSizeInTbs value.
     */
    public Integer usedDataStorageSizeInTbs() {
        return this.usedDataStorageSizeInTbs;
    }

    /**
     * Get the ocid property: Database ocid.
     * 
     * @return the ocid value.
     */
    public String ocid() {
        return this.ocid;
    }

    /**
     * Get the backupRetentionPeriodInDays property: Retention period, in days, for long-term backups.
     * 
     * @return the backupRetentionPeriodInDays value.
     */
    public Integer backupRetentionPeriodInDays() {
        return this.backupRetentionPeriodInDays;
    }

    /**
     * Set the backupRetentionPeriodInDays property: Retention period, in days, for long-term backups.
     * 
     * @param backupRetentionPeriodInDays the backupRetentionPeriodInDays value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withBackupRetentionPeriodInDays(Integer backupRetentionPeriodInDays) {
        this.backupRetentionPeriodInDays = backupRetentionPeriodInDays;
        return this;
    }

    /**
     * Get the whitelistedIps property: The client IP access control list (ACL). This is an array of CIDR notations
     * and/or IP addresses. Values should be separate strings, separated by commas. Example:
     * ['1.1.1.1','1.1.1.0/24','1.1.2.25'].
     * 
     * @return the whitelistedIps value.
     */
    public List<String> whitelistedIps() {
        return this.whitelistedIps;
    }

    /**
     * Set the whitelistedIps property: The client IP access control list (ACL). This is an array of CIDR notations
     * and/or IP addresses. Values should be separate strings, separated by commas. Example:
     * ['1.1.1.1','1.1.1.0/24','1.1.2.25'].
     * 
     * @param whitelistedIps the whitelistedIps value to set.
     * @return the AutonomousDatabaseBaseProperties object itself.
     */
    public AutonomousDatabaseBaseProperties withWhitelistedIps(List<String> whitelistedIps) {
        this.whitelistedIps = whitelistedIps;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (customerContacts() != null) {
            customerContacts().forEach(e -> e.validate());
        }
        if (localStandbyDb() != null) {
            localStandbyDb().validate();
        }
        if (scheduledOperations() != null) {
            scheduledOperations().validate();
        }
        if (apexDetails() != null) {
            apexDetails().validate();
        }
        if (connectionStrings() != null) {
            connectionStrings().validate();
        }
        if (connectionUrls() != null) {
            connectionUrls().validate();
        }
    }
}
