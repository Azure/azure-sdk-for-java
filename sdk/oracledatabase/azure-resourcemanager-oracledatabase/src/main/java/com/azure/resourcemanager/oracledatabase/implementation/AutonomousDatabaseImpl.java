// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.oracledatabase.fluent.models.AutonomousDatabaseInner;
import com.azure.resourcemanager.oracledatabase.models.AutonomousDatabase;
import com.azure.resourcemanager.oracledatabase.models.AutonomousDatabaseBaseProperties;
import com.azure.resourcemanager.oracledatabase.models.AutonomousDatabaseUpdate;
import com.azure.resourcemanager.oracledatabase.models.AutonomousDatabaseUpdateProperties;
import com.azure.resourcemanager.oracledatabase.models.AutonomousDatabaseWalletFile;
import com.azure.resourcemanager.oracledatabase.models.GenerateAutonomousDatabaseWalletDetails;
import com.azure.resourcemanager.oracledatabase.models.PeerDbDetails;
import java.util.Collections;
import java.util.Map;

public final class AutonomousDatabaseImpl
    implements AutonomousDatabase, AutonomousDatabase.Definition, AutonomousDatabase.Update {
    private AutonomousDatabaseInner innerObject;

    private final com.azure.resourcemanager.oracledatabase.OracleDatabaseManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public AutonomousDatabaseBaseProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public AutonomousDatabaseInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.oracledatabase.OracleDatabaseManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String autonomousdatabasename;

    private AutonomousDatabaseUpdate updateProperties;

    public AutonomousDatabaseImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public AutonomousDatabase create() {
        this.innerObject = serviceManager.serviceClient()
            .getAutonomousDatabases()
            .createOrUpdate(resourceGroupName, autonomousdatabasename, this.innerModel(), Context.NONE);
        return this;
    }

    public AutonomousDatabase create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getAutonomousDatabases()
            .createOrUpdate(resourceGroupName, autonomousdatabasename, this.innerModel(), context);
        return this;
    }

    AutonomousDatabaseImpl(String name, com.azure.resourcemanager.oracledatabase.OracleDatabaseManager serviceManager) {
        this.innerObject = new AutonomousDatabaseInner();
        this.serviceManager = serviceManager;
        this.autonomousdatabasename = name;
    }

    public AutonomousDatabaseImpl update() {
        this.updateProperties = new AutonomousDatabaseUpdate();
        return this;
    }

    public AutonomousDatabase apply() {
        this.innerObject = serviceManager.serviceClient()
            .getAutonomousDatabases()
            .update(resourceGroupName, autonomousdatabasename, updateProperties, Context.NONE);
        return this;
    }

    public AutonomousDatabase apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getAutonomousDatabases()
            .update(resourceGroupName, autonomousdatabasename, updateProperties, context);
        return this;
    }

    AutonomousDatabaseImpl(AutonomousDatabaseInner innerObject,
        com.azure.resourcemanager.oracledatabase.OracleDatabaseManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.autonomousdatabasename
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "autonomousDatabases");
    }

    public AutonomousDatabase refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getAutonomousDatabases()
            .getByResourceGroupWithResponse(resourceGroupName, autonomousdatabasename, Context.NONE)
            .getValue();
        return this;
    }

    public AutonomousDatabase refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getAutonomousDatabases()
            .getByResourceGroupWithResponse(resourceGroupName, autonomousdatabasename, context)
            .getValue();
        return this;
    }

    public AutonomousDatabase failover(PeerDbDetails body) {
        return serviceManager.autonomousDatabases().failover(resourceGroupName, autonomousdatabasename, body);
    }

    public AutonomousDatabase failover(PeerDbDetails body, Context context) {
        return serviceManager.autonomousDatabases().failover(resourceGroupName, autonomousdatabasename, body, context);
    }

    public Response<AutonomousDatabaseWalletFile>
        generateWalletWithResponse(GenerateAutonomousDatabaseWalletDetails body, Context context) {
        return serviceManager.autonomousDatabases()
            .generateWalletWithResponse(resourceGroupName, autonomousdatabasename, body, context);
    }

    public AutonomousDatabaseWalletFile generateWallet(GenerateAutonomousDatabaseWalletDetails body) {
        return serviceManager.autonomousDatabases().generateWallet(resourceGroupName, autonomousdatabasename, body);
    }

    public AutonomousDatabase switchover(PeerDbDetails body) {
        return serviceManager.autonomousDatabases().switchover(resourceGroupName, autonomousdatabasename, body);
    }

    public AutonomousDatabase switchover(PeerDbDetails body, Context context) {
        return serviceManager.autonomousDatabases()
            .switchover(resourceGroupName, autonomousdatabasename, body, context);
    }

    public AutonomousDatabaseImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public AutonomousDatabaseImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public AutonomousDatabaseImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateProperties.withTags(tags);
            return this;
        }
    }

    public AutonomousDatabaseImpl withProperties(AutonomousDatabaseBaseProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public AutonomousDatabaseImpl withProperties(AutonomousDatabaseUpdateProperties properties) {
        this.updateProperties.withProperties(properties);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
