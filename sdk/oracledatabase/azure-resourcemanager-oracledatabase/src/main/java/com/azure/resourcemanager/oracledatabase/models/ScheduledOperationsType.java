// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The list of scheduled operations.
 */
@Fluent
public final class ScheduledOperationsType implements JsonSerializable<ScheduledOperationsType> {
    /*
     * Day of week
     */
    private DayOfWeek dayOfWeek;

    /*
     * auto start time. value must be of ISO-8601 format HH:mm
     */
    private String scheduledStartTime;

    /*
     * auto stop time. value must be of ISO-8601 format HH:mm
     */
    private String scheduledStopTime;

    /**
     * Creates an instance of ScheduledOperationsType class.
     */
    public ScheduledOperationsType() {
    }

    /**
     * Get the dayOfWeek property: Day of week.
     * 
     * @return the dayOfWeek value.
     */
    public DayOfWeek dayOfWeek() {
        return this.dayOfWeek;
    }

    /**
     * Set the dayOfWeek property: Day of week.
     * 
     * @param dayOfWeek the dayOfWeek value to set.
     * @return the ScheduledOperationsType object itself.
     */
    public ScheduledOperationsType withDayOfWeek(DayOfWeek dayOfWeek) {
        this.dayOfWeek = dayOfWeek;
        return this;
    }

    /**
     * Get the scheduledStartTime property: auto start time. value must be of ISO-8601 format HH:mm.
     * 
     * @return the scheduledStartTime value.
     */
    public String scheduledStartTime() {
        return this.scheduledStartTime;
    }

    /**
     * Set the scheduledStartTime property: auto start time. value must be of ISO-8601 format HH:mm.
     * 
     * @param scheduledStartTime the scheduledStartTime value to set.
     * @return the ScheduledOperationsType object itself.
     */
    public ScheduledOperationsType withScheduledStartTime(String scheduledStartTime) {
        this.scheduledStartTime = scheduledStartTime;
        return this;
    }

    /**
     * Get the scheduledStopTime property: auto stop time. value must be of ISO-8601 format HH:mm.
     * 
     * @return the scheduledStopTime value.
     */
    public String scheduledStopTime() {
        return this.scheduledStopTime;
    }

    /**
     * Set the scheduledStopTime property: auto stop time. value must be of ISO-8601 format HH:mm.
     * 
     * @param scheduledStopTime the scheduledStopTime value to set.
     * @return the ScheduledOperationsType object itself.
     */
    public ScheduledOperationsType withScheduledStopTime(String scheduledStopTime) {
        this.scheduledStopTime = scheduledStopTime;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (dayOfWeek() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property dayOfWeek in model ScheduledOperationsType"));
        } else {
            dayOfWeek().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ScheduledOperationsType.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("dayOfWeek", this.dayOfWeek);
        jsonWriter.writeStringField("scheduledStartTime", this.scheduledStartTime);
        jsonWriter.writeStringField("scheduledStopTime", this.scheduledStopTime);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ScheduledOperationsType from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ScheduledOperationsType if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ScheduledOperationsType.
     */
    public static ScheduledOperationsType fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ScheduledOperationsType deserializedScheduledOperationsType = new ScheduledOperationsType();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("dayOfWeek".equals(fieldName)) {
                    deserializedScheduledOperationsType.dayOfWeek = DayOfWeek.fromJson(reader);
                } else if ("scheduledStartTime".equals(fieldName)) {
                    deserializedScheduledOperationsType.scheduledStartTime = reader.getString();
                } else if ("scheduledStopTime".equals(fieldName)) {
                    deserializedScheduledOperationsType.scheduledStopTime = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedScheduledOperationsType;
        });
    }
}
