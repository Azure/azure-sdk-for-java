// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of NetworkAnchors.
 */
public interface NetworkAnchors {
    /**
     * List NetworkAnchor resources by subscription ID.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NetworkAnchor list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<NetworkAnchor> list();

    /**
     * List NetworkAnchor resources by subscription ID.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NetworkAnchor list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<NetworkAnchor> list(Context context);

    /**
     * Get a NetworkAnchor.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkAnchorName The name of the NetworkAnchor.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a NetworkAnchor along with {@link Response}.
     */
    Response<NetworkAnchor> getByResourceGroupWithResponse(String resourceGroupName, String networkAnchorName,
        Context context);

    /**
     * Get a NetworkAnchor.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkAnchorName The name of the NetworkAnchor.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a NetworkAnchor.
     */
    NetworkAnchor getByResourceGroup(String resourceGroupName, String networkAnchorName);

    /**
     * Delete a NetworkAnchor.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkAnchorName The name of the NetworkAnchor.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String networkAnchorName);

    /**
     * Delete a NetworkAnchor.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkAnchorName The name of the NetworkAnchor.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String networkAnchorName, Context context);

    /**
     * List NetworkAnchor resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NetworkAnchor list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<NetworkAnchor> listByResourceGroup(String resourceGroupName);

    /**
     * List NetworkAnchor resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NetworkAnchor list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<NetworkAnchor> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Get a NetworkAnchor.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a NetworkAnchor along with {@link Response}.
     */
    NetworkAnchor getById(String id);

    /**
     * Get a NetworkAnchor.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a NetworkAnchor along with {@link Response}.
     */
    Response<NetworkAnchor> getByIdWithResponse(String id, Context context);

    /**
     * Delete a NetworkAnchor.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a NetworkAnchor.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new NetworkAnchor resource.
     * 
     * @param name resource name.
     * @return the first stage of the new NetworkAnchor definition.
     */
    NetworkAnchor.DefinitionStages.Blank define(String name);
}
