// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.oracledatabase.fluent.models.AutonomousDatabaseBackupInner;
import com.azure.resourcemanager.oracledatabase.models.AutonomousDatabaseBackupUpdate;

/**
 * An instance of this class provides access to all the operations defined in AutonomousDatabaseBackupsClient.
 */
public interface AutonomousDatabaseBackupsClient {
    /**
     * List AutonomousDatabaseBackup resources by AutonomousDatabase.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param autonomousdatabasename The database name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AutonomousDatabaseBackup list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AutonomousDatabaseBackupInner> listByAutonomousDatabase(String resourceGroupName,
        String autonomousdatabasename);

    /**
     * List AutonomousDatabaseBackup resources by AutonomousDatabase.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param autonomousdatabasename The database name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AutonomousDatabaseBackup list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AutonomousDatabaseBackupInner> listByAutonomousDatabase(String resourceGroupName,
        String autonomousdatabasename, Context context);

    /**
     * Get a AutonomousDatabaseBackup.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param autonomousdatabasename The database name.
     * @param adbbackupid AutonomousDatabaseBackup id.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a AutonomousDatabaseBackup along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AutonomousDatabaseBackupInner> getWithResponse(String resourceGroupName, String autonomousdatabasename,
        String adbbackupid, Context context);

    /**
     * Get a AutonomousDatabaseBackup.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param autonomousdatabasename The database name.
     * @param adbbackupid AutonomousDatabaseBackup id.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a AutonomousDatabaseBackup.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AutonomousDatabaseBackupInner get(String resourceGroupName, String autonomousdatabasename, String adbbackupid);

    /**
     * Create a AutonomousDatabaseBackup.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param autonomousdatabasename The database name.
     * @param adbbackupid AutonomousDatabaseBackup id.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of autonomousDatabaseBackup resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AutonomousDatabaseBackupInner>, AutonomousDatabaseBackupInner> beginCreateOrUpdate(
        String resourceGroupName, String autonomousdatabasename, String adbbackupid,
        AutonomousDatabaseBackupInner resource);

    /**
     * Create a AutonomousDatabaseBackup.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param autonomousdatabasename The database name.
     * @param adbbackupid AutonomousDatabaseBackup id.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of autonomousDatabaseBackup resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AutonomousDatabaseBackupInner>, AutonomousDatabaseBackupInner> beginCreateOrUpdate(
        String resourceGroupName, String autonomousdatabasename, String adbbackupid,
        AutonomousDatabaseBackupInner resource, Context context);

    /**
     * Create a AutonomousDatabaseBackup.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param autonomousdatabasename The database name.
     * @param adbbackupid AutonomousDatabaseBackup id.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return autonomousDatabaseBackup resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AutonomousDatabaseBackupInner createOrUpdate(String resourceGroupName, String autonomousdatabasename,
        String adbbackupid, AutonomousDatabaseBackupInner resource);

    /**
     * Create a AutonomousDatabaseBackup.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param autonomousdatabasename The database name.
     * @param adbbackupid AutonomousDatabaseBackup id.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return autonomousDatabaseBackup resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AutonomousDatabaseBackupInner createOrUpdate(String resourceGroupName, String autonomousdatabasename,
        String adbbackupid, AutonomousDatabaseBackupInner resource, Context context);

    /**
     * Update a AutonomousDatabaseBackup.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param autonomousdatabasename The database name.
     * @param adbbackupid AutonomousDatabaseBackup id.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of autonomousDatabaseBackup resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AutonomousDatabaseBackupInner>, AutonomousDatabaseBackupInner> beginUpdate(
        String resourceGroupName, String autonomousdatabasename, String adbbackupid,
        AutonomousDatabaseBackupUpdate properties);

    /**
     * Update a AutonomousDatabaseBackup.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param autonomousdatabasename The database name.
     * @param adbbackupid AutonomousDatabaseBackup id.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of autonomousDatabaseBackup resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AutonomousDatabaseBackupInner>, AutonomousDatabaseBackupInner> beginUpdate(
        String resourceGroupName, String autonomousdatabasename, String adbbackupid,
        AutonomousDatabaseBackupUpdate properties, Context context);

    /**
     * Update a AutonomousDatabaseBackup.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param autonomousdatabasename The database name.
     * @param adbbackupid AutonomousDatabaseBackup id.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return autonomousDatabaseBackup resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AutonomousDatabaseBackupInner update(String resourceGroupName, String autonomousdatabasename, String adbbackupid,
        AutonomousDatabaseBackupUpdate properties);

    /**
     * Update a AutonomousDatabaseBackup.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param autonomousdatabasename The database name.
     * @param adbbackupid AutonomousDatabaseBackup id.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return autonomousDatabaseBackup resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AutonomousDatabaseBackupInner update(String resourceGroupName, String autonomousdatabasename, String adbbackupid,
        AutonomousDatabaseBackupUpdate properties, Context context);

    /**
     * Delete a AutonomousDatabaseBackup.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param autonomousdatabasename The database name.
     * @param adbbackupid AutonomousDatabaseBackup id.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String autonomousdatabasename,
        String adbbackupid);

    /**
     * Delete a AutonomousDatabaseBackup.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param autonomousdatabasename The database name.
     * @param adbbackupid AutonomousDatabaseBackup id.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String autonomousdatabasename,
        String adbbackupid, Context context);

    /**
     * Delete a AutonomousDatabaseBackup.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param autonomousdatabasename The database name.
     * @param adbbackupid AutonomousDatabaseBackup id.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String autonomousdatabasename, String adbbackupid);

    /**
     * Delete a AutonomousDatabaseBackup.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param autonomousdatabasename The database name.
     * @param adbbackupid AutonomousDatabaseBackup id.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String autonomousdatabasename, String adbbackupid, Context context);
}
