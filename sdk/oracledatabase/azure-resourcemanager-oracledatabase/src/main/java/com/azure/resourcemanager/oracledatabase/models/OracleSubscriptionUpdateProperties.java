// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The updatable properties of the OracleSubscription.
 */
@Fluent
public final class OracleSubscriptionUpdateProperties implements JsonSerializable<OracleSubscriptionUpdateProperties> {
    /*
     * Product code for the term unit
     */
    private String productCode;

    /*
     * Intent for the update operation
     */
    private Intent intent;

    /**
     * Creates an instance of OracleSubscriptionUpdateProperties class.
     */
    public OracleSubscriptionUpdateProperties() {
    }

    /**
     * Get the productCode property: Product code for the term unit.
     * 
     * @return the productCode value.
     */
    public String productCode() {
        return this.productCode;
    }

    /**
     * Set the productCode property: Product code for the term unit.
     * 
     * @param productCode the productCode value to set.
     * @return the OracleSubscriptionUpdateProperties object itself.
     */
    public OracleSubscriptionUpdateProperties withProductCode(String productCode) {
        this.productCode = productCode;
        return this;
    }

    /**
     * Get the intent property: Intent for the update operation.
     * 
     * @return the intent value.
     */
    public Intent intent() {
        return this.intent;
    }

    /**
     * Set the intent property: Intent for the update operation.
     * 
     * @param intent the intent value to set.
     * @return the OracleSubscriptionUpdateProperties object itself.
     */
    public OracleSubscriptionUpdateProperties withIntent(Intent intent) {
        this.intent = intent;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("productCode", this.productCode);
        jsonWriter.writeStringField("intent", this.intent == null ? null : this.intent.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OracleSubscriptionUpdateProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of OracleSubscriptionUpdateProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the OracleSubscriptionUpdateProperties.
     */
    public static OracleSubscriptionUpdateProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OracleSubscriptionUpdateProperties deserializedOracleSubscriptionUpdateProperties
                = new OracleSubscriptionUpdateProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("productCode".equals(fieldName)) {
                    deserializedOracleSubscriptionUpdateProperties.productCode = reader.getString();
                } else if ("intent".equals(fieldName)) {
                    deserializedOracleSubscriptionUpdateProperties.intent = Intent.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedOracleSubscriptionUpdateProperties;
        });
    }
}
