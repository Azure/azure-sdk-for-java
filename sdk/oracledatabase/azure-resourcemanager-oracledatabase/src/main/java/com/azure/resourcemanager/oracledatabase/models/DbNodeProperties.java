// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * The properties of DbNodeResource.
 */
@Immutable
public final class DbNodeProperties {
    /*
     * DbNode OCID
     */
    @JsonProperty(value = "ocid", required = true, access = JsonProperty.Access.WRITE_ONLY)
    private String ocid;

    /*
     * Additional information about the planned maintenance.
     */
    @JsonProperty(value = "additionalDetails", access = JsonProperty.Access.WRITE_ONLY)
    private String additionalDetails;

    /*
     * The OCID of the backup IP address associated with the database node.
     */
    @JsonProperty(value = "backupIpId", access = JsonProperty.Access.WRITE_ONLY)
    private String backupIpId;

    /*
     * The OCID of the second backup VNIC.
     */
    @JsonProperty(value = "backupVnic2Id", access = JsonProperty.Access.WRITE_ONLY)
    private String backupVnic2Id;

    /*
     * The OCID of the backup VNIC.
     */
    @JsonProperty(value = "backupVnicId", access = JsonProperty.Access.WRITE_ONLY)
    private String backupVnicId;

    /*
     * The number of CPU cores enabled on the Db node.
     */
    @JsonProperty(value = "cpuCoreCount", access = JsonProperty.Access.WRITE_ONLY)
    private Integer cpuCoreCount;

    /*
     * The allocated local node storage in GBs on the Db node.
     */
    @JsonProperty(value = "dbNodeStorageSizeInGbs", access = JsonProperty.Access.WRITE_ONLY)
    private Integer dbNodeStorageSizeInGbs;

    /*
     * The OCID of the Exacc Db server associated with the database node.
     */
    @JsonProperty(value = "dbServerId", access = JsonProperty.Access.WRITE_ONLY)
    private String dbServerId;

    /*
     * The OCID of the DB system.
     */
    @JsonProperty(value = "dbSystemId", required = true, access = JsonProperty.Access.WRITE_ONLY)
    private String dbSystemId;

    /*
     * The name of the Fault Domain the instance is contained in.
     */
    @JsonProperty(value = "faultDomain", access = JsonProperty.Access.WRITE_ONLY)
    private String faultDomain;

    /*
     * The OCID of the host IP address associated with the database node.
     */
    @JsonProperty(value = "hostIpId", access = JsonProperty.Access.WRITE_ONLY)
    private String hostIpId;

    /*
     * The host name for the database node.
     */
    @JsonProperty(value = "hostname", access = JsonProperty.Access.WRITE_ONLY)
    private String hostname;

    /*
     * The current state of the database node.
     */
    @JsonProperty(value = "lifecycleState", access = JsonProperty.Access.WRITE_ONLY)
    private DbNodeProvisioningState lifecycleState;

    /*
     * Lifecycle details of Db Node.
     */
    @JsonProperty(value = "lifecycleDetails", access = JsonProperty.Access.WRITE_ONLY)
    private String lifecycleDetails;

    /*
     * The type of database node maintenance.
     */
    @JsonProperty(value = "maintenanceType", access = JsonProperty.Access.WRITE_ONLY)
    private DbNodeMaintenanceType maintenanceType;

    /*
     * The allocated memory in GBs on the Db node.
     */
    @JsonProperty(value = "memorySizeInGbs", access = JsonProperty.Access.WRITE_ONLY)
    private Integer memorySizeInGbs;

    /*
     * The size (in GB) of the block storage volume allocation for the DB system. This attribute applies only for virtual machine DB systems.
     */
    @JsonProperty(value = "softwareStorageSizeInGb", access = JsonProperty.Access.WRITE_ONLY)
    private Integer softwareStorageSizeInGb;

    /*
     * The date and time that the database node was created.
     */
    @JsonProperty(value = "timeCreated", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime timeCreated;

    /*
     * End date and time of maintenance window.
     */
    @JsonProperty(value = "timeMaintenanceWindowEnd", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime timeMaintenanceWindowEnd;

    /*
     * Start date and time of maintenance window.
     */
    @JsonProperty(value = "timeMaintenanceWindowStart", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime timeMaintenanceWindowStart;

    /*
     * The OCID of the second VNIC.
     */
    @JsonProperty(value = "vnic2Id", access = JsonProperty.Access.WRITE_ONLY)
    private String vnic2Id;

    /*
     * The OCID of the VNIC.
     */
    @JsonProperty(value = "vnicId", access = JsonProperty.Access.WRITE_ONLY)
    private String vnicId;

    /*
     * Azure resource provisioning state.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ResourceProvisioningState provisioningState;

    /**
     * Creates an instance of DbNodeProperties class.
     */
    public DbNodeProperties() {
    }

    /**
     * Get the ocid property: DbNode OCID.
     * 
     * @return the ocid value.
     */
    public String ocid() {
        return this.ocid;
    }

    /**
     * Get the additionalDetails property: Additional information about the planned maintenance.
     * 
     * @return the additionalDetails value.
     */
    public String additionalDetails() {
        return this.additionalDetails;
    }

    /**
     * Get the backupIpId property: The OCID of the backup IP address associated with the database node.
     * 
     * @return the backupIpId value.
     */
    public String backupIpId() {
        return this.backupIpId;
    }

    /**
     * Get the backupVnic2Id property: The OCID of the second backup VNIC.
     * 
     * @return the backupVnic2Id value.
     */
    public String backupVnic2Id() {
        return this.backupVnic2Id;
    }

    /**
     * Get the backupVnicId property: The OCID of the backup VNIC.
     * 
     * @return the backupVnicId value.
     */
    public String backupVnicId() {
        return this.backupVnicId;
    }

    /**
     * Get the cpuCoreCount property: The number of CPU cores enabled on the Db node.
     * 
     * @return the cpuCoreCount value.
     */
    public Integer cpuCoreCount() {
        return this.cpuCoreCount;
    }

    /**
     * Get the dbNodeStorageSizeInGbs property: The allocated local node storage in GBs on the Db node.
     * 
     * @return the dbNodeStorageSizeInGbs value.
     */
    public Integer dbNodeStorageSizeInGbs() {
        return this.dbNodeStorageSizeInGbs;
    }

    /**
     * Get the dbServerId property: The OCID of the Exacc Db server associated with the database node.
     * 
     * @return the dbServerId value.
     */
    public String dbServerId() {
        return this.dbServerId;
    }

    /**
     * Get the dbSystemId property: The OCID of the DB system.
     * 
     * @return the dbSystemId value.
     */
    public String dbSystemId() {
        return this.dbSystemId;
    }

    /**
     * Get the faultDomain property: The name of the Fault Domain the instance is contained in.
     * 
     * @return the faultDomain value.
     */
    public String faultDomain() {
        return this.faultDomain;
    }

    /**
     * Get the hostIpId property: The OCID of the host IP address associated with the database node.
     * 
     * @return the hostIpId value.
     */
    public String hostIpId() {
        return this.hostIpId;
    }

    /**
     * Get the hostname property: The host name for the database node.
     * 
     * @return the hostname value.
     */
    public String hostname() {
        return this.hostname;
    }

    /**
     * Get the lifecycleState property: The current state of the database node.
     * 
     * @return the lifecycleState value.
     */
    public DbNodeProvisioningState lifecycleState() {
        return this.lifecycleState;
    }

    /**
     * Get the lifecycleDetails property: Lifecycle details of Db Node.
     * 
     * @return the lifecycleDetails value.
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }

    /**
     * Get the maintenanceType property: The type of database node maintenance.
     * 
     * @return the maintenanceType value.
     */
    public DbNodeMaintenanceType maintenanceType() {
        return this.maintenanceType;
    }

    /**
     * Get the memorySizeInGbs property: The allocated memory in GBs on the Db node.
     * 
     * @return the memorySizeInGbs value.
     */
    public Integer memorySizeInGbs() {
        return this.memorySizeInGbs;
    }

    /**
     * Get the softwareStorageSizeInGb property: The size (in GB) of the block storage volume allocation for the DB
     * system. This attribute applies only for virtual machine DB systems.
     * 
     * @return the softwareStorageSizeInGb value.
     */
    public Integer softwareStorageSizeInGb() {
        return this.softwareStorageSizeInGb;
    }

    /**
     * Get the timeCreated property: The date and time that the database node was created.
     * 
     * @return the timeCreated value.
     */
    public OffsetDateTime timeCreated() {
        return this.timeCreated;
    }

    /**
     * Get the timeMaintenanceWindowEnd property: End date and time of maintenance window.
     * 
     * @return the timeMaintenanceWindowEnd value.
     */
    public OffsetDateTime timeMaintenanceWindowEnd() {
        return this.timeMaintenanceWindowEnd;
    }

    /**
     * Get the timeMaintenanceWindowStart property: Start date and time of maintenance window.
     * 
     * @return the timeMaintenanceWindowStart value.
     */
    public OffsetDateTime timeMaintenanceWindowStart() {
        return this.timeMaintenanceWindowStart;
    }

    /**
     * Get the vnic2Id property: The OCID of the second VNIC.
     * 
     * @return the vnic2Id value.
     */
    public String vnic2Id() {
        return this.vnic2Id;
    }

    /**
     * Get the vnicId property: The OCID of the VNIC.
     * 
     * @return the vnicId value.
     */
    public String vnicId() {
        return this.vnicId;
    }

    /**
     * Get the provisioningState property: Azure resource provisioning state.
     * 
     * @return the provisioningState value.
     */
    public ResourceProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
