// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.oracledatabase.fluent.GiMinorVersionsClient;
import com.azure.resourcemanager.oracledatabase.fluent.models.GiMinorVersionInner;
import com.azure.resourcemanager.oracledatabase.models.GiMinorVersion;
import com.azure.resourcemanager.oracledatabase.models.GiMinorVersions;
import com.azure.resourcemanager.oracledatabase.models.ShapeFamily;

public final class GiMinorVersionsImpl implements GiMinorVersions {
    private static final ClientLogger LOGGER = new ClientLogger(GiMinorVersionsImpl.class);

    private final GiMinorVersionsClient innerClient;

    private final com.azure.resourcemanager.oracledatabase.OracleDatabaseManager serviceManager;

    public GiMinorVersionsImpl(GiMinorVersionsClient innerClient,
        com.azure.resourcemanager.oracledatabase.OracleDatabaseManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<GiMinorVersion> listByParent(String location, String giversionname) {
        PagedIterable<GiMinorVersionInner> inner = this.serviceClient().listByParent(location, giversionname);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new GiMinorVersionImpl(inner1, this.manager()));
    }

    public PagedIterable<GiMinorVersion> listByParent(String location, String giversionname, ShapeFamily shapeFamily,
        String zone, Context context) {
        PagedIterable<GiMinorVersionInner> inner
            = this.serviceClient().listByParent(location, giversionname, shapeFamily, zone, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new GiMinorVersionImpl(inner1, this.manager()));
    }

    public Response<GiMinorVersion> getWithResponse(String location, String giversionname, String giMinorVersionName,
        Context context) {
        Response<GiMinorVersionInner> inner
            = this.serviceClient().getWithResponse(location, giversionname, giMinorVersionName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new GiMinorVersionImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public GiMinorVersion get(String location, String giversionname, String giMinorVersionName) {
        GiMinorVersionInner inner = this.serviceClient().get(location, giversionname, giMinorVersionName);
        if (inner != null) {
            return new GiMinorVersionImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private GiMinorVersionsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.oracledatabase.OracleDatabaseManager manager() {
        return this.serviceManager;
    }
}
