// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.oracledatabase.fluent.models.CloudExadataInfrastructureInner;
import com.azure.resourcemanager.oracledatabase.models.CloudExadataInfrastructureUpdate;

/**
 * An instance of this class provides access to all the operations defined in CloudExadataInfrastructuresClient.
 */
public interface CloudExadataInfrastructuresClient {
    /**
     * List CloudExadataInfrastructure resources by subscription ID.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a CloudExadataInfrastructure list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<CloudExadataInfrastructureInner> list();

    /**
     * List CloudExadataInfrastructure resources by subscription ID.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a CloudExadataInfrastructure list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<CloudExadataInfrastructureInner> list(Context context);

    /**
     * List CloudExadataInfrastructure resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a CloudExadataInfrastructure list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<CloudExadataInfrastructureInner> listByResourceGroup(String resourceGroupName);

    /**
     * List CloudExadataInfrastructure resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a CloudExadataInfrastructure list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<CloudExadataInfrastructureInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Get a CloudExadataInfrastructure.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudexadatainfrastructurename CloudExadataInfrastructure name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a CloudExadataInfrastructure along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<CloudExadataInfrastructureInner> getByResourceGroupWithResponse(String resourceGroupName,
        String cloudexadatainfrastructurename, Context context);

    /**
     * Get a CloudExadataInfrastructure.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudexadatainfrastructurename CloudExadataInfrastructure name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a CloudExadataInfrastructure.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CloudExadataInfrastructureInner getByResourceGroup(String resourceGroupName, String cloudexadatainfrastructurename);

    /**
     * Create a CloudExadataInfrastructure.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudexadatainfrastructurename CloudExadataInfrastructure name.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of cloudExadataInfrastructure resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<CloudExadataInfrastructureInner>, CloudExadataInfrastructureInner> beginCreateOrUpdate(
        String resourceGroupName, String cloudexadatainfrastructurename, CloudExadataInfrastructureInner resource);

    /**
     * Create a CloudExadataInfrastructure.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudexadatainfrastructurename CloudExadataInfrastructure name.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of cloudExadataInfrastructure resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<CloudExadataInfrastructureInner>, CloudExadataInfrastructureInner> beginCreateOrUpdate(
        String resourceGroupName, String cloudexadatainfrastructurename, CloudExadataInfrastructureInner resource,
        Context context);

    /**
     * Create a CloudExadataInfrastructure.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudexadatainfrastructurename CloudExadataInfrastructure name.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return cloudExadataInfrastructure resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CloudExadataInfrastructureInner createOrUpdate(String resourceGroupName, String cloudexadatainfrastructurename,
        CloudExadataInfrastructureInner resource);

    /**
     * Create a CloudExadataInfrastructure.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudexadatainfrastructurename CloudExadataInfrastructure name.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return cloudExadataInfrastructure resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CloudExadataInfrastructureInner createOrUpdate(String resourceGroupName, String cloudexadatainfrastructurename,
        CloudExadataInfrastructureInner resource, Context context);

    /**
     * Update a CloudExadataInfrastructure.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudexadatainfrastructurename CloudExadataInfrastructure name.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of cloudExadataInfrastructure resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<CloudExadataInfrastructureInner>, CloudExadataInfrastructureInner> beginUpdate(
        String resourceGroupName, String cloudexadatainfrastructurename, CloudExadataInfrastructureUpdate properties);

    /**
     * Update a CloudExadataInfrastructure.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudexadatainfrastructurename CloudExadataInfrastructure name.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of cloudExadataInfrastructure resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<CloudExadataInfrastructureInner>, CloudExadataInfrastructureInner> beginUpdate(
        String resourceGroupName, String cloudexadatainfrastructurename, CloudExadataInfrastructureUpdate properties,
        Context context);

    /**
     * Update a CloudExadataInfrastructure.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudexadatainfrastructurename CloudExadataInfrastructure name.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return cloudExadataInfrastructure resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CloudExadataInfrastructureInner update(String resourceGroupName, String cloudexadatainfrastructurename,
        CloudExadataInfrastructureUpdate properties);

    /**
     * Update a CloudExadataInfrastructure.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudexadatainfrastructurename CloudExadataInfrastructure name.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return cloudExadataInfrastructure resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CloudExadataInfrastructureInner update(String resourceGroupName, String cloudexadatainfrastructurename,
        CloudExadataInfrastructureUpdate properties, Context context);

    /**
     * Delete a CloudExadataInfrastructure.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudexadatainfrastructurename CloudExadataInfrastructure name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String cloudexadatainfrastructurename);

    /**
     * Delete a CloudExadataInfrastructure.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudexadatainfrastructurename CloudExadataInfrastructure name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String cloudexadatainfrastructurename,
        Context context);

    /**
     * Delete a CloudExadataInfrastructure.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudexadatainfrastructurename CloudExadataInfrastructure name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String cloudexadatainfrastructurename);

    /**
     * Delete a CloudExadataInfrastructure.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudexadatainfrastructurename CloudExadataInfrastructure name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String cloudexadatainfrastructurename, Context context);

    /**
     * Perform add storage capacity on exadata infra.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudexadatainfrastructurename CloudExadataInfrastructure name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of cloudExadataInfrastructure resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<CloudExadataInfrastructureInner>, CloudExadataInfrastructureInner>
        beginAddStorageCapacity(String resourceGroupName, String cloudexadatainfrastructurename);

    /**
     * Perform add storage capacity on exadata infra.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudexadatainfrastructurename CloudExadataInfrastructure name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of cloudExadataInfrastructure resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<CloudExadataInfrastructureInner>, CloudExadataInfrastructureInner>
        beginAddStorageCapacity(String resourceGroupName, String cloudexadatainfrastructurename, Context context);

    /**
     * Perform add storage capacity on exadata infra.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudexadatainfrastructurename CloudExadataInfrastructure name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return cloudExadataInfrastructure resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CloudExadataInfrastructureInner addStorageCapacity(String resourceGroupName, String cloudexadatainfrastructurename);

    /**
     * Perform add storage capacity on exadata infra.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cloudexadatainfrastructurename CloudExadataInfrastructure name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return cloudExadataInfrastructure resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CloudExadataInfrastructureInner addStorageCapacity(String resourceGroupName, String cloudexadatainfrastructurename,
        Context context);
}
