// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * File configuration options.
 */
@Fluent
public final class FileSystemConfigurationDetails implements JsonSerializable<FileSystemConfigurationDetails> {
    /*
     * Mount path
     */
    private String mountPoint;

    /*
     * Size of the VM
     */
    private Integer fileSystemSizeGb;

    /**
     * Creates an instance of FileSystemConfigurationDetails class.
     */
    public FileSystemConfigurationDetails() {
    }

    /**
     * Get the mountPoint property: Mount path.
     * 
     * @return the mountPoint value.
     */
    public String mountPoint() {
        return this.mountPoint;
    }

    /**
     * Set the mountPoint property: Mount path.
     * 
     * @param mountPoint the mountPoint value to set.
     * @return the FileSystemConfigurationDetails object itself.
     */
    public FileSystemConfigurationDetails withMountPoint(String mountPoint) {
        this.mountPoint = mountPoint;
        return this;
    }

    /**
     * Get the fileSystemSizeGb property: Size of the VM.
     * 
     * @return the fileSystemSizeGb value.
     */
    public Integer fileSystemSizeGb() {
        return this.fileSystemSizeGb;
    }

    /**
     * Set the fileSystemSizeGb property: Size of the VM.
     * 
     * @param fileSystemSizeGb the fileSystemSizeGb value to set.
     * @return the FileSystemConfigurationDetails object itself.
     */
    public FileSystemConfigurationDetails withFileSystemSizeGb(Integer fileSystemSizeGb) {
        this.fileSystemSizeGb = fileSystemSizeGb;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("mountPoint", this.mountPoint);
        jsonWriter.writeNumberField("fileSystemSizeGb", this.fileSystemSizeGb);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FileSystemConfigurationDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FileSystemConfigurationDetails if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the FileSystemConfigurationDetails.
     */
    public static FileSystemConfigurationDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            FileSystemConfigurationDetails deserializedFileSystemConfigurationDetails
                = new FileSystemConfigurationDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("mountPoint".equals(fieldName)) {
                    deserializedFileSystemConfigurationDetails.mountPoint = reader.getString();
                } else if ("fileSystemSizeGb".equals(fieldName)) {
                    deserializedFileSystemConfigurationDetails.fileSystemSizeGb
                        = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedFileSystemConfigurationDetails;
        });
    }
}
