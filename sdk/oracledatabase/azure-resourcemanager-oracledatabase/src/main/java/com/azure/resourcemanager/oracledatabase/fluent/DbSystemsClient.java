// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.oracledatabase.fluent.models.DbSystemInner;
import com.azure.resourcemanager.oracledatabase.models.DbSystemUpdate;

/**
 * An instance of this class provides access to all the operations defined in DbSystemsClient.
 */
public interface DbSystemsClient {
    /**
     * List DbSystem resources by subscription ID.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DbSystem list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DbSystemInner> list();

    /**
     * List DbSystem resources by subscription ID.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DbSystem list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DbSystemInner> list(Context context);

    /**
     * Create a DbSystem.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dbSystemName The name of the DbSystem.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of dbSystem resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DbSystemInner>, DbSystemInner> beginCreateOrUpdate(String resourceGroupName,
        String dbSystemName, DbSystemInner resource);

    /**
     * Create a DbSystem.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dbSystemName The name of the DbSystem.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of dbSystem resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DbSystemInner>, DbSystemInner> beginCreateOrUpdate(String resourceGroupName,
        String dbSystemName, DbSystemInner resource, Context context);

    /**
     * Create a DbSystem.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dbSystemName The name of the DbSystem.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return dbSystem resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DbSystemInner createOrUpdate(String resourceGroupName, String dbSystemName, DbSystemInner resource);

    /**
     * Create a DbSystem.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dbSystemName The name of the DbSystem.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return dbSystem resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DbSystemInner createOrUpdate(String resourceGroupName, String dbSystemName, DbSystemInner resource,
        Context context);

    /**
     * Get a DbSystem.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dbSystemName The name of the DbSystem.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a DbSystem along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DbSystemInner> getByResourceGroupWithResponse(String resourceGroupName, String dbSystemName,
        Context context);

    /**
     * Get a DbSystem.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dbSystemName The name of the DbSystem.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a DbSystem.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DbSystemInner getByResourceGroup(String resourceGroupName, String dbSystemName);

    /**
     * Update a DbSystem.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dbSystemName The name of the DbSystem.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of dbSystem resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DbSystemInner>, DbSystemInner> beginUpdate(String resourceGroupName, String dbSystemName,
        DbSystemUpdate properties);

    /**
     * Update a DbSystem.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dbSystemName The name of the DbSystem.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of dbSystem resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DbSystemInner>, DbSystemInner> beginUpdate(String resourceGroupName, String dbSystemName,
        DbSystemUpdate properties, Context context);

    /**
     * Update a DbSystem.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dbSystemName The name of the DbSystem.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return dbSystem resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DbSystemInner update(String resourceGroupName, String dbSystemName, DbSystemUpdate properties);

    /**
     * Update a DbSystem.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dbSystemName The name of the DbSystem.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return dbSystem resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DbSystemInner update(String resourceGroupName, String dbSystemName, DbSystemUpdate properties, Context context);

    /**
     * Delete a DbSystem.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dbSystemName The name of the DbSystem.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String dbSystemName);

    /**
     * Delete a DbSystem.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dbSystemName The name of the DbSystem.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String dbSystemName, Context context);

    /**
     * Delete a DbSystem.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dbSystemName The name of the DbSystem.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String dbSystemName);

    /**
     * Delete a DbSystem.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dbSystemName The name of the DbSystem.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String dbSystemName, Context context);

    /**
     * List DbSystem resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DbSystem list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DbSystemInner> listByResourceGroup(String resourceGroupName);

    /**
     * List DbSystem resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DbSystem list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DbSystemInner> listByResourceGroup(String resourceGroupName, Context context);
}
