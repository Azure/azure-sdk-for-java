// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The updatable properties of the DbSystem.
 */
@Fluent
public final class DbSystemUpdateProperties implements JsonSerializable<DbSystemUpdateProperties> {
    /*
     * The source of the database for creating a new database.
     */
    private DbSystemSourceType source;

    /**
     * Creates an instance of DbSystemUpdateProperties class.
     */
    public DbSystemUpdateProperties() {
    }

    /**
     * Get the source property: The source of the database for creating a new database.
     * 
     * @return the source value.
     */
    public DbSystemSourceType source() {
        return this.source;
    }

    /**
     * Set the source property: The source of the database for creating a new database.
     * 
     * @param source the source value to set.
     * @return the DbSystemUpdateProperties object itself.
     */
    public DbSystemUpdateProperties withSource(DbSystemSourceType source) {
        this.source = source;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("source", this.source == null ? null : this.source.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DbSystemUpdateProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DbSystemUpdateProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the DbSystemUpdateProperties.
     */
    public static DbSystemUpdateProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DbSystemUpdateProperties deserializedDbSystemUpdateProperties = new DbSystemUpdateProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("source".equals(fieldName)) {
                    deserializedDbSystemUpdateProperties.source = DbSystemSourceType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDbSystemUpdateProperties;
        });
    }
}
