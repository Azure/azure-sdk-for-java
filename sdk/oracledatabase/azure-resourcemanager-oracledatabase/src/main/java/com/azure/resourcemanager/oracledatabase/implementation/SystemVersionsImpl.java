// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.oracledatabase.fluent.SystemVersionsClient;
import com.azure.resourcemanager.oracledatabase.fluent.models.SystemVersionInner;
import com.azure.resourcemanager.oracledatabase.models.SystemVersion;
import com.azure.resourcemanager.oracledatabase.models.SystemVersions;

public final class SystemVersionsImpl implements SystemVersions {
    private static final ClientLogger LOGGER = new ClientLogger(SystemVersionsImpl.class);

    private final SystemVersionsClient innerClient;

    private final com.azure.resourcemanager.oracledatabase.OracleDatabaseManager serviceManager;

    public SystemVersionsImpl(SystemVersionsClient innerClient,
        com.azure.resourcemanager.oracledatabase.OracleDatabaseManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<SystemVersion> listByLocation(String location) {
        PagedIterable<SystemVersionInner> inner = this.serviceClient().listByLocation(location);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new SystemVersionImpl(inner1, this.manager()));
    }

    public PagedIterable<SystemVersion> listByLocation(String location, Context context) {
        PagedIterable<SystemVersionInner> inner = this.serviceClient().listByLocation(location, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new SystemVersionImpl(inner1, this.manager()));
    }

    public Response<SystemVersion> getWithResponse(String location, String systemversionname, Context context) {
        Response<SystemVersionInner> inner = this.serviceClient().getWithResponse(location, systemversionname, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new SystemVersionImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public SystemVersion get(String location, String systemversionname) {
        SystemVersionInner inner = this.serviceClient().get(location, systemversionname);
        if (inner != null) {
            return new SystemVersionImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private SystemVersionsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.oracledatabase.OracleDatabaseManager manager() {
        return this.serviceManager;
    }
}
