// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.oracledatabase.fluent.models.DbVersionInner;
import com.azure.resourcemanager.oracledatabase.models.BaseDbSystemShapes;
import com.azure.resourcemanager.oracledatabase.models.ShapeFamilyType;
import com.azure.resourcemanager.oracledatabase.models.StorageManagementType;

/**
 * An instance of this class provides access to all the operations defined in DbVersionsClient.
 */
public interface DbVersionsClient {
    /**
     * Get a DbVersion.
     * 
     * @param location The name of the Azure region.
     * @param dbversionsname DbVersion name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a DbVersion along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DbVersionInner> getWithResponse(String location, String dbversionsname, Context context);

    /**
     * Get a DbVersion.
     * 
     * @param location The name of the Azure region.
     * @param dbversionsname DbVersion name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a DbVersion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DbVersionInner get(String location, String dbversionsname);

    /**
     * List DbVersion resources by SubscriptionLocationResource.
     * 
     * @param location The name of the Azure region.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DbVersion list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DbVersionInner> listByLocation(String location);

    /**
     * List DbVersion resources by SubscriptionLocationResource.
     * 
     * @param location The name of the Azure region.
     * @param dbSystemShape If provided, filters the results to the set of database versions which are supported for the
     * given shape. e.g., VM.Standard.E5.Flex.
     * @param dbSystemId The DB system AzureId. If provided, filters the results to the set of database versions which
     * are supported for the DB system.
     * @param storageManagement The DB system storage management option. Used to list database versions available for
     * that storage manager. Valid values are ASM and LVM.
     * @param isUpgradeSupported If true, filters the results to the set of database versions which are supported for
     * Upgrade.
     * @param isDatabaseSoftwareImageSupported If true, filters the results to the set of Oracle Database versions that
     * are supported for the database software images.
     * @param shapeFamily If provided, filters the results to the set of database versions which are supported for the
     * given shape family.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DbVersion list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DbVersionInner> listByLocation(String location, BaseDbSystemShapes dbSystemShape, String dbSystemId,
        StorageManagementType storageManagement, Boolean isUpgradeSupported, Boolean isDatabaseSoftwareImageSupported,
        ShapeFamilyType shapeFamily, Context context);
}
