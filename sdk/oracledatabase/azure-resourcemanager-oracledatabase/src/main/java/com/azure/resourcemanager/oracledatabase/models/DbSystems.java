// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of DbSystems.
 */
public interface DbSystems {
    /**
     * List DbSystem resources by subscription ID.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DbSystem list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<DbSystem> list();

    /**
     * List DbSystem resources by subscription ID.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DbSystem list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<DbSystem> list(Context context);

    /**
     * Get a DbSystem.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dbSystemName The name of the DbSystem.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a DbSystem along with {@link Response}.
     */
    Response<DbSystem> getByResourceGroupWithResponse(String resourceGroupName, String dbSystemName, Context context);

    /**
     * Get a DbSystem.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dbSystemName The name of the DbSystem.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a DbSystem.
     */
    DbSystem getByResourceGroup(String resourceGroupName, String dbSystemName);

    /**
     * Delete a DbSystem.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dbSystemName The name of the DbSystem.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String dbSystemName);

    /**
     * Delete a DbSystem.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dbSystemName The name of the DbSystem.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String dbSystemName, Context context);

    /**
     * List DbSystem resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DbSystem list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<DbSystem> listByResourceGroup(String resourceGroupName);

    /**
     * List DbSystem resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DbSystem list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<DbSystem> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Get a DbSystem.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a DbSystem along with {@link Response}.
     */
    DbSystem getById(String id);

    /**
     * Get a DbSystem.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a DbSystem along with {@link Response}.
     */
    Response<DbSystem> getByIdWithResponse(String id, Context context);

    /**
     * Delete a DbSystem.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a DbSystem.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new DbSystem resource.
     * 
     * @param name resource name.
     * @return the first stage of the new DbSystem definition.
     */
    DbSystem.DefinitionStages.Blank define(String name);
}
