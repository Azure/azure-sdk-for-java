// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Private Ip Addresses filter.
 */
@Fluent
public final class PrivateIpAddressesFilter {
    /*
     * Subnet OCID
     */
    @JsonProperty(value = "subnetId", required = true)
    private String subnetId;

    /*
     * VCN OCID
     */
    @JsonProperty(value = "vnicId", required = true)
    private String vnicId;

    /**
     * Creates an instance of PrivateIpAddressesFilter class.
     */
    public PrivateIpAddressesFilter() {
    }

    /**
     * Get the subnetId property: Subnet OCID.
     * 
     * @return the subnetId value.
     */
    public String subnetId() {
        return this.subnetId;
    }

    /**
     * Set the subnetId property: Subnet OCID.
     * 
     * @param subnetId the subnetId value to set.
     * @return the PrivateIpAddressesFilter object itself.
     */
    public PrivateIpAddressesFilter withSubnetId(String subnetId) {
        this.subnetId = subnetId;
        return this;
    }

    /**
     * Get the vnicId property: VCN OCID.
     * 
     * @return the vnicId value.
     */
    public String vnicId() {
        return this.vnicId;
    }

    /**
     * Set the vnicId property: VCN OCID.
     * 
     * @param vnicId the vnicId value to set.
     * @return the PrivateIpAddressesFilter object itself.
     */
    public PrivateIpAddressesFilter withVnicId(String vnicId) {
        this.vnicId = vnicId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (subnetId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property subnetId in model PrivateIpAddressesFilter"));
        }
        if (vnicId() == null) {
            throw LOGGER.atError()
                .log(
                    new IllegalArgumentException("Missing required property vnicId in model PrivateIpAddressesFilter"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(PrivateIpAddressesFilter.class);
}
