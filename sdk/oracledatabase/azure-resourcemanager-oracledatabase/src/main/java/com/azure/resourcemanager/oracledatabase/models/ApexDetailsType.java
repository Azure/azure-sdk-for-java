// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Information about Oracle APEX Application Development.
 */
@Fluent
public final class ApexDetailsType implements JsonSerializable<ApexDetailsType> {
    /*
     * The Oracle APEX Application Development version.
     */
    private String apexVersion;

    /*
     * The Oracle REST Data Services (ORDS) version.
     */
    private String ordsVersion;

    /**
     * Creates an instance of ApexDetailsType class.
     */
    public ApexDetailsType() {
    }

    /**
     * Get the apexVersion property: The Oracle APEX Application Development version.
     * 
     * @return the apexVersion value.
     */
    public String apexVersion() {
        return this.apexVersion;
    }

    /**
     * Set the apexVersion property: The Oracle APEX Application Development version.
     * 
     * @param apexVersion the apexVersion value to set.
     * @return the ApexDetailsType object itself.
     */
    public ApexDetailsType withApexVersion(String apexVersion) {
        this.apexVersion = apexVersion;
        return this;
    }

    /**
     * Get the ordsVersion property: The Oracle REST Data Services (ORDS) version.
     * 
     * @return the ordsVersion value.
     */
    public String ordsVersion() {
        return this.ordsVersion;
    }

    /**
     * Set the ordsVersion property: The Oracle REST Data Services (ORDS) version.
     * 
     * @param ordsVersion the ordsVersion value to set.
     * @return the ApexDetailsType object itself.
     */
    public ApexDetailsType withOrdsVersion(String ordsVersion) {
        this.ordsVersion = ordsVersion;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("apexVersion", this.apexVersion);
        jsonWriter.writeStringField("ordsVersion", this.ordsVersion);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ApexDetailsType from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ApexDetailsType if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ApexDetailsType.
     */
    public static ApexDetailsType fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ApexDetailsType deserializedApexDetailsType = new ApexDetailsType();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("apexVersion".equals(fieldName)) {
                    deserializedApexDetailsType.apexVersion = reader.getString();
                } else if ("ordsVersion".equals(fieldName)) {
                    deserializedApexDetailsType.ordsVersion = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedApexDetailsType;
        });
    }
}
