// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.oracledatabase.implementation.models.DnsPrivateViewListResult;
import com.azure.resourcemanager.oracledatabase.models.DnsPrivateViewsLifecycleState;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class DnsPrivateViewListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DnsPrivateViewListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"ocid\":\"vvyhg\",\"displayName\":\"opbyrqufegxu\",\"isProtected\":false,\"lifecycleState\":\"Active\",\"self\":\"fbn\",\"timeCreated\":\"2021-09-27T14:47:09Z\",\"timeUpdated\":\"2021-08-15T03:14:49Z\",\"provisioningState\":\"Canceled\"},\"id\":\"p\",\"name\":\"ngitvgbmhrixkwm\",\"type\":\"ijejvegrhbpn\"},{\"properties\":{\"ocid\":\"xexccbdreaxhcexd\",\"displayName\":\"rvqahqkghtpwi\",\"isProtected\":false,\"lifecycleState\":\"Deleting\",\"self\":\"yjsvfyc\",\"timeCreated\":\"2021-05-05T00:18:03Z\",\"timeUpdated\":\"2021-07-22T08:07:37Z\",\"provisioningState\":\"Succeeded\"},\"id\":\"owvrvmtgjqppyos\",\"name\":\"ronzmyhgfip\",\"type\":\"sxkm\"}],\"nextLink\":\"a\"}")
            .toObject(DnsPrivateViewListResult.class);
        Assertions.assertEquals("vvyhg", model.value().get(0).properties().ocid());
        Assertions.assertEquals("opbyrqufegxu", model.value().get(0).properties().displayName());
        Assertions.assertFalse(model.value().get(0).properties().isProtected());
        Assertions.assertEquals(DnsPrivateViewsLifecycleState.ACTIVE,
            model.value().get(0).properties().lifecycleState());
        Assertions.assertEquals("fbn", model.value().get(0).properties().self());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-27T14:47:09Z"),
            model.value().get(0).properties().timeCreated());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-15T03:14:49Z"),
            model.value().get(0).properties().timeUpdated());
        Assertions.assertEquals("a", model.nextLink());
    }
}
