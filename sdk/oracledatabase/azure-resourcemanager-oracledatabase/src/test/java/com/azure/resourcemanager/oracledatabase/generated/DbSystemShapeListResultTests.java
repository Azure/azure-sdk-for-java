// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.oracledatabase.fluent.models.DbSystemShapeInner;
import com.azure.resourcemanager.oracledatabase.models.DbSystemShapeListResult;
import com.azure.resourcemanager.oracledatabase.models.DbSystemShapeProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DbSystemShapeListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DbSystemShapeListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"shapeFamily\":\"bwpucwwfvovbv\",\"availableCoreCount\":1386132644,\"minimumCoreCount\":1504901100,\"runtimeMinimumCoreCount\":1911093580,\"coreCountIncrement\":783632971,\"minStorageCount\":297335263,\"maxStorageCount\":360614729,\"availableDataStoragePerServerInTbs\":87.90821256009058,\"availableMemoryPerNodeInGbs\":745513484,\"availableDbNodePerNodeInGbs\":1026391011,\"minCoreCountPerNode\":737115334,\"availableMemoryInGbs\":1607896352,\"minMemoryPerNodeInGbs\":798957461,\"availableDbNodeStorageInGbs\":1580797213,\"minDbNodeStoragePerNodeInGbs\":54920560,\"availableDataStorageInTbs\":643148633,\"minDataStorageInTbs\":17080551,\"minimumNodeCount\":384724385,\"maximumNodeCount\":838785311,\"availableCoreCountPerNode\":1070997174},\"id\":\"awgqwgxhni\",\"name\":\"kxfbkpycgklwndn\",\"type\":\"jdauwhvy\"}],\"nextLink\":\"zbtd\"}")
            .toObject(DbSystemShapeListResult.class);
        Assertions.assertEquals("zbtd", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DbSystemShapeListResult model = new DbSystemShapeListResult()
            .withValue(Arrays.asList(new DbSystemShapeInner().withProperties(new DbSystemShapeProperties())))
            .withNextLink("zbtd");
        model = BinaryData.fromObject(model).toObject(DbSystemShapeListResult.class);
        Assertions.assertEquals("zbtd", model.nextLink());
    }
}
