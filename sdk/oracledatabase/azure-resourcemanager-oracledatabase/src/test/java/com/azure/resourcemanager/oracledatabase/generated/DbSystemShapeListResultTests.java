// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.oracledatabase.models.DbSystemShapeListResult;
import org.junit.jupiter.api.Assertions;

public final class DbSystemShapeListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DbSystemShapeListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"shapeFamily\":\"bwpucwwfvovbv\",\"availableCoreCount\":1386132644,\"minimumCoreCount\":1504901100,\"runtimeMinimumCoreCount\":1911093580,\"coreCountIncrement\":783632971,\"minStorageCount\":297335263,\"maxStorageCount\":360614729,\"availableDataStoragePerServerInTbs\":87.90821256009058,\"availableMemoryPerNodeInGbs\":745513484,\"availableDbNodePerNodeInGbs\":1026391011,\"minCoreCountPerNode\":737115334,\"availableMemoryInGbs\":1607896352,\"minMemoryPerNodeInGbs\":798957461,\"availableDbNodeStorageInGbs\":1580797213,\"minDbNodeStoragePerNodeInGbs\":54920560,\"availableDataStorageInTbs\":643148633,\"minDataStorageInTbs\":17080551,\"minimumNodeCount\":384724385,\"maximumNodeCount\":838785311,\"availableCoreCountPerNode\":1070997174},\"id\":\"awgqwgxhni\",\"name\":\"kxfbkpycgklwndn\",\"type\":\"jdauwhvy\"}],\"nextLink\":\"zbtd\"}")
            .toObject(DbSystemShapeListResult.class);
        Assertions.assertEquals("bwpucwwfvovbv", model.value().get(0).properties().shapeFamily());
        Assertions.assertEquals(1386132644, model.value().get(0).properties().availableCoreCount());
        Assertions.assertEquals(1504901100, model.value().get(0).properties().minimumCoreCount());
        Assertions.assertEquals(1911093580, model.value().get(0).properties().runtimeMinimumCoreCount());
        Assertions.assertEquals(783632971, model.value().get(0).properties().coreCountIncrement());
        Assertions.assertEquals(297335263, model.value().get(0).properties().minStorageCount());
        Assertions.assertEquals(360614729, model.value().get(0).properties().maxStorageCount());
        Assertions.assertEquals(87.90821256009058D,
            model.value().get(0).properties().availableDataStoragePerServerInTbs());
        Assertions.assertEquals(745513484, model.value().get(0).properties().availableMemoryPerNodeInGbs());
        Assertions.assertEquals(1026391011, model.value().get(0).properties().availableDbNodePerNodeInGbs());
        Assertions.assertEquals(737115334, model.value().get(0).properties().minCoreCountPerNode());
        Assertions.assertEquals(1607896352, model.value().get(0).properties().availableMemoryInGbs());
        Assertions.assertEquals(798957461, model.value().get(0).properties().minMemoryPerNodeInGbs());
        Assertions.assertEquals(1580797213, model.value().get(0).properties().availableDbNodeStorageInGbs());
        Assertions.assertEquals(54920560, model.value().get(0).properties().minDbNodeStoragePerNodeInGbs());
        Assertions.assertEquals(643148633, model.value().get(0).properties().availableDataStorageInTbs());
        Assertions.assertEquals(17080551, model.value().get(0).properties().minDataStorageInTbs());
        Assertions.assertEquals(384724385, model.value().get(0).properties().minimumNodeCount());
        Assertions.assertEquals(838785311, model.value().get(0).properties().maximumNodeCount());
        Assertions.assertEquals(1070997174, model.value().get(0).properties().availableCoreCountPerNode());
        Assertions.assertEquals("zbtd", model.nextLink());
    }
}
