// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oracledatabase.OracleDatabaseManager;
import com.azure.resourcemanager.oracledatabase.models.DbNode;
import com.azure.resourcemanager.oracledatabase.models.DbNodeMaintenanceType;
import com.azure.resourcemanager.oracledatabase.models.DbNodeProvisioningState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DbNodesListByCloudVmClusterMockTests {
    @Test
    public void testListByCloudVmCluster() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"ocid\":\"ujwouhdawsi\",\"additionalDetails\":\"bjb\",\"backupIpId\":\"jybvit\",\"backupVnic2Id\":\"kjyaznumtg\",\"backupVnicId\":\"uwdchozf\",\"cpuCoreCount\":820610981,\"dbNodeStorageSizeInGbs\":418227301,\"dbServerId\":\"v\",\"dbSystemId\":\"noakiz\",\"faultDomain\":\"aikn\",\"hostIpId\":\"lnuwiguy\",\"hostname\":\"ykwphvxzcwxhmpe\",\"lifecycleState\":\"Starting\",\"lifecycleDetails\":\"ke\",\"maintenanceType\":\"VmdbRebootMigration\",\"memorySizeInGbs\":593833942,\"softwareStorageSizeInGb\":1403514337,\"timeCreated\":\"2021-08-12T17:38:45Z\",\"timeMaintenanceWindowEnd\":\"2021-05-04T14:13:26Z\",\"timeMaintenanceWindowStart\":\"2021-08-04T01:58:43Z\",\"vnic2Id\":\"hxknlccrmmkyupi\",\"vnicId\":\"ubyqj\",\"provisioningState\":\"Canceled\"},\"id\":\"fqfrkemyildudxja\",\"name\":\"cowvfdjkp\",\"type\":\"xphlkksnmg\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OracleDatabaseManager manager = OracleDatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<DbNode> response
            = manager.dbNodes().listByCloudVmCluster("npq", "g", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ujwouhdawsi", response.iterator().next().properties().ocid());
        Assertions.assertEquals("bjb", response.iterator().next().properties().additionalDetails());
        Assertions.assertEquals("jybvit", response.iterator().next().properties().backupIpId());
        Assertions.assertEquals("kjyaznumtg", response.iterator().next().properties().backupVnic2Id());
        Assertions.assertEquals("uwdchozf", response.iterator().next().properties().backupVnicId());
        Assertions.assertEquals(820610981, response.iterator().next().properties().cpuCoreCount());
        Assertions.assertEquals(418227301, response.iterator().next().properties().dbNodeStorageSizeInGbs());
        Assertions.assertEquals("v", response.iterator().next().properties().dbServerId());
        Assertions.assertEquals("noakiz", response.iterator().next().properties().dbSystemId());
        Assertions.assertEquals("aikn", response.iterator().next().properties().faultDomain());
        Assertions.assertEquals("lnuwiguy", response.iterator().next().properties().hostIpId());
        Assertions.assertEquals("ykwphvxzcwxhmpe", response.iterator().next().properties().hostname());
        Assertions.assertEquals(DbNodeProvisioningState.STARTING,
            response.iterator().next().properties().lifecycleState());
        Assertions.assertEquals("ke", response.iterator().next().properties().lifecycleDetails());
        Assertions.assertEquals(DbNodeMaintenanceType.VMDB_REBOOT_MIGRATION,
            response.iterator().next().properties().maintenanceType());
        Assertions.assertEquals(593833942, response.iterator().next().properties().memorySizeInGbs());
        Assertions.assertEquals(1403514337, response.iterator().next().properties().softwareStorageSizeInGb());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-12T17:38:45Z"),
            response.iterator().next().properties().timeCreated());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-04T14:13:26Z"),
            response.iterator().next().properties().timeMaintenanceWindowEnd());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-04T01:58:43Z"),
            response.iterator().next().properties().timeMaintenanceWindowStart());
        Assertions.assertEquals("hxknlccrmmkyupi", response.iterator().next().properties().vnic2Id());
        Assertions.assertEquals("ubyqj", response.iterator().next().properties().vnicId());
    }
}
