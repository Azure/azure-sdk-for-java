// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oracledatabase.OracleDatabaseManager;
import com.azure.resourcemanager.oracledatabase.models.DbNode;
import com.azure.resourcemanager.oracledatabase.models.DbNodeMaintenanceType;
import com.azure.resourcemanager.oracledatabase.models.DbNodeProvisioningState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DbNodesListByCloudVmClusterMockTests {
    @Test
    public void testListByCloudVmCluster() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"ocid\":\"fuzt\",\"additionalDetails\":\"tmvag\",\"backupIpId\":\"idqlvhu\",\"backupVnic2Id\":\"veo\",\"backupVnicId\":\"zrvjfnmjmvlwyzgi\",\"cpuCoreCount\":791770667,\"dbNodeStorageSizeInGbs\":1243352385,\"dbServerId\":\"llfojuidjp\",\"dbSystemId\":\"uyjucejikzo\",\"faultDomain\":\"vvtzejetjkl\",\"hostIpId\":\"ikyju\",\"hostname\":\"dbqzolxrzvhqjw\",\"lifecycleState\":\"Available\",\"lifecycleDetails\":\"tgvgzp\",\"maintenanceType\":\"VmdbRebootMigration\",\"memorySizeInGbs\":1941330764,\"softwareStorageSizeInGb\":1991575166,\"timeCreated\":\"2021-09-08T21:35:36Z\",\"timeMaintenanceWindowEnd\":\"2021-03-27T17:49:13Z\",\"timeMaintenanceWindowStart\":\"2021-04-03T23:44:05Z\",\"vnic2Id\":\"wro\",\"vnicId\":\"cdxfzzzwyjafitl\",\"provisioningState\":\"Failed\"},\"id\":\"nuchlgmltxdwhmo\",\"name\":\"us\",\"type\":\"zvlnsnnjz\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OracleDatabaseManager manager = OracleDatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<DbNode> response
            = manager.dbNodes().listByCloudVmCluster("mjvlgfgg", "vkyylizrzbjpsf", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("fuzt", response.iterator().next().properties().ocid());
        Assertions.assertEquals("tmvag", response.iterator().next().properties().additionalDetails());
        Assertions.assertEquals("idqlvhu", response.iterator().next().properties().backupIpId());
        Assertions.assertEquals("veo", response.iterator().next().properties().backupVnic2Id());
        Assertions.assertEquals("zrvjfnmjmvlwyzgi", response.iterator().next().properties().backupVnicId());
        Assertions.assertEquals(791770667, response.iterator().next().properties().cpuCoreCount());
        Assertions.assertEquals(1243352385, response.iterator().next().properties().dbNodeStorageSizeInGbs());
        Assertions.assertEquals("llfojuidjp", response.iterator().next().properties().dbServerId());
        Assertions.assertEquals("uyjucejikzo", response.iterator().next().properties().dbSystemId());
        Assertions.assertEquals("vvtzejetjkl", response.iterator().next().properties().faultDomain());
        Assertions.assertEquals("ikyju", response.iterator().next().properties().hostIpId());
        Assertions.assertEquals("dbqzolxrzvhqjw", response.iterator().next().properties().hostname());
        Assertions.assertEquals(DbNodeProvisioningState.AVAILABLE,
            response.iterator().next().properties().lifecycleState());
        Assertions.assertEquals("tgvgzp", response.iterator().next().properties().lifecycleDetails());
        Assertions.assertEquals(DbNodeMaintenanceType.VMDB_REBOOT_MIGRATION,
            response.iterator().next().properties().maintenanceType());
        Assertions.assertEquals(1941330764, response.iterator().next().properties().memorySizeInGbs());
        Assertions.assertEquals(1991575166, response.iterator().next().properties().softwareStorageSizeInGb());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-08T21:35:36Z"),
            response.iterator().next().properties().timeCreated());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-27T17:49:13Z"),
            response.iterator().next().properties().timeMaintenanceWindowEnd());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-03T23:44:05Z"),
            response.iterator().next().properties().timeMaintenanceWindowStart());
        Assertions.assertEquals("wro", response.iterator().next().properties().vnic2Id());
        Assertions.assertEquals("cdxfzzzwyjafitl", response.iterator().next().properties().vnicId());
    }
}
