// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oracledatabase.OracleDatabaseManager;
import com.azure.resourcemanager.oracledatabase.models.DnsPrivateView;
import com.azure.resourcemanager.oracledatabase.models.DnsPrivateViewsLifecycleState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DnsPrivateViewsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"ocid\":\"kcxk\",\"displayName\":\"ibn\",\"isProtected\":false,\"lifecycleState\":\"Active\",\"self\":\"suxswqrntvlwijp\",\"timeCreated\":\"2021-01-02T01:16:14Z\",\"timeUpdated\":\"2021-08-15T15:59:55Z\",\"provisioningState\":\"Failed\"},\"id\":\"qqpwcyyuf\",\"name\":\"hruncuwmq\",\"type\":\"pkcdqzhlct\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OracleDatabaseManager manager = OracleDatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DnsPrivateView response = manager.dnsPrivateViews()
            .getWithResponse("yb", "wwpgdakchzyvlixq", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("kcxk", response.properties().ocid());
        Assertions.assertEquals("ibn", response.properties().displayName());
        Assertions.assertEquals(false, response.properties().isProtected());
        Assertions.assertEquals(DnsPrivateViewsLifecycleState.ACTIVE, response.properties().lifecycleState());
        Assertions.assertEquals("suxswqrntvlwijp", response.properties().self());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-02T01:16:14Z"), response.properties().timeCreated());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-15T15:59:55Z"), response.properties().timeUpdated());
    }
}
