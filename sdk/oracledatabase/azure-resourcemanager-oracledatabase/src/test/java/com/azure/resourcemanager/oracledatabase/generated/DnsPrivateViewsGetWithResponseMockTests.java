// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oracledatabase.OracleDatabaseManager;
import com.azure.resourcemanager.oracledatabase.models.DnsPrivateView;
import com.azure.resourcemanager.oracledatabase.models.DnsPrivateViewsLifecycleState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DnsPrivateViewsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"ocid\":\"labnsmjkwynq\",\"displayName\":\"aekqsykvwj\",\"isProtected\":true,\"lifecycleState\":\"Deleted\",\"self\":\"kev\",\"timeCreated\":\"2021-06-30T20:04:20Z\",\"timeUpdated\":\"2021-09-09T16:32:42Z\",\"provisioningState\":\"Canceled\"},\"id\":\"rspxklur\",\"name\":\"clf\",\"type\":\"xa\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OracleDatabaseManager manager = OracleDatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        DnsPrivateView response = manager.dnsPrivateViews()
            .getWithResponse("gzdyimsfayorp", "avkjog", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("labnsmjkwynq", response.properties().ocid());
        Assertions.assertEquals("aekqsykvwj", response.properties().displayName());
        Assertions.assertTrue(response.properties().isProtected());
        Assertions.assertEquals(DnsPrivateViewsLifecycleState.DELETED, response.properties().lifecycleState());
        Assertions.assertEquals("kev", response.properties().self());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-30T20:04:20Z"), response.properties().timeCreated());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-09T16:32:42Z"), response.properties().timeUpdated());
    }
}
