// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oracledatabase.OracleDatabaseManager;
import com.azure.resourcemanager.oracledatabase.models.CloudExadataInfrastructure;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekName;
import com.azure.resourcemanager.oracledatabase.models.MonthName;
import com.azure.resourcemanager.oracledatabase.models.PatchingMode;
import com.azure.resourcemanager.oracledatabase.models.Preference;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudExadataInfrastructuresGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"ocid\":\"avu\",\"computeCount\":187612678,\"storageCount\":1643251858,\"totalStorageSizeInGbs\":542259929,\"availableStorageSizeInGbs\":1759389481,\"timeCreated\":\"msksbp\",\"lifecycleDetails\":\"lqol\",\"maintenanceWindow\":{\"preference\":\"NoPreference\",\"months\":[{\"name\":\"April\"},{\"name\":\"August\"},{\"name\":\"October\"},{\"name\":\"October\"}],\"weeksOfMonth\":[1956640230,749906444],\"daysOfWeek\":[{\"name\":\"Wednesday\"},{\"name\":\"Thursday\"},{\"name\":\"Wednesday\"},{\"name\":\"Sunday\"}],\"hoursOfDay\":[1803667290],\"leadTimeInWeeks\":946666624,\"patchingMode\":\"Rolling\",\"customActionTimeoutInMins\":120685932,\"isCustomActionTimeoutEnabled\":true,\"isMonthlyPatchingEnabled\":true},\"estimatedPatchingTime\":{\"estimatedDbServerPatchingTime\":1781890675,\"estimatedNetworkSwitchesPatchingTime\":660829030,\"estimatedStorageServerPatchingTime\":1764617188,\"totalEstimatedPatchingTime\":641782608},\"customerContacts\":[{\"email\":\"in\"},{\"email\":\"g\"},{\"email\":\"wzf\"}],\"provisioningState\":\"Canceled\",\"lifecycleState\":\"Failed\",\"shape\":\"ktlahbqa\",\"ociUrl\":\"xtgzukxitmmqtgqq\",\"cpuCount\":1748959674,\"maxCpuCount\":107951618,\"memorySizeInGbs\":734515726,\"maxMemoryInGbs\":1873190222,\"dbNodeStorageSizeInGbs\":978629087,\"maxDbNodeStorageSizeInGbs\":1349800544,\"dataStorageSizeInTbs\":10.455391490981736,\"maxDataStorageInTbs\":3.83132991322106,\"dbServerVersion\":\"zfvazi\",\"storageServerVersion\":\"l\",\"activatedStorageCount\":1551479002,\"additionalStorageCount\":234618918,\"displayName\":\"bajlka\",\"lastMaintenanceRunId\":\"wxyiopidkqq\",\"nextMaintenanceRunId\":\"uvscxkdmligov\",\"monthlyDbServerVersion\":\"rxkpmloazuruoc\",\"monthlyStorageServerVersion\":\"oorb\"},\"zones\":[\"oybfhjxakvvj\",\"slordilmyww\",\"kgkxn\",\"edabgyvudtjue\"],\"location\":\"cihxuuwhcjyx\",\"tags\":{\"akkud\":\"bvpa\",\"wjplma\":\"px\"},\"id\":\"stcyohpfkyrkdbd\",\"name\":\"iogsjkmnwq\",\"type\":\"nobaiyhddviacegf\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OracleDatabaseManager manager = OracleDatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        CloudExadataInfrastructure response = manager.cloudExadataInfrastructures()
            .getByResourceGroupWithResponse("rwfscjfnynszquj", "zdvoqytibyowbb", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("cihxuuwhcjyx", response.location());
        Assertions.assertEquals("bvpa", response.tags().get("akkud"));
        Assertions.assertEquals(187612678, response.properties().computeCount());
        Assertions.assertEquals(1643251858, response.properties().storageCount());
        Assertions.assertEquals(Preference.NO_PREFERENCE, response.properties().maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.APRIL, response.properties().maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(1956640230, response.properties().maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.WEDNESDAY,
            response.properties().maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(1803667290, response.properties().maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(946666624, response.properties().maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.ROLLING, response.properties().maintenanceWindow().patchingMode());
        Assertions.assertEquals(120685932, response.properties().maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertEquals(true, response.properties().maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertEquals(true, response.properties().maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("in", response.properties().customerContacts().get(0).email());
        Assertions.assertEquals("ktlahbqa", response.properties().shape());
        Assertions.assertEquals("bajlka", response.properties().displayName());
        Assertions.assertEquals("oybfhjxakvvj", response.zones().get(0));
    }
}
