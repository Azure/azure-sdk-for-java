// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oracledatabase.OracleDatabaseManager;
import com.azure.resourcemanager.oracledatabase.models.CloudExadataInfrastructure;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekName;
import com.azure.resourcemanager.oracledatabase.models.MonthName;
import com.azure.resourcemanager.oracledatabase.models.PatchingMode;
import com.azure.resourcemanager.oracledatabase.models.Preference;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudExadataInfrastructuresGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"definedFileSystemConfiguration\":[{\"isBackupPartition\":false,\"isResizable\":false,\"minSizeGb\":575797032,\"mountPoint\":\"v\"},{\"isBackupPartition\":true,\"isResizable\":false,\"minSizeGb\":24644358,\"mountPoint\":\"keifzzhmkdasv\"},{\"isBackupPartition\":true,\"isResizable\":false,\"minSizeGb\":432756215,\"mountPoint\":\"dchxgsrboldfor\"},{\"isBackupPartition\":true,\"isResizable\":false,\"minSizeGb\":998979559,\"mountPoint\":\"bfhfovvacqp\"}],\"ocid\":\"uodxesza\",\"computeCount\":1654037219,\"storageCount\":1797957614,\"totalStorageSizeInGbs\":2002905028,\"availableStorageSizeInGbs\":308639473,\"timeCreated\":\"slzkwrrwoycqu\",\"lifecycleDetails\":\"yhahnomdrkyw\",\"maintenanceWindow\":{\"preference\":\"CustomPreference\",\"months\":[{\"name\":\"October\"},{\"name\":\"November\"},{\"name\":\"November\"}],\"weeksOfMonth\":[1702145471,502695723,1783251204,1188948288],\"daysOfWeek\":[{\"name\":\"Wednesday\"},{\"name\":\"Wednesday\"},{\"name\":\"Sunday\"},{\"name\":\"Thursday\"}],\"hoursOfDay\":[2141850057,116262403],\"leadTimeInWeeks\":1599319524,\"patchingMode\":\"NonRolling\",\"customActionTimeoutInMins\":1705044964,\"isCustomActionTimeoutEnabled\":false,\"isMonthlyPatchingEnabled\":false},\"estimatedPatchingTime\":{\"estimatedDbServerPatchingTime\":2090759507,\"estimatedNetworkSwitchesPatchingTime\":883576169,\"estimatedStorageServerPatchingTime\":255810244,\"totalEstimatedPatchingTime\":55723460},\"customerContacts\":[{\"email\":\"zyvli\"},{\"email\":\"q\"},{\"email\":\"rkcxkj\"},{\"email\":\"bn\"}],\"provisioningState\":\"Succeeded\",\"lifecycleState\":\"MaintenanceInProgress\",\"shape\":\"xs\",\"ociUrl\":\"rntvlwijp\",\"cpuCount\":169879542,\"maxCpuCount\":1924013089,\"memorySizeInGbs\":246018660,\"maxMemoryInGbs\":382801077,\"dbNodeStorageSizeInGbs\":1761852553,\"maxDbNodeStorageSizeInGbs\":1230489128,\"dataStorageSizeInTbs\":59.37275961543765,\"maxDataStorageInTbs\":75.47673620969648,\"dbServerVersion\":\"cuwmqsp\",\"storageServerVersion\":\"dqzh\",\"activatedStorageCount\":1980287093,\"additionalStorageCount\":1365011291,\"displayName\":\"unqndyfpchrqb\",\"lastMaintenanceRunId\":\"jrcg\",\"nextMaintenanceRunId\":\"ydcwboxjumv\",\"monthlyDbServerVersion\":\"olihrra\",\"monthlyStorageServerVersion\":\"uaubrj\",\"databaseServerType\":\"oq\",\"storageServerType\":\"uojrngiflr\",\"computeModel\":\"ECPU\"},\"zones\":[\"ccbiuimzdlyjdfq\",\"mkyoqufdvruzsl\",\"ojhp\"],\"location\":\"fnmdxotn\",\"tags\":{\"i\":\"gugey\"},\"id\":\"grkyuizabsnmfpph\",\"name\":\"jee\",\"type\":\"yhyhsgzfczb\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OracleDatabaseManager manager = OracleDatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        CloudExadataInfrastructure response = manager.cloudExadataInfrastructures()
            .getByResourceGroupWithResponse("lvidizozs", "bccxjmonfdgn", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("fnmdxotn", response.location());
        Assertions.assertEquals("gugey", response.tags().get("i"));
        Assertions.assertEquals(1654037219, response.properties().computeCount());
        Assertions.assertEquals(1797957614, response.properties().storageCount());
        Assertions.assertEquals(Preference.CUSTOM_PREFERENCE, response.properties().maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.OCTOBER, response.properties().maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(1702145471, response.properties().maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.WEDNESDAY,
            response.properties().maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(2141850057, response.properties().maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(1599319524, response.properties().maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.NON_ROLLING, response.properties().maintenanceWindow().patchingMode());
        Assertions.assertEquals(1705044964, response.properties().maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertFalse(response.properties().maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertFalse(response.properties().maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("zyvli", response.properties().customerContacts().get(0).email());
        Assertions.assertEquals("xs", response.properties().shape());
        Assertions.assertEquals("unqndyfpchrqb", response.properties().displayName());
        Assertions.assertEquals("oq", response.properties().databaseServerType());
        Assertions.assertEquals("uojrngiflr", response.properties().storageServerType());
        Assertions.assertEquals("ccbiuimzdlyjdfq", response.zones().get(0));
    }
}
