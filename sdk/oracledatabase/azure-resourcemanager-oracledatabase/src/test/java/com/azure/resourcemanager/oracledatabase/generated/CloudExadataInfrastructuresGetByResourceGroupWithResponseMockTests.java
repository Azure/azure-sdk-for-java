// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oracledatabase.OracleDatabaseManager;
import com.azure.resourcemanager.oracledatabase.models.CloudExadataInfrastructure;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekName;
import com.azure.resourcemanager.oracledatabase.models.MonthName;
import com.azure.resourcemanager.oracledatabase.models.PatchingMode;
import com.azure.resourcemanager.oracledatabase.models.Preference;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudExadataInfrastructuresGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"ocid\":\"bywdxsmicc\",\"computeCount\":1785169446,\"storageCount\":1985430626,\"totalStorageSizeInGbs\":1975911736,\"availableStorageSizeInGbs\":163790859,\"timeCreated\":\"nszqujiz\",\"lifecycleDetails\":\"oqytibyowbblgy\",\"maintenanceWindow\":{\"preference\":\"NoPreference\",\"months\":[{\"name\":\"February\"},{\"name\":\"June\"},{\"name\":\"April\"}],\"weeksOfMonth\":[1759389481,1315761996,1422176013,624648984],\"daysOfWeek\":[{\"name\":\"Sunday\"},{\"name\":\"Saturday\"}],\"hoursOfDay\":[1015646968,836392203],\"leadTimeInWeeks\":313242233,\"patchingMode\":\"NonRolling\",\"customActionTimeoutInMins\":1786870924,\"isCustomActionTimeoutEnabled\":true,\"isMonthlyPatchingEnabled\":false},\"estimatedPatchingTime\":{\"estimatedDbServerPatchingTime\":2486236,\"estimatedNetworkSwitchesPatchingTime\":1956640230,\"estimatedStorageServerPatchingTime\":2075346576,\"totalEstimatedPatchingTime\":1128961825},\"customerContacts\":[{\"email\":\"dwl\"},{\"email\":\"w\"},{\"email\":\"youpfgfbkj\"},{\"email\":\"bdyhgkfminsgowz\"}],\"provisioningState\":\"Canceled\",\"lifecycleState\":\"Provisioning\",\"shape\":\"t\",\"ociUrl\":\"lahb\",\"cpuCount\":520028629,\"maxCpuCount\":2006118206,\"memorySizeInGbs\":118535522,\"maxMemoryInGbs\":1217445631,\"dbNodeStorageSizeInGbs\":563035925,\"maxDbNodeStorageSizeInGbs\":1089045976,\"dataStorageSizeInTbs\":179532208,\"maxDataStorageInTbs\":6.702767793521824,\"dbServerVersion\":\"qqxhrnxrxcpj\",\"storageServerVersion\":\"savokqdzf\",\"activatedStorageCount\":1042869569,\"additionalStorageCount\":2015132564,\"displayName\":\"jlfrq\",\"lastMaintenanceRunId\":\"bajlka\",\"nextMaintenanceRunId\":\"wxyiopidkqq\",\"monthlyDbServerVersion\":\"uvscxkdmligov\",\"monthlyStorageServerVersion\":\"rxkpmloazuruoc\"},\"zones\":[\"oorb\",\"eoybfhjxakvvjgs\"],\"location\":\"r\",\"tags\":{\"b\":\"mywwtkgkxnyed\",\"xuuwhcj\":\"yvudtjuewbci\",\"akkud\":\"xccybvpa\",\"wjplma\":\"px\"},\"id\":\"stcyohpfkyrkdbd\",\"name\":\"iogsjkmnwq\",\"type\":\"nobaiyhddviacegf\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OracleDatabaseManager manager = OracleDatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        CloudExadataInfrastructure response = manager.cloudExadataInfrastructures()
            .getByResourceGroupWithResponse("onmacjekniz", "hqvcimpevfgmblr", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("r", response.location());
        Assertions.assertEquals("mywwtkgkxnyed", response.tags().get("b"));
        Assertions.assertEquals(1785169446, response.properties().computeCount());
        Assertions.assertEquals(1985430626, response.properties().storageCount());
        Assertions.assertEquals(Preference.NO_PREFERENCE, response.properties().maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.FEBRUARY, response.properties().maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(1759389481, response.properties().maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.SUNDAY,
            response.properties().maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(1015646968, response.properties().maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(313242233, response.properties().maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.NON_ROLLING, response.properties().maintenanceWindow().patchingMode());
        Assertions.assertEquals(1786870924, response.properties().maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertEquals(true, response.properties().maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertEquals(false, response.properties().maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("dwl", response.properties().customerContacts().get(0).email());
        Assertions.assertEquals("t", response.properties().shape());
        Assertions.assertEquals("jlfrq", response.properties().displayName());
        Assertions.assertEquals("oorb", response.zones().get(0));
    }
}
