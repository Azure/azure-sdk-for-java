// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oracledatabase.OracleDatabaseManager;
import com.azure.resourcemanager.oracledatabase.models.ComputeModel;
import com.azure.resourcemanager.oracledatabase.models.DbSystemShape;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DbSystemShapesListByLocationMockTests {
    @Test
    public void testListByLocation() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"shapeFamily\":\"ferr\",\"shapeName\":\"wexjkmfxapjwogq\",\"availableCoreCount\":1688417232,\"minimumCoreCount\":1928590225,\"runtimeMinimumCoreCount\":1623831151,\"coreCountIncrement\":623740399,\"minStorageCount\":1894525187,\"maxStorageCount\":1873206195,\"availableDataStoragePerServerInTbs\":43.859761104825814,\"availableMemoryPerNodeInGbs\":333433900,\"availableDbNodePerNodeInGbs\":713564205,\"minCoreCountPerNode\":2036163978,\"availableMemoryInGbs\":1294437509,\"minMemoryPerNodeInGbs\":1474502129,\"availableDbNodeStorageInGbs\":778203441,\"minDbNodeStoragePerNodeInGbs\":302291519,\"availableDataStorageInTbs\":1122336945,\"minDataStorageInTbs\":2025422564,\"minimumNodeCount\":733290659,\"maximumNodeCount\":1393109773,\"availableCoreCountPerNode\":241996681,\"computeModel\":\"ECPU\",\"areServerTypesSupported\":false,\"displayName\":\"sdaultxij\"},\"id\":\"mfqwa\",\"name\":\"lnqnmcjn\",\"type\":\"zqdqxt\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OracleDatabaseManager manager = OracleDatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<DbSystemShape> response
            = manager.dbSystemShapes().listByLocation("ubwefqs", "ap", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ferr", response.iterator().next().properties().shapeFamily());
        Assertions.assertEquals("wexjkmfxapjwogq", response.iterator().next().properties().shapeName());
        Assertions.assertEquals(1688417232, response.iterator().next().properties().availableCoreCount());
        Assertions.assertEquals(1928590225, response.iterator().next().properties().minimumCoreCount());
        Assertions.assertEquals(1623831151, response.iterator().next().properties().runtimeMinimumCoreCount());
        Assertions.assertEquals(623740399, response.iterator().next().properties().coreCountIncrement());
        Assertions.assertEquals(1894525187, response.iterator().next().properties().minStorageCount());
        Assertions.assertEquals(1873206195, response.iterator().next().properties().maxStorageCount());
        Assertions.assertEquals(43.859761104825814D,
            response.iterator().next().properties().availableDataStoragePerServerInTbs());
        Assertions.assertEquals(333433900, response.iterator().next().properties().availableMemoryPerNodeInGbs());
        Assertions.assertEquals(713564205, response.iterator().next().properties().availableDbNodePerNodeInGbs());
        Assertions.assertEquals(2036163978, response.iterator().next().properties().minCoreCountPerNode());
        Assertions.assertEquals(1294437509, response.iterator().next().properties().availableMemoryInGbs());
        Assertions.assertEquals(1474502129, response.iterator().next().properties().minMemoryPerNodeInGbs());
        Assertions.assertEquals(778203441, response.iterator().next().properties().availableDbNodeStorageInGbs());
        Assertions.assertEquals(302291519, response.iterator().next().properties().minDbNodeStoragePerNodeInGbs());
        Assertions.assertEquals(1122336945, response.iterator().next().properties().availableDataStorageInTbs());
        Assertions.assertEquals(2025422564, response.iterator().next().properties().minDataStorageInTbs());
        Assertions.assertEquals(733290659, response.iterator().next().properties().minimumNodeCount());
        Assertions.assertEquals(1393109773, response.iterator().next().properties().maximumNodeCount());
        Assertions.assertEquals(241996681, response.iterator().next().properties().availableCoreCountPerNode());
        Assertions.assertEquals(ComputeModel.ECPU, response.iterator().next().properties().computeModel());
        Assertions.assertFalse(response.iterator().next().properties().areServerTypesSupported());
        Assertions.assertEquals("sdaultxij", response.iterator().next().properties().displayName());
    }
}
