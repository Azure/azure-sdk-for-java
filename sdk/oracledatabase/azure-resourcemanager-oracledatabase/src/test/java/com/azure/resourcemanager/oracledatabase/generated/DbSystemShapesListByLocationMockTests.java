// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oracledatabase.OracleDatabaseManager;
import com.azure.resourcemanager.oracledatabase.models.ComputeModel;
import com.azure.resourcemanager.oracledatabase.models.DbSystemShape;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DbSystemShapesListByLocationMockTests {
    @Test
    public void testListByLocation() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"shapeFamily\":\"ruswhv\",\"shapeName\":\"czznvfbycjsxj\",\"availableCoreCount\":649066801,\"minimumCoreCount\":619019093,\"runtimeMinimumCoreCount\":2058612555,\"coreCountIncrement\":1659306080,\"minStorageCount\":1721115521,\"maxStorageCount\":260719859,\"availableDataStoragePerServerInTbs\":45.274637580867186,\"availableMemoryPerNodeInGbs\":1385229994,\"availableDbNodePerNodeInGbs\":1720273649,\"minCoreCountPerNode\":521658697,\"availableMemoryInGbs\":1681386339,\"minMemoryPerNodeInGbs\":1759834581,\"availableDbNodeStorageInGbs\":757674973,\"minDbNodeStoragePerNodeInGbs\":762315907,\"availableDataStorageInTbs\":1605190463,\"minDataStorageInTbs\":1952458367,\"minimumNodeCount\":152942786,\"maximumNodeCount\":589118768,\"availableCoreCountPerNode\":653737679,\"computeModel\":\"OCPU\",\"areServerTypesSupported\":false,\"displayName\":\"nje\"},\"id\":\"gltsxoat\",\"name\":\"tgzpnpb\",\"type\":\"wvefloccsrmoz\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OracleDatabaseManager manager = OracleDatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<DbSystemShape> response
            = manager.dbSystemShapes().listByLocation("qbsms", "ziqgfuh", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ruswhv", response.iterator().next().properties().shapeFamily());
        Assertions.assertEquals("czznvfbycjsxj", response.iterator().next().properties().shapeName());
        Assertions.assertEquals(649066801, response.iterator().next().properties().availableCoreCount());
        Assertions.assertEquals(619019093, response.iterator().next().properties().minimumCoreCount());
        Assertions.assertEquals(2058612555, response.iterator().next().properties().runtimeMinimumCoreCount());
        Assertions.assertEquals(1659306080, response.iterator().next().properties().coreCountIncrement());
        Assertions.assertEquals(1721115521, response.iterator().next().properties().minStorageCount());
        Assertions.assertEquals(260719859, response.iterator().next().properties().maxStorageCount());
        Assertions.assertEquals(45.274637580867186D,
            response.iterator().next().properties().availableDataStoragePerServerInTbs());
        Assertions.assertEquals(1385229994, response.iterator().next().properties().availableMemoryPerNodeInGbs());
        Assertions.assertEquals(1720273649, response.iterator().next().properties().availableDbNodePerNodeInGbs());
        Assertions.assertEquals(521658697, response.iterator().next().properties().minCoreCountPerNode());
        Assertions.assertEquals(1681386339, response.iterator().next().properties().availableMemoryInGbs());
        Assertions.assertEquals(1759834581, response.iterator().next().properties().minMemoryPerNodeInGbs());
        Assertions.assertEquals(757674973, response.iterator().next().properties().availableDbNodeStorageInGbs());
        Assertions.assertEquals(762315907, response.iterator().next().properties().minDbNodeStoragePerNodeInGbs());
        Assertions.assertEquals(1605190463, response.iterator().next().properties().availableDataStorageInTbs());
        Assertions.assertEquals(1952458367, response.iterator().next().properties().minDataStorageInTbs());
        Assertions.assertEquals(152942786, response.iterator().next().properties().minimumNodeCount());
        Assertions.assertEquals(589118768, response.iterator().next().properties().maximumNodeCount());
        Assertions.assertEquals(653737679, response.iterator().next().properties().availableCoreCountPerNode());
        Assertions.assertEquals(ComputeModel.OCPU, response.iterator().next().properties().computeModel());
        Assertions.assertFalse(response.iterator().next().properties().areServerTypesSupported());
        Assertions.assertEquals("nje", response.iterator().next().properties().displayName());
    }
}
