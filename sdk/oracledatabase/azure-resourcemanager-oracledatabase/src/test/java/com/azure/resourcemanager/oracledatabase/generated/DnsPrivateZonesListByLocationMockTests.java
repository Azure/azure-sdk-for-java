// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oracledatabase.OracleDatabaseManager;
import com.azure.resourcemanager.oracledatabase.models.DnsPrivateZone;
import com.azure.resourcemanager.oracledatabase.models.DnsPrivateZonesLifecycleState;
import com.azure.resourcemanager.oracledatabase.models.ZoneType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DnsPrivateZonesListByLocationMockTests {
    @Test
    public void testListByLocation() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"ocid\":\"it\",\"isProtected\":false,\"lifecycleState\":\"Creating\",\"self\":\"zvbrzcdbanfzndsc\",\"serial\":1628332910,\"version\":\"xeatkd\",\"viewId\":\"wnrdjyibqbnaom\",\"zoneType\":\"Secondary\",\"timeCreated\":\"2021-05-24T04:18:25Z\",\"provisioningState\":\"Canceled\"},\"id\":\"hmaxljalfi\",\"name\":\"cjmobcanc\",\"type\":\"exxqcwg\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OracleDatabaseManager manager = OracleDatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<DnsPrivateZone> response
            = manager.dnsPrivateZones().listByLocation("uzqymtuowog", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("it", response.iterator().next().properties().ocid());
        Assertions.assertFalse(response.iterator().next().properties().isProtected());
        Assertions.assertEquals(DnsPrivateZonesLifecycleState.CREATING,
            response.iterator().next().properties().lifecycleState());
        Assertions.assertEquals("zvbrzcdbanfzndsc", response.iterator().next().properties().self());
        Assertions.assertEquals(1628332910, response.iterator().next().properties().serial());
        Assertions.assertEquals("xeatkd", response.iterator().next().properties().version());
        Assertions.assertEquals("wnrdjyibqbnaom", response.iterator().next().properties().viewId());
        Assertions.assertEquals(ZoneType.SECONDARY, response.iterator().next().properties().zoneType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-24T04:18:25Z"),
            response.iterator().next().properties().timeCreated());
    }
}
