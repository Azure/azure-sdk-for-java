// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oracledatabase.OracleDatabaseManager;
import com.azure.resourcemanager.oracledatabase.models.CloudExadataInfrastructure;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekName;
import com.azure.resourcemanager.oracledatabase.models.MonthName;
import com.azure.resourcemanager.oracledatabase.models.PatchingMode;
import com.azure.resourcemanager.oracledatabase.models.Preference;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudExadataInfrastructuresListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"ocid\":\"bar\",\"computeCount\":1877295480,\"storageCount\":1922609600,\"totalStorageSizeInGbs\":462603095,\"availableStorageSizeInGbs\":1194423212,\"timeCreated\":\"qgzsles\",\"lifecycleDetails\":\"bhernntiew\",\"maintenanceWindow\":{\"preference\":\"NoPreference\",\"months\":[{\"name\":\"March\"},{\"name\":\"September\"},{\"name\":\"November\"}],\"weeksOfMonth\":[1619568012,372770519],\"daysOfWeek\":[{\"name\":\"Saturday\"},{\"name\":\"Saturday\"},{\"name\":\"Wednesday\"}],\"hoursOfDay\":[961183610],\"leadTimeInWeeks\":519813577,\"patchingMode\":\"Rolling\",\"customActionTimeoutInMins\":1538670364,\"isCustomActionTimeoutEnabled\":true,\"isMonthlyPatchingEnabled\":false},\"estimatedPatchingTime\":{\"estimatedDbServerPatchingTime\":851546423,\"estimatedNetworkSwitchesPatchingTime\":526256547,\"estimatedStorageServerPatchingTime\":1503248770,\"totalEstimatedPatchingTime\":1547497678},\"customerContacts\":[{\"email\":\"ebjvewzcjzn\"}],\"provisioningState\":\"Provisioning\",\"lifecycleState\":\"Available\",\"shape\":\"guaadraufactkahz\",\"ociUrl\":\"ajjziuxxpshne\",\"cpuCount\":1978709221,\"maxCpuCount\":662153855,\"memorySizeInGbs\":88278360,\"maxMemoryInGbs\":1157333655,\"dbNodeStorageSizeInGbs\":389915828,\"maxDbNodeStorageSizeInGbs\":471639164,\"dataStorageSizeInTbs\":28.706591075058206,\"maxDataStorageInTbs\":17.831447749619333,\"dbServerVersion\":\"utujba\",\"storageServerVersion\":\"juohminyflnorw\",\"activatedStorageCount\":875787207,\"additionalStorageCount\":1769195626,\"displayName\":\"pklvxw\",\"lastMaintenanceRunId\":\"gdxpg\",\"nextMaintenanceRunId\":\"chisze\",\"monthlyDbServerVersion\":\"nb\",\"monthlyStorageServerVersion\":\"rxgibbd\"},\"zones\":[\"confozauors\",\"kokwbqplhlvnu\",\"epzl\"],\"location\":\"hw\",\"tags\":{\"wey\":\"l\",\"talywjhhgdnhxms\":\"qdunvmnnrwrbior\",\"omi\":\"v\"},\"id\":\"ox\",\"name\":\"gdufiqnd\",\"type\":\"euzaof\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OracleDatabaseManager manager = OracleDatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<CloudExadataInfrastructure> response
            = manager.cloudExadataInfrastructures().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("hw", response.iterator().next().location());
        Assertions.assertEquals("l", response.iterator().next().tags().get("wey"));
        Assertions.assertEquals(1877295480, response.iterator().next().properties().computeCount());
        Assertions.assertEquals(1922609600, response.iterator().next().properties().storageCount());
        Assertions.assertEquals(Preference.NO_PREFERENCE,
            response.iterator().next().properties().maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.MARCH,
            response.iterator().next().properties().maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(1619568012,
            response.iterator().next().properties().maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.SATURDAY,
            response.iterator().next().properties().maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(961183610,
            response.iterator().next().properties().maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(519813577,
            response.iterator().next().properties().maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.ROLLING,
            response.iterator().next().properties().maintenanceWindow().patchingMode());
        Assertions.assertEquals(1538670364,
            response.iterator().next().properties().maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertEquals(true,
            response.iterator().next().properties().maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertEquals(false,
            response.iterator().next().properties().maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("ebjvewzcjzn",
            response.iterator().next().properties().customerContacts().get(0).email());
        Assertions.assertEquals("guaadraufactkahz", response.iterator().next().properties().shape());
        Assertions.assertEquals("pklvxw", response.iterator().next().properties().displayName());
        Assertions.assertEquals("confozauors", response.iterator().next().zones().get(0));
    }
}
