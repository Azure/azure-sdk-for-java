// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oracledatabase.OracleDatabaseManager;
import com.azure.resourcemanager.oracledatabase.models.CloudExadataInfrastructure;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekName;
import com.azure.resourcemanager.oracledatabase.models.MonthName;
import com.azure.resourcemanager.oracledatabase.models.PatchingMode;
import com.azure.resourcemanager.oracledatabase.models.Preference;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudExadataInfrastructuresListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"ocid\":\"sfmznbaeqphc\",\"computeCount\":1311384548,\"storageCount\":1941100702,\"totalStorageSizeInGbs\":969252607,\"availableStorageSizeInGbs\":2099945195,\"timeCreated\":\"uwrykqgaifmvikl\",\"lifecycleDetails\":\"dvk\",\"maintenanceWindow\":{\"preference\":\"NoPreference\",\"months\":[{\"name\":\"December\"},{\"name\":\"April\"}],\"weeksOfMonth\":[2141010446,2045200930,929609340],\"daysOfWeek\":[{\"name\":\"Sunday\"},{\"name\":\"Monday\"},{\"name\":\"Thursday\"}],\"hoursOfDay\":[1976490,2016874931],\"leadTimeInWeeks\":1858864878,\"patchingMode\":\"NonRolling\",\"customActionTimeoutInMins\":1191725223,\"isCustomActionTimeoutEnabled\":false,\"isMonthlyPatchingEnabled\":true},\"estimatedPatchingTime\":{\"estimatedDbServerPatchingTime\":566007686,\"estimatedNetworkSwitchesPatchingTime\":311257977,\"estimatedStorageServerPatchingTime\":1720630047,\"totalEstimatedPatchingTime\":184092911},\"customerContacts\":[{\"email\":\"eamtmcz\"},{\"email\":\"o\"}],\"provisioningState\":\"Succeeded\",\"lifecycleState\":\"Updating\",\"shape\":\"w\",\"ociUrl\":\"ioknssxmoj\",\"cpuCount\":1481595996,\"maxCpuCount\":1534377343,\"memorySizeInGbs\":2108031583,\"maxMemoryInGbs\":473129679,\"dbNodeStorageSizeInGbs\":592293204,\"maxDbNodeStorageSizeInGbs\":524680213,\"dataStorageSizeInTbs\":344733635,\"maxDataStorageInTbs\":44.8669037655794,\"dbServerVersion\":\"gtczheydb\",\"storageServerVersion\":\"shmkxmaehvbbxur\",\"activatedStorageCount\":874326134,\"additionalStorageCount\":1041302406,\"displayName\":\"n\",\"lastMaintenanceRunId\":\"baxk\",\"nextMaintenanceRunId\":\"ywrckp\",\"monthlyDbServerVersion\":\"lyhpluodpvruud\",\"monthlyStorageServerVersion\":\"zibt\"},\"zones\":[\"stgktst\",\"dxeclzedqbcvh\"],\"location\":\"h\",\"tags\":{\"lkxt\":\"dqkdlwwqfbu\",\"fwsrtawcoezbrhu\":\"qjfsmlmbtxhw\",\"dyg\":\"skh\"},\"id\":\"ookk\",\"name\":\"fqjbvleo\",\"type\":\"fmluiqtqzfavyvn\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OracleDatabaseManager manager = OracleDatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<CloudExadataInfrastructure> response
            = manager.cloudExadataInfrastructures().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("h", response.iterator().next().location());
        Assertions.assertEquals("dqkdlwwqfbu", response.iterator().next().tags().get("lkxt"));
        Assertions.assertEquals(1311384548, response.iterator().next().properties().computeCount());
        Assertions.assertEquals(1941100702, response.iterator().next().properties().storageCount());
        Assertions.assertEquals(Preference.NO_PREFERENCE,
            response.iterator().next().properties().maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.DECEMBER,
            response.iterator().next().properties().maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(2141010446,
            response.iterator().next().properties().maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.SUNDAY,
            response.iterator().next().properties().maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(1976490,
            response.iterator().next().properties().maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(1858864878,
            response.iterator().next().properties().maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.NON_ROLLING,
            response.iterator().next().properties().maintenanceWindow().patchingMode());
        Assertions.assertEquals(1191725223,
            response.iterator().next().properties().maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertEquals(false,
            response.iterator().next().properties().maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertEquals(true,
            response.iterator().next().properties().maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("eamtmcz", response.iterator().next().properties().customerContacts().get(0).email());
        Assertions.assertEquals("w", response.iterator().next().properties().shape());
        Assertions.assertEquals("n", response.iterator().next().properties().displayName());
        Assertions.assertEquals("stgktst", response.iterator().next().zones().get(0));
    }
}
