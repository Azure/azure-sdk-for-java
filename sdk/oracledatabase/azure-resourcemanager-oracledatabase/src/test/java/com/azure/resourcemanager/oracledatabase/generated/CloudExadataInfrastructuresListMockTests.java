// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oracledatabase.OracleDatabaseManager;
import com.azure.resourcemanager.oracledatabase.models.CloudExadataInfrastructure;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekName;
import com.azure.resourcemanager.oracledatabase.models.MonthName;
import com.azure.resourcemanager.oracledatabase.models.PatchingMode;
import com.azure.resourcemanager.oracledatabase.models.Preference;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudExadataInfrastructuresListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"ocid\":\"jdz\",\"computeCount\":2140259102,\"storageCount\":2141010446,\"totalStorageSizeInGbs\":929609340,\"availableStorageSizeInGbs\":986033506,\"timeCreated\":\"iv\",\"lifecycleDetails\":\"v\",\"maintenanceWindow\":{\"preference\":\"NoPreference\",\"months\":[{\"name\":\"December\"}],\"weeksOfMonth\":[1600023368,430792961],\"daysOfWeek\":[{\"name\":\"Thursday\"}],\"hoursOfDay\":[239999134,1720630047,2130158442],\"leadTimeInWeeks\":997568890,\"patchingMode\":\"Rolling\",\"customActionTimeoutInMins\":10785400,\"isCustomActionTimeoutEnabled\":false,\"isMonthlyPatchingEnabled\":false},\"estimatedPatchingTime\":{\"estimatedDbServerPatchingTime\":61901401,\"estimatedNetworkSwitchesPatchingTime\":418634069,\"estimatedStorageServerPatchingTime\":1975248748,\"totalEstimatedPatchingTime\":1157846345},\"customerContacts\":[{\"email\":\"oknssxmojmsvpkjp\"},{\"email\":\"vk\"},{\"email\":\"cfzq\"}],\"provisioningState\":\"Failed\",\"lifecycleState\":\"Terminated\",\"shape\":\"tczheydbsdshmkx\",\"ociUrl\":\"ehvbbxurip\",\"cpuCount\":1041302406,\"maxCpuCount\":820858247,\"memorySizeInGbs\":895803414,\"maxMemoryInGbs\":106040012,\"dbNodeStorageSizeInGbs\":407621468,\"maxDbNodeStorageSizeInGbs\":1532025762,\"dataStorageSizeInTbs\":7.874310995619438,\"maxDataStorageInTbs\":87.69987969940584,\"dbServerVersion\":\"lyhpluodpvruud\",\"storageServerVersion\":\"zibt\",\"activatedStorageCount\":1721626377,\"additionalStorageCount\":1861002535,\"displayName\":\"ktst\",\"lastMaintenanceRunId\":\"xeclzedqbcvhzlhp\",\"nextMaintenanceRunId\":\"dqkdlwwqfbu\",\"monthlyDbServerVersion\":\"kxtrq\",\"monthlyStorageServerVersion\":\"smlmbtxhwgfwsrta\"},\"zones\":[\"oezbrhubsk\",\"udygooo\",\"kqfqjbvl\"],\"location\":\"rfmluiqtq\",\"tags\":{\"ryeu\":\"vyvnqqyb\",\"ernntiewdjcvbquw\":\"yjkqabqgzslesjcb\",\"f\":\"behwagohb\"},\"id\":\"kmr\",\"name\":\"emvvhm\",\"type\":\"tdrjfutacoebj\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OracleDatabaseManager manager = OracleDatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<CloudExadataInfrastructure> response
            = manager.cloudExadataInfrastructures().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("rfmluiqtq", response.iterator().next().location());
        Assertions.assertEquals("vyvnqqyb", response.iterator().next().tags().get("ryeu"));
        Assertions.assertEquals(2140259102, response.iterator().next().properties().computeCount());
        Assertions.assertEquals(2141010446, response.iterator().next().properties().storageCount());
        Assertions.assertEquals(Preference.NO_PREFERENCE,
            response.iterator().next().properties().maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.DECEMBER,
            response.iterator().next().properties().maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(1600023368,
            response.iterator().next().properties().maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.THURSDAY,
            response.iterator().next().properties().maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(239999134,
            response.iterator().next().properties().maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(997568890,
            response.iterator().next().properties().maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.ROLLING,
            response.iterator().next().properties().maintenanceWindow().patchingMode());
        Assertions.assertEquals(10785400,
            response.iterator().next().properties().maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertEquals(false,
            response.iterator().next().properties().maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertEquals(false,
            response.iterator().next().properties().maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("oknssxmojmsvpkjp",
            response.iterator().next().properties().customerContacts().get(0).email());
        Assertions.assertEquals("tczheydbsdshmkx", response.iterator().next().properties().shape());
        Assertions.assertEquals("ktst", response.iterator().next().properties().displayName());
        Assertions.assertEquals("oezbrhubsk", response.iterator().next().zones().get(0));
    }
}
