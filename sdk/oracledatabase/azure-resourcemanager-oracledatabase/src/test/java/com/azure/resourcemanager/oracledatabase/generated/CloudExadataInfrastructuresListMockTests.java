// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oracledatabase.OracleDatabaseManager;
import com.azure.resourcemanager.oracledatabase.models.CloudExadataInfrastructure;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekName;
import com.azure.resourcemanager.oracledatabase.models.MonthName;
import com.azure.resourcemanager.oracledatabase.models.PatchingMode;
import com.azure.resourcemanager.oracledatabase.models.Preference;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudExadataInfrastructuresListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"definedFileSystemConfiguration\":[{\"isBackupPartition\":false,\"isResizable\":true,\"minSizeGb\":1538236365,\"mountPoint\":\"vkhlggdhbemz\"},{\"isBackupPartition\":true,\"isResizable\":false,\"minSizeGb\":369373593,\"mountPoint\":\"wtglxx\"}],\"ocid\":\"jfpgpicrmn\",\"computeCount\":1791741914,\"storageCount\":185750645,\"totalStorageSizeInGbs\":1113568853,\"availableStorageSizeInGbs\":1915158747,\"timeCreated\":\"vpqcb\",\"lifecycleDetails\":\"mbodthsqqgvri\",\"maintenanceWindow\":{\"preference\":\"CustomPreference\",\"months\":[{\"name\":\"June\"},{\"name\":\"March\"},{\"name\":\"May\"}],\"weeksOfMonth\":[731867794,225802150,1419015231,718112280],\"daysOfWeek\":[{\"name\":\"Monday\"},{\"name\":\"Sunday\"},{\"name\":\"Wednesday\"},{\"name\":\"Thursday\"}],\"hoursOfDay\":[1471469938],\"leadTimeInWeeks\":2126091229,\"patchingMode\":\"Rolling\",\"customActionTimeoutInMins\":414245170,\"isCustomActionTimeoutEnabled\":true,\"isMonthlyPatchingEnabled\":false},\"estimatedPatchingTime\":{\"estimatedDbServerPatchingTime\":1428837944,\"estimatedNetworkSwitchesPatchingTime\":290394700,\"estimatedStorageServerPatchingTime\":1264104137,\"totalEstimatedPatchingTime\":920817597},\"customerContacts\":[{\"email\":\"nwpztekovmrib\"},{\"email\":\"attgplu\"}],\"provisioningState\":\"Provisioning\",\"lifecycleState\":\"Failed\",\"shape\":\"ng\",\"ociUrl\":\"hnykz\",\"cpuCount\":809427492,\"maxCpuCount\":1031306393,\"memorySizeInGbs\":93280086,\"maxMemoryInGbs\":1324984617,\"dbNodeStorageSizeInGbs\":1382791929,\"maxDbNodeStorageSizeInGbs\":2107871356,\"dataStorageSizeInTbs\":76.30087898761334,\"maxDataStorageInTbs\":91.30495118133442,\"dbServerVersion\":\"xmcuqud\",\"storageServerVersion\":\"vclx\",\"activatedStorageCount\":1138354387,\"additionalStorageCount\":267466114,\"displayName\":\"vgfab\",\"lastMaintenanceRunId\":\"yjibuzphdugne\",\"nextMaintenanceRunId\":\"n\",\"monthlyDbServerVersion\":\"oxgjiuqhibt\",\"monthlyStorageServerVersion\":\"ipq\",\"databaseServerType\":\"edmurrxxge\",\"storageServerType\":\"ktvqylkmqpzoy\",\"computeModel\":\"OCPU\",\"exascaleConfig\":{\"totalStorageInGbs\":2059423163,\"availableStorageInGbs\":1487964076}},\"zones\":[\"cloxo\"],\"location\":\"qinjipnwjf\",\"tags\":{\"zpofoiyjwpfilk\":\"lafcbahh\",\"ogphuartvtiu\":\"kkholvdndvia\",\"ahmnxhkxjqirw\":\"yefchnm\",\"ewmozqvbu\":\"weooxffifhxwrs\"},\"id\":\"qmamhsycxhxzga\",\"name\":\"ttaboidvmfqh\",\"type\":\"pubowsepdfg\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OracleDatabaseManager manager = OracleDatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<CloudExadataInfrastructure> response
            = manager.cloudExadataInfrastructures().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("qinjipnwjf", response.iterator().next().location());
        Assertions.assertEquals("lafcbahh", response.iterator().next().tags().get("zpofoiyjwpfilk"));
        Assertions.assertEquals(1791741914, response.iterator().next().properties().computeCount());
        Assertions.assertEquals(185750645, response.iterator().next().properties().storageCount());
        Assertions.assertEquals(Preference.CUSTOM_PREFERENCE,
            response.iterator().next().properties().maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.JUNE,
            response.iterator().next().properties().maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(731867794,
            response.iterator().next().properties().maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.MONDAY,
            response.iterator().next().properties().maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(1471469938,
            response.iterator().next().properties().maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(2126091229,
            response.iterator().next().properties().maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.ROLLING,
            response.iterator().next().properties().maintenanceWindow().patchingMode());
        Assertions.assertEquals(414245170,
            response.iterator().next().properties().maintenanceWindow().customActionTimeoutInMins());
        Assertions
            .assertTrue(response.iterator().next().properties().maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertFalse(response.iterator().next().properties().maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("nwpztekovmrib",
            response.iterator().next().properties().customerContacts().get(0).email());
        Assertions.assertEquals("ng", response.iterator().next().properties().shape());
        Assertions.assertEquals("vgfab", response.iterator().next().properties().displayName());
        Assertions.assertEquals("edmurrxxge", response.iterator().next().properties().databaseServerType());
        Assertions.assertEquals("ktvqylkmqpzoy", response.iterator().next().properties().storageServerType());
        Assertions.assertEquals("cloxo", response.iterator().next().zones().get(0));
    }
}
