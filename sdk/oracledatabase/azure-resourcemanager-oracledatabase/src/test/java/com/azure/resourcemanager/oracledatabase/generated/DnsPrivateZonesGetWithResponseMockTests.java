// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oracledatabase.OracleDatabaseManager;
import com.azure.resourcemanager.oracledatabase.models.DnsPrivateZone;
import com.azure.resourcemanager.oracledatabase.models.DnsPrivateZonesLifecycleState;
import com.azure.resourcemanager.oracledatabase.models.ZoneType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DnsPrivateZonesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"ocid\":\"naie\",\"isProtected\":false,\"lifecycleState\":\"Deleted\",\"self\":\"h\",\"serial\":668159944,\"version\":\"ndnelqkaadlknw\",\"viewId\":\"anniyopetxivcnr\",\"zoneType\":\"Primary\",\"timeCreated\":\"2021-06-10T00:54:20Z\",\"provisioningState\":\"Succeeded\"},\"id\":\"aephblkw\",\"name\":\"pat\",\"type\":\"bqsdtcjbctvi\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OracleDatabaseManager manager = OracleDatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        DnsPrivateZone response = manager.dnsPrivateZones()
            .getWithResponse("nkrxwetwkdrcy", "ucpcunnuzdqumoen", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("naie", response.properties().ocid());
        Assertions.assertFalse(response.properties().isProtected());
        Assertions.assertEquals(DnsPrivateZonesLifecycleState.DELETED, response.properties().lifecycleState());
        Assertions.assertEquals("h", response.properties().self());
        Assertions.assertEquals(668159944, response.properties().serial());
        Assertions.assertEquals("ndnelqkaadlknw", response.properties().version());
        Assertions.assertEquals("anniyopetxivcnr", response.properties().viewId());
        Assertions.assertEquals(ZoneType.PRIMARY, response.properties().zoneType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-10T00:54:20Z"), response.properties().timeCreated());
    }
}
