// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oracledatabase.OracleDatabaseManager;
import com.azure.resourcemanager.oracledatabase.models.DnsPrivateZone;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DnsPrivateZonesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"ocid\":\"flrzpas\",\"isProtected\":false,\"lifecycleState\":\"Creating\",\"self\":\"uimzdlyjd\",\"serial\":7799986,\"version\":\"wmkyoqufdvruzsl\",\"viewId\":\"j\",\"zoneType\":\"Primary\",\"timeCreated\":\"2021-11-19T14:44:25Z\",\"provisioningState\":\"Failed\"},\"id\":\"mdxotngfdgu\",\"name\":\"eyzihgrky\",\"type\":\"i\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OracleDatabaseManager manager = OracleDatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DnsPrivateZone response
            = manager.dnsPrivateZones().getWithResponse("jtlo", "xfuojrn", com.azure.core.util.Context.NONE).getValue();

    }
}
