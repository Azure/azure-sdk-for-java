// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeek;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekName;
import com.azure.resourcemanager.oracledatabase.models.MaintenanceWindow;
import com.azure.resourcemanager.oracledatabase.models.Month;
import com.azure.resourcemanager.oracledatabase.models.MonthName;
import com.azure.resourcemanager.oracledatabase.models.PatchingMode;
import com.azure.resourcemanager.oracledatabase.models.Preference;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MaintenanceWindowTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MaintenanceWindow model = BinaryData.fromString(
            "{\"preference\":\"CustomPreference\",\"months\":[{\"name\":\"June\"},{\"name\":\"March\"}],\"weeksOfMonth\":[970666878],\"daysOfWeek\":[{\"name\":\"Friday\"},{\"name\":\"Friday\"},{\"name\":\"Monday\"}],\"hoursOfDay\":[333094369,1110747875,73605186],\"leadTimeInWeeks\":124550903,\"patchingMode\":\"NonRolling\",\"customActionTimeoutInMins\":1340454664,\"isCustomActionTimeoutEnabled\":true,\"isMonthlyPatchingEnabled\":true}")
            .toObject(MaintenanceWindow.class);
        Assertions.assertEquals(Preference.CUSTOM_PREFERENCE, model.preference());
        Assertions.assertEquals(MonthName.JUNE, model.months().get(0).name());
        Assertions.assertEquals(970666878, model.weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.FRIDAY, model.daysOfWeek().get(0).name());
        Assertions.assertEquals(333094369, model.hoursOfDay().get(0));
        Assertions.assertEquals(124550903, model.leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.NON_ROLLING, model.patchingMode());
        Assertions.assertEquals(1340454664, model.customActionTimeoutInMins());
        Assertions.assertTrue(model.isCustomActionTimeoutEnabled());
        Assertions.assertTrue(model.isMonthlyPatchingEnabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MaintenanceWindow model = new MaintenanceWindow().withPreference(Preference.CUSTOM_PREFERENCE)
            .withMonths(Arrays.asList(new Month().withName(MonthName.JUNE), new Month().withName(MonthName.MARCH)))
            .withWeeksOfMonth(Arrays.asList(970666878))
            .withDaysOfWeek(Arrays.asList(new DayOfWeek().withName(DayOfWeekName.FRIDAY),
                new DayOfWeek().withName(DayOfWeekName.FRIDAY), new DayOfWeek().withName(DayOfWeekName.MONDAY)))
            .withHoursOfDay(Arrays.asList(333094369, 1110747875, 73605186))
            .withLeadTimeInWeeks(124550903)
            .withPatchingMode(PatchingMode.NON_ROLLING)
            .withCustomActionTimeoutInMins(1340454664)
            .withIsCustomActionTimeoutEnabled(true)
            .withIsMonthlyPatchingEnabled(true);
        model = BinaryData.fromObject(model).toObject(MaintenanceWindow.class);
        Assertions.assertEquals(Preference.CUSTOM_PREFERENCE, model.preference());
        Assertions.assertEquals(MonthName.JUNE, model.months().get(0).name());
        Assertions.assertEquals(970666878, model.weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.FRIDAY, model.daysOfWeek().get(0).name());
        Assertions.assertEquals(333094369, model.hoursOfDay().get(0));
        Assertions.assertEquals(124550903, model.leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.NON_ROLLING, model.patchingMode());
        Assertions.assertEquals(1340454664, model.customActionTimeoutInMins());
        Assertions.assertTrue(model.isCustomActionTimeoutEnabled());
        Assertions.assertTrue(model.isMonthlyPatchingEnabled());
    }
}
