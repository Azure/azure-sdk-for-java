// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeek;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekName;
import com.azure.resourcemanager.oracledatabase.models.MaintenanceWindow;
import com.azure.resourcemanager.oracledatabase.models.Month;
import com.azure.resourcemanager.oracledatabase.models.MonthName;
import com.azure.resourcemanager.oracledatabase.models.PatchingMode;
import com.azure.resourcemanager.oracledatabase.models.Preference;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MaintenanceWindowTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MaintenanceWindow model = BinaryData.fromString(
            "{\"preference\":\"CustomPreference\",\"months\":[{\"name\":\"August\"},{\"name\":\"October\"},{\"name\":\"April\"},{\"name\":\"March\"}],\"weeksOfMonth\":[866198392],\"daysOfWeek\":[{\"name\":\"Saturday\"}],\"hoursOfDay\":[1346564492,1861834573,375848936,1220710831],\"leadTimeInWeeks\":956878361,\"patchingMode\":\"Rolling\",\"customActionTimeoutInMins\":722307224,\"isCustomActionTimeoutEnabled\":true,\"isMonthlyPatchingEnabled\":false}")
            .toObject(MaintenanceWindow.class);
        Assertions.assertEquals(Preference.CUSTOM_PREFERENCE, model.preference());
        Assertions.assertEquals(MonthName.AUGUST, model.months().get(0).name());
        Assertions.assertEquals(866198392, model.weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.SATURDAY, model.daysOfWeek().get(0).name());
        Assertions.assertEquals(1346564492, model.hoursOfDay().get(0));
        Assertions.assertEquals(956878361, model.leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.ROLLING, model.patchingMode());
        Assertions.assertEquals(722307224, model.customActionTimeoutInMins());
        Assertions.assertTrue(model.isCustomActionTimeoutEnabled());
        Assertions.assertFalse(model.isMonthlyPatchingEnabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MaintenanceWindow model = new MaintenanceWindow().withPreference(Preference.CUSTOM_PREFERENCE)
            .withMonths(Arrays.asList(new Month().withName(MonthName.AUGUST), new Month().withName(MonthName.OCTOBER),
                new Month().withName(MonthName.APRIL), new Month().withName(MonthName.MARCH)))
            .withWeeksOfMonth(Arrays.asList(866198392))
            .withDaysOfWeek(Arrays.asList(new DayOfWeek().withName(DayOfWeekName.SATURDAY)))
            .withHoursOfDay(Arrays.asList(1346564492, 1861834573, 375848936, 1220710831))
            .withLeadTimeInWeeks(956878361)
            .withPatchingMode(PatchingMode.ROLLING)
            .withCustomActionTimeoutInMins(722307224)
            .withIsCustomActionTimeoutEnabled(true)
            .withIsMonthlyPatchingEnabled(false);
        model = BinaryData.fromObject(model).toObject(MaintenanceWindow.class);
        Assertions.assertEquals(Preference.CUSTOM_PREFERENCE, model.preference());
        Assertions.assertEquals(MonthName.AUGUST, model.months().get(0).name());
        Assertions.assertEquals(866198392, model.weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.SATURDAY, model.daysOfWeek().get(0).name());
        Assertions.assertEquals(1346564492, model.hoursOfDay().get(0));
        Assertions.assertEquals(956878361, model.leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.ROLLING, model.patchingMode());
        Assertions.assertEquals(722307224, model.customActionTimeoutInMins());
        Assertions.assertTrue(model.isCustomActionTimeoutEnabled());
        Assertions.assertFalse(model.isMonthlyPatchingEnabled());
    }
}
