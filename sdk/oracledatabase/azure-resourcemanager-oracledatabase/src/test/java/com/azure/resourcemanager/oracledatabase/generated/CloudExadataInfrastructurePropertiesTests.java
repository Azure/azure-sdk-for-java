// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.oracledatabase.models.CloudExadataInfrastructureProperties;
import com.azure.resourcemanager.oracledatabase.models.CustomerContact;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeek;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekName;
import com.azure.resourcemanager.oracledatabase.models.MaintenanceWindow;
import com.azure.resourcemanager.oracledatabase.models.Month;
import com.azure.resourcemanager.oracledatabase.models.MonthName;
import com.azure.resourcemanager.oracledatabase.models.PatchingMode;
import com.azure.resourcemanager.oracledatabase.models.Preference;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CloudExadataInfrastructurePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CloudExadataInfrastructureProperties model = BinaryData.fromString(
            "{\"definedFileSystemConfiguration\":[{\"isBackupPartition\":true,\"isResizable\":true,\"minSizeGb\":432282678,\"mountPoint\":\"flbvvnchrkcciwwz\"},{\"isBackupPartition\":false,\"isResizable\":true,\"minSizeGb\":330822059,\"mountPoint\":\"jiwkuofoskghsau\"},{\"isBackupPartition\":true,\"isResizable\":false,\"minSizeGb\":1194326763,\"mountPoint\":\"eduugi\"},{\"isBackupPartition\":true,\"isResizable\":true,\"minSizeGb\":857489891,\"mountPoint\":\"aos\"}],\"ocid\":\"xc\",\"computeCount\":635298433,\"storageCount\":66931546,\"totalStorageSizeInGbs\":316608134,\"availableStorageSizeInGbs\":1879062252,\"timeCreated\":\"hslkevleggzf\",\"lifecycleDetails\":\"hfmvfaxkffe\",\"maintenanceWindow\":{\"preference\":\"NoPreference\",\"months\":[{\"name\":\"February\"},{\"name\":\"November\"}],\"weeksOfMonth\":[72720177,2122365511],\"daysOfWeek\":[{\"name\":\"Monday\"},{\"name\":\"Friday\"},{\"name\":\"Tuesday\"}],\"hoursOfDay\":[2042967034,820071175,681165656],\"leadTimeInWeeks\":1542879301,\"patchingMode\":\"Rolling\",\"customActionTimeoutInMins\":2011180934,\"isCustomActionTimeoutEnabled\":false,\"isMonthlyPatchingEnabled\":false},\"estimatedPatchingTime\":{\"estimatedDbServerPatchingTime\":1552581674,\"estimatedNetworkSwitchesPatchingTime\":2030028307,\"estimatedStorageServerPatchingTime\":1875025396,\"totalEstimatedPatchingTime\":655244901},\"customerContacts\":[{\"email\":\"koen\"}],\"provisioningState\":\"Canceled\",\"lifecycleState\":\"Provisioning\",\"shape\":\"vudwtiukbldng\",\"ociUrl\":\"ocipazyxoeg\",\"cpuCount\":245724981,\"maxCpuCount\":1764023919,\"memorySizeInGbs\":799434019,\"maxMemoryInGbs\":1445231933,\"dbNodeStorageSizeInGbs\":2007054909,\"maxDbNodeStorageSizeInGbs\":846419016,\"dataStorageSizeInTbs\":39.61017052503307,\"maxDataStorageInTbs\":96.58484617586141,\"dbServerVersion\":\"mrbpizcdrqj\",\"storageServerVersion\":\"pyd\",\"activatedStorageCount\":1305817330,\"additionalStorageCount\":229483686,\"displayName\":\"de\",\"lastMaintenanceRunId\":\"jzicwifsjt\",\"nextMaintenanceRunId\":\"zfbishcbkhaj\",\"monthlyDbServerVersion\":\"yeamdphagalpb\",\"monthlyStorageServerVersion\":\"wgipwhono\",\"databaseServerType\":\"gshwankixz\",\"storageServerType\":\"njeputtmrywn\",\"computeModel\":\"OCPU\",\"exascaleConfig\":{\"totalStorageInGbs\":643142457,\"availableStorageInGbs\":1790198839}}")
            .toObject(CloudExadataInfrastructureProperties.class);
        Assertions.assertEquals(635298433, model.computeCount());
        Assertions.assertEquals(66931546, model.storageCount());
        Assertions.assertEquals(Preference.NO_PREFERENCE, model.maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.FEBRUARY, model.maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(72720177, model.maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.MONDAY, model.maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(2042967034, model.maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(1542879301, model.maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.ROLLING, model.maintenanceWindow().patchingMode());
        Assertions.assertEquals(2011180934, model.maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertFalse(model.maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertFalse(model.maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("koen", model.customerContacts().get(0).email());
        Assertions.assertEquals("vudwtiukbldng", model.shape());
        Assertions.assertEquals("de", model.displayName());
        Assertions.assertEquals("gshwankixz", model.databaseServerType());
        Assertions.assertEquals("njeputtmrywn", model.storageServerType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CloudExadataInfrastructureProperties model = new CloudExadataInfrastructureProperties()
            .withComputeCount(635298433)
            .withStorageCount(66931546)
            .withMaintenanceWindow(new MaintenanceWindow().withPreference(Preference.NO_PREFERENCE)
                .withMonths(
                    Arrays.asList(new Month().withName(MonthName.FEBRUARY), new Month().withName(MonthName.NOVEMBER)))
                .withWeeksOfMonth(Arrays.asList(72720177, 2122365511))
                .withDaysOfWeek(Arrays.asList(new DayOfWeek().withName(DayOfWeekName.MONDAY),
                    new DayOfWeek().withName(DayOfWeekName.FRIDAY), new DayOfWeek().withName(DayOfWeekName.TUESDAY)))
                .withHoursOfDay(Arrays.asList(2042967034, 820071175, 681165656))
                .withLeadTimeInWeeks(1542879301)
                .withPatchingMode(PatchingMode.ROLLING)
                .withCustomActionTimeoutInMins(2011180934)
                .withIsCustomActionTimeoutEnabled(false)
                .withIsMonthlyPatchingEnabled(false))
            .withCustomerContacts(Arrays.asList(new CustomerContact().withEmail("koen")))
            .withShape("vudwtiukbldng")
            .withDisplayName("de")
            .withDatabaseServerType("gshwankixz")
            .withStorageServerType("njeputtmrywn");
        model = BinaryData.fromObject(model).toObject(CloudExadataInfrastructureProperties.class);
        Assertions.assertEquals(635298433, model.computeCount());
        Assertions.assertEquals(66931546, model.storageCount());
        Assertions.assertEquals(Preference.NO_PREFERENCE, model.maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.FEBRUARY, model.maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(72720177, model.maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.MONDAY, model.maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(2042967034, model.maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(1542879301, model.maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.ROLLING, model.maintenanceWindow().patchingMode());
        Assertions.assertEquals(2011180934, model.maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertFalse(model.maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertFalse(model.maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("koen", model.customerContacts().get(0).email());
        Assertions.assertEquals("vudwtiukbldng", model.shape());
        Assertions.assertEquals("de", model.displayName());
        Assertions.assertEquals("gshwankixz", model.databaseServerType());
        Assertions.assertEquals("njeputtmrywn", model.storageServerType());
    }
}
