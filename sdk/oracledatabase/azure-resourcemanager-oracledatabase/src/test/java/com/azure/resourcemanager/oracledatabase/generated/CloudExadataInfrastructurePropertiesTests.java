// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.oracledatabase.models.CloudExadataInfrastructureProperties;
import com.azure.resourcemanager.oracledatabase.models.CustomerContact;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeek;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekName;
import com.azure.resourcemanager.oracledatabase.models.MaintenanceWindow;
import com.azure.resourcemanager.oracledatabase.models.Month;
import com.azure.resourcemanager.oracledatabase.models.MonthName;
import com.azure.resourcemanager.oracledatabase.models.PatchingMode;
import com.azure.resourcemanager.oracledatabase.models.Preference;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CloudExadataInfrastructurePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CloudExadataInfrastructureProperties model = BinaryData.fromString(
            "{\"ocid\":\"kdvjsll\",\"computeCount\":1321349224,\"storageCount\":115624331,\"totalStorageSizeInGbs\":1116922234,\"availableStorageSizeInGbs\":122021588,\"timeCreated\":\"pnpulexxbczwtru\",\"lifecycleDetails\":\"qzbqjvsov\",\"maintenanceWindow\":{\"preference\":\"NoPreference\",\"months\":[{\"name\":\"March\"},{\"name\":\"March\"},{\"name\":\"April\"},{\"name\":\"September\"}],\"weeksOfMonth\":[2100121858,1196709774,950671055,1687920757],\"daysOfWeek\":[{\"name\":\"Wednesday\"},{\"name\":\"Saturday\"}],\"hoursOfDay\":[967687966],\"leadTimeInWeeks\":178812834,\"patchingMode\":\"NonRolling\",\"customActionTimeoutInMins\":1044580515,\"isCustomActionTimeoutEnabled\":false,\"isMonthlyPatchingEnabled\":false},\"estimatedPatchingTime\":{\"estimatedDbServerPatchingTime\":480188509,\"estimatedNetworkSwitchesPatchingTime\":970071122,\"estimatedStorageServerPatchingTime\":962380204,\"totalEstimatedPatchingTime\":734048187},\"customerContacts\":[{\"email\":\"jiwkuofoskghsau\"},{\"email\":\"imjm\"}],\"provisioningState\":\"Succeeded\",\"lifecycleState\":\"Updating\",\"shape\":\"uugidyjrrfby\",\"ociUrl\":\"svexcsonpclhoco\",\"cpuCount\":1558568060,\"maxCpuCount\":442163665,\"memorySizeInGbs\":1882750055,\"maxMemoryInGbs\":1452843037,\"dbNodeStorageSizeInGbs\":1425243209,\"maxDbNodeStorageSizeInGbs\":1915206631,\"dataStorageSizeInTbs\":635098272,\"maxDataStorageInTbs\":78.87508679789653,\"dbServerVersion\":\"axkffei\",\"storageServerVersion\":\"hl\",\"activatedStorageCount\":504857780,\"additionalStorageCount\":1857517478,\"displayName\":\"v\",\"lastMaintenanceRunId\":\"xmzsbbzogg\",\"nextMaintenanceRunId\":\"rxwburv\",\"monthlyDbServerVersion\":\"xjnspy\",\"monthlyStorageServerVersion\":\"tko\"}")
            .toObject(CloudExadataInfrastructureProperties.class);
        Assertions.assertEquals(1321349224, model.computeCount());
        Assertions.assertEquals(115624331, model.storageCount());
        Assertions.assertEquals(Preference.NO_PREFERENCE, model.maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.MARCH, model.maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(2100121858, model.maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.WEDNESDAY, model.maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(967687966, model.maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(178812834, model.maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.NON_ROLLING, model.maintenanceWindow().patchingMode());
        Assertions.assertEquals(1044580515, model.maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertEquals(false, model.maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertEquals(false, model.maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("jiwkuofoskghsau", model.customerContacts().get(0).email());
        Assertions.assertEquals("uugidyjrrfby", model.shape());
        Assertions.assertEquals("v", model.displayName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CloudExadataInfrastructureProperties model = new CloudExadataInfrastructureProperties()
            .withComputeCount(1321349224)
            .withStorageCount(115624331)
            .withMaintenanceWindow(new MaintenanceWindow().withPreference(Preference.NO_PREFERENCE)
                .withMonths(Arrays.asList(new Month().withName(MonthName.MARCH), new Month().withName(MonthName.MARCH),
                    new Month().withName(MonthName.APRIL), new Month().withName(MonthName.SEPTEMBER)))
                .withWeeksOfMonth(Arrays.asList(2100121858, 1196709774, 950671055, 1687920757))
                .withDaysOfWeek(Arrays.asList(new DayOfWeek().withName(DayOfWeekName.WEDNESDAY),
                    new DayOfWeek().withName(DayOfWeekName.SATURDAY)))
                .withHoursOfDay(Arrays.asList(967687966))
                .withLeadTimeInWeeks(178812834)
                .withPatchingMode(PatchingMode.NON_ROLLING)
                .withCustomActionTimeoutInMins(1044580515)
                .withIsCustomActionTimeoutEnabled(false)
                .withIsMonthlyPatchingEnabled(false))
            .withCustomerContacts(Arrays.asList(new CustomerContact().withEmail("jiwkuofoskghsau"),
                new CustomerContact().withEmail("imjm")))
            .withShape("uugidyjrrfby")
            .withDisplayName("v");
        model = BinaryData.fromObject(model).toObject(CloudExadataInfrastructureProperties.class);
        Assertions.assertEquals(1321349224, model.computeCount());
        Assertions.assertEquals(115624331, model.storageCount());
        Assertions.assertEquals(Preference.NO_PREFERENCE, model.maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.MARCH, model.maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(2100121858, model.maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.WEDNESDAY, model.maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(967687966, model.maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(178812834, model.maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.NON_ROLLING, model.maintenanceWindow().patchingMode());
        Assertions.assertEquals(1044580515, model.maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertEquals(false, model.maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertEquals(false, model.maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("jiwkuofoskghsau", model.customerContacts().get(0).email());
        Assertions.assertEquals("uugidyjrrfby", model.shape());
        Assertions.assertEquals("v", model.displayName());
    }
}
