// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.oracledatabase.models.CloudExadataInfrastructureProperties;
import com.azure.resourcemanager.oracledatabase.models.CustomerContact;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeek;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekName;
import com.azure.resourcemanager.oracledatabase.models.MaintenanceWindow;
import com.azure.resourcemanager.oracledatabase.models.Month;
import com.azure.resourcemanager.oracledatabase.models.MonthName;
import com.azure.resourcemanager.oracledatabase.models.PatchingMode;
import com.azure.resourcemanager.oracledatabase.models.Preference;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CloudExadataInfrastructurePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CloudExadataInfrastructureProperties model = BinaryData.fromString(
            "{\"definedFileSystemConfiguration\":[{\"isBackupPartition\":true,\"isResizable\":true,\"minSizeGb\":2044584540,\"mountPoint\":\"dagfuaxbezyiuok\"},{\"isBackupPartition\":true,\"isResizable\":true,\"minSizeGb\":291798162,\"mountPoint\":\"zywqsmbsu\"},{\"isBackupPartition\":false,\"isResizable\":true,\"minSizeGb\":1115871957,\"mountPoint\":\"ocfs\"}],\"ocid\":\"s\",\"computeCount\":1143177413,\"storageCount\":376493890,\"totalStorageSizeInGbs\":666664165,\"availableStorageSizeInGbs\":30564685,\"timeCreated\":\"uxh\",\"lifecycleDetails\":\"udxorrqn\",\"maintenanceWindow\":{\"preference\":\"NoPreference\",\"months\":[{\"name\":\"December\"},{\"name\":\"January\"},{\"name\":\"January\"},{\"name\":\"April\"}],\"weeksOfMonth\":[1661944066],\"daysOfWeek\":[{\"name\":\"Wednesday\"},{\"name\":\"Monday\"},{\"name\":\"Monday\"}],\"hoursOfDay\":[952204067],\"leadTimeInWeeks\":31465947,\"patchingMode\":\"Rolling\",\"customActionTimeoutInMins\":1391003633,\"isCustomActionTimeoutEnabled\":true,\"isMonthlyPatchingEnabled\":false},\"estimatedPatchingTime\":{\"estimatedDbServerPatchingTime\":608072417,\"estimatedNetworkSwitchesPatchingTime\":1948903121,\"estimatedStorageServerPatchingTime\":825397815,\"totalEstimatedPatchingTime\":2143826704},\"customerContacts\":[{\"email\":\"ruwiqzbqjvsov\"},{\"email\":\"yokacspkw\"}],\"provisioningState\":\"Provisioning\",\"lifecycleState\":\"Terminating\",\"shape\":\"bpxjmfl\",\"ociUrl\":\"vnchrkcci\",\"cpuCount\":480188509,\"maxCpuCount\":970071122,\"memorySizeInGbs\":962380204,\"maxMemoryInGbs\":734048187,\"dbNodeStorageSizeInGbs\":1786560396,\"maxDbNodeStorageSizeInGbs\":2114864042,\"dataStorageSizeInTbs\":6.714905965653417,\"maxDataStorageInTbs\":77.08143476611616,\"dbServerVersion\":\"kg\",\"storageServerVersion\":\"auu\",\"activatedStorageCount\":1525008184,\"additionalStorageCount\":981074224,\"displayName\":\"xieduugidyjrr\",\"lastMaintenanceRunId\":\"y\",\"nextMaintenanceRunId\":\"svexcsonpclhoco\",\"monthlyDbServerVersion\":\"lkevle\",\"monthlyStorageServerVersion\":\"zfbuhf\",\"databaseServerType\":\"faxkffeii\",\"storageServerType\":\"lvmezyvshxmzsbbz\",\"computeModel\":\"ECPU\"}")
            .toObject(CloudExadataInfrastructureProperties.class);
        Assertions.assertEquals(1143177413, model.computeCount());
        Assertions.assertEquals(376493890, model.storageCount());
        Assertions.assertEquals(Preference.NO_PREFERENCE, model.maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.DECEMBER, model.maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(1661944066, model.maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.WEDNESDAY, model.maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(952204067, model.maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(31465947, model.maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.ROLLING, model.maintenanceWindow().patchingMode());
        Assertions.assertEquals(1391003633, model.maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertTrue(model.maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertFalse(model.maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("ruwiqzbqjvsov", model.customerContacts().get(0).email());
        Assertions.assertEquals("bpxjmfl", model.shape());
        Assertions.assertEquals("xieduugidyjrr", model.displayName());
        Assertions.assertEquals("faxkffeii", model.databaseServerType());
        Assertions.assertEquals("lvmezyvshxmzsbbz", model.storageServerType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CloudExadataInfrastructureProperties model
            = new CloudExadataInfrastructureProperties().withComputeCount(1143177413)
                .withStorageCount(376493890)
                .withMaintenanceWindow(new MaintenanceWindow().withPreference(Preference.NO_PREFERENCE)
                    .withMonths(
                        Arrays.asList(new Month().withName(MonthName.DECEMBER), new Month().withName(MonthName.JANUARY),
                            new Month().withName(MonthName.JANUARY), new Month().withName(MonthName.APRIL)))
                    .withWeeksOfMonth(Arrays.asList(1661944066))
                    .withDaysOfWeek(Arrays.asList(new DayOfWeek().withName(DayOfWeekName.WEDNESDAY),
                        new DayOfWeek().withName(DayOfWeekName.MONDAY), new DayOfWeek().withName(DayOfWeekName.MONDAY)))
                    .withHoursOfDay(Arrays.asList(952204067))
                    .withLeadTimeInWeeks(31465947)
                    .withPatchingMode(PatchingMode.ROLLING)
                    .withCustomActionTimeoutInMins(1391003633)
                    .withIsCustomActionTimeoutEnabled(true)
                    .withIsMonthlyPatchingEnabled(false))
                .withCustomerContacts(Arrays.asList(new CustomerContact().withEmail("ruwiqzbqjvsov"),
                    new CustomerContact().withEmail("yokacspkw")))
                .withShape("bpxjmfl")
                .withDisplayName("xieduugidyjrr")
                .withDatabaseServerType("faxkffeii")
                .withStorageServerType("lvmezyvshxmzsbbz");
        model = BinaryData.fromObject(model).toObject(CloudExadataInfrastructureProperties.class);
        Assertions.assertEquals(1143177413, model.computeCount());
        Assertions.assertEquals(376493890, model.storageCount());
        Assertions.assertEquals(Preference.NO_PREFERENCE, model.maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.DECEMBER, model.maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(1661944066, model.maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.WEDNESDAY, model.maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(952204067, model.maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(31465947, model.maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.ROLLING, model.maintenanceWindow().patchingMode());
        Assertions.assertEquals(1391003633, model.maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertTrue(model.maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertFalse(model.maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("ruwiqzbqjvsov", model.customerContacts().get(0).email());
        Assertions.assertEquals("bpxjmfl", model.shape());
        Assertions.assertEquals("xieduugidyjrr", model.displayName());
        Assertions.assertEquals("faxkffeii", model.databaseServerType());
        Assertions.assertEquals("lvmezyvshxmzsbbz", model.storageServerType());
    }
}
