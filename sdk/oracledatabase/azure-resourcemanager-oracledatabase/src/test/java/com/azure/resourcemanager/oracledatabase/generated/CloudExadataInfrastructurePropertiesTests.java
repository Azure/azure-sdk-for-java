// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.oracledatabase.models.CloudExadataInfrastructureProperties;
import com.azure.resourcemanager.oracledatabase.models.CustomerContact;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeek;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekName;
import com.azure.resourcemanager.oracledatabase.models.MaintenanceWindow;
import com.azure.resourcemanager.oracledatabase.models.Month;
import com.azure.resourcemanager.oracledatabase.models.MonthName;
import com.azure.resourcemanager.oracledatabase.models.PatchingMode;
import com.azure.resourcemanager.oracledatabase.models.Preference;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CloudExadataInfrastructurePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CloudExadataInfrastructureProperties model = BinaryData.fromString(
            "{\"ocid\":\"hxmzsbbzoggig\",\"computeCount\":2011180934,\"storageCount\":285101547,\"totalStorageSizeInGbs\":2000842411,\"availableStorageSizeInGbs\":714524610,\"timeCreated\":\"jnspydp\",\"lifecycleDetails\":\"oenkouknvudwti\",\"maintenanceWindow\":{\"preference\":\"CustomPreference\",\"months\":[{\"name\":\"April\"},{\"name\":\"March\"},{\"name\":\"November\"}],\"weeksOfMonth\":[1997522468,655680628,523665642,198508752],\"daysOfWeek\":[{\"name\":\"Sunday\"},{\"name\":\"Sunday\"},{\"name\":\"Wednesday\"},{\"name\":\"Saturday\"}],\"hoursOfDay\":[157234884],\"leadTimeInWeeks\":642461794,\"patchingMode\":\"NonRolling\",\"customActionTimeoutInMins\":1142457061,\"isCustomActionTimeoutEnabled\":false,\"isMonthlyPatchingEnabled\":true},\"estimatedPatchingTime\":{\"estimatedDbServerPatchingTime\":1696472102,\"estimatedNetworkSwitchesPatchingTime\":278176639,\"estimatedStorageServerPatchingTime\":599264802,\"totalEstimatedPatchingTime\":1785806943},\"customerContacts\":[{\"email\":\"zcdrqjsdpydnfyhx\"},{\"email\":\"eoejzic\"},{\"email\":\"ifsjttgzfbishcb\"}],\"provisioningState\":\"Provisioning\",\"lifecycleState\":\"MaintenanceInProgress\",\"shape\":\"eyeam\",\"ociUrl\":\"hagalpbuxwgipwh\",\"cpuCount\":390798331,\"maxCpuCount\":1456647445,\"memorySizeInGbs\":1568542705,\"maxMemoryInGbs\":69341003,\"dbNodeStorageSizeInGbs\":248274393,\"maxDbNodeStorageSizeInGbs\":2111638773,\"dataStorageSizeInTbs\":63.584757120224076,\"maxDataStorageInTbs\":69.283939369701,\"dbServerVersion\":\"pu\",\"storageServerVersion\":\"mryw\",\"activatedStorageCount\":2134987728,\"additionalStorageCount\":1117331465,\"displayName\":\"ftiyqzrnkcq\",\"lastMaintenanceRunId\":\"xlwhzlsicoh\",\"nextMaintenanceRunId\":\"qnwvlrya\",\"monthlyDbServerVersion\":\"hheunmmqhgyx\",\"monthlyStorageServerVersion\":\"onocukok\"}")
            .toObject(CloudExadataInfrastructureProperties.class);
        Assertions.assertEquals(2011180934, model.computeCount());
        Assertions.assertEquals(285101547, model.storageCount());
        Assertions.assertEquals(Preference.CUSTOM_PREFERENCE, model.maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.APRIL, model.maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(1997522468, model.maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.SUNDAY, model.maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(157234884, model.maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(642461794, model.maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.NON_ROLLING, model.maintenanceWindow().patchingMode());
        Assertions.assertEquals(1142457061, model.maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertEquals(false, model.maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertEquals(true, model.maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("zcdrqjsdpydnfyhx", model.customerContacts().get(0).email());
        Assertions.assertEquals("eyeam", model.shape());
        Assertions.assertEquals("ftiyqzrnkcq", model.displayName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CloudExadataInfrastructureProperties model = new CloudExadataInfrastructureProperties()
            .withComputeCount(2011180934)
            .withStorageCount(285101547)
            .withMaintenanceWindow(new MaintenanceWindow().withPreference(Preference.CUSTOM_PREFERENCE)
                .withMonths(Arrays.asList(new Month().withName(MonthName.APRIL), new Month().withName(MonthName.MARCH),
                    new Month().withName(MonthName.NOVEMBER)))
                .withWeeksOfMonth(Arrays.asList(1997522468, 655680628, 523665642, 198508752))
                .withDaysOfWeek(Arrays.asList(new DayOfWeek().withName(DayOfWeekName.SUNDAY),
                    new DayOfWeek().withName(DayOfWeekName.SUNDAY), new DayOfWeek().withName(DayOfWeekName.WEDNESDAY),
                    new DayOfWeek().withName(DayOfWeekName.SATURDAY)))
                .withHoursOfDay(Arrays.asList(157234884))
                .withLeadTimeInWeeks(642461794)
                .withPatchingMode(PatchingMode.NON_ROLLING)
                .withCustomActionTimeoutInMins(1142457061)
                .withIsCustomActionTimeoutEnabled(false)
                .withIsMonthlyPatchingEnabled(true))
            .withCustomerContacts(Arrays.asList(new CustomerContact().withEmail("zcdrqjsdpydnfyhx"),
                new CustomerContact().withEmail("eoejzic"), new CustomerContact().withEmail("ifsjttgzfbishcb")))
            .withShape("eyeam")
            .withDisplayName("ftiyqzrnkcq");
        model = BinaryData.fromObject(model).toObject(CloudExadataInfrastructureProperties.class);
        Assertions.assertEquals(2011180934, model.computeCount());
        Assertions.assertEquals(285101547, model.storageCount());
        Assertions.assertEquals(Preference.CUSTOM_PREFERENCE, model.maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.APRIL, model.maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(1997522468, model.maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.SUNDAY, model.maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(157234884, model.maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(642461794, model.maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.NON_ROLLING, model.maintenanceWindow().patchingMode());
        Assertions.assertEquals(1142457061, model.maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertEquals(false, model.maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertEquals(true, model.maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("zcdrqjsdpydnfyhx", model.customerContacts().get(0).email());
        Assertions.assertEquals("eyeam", model.shape());
        Assertions.assertEquals("ftiyqzrnkcq", model.displayName());
    }
}
