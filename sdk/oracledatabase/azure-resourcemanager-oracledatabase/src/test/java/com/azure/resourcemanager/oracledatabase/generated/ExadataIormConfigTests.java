// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.oracledatabase.models.DbIormConfig;
import com.azure.resourcemanager.oracledatabase.models.ExadataIormConfig;
import com.azure.resourcemanager.oracledatabase.models.IormLifecycleState;
import com.azure.resourcemanager.oracledatabase.models.Objective;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ExadataIormConfigTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ExadataIormConfig model = BinaryData.fromString(
            "{\"dbPlans\":[{\"dbName\":\"yskpbhen\",\"flashCacheLimit\":\"kcxywnyt\",\"share\":1863766018},{\"dbName\":\"nlqidybyxczf\",\"flashCacheLimit\":\"haaxdbabphl\",\"share\":77204722}],\"lifecycleDetails\":\"fkts\",\"lifecycleState\":\"Updating\",\"objective\":\"Basic\"}")
            .toObject(ExadataIormConfig.class);
        Assertions.assertEquals("yskpbhen", model.dbPlans().get(0).dbName());
        Assertions.assertEquals("kcxywnyt", model.dbPlans().get(0).flashCacheLimit());
        Assertions.assertEquals(1863766018, model.dbPlans().get(0).share());
        Assertions.assertEquals("fkts", model.lifecycleDetails());
        Assertions.assertEquals(IormLifecycleState.UPDATING, model.lifecycleState());
        Assertions.assertEquals(Objective.BASIC, model.objective());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ExadataIormConfig model = new ExadataIormConfig()
            .withDbPlans(Arrays.asList(
                new DbIormConfig().withDbName("yskpbhen").withFlashCacheLimit("kcxywnyt").withShare(1863766018),
                new DbIormConfig().withDbName("nlqidybyxczf").withFlashCacheLimit("haaxdbabphl").withShare(77204722)))
            .withLifecycleDetails("fkts")
            .withLifecycleState(IormLifecycleState.UPDATING)
            .withObjective(Objective.BASIC);
        model = BinaryData.fromObject(model).toObject(ExadataIormConfig.class);
        Assertions.assertEquals("yskpbhen", model.dbPlans().get(0).dbName());
        Assertions.assertEquals("kcxywnyt", model.dbPlans().get(0).flashCacheLimit());
        Assertions.assertEquals(1863766018, model.dbPlans().get(0).share());
        Assertions.assertEquals("fkts", model.lifecycleDetails());
        Assertions.assertEquals(IormLifecycleState.UPDATING, model.lifecycleState());
        Assertions.assertEquals(Objective.BASIC, model.objective());
    }
}
