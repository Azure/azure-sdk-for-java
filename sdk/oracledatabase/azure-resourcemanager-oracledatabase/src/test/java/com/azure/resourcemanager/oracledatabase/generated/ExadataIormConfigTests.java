// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.oracledatabase.models.DbIormConfig;
import com.azure.resourcemanager.oracledatabase.models.ExadataIormConfig;
import com.azure.resourcemanager.oracledatabase.models.IormLifecycleState;
import com.azure.resourcemanager.oracledatabase.models.Objective;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ExadataIormConfigTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ExadataIormConfig model = BinaryData.fromString(
            "{\"dbPlans\":[{\"dbName\":\"bzpfzab\",\"flashCacheLimit\":\"cuh\",\"share\":1070511980},{\"dbName\":\"tyq\",\"flashCacheLimit\":\"lbbovplw\",\"share\":869574502},{\"dbName\":\"gy\",\"flashCacheLimit\":\"uosvmkfssxqukk\",\"share\":89011603}],\"lifecycleDetails\":\"mg\",\"lifecycleState\":\"Updating\",\"objective\":\"LowLatency\"}")
            .toObject(ExadataIormConfig.class);
        Assertions.assertEquals("bzpfzab", model.dbPlans().get(0).dbName());
        Assertions.assertEquals("cuh", model.dbPlans().get(0).flashCacheLimit());
        Assertions.assertEquals(1070511980, model.dbPlans().get(0).share());
        Assertions.assertEquals("mg", model.lifecycleDetails());
        Assertions.assertEquals(IormLifecycleState.UPDATING, model.lifecycleState());
        Assertions.assertEquals(Objective.LOW_LATENCY, model.objective());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ExadataIormConfig model = new ExadataIormConfig()
            .withDbPlans(
                Arrays.asList(new DbIormConfig().withDbName("bzpfzab").withFlashCacheLimit("cuh").withShare(1070511980),
                    new DbIormConfig().withDbName("tyq").withFlashCacheLimit("lbbovplw").withShare(869574502),
                    new DbIormConfig().withDbName("gy").withFlashCacheLimit("uosvmkfssxqukk").withShare(89011603)))
            .withLifecycleDetails("mg")
            .withLifecycleState(IormLifecycleState.UPDATING)
            .withObjective(Objective.LOW_LATENCY);
        model = BinaryData.fromObject(model).toObject(ExadataIormConfig.class);
        Assertions.assertEquals("bzpfzab", model.dbPlans().get(0).dbName());
        Assertions.assertEquals("cuh", model.dbPlans().get(0).flashCacheLimit());
        Assertions.assertEquals(1070511980, model.dbPlans().get(0).share());
        Assertions.assertEquals("mg", model.lifecycleDetails());
        Assertions.assertEquals(IormLifecycleState.UPDATING, model.lifecycleState());
        Assertions.assertEquals(Objective.LOW_LATENCY, model.objective());
    }
}
