// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oracledatabase.OracleDatabaseManager;
import com.azure.resourcemanager.oracledatabase.models.CloudExadataInfrastructure;
import com.azure.resourcemanager.oracledatabase.models.ConfigureExascaleCloudExadataInfrastructureDetails;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekName;
import com.azure.resourcemanager.oracledatabase.models.MonthName;
import com.azure.resourcemanager.oracledatabase.models.PatchingMode;
import com.azure.resourcemanager.oracledatabase.models.Preference;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudExadataInfrastructuresConfigureExascaleMockTests {
    @Test
    public void testConfigureExascale() throws Exception {
        String responseStr
            = "{\"properties\":{\"definedFileSystemConfiguration\":[{\"isBackupPartition\":false,\"isResizable\":false,\"minSizeGb\":1171634090,\"mountPoint\":\"icphvtrrmhw\"},{\"isBackupPartition\":true,\"isResizable\":false,\"minSizeGb\":256145081,\"mountPoint\":\"ubhvj\"},{\"isBackupPartition\":false,\"isResizable\":true,\"minSizeGb\":1104352328,\"mountPoint\":\"lw\"}],\"ocid\":\"memhooclutnpq\",\"computeCount\":1579133253,\"storageCount\":978013329,\"totalStorageSizeInGbs\":1328694478,\"availableStorageSizeInGbs\":865152185,\"timeCreated\":\"kyujxsglhsrrr\",\"lifecycleDetails\":\"jylmbkzudnigr\",\"maintenanceWindow\":{\"preference\":\"CustomPreference\",\"months\":[{\"name\":\"August\"},{\"name\":\"January\"},{\"name\":\"November\"}],\"weeksOfMonth\":[349681251,1513568409,289344898],\"daysOfWeek\":[{\"name\":\"Saturday\"},{\"name\":\"Thursday\"},{\"name\":\"Monday\"}],\"hoursOfDay\":[1865358517,753839837],\"leadTimeInWeeks\":2143800860,\"patchingMode\":\"Rolling\",\"customActionTimeoutInMins\":1185666084,\"isCustomActionTimeoutEnabled\":false,\"isMonthlyPatchingEnabled\":false},\"estimatedPatchingTime\":{\"estimatedDbServerPatchingTime\":2061594635,\"estimatedNetworkSwitchesPatchingTime\":430469096,\"estimatedStorageServerPatchingTime\":1733569114,\"totalEstimatedPatchingTime\":995984285},\"customerContacts\":[{\"email\":\"dqtvhcsp\"}],\"provisioningState\":\"Succeeded\",\"lifecycleState\":\"Failed\",\"shape\":\"xsi\",\"ociUrl\":\"etgbebjfulb\",\"cpuCount\":1731116741,\"maxCpuCount\":239290276,\"memorySizeInGbs\":796050147,\"maxMemoryInGbs\":816539003,\"dbNodeStorageSizeInGbs\":339595762,\"maxDbNodeStorageSizeInGbs\":160209701,\"dataStorageSizeInTbs\":49.53742534557637,\"maxDataStorageInTbs\":86.99459131476785,\"dbServerVersion\":\"viqsowsaaelcattc\",\"storageServerVersion\":\"hplrvkmjcwmjvlg\",\"activatedStorageCount\":2110078268,\"additionalStorageCount\":1459066733,\"displayName\":\"kyylizr\",\"lastMaintenanceRunId\":\"jpsfxsfu\",\"nextMaintenanceRunId\":\"lvt\",\"monthlyDbServerVersion\":\"agb\",\"monthlyStorageServerVersion\":\"dqlvhukoveof\",\"databaseServerType\":\"rvjfnmjmvlw\",\"storageServerType\":\"giblkujrllf\",\"computeModel\":\"OCPU\",\"exascaleConfig\":{\"totalStorageInGbs\":558783309,\"availableStorageInGbs\":615136855}},\"zones\":[\"uyjucejikzo\",\"ovvtzejetjkln\",\"ikyju\"],\"location\":\"dbqzolxrzvhqjw\",\"tags\":{\"rrkolawjmjs\":\"tgvgzp\"},\"id\":\"wro\",\"name\":\"cdxfzzzwyjafitl\",\"type\":\"guyn\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OracleDatabaseManager manager = OracleDatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        CloudExadataInfrastructure response = manager.cloudExadataInfrastructures()
            .configureExascale("fjmzsyzfho", "lhikcyychunsj",
                new ConfigureExascaleCloudExadataInfrastructureDetails().withTotalStorageInGbs(1472348146),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("dbqzolxrzvhqjw", response.location());
        Assertions.assertEquals("tgvgzp", response.tags().get("rrkolawjmjs"));
        Assertions.assertEquals(1579133253, response.properties().computeCount());
        Assertions.assertEquals(978013329, response.properties().storageCount());
        Assertions.assertEquals(Preference.CUSTOM_PREFERENCE, response.properties().maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.AUGUST, response.properties().maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(349681251, response.properties().maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.SATURDAY,
            response.properties().maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(1865358517, response.properties().maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(2143800860, response.properties().maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.ROLLING, response.properties().maintenanceWindow().patchingMode());
        Assertions.assertEquals(1185666084, response.properties().maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertFalse(response.properties().maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertFalse(response.properties().maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("dqtvhcsp", response.properties().customerContacts().get(0).email());
        Assertions.assertEquals("xsi", response.properties().shape());
        Assertions.assertEquals("kyylizr", response.properties().displayName());
        Assertions.assertEquals("rvjfnmjmvlw", response.properties().databaseServerType());
        Assertions.assertEquals("giblkujrllf", response.properties().storageServerType());
        Assertions.assertEquals("uyjucejikzo", response.zones().get(0));
    }
}
