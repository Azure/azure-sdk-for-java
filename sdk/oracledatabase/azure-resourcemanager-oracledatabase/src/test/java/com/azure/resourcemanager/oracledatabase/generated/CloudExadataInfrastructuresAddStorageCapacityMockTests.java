// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oracledatabase.OracleDatabaseManager;
import com.azure.resourcemanager.oracledatabase.models.CloudExadataInfrastructure;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekName;
import com.azure.resourcemanager.oracledatabase.models.MonthName;
import com.azure.resourcemanager.oracledatabase.models.PatchingMode;
import com.azure.resourcemanager.oracledatabase.models.Preference;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudExadataInfrastructuresAddStorageCapacityMockTests {
    @Test
    public void testAddStorageCapacity() throws Exception {
        String responseStr
            = "{\"properties\":{\"definedFileSystemConfiguration\":[{\"isBackupPartition\":true,\"isResizable\":false,\"minSizeGb\":451973602,\"mountPoint\":\"hhtklnvnafvvkyfe\"},{\"isBackupPartition\":false,\"isResizable\":false,\"minSizeGb\":705317709,\"mountPoint\":\"cqxypokkhminq\"},{\"isBackupPartition\":false,\"isResizable\":false,\"minSizeGb\":331015750,\"mountPoint\":\"bdxxe\"}],\"ocid\":\"ninvudbchaqdt\",\"computeCount\":308339857,\"storageCount\":589842741,\"totalStorageSizeInGbs\":313351461,\"availableStorageSizeInGbs\":720636191,\"timeCreated\":\"xdtddmflhuytxzv\",\"lifecycleDetails\":\"napxbannovv\",\"maintenanceWindow\":{\"preference\":\"CustomPreference\",\"months\":[{\"name\":\"February\"},{\"name\":\"August\"}],\"weeksOfMonth\":[1788406883,451158053,1584430006,457437874],\"daysOfWeek\":[{\"name\":\"Monday\"},{\"name\":\"Friday\"},{\"name\":\"Tuesday\"},{\"name\":\"Thursday\"}],\"hoursOfDay\":[589113457,1862922267],\"leadTimeInWeeks\":67510907,\"patchingMode\":\"NonRolling\",\"customActionTimeoutInMins\":1321738154,\"isCustomActionTimeoutEnabled\":true,\"isMonthlyPatchingEnabled\":true},\"estimatedPatchingTime\":{\"estimatedDbServerPatchingTime\":810647712,\"estimatedNetworkSwitchesPatchingTime\":1326881009,\"estimatedStorageServerPatchingTime\":1031456845,\"totalEstimatedPatchingTime\":1975991801},\"customerContacts\":[{\"email\":\"klobdxnazpmk\"}],\"provisioningState\":\"Succeeded\",\"lifecycleState\":\"Failed\",\"shape\":\"vfxzopjh\",\"ociUrl\":\"xliohrdddt\",\"cpuCount\":1812415709,\"maxCpuCount\":354945221,\"memorySizeInGbs\":530417864,\"maxMemoryInGbs\":540353819,\"dbNodeStorageSizeInGbs\":796010051,\"maxDbNodeStorageSizeInGbs\":2068748786,\"dataStorageSizeInTbs\":82.81682706563538,\"maxDataStorageInTbs\":26.268060074478605,\"dbServerVersion\":\"qofyuicdhzbdy\",\"storageServerVersion\":\"wgbdvibidmhmwffp\",\"activatedStorageCount\":1436158527,\"additionalStorageCount\":1159295504,\"displayName\":\"apckccrrvw\",\"lastMaintenanceRunId\":\"oxoyyukp\",\"nextMaintenanceRunId\":\"immoiroqboshbrag\",\"monthlyDbServerVersion\":\"yyrmfsvbp\",\"monthlyStorageServerVersion\":\"bopfppdbwnup\",\"databaseServerType\":\"hxkumasjcaacfdmm\",\"storageServerType\":\"ugmehqepvufhbze\",\"computeModel\":\"OCPU\",\"exascaleConfig\":{\"totalStorageInGbs\":1514485818,\"availableStorageInGbs\":574841417}},\"zones\":[\"lbqnbldxeacl\",\"schori\",\"krsrrmoucs\",\"fldpuviyfc\"],\"location\":\"beolh\",\"tags\":{\"kcudfbsfarfsiowl\":\"vbmxuqibsx\",\"wgfstmhqykizm\":\"jxnqp\",\"ycjimryvwgcwwpbm\":\"ksaoafcluqvox\",\"ydsx\":\"gwe\"},\"id\":\"efoh\",\"name\":\"cbvopwndyqleallk\",\"type\":\"mtkhlowkxxpvbr\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OracleDatabaseManager manager = OracleDatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        CloudExadataInfrastructure response = manager.cloudExadataInfrastructures()
            .addStorageCapacity("ogwxhnsduugwb", "reur", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("beolh", response.location());
        Assertions.assertEquals("vbmxuqibsx", response.tags().get("kcudfbsfarfsiowl"));
        Assertions.assertEquals(308339857, response.properties().computeCount());
        Assertions.assertEquals(589842741, response.properties().storageCount());
        Assertions.assertEquals(Preference.CUSTOM_PREFERENCE, response.properties().maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.FEBRUARY, response.properties().maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(1788406883, response.properties().maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.MONDAY,
            response.properties().maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(589113457, response.properties().maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(67510907, response.properties().maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.NON_ROLLING, response.properties().maintenanceWindow().patchingMode());
        Assertions.assertEquals(1321738154, response.properties().maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertTrue(response.properties().maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertTrue(response.properties().maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("klobdxnazpmk", response.properties().customerContacts().get(0).email());
        Assertions.assertEquals("vfxzopjh", response.properties().shape());
        Assertions.assertEquals("apckccrrvw", response.properties().displayName());
        Assertions.assertEquals("hxkumasjcaacfdmm", response.properties().databaseServerType());
        Assertions.assertEquals("ugmehqepvufhbze", response.properties().storageServerType());
        Assertions.assertEquals("lbqnbldxeacl", response.zones().get(0));
    }
}
