// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oracledatabase.OracleDatabaseManager;
import com.azure.resourcemanager.oracledatabase.models.CloudExadataInfrastructure;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekName;
import com.azure.resourcemanager.oracledatabase.models.MonthName;
import com.azure.resourcemanager.oracledatabase.models.PatchingMode;
import com.azure.resourcemanager.oracledatabase.models.Preference;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudExadataInfrastructuresAddStorageCapacityMockTests {
    @Test
    public void testAddStorageCapacity() throws Exception {
        String responseStr
            = "{\"properties\":{\"definedFileSystemConfiguration\":[{\"isBackupPartition\":false,\"isResizable\":false,\"minSizeGb\":1006418512,\"mountPoint\":\"vo\"},{\"isBackupPartition\":true,\"isResizable\":true,\"minSizeGb\":420576736,\"mountPoint\":\"m\"},{\"isBackupPartition\":true,\"isResizable\":true,\"minSizeGb\":181668941,\"mountPoint\":\"tgsfja\"},{\"isBackupPartition\":true,\"isResizable\":false,\"minSizeGb\":901001519,\"mountPoint\":\"db\"}],\"ocid\":\"odhtnsirudhzm\",\"computeCount\":1358436880,\"storageCount\":1080480185,\"totalStorageSizeInGbs\":2020313938,\"availableStorageSizeInGbs\":2059680770,\"timeCreated\":\"zrcxfailcfxwmdbo\",\"lifecycleDetails\":\"fgsftufqob\",\"maintenanceWindow\":{\"preference\":\"NoPreference\",\"months\":[{\"name\":\"March\"},{\"name\":\"January\"},{\"name\":\"September\"},{\"name\":\"January\"}],\"weeksOfMonth\":[929790319],\"daysOfWeek\":[{\"name\":\"Sunday\"},{\"name\":\"Saturday\"}],\"hoursOfDay\":[438441716,882585615,1311687390,1084894026],\"leadTimeInWeeks\":1745752519,\"patchingMode\":\"NonRolling\",\"customActionTimeoutInMins\":1308211330,\"isCustomActionTimeoutEnabled\":true,\"isMonthlyPatchingEnabled\":false},\"estimatedPatchingTime\":{\"estimatedDbServerPatchingTime\":644888013,\"estimatedNetworkSwitchesPatchingTime\":968481133,\"estimatedStorageServerPatchingTime\":1809453689,\"totalEstimatedPatchingTime\":866448877},\"customerContacts\":[{\"email\":\"vbroylaxxu\"},{\"email\":\"cdisd\"},{\"email\":\"sfjbjsvg\"}],\"provisioningState\":\"Succeeded\",\"lifecycleState\":\"Available\",\"shape\":\"yvycytdclxgcckn\",\"ociUrl\":\"wmbtmvpdvjdhtt\",\"cpuCount\":1520561720,\"maxCpuCount\":1761945314,\"memorySizeInGbs\":32473122,\"maxMemoryInGbs\":1521677969,\"dbNodeStorageSizeInGbs\":854254161,\"maxDbNodeStorageSizeInGbs\":1382279039,\"dataStorageSizeInTbs\":5.73443774577207,\"maxDataStorageInTbs\":62.23079071240545,\"dbServerVersion\":\"qnsdfzpbgtgky\",\"storageServerVersion\":\"dgh\",\"activatedStorageCount\":810731058,\"additionalStorageCount\":852383444,\"displayName\":\"tl\",\"lastMaintenanceRunId\":\"ez\",\"nextMaintenanceRunId\":\"hokvbwnh\",\"monthlyDbServerVersion\":\"qlgehg\",\"monthlyStorageServerVersion\":\"ipifhpfeoajvg\",\"databaseServerType\":\"txjcsheafidlt\",\"storageServerType\":\"sr\",\"computeModel\":\"ECPU\"},\"zones\":[\"ssjhoiftxfkf\",\"egprhptil\",\"ucb\"],\"location\":\"tgdqohmcwsldriz\",\"tags\":{\"zakakankjpdn\":\"wbralllibphbqzm\",\"xprimrsop\":\"zhajoylhjlmuo\",\"stvasylwxdzaumw\":\"eecjmeis\",\"fuzboyjathwtzolb\":\"oohgu\"},\"id\":\"emwmdxmebwjs\",\"name\":\"jpahlxvea\",\"type\":\"f\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OracleDatabaseManager manager = OracleDatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        CloudExadataInfrastructure response = manager.cloudExadataInfrastructures()
            .addStorageCapacity("ddjib", "bxv", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("tgdqohmcwsldriz", response.location());
        Assertions.assertEquals("wbralllibphbqzm", response.tags().get("zakakankjpdn"));
        Assertions.assertEquals(1358436880, response.properties().computeCount());
        Assertions.assertEquals(1080480185, response.properties().storageCount());
        Assertions.assertEquals(Preference.NO_PREFERENCE, response.properties().maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.MARCH, response.properties().maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(929790319, response.properties().maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.SUNDAY,
            response.properties().maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(438441716, response.properties().maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(1745752519, response.properties().maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.NON_ROLLING, response.properties().maintenanceWindow().patchingMode());
        Assertions.assertEquals(1308211330, response.properties().maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertTrue(response.properties().maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertFalse(response.properties().maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("vbroylaxxu", response.properties().customerContacts().get(0).email());
        Assertions.assertEquals("yvycytdclxgcckn", response.properties().shape());
        Assertions.assertEquals("tl", response.properties().displayName());
        Assertions.assertEquals("txjcsheafidlt", response.properties().databaseServerType());
        Assertions.assertEquals("sr", response.properties().storageServerType());
        Assertions.assertEquals("ssjhoiftxfkf", response.zones().get(0));
    }
}
