// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oracledatabase.OracleDatabaseManager;
import com.azure.resourcemanager.oracledatabase.models.CloudExadataInfrastructure;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekName;
import com.azure.resourcemanager.oracledatabase.models.MonthName;
import com.azure.resourcemanager.oracledatabase.models.PatchingMode;
import com.azure.resourcemanager.oracledatabase.models.Preference;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudExadataInfrastructuresAddStorageCapacityMockTests {
    @Test
    public void testAddStorageCapacity() throws Exception {
        String responseStr
            = "{\"properties\":{\"definedFileSystemConfiguration\":[{\"isBackupPartition\":false,\"isResizable\":false,\"minSizeGb\":466653203,\"mountPoint\":\"zqkzszuwi\"}],\"ocid\":\"glxxhljfpgpic\",\"computeCount\":1974760632,\"storageCount\":285978627,\"totalStorageSizeInGbs\":1409620818,\"availableStorageSizeInGbs\":1972611629,\"timeCreated\":\"j\",\"lifecycleDetails\":\"vpqcb\",\"maintenanceWindow\":{\"preference\":\"CustomPreference\",\"months\":[{\"name\":\"April\"}],\"weeksOfMonth\":[1108610581],\"daysOfWeek\":[{\"name\":\"Friday\"},{\"name\":\"Saturday\"},{\"name\":\"Wednesday\"}],\"hoursOfDay\":[260183407,10992776,218375321,221175221],\"leadTimeInWeeks\":47418436,\"patchingMode\":\"Rolling\",\"customActionTimeoutInMins\":731867794,\"isCustomActionTimeoutEnabled\":true,\"isMonthlyPatchingEnabled\":true},\"estimatedPatchingTime\":{\"estimatedDbServerPatchingTime\":22525493,\"estimatedNetworkSwitchesPatchingTime\":1575805762,\"estimatedStorageServerPatchingTime\":751702736,\"totalEstimatedPatchingTime\":1040750997},\"customerContacts\":[{\"email\":\"ohqfzizv\"},{\"email\":\"xmmkjs\"},{\"email\":\"thnwpzte\"}],\"provisioningState\":\"Succeeded\",\"lifecycleState\":\"Available\",\"shape\":\"ibiattg\",\"ociUrl\":\"ucfotangcf\",\"cpuCount\":821874250,\"maxCpuCount\":1494214692,\"memorySizeInGbs\":1495139625,\"maxMemoryInGbs\":1059949165,\"dbNodeStorageSizeInGbs\":1514018500,\"maxDbNodeStorageSizeInGbs\":2124351290,\"dataStorageSizeInTbs\":92.31645363860775,\"maxDataStorageInTbs\":49.07770308045938,\"dbServerVersion\":\"tx\",\"storageServerVersion\":\"mxmcuqudtcvclxy\",\"activatedStorageCount\":1944925015,\"additionalStorageCount\":1087876109,\"displayName\":\"gfabuiyjibuzphdu\",\"lastMaintenanceRunId\":\"eiknpgo\",\"nextMaintenanceRunId\":\"jiuqhibtozi\",\"monthlyDbServerVersion\":\"wjedmurrxxgew\",\"monthlyStorageServerVersion\":\"tvqylkmqpzoyhlfb\",\"databaseServerType\":\"wgcloxoebqinji\",\"storageServerType\":\"wjfuj\",\"computeModel\":\"ECPU\",\"exascaleConfig\":{\"totalStorageInGbs\":1261537510,\"availableStorageInGbs\":1836510862}},\"zones\":[\"hpzpo\",\"o\",\"yjwpfilkmkkh\",\"l\"],\"location\":\"ndviauogphuartvt\",\"tags\":{\"ahmnxhkxjqirw\":\"yefchnm\",\"ewmozqvbu\":\"weooxffifhxwrs\",\"ttaboidvmfqh\":\"qmamhsycxhxzga\",\"mtdherngb\":\"pubowsepdfg\"},\"id\":\"c\",\"name\":\"uahokq\",\"type\":\"obkauxofsh\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OracleDatabaseManager manager = OracleDatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        CloudExadataInfrastructure response = manager.cloudExadataInfrastructures()
            .addStorageCapacity("qmxq", "swokm", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ndviauogphuartvt", response.location());
        Assertions.assertEquals("yefchnm", response.tags().get("ahmnxhkxjqirw"));
        Assertions.assertEquals(1974760632, response.properties().computeCount());
        Assertions.assertEquals(285978627, response.properties().storageCount());
        Assertions.assertEquals(Preference.CUSTOM_PREFERENCE, response.properties().maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.APRIL, response.properties().maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(1108610581, response.properties().maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.FRIDAY,
            response.properties().maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(260183407, response.properties().maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(47418436, response.properties().maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.ROLLING, response.properties().maintenanceWindow().patchingMode());
        Assertions.assertEquals(731867794, response.properties().maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertTrue(response.properties().maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertTrue(response.properties().maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("ohqfzizv", response.properties().customerContacts().get(0).email());
        Assertions.assertEquals("ibiattg", response.properties().shape());
        Assertions.assertEquals("gfabuiyjibuzphdu", response.properties().displayName());
        Assertions.assertEquals("wgcloxoebqinji", response.properties().databaseServerType());
        Assertions.assertEquals("wjfuj", response.properties().storageServerType());
        Assertions.assertEquals("hpzpo", response.zones().get(0));
    }
}
