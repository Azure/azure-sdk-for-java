// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oracledatabase.OracleDatabaseManager;
import com.azure.resourcemanager.oracledatabase.models.CloudExadataInfrastructure;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekName;
import com.azure.resourcemanager.oracledatabase.models.MonthName;
import com.azure.resourcemanager.oracledatabase.models.PatchingMode;
import com.azure.resourcemanager.oracledatabase.models.Preference;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudExadataInfrastructuresListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"definedFileSystemConfiguration\":[{\"isBackupPartition\":true,\"isResizable\":false,\"minSizeGb\":416708927,\"mountPoint\":\"xeeebtijvacvbmqz\"}],\"ocid\":\"q\",\"computeCount\":498607950,\"storageCount\":2093325150,\"totalStorageSizeInGbs\":99469711,\"availableStorageSizeInGbs\":799727678,\"timeCreated\":\"evehjkuyxoaf\",\"lifecycleDetails\":\"oqltfae\",\"maintenanceWindow\":{\"preference\":\"NoPreference\",\"months\":[{\"name\":\"February\"},{\"name\":\"January\"},{\"name\":\"December\"},{\"name\":\"February\"}],\"weeksOfMonth\":[497715430,1446560637,1536245403,2125141991],\"daysOfWeek\":[{\"name\":\"Saturday\"},{\"name\":\"Thursday\"},{\"name\":\"Thursday\"}],\"hoursOfDay\":[677707515,761412131,98815164],\"leadTimeInWeeks\":370083816,\"patchingMode\":\"NonRolling\",\"customActionTimeoutInMins\":70706634,\"isCustomActionTimeoutEnabled\":true,\"isMonthlyPatchingEnabled\":false},\"estimatedPatchingTime\":{\"estimatedDbServerPatchingTime\":184808617,\"estimatedNetworkSwitchesPatchingTime\":229847887,\"estimatedStorageServerPatchingTime\":390291796,\"totalEstimatedPatchingTime\":1994491974},\"customerContacts\":[{\"email\":\"dfuxtya\"},{\"email\":\"iibmi\"}],\"provisioningState\":\"Failed\",\"lifecycleState\":\"Provisioning\",\"shape\":\"stgnl\",\"ociUrl\":\"nmgixh\",\"cpuCount\":331597501,\"maxCpuCount\":27658455,\"memorySizeInGbs\":1356013965,\"maxMemoryInGbs\":1277274936,\"dbNodeStorageSizeInGbs\":308634203,\"maxDbNodeStorageSizeInGbs\":1053565042,\"dataStorageSizeInTbs\":54.6522864099499,\"maxDataStorageInTbs\":20.421445323330023,\"dbServerVersion\":\"twypundmbxh\",\"storageServerVersion\":\"cmjkavlgorbmftpm\",\"activatedStorageCount\":1503356934,\"additionalStorageCount\":1649651263,\"displayName\":\"ltfvnz\",\"lastMaintenanceRunId\":\"jtotpvopvpbd\",\"nextMaintenanceRunId\":\"qgqqihedsvqwthmk\",\"monthlyDbServerVersion\":\"bcysih\",\"monthlyStorageServerVersion\":\"qcwdhoh\",\"databaseServerType\":\"tmcdzsufcohd\",\"storageServerType\":\"zlmcmuapcvhdb\",\"computeModel\":\"OCPU\"},\"zones\":[\"qxeysko\",\"qzinkfkbg\",\"z\"],\"location\":\"wxeqocljmygvkzqk\",\"tags\":{\"zrxcczurt\":\"okbzef\",\"pqxbkwvzgnzvdf\":\"e\"},\"id\":\"zdix\",\"name\":\"mqpnoda\",\"type\":\"opqhewjptmc\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OracleDatabaseManager manager = OracleDatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<CloudExadataInfrastructure> response = manager.cloudExadataInfrastructures()
            .listByResourceGroup("omfgbeglqgleohib", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("wxeqocljmygvkzqk", response.iterator().next().location());
        Assertions.assertEquals("okbzef", response.iterator().next().tags().get("zrxcczurt"));
        Assertions.assertEquals(498607950, response.iterator().next().properties().computeCount());
        Assertions.assertEquals(2093325150, response.iterator().next().properties().storageCount());
        Assertions.assertEquals(Preference.NO_PREFERENCE,
            response.iterator().next().properties().maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.FEBRUARY,
            response.iterator().next().properties().maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(497715430,
            response.iterator().next().properties().maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.SATURDAY,
            response.iterator().next().properties().maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(677707515,
            response.iterator().next().properties().maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(370083816,
            response.iterator().next().properties().maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.NON_ROLLING,
            response.iterator().next().properties().maintenanceWindow().patchingMode());
        Assertions.assertEquals(70706634,
            response.iterator().next().properties().maintenanceWindow().customActionTimeoutInMins());
        Assertions
            .assertTrue(response.iterator().next().properties().maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertFalse(response.iterator().next().properties().maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("dfuxtya", response.iterator().next().properties().customerContacts().get(0).email());
        Assertions.assertEquals("stgnl", response.iterator().next().properties().shape());
        Assertions.assertEquals("ltfvnz", response.iterator().next().properties().displayName());
        Assertions.assertEquals("tmcdzsufcohd", response.iterator().next().properties().databaseServerType());
        Assertions.assertEquals("zlmcmuapcvhdb", response.iterator().next().properties().storageServerType());
        Assertions.assertEquals("qxeysko", response.iterator().next().zones().get(0));
    }
}
