// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oracledatabase.OracleDatabaseManager;
import com.azure.resourcemanager.oracledatabase.models.CloudExadataInfrastructure;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekName;
import com.azure.resourcemanager.oracledatabase.models.MonthName;
import com.azure.resourcemanager.oracledatabase.models.PatchingMode;
import com.azure.resourcemanager.oracledatabase.models.Preference;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudExadataInfrastructuresListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"ocid\":\"uwmncs\",\"computeCount\":736005906,\"storageCount\":2120109491,\"totalStorageSizeInGbs\":1869546664,\"availableStorageSizeInGbs\":387251402,\"timeCreated\":\"ekrsgs\",\"lifecycleDetails\":\"dhuzqgnjdgk\",\"maintenanceWindow\":{\"preference\":\"NoPreference\",\"months\":[{\"name\":\"July\"}],\"weeksOfMonth\":[1169693926,252891746],\"daysOfWeek\":[{\"name\":\"Tuesday\"}],\"hoursOfDay\":[144563900],\"leadTimeInWeeks\":7745005,\"patchingMode\":\"Rolling\",\"customActionTimeoutInMins\":1726395306,\"isCustomActionTimeoutEnabled\":true,\"isMonthlyPatchingEnabled\":false},\"estimatedPatchingTime\":{\"estimatedDbServerPatchingTime\":1986458631,\"estimatedNetworkSwitchesPatchingTime\":685064266,\"estimatedStorageServerPatchingTime\":1207165403,\"totalEstimatedPatchingTime\":670431250},\"customerContacts\":[{\"email\":\"evqagtl\"}],\"provisioningState\":\"Canceled\",\"lifecycleState\":\"Updating\",\"shape\":\"kqo\",\"ociUrl\":\"ykvgtrdcnifmz\",\"cpuCount\":1867951005,\"maxCpuCount\":212235085,\"memorySizeInGbs\":1569168955,\"maxMemoryInGbs\":1235749271,\"dbNodeStorageSizeInGbs\":44176896,\"maxDbNodeStorageSizeInGbs\":265012274,\"dataStorageSizeInTbs\":83.52714933447804,\"maxDataStorageInTbs\":23.660619597545708,\"dbServerVersion\":\"khocxvdfffwaf\",\"storageServerVersion\":\"oudaspavehhrvk\",\"activatedStorageCount\":50845900,\"additionalStorageCount\":360812763,\"displayName\":\"zudhcxg\",\"lastMaintenanceRunId\":\"oyxcdyuib\",\"nextMaintenanceRunId\":\"fdn\",\"monthlyDbServerVersion\":\"ydvfvfcjnae\",\"monthlyStorageServerVersion\":\"srvhmgorffuki\"},\"zones\":[\"vwmzhwplefaxvxil\",\"btgn\",\"nzeyqxtjj\"],\"location\":\"qlqhycavodg\",\"tags\":{\"iaa\":\"beesmieknlra\",\"agt\":\"iuagydwqfbylyrfg\"},\"id\":\"ojocqwogf\",\"name\":\"zjvusfzldmo\",\"type\":\"uxylfsbtkadpy\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OracleDatabaseManager manager = OracleDatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<CloudExadataInfrastructure> response
            = manager.cloudExadataInfrastructures().listByResourceGroup("auy", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("qlqhycavodg", response.iterator().next().location());
        Assertions.assertEquals("beesmieknlra", response.iterator().next().tags().get("iaa"));
        Assertions.assertEquals(736005906, response.iterator().next().properties().computeCount());
        Assertions.assertEquals(2120109491, response.iterator().next().properties().storageCount());
        Assertions.assertEquals(Preference.NO_PREFERENCE,
            response.iterator().next().properties().maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.JULY,
            response.iterator().next().properties().maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(1169693926,
            response.iterator().next().properties().maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.TUESDAY,
            response.iterator().next().properties().maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(144563900,
            response.iterator().next().properties().maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(7745005, response.iterator().next().properties().maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.ROLLING,
            response.iterator().next().properties().maintenanceWindow().patchingMode());
        Assertions.assertEquals(1726395306,
            response.iterator().next().properties().maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertEquals(true,
            response.iterator().next().properties().maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertEquals(false,
            response.iterator().next().properties().maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("evqagtl", response.iterator().next().properties().customerContacts().get(0).email());
        Assertions.assertEquals("kqo", response.iterator().next().properties().shape());
        Assertions.assertEquals("zudhcxg", response.iterator().next().properties().displayName());
        Assertions.assertEquals("vwmzhwplefaxvxil", response.iterator().next().zones().get(0));
    }
}
