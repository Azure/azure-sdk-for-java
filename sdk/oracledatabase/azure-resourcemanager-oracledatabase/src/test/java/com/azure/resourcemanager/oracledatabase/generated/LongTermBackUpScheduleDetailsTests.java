// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.oracledatabase.models.LongTermBackUpScheduleDetails;
import com.azure.resourcemanager.oracledatabase.models.RepeatCadenceType;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class LongTermBackUpScheduleDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LongTermBackUpScheduleDetails model = BinaryData.fromString(
            "{\"repeatCadence\":\"Yearly\",\"timeOfBackup\":\"2021-11-04T09:44:48Z\",\"retentionPeriodInDays\":2097936694,\"isDisabled\":true}")
            .toObject(LongTermBackUpScheduleDetails.class);
        Assertions.assertEquals(RepeatCadenceType.YEARLY, model.repeatCadence());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-04T09:44:48Z"), model.timeOfBackup());
        Assertions.assertEquals(2097936694, model.retentionPeriodInDays());
        Assertions.assertEquals(true, model.isDisabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LongTermBackUpScheduleDetails model
            = new LongTermBackUpScheduleDetails().withRepeatCadence(RepeatCadenceType.YEARLY)
                .withTimeOfBackup(OffsetDateTime.parse("2021-11-04T09:44:48Z"))
                .withRetentionPeriodInDays(2097936694)
                .withIsDisabled(true);
        model = BinaryData.fromObject(model).toObject(LongTermBackUpScheduleDetails.class);
        Assertions.assertEquals(RepeatCadenceType.YEARLY, model.repeatCadence());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-04T09:44:48Z"), model.timeOfBackup());
        Assertions.assertEquals(2097936694, model.retentionPeriodInDays());
        Assertions.assertEquals(true, model.isDisabled());
    }
}
