// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.oracledatabase.models.DisasterRecoveryConfigurationDetails;
import com.azure.resourcemanager.oracledatabase.models.DisasterRecoveryType;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class DisasterRecoveryConfigurationDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DisasterRecoveryConfigurationDetails model = BinaryData.fromString(
            "{\"disasterRecoveryType\":\"BackupBased\",\"timeSnapshotStandbyEnabledTill\":\"2021-03-12T17:23:33Z\",\"isSnapshotStandby\":false,\"isReplicateAutomaticBackups\":true}")
            .toObject(DisasterRecoveryConfigurationDetails.class);
        Assertions.assertEquals(DisasterRecoveryType.BACKUP_BASED, model.disasterRecoveryType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-12T17:23:33Z"), model.timeSnapshotStandbyEnabledTill());
        Assertions.assertFalse(model.isSnapshotStandby());
        Assertions.assertTrue(model.isReplicateAutomaticBackups());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DisasterRecoveryConfigurationDetails model
            = new DisasterRecoveryConfigurationDetails().withDisasterRecoveryType(DisasterRecoveryType.BACKUP_BASED)
                .withTimeSnapshotStandbyEnabledTill(OffsetDateTime.parse("2021-03-12T17:23:33Z"))
                .withIsSnapshotStandby(false)
                .withIsReplicateAutomaticBackups(true);
        model = BinaryData.fromObject(model).toObject(DisasterRecoveryConfigurationDetails.class);
        Assertions.assertEquals(DisasterRecoveryType.BACKUP_BASED, model.disasterRecoveryType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-12T17:23:33Z"), model.timeSnapshotStandbyEnabledTill());
        Assertions.assertFalse(model.isSnapshotStandby());
        Assertions.assertTrue(model.isReplicateAutomaticBackups());
    }
}
