// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.oracledatabase.models.CloudExadataInfrastructureUpdateProperties;
import com.azure.resourcemanager.oracledatabase.models.CustomerContact;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeek;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekName;
import com.azure.resourcemanager.oracledatabase.models.MaintenanceWindow;
import com.azure.resourcemanager.oracledatabase.models.Month;
import com.azure.resourcemanager.oracledatabase.models.MonthName;
import com.azure.resourcemanager.oracledatabase.models.PatchingMode;
import com.azure.resourcemanager.oracledatabase.models.Preference;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CloudExadataInfrastructureUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CloudExadataInfrastructureUpdateProperties model = BinaryData.fromString(
            "{\"computeCount\":2069096730,\"storageCount\":407754161,\"maintenanceWindow\":{\"preference\":\"NoPreference\",\"months\":[{\"name\":\"July\"},{\"name\":\"May\"},{\"name\":\"January\"},{\"name\":\"March\"}],\"weeksOfMonth\":[776883338,1280631673,1924816201],\"daysOfWeek\":[{\"name\":\"Saturday\"},{\"name\":\"Tuesday\"}],\"hoursOfDay\":[1872827948],\"leadTimeInWeeks\":411799174,\"patchingMode\":\"NonRolling\",\"customActionTimeoutInMins\":295575748,\"isCustomActionTimeoutEnabled\":true,\"isMonthlyPatchingEnabled\":true},\"customerContacts\":[{\"email\":\"wsobqwcsdbn\"},{\"email\":\"dcfhucqdpf\"},{\"email\":\"vglsbjjca\"}],\"displayName\":\"xbvtvudu\"}")
            .toObject(CloudExadataInfrastructureUpdateProperties.class);
        Assertions.assertEquals(2069096730, model.computeCount());
        Assertions.assertEquals(407754161, model.storageCount());
        Assertions.assertEquals(Preference.NO_PREFERENCE, model.maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.JULY, model.maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(776883338, model.maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.SATURDAY, model.maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(1872827948, model.maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(411799174, model.maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.NON_ROLLING, model.maintenanceWindow().patchingMode());
        Assertions.assertEquals(295575748, model.maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertEquals(true, model.maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertEquals(true, model.maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("wsobqwcsdbn", model.customerContacts().get(0).email());
        Assertions.assertEquals("xbvtvudu", model.displayName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CloudExadataInfrastructureUpdateProperties model
            = new CloudExadataInfrastructureUpdateProperties().withComputeCount(2069096730)
                .withStorageCount(407754161)
                .withMaintenanceWindow(new MaintenanceWindow().withPreference(Preference.NO_PREFERENCE)
                    .withMonths(Arrays.asList(new Month().withName(MonthName.JULY), new Month().withName(MonthName.MAY),
                        new Month().withName(MonthName.JANUARY), new Month().withName(MonthName.MARCH)))
                    .withWeeksOfMonth(Arrays.asList(776883338, 1280631673, 1924816201))
                    .withDaysOfWeek(Arrays.asList(new DayOfWeek().withName(DayOfWeekName.SATURDAY),
                        new DayOfWeek().withName(DayOfWeekName.TUESDAY)))
                    .withHoursOfDay(Arrays.asList(1872827948))
                    .withLeadTimeInWeeks(411799174)
                    .withPatchingMode(PatchingMode.NON_ROLLING)
                    .withCustomActionTimeoutInMins(295575748)
                    .withIsCustomActionTimeoutEnabled(true)
                    .withIsMonthlyPatchingEnabled(true))
                .withCustomerContacts(Arrays.asList(new CustomerContact().withEmail("wsobqwcsdbn"),
                    new CustomerContact().withEmail("dcfhucqdpf"), new CustomerContact().withEmail("vglsbjjca")))
                .withDisplayName("xbvtvudu");
        model = BinaryData.fromObject(model).toObject(CloudExadataInfrastructureUpdateProperties.class);
        Assertions.assertEquals(2069096730, model.computeCount());
        Assertions.assertEquals(407754161, model.storageCount());
        Assertions.assertEquals(Preference.NO_PREFERENCE, model.maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.JULY, model.maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(776883338, model.maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.SATURDAY, model.maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(1872827948, model.maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(411799174, model.maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.NON_ROLLING, model.maintenanceWindow().patchingMode());
        Assertions.assertEquals(295575748, model.maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertEquals(true, model.maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertEquals(true, model.maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("wsobqwcsdbn", model.customerContacts().get(0).email());
        Assertions.assertEquals("xbvtvudu", model.displayName());
    }
}
