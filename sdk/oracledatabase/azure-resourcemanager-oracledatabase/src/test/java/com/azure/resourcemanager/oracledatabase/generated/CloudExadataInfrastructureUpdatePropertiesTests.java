// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.oracledatabase.models.CloudExadataInfrastructureUpdateProperties;
import com.azure.resourcemanager.oracledatabase.models.CustomerContact;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeek;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekName;
import com.azure.resourcemanager.oracledatabase.models.MaintenanceWindow;
import com.azure.resourcemanager.oracledatabase.models.Month;
import com.azure.resourcemanager.oracledatabase.models.MonthName;
import com.azure.resourcemanager.oracledatabase.models.PatchingMode;
import com.azure.resourcemanager.oracledatabase.models.Preference;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CloudExadataInfrastructureUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CloudExadataInfrastructureUpdateProperties model = BinaryData.fromString(
            "{\"computeCount\":2007375757,\"storageCount\":1079433286,\"maintenanceWindow\":{\"preference\":\"CustomPreference\",\"months\":[{\"name\":\"November\"}],\"weeksOfMonth\":[1399923471,585426916],\"daysOfWeek\":[{\"name\":\"Thursday\"},{\"name\":\"Monday\"},{\"name\":\"Friday\"},{\"name\":\"Wednesday\"}],\"hoursOfDay\":[1769488182,518689832],\"leadTimeInWeeks\":564919751,\"patchingMode\":\"Rolling\",\"customActionTimeoutInMins\":752212445,\"isCustomActionTimeoutEnabled\":false,\"isMonthlyPatchingEnabled\":false},\"customerContacts\":[{\"email\":\"wlrsffrzpwv\"},{\"email\":\"qdqgbi\"}],\"displayName\":\"lihkaetcktvfc\"}")
            .toObject(CloudExadataInfrastructureUpdateProperties.class);
        Assertions.assertEquals(2007375757, model.computeCount());
        Assertions.assertEquals(1079433286, model.storageCount());
        Assertions.assertEquals(Preference.CUSTOM_PREFERENCE, model.maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.NOVEMBER, model.maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(1399923471, model.maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.THURSDAY, model.maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(1769488182, model.maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(564919751, model.maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.ROLLING, model.maintenanceWindow().patchingMode());
        Assertions.assertEquals(752212445, model.maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertFalse(model.maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertFalse(model.maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("wlrsffrzpwv", model.customerContacts().get(0).email());
        Assertions.assertEquals("lihkaetcktvfc", model.displayName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CloudExadataInfrastructureUpdateProperties model
            = new CloudExadataInfrastructureUpdateProperties().withComputeCount(2007375757)
                .withStorageCount(1079433286)
                .withMaintenanceWindow(new MaintenanceWindow().withPreference(Preference.CUSTOM_PREFERENCE)
                    .withMonths(Arrays.asList(new Month().withName(MonthName.NOVEMBER)))
                    .withWeeksOfMonth(Arrays.asList(1399923471, 585426916))
                    .withDaysOfWeek(Arrays.asList(new DayOfWeek().withName(DayOfWeekName.THURSDAY),
                        new DayOfWeek().withName(DayOfWeekName.MONDAY), new DayOfWeek().withName(DayOfWeekName.FRIDAY),
                        new DayOfWeek().withName(DayOfWeekName.WEDNESDAY)))
                    .withHoursOfDay(Arrays.asList(1769488182, 518689832))
                    .withLeadTimeInWeeks(564919751)
                    .withPatchingMode(PatchingMode.ROLLING)
                    .withCustomActionTimeoutInMins(752212445)
                    .withIsCustomActionTimeoutEnabled(false)
                    .withIsMonthlyPatchingEnabled(false))
                .withCustomerContacts(Arrays.asList(new CustomerContact().withEmail("wlrsffrzpwv"),
                    new CustomerContact().withEmail("qdqgbi")))
                .withDisplayName("lihkaetcktvfc");
        model = BinaryData.fromObject(model).toObject(CloudExadataInfrastructureUpdateProperties.class);
        Assertions.assertEquals(2007375757, model.computeCount());
        Assertions.assertEquals(1079433286, model.storageCount());
        Assertions.assertEquals(Preference.CUSTOM_PREFERENCE, model.maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.NOVEMBER, model.maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(1399923471, model.maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.THURSDAY, model.maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(1769488182, model.maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(564919751, model.maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.ROLLING, model.maintenanceWindow().patchingMode());
        Assertions.assertEquals(752212445, model.maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertFalse(model.maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertFalse(model.maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("wlrsffrzpwv", model.customerContacts().get(0).email());
        Assertions.assertEquals("lihkaetcktvfc", model.displayName());
    }
}
