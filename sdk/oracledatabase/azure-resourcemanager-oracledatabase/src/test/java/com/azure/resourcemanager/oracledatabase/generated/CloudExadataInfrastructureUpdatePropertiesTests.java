// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.oracledatabase.models.CloudExadataInfrastructureUpdateProperties;
import com.azure.resourcemanager.oracledatabase.models.CustomerContact;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeek;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekName;
import com.azure.resourcemanager.oracledatabase.models.MaintenanceWindow;
import com.azure.resourcemanager.oracledatabase.models.Month;
import com.azure.resourcemanager.oracledatabase.models.MonthName;
import com.azure.resourcemanager.oracledatabase.models.PatchingMode;
import com.azure.resourcemanager.oracledatabase.models.Preference;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CloudExadataInfrastructureUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CloudExadataInfrastructureUpdateProperties model = BinaryData.fromString(
            "{\"computeCount\":650341652,\"storageCount\":1594763587,\"maintenanceWindow\":{\"preference\":\"CustomPreference\",\"months\":[{\"name\":\"May\"},{\"name\":\"April\"},{\"name\":\"October\"},{\"name\":\"October\"}],\"weeksOfMonth\":[1460158080,1110186498,1973822753,242850063],\"daysOfWeek\":[{\"name\":\"Wednesday\"}],\"hoursOfDay\":[602936654,1970800751,1187892327],\"leadTimeInWeeks\":1636536893,\"patchingMode\":\"NonRolling\",\"customActionTimeoutInMins\":733421396,\"isCustomActionTimeoutEnabled\":false,\"isMonthlyPatchingEnabled\":true},\"customerContacts\":[{\"email\":\"wp\"}],\"displayName\":\"tzpofncckwyfzq\"}")
            .toObject(CloudExadataInfrastructureUpdateProperties.class);
        Assertions.assertEquals(650341652, model.computeCount());
        Assertions.assertEquals(1594763587, model.storageCount());
        Assertions.assertEquals(Preference.CUSTOM_PREFERENCE, model.maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.MAY, model.maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(1460158080, model.maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.WEDNESDAY, model.maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(602936654, model.maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(1636536893, model.maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.NON_ROLLING, model.maintenanceWindow().patchingMode());
        Assertions.assertEquals(733421396, model.maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertEquals(false, model.maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertEquals(true, model.maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("wp", model.customerContacts().get(0).email());
        Assertions.assertEquals("tzpofncckwyfzq", model.displayName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CloudExadataInfrastructureUpdateProperties model = new CloudExadataInfrastructureUpdateProperties()
            .withComputeCount(650341652)
            .withStorageCount(1594763587)
            .withMaintenanceWindow(new MaintenanceWindow().withPreference(Preference.CUSTOM_PREFERENCE)
                .withMonths(Arrays.asList(new Month().withName(MonthName.MAY), new Month().withName(MonthName.APRIL),
                    new Month().withName(MonthName.OCTOBER), new Month().withName(MonthName.OCTOBER)))
                .withWeeksOfMonth(Arrays.asList(1460158080, 1110186498, 1973822753, 242850063))
                .withDaysOfWeek(Arrays.asList(new DayOfWeek().withName(DayOfWeekName.WEDNESDAY)))
                .withHoursOfDay(Arrays.asList(602936654, 1970800751, 1187892327))
                .withLeadTimeInWeeks(1636536893)
                .withPatchingMode(PatchingMode.NON_ROLLING)
                .withCustomActionTimeoutInMins(733421396)
                .withIsCustomActionTimeoutEnabled(false)
                .withIsMonthlyPatchingEnabled(true))
            .withCustomerContacts(Arrays.asList(new CustomerContact().withEmail("wp")))
            .withDisplayName("tzpofncckwyfzq");
        model = BinaryData.fromObject(model).toObject(CloudExadataInfrastructureUpdateProperties.class);
        Assertions.assertEquals(650341652, model.computeCount());
        Assertions.assertEquals(1594763587, model.storageCount());
        Assertions.assertEquals(Preference.CUSTOM_PREFERENCE, model.maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.MAY, model.maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(1460158080, model.maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.WEDNESDAY, model.maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(602936654, model.maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(1636536893, model.maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.NON_ROLLING, model.maintenanceWindow().patchingMode());
        Assertions.assertEquals(733421396, model.maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertEquals(false, model.maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertEquals(true, model.maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("wp", model.customerContacts().get(0).email());
        Assertions.assertEquals("tzpofncckwyfzq", model.displayName());
    }
}
