// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.oracledatabase.models.CloudExadataInfrastructureUpdateProperties;
import com.azure.resourcemanager.oracledatabase.models.CustomerContact;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeek;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekName;
import com.azure.resourcemanager.oracledatabase.models.MaintenanceWindow;
import com.azure.resourcemanager.oracledatabase.models.Month;
import com.azure.resourcemanager.oracledatabase.models.MonthName;
import com.azure.resourcemanager.oracledatabase.models.PatchingMode;
import com.azure.resourcemanager.oracledatabase.models.Preference;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CloudExadataInfrastructureUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CloudExadataInfrastructureUpdateProperties model = BinaryData.fromString(
            "{\"computeCount\":175699877,\"storageCount\":1233954324,\"maintenanceWindow\":{\"preference\":\"CustomPreference\",\"months\":[{\"name\":\"December\"},{\"name\":\"December\"},{\"name\":\"December\"}],\"weeksOfMonth\":[1728715445,1381039739,1526069036],\"daysOfWeek\":[{\"name\":\"Tuesday\"},{\"name\":\"Wednesday\"},{\"name\":\"Wednesday\"}],\"hoursOfDay\":[64383308,1202809910],\"leadTimeInWeeks\":1251924272,\"patchingMode\":\"Rolling\",\"customActionTimeoutInMins\":567432535,\"isCustomActionTimeoutEnabled\":false,\"isMonthlyPatchingEnabled\":true},\"customerContacts\":[{\"email\":\"uqqkpik\"},{\"email\":\"drgvtqagn\"},{\"email\":\"uynhijg\"},{\"email\":\"mebf\"}],\"displayName\":\"arbu\"}")
            .toObject(CloudExadataInfrastructureUpdateProperties.class);
        Assertions.assertEquals(175699877, model.computeCount());
        Assertions.assertEquals(1233954324, model.storageCount());
        Assertions.assertEquals(Preference.CUSTOM_PREFERENCE, model.maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.DECEMBER, model.maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(1728715445, model.maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.TUESDAY, model.maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(64383308, model.maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(1251924272, model.maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.ROLLING, model.maintenanceWindow().patchingMode());
        Assertions.assertEquals(567432535, model.maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertFalse(model.maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertTrue(model.maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("uqqkpik", model.customerContacts().get(0).email());
        Assertions.assertEquals("arbu", model.displayName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CloudExadataInfrastructureUpdateProperties model
            = new CloudExadataInfrastructureUpdateProperties().withComputeCount(175699877)
                .withStorageCount(1233954324)
                .withMaintenanceWindow(new MaintenanceWindow().withPreference(Preference.CUSTOM_PREFERENCE)
                    .withMonths(Arrays.asList(new Month().withName(MonthName.DECEMBER),
                        new Month().withName(MonthName.DECEMBER), new Month().withName(MonthName.DECEMBER)))
                    .withWeeksOfMonth(Arrays.asList(1728715445, 1381039739, 1526069036))
                    .withDaysOfWeek(Arrays.asList(new DayOfWeek().withName(DayOfWeekName.TUESDAY),
                        new DayOfWeek().withName(DayOfWeekName.WEDNESDAY),
                        new DayOfWeek().withName(DayOfWeekName.WEDNESDAY)))
                    .withHoursOfDay(Arrays.asList(64383308, 1202809910))
                    .withLeadTimeInWeeks(1251924272)
                    .withPatchingMode(PatchingMode.ROLLING)
                    .withCustomActionTimeoutInMins(567432535)
                    .withIsCustomActionTimeoutEnabled(false)
                    .withIsMonthlyPatchingEnabled(true))
                .withCustomerContacts(Arrays.asList(new CustomerContact().withEmail("uqqkpik"),
                    new CustomerContact().withEmail("drgvtqagn"), new CustomerContact().withEmail("uynhijg"),
                    new CustomerContact().withEmail("mebf")))
                .withDisplayName("arbu");
        model = BinaryData.fromObject(model).toObject(CloudExadataInfrastructureUpdateProperties.class);
        Assertions.assertEquals(175699877, model.computeCount());
        Assertions.assertEquals(1233954324, model.storageCount());
        Assertions.assertEquals(Preference.CUSTOM_PREFERENCE, model.maintenanceWindow().preference());
        Assertions.assertEquals(MonthName.DECEMBER, model.maintenanceWindow().months().get(0).name());
        Assertions.assertEquals(1728715445, model.maintenanceWindow().weeksOfMonth().get(0));
        Assertions.assertEquals(DayOfWeekName.TUESDAY, model.maintenanceWindow().daysOfWeek().get(0).name());
        Assertions.assertEquals(64383308, model.maintenanceWindow().hoursOfDay().get(0));
        Assertions.assertEquals(1251924272, model.maintenanceWindow().leadTimeInWeeks());
        Assertions.assertEquals(PatchingMode.ROLLING, model.maintenanceWindow().patchingMode());
        Assertions.assertEquals(567432535, model.maintenanceWindow().customActionTimeoutInMins());
        Assertions.assertFalse(model.maintenanceWindow().isCustomActionTimeoutEnabled());
        Assertions.assertTrue(model.maintenanceWindow().isMonthlyPatchingEnabled());
        Assertions.assertEquals("uqqkpik", model.customerContacts().get(0).email());
        Assertions.assertEquals("arbu", model.displayName());
    }
}
