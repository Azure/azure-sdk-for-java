// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oracledatabase.OracleDatabaseManager;
import com.azure.resourcemanager.oracledatabase.models.DbNode;
import com.azure.resourcemanager.oracledatabase.models.DbNodeMaintenanceType;
import com.azure.resourcemanager.oracledatabase.models.DbNodeProvisioningState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DbNodesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"ocid\":\"mdew\",\"additionalDetails\":\"sxkrpl\",\"backupIpId\":\"aze\",\"backupVnic2Id\":\"w\",\"backupVnicId\":\"yoyp\",\"cpuCoreCount\":2055673505,\"dbNodeStorageSizeInGbs\":1841980142,\"dbServerId\":\"nhjx\",\"dbSystemId\":\"qwjhqkbiwetpozyc\",\"faultDomain\":\"iqyhgfse\",\"hostIpId\":\"lexbsf\",\"hostname\":\"dynojpziuwfb\",\"lifecycleState\":\"Terminating\",\"lifecycleDetails\":\"dtn\",\"maintenanceType\":\"VmdbRebootMigration\",\"memorySizeInGbs\":1176354917,\"softwareStorageSizeInGb\":1450104862,\"timeCreated\":\"2021-04-17T05:36:17Z\",\"timeMaintenanceWindowEnd\":\"2021-11-12T21:16:46Z\",\"timeMaintenanceWindowStart\":\"2021-08-04T14:20:35Z\",\"vnic2Id\":\"bafvafhlbylcc\",\"vnicId\":\"evxrhyz\",\"provisioningState\":\"Succeeded\"},\"id\":\"sofpltd\",\"name\":\"mairrh\",\"type\":\"hfnrac\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OracleDatabaseManager manager = OracleDatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        DbNode response = manager.dbNodes()
            .getWithResponse("jfizfavkjzwfbc", "aykmmf", "sbfwxr", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("mdew", response.properties().ocid());
        Assertions.assertEquals("sxkrpl", response.properties().additionalDetails());
        Assertions.assertEquals("aze", response.properties().backupIpId());
        Assertions.assertEquals("w", response.properties().backupVnic2Id());
        Assertions.assertEquals("yoyp", response.properties().backupVnicId());
        Assertions.assertEquals(2055673505, response.properties().cpuCoreCount());
        Assertions.assertEquals(1841980142, response.properties().dbNodeStorageSizeInGbs());
        Assertions.assertEquals("nhjx", response.properties().dbServerId());
        Assertions.assertEquals("qwjhqkbiwetpozyc", response.properties().dbSystemId());
        Assertions.assertEquals("iqyhgfse", response.properties().faultDomain());
        Assertions.assertEquals("lexbsf", response.properties().hostIpId());
        Assertions.assertEquals("dynojpziuwfb", response.properties().hostname());
        Assertions.assertEquals(DbNodeProvisioningState.TERMINATING, response.properties().lifecycleState());
        Assertions.assertEquals("dtn", response.properties().lifecycleDetails());
        Assertions.assertEquals(DbNodeMaintenanceType.VMDB_REBOOT_MIGRATION, response.properties().maintenanceType());
        Assertions.assertEquals(1176354917, response.properties().memorySizeInGbs());
        Assertions.assertEquals(1450104862, response.properties().softwareStorageSizeInGb());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-17T05:36:17Z"), response.properties().timeCreated());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-12T21:16:46Z"),
            response.properties().timeMaintenanceWindowEnd());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-04T14:20:35Z"),
            response.properties().timeMaintenanceWindowStart());
        Assertions.assertEquals("bafvafhlbylcc", response.properties().vnic2Id());
        Assertions.assertEquals("evxrhyz", response.properties().vnicId());
    }
}
