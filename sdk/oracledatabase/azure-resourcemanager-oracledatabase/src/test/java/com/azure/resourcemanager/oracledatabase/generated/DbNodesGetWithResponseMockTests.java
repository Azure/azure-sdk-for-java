// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oracledatabase.OracleDatabaseManager;
import com.azure.resourcemanager.oracledatabase.models.DbNode;
import com.azure.resourcemanager.oracledatabase.models.DbNodeMaintenanceType;
import com.azure.resourcemanager.oracledatabase.models.DbNodeProvisioningState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DbNodesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"ocid\":\"q\",\"additionalDetails\":\"jhmqrhvthla\",\"backupIpId\":\"dcxsmlz\",\"backupVnic2Id\":\"zdtxetlgyd\",\"backupVnicId\":\"qvlnnpxybafiqgea\",\"cpuCoreCount\":755954714,\"dbNodeStorageSizeInGbs\":1031040752,\"dbServerId\":\"kglklbyulidwcw\",\"dbSystemId\":\"mzegjon\",\"faultDomain\":\"jirwgdnqzbrfk\",\"hostIpId\":\"zhzmtksjci\",\"hostname\":\"igsxcdgljplk\",\"lifecycleState\":\"Starting\",\"lifecycleDetails\":\"chtomflrytsw\",\"maintenanceType\":\"VmdbRebootMigration\",\"memorySizeInGbs\":1654554720,\"softwareStorageSizeInGb\":1885946932,\"timeCreated\":\"2021-06-30T17:12:26Z\",\"timeMaintenanceWindowEnd\":\"2021-02-03T07:43:53Z\",\"timeMaintenanceWindowStart\":\"2021-05-29T16:33:56Z\",\"vnic2Id\":\"whqjjyslurlpshhk\",\"vnicId\":\"pedwqsl\",\"provisioningState\":\"Succeeded\"},\"id\":\"pq\",\"name\":\"wwsko\",\"type\":\"dcbrwimuvq\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OracleDatabaseManager manager = OracleDatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        DbNode response = manager.dbNodes()
            .getWithResponse("lejchcsr", "zknmzlanrupd", "vnphc", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("q", response.properties().ocid());
        Assertions.assertEquals("jhmqrhvthla", response.properties().additionalDetails());
        Assertions.assertEquals("dcxsmlz", response.properties().backupIpId());
        Assertions.assertEquals("zdtxetlgyd", response.properties().backupVnic2Id());
        Assertions.assertEquals("qvlnnpxybafiqgea", response.properties().backupVnicId());
        Assertions.assertEquals(755954714, response.properties().cpuCoreCount());
        Assertions.assertEquals(1031040752, response.properties().dbNodeStorageSizeInGbs());
        Assertions.assertEquals("kglklbyulidwcw", response.properties().dbServerId());
        Assertions.assertEquals("mzegjon", response.properties().dbSystemId());
        Assertions.assertEquals("jirwgdnqzbrfk", response.properties().faultDomain());
        Assertions.assertEquals("zhzmtksjci", response.properties().hostIpId());
        Assertions.assertEquals("igsxcdgljplk", response.properties().hostname());
        Assertions.assertEquals(DbNodeProvisioningState.STARTING, response.properties().lifecycleState());
        Assertions.assertEquals("chtomflrytsw", response.properties().lifecycleDetails());
        Assertions.assertEquals(DbNodeMaintenanceType.VMDB_REBOOT_MIGRATION, response.properties().maintenanceType());
        Assertions.assertEquals(1654554720, response.properties().memorySizeInGbs());
        Assertions.assertEquals(1885946932, response.properties().softwareStorageSizeInGb());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-30T17:12:26Z"), response.properties().timeCreated());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-03T07:43:53Z"),
            response.properties().timeMaintenanceWindowEnd());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-29T16:33:56Z"),
            response.properties().timeMaintenanceWindowStart());
        Assertions.assertEquals("whqjjyslurlpshhk", response.properties().vnic2Id());
        Assertions.assertEquals("pedwqsl", response.properties().vnicId());
    }
}
