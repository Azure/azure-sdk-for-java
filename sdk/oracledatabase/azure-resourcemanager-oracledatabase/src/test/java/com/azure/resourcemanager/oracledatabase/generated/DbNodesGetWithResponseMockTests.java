// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oracledatabase.OracleDatabaseManager;
import com.azure.resourcemanager.oracledatabase.models.DbNode;
import com.azure.resourcemanager.oracledatabase.models.DbNodeMaintenanceType;
import com.azure.resourcemanager.oracledatabase.models.DbNodeProvisioningState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DbNodesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"ocid\":\"ruwnpqxpx\",\"additionalDetails\":\"fcngjsa\",\"backupIpId\":\"iixtmkzj\",\"backupVnic2Id\":\"viirhgfgrws\",\"backupVnicId\":\"gratzvzbglbyvict\",\"cpuCoreCount\":2047549854,\"dbNodeStorageSizeInGbs\":547924946,\"dbServerId\":\"j\",\"dbSystemId\":\"wrgxffmshkwfbkgo\",\"faultDomain\":\"wopdbydpiz\",\"hostIpId\":\"clnapxbiygnugjkn\",\"hostname\":\"mfcttux\",\"lifecycleState\":\"Terminating\",\"lifecycleDetails\":\"i\",\"maintenanceType\":\"VmdbRebootMigration\",\"memorySizeInGbs\":1857095612,\"softwareStorageSizeInGb\":1113337384,\"timeCreated\":\"2021-04-20T21:21:34Z\",\"timeMaintenanceWindowEnd\":\"2021-06-20T10:05:15Z\",\"timeMaintenanceWindowStart\":\"2021-07-25T01:02Z\",\"vnic2Id\":\"rnjhvsujztczytqj\",\"vnicId\":\"w\",\"provisioningState\":\"Succeeded\"},\"id\":\"nfprnjletlxs\",\"name\":\"rpddouifamo\",\"type\":\"aziynknlqwzdv\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OracleDatabaseManager manager = OracleDatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DbNode response = manager.dbNodes()
            .getWithResponse("gqoweyirdhlisn", "wfl", "qmp", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ruwnpqxpx", response.properties().ocid());
        Assertions.assertEquals("fcngjsa", response.properties().additionalDetails());
        Assertions.assertEquals("iixtmkzj", response.properties().backupIpId());
        Assertions.assertEquals("viirhgfgrws", response.properties().backupVnic2Id());
        Assertions.assertEquals("gratzvzbglbyvict", response.properties().backupVnicId());
        Assertions.assertEquals(2047549854, response.properties().cpuCoreCount());
        Assertions.assertEquals(547924946, response.properties().dbNodeStorageSizeInGbs());
        Assertions.assertEquals("j", response.properties().dbServerId());
        Assertions.assertEquals("wrgxffmshkwfbkgo", response.properties().dbSystemId());
        Assertions.assertEquals("wopdbydpiz", response.properties().faultDomain());
        Assertions.assertEquals("clnapxbiygnugjkn", response.properties().hostIpId());
        Assertions.assertEquals("mfcttux", response.properties().hostname());
        Assertions.assertEquals(DbNodeProvisioningState.TERMINATING, response.properties().lifecycleState());
        Assertions.assertEquals("i", response.properties().lifecycleDetails());
        Assertions.assertEquals(DbNodeMaintenanceType.VMDB_REBOOT_MIGRATION, response.properties().maintenanceType());
        Assertions.assertEquals(1857095612, response.properties().memorySizeInGbs());
        Assertions.assertEquals(1113337384, response.properties().softwareStorageSizeInGb());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-20T21:21:34Z"), response.properties().timeCreated());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-20T10:05:15Z"),
            response.properties().timeMaintenanceWindowEnd());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-25T01:02Z"),
            response.properties().timeMaintenanceWindowStart());
        Assertions.assertEquals("rnjhvsujztczytqj", response.properties().vnic2Id());
        Assertions.assertEquals("w", response.properties().vnicId());
    }
}
