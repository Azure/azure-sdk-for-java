/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.storagecache.v2020_03_01;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * A namespace junction.
 */
public class NamespaceJunction {
    /**
     * Namespace path on a Cache for a Storage Target.
     */
    @JsonProperty(value = "namespacePath")
    private String namespacePath;

    /**
     * Path in Storage Target to which namespacePath points.
     */
    @JsonProperty(value = "targetPath")
    private String targetPath;

    /**
     * NFS export where targetPath exists.
     */
    @JsonProperty(value = "nfsExport")
    private String nfsExport;

    /**
     * Get namespace path on a Cache for a Storage Target.
     *
     * @return the namespacePath value
     */
    public String namespacePath() {
        return this.namespacePath;
    }

    /**
     * Set namespace path on a Cache for a Storage Target.
     *
     * @param namespacePath the namespacePath value to set
     * @return the NamespaceJunction object itself.
     */
    public NamespaceJunction withNamespacePath(String namespacePath) {
        this.namespacePath = namespacePath;
        return this;
    }

    /**
     * Get path in Storage Target to which namespacePath points.
     *
     * @return the targetPath value
     */
    public String targetPath() {
        return this.targetPath;
    }

    /**
     * Set path in Storage Target to which namespacePath points.
     *
     * @param targetPath the targetPath value to set
     * @return the NamespaceJunction object itself.
     */
    public NamespaceJunction withTargetPath(String targetPath) {
        this.targetPath = targetPath;
        return this;
    }

    /**
     * Get nFS export where targetPath exists.
     *
     * @return the nfsExport value
     */
    public String nfsExport() {
        return this.nfsExport;
    }

    /**
     * Set nFS export where targetPath exists.
     *
     * @param nfsExport the nfsExport value to set
     * @return the NamespaceJunction object itself.
     */
    public NamespaceJunction withNfsExport(String nfsExport) {
        this.nfsExport = nfsExport;
        return this;
    }

}
