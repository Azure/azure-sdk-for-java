// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagecache.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.storagecache.StorageCacheManager;
import com.azure.resourcemanager.storagecache.models.ConflictResolutionMode;
import com.azure.resourcemanager.storagecache.models.ImportJob;
import com.azure.resourcemanager.storagecache.models.ImportJobAdminStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ImportJobsListByAmlFilesystemMockTests {
    @Test
    public void testListByAmlFilesystem() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Updating\",\"adminStatus\":\"Active\",\"importPrefixes\":[\"slqubkwdl\"],\"conflictResolutionMode\":\"Fail\",\"maximumErrors\":1732882534,\"status\":{\"state\":\"Completed\",\"statusMessage\":\"bazpjuohmi\",\"totalBlobsWalked\":3663666139769277423,\"blobsWalkedPerSecond\":3994792766907228900,\"totalBlobsImported\":5464079555209538441,\"importedFiles\":6595563974366054506,\"importedDirectories\":8198925985158937604,\"importedSymlinks\":4027678278596820770,\"preexistingFiles\":4467031765905579565,\"preexistingDirectories\":4890699849402631655,\"preexistingSymlinks\":781287572883620322,\"blobsImportedPerSecond\":8073120873344288099,\"lastCompletionTime\":\"2021-12-04T12:22:10Z\",\"lastStartedTime\":\"2021-05-26T11:43:30Z\",\"totalErrors\":511466566,\"totalConflicts\":1448184483}},\"location\":\"rxgibbd\",\"tags\":{\"auorsukokw\":\"onfo\",\"epzl\":\"qplhlvnu\",\"vmnnrw\":\"phwzsoldweyuqdu\"},\"id\":\"biorktal\",\"name\":\"wjhhgdnhxmsivf\",\"type\":\"miloxggdufiqndie\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        StorageCacheManager manager = StorageCacheManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<ImportJob> response
            = manager.importJobs().listByAmlFilesystem("v", "jjziuxxpsh", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("rxgibbd", response.iterator().next().location());
        Assertions.assertEquals("onfo", response.iterator().next().tags().get("auorsukokw"));
        Assertions.assertEquals(ImportJobAdminStatus.ACTIVE, response.iterator().next().adminStatus());
        Assertions.assertEquals("slqubkwdl", response.iterator().next().importPrefixes().get(0));
        Assertions.assertEquals(ConflictResolutionMode.FAIL, response.iterator().next().conflictResolutionMode());
        Assertions.assertEquals(1732882534, response.iterator().next().maximumErrors());
    }
}
