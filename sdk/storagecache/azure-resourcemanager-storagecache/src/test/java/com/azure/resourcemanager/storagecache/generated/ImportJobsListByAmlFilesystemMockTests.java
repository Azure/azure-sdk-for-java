// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagecache.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.storagecache.StorageCacheManager;
import com.azure.resourcemanager.storagecache.models.ConflictResolutionMode;
import com.azure.resourcemanager.storagecache.models.ImportJob;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ImportJobsListByAmlFilesystemMockTests {
    @Test
    public void testListByAmlFilesystem() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Creating\",\"importPrefixes\":[\"chqnrnrpxehuwry\",\"qgaifmviklbydv\",\"hbejdznxcvdsrhnj\"],\"conflictResolutionMode\":\"OverwriteIfDirty\",\"maximumErrors\":1976490,\"status\":{\"state\":\"Completed\",\"statusMessage\":\"qfzgemjdftul\",\"totalBlobsWalked\":9148960841724922095,\"blobsWalkedPerSecond\":6160828479857694240,\"totalBlobsImported\":46322939906054520,\"blobsImportedPerSecond\":2810450179000114053,\"lastCompletionTime\":\"2021-02-25T17:02:04Z\",\"lastStartedTime\":\"2021-07-25T15:19:26Z\",\"totalErrors\":733943203,\"totalConflicts\":164941612}},\"location\":\"qioknssxmojm\",\"tags\":{\"cfzq\":\"kjprvk\"},\"id\":\"jyxgtczh\",\"name\":\"ydbsd\",\"type\":\"hmkxmaehvbb\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        StorageCacheManager manager = StorageCacheManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ImportJob> response
            = manager.importJobs().listByAmlFilesystem("jslb", "wkojgcyztsfmzn", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("qioknssxmojm", response.iterator().next().location());
        Assertions.assertEquals("kjprvk", response.iterator().next().tags().get("cfzq"));
        Assertions.assertEquals("chqnrnrpxehuwry", response.iterator().next().importPrefixes().get(0));
        Assertions.assertEquals(ConflictResolutionMode.OVERWRITE_IF_DIRTY,
            response.iterator().next().conflictResolutionMode());
        Assertions.assertEquals(1976490, response.iterator().next().maximumErrors());
    }
}
