// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagecache.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.storagecache.StorageCacheManager;
import com.azure.resourcemanager.storagecache.models.OperationalStateType;
import com.azure.resourcemanager.storagecache.models.StorageTarget;
import com.azure.resourcemanager.storagecache.models.StorageTargetType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class StorageTargetsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"junctions\":[{\"namespacePath\":\"cc\",\"targetPath\":\"nhxk\",\"nfsExport\":\"v\",\"nfsAccessPolicy\":\"nrzvuljraaer\"},{\"namespacePath\":\"okqgukkjq\",\"targetPath\":\"broyla\",\"nfsExport\":\"ulcdisdosf\",\"nfsAccessPolicy\":\"jsvg\"},{\"namespacePath\":\"whryvycytdcl\",\"targetPath\":\"ccknfnwmbtmvp\",\"nfsExport\":\"jdhttzaefedxi\",\"nfsAccessPolicy\":\"hrphkmcrjdqn\"},{\"namespacePath\":\"fzpbgtgkyl\",\"targetPath\":\"ghrjeuutl\",\"nfsExport\":\"ez\",\"nfsAccessPolicy\":\"hokvbwnh\"}],\"targetType\":\"unknown\",\"provisioningState\":\"Deleting\",\"state\":\"Busy\",\"nfs3\":{\"target\":\"ppipifhpfeoa\",\"usageModel\":\"gcxtxj\",\"verificationTimer\":1930965124,\"writeBackTimer\":1050895909},\"clfs\":{\"target\":\"dltug\"},\"unknown\":{\"attributes\":{\"jhoiftxfkfweg\":\"mks\",\"iqtgdqoh\":\"rhptilluc\"}},\"blobNfs\":{\"target\":\"sldrizetpwbral\",\"usageModel\":\"ibph\",\"verificationTimer\":449888460,\"writeBackTimer\":1515253868},\"allocationPercentage\":739440726},\"location\":\"a\",\"id\":\"nkjpdnjzha\",\"name\":\"oylhjlmuoyxprimr\",\"type\":\"opteecj\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        StorageCacheManager manager = StorageCacheManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        StorageTarget response = manager.storageTargets()
            .getWithResponse("kdlpa", "zrcxfailcfxwmdbo", "dfgsftufqobrj", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("cc", response.junctions().get(0).namespacePath());
        Assertions.assertEquals("nhxk", response.junctions().get(0).targetPath());
        Assertions.assertEquals("v", response.junctions().get(0).nfsExport());
        Assertions.assertEquals("nrzvuljraaer", response.junctions().get(0).nfsAccessPolicy());
        Assertions.assertEquals(StorageTargetType.UNKNOWN, response.targetType());
        Assertions.assertEquals(OperationalStateType.BUSY, response.state());
        Assertions.assertEquals("ppipifhpfeoa", response.nfs3().target());
        Assertions.assertEquals("gcxtxj", response.nfs3().usageModel());
        Assertions.assertEquals(1930965124, response.nfs3().verificationTimer());
        Assertions.assertEquals(1050895909, response.nfs3().writeBackTimer());
        Assertions.assertEquals("dltug", response.clfs().target());
        Assertions.assertEquals("mks", response.unknown().attributes().get("jhoiftxfkfweg"));
        Assertions.assertEquals("sldrizetpwbral", response.blobNfs().target());
        Assertions.assertEquals("ibph", response.blobNfs().usageModel());
        Assertions.assertEquals(449888460, response.blobNfs().verificationTimer());
        Assertions.assertEquals(1515253868, response.blobNfs().writeBackTimer());
    }
}
