// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagecache.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.storagecache.fluent.models.UsageModelInner;
import com.azure.resourcemanager.storagecache.models.UsageModelDisplay;
import com.azure.resourcemanager.storagecache.models.UsageModelsResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UsageModelsResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UsageModelsResult model = BinaryData.fromString(
            "{\"nextLink\":\"fbishcbkha\",\"value\":[{\"display\":{\"description\":\"a\"},\"modelName\":\"p\",\"targetType\":\"g\"},{\"display\":{\"description\":\"buxwgip\"},\"modelName\":\"onowk\",\"targetType\":\"hwankixzbinjepu\"}]}")
            .toObject(UsageModelsResult.class);
        Assertions.assertEquals("fbishcbkha", model.nextLink());
        Assertions.assertEquals("a", model.value().get(0).display().description());
        Assertions.assertEquals("p", model.value().get(0).modelName());
        Assertions.assertEquals("g", model.value().get(0).targetType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UsageModelsResult model = new UsageModelsResult().withNextLink("fbishcbkha")
            .withValue(Arrays.asList(
                new UsageModelInner().withDisplay(new UsageModelDisplay().withDescription("a")).withModelName("p")
                    .withTargetType("g"),
                new UsageModelInner().withDisplay(new UsageModelDisplay().withDescription("buxwgip"))
                    .withModelName("onowk").withTargetType("hwankixzbinjepu")));
        model = BinaryData.fromObject(model).toObject(UsageModelsResult.class);
        Assertions.assertEquals("fbishcbkha", model.nextLink());
        Assertions.assertEquals("a", model.value().get(0).display().description());
        Assertions.assertEquals("p", model.value().get(0).modelName());
        Assertions.assertEquals("g", model.value().get(0).targetType());
    }
}
