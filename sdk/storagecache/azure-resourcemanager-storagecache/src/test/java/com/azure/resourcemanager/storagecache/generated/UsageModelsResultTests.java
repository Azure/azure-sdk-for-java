// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagecache.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.storagecache.fluent.models.UsageModelInner;
import com.azure.resourcemanager.storagecache.models.UsageModelDisplay;
import com.azure.resourcemanager.storagecache.models.UsageModelsResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UsageModelsResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UsageModelsResult model = BinaryData.fromString(
            "{\"nextLink\":\"qtkoievs\",\"value\":[{\"display\":{\"description\":\"rlltmuwlauwzizx\"},\"modelName\":\"pgcjefuzmuvp\",\"targetType\":\"tdum\"}]}")
            .toObject(UsageModelsResult.class);
        Assertions.assertEquals("qtkoievs", model.nextLink());
        Assertions.assertEquals("rlltmuwlauwzizx", model.value().get(0).display().description());
        Assertions.assertEquals("pgcjefuzmuvp", model.value().get(0).modelName());
        Assertions.assertEquals("tdum", model.value().get(0).targetType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UsageModelsResult model = new UsageModelsResult().withNextLink("qtkoievs")
            .withValue(Arrays
                .asList(new UsageModelInner().withDisplay(new UsageModelDisplay().withDescription("rlltmuwlauwzizx"))
                    .withModelName("pgcjefuzmuvp")
                    .withTargetType("tdum")));
        model = BinaryData.fromObject(model).toObject(UsageModelsResult.class);
        Assertions.assertEquals("qtkoievs", model.nextLink());
        Assertions.assertEquals("rlltmuwlauwzizx", model.value().get(0).display().description());
        Assertions.assertEquals("pgcjefuzmuvp", model.value().get(0).modelName());
        Assertions.assertEquals("tdum", model.value().get(0).targetType());
    }
}
