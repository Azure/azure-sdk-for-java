// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagecache.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.storagecache.fluent.models.UsageModelInner;
import com.azure.resourcemanager.storagecache.models.UsageModelDisplay;
import com.azure.resourcemanager.storagecache.models.UsageModelsResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UsageModelsResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UsageModelsResult model =
            BinaryData
                .fromString(
                    "{\"nextLink\":\"dsoifiyipj\",\"value\":[{\"display\":{\"description\":\"gr\"},\"modelName\":\"znorcj\",\"targetType\":\"snb\"},{\"display\":{\"description\":\"abnmocpcyshu\"},\"modelName\":\"afbljjgpbtoqcjmk\",\"targetType\":\"a\"},{\"display\":{\"description\":\"idtqajzyu\"},\"modelName\":\"kudjkrlkhb\",\"targetType\":\"fepgzgq\"}]}")
                .toObject(UsageModelsResult.class);
        Assertions.assertEquals("dsoifiyipj", model.nextLink());
        Assertions.assertEquals("gr", model.value().get(0).display().description());
        Assertions.assertEquals("znorcj", model.value().get(0).modelName());
        Assertions.assertEquals("snb", model.value().get(0).targetType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UsageModelsResult model =
            new UsageModelsResult()
                .withNextLink("dsoifiyipj")
                .withValue(
                    Arrays
                        .asList(
                            new UsageModelInner()
                                .withDisplay(new UsageModelDisplay().withDescription("gr"))
                                .withModelName("znorcj")
                                .withTargetType("snb"),
                            new UsageModelInner()
                                .withDisplay(new UsageModelDisplay().withDescription("abnmocpcyshu"))
                                .withModelName("afbljjgpbtoqcjmk")
                                .withTargetType("a"),
                            new UsageModelInner()
                                .withDisplay(new UsageModelDisplay().withDescription("idtqajzyu"))
                                .withModelName("kudjkrlkhb")
                                .withTargetType("fepgzgq")));
        model = BinaryData.fromObject(model).toObject(UsageModelsResult.class);
        Assertions.assertEquals("dsoifiyipj", model.nextLink());
        Assertions.assertEquals("gr", model.value().get(0).display().description());
        Assertions.assertEquals("znorcj", model.value().get(0).modelName());
        Assertions.assertEquals("snb", model.value().get(0).targetType());
    }
}
