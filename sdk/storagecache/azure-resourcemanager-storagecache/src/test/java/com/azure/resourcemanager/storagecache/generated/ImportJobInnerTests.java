// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagecache.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.storagecache.fluent.models.ImportJobInner;
import com.azure.resourcemanager.storagecache.models.ConflictResolutionMode;
import com.azure.resourcemanager.storagecache.models.ImportJobAdminStatus;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ImportJobInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ImportJobInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"Updating\",\"adminStatus\":\"Cancel\",\"importPrefixes\":[\"mutduqktaps\"],\"conflictResolutionMode\":\"Fail\",\"maximumErrors\":1678823592,\"status\":{\"state\":\"Completed\",\"statusMessage\":\"mkdo\",\"totalBlobsWalked\":1712101311057870325,\"blobsWalkedPerSecond\":4117897998779209947,\"totalBlobsImported\":5019338814293008537,\"importedFiles\":1710601318408295978,\"importedDirectories\":3928713228305379526,\"importedSymlinks\":5837880679371880466,\"preexistingFiles\":1856769189997808740,\"preexistingDirectories\":7633674292030416558,\"preexistingSymlinks\":1668583945619936419,\"blobsImportedPerSecond\":7621174825781950014,\"lastCompletionTime\":\"2021-07-13T21:02:19Z\",\"lastStartedTime\":\"2021-08-14T01:11:33Z\",\"totalErrors\":68812306,\"totalConflicts\":2108030600}},\"location\":\"bquxigjy\",\"tags\":{\"lnerkujysvleju\":\"jaoyfhrtx\",\"kcprbnw\":\"fqawrlyxw\",\"ysszdnrujqguh\":\"xgjvtbv\"},\"id\":\"uouq\",\"name\":\"prwzwbnguitnwui\",\"type\":\"gazxuf\"}")
            .toObject(ImportJobInner.class);
        Assertions.assertEquals("bquxigjy", model.location());
        Assertions.assertEquals("jaoyfhrtx", model.tags().get("lnerkujysvleju"));
        Assertions.assertEquals(ImportJobAdminStatus.CANCEL, model.adminStatus());
        Assertions.assertEquals("mutduqktaps", model.importPrefixes().get(0));
        Assertions.assertEquals(ConflictResolutionMode.FAIL, model.conflictResolutionMode());
        Assertions.assertEquals(1678823592, model.maximumErrors());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ImportJobInner model = new ImportJobInner().withLocation("bquxigjy")
            .withTags(mapOf("lnerkujysvleju", "jaoyfhrtx", "kcprbnw", "fqawrlyxw", "ysszdnrujqguh", "xgjvtbv"))
            .withAdminStatus(ImportJobAdminStatus.CANCEL)
            .withImportPrefixes(Arrays.asList("mutduqktaps"))
            .withConflictResolutionMode(ConflictResolutionMode.FAIL)
            .withMaximumErrors(1678823592);
        model = BinaryData.fromObject(model).toObject(ImportJobInner.class);
        Assertions.assertEquals("bquxigjy", model.location());
        Assertions.assertEquals("jaoyfhrtx", model.tags().get("lnerkujysvleju"));
        Assertions.assertEquals(ImportJobAdminStatus.CANCEL, model.adminStatus());
        Assertions.assertEquals("mutduqktaps", model.importPrefixes().get(0));
        Assertions.assertEquals(ConflictResolutionMode.FAIL, model.conflictResolutionMode());
        Assertions.assertEquals(1678823592, model.maximumErrors());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
