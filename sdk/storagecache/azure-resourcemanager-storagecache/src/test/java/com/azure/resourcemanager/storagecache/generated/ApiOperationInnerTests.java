// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagecache.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.storagecache.fluent.models.ApiOperationInner;
import com.azure.resourcemanager.storagecache.models.ApiOperationDisplay;
import com.azure.resourcemanager.storagecache.models.ApiOperationPropertiesServiceSpecification;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ApiOperationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ApiOperationInner model =
            BinaryData
                .fromString(
                    "{\"display\":{\"operation\":\"parcry\",\"provider\":\"nzwuxzd\",\"resource\":\"a\",\"description\":\"lhmwhfpmrqobm\"},\"origin\":\"kknryrtihf\",\"isDataAction\":true,\"name\":\"bpzvgn\",\"properties\":{\"serviceSpecification\":{\"metricSpecifications\":[],\"logSpecifications\":[]}}}")
                .toObject(ApiOperationInner.class);
        Assertions.assertEquals("parcry", model.display().operation());
        Assertions.assertEquals("nzwuxzd", model.display().provider());
        Assertions.assertEquals("a", model.display().resource());
        Assertions.assertEquals("lhmwhfpmrqobm", model.display().description());
        Assertions.assertEquals("kknryrtihf", model.origin());
        Assertions.assertEquals(true, model.isDataAction());
        Assertions.assertEquals("bpzvgn", model.name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ApiOperationInner model =
            new ApiOperationInner()
                .withDisplay(
                    new ApiOperationDisplay()
                        .withOperation("parcry")
                        .withProvider("nzwuxzd")
                        .withResource("a")
                        .withDescription("lhmwhfpmrqobm"))
                .withOrigin("kknryrtihf")
                .withIsDataAction(true)
                .withName("bpzvgn")
                .withServiceSpecification(
                    new ApiOperationPropertiesServiceSpecification()
                        .withMetricSpecifications(Arrays.asList())
                        .withLogSpecifications(Arrays.asList()));
        model = BinaryData.fromObject(model).toObject(ApiOperationInner.class);
        Assertions.assertEquals("parcry", model.display().operation());
        Assertions.assertEquals("nzwuxzd", model.display().provider());
        Assertions.assertEquals("a", model.display().resource());
        Assertions.assertEquals("lhmwhfpmrqobm", model.display().description());
        Assertions.assertEquals("kknryrtihf", model.origin());
        Assertions.assertEquals(true, model.isDataAction());
        Assertions.assertEquals("bpzvgn", model.name());
    }
}
