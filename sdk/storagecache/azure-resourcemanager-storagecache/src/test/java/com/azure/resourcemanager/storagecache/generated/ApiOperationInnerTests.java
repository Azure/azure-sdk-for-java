// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagecache.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.storagecache.fluent.models.ApiOperationInner;
import com.azure.resourcemanager.storagecache.models.ApiOperationDisplay;
import com.azure.resourcemanager.storagecache.models.ApiOperationPropertiesServiceSpecification;
import com.azure.resourcemanager.storagecache.models.LogSpecification;
import com.azure.resourcemanager.storagecache.models.MetricAggregationType;
import com.azure.resourcemanager.storagecache.models.MetricDimension;
import com.azure.resourcemanager.storagecache.models.MetricSpecification;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ApiOperationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ApiOperationInner model = BinaryData.fromString(
            "{\"display\":{\"operation\":\"iwpwcuk\",\"provider\":\"kgiawxklryplwck\",\"resource\":\"syyp\",\"description\":\"dhsgcba\"},\"origin\":\"hejkotynqgou\",\"isDataAction\":false,\"name\":\"likwyqkgfgib\",\"properties\":{\"serviceSpecification\":{\"metricSpecifications\":[{\"name\":\"eqsrxybzqqedqyt\",\"displayName\":\"iqfouflmmnkz\",\"displayDescription\":\"odmgl\",\"unit\":\"gpbkwtmut\",\"aggregationType\":\"qktapspwgcuert\",\"supportedAggregationTypes\":[\"None\",\"Count\"],\"metricClass\":\"vqwhbmdgbbjfd\",\"dimensions\":[{},{},{}]},{\"name\":\"mbe\",\"displayName\":\"pbhtqqrolfpfpsa\",\"displayDescription\":\"bquxigjy\",\"unit\":\"zjaoyfhrtxil\",\"aggregationType\":\"rkujy\",\"supportedAggregationTypes\":[\"Maximum\"],\"metricClass\":\"uvfqawrlyxwj\",\"dimensions\":[{},{},{},{}]}],\"logSpecifications\":[{\"name\":\"wbxgjvt\",\"displayName\":\"p\"},{\"name\":\"szdnr\",\"displayName\":\"qguhmuo\"},{\"name\":\"f\",\"displayName\":\"wzwbnguitn\"},{\"name\":\"izgazxu\",\"displayName\":\"zuckyfi\"}]}}}")
            .toObject(ApiOperationInner.class);
        Assertions.assertEquals("iwpwcuk", model.display().operation());
        Assertions.assertEquals("kgiawxklryplwck", model.display().provider());
        Assertions.assertEquals("syyp", model.display().resource());
        Assertions.assertEquals("dhsgcba", model.display().description());
        Assertions.assertEquals("hejkotynqgou", model.origin());
        Assertions.assertEquals(false, model.isDataAction());
        Assertions.assertEquals("likwyqkgfgib", model.name());
        Assertions.assertEquals("eqsrxybzqqedqyt", model.serviceSpecification().metricSpecifications().get(0).name());
        Assertions.assertEquals("iqfouflmmnkz",
            model.serviceSpecification().metricSpecifications().get(0).displayName());
        Assertions.assertEquals("odmgl",
            model.serviceSpecification().metricSpecifications().get(0).displayDescription());
        Assertions.assertEquals("gpbkwtmut", model.serviceSpecification().metricSpecifications().get(0).unit());
        Assertions.assertEquals("qktapspwgcuert",
            model.serviceSpecification().metricSpecifications().get(0).aggregationType());
        Assertions.assertEquals(MetricAggregationType.NONE,
            model.serviceSpecification().metricSpecifications().get(0).supportedAggregationTypes().get(0));
        Assertions.assertEquals("vqwhbmdgbbjfd",
            model.serviceSpecification().metricSpecifications().get(0).metricClass());
        Assertions.assertEquals("wbxgjvt", model.serviceSpecification().logSpecifications().get(0).name());
        Assertions.assertEquals("p", model.serviceSpecification().logSpecifications().get(0).displayName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ApiOperationInner model
            = new ApiOperationInner()
                .withDisplay(new ApiOperationDisplay().withOperation("iwpwcuk").withProvider("kgiawxklryplwck")
                    .withResource("syyp").withDescription("dhsgcba"))
                .withOrigin(
                    "hejkotynqgou")
                .withIsDataAction(
                    false)
                .withName("likwyqkgfgib")
                .withServiceSpecification(new ApiOperationPropertiesServiceSpecification()
                    .withMetricSpecifications(Arrays.asList(
                        new MetricSpecification().withName("eqsrxybzqqedqyt").withDisplayName("iqfouflmmnkz")
                            .withDisplayDescription("odmgl").withUnit("gpbkwtmut").withAggregationType("qktapspwgcuert")
                            .withSupportedAggregationTypes(
                                Arrays.asList(MetricAggregationType.NONE, MetricAggregationType.COUNT))
                            .withMetricClass("vqwhbmdgbbjfd").withDimensions(
                                Arrays.asList(new MetricDimension(), new MetricDimension(), new MetricDimension())),
                        new MetricSpecification().withName("mbe").withDisplayName("pbhtqqrolfpfpsa")
                            .withDisplayDescription("bquxigjy").withUnit("zjaoyfhrtxil").withAggregationType("rkujy")
                            .withSupportedAggregationTypes(Arrays.asList(MetricAggregationType.MAXIMUM))
                            .withMetricClass("uvfqawrlyxwj")
                            .withDimensions(Arrays.asList(new MetricDimension(), new MetricDimension(),
                                new MetricDimension(), new MetricDimension()))))
                    .withLogSpecifications(
                        Arrays.asList(new LogSpecification().withName("wbxgjvt").withDisplayName("p"),
                            new LogSpecification().withName("szdnr").withDisplayName("qguhmuo"),
                            new LogSpecification().withName("f").withDisplayName("wzwbnguitn"),
                            new LogSpecification().withName("izgazxu").withDisplayName("zuckyfi"))));
        model = BinaryData.fromObject(model).toObject(ApiOperationInner.class);
        Assertions.assertEquals("iwpwcuk", model.display().operation());
        Assertions.assertEquals("kgiawxklryplwck", model.display().provider());
        Assertions.assertEquals("syyp", model.display().resource());
        Assertions.assertEquals("dhsgcba", model.display().description());
        Assertions.assertEquals("hejkotynqgou", model.origin());
        Assertions.assertEquals(false, model.isDataAction());
        Assertions.assertEquals("likwyqkgfgib", model.name());
        Assertions.assertEquals("eqsrxybzqqedqyt", model.serviceSpecification().metricSpecifications().get(0).name());
        Assertions.assertEquals("iqfouflmmnkz",
            model.serviceSpecification().metricSpecifications().get(0).displayName());
        Assertions.assertEquals("odmgl",
            model.serviceSpecification().metricSpecifications().get(0).displayDescription());
        Assertions.assertEquals("gpbkwtmut", model.serviceSpecification().metricSpecifications().get(0).unit());
        Assertions.assertEquals("qktapspwgcuert",
            model.serviceSpecification().metricSpecifications().get(0).aggregationType());
        Assertions.assertEquals(MetricAggregationType.NONE,
            model.serviceSpecification().metricSpecifications().get(0).supportedAggregationTypes().get(0));
        Assertions.assertEquals("vqwhbmdgbbjfd",
            model.serviceSpecification().metricSpecifications().get(0).metricClass());
        Assertions.assertEquals("wbxgjvt", model.serviceSpecification().logSpecifications().get(0).name());
        Assertions.assertEquals("p", model.serviceSpecification().logSpecifications().get(0).displayName());
    }
}
