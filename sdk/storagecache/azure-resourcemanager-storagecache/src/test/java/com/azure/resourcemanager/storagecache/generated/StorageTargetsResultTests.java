// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagecache.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.storagecache.fluent.models.StorageTargetInner;
import com.azure.resourcemanager.storagecache.models.OperationalStateType;
import com.azure.resourcemanager.storagecache.models.StorageTargetType;
import com.azure.resourcemanager.storagecache.models.StorageTargetsResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class StorageTargetsResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        StorageTargetsResult model =
            BinaryData
                .fromString(
                    "{\"nextLink\":\"cq\",\"value\":[{\"properties\":{\"junctions\":[],\"targetType\":\"nfs3\",\"provisioningState\":\"Canceled\",\"state\":\"Ready\",\"allocationPercentage\":1172540413},\"location\":\"xv\",\"id\":\"u\",\"name\":\"wpzntxhdzh\",\"type\":\"rqjbhckfrl\"}]}")
                .toObject(StorageTargetsResult.class);
        Assertions.assertEquals("cq", model.nextLink());
        Assertions.assertEquals(StorageTargetType.NFS3, model.value().get(0).targetType());
        Assertions.assertEquals(OperationalStateType.READY, model.value().get(0).state());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        StorageTargetsResult model =
            new StorageTargetsResult()
                .withNextLink("cq")
                .withValue(
                    Arrays
                        .asList(
                            new StorageTargetInner()
                                .withJunctions(Arrays.asList())
                                .withTargetType(StorageTargetType.NFS3)
                                .withState(OperationalStateType.READY)));
        model = BinaryData.fromObject(model).toObject(StorageTargetsResult.class);
        Assertions.assertEquals("cq", model.nextLink());
        Assertions.assertEquals(StorageTargetType.NFS3, model.value().get(0).targetType());
        Assertions.assertEquals(OperationalStateType.READY, model.value().get(0).state());
    }
}
