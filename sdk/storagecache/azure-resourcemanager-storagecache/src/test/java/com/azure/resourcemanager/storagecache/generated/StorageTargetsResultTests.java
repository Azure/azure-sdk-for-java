// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagecache.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.storagecache.fluent.models.StorageTargetInner;
import com.azure.resourcemanager.storagecache.models.BlobNfsTarget;
import com.azure.resourcemanager.storagecache.models.ClfsTarget;
import com.azure.resourcemanager.storagecache.models.NamespaceJunction;
import com.azure.resourcemanager.storagecache.models.Nfs3Target;
import com.azure.resourcemanager.storagecache.models.OperationalStateType;
import com.azure.resourcemanager.storagecache.models.StorageTargetType;
import com.azure.resourcemanager.storagecache.models.StorageTargetsResult;
import com.azure.resourcemanager.storagecache.models.UnknownTarget;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class StorageTargetsResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        StorageTargetsResult model = BinaryData.fromString(
            "{\"nextLink\":\"gxhuriplbp\",\"value\":[{\"properties\":{\"junctions\":[{\"namespacePath\":\"ebxmubyynt\",\"targetPath\":\"rbqtkoie\",\"nfsExport\":\"eotg\",\"nfsAccessPolicy\":\"l\"},{\"namespacePath\":\"muwlauwzizxbm\",\"targetPath\":\"cjefuzmu\",\"nfsExport\":\"bttdumorppxe\",\"nfsAccessPolicy\":\"nzbtbhj\"},{\"namespacePath\":\"lkfg\",\"targetPath\":\"dneu\",\"nfsExport\":\"fphsdyhtozfikdow\",\"nfsAccessPolicy\":\"uuvxz\"},{\"namespacePath\":\"lvithhqzonosgg\",\"targetPath\":\"c\",\"nfsExport\":\"fwdsj\",\"nfsAccessPolicy\":\"aljutiiswac\"}],\"targetType\":\"clfs\",\"provisioningState\":\"Deleting\",\"state\":\"Flushing\",\"nfs3\":{\"target\":\"wkfvhqcrailvp\",\"usageModel\":\"pfuflrw\",\"verificationTimer\":1760230888,\"writeBackTimer\":1240837475},\"clfs\":{\"target\":\"jrxs\"},\"unknown\":{\"attributes\":{\"kcvqvpke\":\"cnihgwqapnedgfbc\",\"hvoodsotbobzd\":\"dcvd\"}},\"blobNfs\":{\"target\":\"j\",\"usageModel\":\"nhdldwmgxcx\",\"verificationTimer\":1819120953,\"writeBackTimer\":1846533498},\"allocationPercentage\":1563532793},\"location\":\"uoegrpkhjwniyqs\",\"id\":\"i\",\"name\":\"pdggkzzlvm\",\"type\":\"mpaxmodfvuefywsb\"},{\"properties\":{\"junctions\":[{\"namespacePath\":\"yhrfouyftaakcpw\",\"targetPath\":\"zvqtmnubexkp\",\"nfsExport\":\"smond\",\"nfsAccessPolicy\":\"quxvypomgkop\"},{\"namespacePath\":\"hojvpajqgxysmocm\",\"targetPath\":\"fqvm\",\"nfsExport\":\"xozap\",\"nfsAccessPolicy\":\"elxprglyatddck\"}],\"targetType\":\"unknown\",\"provisioningState\":\"Succeeded\",\"state\":\"Flushing\",\"nfs3\":{\"target\":\"xgc\",\"usageModel\":\"ibrhosxsdqr\",\"verificationTimer\":218775906,\"writeBackTimer\":212926113},\"clfs\":{\"target\":\"m\"},\"unknown\":{\"attributes\":{\"szdtmhrkwof\":\"bahwfl\",\"piexpbtgiw\":\"yvoqa\",\"nwashrtd\":\"wo\"}},\"blobNfs\":{\"target\":\"nqxwbp\",\"usageModel\":\"ulpiuj\",\"verificationTimer\":2036871201,\"writeBackTimer\":1512461872},\"allocationPercentage\":320018251},\"location\":\"iobyu\",\"id\":\"rpqlp\",\"name\":\"wcciuqgbdbu\",\"type\":\"auvfbtkuwhhmhyk\"},{\"properties\":{\"junctions\":[{\"namespacePath\":\"fnndl\",\"targetPath\":\"chkoymkcdyh\",\"nfsExport\":\"kkpwdreqnovvq\",\"nfsAccessPolicy\":\"vljxywsu\"},{\"namespacePath\":\"yrs\",\"targetPath\":\"sytgadgvraea\",\"nfsExport\":\"e\",\"nfsAccessPolicy\":\"zar\"},{\"namespacePath\":\"lquuijfqkacewii\",\"targetPath\":\"pubjibw\",\"nfsExport\":\"f\",\"nfsAccessPolicy\":\"hqkvpuvksgplsak\"},{\"namespacePath\":\"n\",\"targetPath\":\"ynl\",\"nfsExport\":\"huopxodlqiynto\",\"nfsAccessPolicy\":\"ihleos\"}],\"targetType\":\"clfs\",\"provisioningState\":\"Succeeded\",\"state\":\"Flushing\",\"nfs3\":{\"target\":\"yzrpzbchckqqzq\",\"usageModel\":\"xiy\",\"verificationTimer\":1721034864,\"writeBackTimer\":1896138936},\"clfs\":{\"target\":\"ked\"},\"unknown\":{\"attributes\":{\"ypyynpcdpumnzg\":\"wyhqmibzyhwits\",\"biknsorgjhxbld\":\"wznm\",\"dmtnc\":\"lwwrl\",\"tllxdyhgsyocogj\":\"ok\"}},\"blobNfs\":{\"target\":\"tbnnha\",\"usageModel\":\"ocrkvcikh\",\"verificationTimer\":44638091,\"writeBackTimer\":703916773},\"allocationPercentage\":254959284},\"location\":\"qqu\",\"id\":\"ik\",\"name\":\"wggxkallat\",\"type\":\"elwuipi\"},{\"properties\":{\"junctions\":[{\"namespacePath\":\"z\",\"targetPath\":\"gvvcnayrhyr\",\"nfsExport\":\"xmueed\",\"nfsAccessPolicy\":\"rdvstkwqqtch\"},{\"namespacePath\":\"lmfmtdaay\",\"targetPath\":\"v\",\"nfsExport\":\"gpiohgwxrtfudxe\",\"nfsAccessPolicy\":\"gyqagvrvmnpkuk\"},{\"namespacePath\":\"i\",\"targetPath\":\"blxgwimf\",\"nfsExport\":\"hfjx\",\"nfsAccessPolicy\":\"szkkfoqre\"}],\"targetType\":\"clfs\",\"provisioningState\":\"Canceled\",\"state\":\"Ready\",\"nfs3\":{\"target\":\"aw\",\"usageModel\":\"a\",\"verificationTimer\":641008490,\"writeBackTimer\":322973840},\"clfs\":{\"target\":\"lpcirelsf\"},\"unknown\":{\"attributes\":{\"dxbjhwuaanozj\":\"wabfatkl\",\"l\":\"sphyoulpjrvxa\",\"tx\":\"vimjwos\"}},\"blobNfs\":{\"target\":\"skfc\",\"usageModel\":\"qumiek\",\"verificationTimer\":1035067368,\"writeBackTimer\":697538658},\"allocationPercentage\":782582629},\"location\":\"yf\",\"id\":\"dgqggebdu\",\"name\":\"ygaeqidbqfatpxl\",\"type\":\"rxcyjmoad\"}]}")
            .toObject(StorageTargetsResult.class);
        Assertions.assertEquals("gxhuriplbp", model.nextLink());
        Assertions.assertEquals("ebxmubyynt", model.value().get(0).junctions().get(0).namespacePath());
        Assertions.assertEquals("rbqtkoie", model.value().get(0).junctions().get(0).targetPath());
        Assertions.assertEquals("eotg", model.value().get(0).junctions().get(0).nfsExport());
        Assertions.assertEquals("l", model.value().get(0).junctions().get(0).nfsAccessPolicy());
        Assertions.assertEquals(StorageTargetType.CLFS, model.value().get(0).targetType());
        Assertions.assertEquals(OperationalStateType.FLUSHING, model.value().get(0).state());
        Assertions.assertEquals("wkfvhqcrailvp", model.value().get(0).nfs3().target());
        Assertions.assertEquals("pfuflrw", model.value().get(0).nfs3().usageModel());
        Assertions.assertEquals(1760230888, model.value().get(0).nfs3().verificationTimer());
        Assertions.assertEquals(1240837475, model.value().get(0).nfs3().writeBackTimer());
        Assertions.assertEquals("jrxs", model.value().get(0).clfs().target());
        Assertions.assertEquals("cnihgwqapnedgfbc", model.value().get(0).unknown().attributes().get("kcvqvpke"));
        Assertions.assertEquals("j", model.value().get(0).blobNfs().target());
        Assertions.assertEquals("nhdldwmgxcx", model.value().get(0).blobNfs().usageModel());
        Assertions.assertEquals(1819120953, model.value().get(0).blobNfs().verificationTimer());
        Assertions.assertEquals(1846533498, model.value().get(0).blobNfs().writeBackTimer());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        StorageTargetsResult model
            = new StorageTargetsResult().withNextLink("gxhuriplbp")
                .withValue(
                    Arrays.asList(
                        new StorageTargetInner()
                            .withJunctions(Arrays.asList(
                                new NamespaceJunction().withNamespacePath("ebxmubyynt").withTargetPath("rbqtkoie")
                                    .withNfsExport("eotg").withNfsAccessPolicy("l"),
                                new NamespaceJunction().withNamespacePath("muwlauwzizxbm").withTargetPath("cjefuzmu")
                                    .withNfsExport("bttdumorppxe").withNfsAccessPolicy("nzbtbhj"),
                                new NamespaceJunction().withNamespacePath("lkfg").withTargetPath("dneu")
                                    .withNfsExport("fphsdyhtozfikdow").withNfsAccessPolicy("uuvxz"),
                                new NamespaceJunction().withNamespacePath("lvithhqzonosgg").withTargetPath("c")
                                    .withNfsExport("fwdsj").withNfsAccessPolicy("aljutiiswac")))
                            .withTargetType(StorageTargetType.CLFS).withState(OperationalStateType.FLUSHING)
                            .withNfs3(
                                new Nfs3Target().withTarget("wkfvhqcrailvp").withUsageModel("pfuflrw")
                                    .withVerificationTimer(1760230888).withWriteBackTimer(1240837475))
                            .withClfs(
                                new ClfsTarget().withTarget("jrxs"))
                            .withUnknown(new UnknownTarget()
                                .withAttributes(mapOf("kcvqvpke", "cnihgwqapnedgfbc", "hvoodsotbobzd", "dcvd")))
                            .withBlobNfs(new BlobNfsTarget()
                                .withTarget("j").withUsageModel("nhdldwmgxcx").withVerificationTimer(1819120953)
                                .withWriteBackTimer(1846533498)),
                        new StorageTargetInner()
                            .withJunctions(Arrays.asList(
                                new NamespaceJunction().withNamespacePath("yhrfouyftaakcpw")
                                    .withTargetPath("zvqtmnubexkp").withNfsExport("smond")
                                    .withNfsAccessPolicy("quxvypomgkop"),
                                new NamespaceJunction().withNamespacePath("hojvpajqgxysmocm").withTargetPath("fqvm")
                                    .withNfsExport("xozap").withNfsAccessPolicy("elxprglyatddck")))
                            .withTargetType(StorageTargetType.UNKNOWN).withState(OperationalStateType.FLUSHING)
                            .withNfs3(new Nfs3Target().withTarget("xgc").withUsageModel("ibrhosxsdqr")
                                .withVerificationTimer(218775906).withWriteBackTimer(212926113))
                            .withClfs(new ClfsTarget().withTarget("m"))
                            .withUnknown(new UnknownTarget().withAttributes(
                                mapOf("szdtmhrkwof", "bahwfl", "piexpbtgiw", "yvoqa", "nwashrtd", "wo")))
                            .withBlobNfs(new BlobNfsTarget().withTarget("nqxwbp").withUsageModel("ulpiuj")
                                .withVerificationTimer(2036871201).withWriteBackTimer(1512461872)),
                        new StorageTargetInner()
                            .withJunctions(Arrays.asList(
                                new NamespaceJunction().withNamespacePath("fnndl").withTargetPath("chkoymkcdyh")
                                    .withNfsExport("kkpwdreqnovvq").withNfsAccessPolicy("vljxywsu"),
                                new NamespaceJunction().withNamespacePath("yrs").withTargetPath("sytgadgvraea")
                                    .withNfsExport("e").withNfsAccessPolicy("zar"),
                                new NamespaceJunction().withNamespacePath("lquuijfqkacewii").withTargetPath("pubjibw")
                                    .withNfsExport("f").withNfsAccessPolicy("hqkvpuvksgplsak"),
                                new NamespaceJunction().withNamespacePath("n").withTargetPath("ynl")
                                    .withNfsExport("huopxodlqiynto").withNfsAccessPolicy("ihleos")))
                            .withTargetType(StorageTargetType.CLFS).withState(OperationalStateType.FLUSHING)
                            .withNfs3(new Nfs3Target().withTarget("yzrpzbchckqqzq").withUsageModel("xiy")
                                .withVerificationTimer(1721034864).withWriteBackTimer(1896138936))
                            .withClfs(new ClfsTarget().withTarget("ked"))
                            .withUnknown(new UnknownTarget().withAttributes(mapOf("ypyynpcdpumnzg", "wyhqmibzyhwits",
                                "biknsorgjhxbld", "wznm", "dmtnc", "lwwrl", "tllxdyhgsyocogj", "ok")))
                            .withBlobNfs(new BlobNfsTarget().withTarget("tbnnha").withUsageModel("ocrkvcikh")
                                .withVerificationTimer(44638091).withWriteBackTimer(703916773)),
                        new StorageTargetInner()
                            .withJunctions(Arrays.asList(
                                new NamespaceJunction().withNamespacePath("z").withTargetPath("gvvcnayrhyr")
                                    .withNfsExport("xmueed").withNfsAccessPolicy("rdvstkwqqtch"),
                                new NamespaceJunction().withNamespacePath("lmfmtdaay").withTargetPath("v")
                                    .withNfsExport("gpiohgwxrtfudxe").withNfsAccessPolicy("gyqagvrvmnpkuk"),
                                new NamespaceJunction().withNamespacePath("i").withTargetPath("blxgwimf")
                                    .withNfsExport("hfjx").withNfsAccessPolicy("szkkfoqre")))
                            .withTargetType(StorageTargetType.CLFS).withState(OperationalStateType.READY)
                            .withNfs3(new Nfs3Target().withTarget("aw").withUsageModel("a")
                                .withVerificationTimer(641008490).withWriteBackTimer(322973840))
                            .withClfs(new ClfsTarget().withTarget("lpcirelsf"))
                            .withUnknown(new UnknownTarget().withAttributes(
                                mapOf("dxbjhwuaanozj", "wabfatkl", "l", "sphyoulpjrvxa", "tx", "vimjwos")))
                            .withBlobNfs(new BlobNfsTarget().withTarget("skfc").withUsageModel("qumiek")
                                .withVerificationTimer(1035067368).withWriteBackTimer(697538658))));
        model = BinaryData.fromObject(model).toObject(StorageTargetsResult.class);
        Assertions.assertEquals("gxhuriplbp", model.nextLink());
        Assertions.assertEquals("ebxmubyynt", model.value().get(0).junctions().get(0).namespacePath());
        Assertions.assertEquals("rbqtkoie", model.value().get(0).junctions().get(0).targetPath());
        Assertions.assertEquals("eotg", model.value().get(0).junctions().get(0).nfsExport());
        Assertions.assertEquals("l", model.value().get(0).junctions().get(0).nfsAccessPolicy());
        Assertions.assertEquals(StorageTargetType.CLFS, model.value().get(0).targetType());
        Assertions.assertEquals(OperationalStateType.FLUSHING, model.value().get(0).state());
        Assertions.assertEquals("wkfvhqcrailvp", model.value().get(0).nfs3().target());
        Assertions.assertEquals("pfuflrw", model.value().get(0).nfs3().usageModel());
        Assertions.assertEquals(1760230888, model.value().get(0).nfs3().verificationTimer());
        Assertions.assertEquals(1240837475, model.value().get(0).nfs3().writeBackTimer());
        Assertions.assertEquals("jrxs", model.value().get(0).clfs().target());
        Assertions.assertEquals("cnihgwqapnedgfbc", model.value().get(0).unknown().attributes().get("kcvqvpke"));
        Assertions.assertEquals("j", model.value().get(0).blobNfs().target());
        Assertions.assertEquals("nhdldwmgxcx", model.value().get(0).blobNfs().usageModel());
        Assertions.assertEquals(1819120953, model.value().get(0).blobNfs().verificationTimer());
        Assertions.assertEquals(1846533498, model.value().get(0).blobNfs().writeBackTimer());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
