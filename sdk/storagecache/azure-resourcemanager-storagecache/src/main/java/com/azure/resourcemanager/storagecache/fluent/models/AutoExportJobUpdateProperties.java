// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagecache.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.storagecache.models.AutoExportJobAdminStatus;
import java.io.IOException;

/**
 * The AutoExportJobUpdateProperties model.
 */
@Fluent
public final class AutoExportJobUpdateProperties implements JsonSerializable<AutoExportJobUpdateProperties> {
    /*
     * The administrative status of the auto export job. Possible values: 'Enable', 'Disable'. Passing in a value of
     * 'Disable' will disable the current active auto export job. By default it is set to 'Enable'.
     */
    private AutoExportJobAdminStatus adminStatus;

    /**
     * Creates an instance of AutoExportJobUpdateProperties class.
     */
    public AutoExportJobUpdateProperties() {
    }

    /**
     * Get the adminStatus property: The administrative status of the auto export job. Possible values: 'Enable',
     * 'Disable'. Passing in a value of 'Disable' will disable the current active auto export job. By default it is set
     * to 'Enable'.
     * 
     * @return the adminStatus value.
     */
    public AutoExportJobAdminStatus adminStatus() {
        return this.adminStatus;
    }

    /**
     * Set the adminStatus property: The administrative status of the auto export job. Possible values: 'Enable',
     * 'Disable'. Passing in a value of 'Disable' will disable the current active auto export job. By default it is set
     * to 'Enable'.
     * 
     * @param adminStatus the adminStatus value to set.
     * @return the AutoExportJobUpdateProperties object itself.
     */
    public AutoExportJobUpdateProperties withAdminStatus(AutoExportJobAdminStatus adminStatus) {
        this.adminStatus = adminStatus;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("adminStatus", this.adminStatus == null ? null : this.adminStatus.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AutoExportJobUpdateProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AutoExportJobUpdateProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AutoExportJobUpdateProperties.
     */
    public static AutoExportJobUpdateProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AutoExportJobUpdateProperties deserializedAutoExportJobUpdateProperties
                = new AutoExportJobUpdateProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("adminStatus".equals(fieldName)) {
                    deserializedAutoExportJobUpdateProperties.adminStatus
                        = AutoExportJobAdminStatus.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAutoExportJobUpdateProperties;
        });
    }
}
