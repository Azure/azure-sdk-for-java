// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagecache.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.storagecache.models.AmlFilesystemEncryptionSettings;
import com.azure.resourcemanager.storagecache.models.AmlFilesystemRootSquashSettings;
import com.azure.resourcemanager.storagecache.models.AmlFilesystemUpdatePropertiesMaintenanceWindow;
import java.io.IOException;

/**
 * Properties of the AML file system.
 */
@Fluent
public final class AmlFilesystemUpdateProperties implements JsonSerializable<AmlFilesystemUpdateProperties> {
    /*
     * Specifies encryption settings of the AML file system.
     */
    private AmlFilesystemEncryptionSettings encryptionSettings;

    /*
     * Start time of a 30-minute weekly maintenance window.
     */
    private AmlFilesystemUpdatePropertiesMaintenanceWindow maintenanceWindow;

    /*
     * Specifies root squash settings of the AML file system.
     */
    private AmlFilesystemRootSquashSettings rootSquashSettings;

    /**
     * Creates an instance of AmlFilesystemUpdateProperties class.
     */
    public AmlFilesystemUpdateProperties() {
    }

    /**
     * Get the encryptionSettings property: Specifies encryption settings of the AML file system.
     * 
     * @return the encryptionSettings value.
     */
    public AmlFilesystemEncryptionSettings encryptionSettings() {
        return this.encryptionSettings;
    }

    /**
     * Set the encryptionSettings property: Specifies encryption settings of the AML file system.
     * 
     * @param encryptionSettings the encryptionSettings value to set.
     * @return the AmlFilesystemUpdateProperties object itself.
     */
    public AmlFilesystemUpdateProperties withEncryptionSettings(AmlFilesystemEncryptionSettings encryptionSettings) {
        this.encryptionSettings = encryptionSettings;
        return this;
    }

    /**
     * Get the maintenanceWindow property: Start time of a 30-minute weekly maintenance window.
     * 
     * @return the maintenanceWindow value.
     */
    public AmlFilesystemUpdatePropertiesMaintenanceWindow maintenanceWindow() {
        return this.maintenanceWindow;
    }

    /**
     * Set the maintenanceWindow property: Start time of a 30-minute weekly maintenance window.
     * 
     * @param maintenanceWindow the maintenanceWindow value to set.
     * @return the AmlFilesystemUpdateProperties object itself.
     */
    public AmlFilesystemUpdateProperties
        withMaintenanceWindow(AmlFilesystemUpdatePropertiesMaintenanceWindow maintenanceWindow) {
        this.maintenanceWindow = maintenanceWindow;
        return this;
    }

    /**
     * Get the rootSquashSettings property: Specifies root squash settings of the AML file system.
     * 
     * @return the rootSquashSettings value.
     */
    public AmlFilesystemRootSquashSettings rootSquashSettings() {
        return this.rootSquashSettings;
    }

    /**
     * Set the rootSquashSettings property: Specifies root squash settings of the AML file system.
     * 
     * @param rootSquashSettings the rootSquashSettings value to set.
     * @return the AmlFilesystemUpdateProperties object itself.
     */
    public AmlFilesystemUpdateProperties withRootSquashSettings(AmlFilesystemRootSquashSettings rootSquashSettings) {
        this.rootSquashSettings = rootSquashSettings;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (encryptionSettings() != null) {
            encryptionSettings().validate();
        }
        if (maintenanceWindow() != null) {
            maintenanceWindow().validate();
        }
        if (rootSquashSettings() != null) {
            rootSquashSettings().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("encryptionSettings", this.encryptionSettings);
        jsonWriter.writeJsonField("maintenanceWindow", this.maintenanceWindow);
        jsonWriter.writeJsonField("rootSquashSettings", this.rootSquashSettings);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AmlFilesystemUpdateProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AmlFilesystemUpdateProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AmlFilesystemUpdateProperties.
     */
    public static AmlFilesystemUpdateProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AmlFilesystemUpdateProperties deserializedAmlFilesystemUpdateProperties
                = new AmlFilesystemUpdateProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("encryptionSettings".equals(fieldName)) {
                    deserializedAmlFilesystemUpdateProperties.encryptionSettings
                        = AmlFilesystemEncryptionSettings.fromJson(reader);
                } else if ("maintenanceWindow".equals(fieldName)) {
                    deserializedAmlFilesystemUpdateProperties.maintenanceWindow
                        = AmlFilesystemUpdatePropertiesMaintenanceWindow.fromJson(reader);
                } else if ("rootSquashSettings".equals(fieldName)) {
                    deserializedAmlFilesystemUpdateProperties.rootSquashSettings
                        = AmlFilesystemRootSquashSettings.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAmlFilesystemUpdateProperties;
        });
    }
}
