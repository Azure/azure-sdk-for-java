// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagecache.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.storagecache.fluent.models.AutoExportJobInner;
import com.azure.resourcemanager.storagecache.models.AutoExportJob;
import com.azure.resourcemanager.storagecache.models.AutoExportJobAdminStatus;
import com.azure.resourcemanager.storagecache.models.AutoExportJobProvisioningStateType;
import com.azure.resourcemanager.storagecache.models.AutoExportJobUpdate;
import com.azure.resourcemanager.storagecache.models.AutoExportStatusType;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class AutoExportJobImpl implements AutoExportJob, AutoExportJob.Definition, AutoExportJob.Update {
    private AutoExportJobInner innerObject;

    private final com.azure.resourcemanager.storagecache.StorageCacheManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public AutoExportJobProvisioningStateType provisioningState() {
        return this.innerModel().provisioningState();
    }

    public AutoExportJobAdminStatus adminStatus() {
        return this.innerModel().adminStatus();
    }

    public List<String> autoExportPrefixes() {
        List<String> inner = this.innerModel().autoExportPrefixes();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public AutoExportStatusType state() {
        return this.innerModel().state();
    }

    public String statusCode() {
        return this.innerModel().statusCode();
    }

    public String statusMessage() {
        return this.innerModel().statusMessage();
    }

    public Long totalFilesExported() {
        return this.innerModel().totalFilesExported();
    }

    public Long totalMiBExported() {
        return this.innerModel().totalMiBExported();
    }

    public Long totalFilesFailed() {
        return this.innerModel().totalFilesFailed();
    }

    public Integer exportIterationCount() {
        return this.innerModel().exportIterationCount();
    }

    public OffsetDateTime lastSuccessfulIterationCompletionTimeUtc() {
        return this.innerModel().lastSuccessfulIterationCompletionTimeUtc();
    }

    public Long currentIterationFilesDiscovered() {
        return this.innerModel().currentIterationFilesDiscovered();
    }

    public Long currentIterationMiBDiscovered() {
        return this.innerModel().currentIterationMiBDiscovered();
    }

    public Long currentIterationFilesExported() {
        return this.innerModel().currentIterationFilesExported();
    }

    public Long currentIterationMiBExported() {
        return this.innerModel().currentIterationMiBExported();
    }

    public Long currentIterationFilesFailed() {
        return this.innerModel().currentIterationFilesFailed();
    }

    public OffsetDateTime lastStartedTimeUtc() {
        return this.innerModel().lastStartedTimeUtc();
    }

    public OffsetDateTime lastCompletionTimeUtc() {
        return this.innerModel().lastCompletionTimeUtc();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public AutoExportJobInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.storagecache.StorageCacheManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String amlFilesystemName;

    private String autoExportJobName;

    private AutoExportJobUpdate updateAutoExportJob;

    public AutoExportJobImpl withExistingAmlFilesystem(String resourceGroupName, String amlFilesystemName) {
        this.resourceGroupName = resourceGroupName;
        this.amlFilesystemName = amlFilesystemName;
        return this;
    }

    public AutoExportJob create() {
        this.innerObject = serviceManager.serviceClient()
            .getAutoExportJobs()
            .createOrUpdate(resourceGroupName, amlFilesystemName, autoExportJobName, this.innerModel(), Context.NONE);
        return this;
    }

    public AutoExportJob create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getAutoExportJobs()
            .createOrUpdate(resourceGroupName, amlFilesystemName, autoExportJobName, this.innerModel(), context);
        return this;
    }

    AutoExportJobImpl(String name, com.azure.resourcemanager.storagecache.StorageCacheManager serviceManager) {
        this.innerObject = new AutoExportJobInner();
        this.serviceManager = serviceManager;
        this.autoExportJobName = name;
    }

    public AutoExportJobImpl update() {
        this.updateAutoExportJob = new AutoExportJobUpdate();
        return this;
    }

    public AutoExportJob apply() {
        this.innerObject = serviceManager.serviceClient()
            .getAutoExportJobs()
            .update(resourceGroupName, amlFilesystemName, autoExportJobName, updateAutoExportJob, Context.NONE);
        return this;
    }

    public AutoExportJob apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getAutoExportJobs()
            .update(resourceGroupName, amlFilesystemName, autoExportJobName, updateAutoExportJob, context);
        return this;
    }

    AutoExportJobImpl(AutoExportJobInner innerObject,
        com.azure.resourcemanager.storagecache.StorageCacheManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.amlFilesystemName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "amlFilesystems");
        this.autoExportJobName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "autoExportJobs");
    }

    public AutoExportJob refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getAutoExportJobs()
            .getWithResponse(resourceGroupName, amlFilesystemName, autoExportJobName, Context.NONE)
            .getValue();
        return this;
    }

    public AutoExportJob refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getAutoExportJobs()
            .getWithResponse(resourceGroupName, amlFilesystemName, autoExportJobName, context)
            .getValue();
        return this;
    }

    public AutoExportJobImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public AutoExportJobImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public AutoExportJobImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateAutoExportJob.withTags(tags);
            return this;
        }
    }

    public AutoExportJobImpl withAdminStatus(AutoExportJobAdminStatus adminStatus) {
        if (isInCreateMode()) {
            this.innerModel().withAdminStatus(adminStatus);
            return this;
        } else {
            this.updateAutoExportJob.withAdminStatus(adminStatus);
            return this;
        }
    }

    public AutoExportJobImpl withAutoExportPrefixes(List<String> autoExportPrefixes) {
        this.innerModel().withAutoExportPrefixes(autoExportPrefixes);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel() == null || this.innerModel().id() == null;
    }
}
