// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagecache.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.storagecache.fluent.models.AutoExportJobInner;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;

/**
 * An immutable client-side representation of AutoExportJob.
 */
public interface AutoExportJob {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the provisioningState property: ARM provisioning state.
     * 
     * @return the provisioningState value.
     */
    AutoExportJobProvisioningStateType provisioningState();

    /**
     * Gets the adminStatus property: The administrative status of the auto export job. Possible values: 'Enable',
     * 'Disable'. Passing in a value of 'Disable' will disable the current active auto export job. By default it is set
     * to 'Enable'.
     * 
     * @return the adminStatus value.
     */
    AutoExportJobAdminStatus adminStatus();

    /**
     * Gets the autoExportPrefixes property: An array of blob paths/prefixes that get auto exported to the cluster
     * namespace. It has '/' as the default value. Number of maximum allowed paths for now is 1.
     * 
     * @return the autoExportPrefixes value.
     */
    List<String> autoExportPrefixes();

    /**
     * Gets the state property: The operational state of auto export. InProgress indicates the export is running.
     * Disabling indicates the user has requested to disable the export but the disabling is still in progress. Disabled
     * indicates auto export has been disabled. DisableFailed indicates the disabling has failed. Failed means the
     * export was unable to continue, due to a fatal error.
     * 
     * @return the state value.
     */
    AutoExportStatusType state();

    /**
     * Gets the statusCode property: Server-defined status code for auto export job.
     * 
     * @return the statusCode value.
     */
    String statusCode();

    /**
     * Gets the statusMessage property: Server-defined status message for auto export job.
     * 
     * @return the statusMessage value.
     */
    String statusMessage();

    /**
     * Gets the totalFilesExported property: Total files exported since the start of the export. This is accumulative,
     * some files may be counted repeatedly.
     * 
     * @return the totalFilesExported value.
     */
    Long totalFilesExported();

    /**
     * Gets the totalMiBExported property: Total data (in MiB) exported since the start of the export. This is
     * accumulative, some files may be counted repeatedly.
     * 
     * @return the totalMiBExported value.
     */
    Long totalMiBExported();

    /**
     * Gets the totalFilesFailed property: Total files failed to be export since the last successfully completed
     * iteration. This is accumulative, some files may be counted repeatedly.
     * 
     * @return the totalFilesFailed value.
     */
    Long totalFilesFailed();

    /**
     * Gets the exportIterationCount property: Number of iterations completed since the start of the export.
     * 
     * @return the exportIterationCount value.
     */
    Integer exportIterationCount();

    /**
     * Gets the lastSuccessfulIterationCompletionTimeUtc property: Time (in UTC) of the last successfully completed
     * export iteration. Look at logging container for details.
     * 
     * @return the lastSuccessfulIterationCompletionTimeUtc value.
     */
    OffsetDateTime lastSuccessfulIterationCompletionTimeUtc();

    /**
     * Gets the currentIterationFilesDiscovered property: Files discovered for export in current iteration. It may
     * increase while more export items are found.
     * 
     * @return the currentIterationFilesDiscovered value.
     */
    Long currentIterationFilesDiscovered();

    /**
     * Gets the currentIterationMiBDiscovered property: Data (in MiB) discovered for export in current iteration. It may
     * increase while more export items are found.
     * 
     * @return the currentIterationMiBDiscovered value.
     */
    Long currentIterationMiBDiscovered();

    /**
     * Gets the currentIterationFilesExported property: Files that have been exported in current iteration.
     * 
     * @return the currentIterationFilesExported value.
     */
    Long currentIterationFilesExported();

    /**
     * Gets the currentIterationMiBExported property: Data (in MiB) that have been exported in current iteration.
     * 
     * @return the currentIterationMiBExported value.
     */
    Long currentIterationMiBExported();

    /**
     * Gets the currentIterationFilesFailed property: Files failed to export in current iteration.
     * 
     * @return the currentIterationFilesFailed value.
     */
    Long currentIterationFilesFailed();

    /**
     * Gets the lastStartedTimeUtc property: The time (in UTC) the latest auto export job started.
     * 
     * @return the lastStartedTimeUtc value.
     */
    OffsetDateTime lastStartedTimeUtc();

    /**
     * Gets the lastCompletionTimeUtc property: The time (in UTC) of the last completed auto export job.
     * 
     * @return the lastCompletionTimeUtc value.
     */
    OffsetDateTime lastCompletionTimeUtc();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.storagecache.fluent.models.AutoExportJobInner object.
     * 
     * @return the inner object.
     */
    AutoExportJobInner innerModel();

    /**
     * The entirety of the AutoExportJob definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLocation,
        DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The AutoExportJob definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the AutoExportJob definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the AutoExportJob definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(String location);
        }

        /**
         * The stage of the AutoExportJob definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, amlFilesystemName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param amlFilesystemName Name for the AML file system. Allows alphanumerics, underscores, and hyphens.
             * Start and end with alphanumeric.
             * @return the next definition stage.
             */
            WithCreate withExistingAmlFilesystem(String resourceGroupName, String amlFilesystemName);
        }

        /**
         * The stage of the AutoExportJob definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags, DefinitionStages.WithAdminStatus,
            DefinitionStages.WithAutoExportPrefixes {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            AutoExportJob create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            AutoExportJob create(Context context);
        }

        /**
         * The stage of the AutoExportJob definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the AutoExportJob definition allowing to specify adminStatus.
         */
        interface WithAdminStatus {
            /**
             * Specifies the adminStatus property: The administrative status of the auto export job. Possible values:
             * 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto export job. By
             * default it is set to 'Enable'..
             * 
             * @param adminStatus The administrative status of the auto export job. Possible values: 'Enable',
             * 'Disable'. Passing in a value of 'Disable' will disable the current active auto export job. By default it
             * is set to 'Enable'.
             * @return the next definition stage.
             */
            WithCreate withAdminStatus(AutoExportJobAdminStatus adminStatus);
        }

        /**
         * The stage of the AutoExportJob definition allowing to specify autoExportPrefixes.
         */
        interface WithAutoExportPrefixes {
            /**
             * Specifies the autoExportPrefixes property: An array of blob paths/prefixes that get auto exported to the
             * cluster namespace. It has '/' as the default value. Number of maximum allowed paths for now is 1..
             * 
             * @param autoExportPrefixes An array of blob paths/prefixes that get auto exported to the cluster
             * namespace. It has '/' as the default value. Number of maximum allowed paths for now is 1.
             * @return the next definition stage.
             */
            WithCreate withAutoExportPrefixes(List<String> autoExportPrefixes);
        }
    }

    /**
     * Begins update for the AutoExportJob resource.
     * 
     * @return the stage of resource update.
     */
    AutoExportJob.Update update();

    /**
     * The template for AutoExportJob update.
     */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithAdminStatus {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        AutoExportJob apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        AutoExportJob apply(Context context);
    }

    /**
     * The AutoExportJob update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the AutoExportJob update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the AutoExportJob update allowing to specify adminStatus.
         */
        interface WithAdminStatus {
            /**
             * Specifies the adminStatus property: The administrative status of the auto export job. Possible values:
             * 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto export job. By
             * default it is set to 'Enable'..
             * 
             * @param adminStatus The administrative status of the auto export job. Possible values: 'Enable',
             * 'Disable'. Passing in a value of 'Disable' will disable the current active auto export job. By default it
             * is set to 'Enable'.
             * @return the next definition stage.
             */
            Update withAdminStatus(AutoExportJobAdminStatus adminStatus);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    AutoExportJob refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    AutoExportJob refresh(Context context);
}
