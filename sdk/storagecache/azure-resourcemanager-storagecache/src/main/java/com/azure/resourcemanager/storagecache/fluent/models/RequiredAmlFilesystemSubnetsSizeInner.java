// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagecache.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Information about the number of available IP addresses that are required for the AML file system.
 */
@Fluent
public final class RequiredAmlFilesystemSubnetsSizeInner
    implements JsonSerializable<RequiredAmlFilesystemSubnetsSizeInner> {
    /*
     * The number of available IP addresses that are required for the AML file system.
     */
    private Integer filesystemSubnetSize;

    /**
     * Creates an instance of RequiredAmlFilesystemSubnetsSizeInner class.
     */
    public RequiredAmlFilesystemSubnetsSizeInner() {
    }

    /**
     * Get the filesystemSubnetSize property: The number of available IP addresses that are required for the AML file
     * system.
     * 
     * @return the filesystemSubnetSize value.
     */
    public Integer filesystemSubnetSize() {
        return this.filesystemSubnetSize;
    }

    /**
     * Set the filesystemSubnetSize property: The number of available IP addresses that are required for the AML file
     * system.
     * 
     * @param filesystemSubnetSize the filesystemSubnetSize value to set.
     * @return the RequiredAmlFilesystemSubnetsSizeInner object itself.
     */
    public RequiredAmlFilesystemSubnetsSizeInner withFilesystemSubnetSize(Integer filesystemSubnetSize) {
        this.filesystemSubnetSize = filesystemSubnetSize;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("filesystemSubnetSize", this.filesystemSubnetSize);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RequiredAmlFilesystemSubnetsSizeInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RequiredAmlFilesystemSubnetsSizeInner if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the RequiredAmlFilesystemSubnetsSizeInner.
     */
    public static RequiredAmlFilesystemSubnetsSizeInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RequiredAmlFilesystemSubnetsSizeInner deserializedRequiredAmlFilesystemSubnetsSizeInner
                = new RequiredAmlFilesystemSubnetsSizeInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("filesystemSubnetSize".equals(fieldName)) {
                    deserializedRequiredAmlFilesystemSubnetsSizeInner.filesystemSubnetSize
                        = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRequiredAmlFilesystemSubnetsSizeInner;
        });
    }
}
