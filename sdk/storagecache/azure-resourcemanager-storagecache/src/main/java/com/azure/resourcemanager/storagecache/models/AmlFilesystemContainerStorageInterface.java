// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagecache.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;

/** AML file system container storage interface information. */
@Immutable
public final class AmlFilesystemContainerStorageInterface {
    /*
     * Recommended AKS Persistent Volume Claim for the CSI driver, in Base64 encoded YAML
     */
    @JsonProperty(value = "persistentVolumeClaim", access = JsonProperty.Access.WRITE_ONLY)
    private String persistentVolumeClaim;

    /*
     * Recommended AKS Persistent Volume for the CSI driver, in Base64 encoded YAML
     */
    @JsonProperty(value = "persistentVolume", access = JsonProperty.Access.WRITE_ONLY)
    private String persistentVolume;

    /*
     * Recommended AKS Storage Class for the CSI driver, in Base64 encoded YAML
     */
    @JsonProperty(value = "storageClass", access = JsonProperty.Access.WRITE_ONLY)
    private String storageClass;

    /** Creates an instance of AmlFilesystemContainerStorageInterface class. */
    public AmlFilesystemContainerStorageInterface() {
    }

    /**
     * Get the persistentVolumeClaim property: Recommended AKS Persistent Volume Claim for the CSI driver, in Base64
     * encoded YAML.
     *
     * @return the persistentVolumeClaim value.
     */
    public String persistentVolumeClaim() {
        return this.persistentVolumeClaim;
    }

    /**
     * Get the persistentVolume property: Recommended AKS Persistent Volume for the CSI driver, in Base64 encoded YAML.
     *
     * @return the persistentVolume value.
     */
    public String persistentVolume() {
        return this.persistentVolume;
    }

    /**
     * Get the storageClass property: Recommended AKS Storage Class for the CSI driver, in Base64 encoded YAML.
     *
     * @return the storageClass value.
     */
    public String storageClass() {
        return this.storageClass;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
