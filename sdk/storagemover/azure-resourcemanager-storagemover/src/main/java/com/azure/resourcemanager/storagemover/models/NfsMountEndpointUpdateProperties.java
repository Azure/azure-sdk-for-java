// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagemover.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The NfsMountEndpointUpdateProperties model.
 */
@Fluent
public final class NfsMountEndpointUpdateProperties extends EndpointBaseUpdateProperties {
    /*
     * The Endpoint resource type.
     */
    private EndpointType endpointType = EndpointType.NFS_MOUNT;

    /**
     * Creates an instance of NfsMountEndpointUpdateProperties class.
     */
    public NfsMountEndpointUpdateProperties() {
    }

    /**
     * Get the endpointType property: The Endpoint resource type.
     * 
     * @return the endpointType value.
     */
    @Override
    public EndpointType endpointType() {
        return this.endpointType;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NfsMountEndpointUpdateProperties withDescription(String description) {
        super.withDescription(description);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("description", description());
        jsonWriter.writeStringField("endpointType", this.endpointType == null ? null : this.endpointType.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of NfsMountEndpointUpdateProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of NfsMountEndpointUpdateProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the NfsMountEndpointUpdateProperties.
     */
    public static NfsMountEndpointUpdateProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            NfsMountEndpointUpdateProperties deserializedNfsMountEndpointUpdateProperties
                = new NfsMountEndpointUpdateProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("description".equals(fieldName)) {
                    deserializedNfsMountEndpointUpdateProperties.withDescription(reader.getString());
                } else if ("endpointType".equals(fieldName)) {
                    deserializedNfsMountEndpointUpdateProperties.endpointType
                        = EndpointType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedNfsMountEndpointUpdateProperties;
        });
    }
}
