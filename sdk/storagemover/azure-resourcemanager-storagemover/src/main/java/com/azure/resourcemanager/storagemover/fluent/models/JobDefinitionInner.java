// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagemover.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.storagemover.models.CopyMode;
import com.azure.resourcemanager.storagemover.models.JobRunStatus;
import com.azure.resourcemanager.storagemover.models.ProvisioningState;
import java.io.IOException;

/**
 * The Job Definition resource.
 */
@Fluent
public final class JobDefinitionInner extends ProxyResource {
    /*
     * Job definition properties.
     */
    private JobDefinitionProperties innerProperties = new JobDefinitionProperties();

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    private SystemData systemData;

    /*
     * The type of the resource.
     */
    private String type;

    /*
     * The name of the resource.
     */
    private String name;

    /*
     * Fully qualified resource Id for the resource.
     */
    private String id;

    /**
     * Creates an instance of JobDefinitionInner class.
     */
    public JobDefinitionInner() {
    }

    /**
     * Get the innerProperties property: Job definition properties.
     * 
     * @return the innerProperties value.
     */
    private JobDefinitionProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the type property: The type of the resource.
     * 
     * @return the type value.
     */
    @Override
    public String type() {
        return this.type;
    }

    /**
     * Get the name property: The name of the resource.
     * 
     * @return the name value.
     */
    @Override
    public String name() {
        return this.name;
    }

    /**
     * Get the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    @Override
    public String id() {
        return this.id;
    }

    /**
     * Get the description property: A description for the Job Definition.
     * 
     * @return the description value.
     */
    public String description() {
        return this.innerProperties() == null ? null : this.innerProperties().description();
    }

    /**
     * Set the description property: A description for the Job Definition.
     * 
     * @param description the description value to set.
     * @return the JobDefinitionInner object itself.
     */
    public JobDefinitionInner withDescription(String description) {
        if (this.innerProperties() == null) {
            this.innerProperties = new JobDefinitionProperties();
        }
        this.innerProperties().withDescription(description);
        return this;
    }

    /**
     * Get the copyMode property: Strategy to use for copy.
     * 
     * @return the copyMode value.
     */
    public CopyMode copyMode() {
        return this.innerProperties() == null ? null : this.innerProperties().copyMode();
    }

    /**
     * Set the copyMode property: Strategy to use for copy.
     * 
     * @param copyMode the copyMode value to set.
     * @return the JobDefinitionInner object itself.
     */
    public JobDefinitionInner withCopyMode(CopyMode copyMode) {
        if (this.innerProperties() == null) {
            this.innerProperties = new JobDefinitionProperties();
        }
        this.innerProperties().withCopyMode(copyMode);
        return this;
    }

    /**
     * Get the sourceName property: The name of the source Endpoint.
     * 
     * @return the sourceName value.
     */
    public String sourceName() {
        return this.innerProperties() == null ? null : this.innerProperties().sourceName();
    }

    /**
     * Set the sourceName property: The name of the source Endpoint.
     * 
     * @param sourceName the sourceName value to set.
     * @return the JobDefinitionInner object itself.
     */
    public JobDefinitionInner withSourceName(String sourceName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new JobDefinitionProperties();
        }
        this.innerProperties().withSourceName(sourceName);
        return this;
    }

    /**
     * Get the sourceResourceId property: Fully qualified resource ID of the source Endpoint.
     * 
     * @return the sourceResourceId value.
     */
    public String sourceResourceId() {
        return this.innerProperties() == null ? null : this.innerProperties().sourceResourceId();
    }

    /**
     * Get the sourceSubpath property: The subpath to use when reading from the source Endpoint.
     * 
     * @return the sourceSubpath value.
     */
    public String sourceSubpath() {
        return this.innerProperties() == null ? null : this.innerProperties().sourceSubpath();
    }

    /**
     * Set the sourceSubpath property: The subpath to use when reading from the source Endpoint.
     * 
     * @param sourceSubpath the sourceSubpath value to set.
     * @return the JobDefinitionInner object itself.
     */
    public JobDefinitionInner withSourceSubpath(String sourceSubpath) {
        if (this.innerProperties() == null) {
            this.innerProperties = new JobDefinitionProperties();
        }
        this.innerProperties().withSourceSubpath(sourceSubpath);
        return this;
    }

    /**
     * Get the targetName property: The name of the target Endpoint.
     * 
     * @return the targetName value.
     */
    public String targetName() {
        return this.innerProperties() == null ? null : this.innerProperties().targetName();
    }

    /**
     * Set the targetName property: The name of the target Endpoint.
     * 
     * @param targetName the targetName value to set.
     * @return the JobDefinitionInner object itself.
     */
    public JobDefinitionInner withTargetName(String targetName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new JobDefinitionProperties();
        }
        this.innerProperties().withTargetName(targetName);
        return this;
    }

    /**
     * Get the targetResourceId property: Fully qualified resource ID of the target Endpoint.
     * 
     * @return the targetResourceId value.
     */
    public String targetResourceId() {
        return this.innerProperties() == null ? null : this.innerProperties().targetResourceId();
    }

    /**
     * Get the targetSubpath property: The subpath to use when writing to the target Endpoint.
     * 
     * @return the targetSubpath value.
     */
    public String targetSubpath() {
        return this.innerProperties() == null ? null : this.innerProperties().targetSubpath();
    }

    /**
     * Set the targetSubpath property: The subpath to use when writing to the target Endpoint.
     * 
     * @param targetSubpath the targetSubpath value to set.
     * @return the JobDefinitionInner object itself.
     */
    public JobDefinitionInner withTargetSubpath(String targetSubpath) {
        if (this.innerProperties() == null) {
            this.innerProperties = new JobDefinitionProperties();
        }
        this.innerProperties().withTargetSubpath(targetSubpath);
        return this;
    }

    /**
     * Get the latestJobRunName property: The name of the Job Run in a non-terminal state, if exists.
     * 
     * @return the latestJobRunName value.
     */
    public String latestJobRunName() {
        return this.innerProperties() == null ? null : this.innerProperties().latestJobRunName();
    }

    /**
     * Get the latestJobRunResourceId property: The fully qualified resource ID of the Job Run in a non-terminal state,
     * if exists.
     * 
     * @return the latestJobRunResourceId value.
     */
    public String latestJobRunResourceId() {
        return this.innerProperties() == null ? null : this.innerProperties().latestJobRunResourceId();
    }

    /**
     * Get the latestJobRunStatus property: The current status of the Job Run in a non-terminal state, if exists.
     * 
     * @return the latestJobRunStatus value.
     */
    public JobRunStatus latestJobRunStatus() {
        return this.innerProperties() == null ? null : this.innerProperties().latestJobRunStatus();
    }

    /**
     * Get the agentName property: Name of the Agent to assign for new Job Runs of this Job Definition.
     * 
     * @return the agentName value.
     */
    public String agentName() {
        return this.innerProperties() == null ? null : this.innerProperties().agentName();
    }

    /**
     * Set the agentName property: Name of the Agent to assign for new Job Runs of this Job Definition.
     * 
     * @param agentName the agentName value to set.
     * @return the JobDefinitionInner object itself.
     */
    public JobDefinitionInner withAgentName(String agentName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new JobDefinitionProperties();
        }
        this.innerProperties().withAgentName(agentName);
        return this;
    }

    /**
     * Get the agentResourceId property: Fully qualified resource id of the Agent to assign for new Job Runs of this Job
     * Definition.
     * 
     * @return the agentResourceId value.
     */
    public String agentResourceId() {
        return this.innerProperties() == null ? null : this.innerProperties().agentResourceId();
    }

    /**
     * Get the provisioningState property: The provisioning state of this resource.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property innerProperties in model JobDefinitionInner"));
        } else {
            innerProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(JobDefinitionInner.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of JobDefinitionInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of JobDefinitionInner if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the JobDefinitionInner.
     */
    public static JobDefinitionInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            JobDefinitionInner deserializedJobDefinitionInner = new JobDefinitionInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedJobDefinitionInner.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedJobDefinitionInner.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedJobDefinitionInner.type = reader.getString();
                } else if ("properties".equals(fieldName)) {
                    deserializedJobDefinitionInner.innerProperties = JobDefinitionProperties.fromJson(reader);
                } else if ("systemData".equals(fieldName)) {
                    deserializedJobDefinitionInner.systemData = SystemData.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedJobDefinitionInner;
        });
    }
}
