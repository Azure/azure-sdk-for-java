// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagemover.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The properties of SMB share endpoint to update.
 */
@Fluent
public final class SmbMountEndpointUpdateProperties extends EndpointBaseUpdateProperties {
    /*
     * The Endpoint resource type.
     */
    private EndpointType endpointType = EndpointType.SMB_MOUNT;

    /*
     * The Azure Key Vault secret URIs which store the required credentials to access the SMB share.
     */
    private AzureKeyVaultSmbCredentials credentials;

    /**
     * Creates an instance of SmbMountEndpointUpdateProperties class.
     */
    public SmbMountEndpointUpdateProperties() {
    }

    /**
     * Get the endpointType property: The Endpoint resource type.
     * 
     * @return the endpointType value.
     */
    @Override
    public EndpointType endpointType() {
        return this.endpointType;
    }

    /**
     * Get the credentials property: The Azure Key Vault secret URIs which store the required credentials to access the
     * SMB share.
     * 
     * @return the credentials value.
     */
    public AzureKeyVaultSmbCredentials credentials() {
        return this.credentials;
    }

    /**
     * Set the credentials property: The Azure Key Vault secret URIs which store the required credentials to access the
     * SMB share.
     * 
     * @param credentials the credentials value to set.
     * @return the SmbMountEndpointUpdateProperties object itself.
     */
    public SmbMountEndpointUpdateProperties withCredentials(AzureKeyVaultSmbCredentials credentials) {
        this.credentials = credentials;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SmbMountEndpointUpdateProperties withDescription(String description) {
        super.withDescription(description);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (credentials() != null) {
            credentials().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("description", description());
        jsonWriter.writeStringField("endpointType", this.endpointType == null ? null : this.endpointType.toString());
        jsonWriter.writeJsonField("credentials", this.credentials);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SmbMountEndpointUpdateProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SmbMountEndpointUpdateProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SmbMountEndpointUpdateProperties.
     */
    public static SmbMountEndpointUpdateProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SmbMountEndpointUpdateProperties deserializedSmbMountEndpointUpdateProperties
                = new SmbMountEndpointUpdateProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("description".equals(fieldName)) {
                    deserializedSmbMountEndpointUpdateProperties.withDescription(reader.getString());
                } else if ("endpointType".equals(fieldName)) {
                    deserializedSmbMountEndpointUpdateProperties.endpointType
                        = EndpointType.fromString(reader.getString());
                } else if ("credentials".equals(fieldName)) {
                    deserializedSmbMountEndpointUpdateProperties.credentials
                        = AzureKeyVaultSmbCredentials.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSmbMountEndpointUpdateProperties;
        });
    }
}
