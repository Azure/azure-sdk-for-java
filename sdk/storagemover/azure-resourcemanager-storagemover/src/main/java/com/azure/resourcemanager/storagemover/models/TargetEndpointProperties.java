// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.storagemover.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The properties of the cloud target endpoint to migrate.
 */
@Immutable
public final class TargetEndpointProperties implements JsonSerializable<TargetEndpointProperties> {
    /*
     * The name of the cloud target endpoint to migrate.
     */
    private String name;

    /*
     * The fully qualified ARM resource ID of the cloud target endpoint to migrate.
     */
    private String targetEndpointResourceId;

    /*
     * The fully qualified ARM resource ID of the Azure Storage account.
     */
    private String azureStorageAccountResourceId;

    /*
     * The name of the Azure Storage blob container.
     */
    private String azureStorageBlobContainerName;

    /**
     * Creates an instance of TargetEndpointProperties class.
     */
    private TargetEndpointProperties() {
    }

    /**
     * Get the name property: The name of the cloud target endpoint to migrate.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the targetEndpointResourceId property: The fully qualified ARM resource ID of the cloud target endpoint to
     * migrate.
     * 
     * @return the targetEndpointResourceId value.
     */
    public String targetEndpointResourceId() {
        return this.targetEndpointResourceId;
    }

    /**
     * Get the azureStorageAccountResourceId property: The fully qualified ARM resource ID of the Azure Storage account.
     * 
     * @return the azureStorageAccountResourceId value.
     */
    public String azureStorageAccountResourceId() {
        return this.azureStorageAccountResourceId;
    }

    /**
     * Get the azureStorageBlobContainerName property: The name of the Azure Storage blob container.
     * 
     * @return the azureStorageBlobContainerName value.
     */
    public String azureStorageBlobContainerName() {
        return this.azureStorageBlobContainerName;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeStringField("targetEndpointResourceId", this.targetEndpointResourceId);
        jsonWriter.writeStringField("azureStorageAccountResourceId", this.azureStorageAccountResourceId);
        jsonWriter.writeStringField("azureStorageBlobContainerName", this.azureStorageBlobContainerName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TargetEndpointProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TargetEndpointProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the TargetEndpointProperties.
     */
    public static TargetEndpointProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            TargetEndpointProperties deserializedTargetEndpointProperties = new TargetEndpointProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedTargetEndpointProperties.name = reader.getString();
                } else if ("targetEndpointResourceId".equals(fieldName)) {
                    deserializedTargetEndpointProperties.targetEndpointResourceId = reader.getString();
                } else if ("azureStorageAccountResourceId".equals(fieldName)) {
                    deserializedTargetEndpointProperties.azureStorageAccountResourceId = reader.getString();
                } else if ("azureStorageBlobContainerName".equals(fieldName)) {
                    deserializedTargetEndpointProperties.azureStorageBlobContainerName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedTargetEndpointProperties;
        });
    }
}
