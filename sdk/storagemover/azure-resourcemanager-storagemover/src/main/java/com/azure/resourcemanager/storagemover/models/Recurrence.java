// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagemover.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The schedule recurrence.
 */
@Fluent
public class Recurrence {
    /*
     * The start time of the schedule recurrence. Full hour and 30-minute intervals are supported.
     */
    @JsonProperty(value = "startTime", required = true)
    private Time startTime;

    /*
     * The end time of the schedule recurrence. Full hour and 30-minute intervals are supported.
     */
    @JsonProperty(value = "endTime", required = true)
    private Time endTime;

    /**
     * Creates an instance of Recurrence class.
     */
    public Recurrence() {
    }

    /**
     * Get the startTime property: The start time of the schedule recurrence. Full hour and 30-minute intervals are
     * supported.
     * 
     * @return the startTime value.
     */
    public Time startTime() {
        return this.startTime;
    }

    /**
     * Set the startTime property: The start time of the schedule recurrence. Full hour and 30-minute intervals are
     * supported.
     * 
     * @param startTime the startTime value to set.
     * @return the Recurrence object itself.
     */
    public Recurrence withStartTime(Time startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * Get the endTime property: The end time of the schedule recurrence. Full hour and 30-minute intervals are
     * supported.
     * 
     * @return the endTime value.
     */
    public Time endTime() {
        return this.endTime;
    }

    /**
     * Set the endTime property: The end time of the schedule recurrence. Full hour and 30-minute intervals are
     * supported.
     * 
     * @param endTime the endTime value to set.
     * @return the Recurrence object itself.
     */
    public Recurrence withEndTime(Time endTime) {
        this.endTime = endTime;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (startTime() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property startTime in model Recurrence"));
        } else {
            startTime().validate();
        }
        if (endTime() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property endTime in model Recurrence"));
        } else {
            endTime().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(Recurrence.class);
}
