// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagemover.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.storagemover.models.CopyMode;
import java.io.IOException;

/**
 * Job definition properties.
 */
@Fluent
public final class JobDefinitionUpdateProperties implements JsonSerializable<JobDefinitionUpdateProperties> {
    /*
     * A description for the Job Definition.
     */
    private String description;

    /*
     * Strategy to use for copy.
     */
    private CopyMode copyMode;

    /*
     * Name of the Agent to assign for new Job Runs of this Job Definition.
     */
    private String agentName;

    /**
     * Creates an instance of JobDefinitionUpdateProperties class.
     */
    public JobDefinitionUpdateProperties() {
    }

    /**
     * Get the description property: A description for the Job Definition.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: A description for the Job Definition.
     * 
     * @param description the description value to set.
     * @return the JobDefinitionUpdateProperties object itself.
     */
    public JobDefinitionUpdateProperties withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the copyMode property: Strategy to use for copy.
     * 
     * @return the copyMode value.
     */
    public CopyMode copyMode() {
        return this.copyMode;
    }

    /**
     * Set the copyMode property: Strategy to use for copy.
     * 
     * @param copyMode the copyMode value to set.
     * @return the JobDefinitionUpdateProperties object itself.
     */
    public JobDefinitionUpdateProperties withCopyMode(CopyMode copyMode) {
        this.copyMode = copyMode;
        return this;
    }

    /**
     * Get the agentName property: Name of the Agent to assign for new Job Runs of this Job Definition.
     * 
     * @return the agentName value.
     */
    public String agentName() {
        return this.agentName;
    }

    /**
     * Set the agentName property: Name of the Agent to assign for new Job Runs of this Job Definition.
     * 
     * @param agentName the agentName value to set.
     * @return the JobDefinitionUpdateProperties object itself.
     */
    public JobDefinitionUpdateProperties withAgentName(String agentName) {
        this.agentName = agentName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("description", this.description);
        jsonWriter.writeStringField("copyMode", this.copyMode == null ? null : this.copyMode.toString());
        jsonWriter.writeStringField("agentName", this.agentName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of JobDefinitionUpdateProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of JobDefinitionUpdateProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the JobDefinitionUpdateProperties.
     */
    public static JobDefinitionUpdateProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            JobDefinitionUpdateProperties deserializedJobDefinitionUpdateProperties
                = new JobDefinitionUpdateProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("description".equals(fieldName)) {
                    deserializedJobDefinitionUpdateProperties.description = reader.getString();
                } else if ("copyMode".equals(fieldName)) {
                    deserializedJobDefinitionUpdateProperties.copyMode = CopyMode.fromString(reader.getString());
                } else if ("agentName".equals(fieldName)) {
                    deserializedJobDefinitionUpdateProperties.agentName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedJobDefinitionUpdateProperties;
        });
    }
}
