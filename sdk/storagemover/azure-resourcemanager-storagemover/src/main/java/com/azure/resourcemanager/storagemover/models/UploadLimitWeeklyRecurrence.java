// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagemover.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The weekly recurrence of the WAN-link upload limit schedule. The start time must be earlier in the day than the end
 * time. The recurrence must not span across multiple days.
 */
@Fluent
public final class UploadLimitWeeklyRecurrence extends WeeklyRecurrence {
    /*
     * The WAN-link upload bandwidth (maximum data transfer rate) in megabits per second. Value of 0 indicates no
     * throughput is allowed and any running migration job is effectively paused for the duration of this recurrence.
     * Only data plane operations are governed by this limit. Control plane operations ensure seamless functionality.
     * The agent may exceed this limit with control messages, if necessary.
     */
    @JsonProperty(value = "limitInMbps", required = true)
    private int limitInMbps;

    /**
     * Creates an instance of UploadLimitWeeklyRecurrence class.
     */
    public UploadLimitWeeklyRecurrence() {
    }

    /**
     * Get the limitInMbps property: The WAN-link upload bandwidth (maximum data transfer rate) in megabits per second.
     * Value of 0 indicates no throughput is allowed and any running migration job is effectively paused for the
     * duration of this recurrence. Only data plane operations are governed by this limit. Control plane operations
     * ensure seamless functionality. The agent may exceed this limit with control messages, if necessary.
     * 
     * @return the limitInMbps value.
     */
    public int limitInMbps() {
        return this.limitInMbps;
    }

    /**
     * Set the limitInMbps property: The WAN-link upload bandwidth (maximum data transfer rate) in megabits per second.
     * Value of 0 indicates no throughput is allowed and any running migration job is effectively paused for the
     * duration of this recurrence. Only data plane operations are governed by this limit. Control plane operations
     * ensure seamless functionality. The agent may exceed this limit with control messages, if necessary.
     * 
     * @param limitInMbps the limitInMbps value to set.
     * @return the UploadLimitWeeklyRecurrence object itself.
     */
    public UploadLimitWeeklyRecurrence withLimitInMbps(int limitInMbps) {
        this.limitInMbps = limitInMbps;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UploadLimitWeeklyRecurrence withDays(List<DayOfWeek> days) {
        super.withDays(days);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UploadLimitWeeklyRecurrence withStartTime(Time startTime) {
        super.withStartTime(startTime);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UploadLimitWeeklyRecurrence withEndTime(Time endTime) {
        super.withEndTime(endTime);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
