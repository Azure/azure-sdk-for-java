// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagemover.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** The NfsMountEndpointProperties model. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "endpointType")
@JsonTypeName("NfsMount")
@Fluent
public final class NfsMountEndpointProperties extends EndpointBaseProperties {
    /*
     * The host name or IP address of the server exporting the file system.
     */
    @JsonProperty(value = "host", required = true)
    private String host;

    /*
     * The NFS protocol version.
     */
    @JsonProperty(value = "nfsVersion")
    private NfsVersion nfsVersion;

    /*
     * The directory being exported from the server.
     */
    @JsonProperty(value = "remoteExport", required = true)
    private String remoteExport;

    /**
     * Get the host property: The host name or IP address of the server exporting the file system.
     *
     * @return the host value.
     */
    public String host() {
        return this.host;
    }

    /**
     * Set the host property: The host name or IP address of the server exporting the file system.
     *
     * @param host the host value to set.
     * @return the NfsMountEndpointProperties object itself.
     */
    public NfsMountEndpointProperties withHost(String host) {
        this.host = host;
        return this;
    }

    /**
     * Get the nfsVersion property: The NFS protocol version.
     *
     * @return the nfsVersion value.
     */
    public NfsVersion nfsVersion() {
        return this.nfsVersion;
    }

    /**
     * Set the nfsVersion property: The NFS protocol version.
     *
     * @param nfsVersion the nfsVersion value to set.
     * @return the NfsMountEndpointProperties object itself.
     */
    public NfsMountEndpointProperties withNfsVersion(NfsVersion nfsVersion) {
        this.nfsVersion = nfsVersion;
        return this;
    }

    /**
     * Get the remoteExport property: The directory being exported from the server.
     *
     * @return the remoteExport value.
     */
    public String remoteExport() {
        return this.remoteExport;
    }

    /**
     * Set the remoteExport property: The directory being exported from the server.
     *
     * @param remoteExport the remoteExport value to set.
     * @return the NfsMountEndpointProperties object itself.
     */
    public NfsMountEndpointProperties withRemoteExport(String remoteExport) {
        this.remoteExport = remoteExport;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NfsMountEndpointProperties withDescription(String description) {
        super.withDescription(description);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (host() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property host in model NfsMountEndpointProperties"));
        }
        if (remoteExport() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property remoteExport in model NfsMountEndpointProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(NfsMountEndpointProperties.class);
}
