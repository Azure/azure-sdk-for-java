// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.storagemover.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.storagemover.fluent.models.EndpointInner;
import com.azure.resourcemanager.storagemover.models.EndpointBaseProperties;
import com.azure.resourcemanager.storagemover.models.ManagedServiceIdentity;
import com.azure.resourcemanager.storagemover.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.storagemover.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class EndpointInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EndpointInner model = BinaryData.fromString(
            "{\"properties\":{\"endpointType\":\"EndpointBaseProperties\",\"description\":\"b\",\"provisioningState\":\"Succeeded\"},\"identity\":{\"principalId\":\"tduqktapspwgcuer\",\"tenantId\":\"mkdo\",\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{\"ppbhtqqrolfp\":{\"principalId\":\"bmdg\",\"clientId\":\"jfddgmbmbe\"},\"jgzjaoyfhrtx\":{\"principalId\":\"s\",\"clientId\":\"gbquxigj\"}}},\"id\":\"n\",\"name\":\"rkujy\",\"type\":\"vlejuvfqa\"}")
            .toObject(EndpointInner.class);
        Assertions.assertEquals("b", model.properties().description());
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EndpointInner model
            = new EndpointInner().withProperties(new EndpointBaseProperties().withDescription("b"))
                .withIdentity(new ManagedServiceIdentity()
                    .withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED)
                    .withUserAssignedIdentities(
                        mapOf("ppbhtqqrolfp", new UserAssignedIdentity(), "jgzjaoyfhrtx", new UserAssignedIdentity())));
        model = BinaryData.fromObject(model).toObject(EndpointInner.class);
        Assertions.assertEquals("b", model.properties().description());
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
