// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagemover.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.storagemover.fluent.models.JobDefinitionInner;
import com.azure.resourcemanager.storagemover.models.CopyMode;
import org.junit.jupiter.api.Assertions;

public final class JobDefinitionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        JobDefinitionInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"description\":\"fbowskanyk\",\"copyMode\":\"Mirror\",\"sourceName\":\"lcuiywgqywgndr\",\"sourceResourceId\":\"nhzgpphrcgyn\",\"sourceSubpath\":\"cpecfvmmcoofs\",\"targetName\":\"lzevgbmqjqab\",\"targetResourceId\":\"pmivkwlzu\",\"targetSubpath\":\"c\",\"latestJobRunName\":\"nfnbacfionlebxe\",\"latestJobRunResourceId\":\"gtzxdpn\",\"latestJobRunStatus\":\"Started\",\"agentName\":\"wxrjfeallnwsub\",\"agentResourceId\":\"njampm\",\"provisioningState\":\"Succeeded\"},\"id\":\"scxaq\",\"name\":\"ooch\",\"type\":\"bonqvpkvlrxnjeas\"}")
                .toObject(JobDefinitionInner.class);
        Assertions.assertEquals("fbowskanyk", model.description());
        Assertions.assertEquals(CopyMode.MIRROR, model.copyMode());
        Assertions.assertEquals("lcuiywgqywgndr", model.sourceName());
        Assertions.assertEquals("cpecfvmmcoofs", model.sourceSubpath());
        Assertions.assertEquals("lzevgbmqjqab", model.targetName());
        Assertions.assertEquals("c", model.targetSubpath());
        Assertions.assertEquals("wxrjfeallnwsub", model.agentName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        JobDefinitionInner model =
            new JobDefinitionInner()
                .withDescription("fbowskanyk")
                .withCopyMode(CopyMode.MIRROR)
                .withSourceName("lcuiywgqywgndr")
                .withSourceSubpath("cpecfvmmcoofs")
                .withTargetName("lzevgbmqjqab")
                .withTargetSubpath("c")
                .withAgentName("wxrjfeallnwsub");
        model = BinaryData.fromObject(model).toObject(JobDefinitionInner.class);
        Assertions.assertEquals("fbowskanyk", model.description());
        Assertions.assertEquals(CopyMode.MIRROR, model.copyMode());
        Assertions.assertEquals("lcuiywgqywgndr", model.sourceName());
        Assertions.assertEquals("cpecfvmmcoofs", model.sourceSubpath());
        Assertions.assertEquals("lzevgbmqjqab", model.targetName());
        Assertions.assertEquals("c", model.targetSubpath());
        Assertions.assertEquals("wxrjfeallnwsub", model.agentName());
    }
}
