// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagemover.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.storagemover.fluent.models.JobDefinitionInner;
import com.azure.resourcemanager.storagemover.models.CopyMode;
import org.junit.jupiter.api.Assertions;

public final class JobDefinitionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        JobDefinitionInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"description\":\"dzxibqeojnxqbzvd\",\"copyMode\":\"Mirror\",\"sourceName\":\"t\",\"sourceResourceId\":\"deicbtwnpzao\",\"sourceSubpath\":\"uhrhcffcyddgl\",\"targetName\":\"jthjqkwpyei\",\"targetResourceId\":\"mqc\",\"targetSubpath\":\"q\",\"latestJobRunName\":\"khixuigdtopbo\",\"latestJobRunResourceId\":\"og\",\"latestJobRunStatus\":\"Queued\",\"agentName\":\"u\",\"agentResourceId\":\"a\",\"provisioningState\":\"Succeeded\"},\"id\":\"z\",\"name\":\"yvvtpgvdfgio\",\"type\":\"kftutqxlngxlefg\"}")
                .toObject(JobDefinitionInner.class);
        Assertions.assertEquals("dzxibqeojnxqbzvd", model.description());
        Assertions.assertEquals(CopyMode.MIRROR, model.copyMode());
        Assertions.assertEquals("t", model.sourceName());
        Assertions.assertEquals("uhrhcffcyddgl", model.sourceSubpath());
        Assertions.assertEquals("jthjqkwpyei", model.targetName());
        Assertions.assertEquals("q", model.targetSubpath());
        Assertions.assertEquals("u", model.agentName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        JobDefinitionInner model =
            new JobDefinitionInner()
                .withDescription("dzxibqeojnxqbzvd")
                .withCopyMode(CopyMode.MIRROR)
                .withSourceName("t")
                .withSourceSubpath("uhrhcffcyddgl")
                .withTargetName("jthjqkwpyei")
                .withTargetSubpath("q")
                .withAgentName("u");
        model = BinaryData.fromObject(model).toObject(JobDefinitionInner.class);
        Assertions.assertEquals("dzxibqeojnxqbzvd", model.description());
        Assertions.assertEquals(CopyMode.MIRROR, model.copyMode());
        Assertions.assertEquals("t", model.sourceName());
        Assertions.assertEquals("uhrhcffcyddgl", model.sourceSubpath());
        Assertions.assertEquals("jthjqkwpyei", model.targetName());
        Assertions.assertEquals("q", model.targetSubpath());
        Assertions.assertEquals("u", model.agentName());
    }
}
