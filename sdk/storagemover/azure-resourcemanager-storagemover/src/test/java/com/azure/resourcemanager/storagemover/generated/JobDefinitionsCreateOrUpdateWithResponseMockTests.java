// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.storagemover.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.storagemover.StorageMoverManager;
import com.azure.resourcemanager.storagemover.models.CopyMode;
import com.azure.resourcemanager.storagemover.models.JobDefinition;
import com.azure.resourcemanager.storagemover.models.JobDefinitionPropertiesSourceTargetMap;
import com.azure.resourcemanager.storagemover.models.JobType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class JobDefinitionsCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"description\":\"uuximerq\",\"jobType\":\"OnPremToCloud\",\"copyMode\":\"Mirror\",\"sourceName\":\"yznkby\",\"sourceResourceId\":\"t\",\"sourceSubpath\":\"fhpagmhrskdsnf\",\"targetName\":\"sd\",\"targetResourceId\":\"kgtdlmkkze\",\"targetSubpath\":\"l\",\"latestJobRunName\":\"wpusdsttwvogv\",\"latestJobRunResourceId\":\"ejdcngqqmoakuf\",\"latestJobRunStatus\":\"Succeeded\",\"agentName\":\"rwr\",\"agentResourceId\":\"rtwaenuuzko\",\"sourceTargetMap\":{\"value\":[{\"sourceEndpoint\":{},\"targetEndpoint\":{}},{\"sourceEndpoint\":{},\"targetEndpoint\":{}},{\"sourceEndpoint\":{},\"targetEndpoint\":{}}]},\"provisioningState\":\"Canceled\"},\"id\":\"dwoyuhhziuiefoz\",\"name\":\"hdmsmlmzqhoftrm\",\"type\":\"equi\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        StorageMoverManager manager = StorageMoverManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        JobDefinition response = manager.jobDefinitions()
            .define("btndo")
            .withExistingProject("xwabmqoe", "kif", "vtpuqujmqlgk")
            .withCopyMode(CopyMode.ADDITIVE)
            .withSourceName("ntuji")
            .withTargetName("zkoj")
            .withDescription("n")
            .withJobType(JobType.ON_PREM_TO_CLOUD)
            .withSourceSubpath("wwa")
            .withTargetSubpath("foqouicybx")
            .withAgentName("idoamciodhkha")
            .withSourceTargetMap(new JobDefinitionPropertiesSourceTargetMap())
            .create();

        Assertions.assertEquals("uuximerq", response.description());
        Assertions.assertEquals(JobType.ON_PREM_TO_CLOUD, response.jobType());
        Assertions.assertEquals(CopyMode.MIRROR, response.copyMode());
        Assertions.assertEquals("yznkby", response.sourceName());
        Assertions.assertEquals("fhpagmhrskdsnf", response.sourceSubpath());
        Assertions.assertEquals("sd", response.targetName());
        Assertions.assertEquals("l", response.targetSubpath());
        Assertions.assertEquals("rwr", response.agentName());
    }
}
