// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagemover.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.storagemover.fluent.models.JobDefinitionProperties;
import com.azure.resourcemanager.storagemover.models.CopyMode;
import org.junit.jupiter.api.Assertions;

public final class JobDefinitionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        JobDefinitionProperties model = BinaryData.fromString(
            "{\"description\":\"e\",\"copyMode\":\"Additive\",\"sourceName\":\"noae\",\"sourceResourceId\":\"fhyhltrpmopjmcma\",\"sourceSubpath\":\"okth\",\"targetName\":\"uiuaodsfcpkvxodp\",\"targetResourceId\":\"zmyzydagf\",\"targetSubpath\":\"xbezyiuokktwh\",\"latestJobRunName\":\"xw\",\"latestJobRunResourceId\":\"wqsmbsur\",\"latestJobRunStatus\":\"Started\",\"agentName\":\"o\",\"agentResourceId\":\"ocfs\",\"provisioningState\":\"Succeeded\"}")
            .toObject(JobDefinitionProperties.class);
        Assertions.assertEquals("e", model.description());
        Assertions.assertEquals(CopyMode.ADDITIVE, model.copyMode());
        Assertions.assertEquals("noae", model.sourceName());
        Assertions.assertEquals("okth", model.sourceSubpath());
        Assertions.assertEquals("uiuaodsfcpkvxodp", model.targetName());
        Assertions.assertEquals("xbezyiuokktwh", model.targetSubpath());
        Assertions.assertEquals("o", model.agentName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        JobDefinitionProperties model = new JobDefinitionProperties().withDescription("e")
            .withCopyMode(CopyMode.ADDITIVE)
            .withSourceName("noae")
            .withSourceSubpath("okth")
            .withTargetName("uiuaodsfcpkvxodp")
            .withTargetSubpath("xbezyiuokktwh")
            .withAgentName("o");
        model = BinaryData.fromObject(model).toObject(JobDefinitionProperties.class);
        Assertions.assertEquals("e", model.description());
        Assertions.assertEquals(CopyMode.ADDITIVE, model.copyMode());
        Assertions.assertEquals("noae", model.sourceName());
        Assertions.assertEquals("okth", model.sourceSubpath());
        Assertions.assertEquals("uiuaodsfcpkvxodp", model.targetName());
        Assertions.assertEquals("xbezyiuokktwh", model.targetSubpath());
        Assertions.assertEquals("o", model.agentName());
    }
}
