// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagemover.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.storagemover.fluent.models.JobDefinitionProperties;
import com.azure.resourcemanager.storagemover.models.CopyMode;
import org.junit.jupiter.api.Assertions;

public final class JobDefinitionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        JobDefinitionProperties model =
            BinaryData
                .fromString(
                    "{\"description\":\"nxkrx\",\"copyMode\":\"Additive\",\"sourceName\":\"mi\",\"sourceResourceId\":\"thz\",\"sourceSubpath\":\"qdrabhjybigehoqf\",\"targetName\":\"owskanyktz\",\"targetResourceId\":\"u\",\"targetSubpath\":\"wgqyw\",\"latestJobRunName\":\"drvyn\",\"latestJobRunResourceId\":\"gpphrcgyn\",\"latestJobRunStatus\":\"Failed\",\"agentName\":\"ecfvmm\",\"agentResourceId\":\"ofsx\",\"provisioningState\":\"Succeeded\"}")
                .toObject(JobDefinitionProperties.class);
        Assertions.assertEquals("nxkrx", model.description());
        Assertions.assertEquals(CopyMode.ADDITIVE, model.copyMode());
        Assertions.assertEquals("mi", model.sourceName());
        Assertions.assertEquals("qdrabhjybigehoqf", model.sourceSubpath());
        Assertions.assertEquals("owskanyktz", model.targetName());
        Assertions.assertEquals("wgqyw", model.targetSubpath());
        Assertions.assertEquals("ecfvmm", model.agentName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        JobDefinitionProperties model =
            new JobDefinitionProperties()
                .withDescription("nxkrx")
                .withCopyMode(CopyMode.ADDITIVE)
                .withSourceName("mi")
                .withSourceSubpath("qdrabhjybigehoqf")
                .withTargetName("owskanyktz")
                .withTargetSubpath("wgqyw")
                .withAgentName("ecfvmm");
        model = BinaryData.fromObject(model).toObject(JobDefinitionProperties.class);
        Assertions.assertEquals("nxkrx", model.description());
        Assertions.assertEquals(CopyMode.ADDITIVE, model.copyMode());
        Assertions.assertEquals("mi", model.sourceName());
        Assertions.assertEquals("qdrabhjybigehoqf", model.sourceSubpath());
        Assertions.assertEquals("owskanyktz", model.targetName());
        Assertions.assertEquals("wgqyw", model.targetSubpath());
        Assertions.assertEquals("ecfvmm", model.agentName());
    }
}
