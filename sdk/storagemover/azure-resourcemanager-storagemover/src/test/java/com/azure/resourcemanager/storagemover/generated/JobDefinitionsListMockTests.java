// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.storagemover.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.storagemover.StorageMoverManager;
import com.azure.resourcemanager.storagemover.models.CopyMode;
import com.azure.resourcemanager.storagemover.models.JobDefinition;
import com.azure.resourcemanager.storagemover.models.JobType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class JobDefinitionsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"description\":\"fltkacjv\",\"jobType\":\"OnPremToCloud\",\"copyMode\":\"Mirror\",\"sourceName\":\"lfoakg\",\"sourceResourceId\":\"fpagaowpulp\",\"sourceSubpath\":\"lyls\",\"targetName\":\"xkqjnsjervt\",\"targetResourceId\":\"gxsds\",\"targetSubpath\":\"e\",\"latestJobRunName\":\"sbzkf\",\"latestJobRunResourceId\":\"eyvpnqicvinvkj\",\"latestJobRunStatus\":\"Succeeded\",\"agentName\":\"rbuukzclewyhmlwp\",\"agentResourceId\":\"tzpofncckwyfzq\",\"sourceTargetMap\":{\"value\":[{\"sourceEndpoint\":{},\"targetEndpoint\":{}}]},\"provisioningState\":\"Deleting\"},\"id\":\"qa\",\"name\":\"zfeqztppri\",\"type\":\"lxorjaltolmncws\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        StorageMoverManager manager = StorageMoverManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<JobDefinition> response
            = manager.jobDefinitions().list("emmsbvdkc", "odtji", "fw", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("fltkacjv", response.iterator().next().description());
        Assertions.assertEquals(JobType.ON_PREM_TO_CLOUD, response.iterator().next().jobType());
        Assertions.assertEquals(CopyMode.MIRROR, response.iterator().next().copyMode());
        Assertions.assertEquals("lfoakg", response.iterator().next().sourceName());
        Assertions.assertEquals("lyls", response.iterator().next().sourceSubpath());
        Assertions.assertEquals("xkqjnsjervt", response.iterator().next().targetName());
        Assertions.assertEquals("e", response.iterator().next().targetSubpath());
        Assertions.assertEquals("rbuukzclewyhmlwp", response.iterator().next().agentName());
    }
}
