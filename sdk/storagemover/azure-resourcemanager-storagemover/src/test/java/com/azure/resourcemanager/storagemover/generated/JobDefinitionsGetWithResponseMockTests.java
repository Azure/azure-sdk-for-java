// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.storagemover.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.storagemover.StorageMoverManager;
import com.azure.resourcemanager.storagemover.models.CopyMode;
import com.azure.resourcemanager.storagemover.models.JobDefinition;
import com.azure.resourcemanager.storagemover.models.JobType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class JobDefinitionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"description\":\"gymare\",\"jobType\":\"OnPremToCloud\",\"copyMode\":\"Mirror\",\"sourceName\":\"xqugjhkycubedd\",\"sourceResourceId\":\"sofwqmzqalkrmnji\",\"sourceSubpath\":\"xacqqudfnbyx\",\"targetName\":\"aaabjyvayff\",\"targetResourceId\":\"rzrtuzqogsex\",\"targetSubpath\":\"vfdnwnwmewzsyyce\",\"latestJobRunName\":\"soibjudpfrx\",\"latestJobRunResourceId\":\"thzvaytdwkqbrqu\",\"latestJobRunStatus\":\"CancelRequested\",\"agentName\":\"h\",\"agentResourceId\":\"iilivpdtiirqtd\",\"sourceTargetMap\":{\"value\":[{\"sourceEndpoint\":{},\"targetEndpoint\":{}},{\"sourceEndpoint\":{},\"targetEndpoint\":{}},{\"sourceEndpoint\":{},\"targetEndpoint\":{}},{\"sourceEndpoint\":{},\"targetEndpoint\":{}}]},\"provisioningState\":\"Succeeded\"},\"id\":\"zfgs\",\"name\":\"uyfxrxxleptramxj\",\"type\":\"zwl\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        StorageMoverManager manager = StorageMoverManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        JobDefinition response = manager.jobDefinitions()
            .getWithResponse("wdmjsjqbjhhyx", "rw", "yc", "duhpk", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("gymare", response.description());
        Assertions.assertEquals(JobType.ON_PREM_TO_CLOUD, response.jobType());
        Assertions.assertEquals(CopyMode.MIRROR, response.copyMode());
        Assertions.assertEquals("xqugjhkycubedd", response.sourceName());
        Assertions.assertEquals("xacqqudfnbyx", response.sourceSubpath());
        Assertions.assertEquals("aaabjyvayff", response.targetName());
        Assertions.assertEquals("vfdnwnwmewzsyyce", response.targetSubpath());
        Assertions.assertEquals("h", response.agentName());
    }
}
