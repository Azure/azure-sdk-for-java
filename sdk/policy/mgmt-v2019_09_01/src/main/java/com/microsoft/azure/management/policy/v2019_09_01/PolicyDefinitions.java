/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.policy.v2019_09_01;

import com.microsoft.azure.arm.collection.SupportsCreating;
import com.microsoft.azure.arm.collection.SupportsListing;
import rx.Completable;
import rx.Observable;
import com.microsoft.azure.management.policy.v2019_09_01.implementation.PolicyDefinitionInner;
import com.microsoft.azure.management.policy.v2019_09_01.implementation.PolicyDefinitionsInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing PolicyDefinitions.
 */
public interface PolicyDefinitions extends SupportsCreating<PolicyDefinition.DefinitionStages.Blank>, SupportsListing<PolicyDefinition>, HasInner<PolicyDefinitionsInner> {
    /**
     * Deletes a policy definition in a subscription.
     * This operation deletes the policy definition in the given subscription with the given name.
     *
     * @param policyDefinitionName The name of the policy definition to delete.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteAsync(String policyDefinitionName);

    /**
     * Retrieves a policy definition in a subscription.
     * This operation retrieves the policy definition in the given subscription with the given name.
     *
     * @param policyDefinitionName The name of the policy definition to get.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<PolicyDefinition> getAsync(String policyDefinitionName);

    /**
     * Retrieves a built-in policy definition.
     * This operation retrieves the built-in policy definition with the given name.
     *
     * @param policyDefinitionName The name of the built-in policy definition to get.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<PolicyDefinition> getBuiltInAsync(String policyDefinitionName);

    /**
     * Creates or updates a policy definition in a management group.
     * This operation creates or updates a policy definition in the given management group with the given name.
     *
     * @param policyDefinitionName The name of the policy definition to create.
     * @param managementGroupId The ID of the management group.
     * @param parameters The policy definition properties.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<PolicyDefinition> createOrUpdateAtManagementGroupAsync(String policyDefinitionName, String managementGroupId, PolicyDefinitionInner parameters);

    /**
     * Deletes a policy definition in a management group.
     * This operation deletes the policy definition in the given management group with the given name.
     *
     * @param policyDefinitionName The name of the policy definition to delete.
     * @param managementGroupId The ID of the management group.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteAtManagementGroupAsync(String policyDefinitionName, String managementGroupId);

    /**
     * Retrieve a policy definition in a management group.
     * This operation retrieves the policy definition in the given management group with the given name.
     *
     * @param policyDefinitionName The name of the policy definition to get.
     * @param managementGroupId The ID of the management group.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<PolicyDefinition> getAtManagementGroupAsync(String policyDefinitionName, String managementGroupId);

    /**
     * Retrieve policy definitions in a management group.
     * This operation retrieves a list of all the policy definitions in a given management group.
     *
     * @param managementGroupId The ID of the management group.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<PolicyDefinition> listByManagementGroupAsync(final String managementGroupId);

    /**
     * Retrieve built-in policy definitions.
     * This operation retrieves a list of all the built-in policy definitions.
     *
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<PolicyDefinition> listBuiltInAsync();

}
