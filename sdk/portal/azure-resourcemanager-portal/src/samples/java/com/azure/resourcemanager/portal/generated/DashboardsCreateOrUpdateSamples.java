// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.portal.generated;

import com.azure.core.management.serializer.SerializerFactory;
import com.azure.core.util.serializer.SerializerEncoding;
import com.azure.resourcemanager.portal.models.DashboardLens;
import com.azure.resourcemanager.portal.models.DashboardParts;
import com.azure.resourcemanager.portal.models.DashboardPartsPosition;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/** Samples for Dashboards CreateOrUpdate. */
public final class DashboardsCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/portal/resource-manager/Microsoft.Portal/preview/2020-09-01-preview/examples/createOrUpdateDashboard.json
     */
    /**
     * Sample code: Create or update a Dashboard.
     *
     * @param manager Entry point to PortalManager.
     */
    public static void createOrUpdateADashboard(com.azure.resourcemanager.portal.PortalManager manager)
        throws IOException {
        manager
            .dashboards()
            .define("testDashboard")
            .withRegion("eastus")
            .withExistingResourceGroup("testRG")
            .withTags(mapOf("aKey", "aValue", "anotherKey", "anotherValue"))
            .withLenses(
                Arrays
                    .asList(
                        new DashboardLens()
                            .withOrder(1)
                            .withParts(
                                Arrays
                                    .asList(
                                        new DashboardParts()
                                            .withPosition(
                                                new DashboardPartsPosition()
                                                    .withX(1)
                                                    .withY(2)
                                                    .withRowSpan(4)
                                                    .withColSpan(3)),
                                        new DashboardParts()
                                            .withPosition(
                                                new DashboardPartsPosition()
                                                    .withX(5)
                                                    .withY(5)
                                                    .withRowSpan(6)
                                                    .withColSpan(6)))),
                        new DashboardLens().withOrder(2).withParts(Arrays.asList())))
            .withMetadata(
                mapOf(
                    "metadata",
                    SerializerFactory
                        .createDefaultManagementSerializerAdapter()
                        .deserialize(
                            "{\"ColSpan\":2,\"RowSpan\":1,\"X\":4,\"Y\":3}", Object.class, SerializerEncoding.JSON)))
            .create();
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
