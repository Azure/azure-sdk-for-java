// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.portal.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** The dashboard's part position. */
@Fluent
public final class DashboardPartsPosition {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DashboardPartsPosition.class);

    /*
     * The dashboard's part x coordinate.
     */
    @JsonProperty(value = "x", required = true)
    private int x;

    /*
     * The dashboard's part y coordinate.
     */
    @JsonProperty(value = "y", required = true)
    private int y;

    /*
     * The dashboard's part row span.
     */
    @JsonProperty(value = "rowSpan", required = true)
    private int rowSpan;

    /*
     * The dashboard's part column span.
     */
    @JsonProperty(value = "colSpan", required = true)
    private int colSpan;

    /*
     * The dashboard part's metadata.
     */
    @JsonProperty(value = "metadata")
    private Map<String, Object> metadata;

    /**
     * Get the x property: The dashboard's part x coordinate.
     *
     * @return the x value.
     */
    public int x() {
        return this.x;
    }

    /**
     * Set the x property: The dashboard's part x coordinate.
     *
     * @param x the x value to set.
     * @return the DashboardPartsPosition object itself.
     */
    public DashboardPartsPosition withX(int x) {
        this.x = x;
        return this;
    }

    /**
     * Get the y property: The dashboard's part y coordinate.
     *
     * @return the y value.
     */
    public int y() {
        return this.y;
    }

    /**
     * Set the y property: The dashboard's part y coordinate.
     *
     * @param y the y value to set.
     * @return the DashboardPartsPosition object itself.
     */
    public DashboardPartsPosition withY(int y) {
        this.y = y;
        return this;
    }

    /**
     * Get the rowSpan property: The dashboard's part row span.
     *
     * @return the rowSpan value.
     */
    public int rowSpan() {
        return this.rowSpan;
    }

    /**
     * Set the rowSpan property: The dashboard's part row span.
     *
     * @param rowSpan the rowSpan value to set.
     * @return the DashboardPartsPosition object itself.
     */
    public DashboardPartsPosition withRowSpan(int rowSpan) {
        this.rowSpan = rowSpan;
        return this;
    }

    /**
     * Get the colSpan property: The dashboard's part column span.
     *
     * @return the colSpan value.
     */
    public int colSpan() {
        return this.colSpan;
    }

    /**
     * Set the colSpan property: The dashboard's part column span.
     *
     * @param colSpan the colSpan value to set.
     * @return the DashboardPartsPosition object itself.
     */
    public DashboardPartsPosition withColSpan(int colSpan) {
        this.colSpan = colSpan;
        return this;
    }

    /**
     * Get the metadata property: The dashboard part's metadata.
     *
     * @return the metadata value.
     */
    public Map<String, Object> metadata() {
        return this.metadata;
    }

    /**
     * Set the metadata property: The dashboard part's metadata.
     *
     * @param metadata the metadata value to set.
     * @return the DashboardPartsPosition object itself.
     */
    public DashboardPartsPosition withMetadata(Map<String, Object> metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
