// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.portal.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The setting of the content of markdown part. */
@Fluent
public final class MarkdownPartMetadataSettingsContentSettings {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(MarkdownPartMetadataSettingsContentSettings.class);

    /*
     * The content of the markdown part.
     */
    @JsonProperty(value = "content")
    private String content;

    /*
     * The title of the markdown part.
     */
    @JsonProperty(value = "title")
    private String title;

    /*
     * The subtitle of the markdown part.
     */
    @JsonProperty(value = "subtitle")
    private String subtitle;

    /*
     * The source of the content of the markdown part.
     */
    @JsonProperty(value = "markdownSource")
    private Integer markdownSource;

    /*
     * The uri of markdown content.
     */
    @JsonProperty(value = "markdownUri")
    private String markdownUri;

    /**
     * Get the content property: The content of the markdown part.
     *
     * @return the content value.
     */
    public String content() {
        return this.content;
    }

    /**
     * Set the content property: The content of the markdown part.
     *
     * @param content the content value to set.
     * @return the MarkdownPartMetadataSettingsContentSettings object itself.
     */
    public MarkdownPartMetadataSettingsContentSettings withContent(String content) {
        this.content = content;
        return this;
    }

    /**
     * Get the title property: The title of the markdown part.
     *
     * @return the title value.
     */
    public String title() {
        return this.title;
    }

    /**
     * Set the title property: The title of the markdown part.
     *
     * @param title the title value to set.
     * @return the MarkdownPartMetadataSettingsContentSettings object itself.
     */
    public MarkdownPartMetadataSettingsContentSettings withTitle(String title) {
        this.title = title;
        return this;
    }

    /**
     * Get the subtitle property: The subtitle of the markdown part.
     *
     * @return the subtitle value.
     */
    public String subtitle() {
        return this.subtitle;
    }

    /**
     * Set the subtitle property: The subtitle of the markdown part.
     *
     * @param subtitle the subtitle value to set.
     * @return the MarkdownPartMetadataSettingsContentSettings object itself.
     */
    public MarkdownPartMetadataSettingsContentSettings withSubtitle(String subtitle) {
        this.subtitle = subtitle;
        return this;
    }

    /**
     * Get the markdownSource property: The source of the content of the markdown part.
     *
     * @return the markdownSource value.
     */
    public Integer markdownSource() {
        return this.markdownSource;
    }

    /**
     * Set the markdownSource property: The source of the content of the markdown part.
     *
     * @param markdownSource the markdownSource value to set.
     * @return the MarkdownPartMetadataSettingsContentSettings object itself.
     */
    public MarkdownPartMetadataSettingsContentSettings withMarkdownSource(Integer markdownSource) {
        this.markdownSource = markdownSource;
        return this;
    }

    /**
     * Get the markdownUri property: The uri of markdown content.
     *
     * @return the markdownUri value.
     */
    public String markdownUri() {
        return this.markdownUri;
    }

    /**
     * Set the markdownUri property: The uri of markdown content.
     *
     * @param markdownUri the markdownUri value to set.
     * @return the MarkdownPartMetadataSettingsContentSettings object itself.
     */
    public MarkdownPartMetadataSettingsContentSettings withMarkdownUri(String markdownUri) {
        this.markdownUri = markdownUri;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
