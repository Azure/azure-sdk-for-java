// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.portal.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** A dashboard part. */
@Fluent
public final class DashboardParts {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DashboardParts.class);

    /*
     * The dashboard's part position.
     */
    @JsonProperty(value = "position", required = true)
    private DashboardPartsPosition position;

    /*
     * The dashboard part's metadata.
     */
    @JsonProperty(value = "metadata")
    private DashboardPartMetadata metadata;

    /**
     * Get the position property: The dashboard's part position.
     *
     * @return the position value.
     */
    public DashboardPartsPosition position() {
        return this.position;
    }

    /**
     * Set the position property: The dashboard's part position.
     *
     * @param position the position value to set.
     * @return the DashboardParts object itself.
     */
    public DashboardParts withPosition(DashboardPartsPosition position) {
        this.position = position;
        return this;
    }

    /**
     * Get the metadata property: The dashboard part's metadata.
     *
     * @return the metadata value.
     */
    public DashboardPartMetadata metadata() {
        return this.metadata;
    }

    /**
     * Set the metadata property: The dashboard part's metadata.
     *
     * @param metadata the metadata value to set.
     * @return the DashboardParts object itself.
     */
    public DashboardParts withMetadata(DashboardPartMetadata metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (position() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property position in model DashboardParts"));
        } else {
            position().validate();
        }
        if (metadata() != null) {
            metadata().validate();
        }
    }
}
