// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.portal.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/** A dashboard lens. */
@Fluent
public final class DashboardLens {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DashboardLens.class);

    /*
     * The lens order.
     */
    @JsonProperty(value = "order", required = true)
    private int order;

    /*
     * The dashboard parts.
     */
    @JsonProperty(value = "parts", required = true)
    private List<DashboardParts> parts;

    /*
     * The dashboard len's metadata.
     */
    @JsonProperty(value = "metadata")
    private Map<String, Object> metadata;

    /**
     * Get the order property: The lens order.
     *
     * @return the order value.
     */
    public int order() {
        return this.order;
    }

    /**
     * Set the order property: The lens order.
     *
     * @param order the order value to set.
     * @return the DashboardLens object itself.
     */
    public DashboardLens withOrder(int order) {
        this.order = order;
        return this;
    }

    /**
     * Get the parts property: The dashboard parts.
     *
     * @return the parts value.
     */
    public List<DashboardParts> parts() {
        return this.parts;
    }

    /**
     * Set the parts property: The dashboard parts.
     *
     * @param parts the parts value to set.
     * @return the DashboardLens object itself.
     */
    public DashboardLens withParts(List<DashboardParts> parts) {
        this.parts = parts;
        return this;
    }

    /**
     * Get the metadata property: The dashboard len's metadata.
     *
     * @return the metadata value.
     */
    public Map<String, Object> metadata() {
        return this.metadata;
    }

    /**
     * Set the metadata property: The dashboard len's metadata.
     *
     * @param metadata the metadata value to set.
     * @return the DashboardLens object itself.
     */
    public DashboardLens withMetadata(Map<String, Object> metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (parts() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property parts in model DashboardLens"));
        } else {
            parts().forEach(e -> e.validate());
        }
    }
}
