// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurearcdata.AzureArcDataManager;
import com.azure.resourcemanager.azurearcdata.models.BillingPlan;
import com.azure.resourcemanager.azurearcdata.models.ScopeType;
import com.azure.resourcemanager.azurearcdata.models.SqlServerEsuLicense;
import com.azure.resourcemanager.azurearcdata.models.State;
import com.azure.resourcemanager.azurearcdata.models.Version;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SqlServerEsuLicensesGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"billingPlan\":\"PAYG\",\"version\":\"SQL Server 2012\",\"uniqueId\":\"wmbupyvqyvliq\",\"physicalCores\":724295825,\"activationState\":\"Enabled\",\"scopeType\":\"ResourceGroup\",\"activatedAt\":\"2021-04-22T12:43:30Z\",\"terminatedAt\":\"2021-07-12T15:24:07Z\",\"tenantId\":\"si\"},\"location\":\"eswhd\",\"tags\":{\"dpxot\":\"disnuepywyjln\",\"weebiphryv\":\"diiaocqibzji\",\"w\":\"jw\",\"zybspijhfrzgdkk\":\"qsratjhd\"},\"id\":\"gv\",\"name\":\"ukhsusmmorf\",\"type\":\"zhwilzzh\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureArcDataManager manager = AzureArcDataManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        SqlServerEsuLicense response = manager.sqlServerEsuLicenses()
            .getByResourceGroupWithResponse("pqqncju", "khjoz", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("eswhd", response.location());
        Assertions.assertEquals("disnuepywyjln", response.tags().get("dpxot"));
        Assertions.assertEquals(BillingPlan.PAYG, response.properties().billingPlan());
        Assertions.assertEquals(Version.SQL_SERVER_2012, response.properties().version());
        Assertions.assertEquals(724295825, response.properties().physicalCores());
        Assertions.assertEquals(State.ENABLED, response.properties().activationState());
        Assertions.assertEquals(ScopeType.RESOURCE_GROUP, response.properties().scopeType());
    }
}
