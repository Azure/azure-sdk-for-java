// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurearcdata.AzureArcDataManager;
import com.azure.resourcemanager.azurearcdata.models.BillingPlan;
import com.azure.resourcemanager.azurearcdata.models.ScopeType;
import com.azure.resourcemanager.azurearcdata.models.SqlServerEsuLicense;
import com.azure.resourcemanager.azurearcdata.models.State;
import com.azure.resourcemanager.azurearcdata.models.Version;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SqlServerEsuLicensesListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"billingPlan\":\"Paid\",\"version\":\"SQL Server 2014\",\"uniqueId\":\"jzlquz\",\"physicalCores\":2114204984,\"activationState\":\"Terminated\",\"scopeType\":\"ResourceGroup\",\"activatedAt\":\"2021-02-01T08:44:59Z\",\"terminatedAt\":\"2021-07-02T20:46:34Z\",\"tenantId\":\"vbzinz\"},\"location\":\"wmvogljsv\",\"tags\":{\"idoyzl\":\"idnwceha\"},\"id\":\"giomqo\",\"name\":\"pepiaeapfs\",\"type\":\"rgdtpeqnacyheqw\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureArcDataManager manager = AzureArcDataManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<SqlServerEsuLicense> response
            = manager.sqlServerEsuLicenses().listByResourceGroup("tcyilbvz", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("wmvogljsv", response.iterator().next().location());
        Assertions.assertEquals("idnwceha", response.iterator().next().tags().get("idoyzl"));
        Assertions.assertEquals(BillingPlan.PAID, response.iterator().next().properties().billingPlan());
        Assertions.assertEquals(Version.SQL_SERVER_2014, response.iterator().next().properties().version());
        Assertions.assertEquals(2114204984, response.iterator().next().properties().physicalCores());
        Assertions.assertEquals(State.TERMINATED, response.iterator().next().properties().activationState());
        Assertions.assertEquals(ScopeType.RESOURCE_GROUP, response.iterator().next().properties().scopeType());
    }
}
