// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurearcdata.AzureArcDataManager;
import com.azure.resourcemanager.azurearcdata.models.ActivationState;
import com.azure.resourcemanager.azurearcdata.models.BillingPlan;
import com.azure.resourcemanager.azurearcdata.models.LicenseCategory;
import com.azure.resourcemanager.azurearcdata.models.ScopeType;
import com.azure.resourcemanager.azurearcdata.models.SqlServerLicense;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SqlServerLicensesListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"billingPlan\":\"PAYG\",\"physicalCores\":764819775,\"licenseCategory\":\"Core\",\"activationState\":\"Activated\",\"scopeType\":\"Subscription\",\"lastActivatedAt\":\"2021-02-24T16:57:19Z\",\"lastDeactivatedAt\":\"2021-09-27T18:55:36Z\",\"tenantId\":\"aan\"},\"location\":\"giycwkdtaawxwfek\",\"tags\":{\"atbnxwbj\":\"rrqmbzmqk\",\"dgo\":\"idbirkfpkso\",\"zkye\":\"ewijymrhbguz\",\"o\":\"nfnzhhh\"},\"id\":\"mffjkutycyarn\",\"name\":\"oohguabzoghkt\",\"type\":\"pyc\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureArcDataManager manager = AzureArcDataManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<SqlServerLicense> response
            = manager.sqlServerLicenses().listByResourceGroup("bjijkgqxnh", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("giycwkdtaawxwfek", response.iterator().next().location());
        Assertions.assertEquals("rrqmbzmqk", response.iterator().next().tags().get("atbnxwbj"));
        Assertions.assertEquals(BillingPlan.PAYG, response.iterator().next().properties().billingPlan());
        Assertions.assertEquals(764819775, response.iterator().next().properties().physicalCores());
        Assertions.assertEquals(LicenseCategory.CORE, response.iterator().next().properties().licenseCategory());
        Assertions.assertEquals(ActivationState.ACTIVATED, response.iterator().next().properties().activationState());
        Assertions.assertEquals(ScopeType.SUBSCRIPTION, response.iterator().next().properties().scopeType());
    }
}
