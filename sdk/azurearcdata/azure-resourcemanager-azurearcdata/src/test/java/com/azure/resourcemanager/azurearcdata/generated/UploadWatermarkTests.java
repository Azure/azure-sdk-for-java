// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurearcdata.models.UploadWatermark;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class UploadWatermarkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UploadWatermark model = BinaryData.fromString(
            "{\"metrics\":\"2021-03-12T03:03:28Z\",\"logs\":\"2021-11-01T16:23:57Z\",\"usages\":\"2021-01-30T14:58:59Z\"}")
            .toObject(UploadWatermark.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-12T03:03:28Z"), model.metrics());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-01T16:23:57Z"), model.logs());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-30T14:58:59Z"), model.usages());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UploadWatermark model = new UploadWatermark().withMetrics(OffsetDateTime.parse("2021-03-12T03:03:28Z"))
            .withLogs(OffsetDateTime.parse("2021-11-01T16:23:57Z"))
            .withUsages(OffsetDateTime.parse("2021-01-30T14:58:59Z"));
        model = BinaryData.fromObject(model).toObject(UploadWatermark.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-12T03:03:28Z"), model.metrics());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-01T16:23:57Z"), model.logs());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-30T14:58:59Z"), model.usages());
    }
}
