// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurearcdata.AzureArcDataManager;
import com.azure.resourcemanager.azurearcdata.models.ArcSqlServerLicenseType;
import com.azure.resourcemanager.azurearcdata.models.ConnectionStatus;
import com.azure.resourcemanager.azurearcdata.models.DefenderStatus;
import com.azure.resourcemanager.azurearcdata.models.EditionType;
import com.azure.resourcemanager.azurearcdata.models.SqlServerInstance;
import com.azure.resourcemanager.azurearcdata.models.SqlVersion;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SqlServerInstancesListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"version\":\"SQL Server 2019\",\"edition\":\"Web\",\"containerResourceId\":\"lxprglyatddckcbc\",\"createTime\":\"jrjxgciqibrhosx\",\"vCore\":\"qrhzoymibmrqyib\",\"status\":\"Unknown\",\"patchLevel\":\"fluszdtm\",\"collation\":\"kwofyyvoq\",\"currentVersion\":\"piexpbtgiw\",\"instanceName\":\"oenwashr\",\"tcpDynamicPorts\":\"tkcnqxwb\",\"tcpStaticPorts\":\"kulpiujwaasi\",\"productId\":\"i\",\"licenseType\":\"HADR\",\"azureDefenderStatusLastUpdated\":\"2021-06-07T23:06:40Z\",\"azureDefenderStatus\":\"Unprotected\",\"provisioningState\":\"pqlpq\"},\"location\":\"ciuqgbdb\",\"tags\":{\"mhykojoxafnndl\":\"uvfbtkuwh\",\"kkpwdreqnovvq\":\"ichkoymkcdyhb\",\"syrsndsytgadgvra\":\"ovljxywsu\",\"uu\":\"aeneqnzarrwl\"},\"id\":\"jfqka\",\"name\":\"e\",\"type\":\"iipfpubj\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureArcDataManager manager = AzureArcDataManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<SqlServerInstance> response
            = manager.sqlServerInstances().listByResourceGroup("ysmocmbqfqvmkcxo", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ciuqgbdb", response.iterator().next().location());
        Assertions.assertEquals("uvfbtkuwh", response.iterator().next().tags().get("mhykojoxafnndl"));
        Assertions.assertEquals(SqlVersion.SQL_SERVER_2019, response.iterator().next().properties().version());
        Assertions.assertEquals(EditionType.WEB, response.iterator().next().properties().edition());
        Assertions.assertEquals("lxprglyatddckcbc", response.iterator().next().properties().containerResourceId());
        Assertions.assertEquals("qrhzoymibmrqyib", response.iterator().next().properties().vCore());
        Assertions.assertEquals(ConnectionStatus.UNKNOWN, response.iterator().next().properties().status());
        Assertions.assertEquals("fluszdtm", response.iterator().next().properties().patchLevel());
        Assertions.assertEquals("kwofyyvoq", response.iterator().next().properties().collation());
        Assertions.assertEquals("piexpbtgiw", response.iterator().next().properties().currentVersion());
        Assertions.assertEquals("oenwashr", response.iterator().next().properties().instanceName());
        Assertions.assertEquals("tkcnqxwb", response.iterator().next().properties().tcpDynamicPorts());
        Assertions.assertEquals("kulpiujwaasi", response.iterator().next().properties().tcpStaticPorts());
        Assertions.assertEquals("i", response.iterator().next().properties().productId());
        Assertions.assertEquals(ArcSqlServerLicenseType.HADR, response.iterator().next().properties().licenseType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-07T23:06:40Z"),
            response.iterator().next().properties().azureDefenderStatusLastUpdated());
        Assertions.assertEquals(DefenderStatus.UNPROTECTED,
            response.iterator().next().properties().azureDefenderStatus());
    }
}
