// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurearcdata.AzureArcDataManager;
import com.azure.resourcemanager.azurearcdata.models.SqlServerAvailabilityGroupResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SqlServerAvailabilityGroupsDetailViewWithResponseMockTests {
    @Test
    public void testDetailViewWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"availabilityGroupId\":\"h\",\"serverName\":\"lialwcjgckbbcccg\",\"instanceName\":\"raoxnyuff\",\"vmId\":\"sgftipwc\",\"collectionTimestamp\":\"2021-01-22T16:26:57Z\",\"info\":{\"failureConditionLevel\":1347613178,\"healthCheckTimeout\":721159416,\"automatedBackupPreferenceDescription\":\"xyur\",\"version\":543172402,\"basicFeatures\":false,\"dtcSupport\":false,\"dbFailover\":false,\"isDistributed\":false,\"clusterTypeDescription\":\"hiigby\",\"requiredSynchronizedSecondariesToCommit\":485874118,\"isContained\":false,\"primaryReplica\":\"xvatvcr\",\"primaryRecoveryHealthDescription\":\"lbnb\",\"secondaryRecoveryHealthDescription\":\"vhcs\",\"synchronizationHealthDescription\":\"zlwxaeaovur\",\"replicationPartnerType\":\"AzureSQLManagedInstance\",\"listener\":{\"dnsName\":\"sbdweaderzmwnt\",\"ipV4AddressesAndMasks\":[{},{}],\"ipV6Addresses\":[\"tmvmmagoaqylkjz\",\"jiuazjc\",\"mxitpfinzcpd\",\"tkrlgjmtbd\"],\"port\":1405016434}},\"replicas\":{\"value\":[{\"replicaId\":\"fzhompheq\",\"replicaName\":\"relyujlfyoum\",\"replicaResourceId\":\"kyeclcdigpta\",\"configure\":{},\"state\":{}},{\"replicaId\":\"mqxuc\",\"replicaName\":\"ijo\",\"replicaResourceId\":\"xiutgjcyzyzj\",\"configure\":{},\"state\":{}}],\"nextLink\":\"jb\"},\"databases\":{\"value\":[{\"databaseName\":\"oqa\",\"replicaName\":\"z\",\"isLocal\":false,\"isPrimaryReplica\":false,\"synchronizationStateDescription\":\"v\",\"isCommitParticipant\":true,\"synchronizationHealthDescription\":\"wbqamteuliy\",\"databaseStateDescription\":\"pkcvmwf\",\"isSuspended\":false,\"suspendReasonDescription\":\"epmywbormcqm\"},{\"databaseName\":\"iijq\",\"replicaName\":\"zfboj\",\"isLocal\":true,\"isPrimaryReplica\":true,\"synchronizationStateDescription\":\"yqwixvcpwnkwywzw\",\"isCommitParticipant\":true,\"synchronizationHealthDescription\":\"ickduoiqta\",\"databaseStateDescription\":\"yvsk\",\"isSuspended\":false,\"suspendReasonDescription\":\"zawnvsbcfhzag\"},{\"databaseName\":\"vhycvdimwrzregzg\",\"replicaName\":\"futrwpweryekzkd\",\"isLocal\":false,\"isPrimaryReplica\":false,\"synchronizationStateDescription\":\"awjyosxwwhnh\",\"isCommitParticipant\":false,\"synchronizationHealthDescription\":\"p\",\"databaseStateDescription\":\"pmil\",\"isSuspended\":false,\"suspendReasonDescription\":\"ynudqllzsa\"}],\"nextLink\":\"pjlxeehuxiqhzl\"},\"provisioningState\":\"yme\"},\"location\":\"lskihmxrfdsajred\",\"tags\":{\"afpwzyifrkgwl\":\"yshtuwgmev\",\"zdyi\":\"xeqipx\",\"abnsmj\":\"sfayorpravkjoges\",\"qpkevmyltjc\":\"wynqxaekqsykvwj\"},\"id\":\"spxklu\",\"name\":\"cclfgxannn\",\"type\":\"ytzpo\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureArcDataManager manager = AzureArcDataManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        SqlServerAvailabilityGroupResource response = manager.sqlServerAvailabilityGroups()
            .detailViewWithResponse("rtudawlpjfel", "erppt", "bgqnz", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("lskihmxrfdsajred", response.location());
        Assertions.assertEquals("yshtuwgmev", response.tags().get("afpwzyifrkgwl"));
        Assertions.assertEquals(1347613178, response.properties().info().failureConditionLevel());
        Assertions.assertEquals(721159416, response.properties().info().healthCheckTimeout());
        Assertions.assertFalse(response.properties().info().basicFeatures());
        Assertions.assertFalse(response.properties().info().dtcSupport());
        Assertions.assertFalse(response.properties().info().dbFailover());
        Assertions.assertFalse(response.properties().info().isDistributed());
        Assertions.assertEquals(485874118, response.properties().info().requiredSynchronizedSecondariesToCommit());
        Assertions.assertFalse(response.properties().info().isContained());
        Assertions.assertEquals("sbdweaderzmwnt", response.properties().info().listener().dnsName());
        Assertions.assertEquals("tmvmmagoaqylkjz", response.properties().info().listener().ipV6Addresses().get(0));
        Assertions.assertEquals(1405016434, response.properties().info().listener().port());
        Assertions.assertEquals("relyujlfyoum", response.properties().replicas().value().get(0).replicaName());
        Assertions.assertEquals("kyeclcdigpta", response.properties().replicas().value().get(0).replicaResourceId());
        Assertions.assertEquals("oqa", response.properties().databases().value().get(0).databaseName());
    }
}
