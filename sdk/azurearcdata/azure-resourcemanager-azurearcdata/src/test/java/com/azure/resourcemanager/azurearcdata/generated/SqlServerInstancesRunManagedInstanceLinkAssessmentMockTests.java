// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurearcdata.AzureArcDataManager;
import com.azure.resourcemanager.azurearcdata.models.AssessmentCategory;
import com.azure.resourcemanager.azurearcdata.models.AssessmentStatus;
import com.azure.resourcemanager.azurearcdata.models.AzureManagedInstanceRole;
import com.azure.resourcemanager.azurearcdata.models.SqlServerInstanceManagedInstanceLinkAssessmentRequest;
import com.azure.resourcemanager.azurearcdata.models.SqlServerInstanceManagedInstanceLinkAssessmentResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SqlServerInstancesRunManagedInstanceLinkAssessmentMockTests {
    @Test
    public void testRunManagedInstanceLinkAssessment() throws Exception {
        String responseStr
            = "{\"assessments\":[{\"name\":\"czhupeukni\",\"category\":\"Certificates\",\"status\":\"Success\",\"information\":\"spyd\",\"additionalInformation\":\"bocyvhhul\"},{\"name\":\"ywikd\",\"category\":\"ManagedInstance\",\"status\":\"Warning\",\"information\":\"flgbhgau\",\"additionalInformation\":\"dixmxufrsryjq\"},{\"name\":\"kfnozoeoqbvj\",\"category\":\"Certificates\",\"status\":\"Warning\",\"information\":\"bmq\",\"additionalInformation\":\"hntasfaymx\"},{\"name\":\"lpzealbmqkyojwyv\",\"category\":\"SQLServer\",\"status\":\"Success\",\"information\":\"uahxs\",\"additionalInformation\":\"jcmmzrrscub\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureArcDataManager manager = AzureArcDataManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        SqlServerInstanceManagedInstanceLinkAssessmentResponse response = manager.sqlServerInstances()
            .runManagedInstanceLinkAssessment("lcecfeh", "waoaguhi",
                new SqlServerInstanceManagedInstanceLinkAssessmentRequest()
                    .withAzureManagedInstanceResourceId("qllizstac")
                    .withAzureManagedInstanceRole(AzureManagedInstanceRole.SECONDARY)
                    .withDatabaseName("hrweftkw")
                    .withAvailabilityGroupName("ejpmvssehaepwa"),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("czhupeukni", response.assessments().get(0).name());
        Assertions.assertEquals(AssessmentCategory.CERTIFICATES, response.assessments().get(0).category());
        Assertions.assertEquals(AssessmentStatus.SUCCESS, response.assessments().get(0).status());
        Assertions.assertEquals("spyd", response.assessments().get(0).information());
        Assertions.assertEquals("bocyvhhul", response.assessments().get(0).additionalInformation());
    }
}
