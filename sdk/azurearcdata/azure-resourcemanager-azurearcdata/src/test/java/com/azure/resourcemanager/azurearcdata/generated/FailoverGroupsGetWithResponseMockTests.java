// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurearcdata.AzureArcDataManager;
import com.azure.resourcemanager.azurearcdata.models.FailoverGroupPartnerSyncMode;
import com.azure.resourcemanager.azurearcdata.models.FailoverGroupResource;
import com.azure.resourcemanager.azurearcdata.models.InstanceFailoverGroupRole;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FailoverGroupsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Accepted\",\"partnerManagedInstanceId\":\"otiowlxteqd\",\"spec\":{\"sharedName\":\"jgwdtgukranbl\",\"sourceMI\":\"hqlkccuzgygqwaho\",\"partnerMI\":\"lwgniiprglvawu\",\"partnerMirroringURL\":\"d\",\"partnerMirroringCert\":\"ypivlsbb\",\"partnerSyncMode\":\"async\",\"role\":\"secondary\",\"phavpmhbrb\":\"datakmifoxxkub\",\"nssqyzqed\":\"datagvgovpbbttefjo\",\"lg\":\"datakdfrdbiqmrjgeihf\"},\"status\":\"datafiwzcxmjpbyep\",\"ljvrcmyfqipgxhnp\":\"datat\"},\"id\":\"yqwcabvnuil\",\"name\":\"ey\",\"type\":\"swlpaugmrmfj\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureArcDataManager manager = AzureArcDataManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        FailoverGroupResource response = manager.failoverGroups()
            .getWithResponse("s", "sl", "iiiovgqcgxuugq", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("otiowlxteqd", response.properties().partnerManagedInstanceId());
        Assertions.assertEquals("jgwdtgukranbl", response.properties().spec().sharedName());
        Assertions.assertEquals("hqlkccuzgygqwaho", response.properties().spec().sourceMI());
        Assertions.assertEquals("lwgniiprglvawu", response.properties().spec().partnerMI());
        Assertions.assertEquals("d", response.properties().spec().partnerMirroringUrl());
        Assertions.assertEquals("ypivlsbb", response.properties().spec().partnerMirroringCert());
        Assertions.assertEquals(FailoverGroupPartnerSyncMode.ASYNC, response.properties().spec().partnerSyncMode());
        Assertions.assertEquals(InstanceFailoverGroupRole.SECONDARY, response.properties().spec().role());
    }
}
