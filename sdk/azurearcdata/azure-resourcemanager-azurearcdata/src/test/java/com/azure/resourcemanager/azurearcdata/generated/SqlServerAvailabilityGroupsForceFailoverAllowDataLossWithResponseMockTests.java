// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurearcdata.AzureArcDataManager;
import com.azure.resourcemanager.azurearcdata.models.SqlServerAvailabilityGroupResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SqlServerAvailabilityGroupsForceFailoverAllowDataLossWithResponseMockTests {
    @Test
    public void testForceFailoverAllowDataLossWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"availabilityGroupId\":\"tgdstyouambe\",\"serverName\":\"esw\",\"instanceName\":\"weg\",\"vmId\":\"uteyxeyguq\",\"collectionTimestamp\":\"2021-02-05T10:08:20Z\",\"info\":{\"failureConditionLevel\":529739852,\"healthCheckTimeout\":521561442,\"automatedBackupPreferenceDescription\":\"pxlzdesygrijwa\",\"version\":76122921,\"basicFeatures\":false,\"dtcSupport\":false,\"dbFailover\":false,\"isDistributed\":true,\"clusterTypeDescription\":\"qfrojsydgrhyd\",\"requiredSynchronizedSecondariesToCommit\":502257313,\"isContained\":false,\"primaryReplica\":\"zsk\",\"primaryRecoveryHealthDescription\":\"ca\",\"secondaryRecoveryHealthDescription\":\"gzmxieqv\",\"synchronizationHealthDescription\":\"makli\",\"replicationPartnerType\":\"AzureSQLVM\",\"listener\":{\"dnsName\":\"y\",\"ipV4AddressesAndMasks\":[{},{},{}],\"ipV6Addresses\":[\"bx\",\"woijpodtbl\",\"pkkwj\",\"jodqhykincn\"],\"port\":723205637}},\"replicas\":{\"value\":[{\"replicaId\":\"izhceumoqodkadp\",\"replicaName\":\"ibngqladyw\",\"replicaResourceId\":\"whydt\",\"configure\":{},\"state\":{}},{\"replicaId\":\"adswz\",\"replicaName\":\"uyem\",\"replicaResourceId\":\"wuowhlxlnwy\",\"configure\":{},\"state\":{}}],\"nextLink\":\"vblgmokzk\"},\"databases\":{\"value\":[{\"databaseName\":\"wtdvrfmvli\",\"replicaName\":\"vjdrqcrjidhftuk\",\"isLocal\":true,\"isPrimaryReplica\":true,\"synchronizationStateDescription\":\"yojbfqzdkf\",\"isCommitParticipant\":true,\"synchronizationHealthDescription\":\"xhafratqx\",\"databaseStateDescription\":\"jroumzzn\",\"isSuspended\":false,\"suspendReasonDescription\":\"jrhuzgf\"},{\"databaseName\":\"njt\",\"replicaName\":\"sllywpvtio\",\"isLocal\":true,\"isPrimaryReplica\":false,\"synchronizationStateDescription\":\"ollgry\",\"isCommitParticipant\":false,\"synchronizationHealthDescription\":\"asigrowsocne\",\"databaseStateDescription\":\"ygdjboqgrmtqjk\",\"isSuspended\":false,\"suspendReasonDescription\":\"drmmwiuawvcmjz\"},{\"databaseName\":\"iidisczskoswoqiq\",\"replicaName\":\"ugam\",\"isLocal\":true,\"isPrimaryReplica\":false,\"synchronizationStateDescription\":\"oiisbamnppcce\",\"isCommitParticipant\":false,\"synchronizationHealthDescription\":\"dsbezaxyfu\",\"databaseStateDescription\":\"xuizhyhnepkpet\",\"isSuspended\":false,\"suspendReasonDescription\":\"qiubxdukecpxda\"},{\"databaseName\":\"dhctmmko\",\"replicaName\":\"udblnsntrp\",\"isLocal\":false,\"isPrimaryReplica\":true,\"synchronizationStateDescription\":\"f\",\"isCommitParticipant\":true,\"synchronizationHealthDescription\":\"mhklbnl\",\"databaseStateDescription\":\"vcb\",\"isSuspended\":false,\"suspendReasonDescription\":\"yq\"}],\"nextLink\":\"usqxutrpbrr\"},\"provisioningState\":\"uuatvlmbjwcol\"},\"location\":\"x\",\"tags\":{\"pcpahprzrvxhmtf\":\"w\",\"mj\":\"ocnxz\",\"rxtd\":\"ngxno\"},\"id\":\"sn\",\"name\":\"evhdlmydid\",\"type\":\"hepfwwtjfdoes\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureArcDataManager manager = AzureArcDataManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        SqlServerAvailabilityGroupResource response = manager.sqlServerAvailabilityGroups()
            .forceFailoverAllowDataLossWithResponse("tiq", "wbqerzwxiytxtd", "ukvlb", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("x", response.location());
        Assertions.assertEquals("w", response.tags().get("pcpahprzrvxhmtf"));
        Assertions.assertEquals(529739852, response.properties().info().failureConditionLevel());
        Assertions.assertEquals(521561442, response.properties().info().healthCheckTimeout());
        Assertions.assertFalse(response.properties().info().basicFeatures());
        Assertions.assertFalse(response.properties().info().dtcSupport());
        Assertions.assertFalse(response.properties().info().dbFailover());
        Assertions.assertTrue(response.properties().info().isDistributed());
        Assertions.assertEquals(502257313, response.properties().info().requiredSynchronizedSecondariesToCommit());
        Assertions.assertFalse(response.properties().info().isContained());
        Assertions.assertEquals("y", response.properties().info().listener().dnsName());
        Assertions.assertEquals("bx", response.properties().info().listener().ipV6Addresses().get(0));
        Assertions.assertEquals(723205637, response.properties().info().listener().port());
        Assertions.assertEquals("ibngqladyw", response.properties().replicas().value().get(0).replicaName());
        Assertions.assertEquals("whydt", response.properties().replicas().value().get(0).replicaResourceId());
        Assertions.assertEquals("wtdvrfmvli", response.properties().databases().value().get(0).databaseName());
    }
}
