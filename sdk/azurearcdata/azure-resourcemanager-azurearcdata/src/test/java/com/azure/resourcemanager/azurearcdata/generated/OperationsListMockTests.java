// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurearcdata.AzureArcDataManager;
import com.azure.resourcemanager.azurearcdata.models.Operation;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OperationsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"name\":\"tnbatzvi\",\"display\":{\"provider\":\"sowsaael\",\"resource\":\"attcju\",\"operation\":\"plrvkmjcwmjvlg\",\"description\":\"ggcvk\"},\"origin\":\"system\",\"isDataAction\":false,\"properties\":{\"sfxsf\":\"datazbj\",\"ukoveofi\":\"dataztlvtmvagbwidqlv\",\"z\":\"datarvjfnmjmvlw\"}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureArcDataManager manager = AzureArcDataManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Operation> response = manager.operations().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("tnbatzvi", response.iterator().next().name());
        Assertions.assertEquals("sowsaael", response.iterator().next().display().provider());
        Assertions.assertEquals("attcju", response.iterator().next().display().resource());
        Assertions.assertEquals("plrvkmjcwmjvlg", response.iterator().next().display().operation());
        Assertions.assertEquals("ggcvk", response.iterator().next().display().description());
        Assertions.assertFalse(response.iterator().next().isDataAction());
    }
}
