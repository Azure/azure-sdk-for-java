// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.generated;

import com.azure.core.management.serializer.SerializerFactory;
import com.azure.core.util.serializer.SerializerEncoding;
import com.azure.resourcemanager.azurearcdata.models.BasicLoginInformation;
import com.azure.resourcemanager.azurearcdata.models.ExtendedLocation;
import com.azure.resourcemanager.azurearcdata.models.ExtendedLocationTypes;
import com.azure.resourcemanager.azurearcdata.models.PostgresInstanceProperties;
import com.azure.resourcemanager.azurearcdata.models.PostgresInstanceSku;
import com.azure.resourcemanager.azurearcdata.models.PostgresInstanceSkuTier;
import java.io.IOException;

/** Samples for PostgresInstances Create. */
public final class PostgresInstancesCreateSamples {
    /*
     * x-ms-original-file: specification/azurearcdata/resource-manager/Microsoft.AzureArcData/preview/2022-03-01-preview/examples/CreateOrUpdatePostgresInstance.json
     */
    /**
     * Sample code: Create or update a Postgres Instance.
     *
     * @param manager Entry point to AzureArcDataManager.
     */
    public static void createOrUpdateAPostgresInstance(
        com.azure.resourcemanager.azurearcdata.AzureArcDataManager manager) throws IOException {
        manager
            .postgresInstances()
            .define("testpostgresInstance")
            .withRegion("eastus")
            .withExistingResourceGroup("testrg")
            .withProperties(
                new PostgresInstanceProperties()
                    .withDataControllerId("dataControllerId")
                    .withAdmin("admin")
                    .withBasicLoginInformation(
                        new BasicLoginInformation().withUsername("username").withPassword("********"))
                    .withK8SRaw(
                        SerializerFactory
                            .createDefaultManagementSerializerAdapter()
                            .deserialize(
                                "{\"apiVersion\":\"apiVersion\",\"kind\":\"postgresql-12\",\"metadata\":{\"name\":\"pg1\",\"creationTimestamp\":\"2020-08-25T14:55:10Z\",\"generation\":1,\"namespace\":\"test\",\"resourceVersion\":\"527780\",\"selfLink\":\"/apis/arcdata.microsoft.com/v1alpha1/namespaces/test/postgresql-12s/pg1\",\"uid\":\"1111aaaa-ffff-ffff-ffff-99999aaaaaaa\"},\"spec\":{\"backups\":{\"deltaMinutes\":3,\"fullMinutes\":10,\"tiers\":[{\"retention\":{\"maximums\":[\"6\",\"512MB\"],\"minimums\":[\"3\"]},\"storage\":{\"volumeSize\":\"1Gi\"}}]},\"engine\":{\"extensions\":[{\"name\":\"citus\"}]},\"scale\":{\"shards\":3},\"scheduling\":{\"default\":{\"resources\":{\"requests\":{\"memory\":\"256Mi\"}}}},\"service\":{\"type\":\"NodePort\"},\"storage\":{\"data\":{\"className\":\"local-storage\",\"size\":\"5Gi\"},\"logs\":{\"className\":\"local-storage\",\"size\":\"5Gi\"}}},\"status\":{\"externalEndpoint\":null,\"readyPods\":\"4/4\",\"state\":\"Ready\"}}",
                                Object.class,
                                SerializerEncoding.JSON)))
            .withExtendedLocation(
                new ExtendedLocation()
                    .withName(
                        "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.ExtendedLocation/customLocations/arclocation")
                    .withType(ExtendedLocationTypes.CUSTOM_LOCATION))
            .withSku(
                new PostgresInstanceSku()
                    .withName("default")
                    .withDev(true)
                    .withTier(PostgresInstanceSkuTier.HYPERSCALE))
            .create();
    }
}
