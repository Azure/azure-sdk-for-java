// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.azurearcdata.fluent.models.ActiveDirectoryConnectorResourceInner;

/** An instance of this class provides access to all the operations defined in ActiveDirectoryConnectorsClient. */
public interface ActiveDirectoryConnectorsClient {
    /**
     * List the active directory connectors associated with the given data controller.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param dataControllerName The name of the data controller.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of active directory connectors as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ActiveDirectoryConnectorResourceInner> list(String resourceGroupName, String dataControllerName);

    /**
     * List the active directory connectors associated with the given data controller.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param dataControllerName The name of the data controller.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of active directory connectors as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ActiveDirectoryConnectorResourceInner> list(
        String resourceGroupName, String dataControllerName, Context context);

    /**
     * Creates or replaces an Active Directory connector resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param dataControllerName The name of the data controller.
     * @param activeDirectoryConnectorName The name of the Active Directory connector instance.
     * @param activeDirectoryConnectorResource desc.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of active directory connector resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ActiveDirectoryConnectorResourceInner>, ActiveDirectoryConnectorResourceInner> beginCreate(
        String resourceGroupName,
        String dataControllerName,
        String activeDirectoryConnectorName,
        ActiveDirectoryConnectorResourceInner activeDirectoryConnectorResource);

    /**
     * Creates or replaces an Active Directory connector resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param dataControllerName The name of the data controller.
     * @param activeDirectoryConnectorName The name of the Active Directory connector instance.
     * @param activeDirectoryConnectorResource desc.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of active directory connector resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ActiveDirectoryConnectorResourceInner>, ActiveDirectoryConnectorResourceInner> beginCreate(
        String resourceGroupName,
        String dataControllerName,
        String activeDirectoryConnectorName,
        ActiveDirectoryConnectorResourceInner activeDirectoryConnectorResource,
        Context context);

    /**
     * Creates or replaces an Active Directory connector resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param dataControllerName The name of the data controller.
     * @param activeDirectoryConnectorName The name of the Active Directory connector instance.
     * @param activeDirectoryConnectorResource desc.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return active directory connector resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ActiveDirectoryConnectorResourceInner create(
        String resourceGroupName,
        String dataControllerName,
        String activeDirectoryConnectorName,
        ActiveDirectoryConnectorResourceInner activeDirectoryConnectorResource);

    /**
     * Creates or replaces an Active Directory connector resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param dataControllerName The name of the data controller.
     * @param activeDirectoryConnectorName The name of the Active Directory connector instance.
     * @param activeDirectoryConnectorResource desc.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return active directory connector resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ActiveDirectoryConnectorResourceInner create(
        String resourceGroupName,
        String dataControllerName,
        String activeDirectoryConnectorName,
        ActiveDirectoryConnectorResourceInner activeDirectoryConnectorResource,
        Context context);

    /**
     * Deletes an Active Directory connector resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param dataControllerName The name of the data controller.
     * @param activeDirectoryConnectorName The name of the Active Directory connector instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String dataControllerName, String activeDirectoryConnectorName);

    /**
     * Deletes an Active Directory connector resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param dataControllerName The name of the data controller.
     * @param activeDirectoryConnectorName The name of the Active Directory connector instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String dataControllerName, String activeDirectoryConnectorName, Context context);

    /**
     * Deletes an Active Directory connector resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param dataControllerName The name of the data controller.
     * @param activeDirectoryConnectorName The name of the Active Directory connector instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String dataControllerName, String activeDirectoryConnectorName);

    /**
     * Deletes an Active Directory connector resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param dataControllerName The name of the data controller.
     * @param activeDirectoryConnectorName The name of the Active Directory connector instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(
        String resourceGroupName, String dataControllerName, String activeDirectoryConnectorName, Context context);

    /**
     * Retrieves an Active Directory connector resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param dataControllerName The name of the data controller.
     * @param activeDirectoryConnectorName The name of the Active Directory connector instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return active directory connector resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ActiveDirectoryConnectorResourceInner get(
        String resourceGroupName, String dataControllerName, String activeDirectoryConnectorName);

    /**
     * Retrieves an Active Directory connector resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param dataControllerName The name of the data controller.
     * @param activeDirectoryConnectorName The name of the Active Directory connector instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return active directory connector resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ActiveDirectoryConnectorResourceInner> getWithResponse(
        String resourceGroupName, String dataControllerName, String activeDirectoryConnectorName, Context context);
}
