// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The availability group configuration specification for a distributed availability group.
 */
@Fluent
public final class DistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration
    implements JsonSerializable<DistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration> {
    /*
     * The azure resource identifier for the availability group.
     */
    private String availabilityGroup;

    /*
     * The listener URL of the availability group.
     */
    private String listenerUrl;

    /*
     * The availability mode of the availability group.
     */
    private ArcSqlServerAvailabilityMode availabilityMode;

    /*
     * The failover mode of the availability group.
     */
    private ArcSqlServerFailoverMode failoverMode;

    /*
     * The seeding mode of the availability group.
     */
    private SeedingMode seedingMode;

    /*
     * The certificate configuration for the availability group.
     */
    private DistributedAvailabilityGroupCreateUpdateAvailabilityGroupCertificateConfiguration certificateConfiguration;

    /**
     * Creates an instance of DistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration class.
     */
    public DistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration() {
    }

    /**
     * Get the availabilityGroup property: The azure resource identifier for the availability group.
     * 
     * @return the availabilityGroup value.
     */
    public String availabilityGroup() {
        return this.availabilityGroup;
    }

    /**
     * Set the availabilityGroup property: The azure resource identifier for the availability group.
     * 
     * @param availabilityGroup the availabilityGroup value to set.
     * @return the DistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration object itself.
     */
    public DistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration
        withAvailabilityGroup(String availabilityGroup) {
        this.availabilityGroup = availabilityGroup;
        return this;
    }

    /**
     * Get the listenerUrl property: The listener URL of the availability group.
     * 
     * @return the listenerUrl value.
     */
    public String listenerUrl() {
        return this.listenerUrl;
    }

    /**
     * Set the listenerUrl property: The listener URL of the availability group.
     * 
     * @param listenerUrl the listenerUrl value to set.
     * @return the DistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration object itself.
     */
    public DistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration withListenerUrl(String listenerUrl) {
        this.listenerUrl = listenerUrl;
        return this;
    }

    /**
     * Get the availabilityMode property: The availability mode of the availability group.
     * 
     * @return the availabilityMode value.
     */
    public ArcSqlServerAvailabilityMode availabilityMode() {
        return this.availabilityMode;
    }

    /**
     * Set the availabilityMode property: The availability mode of the availability group.
     * 
     * @param availabilityMode the availabilityMode value to set.
     * @return the DistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration object itself.
     */
    public DistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration
        withAvailabilityMode(ArcSqlServerAvailabilityMode availabilityMode) {
        this.availabilityMode = availabilityMode;
        return this;
    }

    /**
     * Get the failoverMode property: The failover mode of the availability group.
     * 
     * @return the failoverMode value.
     */
    public ArcSqlServerFailoverMode failoverMode() {
        return this.failoverMode;
    }

    /**
     * Set the failoverMode property: The failover mode of the availability group.
     * 
     * @param failoverMode the failoverMode value to set.
     * @return the DistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration object itself.
     */
    public DistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration
        withFailoverMode(ArcSqlServerFailoverMode failoverMode) {
        this.failoverMode = failoverMode;
        return this;
    }

    /**
     * Get the seedingMode property: The seeding mode of the availability group.
     * 
     * @return the seedingMode value.
     */
    public SeedingMode seedingMode() {
        return this.seedingMode;
    }

    /**
     * Set the seedingMode property: The seeding mode of the availability group.
     * 
     * @param seedingMode the seedingMode value to set.
     * @return the DistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration object itself.
     */
    public DistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration
        withSeedingMode(SeedingMode seedingMode) {
        this.seedingMode = seedingMode;
        return this;
    }

    /**
     * Get the certificateConfiguration property: The certificate configuration for the availability group.
     * 
     * @return the certificateConfiguration value.
     */
    public DistributedAvailabilityGroupCreateUpdateAvailabilityGroupCertificateConfiguration
        certificateConfiguration() {
        return this.certificateConfiguration;
    }

    /**
     * Set the certificateConfiguration property: The certificate configuration for the availability group.
     * 
     * @param certificateConfiguration the certificateConfiguration value to set.
     * @return the DistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration object itself.
     */
    public DistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration withCertificateConfiguration(
        DistributedAvailabilityGroupCreateUpdateAvailabilityGroupCertificateConfiguration certificateConfiguration) {
        this.certificateConfiguration = certificateConfiguration;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (certificateConfiguration() != null) {
            certificateConfiguration().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("availabilityGroup", this.availabilityGroup);
        jsonWriter.writeStringField("listenerUrl", this.listenerUrl);
        jsonWriter.writeStringField("availabilityMode",
            this.availabilityMode == null ? null : this.availabilityMode.toString());
        jsonWriter.writeStringField("failoverMode", this.failoverMode == null ? null : this.failoverMode.toString());
        jsonWriter.writeStringField("seedingMode", this.seedingMode == null ? null : this.seedingMode.toString());
        jsonWriter.writeJsonField("certificateConfiguration", this.certificateConfiguration);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration if the JsonReader
     * was pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the
     * DistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration.
     */
    public static DistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            DistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration deserializedDistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration
                = new DistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("availabilityGroup".equals(fieldName)) {
                    deserializedDistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration.availabilityGroup
                        = reader.getString();
                } else if ("listenerUrl".equals(fieldName)) {
                    deserializedDistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration.listenerUrl
                        = reader.getString();
                } else if ("availabilityMode".equals(fieldName)) {
                    deserializedDistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration.availabilityMode
                        = ArcSqlServerAvailabilityMode.fromString(reader.getString());
                } else if ("failoverMode".equals(fieldName)) {
                    deserializedDistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration.failoverMode
                        = ArcSqlServerFailoverMode.fromString(reader.getString());
                } else if ("seedingMode".equals(fieldName)) {
                    deserializedDistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration.seedingMode
                        = SeedingMode.fromString(reader.getString());
                } else if ("certificateConfiguration".equals(fieldName)) {
                    deserializedDistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration.certificateConfiguration
                        = DistributedAvailabilityGroupCreateUpdateAvailabilityGroupCertificateConfiguration
                            .fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDistributedAvailabilityGroupCreateUpdateAvailabilityGroupConfiguration;
        });
    }
}
