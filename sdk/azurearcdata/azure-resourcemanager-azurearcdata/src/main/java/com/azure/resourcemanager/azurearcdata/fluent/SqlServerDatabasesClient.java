// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.azurearcdata.fluent.models.SqlServerDatabaseResourceInner;
import com.azure.resourcemanager.azurearcdata.models.SqlServerDatabaseUpdate;

/**
 * An instance of this class provides access to all the operations defined in SqlServerDatabasesClient.
 */
public interface SqlServerDatabasesClient {
    /**
     * Creates or replaces an Arc Sql Server Database.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param databaseName Name of the database.
     * @param sqlServerDatabaseResource The request body for database resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server database along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SqlServerDatabaseResourceInner> createWithResponse(String resourceGroupName, String sqlServerInstanceName,
        String databaseName, SqlServerDatabaseResourceInner sqlServerDatabaseResource, Context context);

    /**
     * Creates or replaces an Arc Sql Server Database.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param databaseName Name of the database.
     * @param sqlServerDatabaseResource The request body for database resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server database.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SqlServerDatabaseResourceInner create(String resourceGroupName, String sqlServerInstanceName, String databaseName,
        SqlServerDatabaseResourceInner sqlServerDatabaseResource);

    /**
     * Deletes an Arc Sql Server database resource.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param databaseName Name of the database.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String sqlServerInstanceName,
        String databaseName);

    /**
     * Deletes an Arc Sql Server database resource.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param databaseName Name of the database.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String sqlServerInstanceName,
        String databaseName, Context context);

    /**
     * Deletes an Arc Sql Server database resource.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param databaseName Name of the database.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String sqlServerInstanceName, String databaseName);

    /**
     * Deletes an Arc Sql Server database resource.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param databaseName Name of the database.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String sqlServerInstanceName, String databaseName, Context context);

    /**
     * Retrieves an Arc Sql Server database.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param databaseName Name of the database.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server database along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SqlServerDatabaseResourceInner> getWithResponse(String resourceGroupName, String sqlServerInstanceName,
        String databaseName, Context context);

    /**
     * Retrieves an Arc Sql Server database.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param databaseName Name of the database.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server database.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SqlServerDatabaseResourceInner get(String resourceGroupName, String sqlServerInstanceName, String databaseName);

    /**
     * Updates an existing database.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param databaseName Name of the database.
     * @param sqlServerDatabaseUpdate The requested database resource state.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of arc Sql Server database.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<SqlServerDatabaseResourceInner>, SqlServerDatabaseResourceInner> beginUpdate(
        String resourceGroupName, String sqlServerInstanceName, String databaseName,
        SqlServerDatabaseUpdate sqlServerDatabaseUpdate);

    /**
     * Updates an existing database.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param databaseName Name of the database.
     * @param sqlServerDatabaseUpdate The requested database resource state.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of arc Sql Server database.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<SqlServerDatabaseResourceInner>, SqlServerDatabaseResourceInner> beginUpdate(
        String resourceGroupName, String sqlServerInstanceName, String databaseName,
        SqlServerDatabaseUpdate sqlServerDatabaseUpdate, Context context);

    /**
     * Updates an existing database.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param databaseName Name of the database.
     * @param sqlServerDatabaseUpdate The requested database resource state.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server database.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SqlServerDatabaseResourceInner update(String resourceGroupName, String sqlServerInstanceName, String databaseName,
        SqlServerDatabaseUpdate sqlServerDatabaseUpdate);

    /**
     * Updates an existing database.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param databaseName Name of the database.
     * @param sqlServerDatabaseUpdate The requested database resource state.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server database.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SqlServerDatabaseResourceInner update(String resourceGroupName, String sqlServerInstanceName, String databaseName,
        SqlServerDatabaseUpdate sqlServerDatabaseUpdate, Context context);

    /**
     * List the databases associated with the given Arc Sql Server.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of Arc Sql Server database as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SqlServerDatabaseResourceInner> list(String resourceGroupName, String sqlServerInstanceName);

    /**
     * List the databases associated with the given Arc Sql Server.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of Arc Sql Server database as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SqlServerDatabaseResourceInner> list(String resourceGroupName, String sqlServerInstanceName,
        Context context);
}
