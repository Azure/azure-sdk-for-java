// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.LinkedHashMap;
import java.util.Map;

/**
 * The kubernetes settings information.
 */
@Fluent
public final class K8SSettings implements JsonSerializable<K8SSettings> {
    /*
     * The kubernetes network settings information.
     */
    private K8SNetworkSettings network;

    /*
     * The kubernetes settings information.
     */
    private Map<String, Object> additionalProperties;

    /**
     * Creates an instance of K8SSettings class.
     */
    public K8SSettings() {
    }

    /**
     * Get the network property: The kubernetes network settings information.
     * 
     * @return the network value.
     */
    public K8SNetworkSettings network() {
        return this.network;
    }

    /**
     * Set the network property: The kubernetes network settings information.
     * 
     * @param network the network value to set.
     * @return the K8SSettings object itself.
     */
    public K8SSettings withNetwork(K8SNetworkSettings network) {
        this.network = network;
        return this;
    }

    /**
     * Get the additionalProperties property: The kubernetes settings information.
     * 
     * @return the additionalProperties value.
     */
    public Map<String, Object> additionalProperties() {
        return this.additionalProperties;
    }

    /**
     * Set the additionalProperties property: The kubernetes settings information.
     * 
     * @param additionalProperties the additionalProperties value to set.
     * @return the K8SSettings object itself.
     */
    public K8SSettings withAdditionalProperties(Map<String, Object> additionalProperties) {
        this.additionalProperties = additionalProperties;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (network() != null) {
            network().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("network", this.network);
        if (additionalProperties != null) {
            for (Map.Entry<String, Object> additionalProperty : additionalProperties.entrySet()) {
                jsonWriter.writeUntypedField(additionalProperty.getKey(), additionalProperty.getValue());
            }
        }
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of K8SSettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of K8SSettings if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the K8SSettings.
     */
    public static K8SSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            K8SSettings deserializedK8SSettings = new K8SSettings();
            Map<String, Object> additionalProperties = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("network".equals(fieldName)) {
                    deserializedK8SSettings.network = K8SNetworkSettings.fromJson(reader);
                } else {
                    if (additionalProperties == null) {
                        additionalProperties = new LinkedHashMap<>();
                    }

                    additionalProperties.put(fieldName, reader.readUntyped());
                }
            }
            deserializedK8SSettings.additionalProperties = additionalProperties;

            return deserializedK8SSettings;
        });
    }
}
