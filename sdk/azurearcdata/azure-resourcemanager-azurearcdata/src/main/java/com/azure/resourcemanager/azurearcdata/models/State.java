// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * The activation state of the license.
 */
public final class State extends ExpandableStringEnum<State> {
    /**
     * Static value Inactive for State.
     */
    public static final State INACTIVE = fromString("Inactive");

    /**
     * Static value Active for State.
     */
    public static final State ACTIVE = fromString("Active");

    /**
     * Static value Terminated for State.
     */
    public static final State TERMINATED = fromString("Terminated");

    /**
     * Static value Enabled for State.
     */
    public static final State ENABLED = fromString("Enabled");

    /**
     * Static value Disabled for State.
     */
    public static final State DISABLED = fromString("Disabled");

    /**
     * Static value Deleted for State.
     */
    public static final State DELETED = fromString("Deleted");

    /**
     * Static value Completed for State.
     */
    public static final State COMPLETED = fromString("Completed");

    /**
     * Static value Faulted for State.
     */
    public static final State FAULTED = fromString("Faulted");

    /**
     * Static value Suspended for State.
     */
    public static final State SUSPENDED = fromString("Suspended");

    /**
     * Creates a new instance of State value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public State() {
    }

    /**
     * Creates or finds a State from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding State.
     */
    public static State fromString(String name) {
        return fromString(name, State.class);
    }

    /**
     * Gets known State values.
     * 
     * @return known State values.
     */
    public static Collection<State> values() {
        return values(State.class);
    }
}
