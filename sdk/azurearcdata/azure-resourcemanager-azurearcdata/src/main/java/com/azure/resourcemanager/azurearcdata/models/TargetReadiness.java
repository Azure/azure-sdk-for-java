// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The target readiness for migration for this database.
 */
@Fluent
public final class TargetReadiness implements JsonSerializable<TargetReadiness> {
    /*
     * The SKU recommendation summary.
     */
    private SkuRecommendationSummary azureSqlDatabase;

    /*
     * The SKU recommendation summary.
     */
    private SkuRecommendationSummary azureSqlManagedInstance;

    /*
     * The SKU recommendation summary.
     */
    private SkuRecommendationSummary azureSqlVirtualMachine;

    /**
     * Creates an instance of TargetReadiness class.
     */
    public TargetReadiness() {
    }

    /**
     * Get the azureSqlDatabase property: The SKU recommendation summary.
     * 
     * @return the azureSqlDatabase value.
     */
    public SkuRecommendationSummary azureSqlDatabase() {
        return this.azureSqlDatabase;
    }

    /**
     * Set the azureSqlDatabase property: The SKU recommendation summary.
     * 
     * @param azureSqlDatabase the azureSqlDatabase value to set.
     * @return the TargetReadiness object itself.
     */
    public TargetReadiness withAzureSqlDatabase(SkuRecommendationSummary azureSqlDatabase) {
        this.azureSqlDatabase = azureSqlDatabase;
        return this;
    }

    /**
     * Get the azureSqlManagedInstance property: The SKU recommendation summary.
     * 
     * @return the azureSqlManagedInstance value.
     */
    public SkuRecommendationSummary azureSqlManagedInstance() {
        return this.azureSqlManagedInstance;
    }

    /**
     * Set the azureSqlManagedInstance property: The SKU recommendation summary.
     * 
     * @param azureSqlManagedInstance the azureSqlManagedInstance value to set.
     * @return the TargetReadiness object itself.
     */
    public TargetReadiness withAzureSqlManagedInstance(SkuRecommendationSummary azureSqlManagedInstance) {
        this.azureSqlManagedInstance = azureSqlManagedInstance;
        return this;
    }

    /**
     * Get the azureSqlVirtualMachine property: The SKU recommendation summary.
     * 
     * @return the azureSqlVirtualMachine value.
     */
    public SkuRecommendationSummary azureSqlVirtualMachine() {
        return this.azureSqlVirtualMachine;
    }

    /**
     * Set the azureSqlVirtualMachine property: The SKU recommendation summary.
     * 
     * @param azureSqlVirtualMachine the azureSqlVirtualMachine value to set.
     * @return the TargetReadiness object itself.
     */
    public TargetReadiness withAzureSqlVirtualMachine(SkuRecommendationSummary azureSqlVirtualMachine) {
        this.azureSqlVirtualMachine = azureSqlVirtualMachine;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (azureSqlDatabase() != null) {
            azureSqlDatabase().validate();
        }
        if (azureSqlManagedInstance() != null) {
            azureSqlManagedInstance().validate();
        }
        if (azureSqlVirtualMachine() != null) {
            azureSqlVirtualMachine().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("azureSqlDatabase", this.azureSqlDatabase);
        jsonWriter.writeJsonField("azureSqlManagedInstance", this.azureSqlManagedInstance);
        jsonWriter.writeJsonField("azureSqlVirtualMachine", this.azureSqlVirtualMachine);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TargetReadiness from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TargetReadiness if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the TargetReadiness.
     */
    public static TargetReadiness fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            TargetReadiness deserializedTargetReadiness = new TargetReadiness();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("azureSqlDatabase".equals(fieldName)) {
                    deserializedTargetReadiness.azureSqlDatabase = SkuRecommendationSummary.fromJson(reader);
                } else if ("azureSqlManagedInstance".equals(fieldName)) {
                    deserializedTargetReadiness.azureSqlManagedInstance = SkuRecommendationSummary.fromJson(reader);
                } else if ("azureSqlVirtualMachine".equals(fieldName)) {
                    deserializedTargetReadiness.azureSqlVirtualMachine = SkuRecommendationSummary.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedTargetReadiness;
        });
    }
}
