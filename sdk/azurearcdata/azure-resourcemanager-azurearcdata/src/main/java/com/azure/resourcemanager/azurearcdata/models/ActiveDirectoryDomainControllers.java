// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Details about the Active Directory domain controllers associated with this AD connector instance. */
@Fluent
public final class ActiveDirectoryDomainControllers {
    /*
     * Information about the Primary Domain Controller (PDC) in the AD domain.
     */
    @JsonProperty(value = "primaryDomainController")
    private ActiveDirectoryDomainController primaryDomainController;

    /*
     * null
     */
    @JsonProperty(value = "secondaryDomainControllers")
    private List<ActiveDirectoryDomainController> secondaryDomainControllers;

    /**
     * Get the primaryDomainController property: Information about the Primary Domain Controller (PDC) in the AD domain.
     *
     * @return the primaryDomainController value.
     */
    public ActiveDirectoryDomainController primaryDomainController() {
        return this.primaryDomainController;
    }

    /**
     * Set the primaryDomainController property: Information about the Primary Domain Controller (PDC) in the AD domain.
     *
     * @param primaryDomainController the primaryDomainController value to set.
     * @return the ActiveDirectoryDomainControllers object itself.
     */
    public ActiveDirectoryDomainControllers withPrimaryDomainController(
        ActiveDirectoryDomainController primaryDomainController) {
        this.primaryDomainController = primaryDomainController;
        return this;
    }

    /**
     * Get the secondaryDomainControllers property: null.
     *
     * @return the secondaryDomainControllers value.
     */
    public List<ActiveDirectoryDomainController> secondaryDomainControllers() {
        return this.secondaryDomainControllers;
    }

    /**
     * Set the secondaryDomainControllers property: null.
     *
     * @param secondaryDomainControllers the secondaryDomainControllers value to set.
     * @return the ActiveDirectoryDomainControllers object itself.
     */
    public ActiveDirectoryDomainControllers withSecondaryDomainControllers(
        List<ActiveDirectoryDomainController> secondaryDomainControllers) {
        this.secondaryDomainControllers = secondaryDomainControllers;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (primaryDomainController() != null) {
            primaryDomainController().validate();
        }
        if (secondaryDomainControllers() != null) {
            secondaryDomainControllers().forEach(e -> e.validate());
        }
    }
}
