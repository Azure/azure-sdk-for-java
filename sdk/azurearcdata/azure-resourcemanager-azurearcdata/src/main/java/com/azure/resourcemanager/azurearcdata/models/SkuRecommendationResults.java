// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * SKU Recommendation results for Azure migration targets for SQL Server.
 */
@Fluent
public final class SkuRecommendationResults implements JsonSerializable<SkuRecommendationResults> {
    /*
     * SKU Recommendation results for Azure SQL Database.
     */
    private SkuRecommendationResultsAzureSqlDatabase azureSqlDatabase;

    /*
     * SKU Recommendation results for Azure SQL Managed Instance.
     */
    private SkuRecommendationResultsAzureSqlManagedInstance azureSqlManagedInstance;

    /*
     * SKU Recommendation results for Azure SQL Virtual Machine.
     */
    private SkuRecommendationResultsAzureSqlVirtualMachine azureSqlVirtualMachine;

    /**
     * Creates an instance of SkuRecommendationResults class.
     */
    public SkuRecommendationResults() {
    }

    /**
     * Get the azureSqlDatabase property: SKU Recommendation results for Azure SQL Database.
     * 
     * @return the azureSqlDatabase value.
     */
    public SkuRecommendationResultsAzureSqlDatabase azureSqlDatabase() {
        return this.azureSqlDatabase;
    }

    /**
     * Set the azureSqlDatabase property: SKU Recommendation results for Azure SQL Database.
     * 
     * @param azureSqlDatabase the azureSqlDatabase value to set.
     * @return the SkuRecommendationResults object itself.
     */
    public SkuRecommendationResults withAzureSqlDatabase(SkuRecommendationResultsAzureSqlDatabase azureSqlDatabase) {
        this.azureSqlDatabase = azureSqlDatabase;
        return this;
    }

    /**
     * Get the azureSqlManagedInstance property: SKU Recommendation results for Azure SQL Managed Instance.
     * 
     * @return the azureSqlManagedInstance value.
     */
    public SkuRecommendationResultsAzureSqlManagedInstance azureSqlManagedInstance() {
        return this.azureSqlManagedInstance;
    }

    /**
     * Set the azureSqlManagedInstance property: SKU Recommendation results for Azure SQL Managed Instance.
     * 
     * @param azureSqlManagedInstance the azureSqlManagedInstance value to set.
     * @return the SkuRecommendationResults object itself.
     */
    public SkuRecommendationResults
        withAzureSqlManagedInstance(SkuRecommendationResultsAzureSqlManagedInstance azureSqlManagedInstance) {
        this.azureSqlManagedInstance = azureSqlManagedInstance;
        return this;
    }

    /**
     * Get the azureSqlVirtualMachine property: SKU Recommendation results for Azure SQL Virtual Machine.
     * 
     * @return the azureSqlVirtualMachine value.
     */
    public SkuRecommendationResultsAzureSqlVirtualMachine azureSqlVirtualMachine() {
        return this.azureSqlVirtualMachine;
    }

    /**
     * Set the azureSqlVirtualMachine property: SKU Recommendation results for Azure SQL Virtual Machine.
     * 
     * @param azureSqlVirtualMachine the azureSqlVirtualMachine value to set.
     * @return the SkuRecommendationResults object itself.
     */
    public SkuRecommendationResults
        withAzureSqlVirtualMachine(SkuRecommendationResultsAzureSqlVirtualMachine azureSqlVirtualMachine) {
        this.azureSqlVirtualMachine = azureSqlVirtualMachine;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (azureSqlDatabase() != null) {
            azureSqlDatabase().validate();
        }
        if (azureSqlManagedInstance() != null) {
            azureSqlManagedInstance().validate();
        }
        if (azureSqlVirtualMachine() != null) {
            azureSqlVirtualMachine().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("azureSqlDatabase", this.azureSqlDatabase);
        jsonWriter.writeJsonField("azureSqlManagedInstance", this.azureSqlManagedInstance);
        jsonWriter.writeJsonField("azureSqlVirtualMachine", this.azureSqlVirtualMachine);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SkuRecommendationResults from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SkuRecommendationResults if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SkuRecommendationResults.
     */
    public static SkuRecommendationResults fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SkuRecommendationResults deserializedSkuRecommendationResults = new SkuRecommendationResults();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("azureSqlDatabase".equals(fieldName)) {
                    deserializedSkuRecommendationResults.azureSqlDatabase
                        = SkuRecommendationResultsAzureSqlDatabase.fromJson(reader);
                } else if ("azureSqlManagedInstance".equals(fieldName)) {
                    deserializedSkuRecommendationResults.azureSqlManagedInstance
                        = SkuRecommendationResultsAzureSqlManagedInstance.fromJson(reader);
                } else if ("azureSqlVirtualMachine".equals(fieldName)) {
                    deserializedSkuRecommendationResults.azureSqlVirtualMachine
                        = SkuRecommendationResultsAzureSqlVirtualMachine.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSkuRecommendationResults;
        });
    }
}
