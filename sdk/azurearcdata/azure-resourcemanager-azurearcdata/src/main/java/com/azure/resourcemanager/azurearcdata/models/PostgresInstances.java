// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of PostgresInstances. */
public interface PostgresInstances {
    /**
     * List postgres Instance resources in the subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of PostgresInstance as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PostgresInstance> list();

    /**
     * List postgres Instance resources in the subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of PostgresInstance as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PostgresInstance> list(Context context);

    /**
     * Get a postgres Instances list by Resource group name.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a postgres Instances list by Resource group name as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PostgresInstance> listByResourceGroup(String resourceGroupName);

    /**
     * Get a postgres Instances list by Resource group name.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a postgres Instances list by Resource group name as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PostgresInstance> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Retrieves a postgres Instance resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param postgresInstanceName Name of Postgres Instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Postgres Instance.
     */
    PostgresInstance getByResourceGroup(String resourceGroupName, String postgresInstanceName);

    /**
     * Retrieves a postgres Instance resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param postgresInstanceName Name of Postgres Instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Postgres Instance along with {@link Response}.
     */
    Response<PostgresInstance> getByResourceGroupWithResponse(
        String resourceGroupName, String postgresInstanceName, Context context);

    /**
     * Deletes a postgres Instance resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param postgresInstanceName Name of Postgres Instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String postgresInstanceName);

    /**
     * Deletes a postgres Instance resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param postgresInstanceName Name of Postgres Instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String postgresInstanceName, Context context);

    /**
     * Retrieves a postgres Instance resource.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Postgres Instance along with {@link Response}.
     */
    PostgresInstance getById(String id);

    /**
     * Retrieves a postgres Instance resource.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Postgres Instance along with {@link Response}.
     */
    Response<PostgresInstance> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a postgres Instance resource.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes a postgres Instance resource.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new PostgresInstance resource.
     *
     * @param name resource name.
     * @return the first stage of the new PostgresInstance definition.
     */
    PostgresInstance.DefinitionStages.Blank define(String name);
}
