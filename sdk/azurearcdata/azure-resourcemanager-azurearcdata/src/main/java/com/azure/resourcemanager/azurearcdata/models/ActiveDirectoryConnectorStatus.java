// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.LinkedHashMap;
import java.util.Map;

/**
 * The status of the Kubernetes custom resource.
 */
@Fluent
public final class ActiveDirectoryConnectorStatus implements JsonSerializable<ActiveDirectoryConnectorStatus> {
    /*
     * The time that the custom resource was last updated.
     */
    private String lastUpdateTime;

    /*
     * The version of the replicaSet associated with the AD connector custom resource.
     */
    private Long observedGeneration;

    /*
     * The state of the AD connector custom resource.
     */
    private String state;

    /*
     * The status of the Kubernetes custom resource.
     */
    private Map<String, Object> additionalProperties;

    /**
     * Creates an instance of ActiveDirectoryConnectorStatus class.
     */
    public ActiveDirectoryConnectorStatus() {
    }

    /**
     * Get the lastUpdateTime property: The time that the custom resource was last updated.
     * 
     * @return the lastUpdateTime value.
     */
    public String lastUpdateTime() {
        return this.lastUpdateTime;
    }

    /**
     * Set the lastUpdateTime property: The time that the custom resource was last updated.
     * 
     * @param lastUpdateTime the lastUpdateTime value to set.
     * @return the ActiveDirectoryConnectorStatus object itself.
     */
    public ActiveDirectoryConnectorStatus withLastUpdateTime(String lastUpdateTime) {
        this.lastUpdateTime = lastUpdateTime;
        return this;
    }

    /**
     * Get the observedGeneration property: The version of the replicaSet associated with the AD connector custom
     * resource.
     * 
     * @return the observedGeneration value.
     */
    public Long observedGeneration() {
        return this.observedGeneration;
    }

    /**
     * Set the observedGeneration property: The version of the replicaSet associated with the AD connector custom
     * resource.
     * 
     * @param observedGeneration the observedGeneration value to set.
     * @return the ActiveDirectoryConnectorStatus object itself.
     */
    public ActiveDirectoryConnectorStatus withObservedGeneration(Long observedGeneration) {
        this.observedGeneration = observedGeneration;
        return this;
    }

    /**
     * Get the state property: The state of the AD connector custom resource.
     * 
     * @return the state value.
     */
    public String state() {
        return this.state;
    }

    /**
     * Set the state property: The state of the AD connector custom resource.
     * 
     * @param state the state value to set.
     * @return the ActiveDirectoryConnectorStatus object itself.
     */
    public ActiveDirectoryConnectorStatus withState(String state) {
        this.state = state;
        return this;
    }

    /**
     * Get the additionalProperties property: The status of the Kubernetes custom resource.
     * 
     * @return the additionalProperties value.
     */
    public Map<String, Object> additionalProperties() {
        return this.additionalProperties;
    }

    /**
     * Set the additionalProperties property: The status of the Kubernetes custom resource.
     * 
     * @param additionalProperties the additionalProperties value to set.
     * @return the ActiveDirectoryConnectorStatus object itself.
     */
    public ActiveDirectoryConnectorStatus withAdditionalProperties(Map<String, Object> additionalProperties) {
        this.additionalProperties = additionalProperties;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("lastUpdateTime", this.lastUpdateTime);
        jsonWriter.writeNumberField("observedGeneration", this.observedGeneration);
        jsonWriter.writeStringField("state", this.state);
        if (additionalProperties != null) {
            for (Map.Entry<String, Object> additionalProperty : additionalProperties.entrySet()) {
                jsonWriter.writeUntypedField(additionalProperty.getKey(), additionalProperty.getValue());
            }
        }
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ActiveDirectoryConnectorStatus from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ActiveDirectoryConnectorStatus if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ActiveDirectoryConnectorStatus.
     */
    public static ActiveDirectoryConnectorStatus fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ActiveDirectoryConnectorStatus deserializedActiveDirectoryConnectorStatus
                = new ActiveDirectoryConnectorStatus();
            Map<String, Object> additionalProperties = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("lastUpdateTime".equals(fieldName)) {
                    deserializedActiveDirectoryConnectorStatus.lastUpdateTime = reader.getString();
                } else if ("observedGeneration".equals(fieldName)) {
                    deserializedActiveDirectoryConnectorStatus.observedGeneration
                        = reader.getNullable(JsonReader::getLong);
                } else if ("state".equals(fieldName)) {
                    deserializedActiveDirectoryConnectorStatus.state = reader.getString();
                } else {
                    if (additionalProperties == null) {
                        additionalProperties = new LinkedHashMap<>();
                    }

                    additionalProperties.put(fieldName, reader.readUntyped());
                }
            }
            deserializedActiveDirectoryConnectorStatus.additionalProperties = additionalProperties;

            return deserializedActiveDirectoryConnectorStatus;
        });
    }
}
