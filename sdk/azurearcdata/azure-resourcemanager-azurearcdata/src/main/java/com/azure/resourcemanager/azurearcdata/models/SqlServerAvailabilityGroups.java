// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of SqlServerAvailabilityGroups.
 */
public interface SqlServerAvailabilityGroups {
    /**
     * Deletes an Arc Sql Server availability group resource.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param availabilityGroupName Name of SQL Availability Group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String sqlServerInstanceName, String availabilityGroupName);

    /**
     * Deletes an Arc Sql Server availability group resource.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param availabilityGroupName Name of SQL Availability Group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String sqlServerInstanceName, String availabilityGroupName, Context context);

    /**
     * Retrieves an Arc Sql Server availability group.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param availabilityGroupName Name of SQL Availability Group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group along with {@link Response}.
     */
    Response<SqlServerAvailabilityGroupResource> getWithResponse(String resourceGroupName, String sqlServerInstanceName,
        String availabilityGroupName, Context context);

    /**
     * Retrieves an Arc Sql Server availability group.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param availabilityGroupName Name of SQL Availability Group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group.
     */
    SqlServerAvailabilityGroupResource get(String resourceGroupName, String sqlServerInstanceName,
        String availabilityGroupName);

    /**
     * Retrieves detailed properties of the Availability Group.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param availabilityGroupName Name of SQL Availability Group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group along with {@link Response}.
     */
    Response<SqlServerAvailabilityGroupResource> detailViewWithResponse(String resourceGroupName,
        String sqlServerInstanceName, String availabilityGroupName, Context context);

    /**
     * Retrieves detailed properties of the Availability Group.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param availabilityGroupName Name of SQL Availability Group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group.
     */
    SqlServerAvailabilityGroupResource detailView(String resourceGroupName, String sqlServerInstanceName,
        String availabilityGroupName);

    /**
     * Request manual failover of the availability group to this server.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param availabilityGroupName Name of SQL Availability Group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group along with {@link Response}.
     */
    Response<SqlServerAvailabilityGroupResource> failoverWithResponse(String resourceGroupName,
        String sqlServerInstanceName, String availabilityGroupName, Context context);

    /**
     * Request manual failover of the availability group to this server.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param availabilityGroupName Name of SQL Availability Group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group.
     */
    SqlServerAvailabilityGroupResource failover(String resourceGroupName, String sqlServerInstanceName,
        String availabilityGroupName);

    /**
     * Request forced failover of the availability group to this server.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param availabilityGroupName Name of SQL Availability Group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group along with {@link Response}.
     */
    Response<SqlServerAvailabilityGroupResource> forceFailoverAllowDataLossWithResponse(String resourceGroupName,
        String sqlServerInstanceName, String availabilityGroupName, Context context);

    /**
     * Request forced failover of the availability group to this server.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param availabilityGroupName Name of SQL Availability Group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group.
     */
    SqlServerAvailabilityGroupResource forceFailoverAllowDataLoss(String resourceGroupName,
        String sqlServerInstanceName, String availabilityGroupName);

    /**
     * Create a SQL Server availability group.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param createAgConfiguration The configuration for the new SQL Server availability group resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group.
     */
    SqlServerAvailabilityGroupResource createAvailabilityGroup(String resourceGroupName, String sqlServerInstanceName,
        AvailabilityGroupCreateUpdateConfiguration createAgConfiguration);

    /**
     * Create a SQL Server availability group.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param createAgConfiguration The configuration for the new SQL Server availability group resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group.
     */
    SqlServerAvailabilityGroupResource createAvailabilityGroup(String resourceGroupName, String sqlServerInstanceName,
        AvailabilityGroupCreateUpdateConfiguration createAgConfiguration, Context context);

    /**
     * Create a SQL Server distributed availability group.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param createDagConfiguration The configuration for the new SQL Server availability group resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group.
     */
    SqlServerAvailabilityGroupResource createDistributedAvailabilityGroup(String resourceGroupName,
        String sqlServerInstanceName, DistributedAvailabilityGroupCreateUpdateConfiguration createDagConfiguration);

    /**
     * Create a SQL Server distributed availability group.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param createDagConfiguration The configuration for the new SQL Server availability group resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group.
     */
    SqlServerAvailabilityGroupResource createDistributedAvailabilityGroup(String resourceGroupName,
        String sqlServerInstanceName, DistributedAvailabilityGroupCreateUpdateConfiguration createDagConfiguration,
        Context context);

    /**
     * Create an Managed Instance Link.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param createManagedInstanceLinkConfiguration The configuration for the new Managed Instance Link resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group.
     */
    SqlServerAvailabilityGroupResource createManagedInstanceLink(String resourceGroupName, String sqlServerInstanceName,
        ManagedInstanceLinkCreateUpdateConfiguration createManagedInstanceLinkConfiguration);

    /**
     * Create an Managed Instance Link.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param createManagedInstanceLinkConfiguration The configuration for the new Managed Instance Link resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group.
     */
    SqlServerAvailabilityGroupResource createManagedInstanceLink(String resourceGroupName, String sqlServerInstanceName,
        ManagedInstanceLinkCreateUpdateConfiguration createManagedInstanceLinkConfiguration, Context context);

    /**
     * Request adding database(s) to an existing availability group.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param availabilityGroupName Name of SQL Availability Group.
     * @param databases The database names to add to the SQL Server availability group resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group along with {@link Response}.
     */
    Response<SqlServerAvailabilityGroupResource> addDatabasesWithResponse(String resourceGroupName,
        String sqlServerInstanceName, String availabilityGroupName, Databases databases, Context context);

    /**
     * Request adding database(s) to an existing availability group.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param availabilityGroupName Name of SQL Availability Group.
     * @param databases The database names to add to the SQL Server availability group resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group.
     */
    SqlServerAvailabilityGroupResource addDatabases(String resourceGroupName, String sqlServerInstanceName,
        String availabilityGroupName, Databases databases);

    /**
     * Request failover of Arc Sql Server to Azure Managed Instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param availabilityGroupName Name of SQL Availability Group.
     * @param managedInstanceResourceId The azure resource identifier for the Sql Managed Instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group.
     */
    SqlServerAvailabilityGroupResource failoverMiLink(String resourceGroupName, String sqlServerInstanceName,
        String availabilityGroupName, FailoverMiLinkResourceId managedInstanceResourceId);

    /**
     * Request failover of Arc Sql Server to Azure Managed Instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param availabilityGroupName Name of SQL Availability Group.
     * @param managedInstanceResourceId The azure resource identifier for the Sql Managed Instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group.
     */
    SqlServerAvailabilityGroupResource failoverMiLink(String resourceGroupName, String sqlServerInstanceName,
        String availabilityGroupName, FailoverMiLinkResourceId managedInstanceResourceId, Context context);

    /**
     * Request removing database(s) from an existing availability group.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param availabilityGroupName Name of SQL Availability Group.
     * @param databases The database names to remove from the SQL Server availability group resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group along with {@link Response}.
     */
    Response<SqlServerAvailabilityGroupResource> removeDatabasesWithResponse(String resourceGroupName,
        String sqlServerInstanceName, String availabilityGroupName, Databases databases, Context context);

    /**
     * Request removing database(s) from an existing availability group.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param availabilityGroupName Name of SQL Availability Group.
     * @param databases The database names to remove from the SQL Server availability group resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group.
     */
    SqlServerAvailabilityGroupResource removeDatabases(String resourceGroupName, String sqlServerInstanceName,
        String availabilityGroupName, Databases databases);

    /**
     * List the availability group associated with the given Arc Sql Server.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of Arc Sql Server Availability Groups as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SqlServerAvailabilityGroupResource> list(String resourceGroupName, String sqlServerInstanceName);

    /**
     * List the availability group associated with the given Arc Sql Server.
     * 
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of Arc Sql Server Availability Groups as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SqlServerAvailabilityGroupResource> list(String resourceGroupName, String sqlServerInstanceName,
        Context context);

    /**
     * Retrieves an Arc Sql Server availability group.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group along with {@link Response}.
     */
    SqlServerAvailabilityGroupResource getById(String id);

    /**
     * Retrieves an Arc Sql Server availability group.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group along with {@link Response}.
     */
    Response<SqlServerAvailabilityGroupResource> getByIdWithResponse(String id, Context context);

    /**
     * Deletes an Arc Sql Server availability group resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes an Arc Sql Server availability group resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new SqlServerAvailabilityGroupResource resource.
     * 
     * @param name resource name.
     * @return the first stage of the new SqlServerAvailabilityGroupResource definition.
     */
    SqlServerAvailabilityGroupResource.DefinitionStages.Blank define(String name);
}
