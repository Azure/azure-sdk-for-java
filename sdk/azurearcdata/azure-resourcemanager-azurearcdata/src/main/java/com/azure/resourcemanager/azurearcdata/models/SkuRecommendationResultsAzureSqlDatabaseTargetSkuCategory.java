// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The SkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory model.
 */
@Fluent
public final class SkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory
    implements JsonSerializable<SkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory> {
    /*
     * The compute tier of the target SKU.
     */
    private String computeTier;

    /*
     * The hardware type of the target SKU.
     */
    private String hardwareType;

    /*
     * The SQL purchasing model of the target SKU.
     */
    private String sqlPurchasingModel;

    /*
     * The SQL service tier of the target SKU.
     */
    private String sqlServiceTier;

    /*
     * Indicates if zone redundancy is available for the target SKU.
     */
    private Boolean zoneRedundancyAvailable;

    /**
     * Creates an instance of SkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory class.
     */
    public SkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory() {
    }

    /**
     * Get the computeTier property: The compute tier of the target SKU.
     * 
     * @return the computeTier value.
     */
    public String computeTier() {
        return this.computeTier;
    }

    /**
     * Set the computeTier property: The compute tier of the target SKU.
     * 
     * @param computeTier the computeTier value to set.
     * @return the SkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory object itself.
     */
    public SkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory withComputeTier(String computeTier) {
        this.computeTier = computeTier;
        return this;
    }

    /**
     * Get the hardwareType property: The hardware type of the target SKU.
     * 
     * @return the hardwareType value.
     */
    public String hardwareType() {
        return this.hardwareType;
    }

    /**
     * Set the hardwareType property: The hardware type of the target SKU.
     * 
     * @param hardwareType the hardwareType value to set.
     * @return the SkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory object itself.
     */
    public SkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory withHardwareType(String hardwareType) {
        this.hardwareType = hardwareType;
        return this;
    }

    /**
     * Get the sqlPurchasingModel property: The SQL purchasing model of the target SKU.
     * 
     * @return the sqlPurchasingModel value.
     */
    public String sqlPurchasingModel() {
        return this.sqlPurchasingModel;
    }

    /**
     * Set the sqlPurchasingModel property: The SQL purchasing model of the target SKU.
     * 
     * @param sqlPurchasingModel the sqlPurchasingModel value to set.
     * @return the SkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory object itself.
     */
    public SkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory withSqlPurchasingModel(String sqlPurchasingModel) {
        this.sqlPurchasingModel = sqlPurchasingModel;
        return this;
    }

    /**
     * Get the sqlServiceTier property: The SQL service tier of the target SKU.
     * 
     * @return the sqlServiceTier value.
     */
    public String sqlServiceTier() {
        return this.sqlServiceTier;
    }

    /**
     * Set the sqlServiceTier property: The SQL service tier of the target SKU.
     * 
     * @param sqlServiceTier the sqlServiceTier value to set.
     * @return the SkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory object itself.
     */
    public SkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory withSqlServiceTier(String sqlServiceTier) {
        this.sqlServiceTier = sqlServiceTier;
        return this;
    }

    /**
     * Get the zoneRedundancyAvailable property: Indicates if zone redundancy is available for the target SKU.
     * 
     * @return the zoneRedundancyAvailable value.
     */
    public Boolean zoneRedundancyAvailable() {
        return this.zoneRedundancyAvailable;
    }

    /**
     * Set the zoneRedundancyAvailable property: Indicates if zone redundancy is available for the target SKU.
     * 
     * @param zoneRedundancyAvailable the zoneRedundancyAvailable value to set.
     * @return the SkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory object itself.
     */
    public SkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory
        withZoneRedundancyAvailable(Boolean zoneRedundancyAvailable) {
        this.zoneRedundancyAvailable = zoneRedundancyAvailable;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("computeTier", this.computeTier);
        jsonWriter.writeStringField("hardwareType", this.hardwareType);
        jsonWriter.writeStringField("sqlPurchasingModel", this.sqlPurchasingModel);
        jsonWriter.writeStringField("sqlServiceTier", this.sqlServiceTier);
        jsonWriter.writeBooleanField("zoneRedundancyAvailable", this.zoneRedundancyAvailable);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory if the JsonReader was pointing
     * to an instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the
     * SkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory.
     */
    public static SkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            SkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory deserializedSkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory
                = new SkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("computeTier".equals(fieldName)) {
                    deserializedSkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory.computeTier
                        = reader.getString();
                } else if ("hardwareType".equals(fieldName)) {
                    deserializedSkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory.hardwareType
                        = reader.getString();
                } else if ("sqlPurchasingModel".equals(fieldName)) {
                    deserializedSkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory.sqlPurchasingModel
                        = reader.getString();
                } else if ("sqlServiceTier".equals(fieldName)) {
                    deserializedSkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory.sqlServiceTier
                        = reader.getString();
                } else if ("zoneRedundancyAvailable".equals(fieldName)) {
                    deserializedSkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory.zoneRedundancyAvailable
                        = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSkuRecommendationResultsAzureSqlDatabaseTargetSkuCategory;
        });
    }
}
