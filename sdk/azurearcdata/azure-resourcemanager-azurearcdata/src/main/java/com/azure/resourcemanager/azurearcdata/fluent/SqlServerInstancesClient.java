// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.azurearcdata.fluent.models.SqlServerInstanceInner;
import com.azure.resourcemanager.azurearcdata.models.SqlServerInstanceUpdate;

/** An instance of this class provides access to all the operations defined in SqlServerInstancesClient. */
public interface SqlServerInstancesClient {
    /**
     * List sqlServerInstance resources in the subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of SqlServerInstance.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SqlServerInstanceInner> list();

    /**
     * List sqlServerInstance resources in the subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of SqlServerInstance.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SqlServerInstanceInner> list(Context context);

    /**
     * Gets all sqlServerInstances in a resource group.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all sqlServerInstances in a resource group.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SqlServerInstanceInner> listByResourceGroup(String resourceGroupName);

    /**
     * Gets all sqlServerInstances in a resource group.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all sqlServerInstances in a resource group.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SqlServerInstanceInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Retrieves a SQL Server Instance resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SqlServerInstance.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SqlServerInstanceInner getByResourceGroup(String resourceGroupName, String sqlServerInstanceName);

    /**
     * Retrieves a SQL Server Instance resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SqlServerInstance.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SqlServerInstanceInner> getByResourceGroupWithResponse(
        String resourceGroupName, String sqlServerInstanceName, Context context);

    /**
     * Creates or replaces a SQL Server Instance resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName The name of SQL Server Instance.
     * @param sqlServerInstance The SQL Server Instance to be created or updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SqlServerInstance.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<SqlServerInstanceInner>, SqlServerInstanceInner> beginCreate(
        String resourceGroupName, String sqlServerInstanceName, SqlServerInstanceInner sqlServerInstance);

    /**
     * Creates or replaces a SQL Server Instance resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName The name of SQL Server Instance.
     * @param sqlServerInstance The SQL Server Instance to be created or updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SqlServerInstance.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<SqlServerInstanceInner>, SqlServerInstanceInner> beginCreate(
        String resourceGroupName,
        String sqlServerInstanceName,
        SqlServerInstanceInner sqlServerInstance,
        Context context);

    /**
     * Creates or replaces a SQL Server Instance resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName The name of SQL Server Instance.
     * @param sqlServerInstance The SQL Server Instance to be created or updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SqlServerInstance.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SqlServerInstanceInner create(
        String resourceGroupName, String sqlServerInstanceName, SqlServerInstanceInner sqlServerInstance);

    /**
     * Creates or replaces a SQL Server Instance resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName The name of SQL Server Instance.
     * @param sqlServerInstance The SQL Server Instance to be created or updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SqlServerInstance.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SqlServerInstanceInner create(
        String resourceGroupName,
        String sqlServerInstanceName,
        SqlServerInstanceInner sqlServerInstance,
        Context context);

    /**
     * Deletes a SQL Server Instance resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName The name of SQL Server Instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String sqlServerInstanceName);

    /**
     * Deletes a SQL Server Instance resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName The name of SQL Server Instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String sqlServerInstanceName, Context context);

    /**
     * Updates a SQL Server Instance resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of sqlServerInstance.
     * @param parameters The SQL Server Instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SqlServerInstance.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SqlServerInstanceInner update(
        String resourceGroupName, String sqlServerInstanceName, SqlServerInstanceUpdate parameters);

    /**
     * Updates a SQL Server Instance resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of sqlServerInstance.
     * @param parameters The SQL Server Instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SqlServerInstance.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SqlServerInstanceInner> updateWithResponse(
        String resourceGroupName, String sqlServerInstanceName, SqlServerInstanceUpdate parameters, Context context);
}
