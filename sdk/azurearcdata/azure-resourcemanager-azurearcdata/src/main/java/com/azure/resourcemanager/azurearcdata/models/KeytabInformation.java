// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Keytab used for authenticate with Active Directory.
 */
@Fluent
public final class KeytabInformation implements JsonSerializable<KeytabInformation> {
    /*
     * A base64-encoded keytab.
     */
    private String keytab;

    /**
     * Creates an instance of KeytabInformation class.
     */
    public KeytabInformation() {
    }

    /**
     * Get the keytab property: A base64-encoded keytab.
     * 
     * @return the keytab value.
     */
    public String keytab() {
        return this.keytab;
    }

    /**
     * Set the keytab property: A base64-encoded keytab.
     * 
     * @param keytab the keytab value to set.
     * @return the KeytabInformation object itself.
     */
    public KeytabInformation withKeytab(String keytab) {
        this.keytab = keytab;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("keytab", this.keytab);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of KeytabInformation from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of KeytabInformation if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the KeytabInformation.
     */
    public static KeytabInformation fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            KeytabInformation deserializedKeytabInformation = new KeytabInformation();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("keytab".equals(fieldName)) {
                    deserializedKeytabInformation.keytab = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedKeytabInformation;
        });
    }
}
