// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.LinkedHashMap;
import java.util.Map;

/**
 * The raw kubernetes information.
 */
@Fluent
public final class SqlManagedInstanceK8SRaw implements JsonSerializable<SqlManagedInstanceK8SRaw> {
    /*
     * The kubernetes spec information.
     */
    private SqlManagedInstanceK8SSpec spec;

    /*
     * The raw kubernetes information.
     */
    private Map<String, Object> additionalProperties;

    /**
     * Creates an instance of SqlManagedInstanceK8SRaw class.
     */
    public SqlManagedInstanceK8SRaw() {
    }

    /**
     * Get the spec property: The kubernetes spec information.
     * 
     * @return the spec value.
     */
    public SqlManagedInstanceK8SSpec spec() {
        return this.spec;
    }

    /**
     * Set the spec property: The kubernetes spec information.
     * 
     * @param spec the spec value to set.
     * @return the SqlManagedInstanceK8SRaw object itself.
     */
    public SqlManagedInstanceK8SRaw withSpec(SqlManagedInstanceK8SSpec spec) {
        this.spec = spec;
        return this;
    }

    /**
     * Get the additionalProperties property: The raw kubernetes information.
     * 
     * @return the additionalProperties value.
     */
    public Map<String, Object> additionalProperties() {
        return this.additionalProperties;
    }

    /**
     * Set the additionalProperties property: The raw kubernetes information.
     * 
     * @param additionalProperties the additionalProperties value to set.
     * @return the SqlManagedInstanceK8SRaw object itself.
     */
    public SqlManagedInstanceK8SRaw withAdditionalProperties(Map<String, Object> additionalProperties) {
        this.additionalProperties = additionalProperties;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (spec() != null) {
            spec().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("spec", this.spec);
        if (additionalProperties != null) {
            for (Map.Entry<String, Object> additionalProperty : additionalProperties.entrySet()) {
                jsonWriter.writeUntypedField(additionalProperty.getKey(), additionalProperty.getValue());
            }
        }
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SqlManagedInstanceK8SRaw from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SqlManagedInstanceK8SRaw if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SqlManagedInstanceK8SRaw.
     */
    public static SqlManagedInstanceK8SRaw fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SqlManagedInstanceK8SRaw deserializedSqlManagedInstanceK8SRaw = new SqlManagedInstanceK8SRaw();
            Map<String, Object> additionalProperties = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("spec".equals(fieldName)) {
                    deserializedSqlManagedInstanceK8SRaw.spec = SqlManagedInstanceK8SSpec.fromJson(reader);
                } else {
                    if (additionalProperties == null) {
                        additionalProperties = new LinkedHashMap<>();
                    }

                    additionalProperties.put(fieldName, reader.readUntyped());
                }
            }
            deserializedSqlManagedInstanceK8SRaw.additionalProperties = additionalProperties;

            return deserializedSqlManagedInstanceK8SRaw;
        });
    }
}
