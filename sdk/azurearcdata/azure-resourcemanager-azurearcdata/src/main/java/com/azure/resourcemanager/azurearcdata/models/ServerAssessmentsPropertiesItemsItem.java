// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The ServerAssessmentsPropertiesItemsItem model.
 */
@Fluent
public final class ServerAssessmentsPropertiesItemsItem
    implements JsonSerializable<ServerAssessmentsPropertiesItemsItem> {
    /*
     * The impactDetail property.
     */
    private String impactDetail;

    /*
     * The name property.
     */
    private String name;

    /*
     * The objectType property.
     */
    private String objectType;

    /**
     * Creates an instance of ServerAssessmentsPropertiesItemsItem class.
     */
    public ServerAssessmentsPropertiesItemsItem() {
    }

    /**
     * Get the impactDetail property: The impactDetail property.
     * 
     * @return the impactDetail value.
     */
    public String impactDetail() {
        return this.impactDetail;
    }

    /**
     * Set the impactDetail property: The impactDetail property.
     * 
     * @param impactDetail the impactDetail value to set.
     * @return the ServerAssessmentsPropertiesItemsItem object itself.
     */
    public ServerAssessmentsPropertiesItemsItem withImpactDetail(String impactDetail) {
        this.impactDetail = impactDetail;
        return this;
    }

    /**
     * Get the name property: The name property.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The name property.
     * 
     * @param name the name value to set.
     * @return the ServerAssessmentsPropertiesItemsItem object itself.
     */
    public ServerAssessmentsPropertiesItemsItem withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the objectType property: The objectType property.
     * 
     * @return the objectType value.
     */
    public String objectType() {
        return this.objectType;
    }

    /**
     * Set the objectType property: The objectType property.
     * 
     * @param objectType the objectType value to set.
     * @return the ServerAssessmentsPropertiesItemsItem object itself.
     */
    public ServerAssessmentsPropertiesItemsItem withObjectType(String objectType) {
        this.objectType = objectType;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("impactDetail", this.impactDetail);
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeStringField("objectType", this.objectType);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ServerAssessmentsPropertiesItemsItem from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ServerAssessmentsPropertiesItemsItem if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ServerAssessmentsPropertiesItemsItem.
     */
    public static ServerAssessmentsPropertiesItemsItem fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ServerAssessmentsPropertiesItemsItem deserializedServerAssessmentsPropertiesItemsItem
                = new ServerAssessmentsPropertiesItemsItem();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("impactDetail".equals(fieldName)) {
                    deserializedServerAssessmentsPropertiesItemsItem.impactDetail = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedServerAssessmentsPropertiesItemsItem.name = reader.getString();
                } else if ("objectType".equals(fieldName)) {
                    deserializedServerAssessmentsPropertiesItemsItem.objectType = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedServerAssessmentsPropertiesItemsItem;
        });
    }
}
