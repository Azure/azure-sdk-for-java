// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The resource model definition representing SKU for Azure Database for PostgresSQL - Azure Arc. */
@Fluent
public final class PostgresInstanceSku extends CommonSku {
    /*
     * This field is required to be implemented by the Resource Provider if the
     * service has more than one tier.
     */
    @JsonProperty(value = "tier")
    private PostgresInstanceSkuTier tier;

    /**
     * Get the tier property: This field is required to be implemented by the Resource Provider if the service has more
     * than one tier.
     *
     * @return the tier value.
     */
    public PostgresInstanceSkuTier tier() {
        return this.tier;
    }

    /**
     * Set the tier property: This field is required to be implemented by the Resource Provider if the service has more
     * than one tier.
     *
     * @param tier the tier value to set.
     * @return the PostgresInstanceSku object itself.
     */
    public PostgresInstanceSku withTier(PostgresInstanceSkuTier tier) {
        this.tier = tier;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public PostgresInstanceSku withName(String name) {
        super.withName(name);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public PostgresInstanceSku withDev(Boolean dev) {
        super.withDev(dev);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public PostgresInstanceSku withSize(String size) {
        super.withSize(size);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public PostgresInstanceSku withFamily(String family) {
        super.withFamily(family);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public PostgresInstanceSku withCapacity(Integer capacity) {
        super.withCapacity(capacity);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
