// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The SKU recommendation summary.
 */
@Fluent
public final class SkuRecommendationSummary implements JsonSerializable<SkuRecommendationSummary> {
    /*
     * Number of blocker issues to fix before migrating this database to the target platform.
     */
    private Integer numOfBlockerIssues;

    /*
     * The target recommendation Status for this database.
     */
    private RecommendationStatus recommendationStatus;

    /**
     * Creates an instance of SkuRecommendationSummary class.
     */
    public SkuRecommendationSummary() {
    }

    /**
     * Get the numOfBlockerIssues property: Number of blocker issues to fix before migrating this database to the target
     * platform.
     * 
     * @return the numOfBlockerIssues value.
     */
    public Integer numOfBlockerIssues() {
        return this.numOfBlockerIssues;
    }

    /**
     * Set the numOfBlockerIssues property: Number of blocker issues to fix before migrating this database to the target
     * platform.
     * 
     * @param numOfBlockerIssues the numOfBlockerIssues value to set.
     * @return the SkuRecommendationSummary object itself.
     */
    public SkuRecommendationSummary withNumOfBlockerIssues(Integer numOfBlockerIssues) {
        this.numOfBlockerIssues = numOfBlockerIssues;
        return this;
    }

    /**
     * Get the recommendationStatus property: The target recommendation Status for this database.
     * 
     * @return the recommendationStatus value.
     */
    public RecommendationStatus recommendationStatus() {
        return this.recommendationStatus;
    }

    /**
     * Set the recommendationStatus property: The target recommendation Status for this database.
     * 
     * @param recommendationStatus the recommendationStatus value to set.
     * @return the SkuRecommendationSummary object itself.
     */
    public SkuRecommendationSummary withRecommendationStatus(RecommendationStatus recommendationStatus) {
        this.recommendationStatus = recommendationStatus;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("numOfBlockerIssues", this.numOfBlockerIssues);
        jsonWriter.writeStringField("recommendationStatus",
            this.recommendationStatus == null ? null : this.recommendationStatus.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SkuRecommendationSummary from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SkuRecommendationSummary if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SkuRecommendationSummary.
     */
    public static SkuRecommendationSummary fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SkuRecommendationSummary deserializedSkuRecommendationSummary = new SkuRecommendationSummary();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("numOfBlockerIssues".equals(fieldName)) {
                    deserializedSkuRecommendationSummary.numOfBlockerIssues = reader.getNullable(JsonReader::getInt);
                } else if ("recommendationStatus".equals(fieldName)) {
                    deserializedSkuRecommendationSummary.recommendationStatus
                        = RecommendationStatus.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSkuRecommendationSummary;
        });
    }
}
