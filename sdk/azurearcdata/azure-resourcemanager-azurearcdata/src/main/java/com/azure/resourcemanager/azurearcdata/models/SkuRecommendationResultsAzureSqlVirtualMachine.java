// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * SKU Recommendation results for Azure SQL Virtual Machine.
 */
@Fluent
public final class SkuRecommendationResultsAzureSqlVirtualMachine
    implements JsonSerializable<SkuRecommendationResultsAzureSqlVirtualMachine> {
    /*
     * The target recommendation Status for this database.
     */
    private RecommendationStatus recommendationStatus;

    /*
     * Number of blocker issues to fix before migrating to the target platform.
     */
    private Integer numberOfServerBlockerIssues;

    /*
     * The Monthly cost of the particular SKU.
     */
    private SkuRecommendationResultsMonthlyCost monthlyCost;

    /*
     * The targetSku property.
     */
    private SkuRecommendationResultsAzureSqlVirtualMachineTargetSku targetSku;

    /**
     * Creates an instance of SkuRecommendationResultsAzureSqlVirtualMachine class.
     */
    public SkuRecommendationResultsAzureSqlVirtualMachine() {
    }

    /**
     * Get the recommendationStatus property: The target recommendation Status for this database.
     * 
     * @return the recommendationStatus value.
     */
    public RecommendationStatus recommendationStatus() {
        return this.recommendationStatus;
    }

    /**
     * Set the recommendationStatus property: The target recommendation Status for this database.
     * 
     * @param recommendationStatus the recommendationStatus value to set.
     * @return the SkuRecommendationResultsAzureSqlVirtualMachine object itself.
     */
    public SkuRecommendationResultsAzureSqlVirtualMachine
        withRecommendationStatus(RecommendationStatus recommendationStatus) {
        this.recommendationStatus = recommendationStatus;
        return this;
    }

    /**
     * Get the numberOfServerBlockerIssues property: Number of blocker issues to fix before migrating to the target
     * platform.
     * 
     * @return the numberOfServerBlockerIssues value.
     */
    public Integer numberOfServerBlockerIssues() {
        return this.numberOfServerBlockerIssues;
    }

    /**
     * Set the numberOfServerBlockerIssues property: Number of blocker issues to fix before migrating to the target
     * platform.
     * 
     * @param numberOfServerBlockerIssues the numberOfServerBlockerIssues value to set.
     * @return the SkuRecommendationResultsAzureSqlVirtualMachine object itself.
     */
    public SkuRecommendationResultsAzureSqlVirtualMachine
        withNumberOfServerBlockerIssues(Integer numberOfServerBlockerIssues) {
        this.numberOfServerBlockerIssues = numberOfServerBlockerIssues;
        return this;
    }

    /**
     * Get the monthlyCost property: The Monthly cost of the particular SKU.
     * 
     * @return the monthlyCost value.
     */
    public SkuRecommendationResultsMonthlyCost monthlyCost() {
        return this.monthlyCost;
    }

    /**
     * Set the monthlyCost property: The Monthly cost of the particular SKU.
     * 
     * @param monthlyCost the monthlyCost value to set.
     * @return the SkuRecommendationResultsAzureSqlVirtualMachine object itself.
     */
    public SkuRecommendationResultsAzureSqlVirtualMachine
        withMonthlyCost(SkuRecommendationResultsMonthlyCost monthlyCost) {
        this.monthlyCost = monthlyCost;
        return this;
    }

    /**
     * Get the targetSku property: The targetSku property.
     * 
     * @return the targetSku value.
     */
    public SkuRecommendationResultsAzureSqlVirtualMachineTargetSku targetSku() {
        return this.targetSku;
    }

    /**
     * Set the targetSku property: The targetSku property.
     * 
     * @param targetSku the targetSku value to set.
     * @return the SkuRecommendationResultsAzureSqlVirtualMachine object itself.
     */
    public SkuRecommendationResultsAzureSqlVirtualMachine
        withTargetSku(SkuRecommendationResultsAzureSqlVirtualMachineTargetSku targetSku) {
        this.targetSku = targetSku;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (monthlyCost() != null) {
            monthlyCost().validate();
        }
        if (targetSku() != null) {
            targetSku().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("recommendationStatus",
            this.recommendationStatus == null ? null : this.recommendationStatus.toString());
        jsonWriter.writeNumberField("numberOfServerBlockerIssues", this.numberOfServerBlockerIssues);
        jsonWriter.writeJsonField("monthlyCost", this.monthlyCost);
        jsonWriter.writeJsonField("targetSku", this.targetSku);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SkuRecommendationResultsAzureSqlVirtualMachine from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SkuRecommendationResultsAzureSqlVirtualMachine if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SkuRecommendationResultsAzureSqlVirtualMachine.
     */
    public static SkuRecommendationResultsAzureSqlVirtualMachine fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SkuRecommendationResultsAzureSqlVirtualMachine deserializedSkuRecommendationResultsAzureSqlVirtualMachine
                = new SkuRecommendationResultsAzureSqlVirtualMachine();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("recommendationStatus".equals(fieldName)) {
                    deserializedSkuRecommendationResultsAzureSqlVirtualMachine.recommendationStatus
                        = RecommendationStatus.fromString(reader.getString());
                } else if ("numberOfServerBlockerIssues".equals(fieldName)) {
                    deserializedSkuRecommendationResultsAzureSqlVirtualMachine.numberOfServerBlockerIssues
                        = reader.getNullable(JsonReader::getInt);
                } else if ("monthlyCost".equals(fieldName)) {
                    deserializedSkuRecommendationResultsAzureSqlVirtualMachine.monthlyCost
                        = SkuRecommendationResultsMonthlyCost.fromJson(reader);
                } else if ("targetSku".equals(fieldName)) {
                    deserializedSkuRecommendationResultsAzureSqlVirtualMachine.targetSku
                        = SkuRecommendationResultsAzureSqlVirtualMachineTargetSku.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSkuRecommendationResultsAzureSqlVirtualMachine;
        });
    }
}
