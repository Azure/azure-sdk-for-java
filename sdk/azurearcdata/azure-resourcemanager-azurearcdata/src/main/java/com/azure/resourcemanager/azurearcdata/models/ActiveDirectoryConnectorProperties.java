// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The properties of an Active Directory connector resource. */
@Fluent
public final class ActiveDirectoryConnectorProperties {
    /*
     * Username and password for domain service account authentication.
     */
    @JsonProperty(value = "domainServiceAccountLoginInformation")
    private BasicLoginInformation domainServiceAccountLoginInformation;

    /*
     * The provisioning state of the Active Directory connector resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private String provisioningState;

    /*
     * null
     */
    @JsonProperty(value = "spec", required = true)
    private ActiveDirectoryConnectorSpec spec;

    /*
     * null
     */
    @JsonProperty(value = "status")
    private ActiveDirectoryConnectorStatus status;

    /**
     * Get the domainServiceAccountLoginInformation property: Username and password for domain service account
     * authentication.
     *
     * @return the domainServiceAccountLoginInformation value.
     */
    public BasicLoginInformation domainServiceAccountLoginInformation() {
        return this.domainServiceAccountLoginInformation;
    }

    /**
     * Set the domainServiceAccountLoginInformation property: Username and password for domain service account
     * authentication.
     *
     * @param domainServiceAccountLoginInformation the domainServiceAccountLoginInformation value to set.
     * @return the ActiveDirectoryConnectorProperties object itself.
     */
    public ActiveDirectoryConnectorProperties withDomainServiceAccountLoginInformation(
        BasicLoginInformation domainServiceAccountLoginInformation) {
        this.domainServiceAccountLoginInformation = domainServiceAccountLoginInformation;
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning state of the Active Directory connector resource.
     *
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the spec property: null.
     *
     * @return the spec value.
     */
    public ActiveDirectoryConnectorSpec spec() {
        return this.spec;
    }

    /**
     * Set the spec property: null.
     *
     * @param spec the spec value to set.
     * @return the ActiveDirectoryConnectorProperties object itself.
     */
    public ActiveDirectoryConnectorProperties withSpec(ActiveDirectoryConnectorSpec spec) {
        this.spec = spec;
        return this;
    }

    /**
     * Get the status property: null.
     *
     * @return the status value.
     */
    public ActiveDirectoryConnectorStatus status() {
        return this.status;
    }

    /**
     * Set the status property: null.
     *
     * @param status the status value to set.
     * @return the ActiveDirectoryConnectorProperties object itself.
     */
    public ActiveDirectoryConnectorProperties withStatus(ActiveDirectoryConnectorStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (domainServiceAccountLoginInformation() != null) {
            domainServiceAccountLoginInformation().validate();
        }
        if (spec() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property spec in model ActiveDirectoryConnectorProperties"));
        } else {
            spec().validate();
        }
        if (status() != null) {
            status().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ActiveDirectoryConnectorProperties.class);
}
