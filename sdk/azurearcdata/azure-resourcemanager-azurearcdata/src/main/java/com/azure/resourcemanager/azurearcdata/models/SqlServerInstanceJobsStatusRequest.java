// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The request for the status of the jobs running on the SQL Server instance.
 */
@Fluent
public final class SqlServerInstanceJobsStatusRequest implements JsonSerializable<SqlServerInstanceJobsStatusRequest> {
    /*
     * The name of the feature to retrieve the job status for.
     */
    private String featureName;

    /*
     * The type of the job to retrieve the status for.
     */
    private String jobType;

    /**
     * Creates an instance of SqlServerInstanceJobsStatusRequest class.
     */
    public SqlServerInstanceJobsStatusRequest() {
    }

    /**
     * Get the featureName property: The name of the feature to retrieve the job status for.
     * 
     * @return the featureName value.
     */
    public String featureName() {
        return this.featureName;
    }

    /**
     * Set the featureName property: The name of the feature to retrieve the job status for.
     * 
     * @param featureName the featureName value to set.
     * @return the SqlServerInstanceJobsStatusRequest object itself.
     */
    public SqlServerInstanceJobsStatusRequest withFeatureName(String featureName) {
        this.featureName = featureName;
        return this;
    }

    /**
     * Get the jobType property: The type of the job to retrieve the status for.
     * 
     * @return the jobType value.
     */
    public String jobType() {
        return this.jobType;
    }

    /**
     * Set the jobType property: The type of the job to retrieve the status for.
     * 
     * @param jobType the jobType value to set.
     * @return the SqlServerInstanceJobsStatusRequest object itself.
     */
    public SqlServerInstanceJobsStatusRequest withJobType(String jobType) {
        this.jobType = jobType;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("featureName", this.featureName);
        jsonWriter.writeStringField("jobType", this.jobType);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SqlServerInstanceJobsStatusRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SqlServerInstanceJobsStatusRequest if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SqlServerInstanceJobsStatusRequest.
     */
    public static SqlServerInstanceJobsStatusRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SqlServerInstanceJobsStatusRequest deserializedSqlServerInstanceJobsStatusRequest
                = new SqlServerInstanceJobsStatusRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("featureName".equals(fieldName)) {
                    deserializedSqlServerInstanceJobsStatusRequest.featureName = reader.getString();
                } else if ("jobType".equals(fieldName)) {
                    deserializedSqlServerInstanceJobsStatusRequest.jobType = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSqlServerInstanceJobsStatusRequest;
        });
    }
}
