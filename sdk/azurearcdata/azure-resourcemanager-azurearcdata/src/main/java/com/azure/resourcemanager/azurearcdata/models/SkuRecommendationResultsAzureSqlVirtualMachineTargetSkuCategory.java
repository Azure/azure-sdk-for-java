// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The SkuRecommendationResultsAzureSqlVirtualMachineTargetSkuCategory model.
 */
@Fluent
public final class SkuRecommendationResultsAzureSqlVirtualMachineTargetSkuCategory
    implements JsonSerializable<SkuRecommendationResultsAzureSqlVirtualMachineTargetSkuCategory> {
    /*
     * Available VM SKUs for the Azure SQL Virtual Machine.
     */
    private List<String> availableVmSkus;

    /*
     * The virtual machine family of the target SKU.
     */
    private String virtualMachineFamily;

    /**
     * Creates an instance of SkuRecommendationResultsAzureSqlVirtualMachineTargetSkuCategory class.
     */
    public SkuRecommendationResultsAzureSqlVirtualMachineTargetSkuCategory() {
    }

    /**
     * Get the availableVmSkus property: Available VM SKUs for the Azure SQL Virtual Machine.
     * 
     * @return the availableVmSkus value.
     */
    public List<String> availableVmSkus() {
        return this.availableVmSkus;
    }

    /**
     * Set the availableVmSkus property: Available VM SKUs for the Azure SQL Virtual Machine.
     * 
     * @param availableVmSkus the availableVmSkus value to set.
     * @return the SkuRecommendationResultsAzureSqlVirtualMachineTargetSkuCategory object itself.
     */
    public SkuRecommendationResultsAzureSqlVirtualMachineTargetSkuCategory
        withAvailableVmSkus(List<String> availableVmSkus) {
        this.availableVmSkus = availableVmSkus;
        return this;
    }

    /**
     * Get the virtualMachineFamily property: The virtual machine family of the target SKU.
     * 
     * @return the virtualMachineFamily value.
     */
    public String virtualMachineFamily() {
        return this.virtualMachineFamily;
    }

    /**
     * Set the virtualMachineFamily property: The virtual machine family of the target SKU.
     * 
     * @param virtualMachineFamily the virtualMachineFamily value to set.
     * @return the SkuRecommendationResultsAzureSqlVirtualMachineTargetSkuCategory object itself.
     */
    public SkuRecommendationResultsAzureSqlVirtualMachineTargetSkuCategory
        withVirtualMachineFamily(String virtualMachineFamily) {
        this.virtualMachineFamily = virtualMachineFamily;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("availableVmSkus", this.availableVmSkus,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("virtualMachineFamily", this.virtualMachineFamily);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SkuRecommendationResultsAzureSqlVirtualMachineTargetSkuCategory from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SkuRecommendationResultsAzureSqlVirtualMachineTargetSkuCategory if the JsonReader was
     * pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the
     * SkuRecommendationResultsAzureSqlVirtualMachineTargetSkuCategory.
     */
    public static SkuRecommendationResultsAzureSqlVirtualMachineTargetSkuCategory fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            SkuRecommendationResultsAzureSqlVirtualMachineTargetSkuCategory deserializedSkuRecommendationResultsAzureSqlVirtualMachineTargetSkuCategory
                = new SkuRecommendationResultsAzureSqlVirtualMachineTargetSkuCategory();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("availableVmSkus".equals(fieldName)) {
                    List<String> availableVmSkus = reader.readArray(reader1 -> reader1.getString());
                    deserializedSkuRecommendationResultsAzureSqlVirtualMachineTargetSkuCategory.availableVmSkus
                        = availableVmSkus;
                } else if ("virtualMachineFamily".equals(fieldName)) {
                    deserializedSkuRecommendationResultsAzureSqlVirtualMachineTargetSkuCategory.virtualMachineFamily
                        = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSkuRecommendationResultsAzureSqlVirtualMachineTargetSkuCategory;
        });
    }
}
