// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.springappdiscovery.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.springappdiscovery.fluent.models.SpringbootserversModelInner;
import com.azure.resourcemanager.springappdiscovery.models.SpringbootserversModel;
import com.azure.resourcemanager.springappdiscovery.models.SpringbootserversPatch;
import com.azure.resourcemanager.springappdiscovery.models.SpringbootserversProperties;
import java.util.Collections;
import java.util.Map;

public final class SpringbootserversModelImpl
    implements SpringbootserversModel, SpringbootserversModel.Definition, SpringbootserversModel.Update {
    private SpringbootserversModelInner innerObject;

    private final com.azure.resourcemanager.springappdiscovery.SpringAppDiscoveryManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SpringbootserversProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public SpringbootserversModelInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.springappdiscovery.SpringAppDiscoveryManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String siteName;

    private String springbootserversName;

    private SpringbootserversPatch updateSpringbootservers;

    public SpringbootserversModelImpl withExistingSpringbootsite(String resourceGroupName, String siteName) {
        this.resourceGroupName = resourceGroupName;
        this.siteName = siteName;
        return this;
    }

    public SpringbootserversModel create() {
        this.innerObject
            = serviceManager.serviceClient().getSpringbootservers().createOrUpdateWithResponse(resourceGroupName,
                siteName, springbootserversName, this.innerModel(), Context.NONE).getValue();
        return this;
    }

    public SpringbootserversModel create(Context context) {
        this.innerObject = serviceManager.serviceClient().getSpringbootservers()
            .createOrUpdateWithResponse(resourceGroupName, siteName, springbootserversName, this.innerModel(), context)
            .getValue();
        return this;
    }

    SpringbootserversModelImpl(String name,
        com.azure.resourcemanager.springappdiscovery.SpringAppDiscoveryManager serviceManager) {
        this.innerObject = new SpringbootserversModelInner();
        this.serviceManager = serviceManager;
        this.springbootserversName = name;
    }

    public SpringbootserversModelImpl update() {
        this.updateSpringbootservers = new SpringbootserversPatch();
        return this;
    }

    public SpringbootserversModel apply() {
        this.innerObject = serviceManager.serviceClient().getSpringbootservers().update(resourceGroupName, siteName,
            springbootserversName, updateSpringbootservers, Context.NONE);
        return this;
    }

    public SpringbootserversModel apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getSpringbootservers().update(resourceGroupName, siteName,
            springbootserversName, updateSpringbootservers, context);
        return this;
    }

    SpringbootserversModelImpl(SpringbootserversModelInner innerObject,
        com.azure.resourcemanager.springappdiscovery.SpringAppDiscoveryManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.siteName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "springbootsites");
        this.springbootserversName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "springbootservers");
    }

    public SpringbootserversModel refresh() {
        this.innerObject = serviceManager.serviceClient().getSpringbootservers()
            .getWithResponse(resourceGroupName, siteName, springbootserversName, Context.NONE).getValue();
        return this;
    }

    public SpringbootserversModel refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getSpringbootservers()
            .getWithResponse(resourceGroupName, siteName, springbootserversName, context).getValue();
        return this;
    }

    public SpringbootserversModelImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateSpringbootservers.withTags(tags);
            return this;
        }
    }

    public SpringbootserversModelImpl withProperties(SpringbootserversProperties properties) {
        if (isInCreateMode()) {
            this.innerModel().withProperties(properties);
            return this;
        } else {
            this.updateSpringbootservers.withProperties(properties);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
