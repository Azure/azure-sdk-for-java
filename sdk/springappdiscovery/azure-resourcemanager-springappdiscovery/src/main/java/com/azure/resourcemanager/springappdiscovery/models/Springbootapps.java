// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.springappdiscovery.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of Springbootapps.
 */
public interface Springbootapps {
    /**
     * Get a springbootapps resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param siteName The springbootsites name.
     * @param springbootappsName The springbootapps name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a springbootapps resource along with {@link Response}.
     */
    Response<SpringbootappsModel> getWithResponse(String resourceGroupName, String siteName, String springbootappsName,
        Context context);

    /**
     * Get a springbootapps resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param siteName The springbootsites name.
     * @param springbootappsName The springbootapps name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a springbootapps resource.
     */
    SpringbootappsModel get(String resourceGroupName, String siteName, String springbootappsName);

    /**
     * Update a springbootapps resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param siteName The springbootsites name.
     * @param springbootappsName The springbootapps name.
     * @param springbootapps Update a springbootapps payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the springbootapps envelope resource definition.
     */
    SpringbootappsModel update(String resourceGroupName, String siteName, String springbootappsName,
        SpringbootappsPatch springbootapps);

    /**
     * Update a springbootapps resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param siteName The springbootsites name.
     * @param springbootappsName The springbootapps name.
     * @param springbootapps Update a springbootapps payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the springbootapps envelope resource definition.
     */
    SpringbootappsModel update(String resourceGroupName, String siteName, String springbootappsName,
        SpringbootappsPatch springbootapps, Context context);

    /**
     * List springbootapps resource by resourceGroup.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param siteName The springbootsites name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the springbootapps list resource definition as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SpringbootappsModel> listByResourceGroup(String resourceGroupName, String siteName);

    /**
     * List springbootapps resource by resourceGroup.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param siteName The springbootsites name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the springbootapps list resource definition as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SpringbootappsModel> listByResourceGroup(String resourceGroupName, String siteName, Context context);

    /**
     * List springbootapps resource by subscription.
     * 
     * @param siteName The springbootsites name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the springbootapps list resource definition as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SpringbootappsModel> listBySubscription(String siteName);

    /**
     * List springbootapps resource by subscription.
     * 
     * @param siteName The springbootsites name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the springbootapps list resource definition as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SpringbootappsModel> listBySubscription(String siteName, Context context);
}
