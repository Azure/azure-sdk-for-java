// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridkubernetes.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridkubernetes.fluent.models.ConnectedClusterPatchProperties;
import com.azure.resourcemanager.hybridkubernetes.models.AzureHybridBenefit;
import org.junit.jupiter.api.Assertions;

public final class ConnectedClusterPatchPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ConnectedClusterPatchProperties model = BinaryData.fromString(
            "{\"distribution\":\"cnyejhkryhtnapcz\",\"distributionVersion\":\"okjye\",\"azureHybridBenefit\":\"False\"}")
            .toObject(ConnectedClusterPatchProperties.class);
        Assertions.assertEquals("cnyejhkryhtnapcz", model.distribution());
        Assertions.assertEquals("okjye", model.distributionVersion());
        Assertions.assertEquals(AzureHybridBenefit.FALSE, model.azureHybridBenefit());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ConnectedClusterPatchProperties model
            = new ConnectedClusterPatchProperties().withDistribution("cnyejhkryhtnapcz")
                .withDistributionVersion("okjye")
                .withAzureHybridBenefit(AzureHybridBenefit.FALSE);
        model = BinaryData.fromObject(model).toObject(ConnectedClusterPatchProperties.class);
        Assertions.assertEquals("cnyejhkryhtnapcz", model.distribution());
        Assertions.assertEquals("okjye", model.distributionVersion());
        Assertions.assertEquals(AzureHybridBenefit.FALSE, model.azureHybridBenefit());
    }
}
