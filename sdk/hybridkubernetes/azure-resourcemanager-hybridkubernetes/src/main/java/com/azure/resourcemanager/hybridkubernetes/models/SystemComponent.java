// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridkubernetes.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * System extensions and its current versions installed on the cluster resource.
 */
@Fluent
public final class SystemComponent implements JsonSerializable<SystemComponent> {
    /*
     * Type of the system extension
     */
    private String type;

    /*
     * Version of the system extension to be installed on the cluster resource.
     */
    private String userSpecifiedVersion;

    /*
     * Major Version of the system extension that is currently installed on the cluster resource.
     */
    private Integer majorVersion;

    /*
     * Version of the system extension that is currently installed on the cluster resource.
     */
    private String currentVersion;

    /**
     * Creates an instance of SystemComponent class.
     */
    public SystemComponent() {
    }

    /**
     * Get the type property: Type of the system extension.
     * 
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: Type of the system extension.
     * 
     * @param type the type value to set.
     * @return the SystemComponent object itself.
     */
    public SystemComponent withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Get the userSpecifiedVersion property: Version of the system extension to be installed on the cluster resource.
     * 
     * @return the userSpecifiedVersion value.
     */
    public String userSpecifiedVersion() {
        return this.userSpecifiedVersion;
    }

    /**
     * Set the userSpecifiedVersion property: Version of the system extension to be installed on the cluster resource.
     * 
     * @param userSpecifiedVersion the userSpecifiedVersion value to set.
     * @return the SystemComponent object itself.
     */
    public SystemComponent withUserSpecifiedVersion(String userSpecifiedVersion) {
        this.userSpecifiedVersion = userSpecifiedVersion;
        return this;
    }

    /**
     * Get the majorVersion property: Major Version of the system extension that is currently installed on the cluster
     * resource.
     * 
     * @return the majorVersion value.
     */
    public Integer majorVersion() {
        return this.majorVersion;
    }

    /**
     * Set the majorVersion property: Major Version of the system extension that is currently installed on the cluster
     * resource.
     * 
     * @param majorVersion the majorVersion value to set.
     * @return the SystemComponent object itself.
     */
    public SystemComponent withMajorVersion(Integer majorVersion) {
        this.majorVersion = majorVersion;
        return this;
    }

    /**
     * Get the currentVersion property: Version of the system extension that is currently installed on the cluster
     * resource.
     * 
     * @return the currentVersion value.
     */
    public String currentVersion() {
        return this.currentVersion;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("type", this.type);
        jsonWriter.writeStringField("userSpecifiedVersion", this.userSpecifiedVersion);
        jsonWriter.writeNumberField("majorVersion", this.majorVersion);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SystemComponent from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SystemComponent if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the SystemComponent.
     */
    public static SystemComponent fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SystemComponent deserializedSystemComponent = new SystemComponent();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("type".equals(fieldName)) {
                    deserializedSystemComponent.type = reader.getString();
                } else if ("userSpecifiedVersion".equals(fieldName)) {
                    deserializedSystemComponent.userSpecifiedVersion = reader.getString();
                } else if ("majorVersion".equals(fieldName)) {
                    deserializedSystemComponent.majorVersion = reader.getNullable(JsonReader::getInt);
                } else if ("currentVersion".equals(fieldName)) {
                    deserializedSystemComponent.currentVersion = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSystemComponent;
        });
    }
}
