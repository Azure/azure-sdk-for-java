// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridkubernetes.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Authentication details of the user. */
@Fluent
public final class AuthenticationDetails {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(AuthenticationDetails.class);

    /*
     * The mode of client authentication.
     */
    @JsonProperty(value = "authenticationMethod", required = true)
    private AuthenticationMethod authenticationMethod;

    /*
     * Authentication token value.
     */
    @JsonProperty(value = "value", required = true)
    private AuthenticationDetailsValue value;

    /**
     * Get the authenticationMethod property: The mode of client authentication.
     *
     * @return the authenticationMethod value.
     */
    public AuthenticationMethod authenticationMethod() {
        return this.authenticationMethod;
    }

    /**
     * Set the authenticationMethod property: The mode of client authentication.
     *
     * @param authenticationMethod the authenticationMethod value to set.
     * @return the AuthenticationDetails object itself.
     */
    public AuthenticationDetails withAuthenticationMethod(AuthenticationMethod authenticationMethod) {
        this.authenticationMethod = authenticationMethod;
        return this;
    }

    /**
     * Get the value property: Authentication token value.
     *
     * @return the value value.
     */
    public AuthenticationDetailsValue value() {
        return this.value;
    }

    /**
     * Set the value property: Authentication token value.
     *
     * @param value the value value to set.
     * @return the AuthenticationDetails object itself.
     */
    public AuthenticationDetails withValue(AuthenticationDetailsValue value) {
        this.value = value;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (authenticationMethod() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property authenticationMethod in model AuthenticationDetails"));
        }
        if (value() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property value in model AuthenticationDetails"));
        } else {
            value().validate();
        }
    }
}
