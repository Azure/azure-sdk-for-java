// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybriddatamanager.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.hybriddatamanager.models.DmsBaseObject;
import com.azure.resourcemanager.hybriddatamanager.models.Key;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Public key. */
@Fluent
public final class PublicKeyInner extends DmsBaseObject {
    /*
     * Public key property.
     */
    @JsonProperty(value = "properties", required = true)
    private PublicKeyProperties innerProperties = new PublicKeyProperties();

    /**
     * Get the innerProperties property: Public key property.
     *
     * @return the innerProperties value.
     */
    private PublicKeyProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the dataServiceLevel1Key property: Level one public key for encryption.
     *
     * @return the dataServiceLevel1Key value.
     */
    public Key dataServiceLevel1Key() {
        return this.innerProperties() == null ? null : this.innerProperties().dataServiceLevel1Key();
    }

    /**
     * Set the dataServiceLevel1Key property: Level one public key for encryption.
     *
     * @param dataServiceLevel1Key the dataServiceLevel1Key value to set.
     * @return the PublicKeyInner object itself.
     */
    public PublicKeyInner withDataServiceLevel1Key(Key dataServiceLevel1Key) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PublicKeyProperties();
        }
        this.innerProperties().withDataServiceLevel1Key(dataServiceLevel1Key);
        return this;
    }

    /**
     * Get the dataServiceLevel2Key property: Level two public key for encryption.
     *
     * @return the dataServiceLevel2Key value.
     */
    public Key dataServiceLevel2Key() {
        return this.innerProperties() == null ? null : this.innerProperties().dataServiceLevel2Key();
    }

    /**
     * Set the dataServiceLevel2Key property: Level two public key for encryption.
     *
     * @param dataServiceLevel2Key the dataServiceLevel2Key value to set.
     * @return the PublicKeyInner object itself.
     */
    public PublicKeyInner withDataServiceLevel2Key(Key dataServiceLevel2Key) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PublicKeyProperties();
        }
        this.innerProperties().withDataServiceLevel2Key(dataServiceLevel2Key);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property innerProperties in model PublicKeyInner"));
        } else {
            innerProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(PublicKeyInner.class);
}
