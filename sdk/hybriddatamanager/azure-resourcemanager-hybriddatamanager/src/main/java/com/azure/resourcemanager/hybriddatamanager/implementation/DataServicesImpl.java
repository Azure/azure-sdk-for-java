// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybriddatamanager.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.hybriddatamanager.fluent.DataServicesClient;
import com.azure.resourcemanager.hybriddatamanager.fluent.models.DataServiceInner;
import com.azure.resourcemanager.hybriddatamanager.models.DataService;
import com.azure.resourcemanager.hybriddatamanager.models.DataServices;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class DataServicesImpl implements DataServices {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DataServicesImpl.class);

    private final DataServicesClient innerClient;

    private final com.azure.resourcemanager.hybriddatamanager.HybridDataManager serviceManager;

    public DataServicesImpl(
        DataServicesClient innerClient, com.azure.resourcemanager.hybriddatamanager.HybridDataManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<DataService> listByDataManager(String resourceGroupName, String dataManagerName) {
        PagedIterable<DataServiceInner> inner =
            this.serviceClient().listByDataManager(resourceGroupName, dataManagerName);
        return Utils.mapPage(inner, inner1 -> new DataServiceImpl(inner1, this.manager()));
    }

    public PagedIterable<DataService> listByDataManager(
        String resourceGroupName, String dataManagerName, Context context) {
        PagedIterable<DataServiceInner> inner =
            this.serviceClient().listByDataManager(resourceGroupName, dataManagerName, context);
        return Utils.mapPage(inner, inner1 -> new DataServiceImpl(inner1, this.manager()));
    }

    public DataService get(String dataServiceName, String resourceGroupName, String dataManagerName) {
        DataServiceInner inner = this.serviceClient().get(dataServiceName, resourceGroupName, dataManagerName);
        if (inner != null) {
            return new DataServiceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<DataService> getWithResponse(
        String dataServiceName, String resourceGroupName, String dataManagerName, Context context) {
        Response<DataServiceInner> inner =
            this.serviceClient().getWithResponse(dataServiceName, resourceGroupName, dataManagerName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new DataServiceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private DataServicesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.hybriddatamanager.HybridDataManager manager() {
        return this.serviceManager;
    }
}
