// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.purestorageblock.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.purestorageblock.PureStorageBlockManager;
import com.azure.resourcemanager.purestorageblock.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.purestorageblock.models.StoragePool;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class StoragePoolsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"storagePoolInternalId\":\"wqjnob\",\"availabilityZone\":\"iyhddvi\",\"vnetInjection\":{\"subnetId\":\"cegfnmntfp\",\"vnetId\":\"vm\"},\"dataRetentionPeriod\":4290987357614986610,\"provisionedBandwidthMbPerSec\":5936316598559171392,\"provisionedIops\":3782508391126657105,\"avs\":{\"avsEnabled\":false,\"sddcResourceId\":\"lxlllchpo\"},\"provisioningState\":\"Canceled\",\"reservationResourceId\":\"evwrdnhfuk\"},\"identity\":{\"principalId\":\"jcswsmys\",\"tenantId\":\"luqypfcvlerch\",\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{\"drihpfhoqcaaewda\":{\"principalId\":\"pjbabwidfc\",\"clientId\":\"spuunnoxyhkxgq\"},\"zkdnc\":{\"principalId\":\"djvlpj\",\"clientId\":\"kzbrmsgeivsiy\"}}},\"location\":\"xonbzoggculapz\",\"tags\":{\"b\":\"pgogtqxepny\",\"lvofqzhvfcibyfmo\":\"uajlyj\",\"dwxf\":\"uxrkjp\"},\"id\":\"wiivwzjbhyzsx\",\"name\":\"rkambt\",\"type\":\"negvmnvuqe\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PureStorageBlockManager manager = PureStorageBlockManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        StoragePool response = manager.storagePools()
            .getByResourceGroupWithResponse("hpfkyrkdbdgi", "gsj", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("xonbzoggculapz", response.location());
        Assertions.assertEquals("pgogtqxepny", response.tags().get("b"));
        Assertions.assertEquals("iyhddvi", response.properties().availabilityZone());
        Assertions.assertEquals("cegfnmntfp", response.properties().vnetInjection().subnetId());
        Assertions.assertEquals("vm", response.properties().vnetInjection().vnetId());
        Assertions.assertEquals(5936316598559171392L, response.properties().provisionedBandwidthMbPerSec());
        Assertions.assertEquals("evwrdnhfuk", response.properties().reservationResourceId());
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, response.identity().type());
    }
}
