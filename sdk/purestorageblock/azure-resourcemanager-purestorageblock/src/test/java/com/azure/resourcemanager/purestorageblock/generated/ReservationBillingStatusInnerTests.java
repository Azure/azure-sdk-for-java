// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.purestorageblock.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.purestorageblock.fluent.models.ReservationBillingStatusInner;
import org.junit.jupiter.api.Assertions;

public final class ReservationBillingStatusInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ReservationBillingStatusInner model = BinaryData.fromString(
            "{\"timestamp\":\"m\",\"totalUsedCapacityReported\":199478075825684377,\"lowDrrPoolCount\":1338226566,\"drrWeightedAverage\":5.773117540744533,\"totalNonReducibleReported\":4291268661905691897,\"extraUsedCapacityNonReducible\":5532394837865502846,\"extraUsedCapacityLowUsageRounding\":4811588424327006022,\"extraUsedCapacityNonReduciblePlanDiscount\":8189670768631717659,\"totalUsedCapacityBilled\":1144092009173010962,\"totalUsedCapacityIncludedPlan\":3105636476634467949,\"totalUsedCapacityOverage\":3694853900658231195,\"totalPerformanceReported\":7982526886149094942,\"totalPerformanceIncludedPlan\":8505816739590036821,\"totalPerformanceOverage\":6433366187327369612}")
            .toObject(ReservationBillingStatusInner.class);
        Assertions.assertEquals("m", model.timestamp());
        Assertions.assertEquals(199478075825684377L, model.totalUsedCapacityReported());
        Assertions.assertEquals(1338226566, model.lowDrrPoolCount());
        Assertions.assertEquals(5.773117540744533, model.drrWeightedAverage());
        Assertions.assertEquals(4291268661905691897L, model.totalNonReducibleReported());
        Assertions.assertEquals(5532394837865502846L, model.extraUsedCapacityNonReducible());
        Assertions.assertEquals(4811588424327006022L, model.extraUsedCapacityLowUsageRounding());
        Assertions.assertEquals(8189670768631717659L, model.extraUsedCapacityNonReduciblePlanDiscount());
        Assertions.assertEquals(1144092009173010962L, model.totalUsedCapacityBilled());
        Assertions.assertEquals(3105636476634467949L, model.totalUsedCapacityIncludedPlan());
        Assertions.assertEquals(3694853900658231195L, model.totalUsedCapacityOverage());
        Assertions.assertEquals(7982526886149094942L, model.totalPerformanceReported());
        Assertions.assertEquals(8505816739590036821L, model.totalPerformanceIncludedPlan());
        Assertions.assertEquals(6433366187327369612L, model.totalPerformanceOverage());
    }
}
