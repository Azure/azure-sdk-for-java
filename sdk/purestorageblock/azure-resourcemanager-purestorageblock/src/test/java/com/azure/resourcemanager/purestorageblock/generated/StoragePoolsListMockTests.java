// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.purestorageblock.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.purestorageblock.PureStorageBlockManager;
import com.azure.resourcemanager.purestorageblock.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.purestorageblock.models.StoragePool;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class StoragePoolsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"storagePoolInternalId\":\"vjlboxqvk\",\"availabilityZone\":\"lmxhomdyn\",\"vnetInjection\":{\"subnetId\":\"dwdigumb\",\"vnetId\":\"raauzzpt\"},\"dataRetentionPeriod\":6520171368318103183,\"provisionedBandwidthMbPerSec\":8740215687103788004,\"provisionedIops\":694347941979417663,\"avs\":{\"avsEnabled\":true,\"sddcResourceId\":\"vaiqyuvvf\"},\"provisioningState\":\"Deleting\",\"reservationResourceId\":\"p\"},\"identity\":{\"principalId\":\"yik\",\"tenantId\":\"lauyav\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"gnjdgkynscliqhz\":{\"principalId\":\"csttijfybvpoekr\",\"clientId\":\"sgbdhuz\"},\"hihfrbbcevqagtlt\":{\"principalId\":\"xnkomtkubo\",\"clientId\":\"pnvdxz\"},\"nifmzzsdymbrnysu\":{\"principalId\":\"lfkqojpy\",\"clientId\":\"gtrd\"},\"ffwafq\":{\"principalId\":\"prafwgckhoc\",\"clientId\":\"d\"}}},\"location\":\"udaspavehh\",\"tags\":{\"xg\":\"bunzozudh\",\"cdyuibhmfdnbzyd\":\"moy\"},\"id\":\"f\",\"name\":\"fcjnaeoisrvhmgor\",\"type\":\"fukiscvwmzhw\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PureStorageBlockManager manager = PureStorageBlockManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<StoragePool> response = manager.storagePools().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("udaspavehh", response.iterator().next().location());
        Assertions.assertEquals("bunzozudh", response.iterator().next().tags().get("xg"));
        Assertions.assertEquals("lmxhomdyn", response.iterator().next().properties().availabilityZone());
        Assertions.assertEquals("dwdigumb", response.iterator().next().properties().vnetInjection().subnetId());
        Assertions.assertEquals("raauzzpt", response.iterator().next().properties().vnetInjection().vnetId());
        Assertions.assertEquals(8740215687103788004L,
            response.iterator().next().properties().provisionedBandwidthMbPerSec());
        Assertions.assertEquals("p", response.iterator().next().properties().reservationResourceId());
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED,
            response.iterator().next().identity().type());
    }
}
