// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.purestorageblock.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.purestorageblock.PureStorageBlockManager;
import com.azure.resourcemanager.purestorageblock.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.purestorageblock.models.StoragePool;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class StoragePoolsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"storagePoolInternalId\":\"bkkd\",\"availabilityZone\":\"flvestmjlxrrilo\",\"vnetInjection\":{\"subnetId\":\"apeewchpxlkt\",\"vnetId\":\"kuziycsle\"},\"dataRetentionPeriod\":376348209063943127,\"provisionedBandwidthMbPerSec\":7273800949722293579,\"provisionedIops\":5765928243400735909,\"avs\":{\"avsEnabled\":false,\"sddcResourceId\":\"tqedcgzulwm\"},\"provisioningState\":\"Accepted\",\"reservationResourceId\":\"z\"},\"identity\":{\"principalId\":\"jvpglydzgk\",\"tenantId\":\"qeevt\",\"type\":\"None\",\"userAssignedIdentities\":{\"z\":{\"principalId\":\"utnwytpzdmovzvf\",\"clientId\":\"awzqadfl\"}}},\"location\":\"iglaecx\",\"tags\":{\"mlqtmldgxob\":\"icokpv\"},\"id\":\"irclnpk\",\"name\":\"iayz\",\"type\":\"iykhy\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PureStorageBlockManager manager = PureStorageBlockManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<StoragePool> response
            = manager.storagePools().listByResourceGroup("vldspa", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("iglaecx", response.iterator().next().location());
        Assertions.assertEquals("icokpv", response.iterator().next().tags().get("mlqtmldgxob"));
        Assertions.assertEquals("flvestmjlxrrilo", response.iterator().next().properties().availabilityZone());
        Assertions.assertEquals("apeewchpxlkt", response.iterator().next().properties().vnetInjection().subnetId());
        Assertions.assertEquals("kuziycsle", response.iterator().next().properties().vnetInjection().vnetId());
        Assertions.assertEquals(7273800949722293579L,
            response.iterator().next().properties().provisionedBandwidthMbPerSec());
        Assertions.assertEquals("z", response.iterator().next().properties().reservationResourceId());
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.iterator().next().identity().type());
    }
}
