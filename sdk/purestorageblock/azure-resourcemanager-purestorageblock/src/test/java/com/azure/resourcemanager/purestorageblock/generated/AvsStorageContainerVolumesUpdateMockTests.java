// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.purestorageblock.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.purestorageblock.PureStorageBlockManager;
import com.azure.resourcemanager.purestorageblock.models.AvsStorageContainerVolume;
import com.azure.resourcemanager.purestorageblock.models.AvsStorageContainerVolumeUpdate;
import com.azure.resourcemanager.purestorageblock.models.AvsStorageContainerVolumeUpdateProperties;
import com.azure.resourcemanager.purestorageblock.models.SoftDeletion;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AvsStorageContainerVolumesUpdateMockTests {
    @Test
    public void testUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"storagePoolInternalId\":\"euaulxu\",\"storagePoolResourceId\":\"mjbnk\",\"volumeInternalId\":\"xynenl\",\"displayName\":\"xeizzg\",\"space\":{\"totalUsed\":8412972694845165147,\"unique\":8962463680320101041,\"snapshots\":4209661666295596661,\"shared\":457249377795932450},\"softDeletion\":{\"destroyed\":true,\"eradicationTimestamp\":\"xcktpiymerteeamm\"},\"createdTimestamp\":\"iekkkzddrtkgdojb\",\"provisionedSize\":2124241015903648306,\"volumeType\":\"avs\",\"avs\":{\"diskId\":\"fdeesvecuijpxtx\",\"diskName\":\"uwprtujwsawd\",\"folder\":\"jibabxvititvtze\",\"avsVmInternalId\":\"xavo\",\"avsVmResourceId\":\"tfgle\",\"avsVmName\":\"dmdqb\",\"avsStorageContainerResourceId\":\"pypqtgsfj\"},\"provisioningState\":\"Succeeded\"},\"id\":\"lhhxudbxvodhtnsi\",\"name\":\"ud\",\"type\":\"z\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PureStorageBlockManager manager = PureStorageBlockManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        AvsStorageContainerVolume response = manager.avsStorageContainerVolumes()
            .update("jhhn", "kzyb", "jjidjk", "yxkyxvx",
                new AvsStorageContainerVolumeUpdate().withProperties(new AvsStorageContainerVolumeUpdateProperties()
                    .withSoftDeletion(new SoftDeletion().withDestroyed(false))),
                com.azure.core.util.Context.NONE);

        Assertions.assertTrue(response.properties().softDeletion().destroyed());
    }
}
