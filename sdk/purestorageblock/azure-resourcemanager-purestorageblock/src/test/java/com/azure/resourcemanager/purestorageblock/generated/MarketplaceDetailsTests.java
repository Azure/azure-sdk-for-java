// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.purestorageblock.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.purestorageblock.models.MarketplaceDetails;
import com.azure.resourcemanager.purestorageblock.models.MarketplaceSubscriptionStatus;
import com.azure.resourcemanager.purestorageblock.models.OfferDetails;
import org.junit.jupiter.api.Assertions;

public final class MarketplaceDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MarketplaceDetails model = BinaryData.fromString(
            "{\"subscriptionId\":\"ubljofxqe\",\"subscriptionStatus\":\"PendingFulfillmentStart\",\"offerDetails\":{\"publisherId\":\"aeqjhqjbasvms\",\"offerId\":\"jqul\",\"planId\":\"gsntnbybkzgcwr\",\"planName\":\"lxxwrljdouskc\",\"termUnit\":\"kocrcjdkwtnhx\",\"termId\":\"jbiksqrglssai\"}}")
            .toObject(MarketplaceDetails.class);
        Assertions.assertEquals(MarketplaceSubscriptionStatus.PENDING_FULFILLMENT_START, model.subscriptionStatus());
        Assertions.assertEquals("aeqjhqjbasvms", model.offerDetails().publisherId());
        Assertions.assertEquals("jqul", model.offerDetails().offerId());
        Assertions.assertEquals("gsntnbybkzgcwr", model.offerDetails().planId());
        Assertions.assertEquals("lxxwrljdouskc", model.offerDetails().planName());
        Assertions.assertEquals("kocrcjdkwtnhx", model.offerDetails().termUnit());
        Assertions.assertEquals("jbiksqrglssai", model.offerDetails().termId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MarketplaceDetails model
            = new MarketplaceDetails().withSubscriptionStatus(MarketplaceSubscriptionStatus.PENDING_FULFILLMENT_START)
                .withOfferDetails(new OfferDetails().withPublisherId("aeqjhqjbasvms")
                    .withOfferId("jqul")
                    .withPlanId("gsntnbybkzgcwr")
                    .withPlanName("lxxwrljdouskc")
                    .withTermUnit("kocrcjdkwtnhx")
                    .withTermId("jbiksqrglssai"));
        model = BinaryData.fromObject(model).toObject(MarketplaceDetails.class);
        Assertions.assertEquals(MarketplaceSubscriptionStatus.PENDING_FULFILLMENT_START, model.subscriptionStatus());
        Assertions.assertEquals("aeqjhqjbasvms", model.offerDetails().publisherId());
        Assertions.assertEquals("jqul", model.offerDetails().offerId());
        Assertions.assertEquals("gsntnbybkzgcwr", model.offerDetails().planId());
        Assertions.assertEquals("lxxwrljdouskc", model.offerDetails().planName());
        Assertions.assertEquals("kocrcjdkwtnhx", model.offerDetails().termUnit());
        Assertions.assertEquals("jbiksqrglssai", model.offerDetails().termId());
    }
}
