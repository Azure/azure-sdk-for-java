// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.purestorageblock.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.purestorageblock.PureStorageBlockManager;
import com.azure.resourcemanager.purestorageblock.models.AvsConnection;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class StoragePoolsGetAvsConnectionWithResponseMockTests {
    @Test
    public void testGetAvsConnectionWithResponse() throws Exception {
        String responseStr
            = "{\"serviceInitializationCompleted\":false,\"serviceInitializationHandleEnc\":\"mozuxylfsb\",\"serviceInitializationHandle\":{\"sddcResourceId\":\"dp\",\"serviceAccountUsername\":\"own\"}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PureStorageBlockManager manager = PureStorageBlockManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        AvsConnection response = manager.storagePools()
            .getAvsConnectionWithResponse("iagtc", "jocqwogfnzjvusf", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertFalse(response.serviceInitializationCompleted());
        Assertions.assertEquals("mozuxylfsb", response.serviceInitializationHandleEnc());
        Assertions.assertEquals("dp", response.serviceInitializationHandle().clusterResourceId());
        Assertions.assertEquals("own", response.serviceInitializationHandle().serviceAccountUsername());
    }
}
