// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.purestorageblock.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.purestorageblock.fluent.AvsVmVolumesClient;
import com.azure.resourcemanager.purestorageblock.fluent.models.AvsVmVolumeInner;
import com.azure.resourcemanager.purestorageblock.models.AvsVmVolume;
import com.azure.resourcemanager.purestorageblock.models.AvsVmVolumeUpdate;
import com.azure.resourcemanager.purestorageblock.models.AvsVmVolumes;

public final class AvsVmVolumesImpl implements AvsVmVolumes {
    private static final ClientLogger LOGGER = new ClientLogger(AvsVmVolumesImpl.class);

    private final AvsVmVolumesClient innerClient;

    private final com.azure.resourcemanager.purestorageblock.PureStorageBlockManager serviceManager;

    public AvsVmVolumesImpl(AvsVmVolumesClient innerClient,
        com.azure.resourcemanager.purestorageblock.PureStorageBlockManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public AvsVmVolume update(String resourceGroupName, String storagePoolName, String avsVmId, String volumeId,
        AvsVmVolumeUpdate properties) {
        AvsVmVolumeInner inner
            = this.serviceClient().update(resourceGroupName, storagePoolName, avsVmId, volumeId, properties);
        if (inner != null) {
            return new AvsVmVolumeImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public AvsVmVolume update(String resourceGroupName, String storagePoolName, String avsVmId, String volumeId,
        AvsVmVolumeUpdate properties, Context context) {
        AvsVmVolumeInner inner
            = this.serviceClient().update(resourceGroupName, storagePoolName, avsVmId, volumeId, properties, context);
        if (inner != null) {
            return new AvsVmVolumeImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<AvsVmVolume> getWithResponse(String resourceGroupName, String storagePoolName, String avsVmId,
        String volumeId, Context context) {
        Response<AvsVmVolumeInner> inner
            = this.serviceClient().getWithResponse(resourceGroupName, storagePoolName, avsVmId, volumeId, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new AvsVmVolumeImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public AvsVmVolume get(String resourceGroupName, String storagePoolName, String avsVmId, String volumeId) {
        AvsVmVolumeInner inner = this.serviceClient().get(resourceGroupName, storagePoolName, avsVmId, volumeId);
        if (inner != null) {
            return new AvsVmVolumeImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public void delete(String resourceGroupName, String storagePoolName, String avsVmId, String volumeId) {
        this.serviceClient().delete(resourceGroupName, storagePoolName, avsVmId, volumeId);
    }

    public void delete(String resourceGroupName, String storagePoolName, String avsVmId, String volumeId,
        Context context) {
        this.serviceClient().delete(resourceGroupName, storagePoolName, avsVmId, volumeId, context);
    }

    public PagedIterable<AvsVmVolume> listByAvsVm(String resourceGroupName, String storagePoolName, String avsVmId) {
        PagedIterable<AvsVmVolumeInner> inner
            = this.serviceClient().listByAvsVm(resourceGroupName, storagePoolName, avsVmId);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new AvsVmVolumeImpl(inner1, this.manager()));
    }

    public PagedIterable<AvsVmVolume> listByAvsVm(String resourceGroupName, String storagePoolName, String avsVmId,
        Context context) {
        PagedIterable<AvsVmVolumeInner> inner
            = this.serviceClient().listByAvsVm(resourceGroupName, storagePoolName, avsVmId, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new AvsVmVolumeImpl(inner1, this.manager()));
    }

    private AvsVmVolumesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.purestorageblock.PureStorageBlockManager manager() {
        return this.serviceManager;
    }
}
