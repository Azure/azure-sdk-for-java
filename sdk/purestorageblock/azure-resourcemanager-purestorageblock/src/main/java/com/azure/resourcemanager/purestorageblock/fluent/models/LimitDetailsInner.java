// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.purestorageblock.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.purestorageblock.models.PerformancePolicyLimits;
import com.azure.resourcemanager.purestorageblock.models.ProtectionPolicyLimits;
import com.azure.resourcemanager.purestorageblock.models.StoragePoolLimits;
import com.azure.resourcemanager.purestorageblock.models.VolumeLimits;
import java.io.IOException;

/**
 * Limits constraining certain resource properties.
 */
@Immutable
public final class LimitDetailsInner implements JsonSerializable<LimitDetailsInner> {
    /*
     * Limits used for storage pool resources
     */
    private StoragePoolLimits storagePool;

    /*
     * Limits used for volume resources
     */
    private VolumeLimits volume;

    /*
     * internal
     */
    private ProtectionPolicyLimits protectionPolicy;

    /*
     * internal
     */
    private PerformancePolicyLimits performancePolicy;

    /**
     * Creates an instance of LimitDetailsInner class.
     */
    private LimitDetailsInner() {
    }

    /**
     * Get the storagePool property: Limits used for storage pool resources.
     * 
     * @return the storagePool value.
     */
    public StoragePoolLimits storagePool() {
        return this.storagePool;
    }

    /**
     * Get the volume property: Limits used for volume resources.
     * 
     * @return the volume value.
     */
    public VolumeLimits volume() {
        return this.volume;
    }

    /**
     * Get the protectionPolicy property: internal.
     * 
     * @return the protectionPolicy value.
     */
    public ProtectionPolicyLimits protectionPolicy() {
        return this.protectionPolicy;
    }

    /**
     * Get the performancePolicy property: internal.
     * 
     * @return the performancePolicy value.
     */
    public PerformancePolicyLimits performancePolicy() {
        return this.performancePolicy;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("storagePool", this.storagePool);
        jsonWriter.writeJsonField("volume", this.volume);
        jsonWriter.writeJsonField("protectionPolicy", this.protectionPolicy);
        jsonWriter.writeJsonField("performancePolicy", this.performancePolicy);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of LimitDetailsInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of LimitDetailsInner if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the LimitDetailsInner.
     */
    public static LimitDetailsInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            LimitDetailsInner deserializedLimitDetailsInner = new LimitDetailsInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("storagePool".equals(fieldName)) {
                    deserializedLimitDetailsInner.storagePool = StoragePoolLimits.fromJson(reader);
                } else if ("volume".equals(fieldName)) {
                    deserializedLimitDetailsInner.volume = VolumeLimits.fromJson(reader);
                } else if ("protectionPolicy".equals(fieldName)) {
                    deserializedLimitDetailsInner.protectionPolicy = ProtectionPolicyLimits.fromJson(reader);
                } else if ("performancePolicy".equals(fieldName)) {
                    deserializedLimitDetailsInner.performancePolicy = PerformancePolicyLimits.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedLimitDetailsInner;
        });
    }
}
