// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.purestorageblock.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of AvsVms.
 */
public interface AvsVms {
    /**
     * Update an AVS VM.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storagePoolName Name of the storage pool.
     * @param avsVmId ID of the AVS VM.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return aVS VM resource type, representing all the volumes associated to an AVS VM as defined by VMware.
     */
    AvsVm update(String resourceGroupName, String storagePoolName, String avsVmId, AvsVmUpdate properties);

    /**
     * Update an AVS VM.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storagePoolName Name of the storage pool.
     * @param avsVmId ID of the AVS VM.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return aVS VM resource type, representing all the volumes associated to an AVS VM as defined by VMware.
     */
    AvsVm update(String resourceGroupName, String storagePoolName, String avsVmId, AvsVmUpdate properties,
        Context context);

    /**
     * Get an AVS VM.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storagePoolName Name of the storage pool.
     * @param avsVmId ID of the AVS VM.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an AVS VM along with {@link Response}.
     */
    Response<AvsVm> getWithResponse(String resourceGroupName, String storagePoolName, String avsVmId, Context context);

    /**
     * Get an AVS VM.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storagePoolName Name of the storage pool.
     * @param avsVmId ID of the AVS VM.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an AVS VM.
     */
    AvsVm get(String resourceGroupName, String storagePoolName, String avsVmId);

    /**
     * Delete an AVS VM.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storagePoolName Name of the storage pool.
     * @param avsVmId ID of the AVS VM.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String storagePoolName, String avsVmId);

    /**
     * Delete an AVS VM.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storagePoolName Name of the storage pool.
     * @param avsVmId ID of the AVS VM.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String storagePoolName, String avsVmId, Context context);

    /**
     * List AVS VMs by storage pool.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storagePoolName Name of the storage pool.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AvsVm list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<AvsVm> listByStoragePool(String resourceGroupName, String storagePoolName);

    /**
     * List AVS VMs by storage pool.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storagePoolName Name of the storage pool.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AvsVm list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<AvsVm> listByStoragePool(String resourceGroupName, String storagePoolName, Context context);
}
