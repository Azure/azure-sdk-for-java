// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.purestorageblock.models;

import com.azure.resourcemanager.purestorageblock.fluent.models.ReservationBillingStatusInner;

/**
 * An immutable client-side representation of ReservationBillingStatus.
 */
public interface ReservationBillingStatus {
    /**
     * Gets the timestamp property: Timestamp for the latest update of this billing status, in RFC 3339 format.
     * 
     * @return the timestamp value.
     */
    String timestamp();

    /**
     * Gets the totalUsedCapacityReported property: Total used capacity as reported by associated storage pools. In
     * bytes.
     * 
     * @return the totalUsedCapacityReported value.
     */
    long totalUsedCapacityReported();

    /**
     * Gets the lowDrrPoolCount property: How many associated storage pools reported low data reduction ratio (DRR).
     * 
     * @return the lowDrrPoolCount value.
     */
    int lowDrrPoolCount();

    /**
     * Gets the drrWeightedAverage property: Weighted average of the data-reduction ratio for all associated pools.
     * 
     * @return the drrWeightedAverage value.
     */
    double drrWeightedAverage();

    /**
     * Gets the totalNonReducibleReported property: The sum of total used capacity for all pools with low DRR, if the
     * DRR penalty applies. In bytes.
     * 
     * @return the totalNonReducibleReported value.
     */
    long totalNonReducibleReported();

    /**
     * Gets the extraUsedCapacityNonReducible property: Extra capacity added because of low DRR storage pools; In bytes.
     * 
     * @return the extraUsedCapacityNonReducible value.
     */
    long extraUsedCapacityNonReducible();

    /**
     * Gets the extraUsedCapacityLowUsageRounding property: Extra capacity added when rounding up low-usage pools to
     * 30TiB. In bytes.
     * 
     * @return the extraUsedCapacityLowUsageRounding value.
     */
    long extraUsedCapacityLowUsageRounding();

    /**
     * Gets the extraUsedCapacityNonReduciblePlanDiscount property: Extra capacity discounted due to plan forgiving some
     * low-DRR usage. In bytes.
     * 
     * @return the extraUsedCapacityNonReduciblePlanDiscount value.
     */
    long extraUsedCapacityNonReduciblePlanDiscount();

    /**
     * Gets the totalUsedCapacityBilled property: Total used capacity actually billed. In bytes.
     * 
     * @return the totalUsedCapacityBilled value.
     */
    long totalUsedCapacityBilled();

    /**
     * Gets the totalUsedCapacityIncludedPlan property: Total used capacity included in plan. In bytes.
     * 
     * @return the totalUsedCapacityIncludedPlan value.
     */
    long totalUsedCapacityIncludedPlan();

    /**
     * Gets the totalUsedCapacityOverage property: Total used capacity reported at on-demand price. In bytes.
     * 
     * @return the totalUsedCapacityOverage value.
     */
    long totalUsedCapacityOverage();

    /**
     * Gets the totalPerformanceReported property: The sum of all performance settings across the pools under this
     * reservation. In MB per second.
     * 
     * @return the totalPerformanceReported value.
     */
    long totalPerformanceReported();

    /**
     * Gets the totalPerformanceIncludedPlan property: Total performance amount included in plan. In bytes per second.
     * 
     * @return the totalPerformanceIncludedPlan value.
     */
    long totalPerformanceIncludedPlan();

    /**
     * Gets the totalPerformanceOverage property: Total performance amount reported at on-demand price. In MB per
     * second.
     * 
     * @return the totalPerformanceOverage value.
     */
    long totalPerformanceOverage();

    /**
     * Gets the inner com.azure.resourcemanager.purestorageblock.fluent.models.ReservationBillingStatusInner object.
     * 
     * @return the inner object.
     */
    ReservationBillingStatusInner innerModel();
}
