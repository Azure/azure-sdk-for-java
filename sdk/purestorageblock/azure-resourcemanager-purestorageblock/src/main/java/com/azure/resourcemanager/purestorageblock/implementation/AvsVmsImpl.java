// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.purestorageblock.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.purestorageblock.fluent.AvsVmsClient;
import com.azure.resourcemanager.purestorageblock.fluent.models.AvsVmInner;
import com.azure.resourcemanager.purestorageblock.models.AvsVm;
import com.azure.resourcemanager.purestorageblock.models.AvsVmUpdate;
import com.azure.resourcemanager.purestorageblock.models.AvsVms;

public final class AvsVmsImpl implements AvsVms {
    private static final ClientLogger LOGGER = new ClientLogger(AvsVmsImpl.class);

    private final AvsVmsClient innerClient;

    private final com.azure.resourcemanager.purestorageblock.PureStorageBlockManager serviceManager;

    public AvsVmsImpl(AvsVmsClient innerClient,
        com.azure.resourcemanager.purestorageblock.PureStorageBlockManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public AvsVm update(String resourceGroupName, String storagePoolName, String avsVmId, AvsVmUpdate properties) {
        AvsVmInner inner = this.serviceClient().update(resourceGroupName, storagePoolName, avsVmId, properties);
        if (inner != null) {
            return new AvsVmImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public AvsVm update(String resourceGroupName, String storagePoolName, String avsVmId, AvsVmUpdate properties,
        Context context) {
        AvsVmInner inner
            = this.serviceClient().update(resourceGroupName, storagePoolName, avsVmId, properties, context);
        if (inner != null) {
            return new AvsVmImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<AvsVm> getWithResponse(String resourceGroupName, String storagePoolName, String avsVmId,
        Context context) {
        Response<AvsVmInner> inner
            = this.serviceClient().getWithResponse(resourceGroupName, storagePoolName, avsVmId, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new AvsVmImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public AvsVm get(String resourceGroupName, String storagePoolName, String avsVmId) {
        AvsVmInner inner = this.serviceClient().get(resourceGroupName, storagePoolName, avsVmId);
        if (inner != null) {
            return new AvsVmImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public void delete(String resourceGroupName, String storagePoolName, String avsVmId) {
        this.serviceClient().delete(resourceGroupName, storagePoolName, avsVmId);
    }

    public void delete(String resourceGroupName, String storagePoolName, String avsVmId, Context context) {
        this.serviceClient().delete(resourceGroupName, storagePoolName, avsVmId, context);
    }

    public PagedIterable<AvsVm> listByStoragePool(String resourceGroupName, String storagePoolName) {
        PagedIterable<AvsVmInner> inner = this.serviceClient().listByStoragePool(resourceGroupName, storagePoolName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new AvsVmImpl(inner1, this.manager()));
    }

    public PagedIterable<AvsVm> listByStoragePool(String resourceGroupName, String storagePoolName, Context context) {
        PagedIterable<AvsVmInner> inner
            = this.serviceClient().listByStoragePool(resourceGroupName, storagePoolName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new AvsVmImpl(inner1, this.manager()));
    }

    private AvsVmsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.purestorageblock.PureStorageBlockManager manager() {
        return this.serviceManager;
    }
}
