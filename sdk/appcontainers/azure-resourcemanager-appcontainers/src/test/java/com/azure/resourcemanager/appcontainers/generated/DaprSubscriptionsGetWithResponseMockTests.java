// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcontainers.ContainerAppsApiManager;
import com.azure.resourcemanager.appcontainers.models.DaprSubscription;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DaprSubscriptionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"pubsubName\":\"motahbqsvnk\",\"topic\":\"ytzuaedrl\",\"deadLetterTopic\":\"gc\",\"routes\":{\"rules\":[{\"match\":\"kvxzzmiem\",\"path\":\"ftgpqoswgf\"}],\"default\":\"jmghpakbqyhlsor\"},\"scopes\":[\"meqagkncjmyb\"],\"metadata\":{\"mbwppxirxbkitzmn\":\"vztnjawrhulemm\",\"l\":\"itaxju\",\"xsgcemegd\":\"j\"},\"bulkSubscribe\":{\"enabled\":false,\"maxMessagesCount\":478045983,\"maxAwaitDurationMs\":633212516}},\"id\":\"f\",\"name\":\"yzufldifnivlutgg\",\"type\":\"aacxauhvc\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        DaprSubscription response = manager.daprSubscriptions()
            .getWithResponse("cuufkrfn", "cnihkswxmfurqmw", "wwp", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("motahbqsvnk", response.pubsubName());
        Assertions.assertEquals("ytzuaedrl", response.topic());
        Assertions.assertEquals("gc", response.deadLetterTopic());
        Assertions.assertEquals("kvxzzmiem", response.routes().rules().get(0).match());
        Assertions.assertEquals("ftgpqoswgf", response.routes().rules().get(0).path());
        Assertions.assertEquals("jmghpakbqyhlsor", response.routes().defaultProperty());
        Assertions.assertEquals("meqagkncjmyb", response.scopes().get(0));
        Assertions.assertEquals("vztnjawrhulemm", response.metadata().get("mbwppxirxbkitzmn"));
        Assertions.assertFalse(response.bulkSubscribe().enabled());
        Assertions.assertEquals(478045983, response.bulkSubscribe().maxMessagesCount());
        Assertions.assertEquals(633212516, response.bulkSubscribe().maxAwaitDurationMs());
    }
}
