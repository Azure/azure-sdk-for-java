// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.JavaComponentConfigurationProperty;
import com.azure.resourcemanager.appcontainers.models.JavaComponentIngress;
import com.azure.resourcemanager.appcontainers.models.JavaComponentPropertiesScale;
import com.azure.resourcemanager.appcontainers.models.JavaComponentServiceBind;
import com.azure.resourcemanager.appcontainers.models.SpringCloudEurekaComponent;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SpringCloudEurekaComponentTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SpringCloudEurekaComponent model = BinaryData.fromString(
            "{\"componentType\":\"SpringCloudEureka\",\"ingress\":{\"fqdn\":\"uug\"},\"provisioningState\":\"Failed\",\"configurations\":[{\"propertyName\":\"rfqkfuar\",\"value\":\"lvhhtklnvn\"}],\"scale\":{\"minReplicas\":1300202975,\"maxReplicas\":64736512},\"serviceBinds\":[{\"name\":\"ev\",\"serviceId\":\"oslc\"}]}")
            .toObject(SpringCloudEurekaComponent.class);
        Assertions.assertEquals("rfqkfuar", model.configurations().get(0).propertyName());
        Assertions.assertEquals("lvhhtklnvn", model.configurations().get(0).value());
        Assertions.assertEquals(1300202975, model.scale().minReplicas());
        Assertions.assertEquals(64736512, model.scale().maxReplicas());
        Assertions.assertEquals("ev", model.serviceBinds().get(0).name());
        Assertions.assertEquals("oslc", model.serviceBinds().get(0).serviceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SpringCloudEurekaComponent model = new SpringCloudEurekaComponent()
            .withConfigurations(Arrays
                .asList(new JavaComponentConfigurationProperty().withPropertyName("rfqkfuar").withValue("lvhhtklnvn")))
            .withScale(new JavaComponentPropertiesScale().withMinReplicas(1300202975).withMaxReplicas(64736512))
            .withServiceBinds(Arrays.asList(new JavaComponentServiceBind().withName("ev").withServiceId("oslc")))
            .withIngress(new JavaComponentIngress());
        model = BinaryData.fromObject(model).toObject(SpringCloudEurekaComponent.class);
        Assertions.assertEquals("rfqkfuar", model.configurations().get(0).propertyName());
        Assertions.assertEquals("lvhhtklnvn", model.configurations().get(0).value());
        Assertions.assertEquals(1300202975, model.scale().minReplicas());
        Assertions.assertEquals(64736512, model.scale().maxReplicas());
        Assertions.assertEquals("ev", model.serviceBinds().get(0).name());
        Assertions.assertEquals("oslc", model.serviceBinds().get(0).serviceId());
    }
}
