// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.HttpRoute;
import com.azure.resourcemanager.appcontainers.models.HttpRouteAction;
import com.azure.resourcemanager.appcontainers.models.HttpRouteMatch;
import org.junit.jupiter.api.Assertions;

public final class HttpRouteTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HttpRoute model = BinaryData.fromString(
            "{\"match\":{\"prefix\":\"kfkyjp\",\"path\":\"pbpssdfpp\",\"pathSeparatedPrefix\":\"gt\",\"caseSensitive\":true},\"action\":{\"prefixRewrite\":\"tvczkcnyxr\"}}")
            .toObject(HttpRoute.class);
        Assertions.assertEquals("kfkyjp", model.match().prefix());
        Assertions.assertEquals("pbpssdfpp", model.match().path());
        Assertions.assertEquals("gt", model.match().pathSeparatedPrefix());
        Assertions.assertTrue(model.match().caseSensitive());
        Assertions.assertEquals("tvczkcnyxr", model.action().prefixRewrite());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HttpRoute model = new HttpRoute().withMatch(new HttpRouteMatch().withPrefix("kfkyjp")
            .withPath("pbpssdfpp")
            .withPathSeparatedPrefix("gt")
            .withCaseSensitive(true)).withAction(new HttpRouteAction().withPrefixRewrite("tvczkcnyxr"));
        model = BinaryData.fromObject(model).toObject(HttpRoute.class);
        Assertions.assertEquals("kfkyjp", model.match().prefix());
        Assertions.assertEquals("pbpssdfpp", model.match().path());
        Assertions.assertEquals("gt", model.match().pathSeparatedPrefix());
        Assertions.assertTrue(model.match().caseSensitive());
        Assertions.assertEquals("tvczkcnyxr", model.action().prefixRewrite());
    }
}
