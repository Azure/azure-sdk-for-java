// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.HttpRouteMatch;
import org.junit.jupiter.api.Assertions;

public final class HttpRouteMatchTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HttpRouteMatch model = BinaryData.fromString(
            "{\"prefix\":\"unjdx\",\"path\":\"lnkvxlx\",\"pathSeparatedPrefix\":\"glqivbgkcv\",\"caseSensitive\":true}")
            .toObject(HttpRouteMatch.class);
        Assertions.assertEquals("unjdx", model.prefix());
        Assertions.assertEquals("lnkvxlx", model.path());
        Assertions.assertEquals("glqivbgkcv", model.pathSeparatedPrefix());
        Assertions.assertTrue(model.caseSensitive());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HttpRouteMatch model = new HttpRouteMatch().withPrefix("unjdx")
            .withPath("lnkvxlx")
            .withPathSeparatedPrefix("glqivbgkcv")
            .withCaseSensitive(true);
        model = BinaryData.fromObject(model).toObject(HttpRouteMatch.class);
        Assertions.assertEquals("unjdx", model.prefix());
        Assertions.assertEquals("lnkvxlx", model.path());
        Assertions.assertEquals("glqivbgkcv", model.pathSeparatedPrefix());
        Assertions.assertTrue(model.caseSensitive());
    }
}
