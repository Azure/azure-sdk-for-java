// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.Level;
import com.azure.resourcemanager.appcontainers.models.LoggerSetting;
import com.azure.resourcemanager.appcontainers.models.RuntimeJavaAgent;
import com.azure.resourcemanager.appcontainers.models.RuntimeJavaAgentLogging;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RuntimeJavaAgentTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RuntimeJavaAgent model = BinaryData.fromString(
            "{\"enabled\":true,\"logging\":{\"loggerSettings\":[{\"logger\":\"jorwkqnyhgbij\",\"level\":\"warn\"},{\"logger\":\"ivfxzsjabibsyst\",\"level\":\"trace\"},{\"logger\":\"fsdjpvkvp\",\"level\":\"error\"}]}}")
            .toObject(RuntimeJavaAgent.class);
        Assertions.assertEquals(true, model.enabled());
        Assertions.assertEquals("jorwkqnyhgbij", model.logging().loggerSettings().get(0).logger());
        Assertions.assertEquals(Level.WARN, model.logging().loggerSettings().get(0).level());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RuntimeJavaAgent model = new RuntimeJavaAgent().withEnabled(true)
            .withLogging(new RuntimeJavaAgentLogging()
                .withLoggerSettings(Arrays.asList(new LoggerSetting().withLogger("jorwkqnyhgbij").withLevel(Level.WARN),
                    new LoggerSetting().withLogger("ivfxzsjabibsyst").withLevel(Level.TRACE),
                    new LoggerSetting().withLogger("fsdjpvkvp").withLevel(Level.ERROR))));
        model = BinaryData.fromObject(model).toObject(RuntimeJavaAgent.class);
        Assertions.assertEquals(true, model.enabled());
        Assertions.assertEquals("jorwkqnyhgbij", model.logging().loggerSettings().get(0).logger());
        Assertions.assertEquals(Level.WARN, model.logging().loggerSettings().get(0).level());
    }
}
