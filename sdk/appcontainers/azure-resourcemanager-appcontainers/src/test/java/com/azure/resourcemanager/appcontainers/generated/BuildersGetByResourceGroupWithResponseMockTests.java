// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcontainers.ContainerAppsApiManager;
import com.azure.resourcemanager.appcontainers.models.BuilderResource;
import com.azure.resourcemanager.appcontainers.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class BuildersGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Creating\",\"environmentId\":\"erkjddv\",\"containerRegistries\":[{\"containerRegistryServer\":\"iegftc\",\"identityResourceId\":\"biiftksdwgdnk\"},{\"containerRegistryServer\":\"fgmwd\",\"identityResourceId\":\"c\"},{\"containerRegistryServer\":\"buvczldbglzoutb\",\"identityResourceId\":\"aqgzekajclyzgs\"}]},\"identity\":{\"principalId\":\"7fd2c719-9e3b-4544-bb86-f684d588d608\",\"tenantId\":\"3066b442-1559-4181-9984-0b35cbc486d8\",\"type\":\"None\",\"userAssignedIdentities\":{\"jotvmrxkhl\":{\"principalId\":\"5133ca8d-f461-4fbe-b63e-d9c79d525469\",\"clientId\":\"3d4831fc-db66-48d3-976f-0ff4bc09712c\"}}},\"location\":\"vvjbhvhdiqayf\",\"tags\":{\"snuudtelvhyibdr\":\"yu\"},\"id\":\"rswhbuubpyro\",\"name\":\"tjoxztfw\",\"type\":\"qchvczevjn\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        BuilderResource response = manager.builders()
            .getByResourceGroupWithResponse("exkydfb", "lj", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("vvjbhvhdiqayf", response.location());
        Assertions.assertEquals("yu", response.tags().get("snuudtelvhyibdr"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.identity().type());
        Assertions.assertEquals("erkjddv", response.environmentId());
        Assertions.assertEquals("iegftc", response.containerRegistries().get(0).containerRegistryServer());
        Assertions.assertEquals("biiftksdwgdnk", response.containerRegistries().get(0).identityResourceId());
    }
}
