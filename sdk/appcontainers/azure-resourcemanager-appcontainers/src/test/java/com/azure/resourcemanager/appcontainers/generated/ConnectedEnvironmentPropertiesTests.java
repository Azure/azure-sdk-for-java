// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.ConnectedEnvironmentProperties;
import com.azure.resourcemanager.appcontainers.models.CustomDomainConfiguration;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ConnectedEnvironmentPropertiesTests {
    @Test
    public void testDeserialize() {
        ConnectedEnvironmentProperties model =
            BinaryData
                .fromString(
                    "{\"provisioningState\":\"InfrastructureSetupInProgress\",\"deploymentErrors\":\"dk\",\"defaultDomain\":\"vidizozsdb\",\"staticIp\":\"xjmonf\",\"daprAIConnectionString\":\"nwncypuuw\",\"customDomainConfiguration\":{\"customDomainVerificationId\":\"v\",\"dnsSuffix\":\"jctzenkei\",\"expirationDate\":\"2021-11-19T10:45:07Z\",\"thumbprint\":\"dasvfl\",\"subjectName\":\"bxcudchx\"}}")
                .toObject(ConnectedEnvironmentProperties.class);
        Assertions.assertEquals("xjmonf", model.staticIp());
        Assertions.assertEquals("nwncypuuw", model.daprAIConnectionString());
        Assertions.assertEquals("jctzenkei", model.customDomainConfiguration().dnsSuffix());
    }

    @Test
    public void testSerialize() {
        ConnectedEnvironmentProperties model =
            new ConnectedEnvironmentProperties()
                .withStaticIp("xjmonf")
                .withDaprAIConnectionString("nwncypuuw")
                .withCustomDomainConfiguration(new CustomDomainConfiguration().withDnsSuffix("jctzenkei"));
        model = BinaryData.fromObject(model).toObject(ConnectedEnvironmentProperties.class);
        Assertions.assertEquals("xjmonf", model.staticIp());
        Assertions.assertEquals("nwncypuuw", model.daprAIConnectionString());
        Assertions.assertEquals("jctzenkei", model.customDomainConfiguration().dnsSuffix());
    }
}
