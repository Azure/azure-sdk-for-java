// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.appcontainers.models.PrivateEndpoint;
import com.azure.resourcemanager.appcontainers.models.PrivateEndpointConnectionListResult;
import com.azure.resourcemanager.appcontainers.models.PrivateEndpointServiceConnectionStatus;
import com.azure.resourcemanager.appcontainers.models.PrivateLinkServiceConnectionState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"groupIds\":[\"igrb\"],\"privateEndpoint\":{\"id\":\"sjybvitv\"},\"privateLinkServiceConnectionState\":{\"status\":\"Rejected\",\"description\":\"az\",\"actionsRequired\":\"mtggmu\"},\"provisioningState\":\"Pending\"},\"id\":\"ozfnkfexlvx\",\"name\":\"oakizvoai\",\"type\":\"naqln\"},{\"properties\":{\"groupIds\":[\"uyxlykwphvxzcw\",\"hmpejtlkexaonw\"],\"privateEndpoint\":{\"id\":\"cqhrxhxknlccrmm\"},\"privateLinkServiceConnectionState\":{\"status\":\"Disconnected\",\"description\":\"ijubyqjfkakfqf\",\"actionsRequired\":\"em\"},\"provisioningState\":\"Pending\"},\"id\":\"udxjascowv\",\"name\":\"djkpdxph\",\"type\":\"kk\"},{\"properties\":{\"groupIds\":[\"zvyfijdkzuqnwsi\"],\"privateEndpoint\":{\"id\":\"q\"},\"privateLinkServiceConnectionState\":{\"status\":\"Disconnected\",\"description\":\"hluqwquls\",\"actionsRequired\":\"rjb\"},\"provisioningState\":\"Deleting\"},\"id\":\"fhyqezvqqugdrft\",\"name\":\"cvexreuqu\",\"type\":\"wtl\"}],\"nextLink\":\"fwhreagkhyxv\"}")
            .toObject(PrivateEndpointConnectionListResult.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.REJECTED,
            model.value().get(0).privateLinkServiceConnectionState().status());
        Assertions.assertEquals("az", model.value().get(0).privateLinkServiceConnectionState().description());
        Assertions.assertEquals("mtggmu", model.value().get(0).privateLinkServiceConnectionState().actionsRequired());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionListResult model
            = new PrivateEndpointConnectionListResult().withValue(Arrays.asList(
                new PrivateEndpointConnectionInner().withPrivateEndpoint(new PrivateEndpoint())
                    .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                        .withStatus(PrivateEndpointServiceConnectionStatus.REJECTED)
                        .withDescription("az")
                        .withActionsRequired("mtggmu")),
                new PrivateEndpointConnectionInner().withPrivateEndpoint(new PrivateEndpoint())
                    .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                        .withStatus(PrivateEndpointServiceConnectionStatus.DISCONNECTED)
                        .withDescription("ijubyqjfkakfqf")
                        .withActionsRequired("em")),
                new PrivateEndpointConnectionInner().withPrivateEndpoint(new PrivateEndpoint())
                    .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                        .withStatus(PrivateEndpointServiceConnectionStatus.DISCONNECTED)
                        .withDescription("hluqwquls")
                        .withActionsRequired("rjb"))));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionListResult.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.REJECTED,
            model.value().get(0).privateLinkServiceConnectionState().status());
        Assertions.assertEquals("az", model.value().get(0).privateLinkServiceConnectionState().description());
        Assertions.assertEquals("mtggmu", model.value().get(0).privateLinkServiceConnectionState().actionsRequired());
    }
}
