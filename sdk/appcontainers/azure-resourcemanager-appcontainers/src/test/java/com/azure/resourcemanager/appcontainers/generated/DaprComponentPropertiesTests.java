// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.DaprComponentProperties;
import com.azure.resourcemanager.appcontainers.models.DaprMetadata;
import com.azure.resourcemanager.appcontainers.models.Secret;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DaprComponentPropertiesTests {
    @Test
    public void testDeserialize() {
        DaprComponentProperties model =
            BinaryData
                .fromString(
                    "{\"componentType\":\"xtqmieoxor\",\"version\":\"ufhyaomtbgh\",\"ignoreErrors\":false,\"initTimeout\":\"rvk\",\"secrets\":[{\"name\":\"jzhpjbibgjmfx\",\"value\":\"vfcluyovwxnbkfe\"},{\"name\":\"xscyhwzdgirujbz\",\"value\":\"mvzzbtdcqvp\"},{\"name\":\"yujviylwdshfssn\",\"value\":\"gy\"},{\"name\":\"rymsgaojfmw\",\"value\":\"otmrfhir\"}],\"secretStoreComponent\":\"ymoxoftpipiwyczu\",\"metadata\":[{\"name\":\"pqjlihhyusps\",\"value\":\"sdvlmfwdgzxulucv\",\"secretRef\":\"mrsreuzvxurisjnh\"}],\"scopes\":[\"xifqjzgxm\",\"hu\"]}")
                .toObject(DaprComponentProperties.class);
        Assertions.assertEquals("xtqmieoxor", model.componentType());
        Assertions.assertEquals("ufhyaomtbgh", model.version());
        Assertions.assertEquals(false, model.ignoreErrors());
        Assertions.assertEquals("rvk", model.initTimeout());
        Assertions.assertEquals("jzhpjbibgjmfx", model.secrets().get(0).name());
        Assertions.assertEquals("vfcluyovwxnbkfe", model.secrets().get(0).value());
        Assertions.assertEquals("ymoxoftpipiwyczu", model.secretStoreComponent());
        Assertions.assertEquals("pqjlihhyusps", model.metadata().get(0).name());
        Assertions.assertEquals("sdvlmfwdgzxulucv", model.metadata().get(0).value());
        Assertions.assertEquals("mrsreuzvxurisjnh", model.metadata().get(0).secretRef());
        Assertions.assertEquals("xifqjzgxm", model.scopes().get(0));
    }

    @Test
    public void testSerialize() {
        DaprComponentProperties model =
            new DaprComponentProperties()
                .withComponentType("xtqmieoxor")
                .withVersion("ufhyaomtbgh")
                .withIgnoreErrors(false)
                .withInitTimeout("rvk")
                .withSecrets(
                    Arrays
                        .asList(
                            new Secret().withName("jzhpjbibgjmfx").withValue("vfcluyovwxnbkfe"),
                            new Secret().withName("xscyhwzdgirujbz").withValue("mvzzbtdcqvp"),
                            new Secret().withName("yujviylwdshfssn").withValue("gy"),
                            new Secret().withName("rymsgaojfmw").withValue("otmrfhir")))
                .withSecretStoreComponent("ymoxoftpipiwyczu")
                .withMetadata(
                    Arrays
                        .asList(
                            new DaprMetadata()
                                .withName("pqjlihhyusps")
                                .withValue("sdvlmfwdgzxulucv")
                                .withSecretRef("mrsreuzvxurisjnh")))
                .withScopes(Arrays.asList("xifqjzgxm", "hu"));
        model = BinaryData.fromObject(model).toObject(DaprComponentProperties.class);
        Assertions.assertEquals("xtqmieoxor", model.componentType());
        Assertions.assertEquals("ufhyaomtbgh", model.version());
        Assertions.assertEquals(false, model.ignoreErrors());
        Assertions.assertEquals("rvk", model.initTimeout());
        Assertions.assertEquals("jzhpjbibgjmfx", model.secrets().get(0).name());
        Assertions.assertEquals("vfcluyovwxnbkfe", model.secrets().get(0).value());
        Assertions.assertEquals("ymoxoftpipiwyczu", model.secretStoreComponent());
        Assertions.assertEquals("pqjlihhyusps", model.metadata().get(0).name());
        Assertions.assertEquals("sdvlmfwdgzxulucv", model.metadata().get(0).value());
        Assertions.assertEquals("mrsreuzvxurisjnh", model.metadata().get(0).secretRef());
        Assertions.assertEquals("xifqjzgxm", model.scopes().get(0));
    }
}
