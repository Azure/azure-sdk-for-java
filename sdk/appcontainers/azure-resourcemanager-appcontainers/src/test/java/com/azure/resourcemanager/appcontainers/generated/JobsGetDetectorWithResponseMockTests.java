// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcontainers.ContainerAppsApiManager;
import com.azure.resourcemanager.appcontainers.models.Diagnostics;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class JobsGetDetectorWithResponseMockTests {
    @Test
    public void testGetDetectorWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"metadata\":{\"id\":\"bgpxebjlu\",\"name\":\"aytujraxdtpryjm\",\"description\":\"nsewouxl\",\"author\":\"s\",\"category\":\"yljurkeposehqqyl\",\"supportTopicList\":[{\"id\":\"wjwdsdlzmkxer\",\"pesId\":\"xoteehkhowg\"},{\"id\":\"vvh\",\"pesId\":\"wpcbapnpxr\"},{\"id\":\"awbmpsp\",\"pesId\":\"ylqlocvvujexaygl\"}],\"analysisTypes\":[\"gjnm\"],\"type\":\"aslavxj\",\"score\":5.994397},\"dataset\":[{\"table\":{\"tableName\":\"eidzlvssqywjopa\",\"columns\":[{},{},{}],\"rows\":[\"datadvikm\"]},\"renderingProperties\":{\"type\":544863944,\"title\":\"illxg\",\"description\":\"cizwgsori\",\"isVisible\":false}},{\"table\":{\"tableName\":\"iyd\",\"columns\":[{},{},{},{}],\"rows\":[\"datahbo\",\"dataayrgwy\",\"datari\",\"datapdweoft\"]},\"renderingProperties\":{\"type\":211117278,\"title\":\"igsioctqkm\",\"description\":\"a\",\"isVisible\":false}},{\"table\":{\"tableName\":\"ffhtjnw\",\"columns\":[{},{}],\"rows\":[\"datajxtvlxxzqfcwrrio\",\"dataxeezwyhjmbjiqe\",\"datamx\"]},\"renderingProperties\":{\"type\":1979628961,\"title\":\"cwhpy\",\"description\":\"kgdet\",\"isVisible\":true}}],\"status\":{\"message\":\"nzbjekwuycky\",\"statusId\":1123787706},\"dataProviderMetadata\":{\"providerName\":\"muffiwjbctvbpzu\",\"propertyBag\":[{\"name\":\"otdxpo\",\"value\":\"slhwuusieckty\"},{\"name\":\"jux\",\"value\":\"hhxomildd\"},{\"name\":\"x\",\"value\":\"gxwjwil\"}]}},\"id\":\"rslaatep\",\"name\":\"wuj\",\"type\":\"zgxqgqwlxr\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Diagnostics response = manager.jobs()
            .getDetectorWithResponse("nmgsdaluyckhef", "b", "s", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("gjnm", response.properties().metadata().analysisTypes().get(0));
        Assertions.assertEquals("eidzlvssqywjopa", response.properties().dataset().get(0).table().tableName());
        Assertions.assertEquals(544863944, response.properties().dataset().get(0).renderingProperties().type());
        Assertions.assertEquals("illxg", response.properties().dataset().get(0).renderingProperties().title());
        Assertions.assertEquals("cizwgsori",
            response.properties().dataset().get(0).renderingProperties().description());
        Assertions.assertFalse(response.properties().dataset().get(0).renderingProperties().isVisible());
        Assertions.assertEquals("nzbjekwuycky", response.properties().status().message());
        Assertions.assertEquals(1123787706, response.properties().status().statusId());
        Assertions.assertEquals("muffiwjbctvbpzu", response.properties().dataProviderMetadata().providerName());
        Assertions.assertEquals("otdxpo", response.properties().dataProviderMetadata().propertyBag().get(0).name());
        Assertions.assertEquals("slhwuusieckty",
            response.properties().dataProviderMetadata().propertyBag().get(0).value());
    }
}
