// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcontainers.ContainerAppsApiManager;
import com.azure.resourcemanager.appcontainers.models.Diagnostics;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class JobsGetDetectorWithResponseMockTests {
    @Test
    public void testGetDetectorWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"metadata\":{\"id\":\"fcnlrtbfi\",\"name\":\"z\",\"description\":\"o\",\"author\":\"olbuauktwieope\",\"category\":\"lxqdwr\",\"supportTopicList\":[{\"id\":\"ljpibkgxyxyauxre\",\"pesId\":\"obmc\"}],\"analysisTypes\":[\"mwytkuj\",\"qycmmoxf\",\"bl\",\"gpwb\"],\"type\":\"hr\",\"score\":10.586852},\"dataset\":[{\"table\":{\"tableName\":\"cgnwplrrbphcts\",\"columns\":[{},{},{}],\"rows\":[\"dataicuhqvumspb\",\"datasfeqbbe\",\"dataf\"]},\"renderingProperties\":{\"type\":627484217,\"title\":\"yyxmzrmtmvwituw\",\"description\":\"yjshcyb\",\"isVisible\":false}},{\"table\":{\"tableName\":\"oxpr\",\"columns\":[{}],\"rows\":[\"dataujx\",\"dataiikmoxrezsvavlrx\"]},\"renderingProperties\":{\"type\":1467273879,\"title\":\"ywlunpipcwybs\",\"description\":\"ncnpat\",\"isVisible\":true}},{\"table\":{\"tableName\":\"ebwf\",\"columns\":[{},{}],\"rows\":[\"datapwal\"]},\"renderingProperties\":{\"type\":1305887513,\"title\":\"exojfccy\",\"description\":\"trhthvazjpwex\",\"isVisible\":true}}],\"status\":{\"message\":\"robzzxezmnrkjgpj\",\"statusId\":1803427824},\"dataProviderMetadata\":{\"providerName\":\"hlokfpmijpdvzv\",\"propertyBag\":[{\"name\":\"bd\",\"value\":\"fvcgnrglaqr\"}]}},\"id\":\"ambhbafebzxf\",\"name\":\"jqut\",\"type\":\"bhlenntrvrkpsab\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Diagnostics response = manager.jobs()
            .getDetectorWithResponse("pblalhhez", "fkissaidqzsaa", "qdsgptotxj", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("mwytkuj", response.properties().metadata().analysisTypes().get(0));
        Assertions.assertEquals("cgnwplrrbphcts", response.properties().dataset().get(0).table().tableName());
        Assertions.assertEquals(627484217, response.properties().dataset().get(0).renderingProperties().type());
        Assertions.assertEquals("yyxmzrmtmvwituw",
            response.properties().dataset().get(0).renderingProperties().title());
        Assertions.assertEquals("yjshcyb", response.properties().dataset().get(0).renderingProperties().description());
        Assertions.assertEquals(false, response.properties().dataset().get(0).renderingProperties().isVisible());
        Assertions.assertEquals("robzzxezmnrkjgpj", response.properties().status().message());
        Assertions.assertEquals(1803427824, response.properties().status().statusId());
        Assertions.assertEquals("hlokfpmijpdvzv", response.properties().dataProviderMetadata().providerName());
        Assertions.assertEquals("bd", response.properties().dataProviderMetadata().propertyBag().get(0).name());
        Assertions.assertEquals("fvcgnrglaqr",
            response.properties().dataProviderMetadata().propertyBag().get(0).value());
    }
}
