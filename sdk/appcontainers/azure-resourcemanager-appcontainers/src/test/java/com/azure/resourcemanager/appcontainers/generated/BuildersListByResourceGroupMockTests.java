// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcontainers.ContainerAppsApiManager;
import com.azure.resourcemanager.appcontainers.models.BuilderResource;
import com.azure.resourcemanager.appcontainers.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class BuildersListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Creating\",\"environmentId\":\"lwcerwkwb\",\"containerRegistries\":[{\"containerRegistryServer\":\"ljtxbus\",\"identityResourceId\":\"tbxxniuisd\"},{\"containerRegistryServer\":\"hg\",\"identityResourceId\":\"d\"},{\"containerRegistryServer\":\"zpa\",\"identityResourceId\":\"secnadbuwqrgxf\"},{\"containerRegistryServer\":\"lmqiynezoel\",\"identityResourceId\":\"nkkiiwvmtumxpy\"}]},\"identity\":{\"principalId\":\"0d3a132e-8589-4fb5-815b-3c7d1121ec90\",\"tenantId\":\"a3a695e6-ebc6-4d13-a81b-3c02a24289fc\",\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{\"qvqpilrg\":{\"principalId\":\"7e2464e0-b2af-4f4e-8102-b83a1eadd61f\",\"clientId\":\"26b69a52-6f3b-4da8-8dc4-9e7c6b4672ea\"}}},\"location\":\"canlduwzorxs\",\"tags\":{\"x\":\"aqklxy\"},\"id\":\"qvfqepdxc\",\"name\":\"tuubwyvpjb\",\"type\":\"wcpjqduqgi\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<BuilderResource> response
            = manager.builders().listByResourceGroup("w", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("canlduwzorxs", response.iterator().next().location());
        Assertions.assertEquals("aqklxy", response.iterator().next().tags().get("x"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED,
            response.iterator().next().identity().type());
        Assertions.assertEquals("lwcerwkwb", response.iterator().next().environmentId());
        Assertions.assertEquals("ljtxbus",
            response.iterator().next().containerRegistries().get(0).containerRegistryServer());
        Assertions.assertEquals("tbxxniuisd",
            response.iterator().next().containerRegistries().get(0).identityResourceId());
    }
}
