// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.Scheme;
import com.azure.resourcemanager.appcontainers.models.SessionProbe;
import com.azure.resourcemanager.appcontainers.models.SessionProbeHttpGet;
import com.azure.resourcemanager.appcontainers.models.SessionProbeHttpGetHttpHeadersItem;
import com.azure.resourcemanager.appcontainers.models.SessionProbeTcpSocket;
import com.azure.resourcemanager.appcontainers.models.SessionProbeType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SessionProbeTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SessionProbe model = BinaryData.fromString(
            "{\"type\":\"Liveness\",\"httpGet\":{\"host\":\"iyjvz\",\"httpHeaders\":[{\"name\":\"srnawnvzmln\",\"value\":\"oywsxvjabjqqaxu\"},{\"name\":\"vym\",\"value\":\"nudn\"},{\"name\":\"oabhjxwxqweuip\",\"value\":\"pvksmit\"},{\"name\":\"sqxtltclkrdpq\",\"value\":\"fhyrfrakk\"}],\"path\":\"grcwfcmfcnrjajq\",\"port\":2115283689,\"scheme\":\"HTTPS\"},\"tcpSocket\":{\"host\":\"ielnz\",\"port\":1395640980},\"failureThreshold\":963386262,\"initialDelaySeconds\":1616070936,\"periodSeconds\":685427163,\"successThreshold\":330741840,\"terminationGracePeriodSeconds\":2793013597083806139,\"timeoutSeconds\":1104585121}")
            .toObject(SessionProbe.class);
        Assertions.assertEquals(SessionProbeType.LIVENESS, model.type());
        Assertions.assertEquals("iyjvz", model.httpGet().host());
        Assertions.assertEquals("srnawnvzmln", model.httpGet().httpHeaders().get(0).name());
        Assertions.assertEquals("oywsxvjabjqqaxu", model.httpGet().httpHeaders().get(0).value());
        Assertions.assertEquals("grcwfcmfcnrjajq", model.httpGet().path());
        Assertions.assertEquals(2115283689, model.httpGet().port());
        Assertions.assertEquals(Scheme.HTTPS, model.httpGet().scheme());
        Assertions.assertEquals("ielnz", model.tcpSocket().host());
        Assertions.assertEquals(1395640980, model.tcpSocket().port());
        Assertions.assertEquals(963386262, model.failureThreshold());
        Assertions.assertEquals(1616070936, model.initialDelaySeconds());
        Assertions.assertEquals(685427163, model.periodSeconds());
        Assertions.assertEquals(330741840, model.successThreshold());
        Assertions.assertEquals(2793013597083806139L, model.terminationGracePeriodSeconds());
        Assertions.assertEquals(1104585121, model.timeoutSeconds());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SessionProbe model = new SessionProbe().withType(SessionProbeType.LIVENESS)
            .withHttpGet(new SessionProbeHttpGet().withHost("iyjvz")
                .withHttpHeaders(Arrays.asList(
                    new SessionProbeHttpGetHttpHeadersItem().withName("srnawnvzmln").withValue("oywsxvjabjqqaxu"),
                    new SessionProbeHttpGetHttpHeadersItem().withName("vym").withValue("nudn"),
                    new SessionProbeHttpGetHttpHeadersItem().withName("oabhjxwxqweuip").withValue("pvksmit"),
                    new SessionProbeHttpGetHttpHeadersItem().withName("sqxtltclkrdpq").withValue("fhyrfrakk")))
                .withPath("grcwfcmfcnrjajq")
                .withPort(2115283689)
                .withScheme(Scheme.HTTPS))
            .withTcpSocket(new SessionProbeTcpSocket().withHost("ielnz").withPort(1395640980))
            .withFailureThreshold(963386262)
            .withInitialDelaySeconds(1616070936)
            .withPeriodSeconds(685427163)
            .withSuccessThreshold(330741840)
            .withTerminationGracePeriodSeconds(2793013597083806139L)
            .withTimeoutSeconds(1104585121);
        model = BinaryData.fromObject(model).toObject(SessionProbe.class);
        Assertions.assertEquals(SessionProbeType.LIVENESS, model.type());
        Assertions.assertEquals("iyjvz", model.httpGet().host());
        Assertions.assertEquals("srnawnvzmln", model.httpGet().httpHeaders().get(0).name());
        Assertions.assertEquals("oywsxvjabjqqaxu", model.httpGet().httpHeaders().get(0).value());
        Assertions.assertEquals("grcwfcmfcnrjajq", model.httpGet().path());
        Assertions.assertEquals(2115283689, model.httpGet().port());
        Assertions.assertEquals(Scheme.HTTPS, model.httpGet().scheme());
        Assertions.assertEquals("ielnz", model.tcpSocket().host());
        Assertions.assertEquals(1395640980, model.tcpSocket().port());
        Assertions.assertEquals(963386262, model.failureThreshold());
        Assertions.assertEquals(1616070936, model.initialDelaySeconds());
        Assertions.assertEquals(685427163, model.periodSeconds());
        Assertions.assertEquals(330741840, model.successThreshold());
        Assertions.assertEquals(2793013597083806139L, model.terminationGracePeriodSeconds());
        Assertions.assertEquals(1104585121, model.timeoutSeconds());
    }
}
