// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcontainers.ContainerAppsApiManager;
import com.azure.resourcemanager.appcontainers.models.WorkloadProfileStates;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ManagedEnvironmentsListWorkloadProfileStatesMockTests {
    @Test
    public void testListWorkloadProfileStates() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"minimumCount\":505805873,\"maximumCount\":1173974314,\"currentCount\":2109042610},\"id\":\"velffohuriw\",\"name\":\"jdfrwpsshrmnkccl\",\"type\":\"c\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<WorkloadProfileStates> response = manager.managedEnvironments()
            .listWorkloadProfileStates("mrnotocjnzdaiovr", "hrpqphkvyyzadcrx", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(505805873, response.iterator().next().properties().minimumCount());
        Assertions.assertEquals(1173974314, response.iterator().next().properties().maximumCount());
        Assertions.assertEquals(2109042610, response.iterator().next().properties().currentCount());
    }
}
