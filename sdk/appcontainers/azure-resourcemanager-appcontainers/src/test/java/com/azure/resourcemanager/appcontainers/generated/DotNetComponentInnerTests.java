// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.DotNetComponentInner;
import com.azure.resourcemanager.appcontainers.models.DotNetComponentConfigurationProperty;
import com.azure.resourcemanager.appcontainers.models.DotNetComponentServiceBind;
import com.azure.resourcemanager.appcontainers.models.DotNetComponentType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DotNetComponentInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DotNetComponentInner model = BinaryData.fromString(
            "{\"properties\":{\"componentType\":\"AspireDashboard\",\"provisioningState\":\"Failed\",\"configurations\":[{\"propertyName\":\"jzfpafolpymwamx\",\"value\":\"rag\"}],\"serviceBinds\":[{\"name\":\"htvdula\",\"serviceId\":\"lejchcsr\"},{\"name\":\"knmzlanrupdwvnp\",\"serviceId\":\"nzqtpjhmqrhvt\"}]},\"id\":\"aiwdcxsmlzzhz\",\"name\":\"txetlgydl\",\"type\":\"qvlnnpxybafiqgea\"}")
            .toObject(DotNetComponentInner.class);
        Assertions.assertEquals(DotNetComponentType.ASPIRE_DASHBOARD, model.componentType());
        Assertions.assertEquals("jzfpafolpymwamx", model.configurations().get(0).propertyName());
        Assertions.assertEquals("rag", model.configurations().get(0).value());
        Assertions.assertEquals("htvdula", model.serviceBinds().get(0).name());
        Assertions.assertEquals("lejchcsr", model.serviceBinds().get(0).serviceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DotNetComponentInner model = new DotNetComponentInner().withComponentType(DotNetComponentType.ASPIRE_DASHBOARD)
            .withConfigurations(Arrays.asList(
                new DotNetComponentConfigurationProperty().withPropertyName("jzfpafolpymwamx").withValue("rag")))
            .withServiceBinds(
                Arrays.asList(new DotNetComponentServiceBind().withName("htvdula").withServiceId("lejchcsr"),
                    new DotNetComponentServiceBind().withName("knmzlanrupdwvnp").withServiceId("nzqtpjhmqrhvt")));
        model = BinaryData.fromObject(model).toObject(DotNetComponentInner.class);
        Assertions.assertEquals(DotNetComponentType.ASPIRE_DASHBOARD, model.componentType());
        Assertions.assertEquals("jzfpafolpymwamx", model.configurations().get(0).propertyName());
        Assertions.assertEquals("rag", model.configurations().get(0).value());
        Assertions.assertEquals("htvdula", model.serviceBinds().get(0).name());
        Assertions.assertEquals("lejchcsr", model.serviceBinds().get(0).serviceId());
    }
}
