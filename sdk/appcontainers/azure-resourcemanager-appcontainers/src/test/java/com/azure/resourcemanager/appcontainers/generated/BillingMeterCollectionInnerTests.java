// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.BillingMeterCollectionInner;
import com.azure.resourcemanager.appcontainers.models.BillingMeter;
import com.azure.resourcemanager.appcontainers.models.BillingMeterProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BillingMeterCollectionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BillingMeterCollectionInner model = BinaryData.fromString(
            "{\"value\":[{\"id\":\"i\",\"name\":\"rvkdvjsllrm\",\"type\":\"d\",\"location\":\"t\",\"properties\":{\"category\":\"pulexxbczw\",\"meterType\":\"uwiqzb\",\"displayName\":\"vsovmyokac\"}},{\"id\":\"kwlhzdo\",\"name\":\"xjmflbvv\",\"type\":\"hrk\",\"location\":\"wwzjuqkhrsajiwku\",\"properties\":{\"category\":\"skghsauuimj\",\"meterType\":\"xieduugidyjrr\",\"displayName\":\"y\"}},{\"id\":\"svexcsonpclhoco\",\"name\":\"lkevle\",\"type\":\"zfbuhf\",\"location\":\"axkffei\",\"properties\":{\"category\":\"lvmezyvshxmzsbbz\",\"meterType\":\"gigr\",\"displayName\":\"burvjxxjnspy\"}},{\"id\":\"tko\",\"name\":\"kouknvudwtiu\",\"type\":\"ldngkpoci\",\"location\":\"yxoegukgjnp\",\"properties\":{\"category\":\"gygev\",\"meterType\":\"ntypmrbpizcdrqj\",\"displayName\":\"pyd\"}}]}")
            .toObject(BillingMeterCollectionInner.class);
        Assertions.assertEquals("t", model.value().get(0).location());
        Assertions.assertEquals("pulexxbczw", model.value().get(0).properties().category());
        Assertions.assertEquals("uwiqzb", model.value().get(0).properties().meterType());
        Assertions.assertEquals("vsovmyokac", model.value().get(0).properties().displayName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BillingMeterCollectionInner model = new BillingMeterCollectionInner().withValue(Arrays.asList(
            new BillingMeter().withLocation("t")
                .withProperties(new BillingMeterProperties().withCategory("pulexxbczw")
                    .withMeterType("uwiqzb")
                    .withDisplayName("vsovmyokac")),
            new BillingMeter().withLocation("wwzjuqkhrsajiwku")
                .withProperties(new BillingMeterProperties().withCategory("skghsauuimj")
                    .withMeterType("xieduugidyjrr")
                    .withDisplayName("y")),
            new BillingMeter().withLocation("axkffei")
                .withProperties(new BillingMeterProperties().withCategory("lvmezyvshxmzsbbz")
                    .withMeterType("gigr")
                    .withDisplayName("burvjxxjnspy")),
            new BillingMeter().withLocation("yxoegukgjnp")
                .withProperties(new BillingMeterProperties().withCategory("gygev")
                    .withMeterType("ntypmrbpizcdrqj")
                    .withDisplayName("pyd"))));
        model = BinaryData.fromObject(model).toObject(BillingMeterCollectionInner.class);
        Assertions.assertEquals("t", model.value().get(0).location());
        Assertions.assertEquals("pulexxbczw", model.value().get(0).properties().category());
        Assertions.assertEquals("uwiqzb", model.value().get(0).properties().meterType());
        Assertions.assertEquals("vsovmyokac", model.value().get(0).properties().displayName());
    }
}
