// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.BillingMeterCollectionInner;
import com.azure.resourcemanager.appcontainers.models.BillingMeter;
import com.azure.resourcemanager.appcontainers.models.BillingMeterProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BillingMeterCollectionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BillingMeterCollectionInner model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"location\":\"yzydagfuaxbezyi\",\"properties\":{\"category\":\"ktwh\",\"meterType\":\"xw\",\"displayName\":\"wqsmbsur\"},\"id\":\"xim\",\"name\":\"ryocfsfksymdd\",\"type\":\"stkiiuxhqyud\"},{\"location\":\"rrqnbpoczvyifqrv\",\"properties\":{\"category\":\"jsllrmv\",\"meterType\":\"f\",\"displayName\":\"t\"},\"id\":\"pnpulexxbczwtru\",\"name\":\"iqzbq\",\"type\":\"vsovmyokac\"},{\"location\":\"kwlhzdo\",\"properties\":{\"category\":\"jmflbvvnch\",\"meterType\":\"cciw\",\"displayName\":\"juqk\"},\"id\":\"rsa\",\"name\":\"iwkuofos\",\"type\":\"ghsauuimjmvxied\"}]}")
                .toObject(BillingMeterCollectionInner.class);
        Assertions.assertEquals("yzydagfuaxbezyi", model.value().get(0).location());
        Assertions.assertEquals("ktwh", model.value().get(0).properties().category());
        Assertions.assertEquals("xw", model.value().get(0).properties().meterType());
        Assertions.assertEquals("wqsmbsur", model.value().get(0).properties().displayName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BillingMeterCollectionInner model =
            new BillingMeterCollectionInner()
                .withValue(
                    Arrays
                        .asList(
                            new BillingMeter()
                                .withLocation("yzydagfuaxbezyi")
                                .withProperties(
                                    new BillingMeterProperties()
                                        .withCategory("ktwh")
                                        .withMeterType("xw")
                                        .withDisplayName("wqsmbsur")),
                            new BillingMeter()
                                .withLocation("rrqnbpoczvyifqrv")
                                .withProperties(
                                    new BillingMeterProperties()
                                        .withCategory("jsllrmv")
                                        .withMeterType("f")
                                        .withDisplayName("t")),
                            new BillingMeter()
                                .withLocation("kwlhzdo")
                                .withProperties(
                                    new BillingMeterProperties()
                                        .withCategory("jmflbvvnch")
                                        .withMeterType("cciw")
                                        .withDisplayName("juqk"))));
        model = BinaryData.fromObject(model).toObject(BillingMeterCollectionInner.class);
        Assertions.assertEquals("yzydagfuaxbezyi", model.value().get(0).location());
        Assertions.assertEquals("ktwh", model.value().get(0).properties().category());
        Assertions.assertEquals("xw", model.value().get(0).properties().meterType());
        Assertions.assertEquals("wqsmbsur", model.value().get(0).properties().displayName());
    }
}
