// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcontainers.ContainerAppsApiManager;
import com.azure.resourcemanager.appcontainers.models.PrivateEndpoint;
import com.azure.resourcemanager.appcontainers.models.PrivateEndpointConnection;
import com.azure.resourcemanager.appcontainers.models.PrivateEndpointServiceConnectionStatus;
import com.azure.resourcemanager.appcontainers.models.PrivateLinkServiceConnectionState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ManagedEnvironmentPrivateEndpointConnectionsCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"groupIds\":[\"fvvraab\",\"urdeewlsuxp\",\"bwkdwjyjiznioroo\"],\"privateEndpoint\":{\"id\":\"taspmcrei\"},\"privateLinkServiceConnectionState\":{\"status\":\"Disconnected\",\"description\":\"rnig\",\"actionsRequired\":\"inuwqxungrob\"},\"provisioningState\":\"Succeeded\"},\"id\":\"sxjwdy\",\"name\":\"wxm\",\"type\":\"zjow\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PrivateEndpointConnection response = manager.managedEnvironmentPrivateEndpointConnections()
            .define("uog")
            .withExistingManagedEnvironment("zufy", "dxmlynzlyvapbkr")
            .withPrivateEndpoint(new PrivateEndpoint())
            .withPrivateLinkServiceConnectionState(
                new PrivateLinkServiceConnectionState().withStatus(PrivateEndpointServiceConnectionStatus.APPROVED)
                    .withDescription("tctkhfhfs")
                    .withActionsRequired("vcsxrmhnmiz"))
            .create();

        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.DISCONNECTED,
            response.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("rnig", response.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("inuwqxungrob", response.privateLinkServiceConnectionState().actionsRequired());
    }
}
