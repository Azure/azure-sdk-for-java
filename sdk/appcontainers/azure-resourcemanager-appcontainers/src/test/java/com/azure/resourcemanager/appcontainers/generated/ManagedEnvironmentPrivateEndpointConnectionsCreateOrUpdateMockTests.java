// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcontainers.ContainerAppsApiManager;
import com.azure.resourcemanager.appcontainers.models.PrivateEndpoint;
import com.azure.resourcemanager.appcontainers.models.PrivateEndpointConnection;
import com.azure.resourcemanager.appcontainers.models.PrivateEndpointServiceConnectionStatus;
import com.azure.resourcemanager.appcontainers.models.PrivateLinkServiceConnectionState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ManagedEnvironmentPrivateEndpointConnectionsCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"groupIds\":[\"bja\"],\"privateEndpoint\":{\"id\":\"oclannmxynlsuq\"},\"privateLinkServiceConnectionState\":{\"status\":\"Disconnected\",\"description\":\"trkt\",\"actionsRequired\":\"patr\"},\"provisioningState\":\"Succeeded\"},\"id\":\"tfinfhoksmmculwk\",\"name\":\"icruo\",\"type\":\"krjflsgaojb\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PrivateEndpointConnection response
            = manager.managedEnvironmentPrivateEndpointConnections()
                .define("ujjcxgdqmrlhn")
                .withExistingManagedEnvironment("jxvtrkfkgenjqnnp", "wkosnyxigf")
                .withPrivateEndpoint(new PrivateEndpoint())
                .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                    .withStatus(PrivateEndpointServiceConnectionStatus.DISCONNECTED)
                    .withDescription("ekd")
                    .withActionsRequired("vuftrsvjmnsvu"))
                .create();

        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.DISCONNECTED,
            response.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("trkt", response.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("patr", response.privateLinkServiceConnectionState().actionsRequired());
    }
}
