// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.AllowedPrincipals;
import com.azure.resourcemanager.appcontainers.models.AzureActiveDirectoryValidation;
import com.azure.resourcemanager.appcontainers.models.DefaultAuthorizationPolicy;
import com.azure.resourcemanager.appcontainers.models.JwtClaimChecks;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class AzureActiveDirectoryValidationTests {
    @Test
    public void testDeserialize() {
        AzureActiveDirectoryValidation model =
            BinaryData
                .fromString(
                    "{\"jwtClaimChecks\":{\"allowedGroups\":[\"lyxwjkcprbnwbx\",\"jvtbvpyss\",\"dnrujqguhmuouqfp\",\"wzwbnguitn\"],\"allowedClientApplications\":[\"zga\",\"x\"]},\"allowedAudiences\":[\"zuckyfi\",\"rfidfvzwdz\",\"htymw\",\"sdkf\"],\"defaultAuthorizationPolicy\":{\"allowedPrincipals\":{\"groups\":[\"nteiwaopv\",\"mijcmmxdcufufs\"],\"identities\":[\"mzidnsezcxtb\",\"sgfyccsnew\"]},\"allowedApplications\":[\"z\",\"eiachboosflnr\"]}}")
                .toObject(AzureActiveDirectoryValidation.class);
        Assertions.assertEquals("lyxwjkcprbnwbx", model.jwtClaimChecks().allowedGroups().get(0));
        Assertions.assertEquals("zga", model.jwtClaimChecks().allowedClientApplications().get(0));
        Assertions.assertEquals("zuckyfi", model.allowedAudiences().get(0));
        Assertions.assertEquals("nteiwaopv", model.defaultAuthorizationPolicy().allowedPrincipals().groups().get(0));
        Assertions
            .assertEquals("mzidnsezcxtb", model.defaultAuthorizationPolicy().allowedPrincipals().identities().get(0));
        Assertions.assertEquals("z", model.defaultAuthorizationPolicy().allowedApplications().get(0));
    }

    @Test
    public void testSerialize() {
        AzureActiveDirectoryValidation model =
            new AzureActiveDirectoryValidation()
                .withJwtClaimChecks(
                    new JwtClaimChecks()
                        .withAllowedGroups(
                            Arrays.asList("lyxwjkcprbnwbx", "jvtbvpyss", "dnrujqguhmuouqfp", "wzwbnguitn"))
                        .withAllowedClientApplications(Arrays.asList("zga", "x")))
                .withAllowedAudiences(Arrays.asList("zuckyfi", "rfidfvzwdz", "htymw", "sdkf"))
                .withDefaultAuthorizationPolicy(
                    new DefaultAuthorizationPolicy()
                        .withAllowedPrincipals(
                            new AllowedPrincipals()
                                .withGroups(Arrays.asList("nteiwaopv", "mijcmmxdcufufs"))
                                .withIdentities(Arrays.asList("mzidnsezcxtb", "sgfyccsnew")))
                        .withAllowedApplications(Arrays.asList("z", "eiachboosflnr")));
        model = BinaryData.fromObject(model).toObject(AzureActiveDirectoryValidation.class);
        Assertions.assertEquals("lyxwjkcprbnwbx", model.jwtClaimChecks().allowedGroups().get(0));
        Assertions.assertEquals("zga", model.jwtClaimChecks().allowedClientApplications().get(0));
        Assertions.assertEquals("zuckyfi", model.allowedAudiences().get(0));
        Assertions.assertEquals("nteiwaopv", model.defaultAuthorizationPolicy().allowedPrincipals().groups().get(0));
        Assertions
            .assertEquals("mzidnsezcxtb", model.defaultAuthorizationPolicy().allowedPrincipals().identities().get(0));
        Assertions.assertEquals("z", model.defaultAuthorizationPolicy().allowedApplications().get(0));
    }
}
