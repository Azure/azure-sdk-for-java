// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.JobExecutionInner;
import com.azure.resourcemanager.appcontainers.models.ContainerResources;
import com.azure.resourcemanager.appcontainers.models.EnvironmentVar;
import com.azure.resourcemanager.appcontainers.models.JobExecutionContainer;
import com.azure.resourcemanager.appcontainers.models.JobExecutionTemplate;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class JobExecutionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        JobExecutionInner model = BinaryData.fromString(
            "{\"name\":\"hlqhykprlpy\",\"id\":\"uciqdsme\",\"type\":\"itdfuxtyasiib\",\"properties\":{\"status\":\"Stopped\",\"startTime\":\"2021-02-06T14:14:01Z\",\"endTime\":\"2021-03-24T20:59:38Z\",\"template\":{\"containers\":[{\"image\":\"jh\",\"name\":\"g\",\"command\":[\"cmavmqfoudorhcg\",\"yprotwyp\",\"ndm\"],\"args\":[\"ugcmjkavlgorb\"],\"env\":[{}],\"resources\":{\"cpu\":76.50184391700549,\"memory\":\"fjltfvnzcyjtotp\",\"ephemeralStorage\":\"pvpbdbzqgqqiheds\"}}],\"initContainers\":[{\"image\":\"hmkyibc\",\"name\":\"ihsgq\",\"command\":[\"hohsd\",\"mcdzsufcohdxbz\",\"mcmuapc\",\"hdbevwqqxeyskon\"],\"args\":[\"nkfkbgbzb\",\"wxeqocljmygvkzqk\",\"jeokbzefezrxccz\"],\"env\":[{},{},{}],\"resources\":{\"cpu\":78.14739475558221,\"memory\":\"xbkwv\",\"ephemeralStorage\":\"nzvdfbzdixzmq\"}},{\"image\":\"odawopqhewjptmcg\",\"name\":\"ostzelndlatu\",\"command\":[\"lbiojlvfhrb\",\"pn\",\"qvcww\",\"yurmochpprprs\"],\"args\":[\"k\",\"yzejnhlbk\",\"bzpcpiljhahzvec\",\"ndbnwieh\"],\"env\":[{},{},{}],\"resources\":{\"cpu\":31.054065492211336,\"memory\":\"ubwefqs\",\"ephemeralStorage\":\"paq\"}}]}}}")
            .toObject(JobExecutionInner.class);
        Assertions.assertEquals("hlqhykprlpy", model.name());
        Assertions.assertEquals("uciqdsme", model.id());
        Assertions.assertEquals("itdfuxtyasiib", model.type());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-06T14:14:01Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-24T20:59:38Z"), model.endTime());
        Assertions.assertEquals("jh", model.template().containers().get(0).image());
        Assertions.assertEquals("g", model.template().containers().get(0).name());
        Assertions.assertEquals("cmavmqfoudorhcg", model.template().containers().get(0).command().get(0));
        Assertions.assertEquals("ugcmjkavlgorb", model.template().containers().get(0).args().get(0));
        Assertions.assertEquals(76.50184391700549D, model.template().containers().get(0).resources().cpu());
        Assertions.assertEquals("fjltfvnzcyjtotp", model.template().containers().get(0).resources().memory());
        Assertions.assertEquals("hmkyibc", model.template().initContainers().get(0).image());
        Assertions.assertEquals("ihsgq", model.template().initContainers().get(0).name());
        Assertions.assertEquals("hohsd", model.template().initContainers().get(0).command().get(0));
        Assertions.assertEquals("nkfkbgbzb", model.template().initContainers().get(0).args().get(0));
        Assertions.assertEquals(78.14739475558221D, model.template().initContainers().get(0).resources().cpu());
        Assertions.assertEquals("xbkwv", model.template().initContainers().get(0).resources().memory());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        JobExecutionInner model
            = new JobExecutionInner().withName("hlqhykprlpy")
                .withId("uciqdsme")
                .withType("itdfuxtyasiib")
                .withStartTime(OffsetDateTime.parse("2021-02-06T14:14:01Z"))
                .withEndTime(OffsetDateTime.parse("2021-03-24T20:59:38Z"))
                .withTemplate(
                    new JobExecutionTemplate()
                        .withContainers(
                            Arrays.asList(new JobExecutionContainer().withImage("jh")
                                .withName("g")
                                .withCommand(Arrays.asList("cmavmqfoudorhcg", "yprotwyp", "ndm"))
                                .withArgs(Arrays.asList("ugcmjkavlgorb"))
                                .withEnv(Arrays.asList(new EnvironmentVar()))
                                .withResources(new ContainerResources().withCpu(76.50184391700549D)
                                    .withMemory("fjltfvnzcyjtotp"))))
                        .withInitContainers(
                            Arrays
                                .asList(
                                    new JobExecutionContainer().withImage("hmkyibc")
                                        .withName("ihsgq")
                                        .withCommand(
                                            Arrays.asList("hohsd", "mcdzsufcohdxbz", "mcmuapc", "hdbevwqqxeyskon"))
                                        .withArgs(Arrays.asList("nkfkbgbzb", "wxeqocljmygvkzqk", "jeokbzefezrxccz"))
                                        .withEnv(Arrays.asList(new EnvironmentVar(), new EnvironmentVar(),
                                            new EnvironmentVar()))
                                        .withResources(
                                            new ContainerResources().withCpu(78.14739475558221D).withMemory("xbkwv")),
                                    new JobExecutionContainer().withImage("odawopqhewjptmcg")
                                        .withName("ostzelndlatu")
                                        .withCommand(Arrays.asList("lbiojlvfhrb", "pn", "qvcww", "yurmochpprprs"))
                                        .withArgs(Arrays.asList("k", "yzejnhlbk", "bzpcpiljhahzvec", "ndbnwieh"))
                                        .withEnv(Arrays.asList(new EnvironmentVar(), new EnvironmentVar(),
                                            new EnvironmentVar()))
                                        .withResources(new ContainerResources().withCpu(31.054065492211336D)
                                            .withMemory("ubwefqs")))));
        model = BinaryData.fromObject(model).toObject(JobExecutionInner.class);
        Assertions.assertEquals("hlqhykprlpy", model.name());
        Assertions.assertEquals("uciqdsme", model.id());
        Assertions.assertEquals("itdfuxtyasiib", model.type());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-06T14:14:01Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-24T20:59:38Z"), model.endTime());
        Assertions.assertEquals("jh", model.template().containers().get(0).image());
        Assertions.assertEquals("g", model.template().containers().get(0).name());
        Assertions.assertEquals("cmavmqfoudorhcg", model.template().containers().get(0).command().get(0));
        Assertions.assertEquals("ugcmjkavlgorb", model.template().containers().get(0).args().get(0));
        Assertions.assertEquals(76.50184391700549D, model.template().containers().get(0).resources().cpu());
        Assertions.assertEquals("fjltfvnzcyjtotp", model.template().containers().get(0).resources().memory());
        Assertions.assertEquals("hmkyibc", model.template().initContainers().get(0).image());
        Assertions.assertEquals("ihsgq", model.template().initContainers().get(0).name());
        Assertions.assertEquals("hohsd", model.template().initContainers().get(0).command().get(0));
        Assertions.assertEquals("nkfkbgbzb", model.template().initContainers().get(0).args().get(0));
        Assertions.assertEquals(78.14739475558221D, model.template().initContainers().get(0).resources().cpu());
        Assertions.assertEquals("xbkwv", model.template().initContainers().get(0).resources().memory());
    }
}
