// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcontainers.ContainerAppsApiManager;
import com.azure.resourcemanager.appcontainers.models.DiagnosticsCollection;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ManagedEnvironmentDiagnosticsListDetectorsWithResponseMockTests {
    @Test
    public void testListDetectorsWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"metadata\":{\"id\":\"cefiqdkt\",\"name\":\"kvi\",\"description\":\"pfliwo\",\"author\":\"guuzh\",\"category\":\"ladpcmhjha\",\"supportTopicList\":[{},{}],\"analysisTypes\":[\"ekymffztsilscvqs\",\"eiihfymko\",\"ihyeseu\",\"gcigzh\"],\"type\":\"smg\",\"score\":10.501915},\"dataset\":[{},{}],\"status\":{\"message\":\"qbe\",\"statusId\":1386199066},\"dataProviderMetadata\":{\"providerName\":\"eglabtvkbiwznhtf\",\"propertyBag\":[{},{},{}]}},\"id\":\"udy\",\"name\":\"izpacz\",\"type\":\"uhbcak\"},{\"properties\":{\"metadata\":{\"id\":\"khoitw\",\"name\":\"jsdmm\",\"description\":\"dnckidbjpglhz\",\"author\":\"xzbawkikc\",\"category\":\"fhbssdpjeyoqxded\",\"supportTopicList\":[{}],\"analysisTypes\":[\"hagxsure\"],\"type\":\"rshzzbgullcxiqqz\",\"score\":23.802269},\"dataset\":[{},{},{}],\"status\":{\"message\":\"n\",\"statusId\":469087656},\"dataProviderMetadata\":{\"providerName\":\"ouigdmfivjqte\",\"propertyBag\":[{}]}},\"id\":\"igdyd\",\"name\":\"ghpcvrwqirvt\",\"type\":\"tyhhmvfxlapja\"}],\"nextLink\":\"dmkr\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DiagnosticsCollection response = manager.managedEnvironmentDiagnostics()
            .listDetectorsWithResponse("fshksnyzmspamwb", "m", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ekymffztsilscvqs",
            response.value().get(0).properties().metadata().analysisTypes().get(0));
        Assertions.assertEquals("qbe", response.value().get(0).properties().status().message());
        Assertions.assertEquals(1386199066, response.value().get(0).properties().status().statusId());
        Assertions.assertEquals("eglabtvkbiwznhtf",
            response.value().get(0).properties().dataProviderMetadata().providerName());
    }
}
