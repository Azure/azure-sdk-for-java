// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcontainers.ContainerAppsApiManager;
import com.azure.resourcemanager.appcontainers.models.DiagnosticsCollection;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ManagedEnvironmentDiagnosticsListDetectorsWithResponseMockTests {
    @Test
    public void testListDetectorsWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"metadata\":{\"id\":\"lqcwnynll\",\"name\":\"q\",\"description\":\"bgvsbtsertoxadh\",\"author\":\"vjhxmnrqst\",\"category\":\"metwml\",\"supportTopicList\":[{},{}],\"analysisTypes\":[\"pvv\",\"hgjnaq\",\"qipslz\"],\"type\":\"cdsvmwbitek\",\"score\":75.17361},\"dataset\":[{},{},{}],\"status\":{\"message\":\"iy\",\"statusId\":930385503},\"dataProviderMetadata\":{\"providerName\":\"hgybfzdqekivycpz\",\"propertyBag\":[{}]}},\"id\":\"zulrqt\",\"name\":\"htre\",\"type\":\"pzl\"},{\"properties\":{\"metadata\":{\"id\":\"mxmdutzfkgilnou\",\"name\":\"cgndjgdp\",\"description\":\"ggqqyeqfcb\",\"author\":\"lpyuflqjf\",\"category\":\"tujcyoh\",\"supportTopicList\":[{},{},{},{}],\"analysisTypes\":[\"dc\",\"klkqnqvkixnmb\"],\"type\":\"ecuyr\",\"score\":13.284922},\"dataset\":[{},{},{}],\"status\":{\"message\":\"yspzvrie\",\"statusId\":364824427},\"dataProviderMetadata\":{\"providerName\":\"mdzxp\",\"propertyBag\":[{},{}]}},\"id\":\"vdvatlzmgsc\",\"name\":\"nzrsbkkzovlzdmn\",\"type\":\"mfwsxafofu\"},{\"properties\":{\"metadata\":{\"id\":\"mmovzwd\",\"name\":\"kkmvhzfovanyrva\",\"description\":\"tgelgwewikfy\",\"author\":\"a\",\"category\":\"mymnqoqjumovsf\",\"supportTopicList\":[{}],\"analysisTypes\":[\"opaxmf\"],\"type\":\"smcwoxfaxd\",\"score\":11.837917},\"dataset\":[{},{}],\"status\":{\"message\":\"atroiaue\",\"statusId\":1992627485},\"dataProviderMetadata\":{\"providerName\":\"cpcjycboelrgtt\",\"propertyBag\":[{},{},{}]}},\"id\":\"siuorinikcedpk\",\"name\":\"riwmmtmqrxrzqv\",\"type\":\"yczyayubtgm\"}],\"nextLink\":\"iqahragpx\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        DiagnosticsCollection response = manager.managedEnvironmentDiagnostics()
            .listDetectorsWithResponse("iiqqcqikclsmalns", "woykdnonaaxwm", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("pvv", response.value().get(0).properties().metadata().analysisTypes().get(0));
        Assertions.assertEquals("iy", response.value().get(0).properties().status().message());
        Assertions.assertEquals(930385503, response.value().get(0).properties().status().statusId());
        Assertions.assertEquals("hgybfzdqekivycpz",
            response.value().get(0).properties().dataProviderMetadata().providerName());
    }
}
