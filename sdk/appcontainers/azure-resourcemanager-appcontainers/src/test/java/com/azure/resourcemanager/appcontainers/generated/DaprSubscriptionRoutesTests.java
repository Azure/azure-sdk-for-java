// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.DaprSubscriptionRouteRule;
import com.azure.resourcemanager.appcontainers.models.DaprSubscriptionRoutes;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DaprSubscriptionRoutesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DaprSubscriptionRoutes model = BinaryData.fromString(
            "{\"rules\":[{\"match\":\"jcazt\",\"path\":\"snsqowxwcoml\"},{\"match\":\"ytwvczcswkacve\",\"path\":\"fdv\"}],\"default\":\"hbwrnfxtgddpqth\"}")
            .toObject(DaprSubscriptionRoutes.class);
        Assertions.assertEquals("jcazt", model.rules().get(0).match());
        Assertions.assertEquals("snsqowxwcoml", model.rules().get(0).path());
        Assertions.assertEquals("hbwrnfxtgddpqth", model.defaultProperty());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DaprSubscriptionRoutes model = new DaprSubscriptionRoutes()
            .withRules(Arrays.asList(new DaprSubscriptionRouteRule().withMatch("jcazt").withPath("snsqowxwcoml"),
                new DaprSubscriptionRouteRule().withMatch("ytwvczcswkacve").withPath("fdv")))
            .withDefaultProperty("hbwrnfxtgddpqth");
        model = BinaryData.fromObject(model).toObject(DaprSubscriptionRoutes.class);
        Assertions.assertEquals("jcazt", model.rules().get(0).match());
        Assertions.assertEquals("snsqowxwcoml", model.rules().get(0).path());
        Assertions.assertEquals("hbwrnfxtgddpqth", model.defaultProperty());
    }
}
