// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.DiagnosticDataProviderMetadata;
import com.azure.resourcemanager.appcontainers.models.DiagnosticDataProviderMetadataPropertyBagItem;
import com.azure.resourcemanager.appcontainers.models.DiagnosticDataTableResponseColumn;
import com.azure.resourcemanager.appcontainers.models.DiagnosticDataTableResponseObject;
import com.azure.resourcemanager.appcontainers.models.DiagnosticRendering;
import com.azure.resourcemanager.appcontainers.models.DiagnosticSupportTopic;
import com.azure.resourcemanager.appcontainers.models.DiagnosticsDataApiResponse;
import com.azure.resourcemanager.appcontainers.models.DiagnosticsDefinition;
import com.azure.resourcemanager.appcontainers.models.DiagnosticsProperties;
import com.azure.resourcemanager.appcontainers.models.DiagnosticsStatus;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DiagnosticsPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DiagnosticsProperties model = BinaryData.fromString(
            "{\"metadata\":{\"id\":\"enx\",\"name\":\"l\",\"description\":\"akdkifmjnnawtqab\",\"author\":\"uckpggqoweyir\",\"category\":\"lisn\",\"supportTopicList\":[{\"id\":\"qqmpizruwnpqx\",\"pesId\":\"iwfcngjsa\"}],\"analysisTypes\":[\"ixtmkzjvkviirhgf\",\"rwsdp\"],\"type\":\"atzv\",\"score\":36.45205},\"dataset\":[{\"table\":{\"tableName\":\"ictc\",\"columns\":[{\"columnName\":\"kjzwrgxf\",\"dataType\":\"shkwfbkgozxwopd\",\"columnType\":\"dpizq\"},{\"columnName\":\"lnapxbiygn\",\"dataType\":\"j\",\"columnType\":\"fsmfcttuxuuyi\"},{\"columnName\":\"lq\",\"dataType\":\"quvre\",\"columnType\":\"rnjhvsujztczytqj\"},{\"columnName\":\"h\",\"dataType\":\"unfprnjletlxs\",\"columnType\":\"pddouifamowaziyn\"}],\"rows\":[\"dataqwzdvpiwhxq\",\"datazdtmaajquhuxylrj\",\"datam\",\"dataygjbmzyospspsh\"]},\"renderingProperties\":{\"type\":311832546,\"title\":\"jpmspbpssdfppy\",\"description\":\"tieyujtvczkcny\",\"isVisible\":false}}],\"status\":{\"message\":\"njdxvglnkvxl\",\"statusId\":1233418998},\"dataProviderMetadata\":{\"providerName\":\"qivbgkcvkh\",\"propertyBag\":[{\"name\":\"qdf\",\"value\":\"oniypfpubcpzgp\"}]}}")
            .toObject(DiagnosticsProperties.class);
        Assertions.assertEquals("ixtmkzjvkviirhgf", model.metadata().analysisTypes().get(0));
        Assertions.assertEquals("ictc", model.dataset().get(0).table().tableName());
        Assertions.assertEquals("kjzwrgxf", model.dataset().get(0).table().columns().get(0).columnName());
        Assertions.assertEquals("shkwfbkgozxwopd", model.dataset().get(0).table().columns().get(0).dataType());
        Assertions.assertEquals("dpizq", model.dataset().get(0).table().columns().get(0).columnType());
        Assertions.assertEquals(311832546, model.dataset().get(0).renderingProperties().type());
        Assertions.assertEquals("jpmspbpssdfppy", model.dataset().get(0).renderingProperties().title());
        Assertions.assertEquals("tieyujtvczkcny", model.dataset().get(0).renderingProperties().description());
        Assertions.assertFalse(model.dataset().get(0).renderingProperties().isVisible());
        Assertions.assertEquals("njdxvglnkvxl", model.status().message());
        Assertions.assertEquals(1233418998, model.status().statusId());
        Assertions.assertEquals("qivbgkcvkh", model.dataProviderMetadata().providerName());
        Assertions.assertEquals("qdf", model.dataProviderMetadata().propertyBag().get(0).name());
        Assertions.assertEquals("oniypfpubcpzgp", model.dataProviderMetadata().propertyBag().get(0).value());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DiagnosticsProperties model = new DiagnosticsProperties()
            .withMetadata(new DiagnosticsDefinition().withSupportTopicList(Arrays.asList(new DiagnosticSupportTopic()))
                .withAnalysisTypes(Arrays.asList("ixtmkzjvkviirhgf", "rwsdp")))
            .withDataset(Arrays.asList(new DiagnosticsDataApiResponse()
                .withTable(new DiagnosticDataTableResponseObject().withTableName("ictc")
                    .withColumns(Arrays.asList(
                        new DiagnosticDataTableResponseColumn().withColumnName("kjzwrgxf")
                            .withDataType("shkwfbkgozxwopd")
                            .withColumnType("dpizq"),
                        new DiagnosticDataTableResponseColumn().withColumnName("lnapxbiygn")
                            .withDataType("j")
                            .withColumnType("fsmfcttuxuuyi"),
                        new DiagnosticDataTableResponseColumn().withColumnName("lq")
                            .withDataType("quvre")
                            .withColumnType("rnjhvsujztczytqj"),
                        new DiagnosticDataTableResponseColumn().withColumnName("h")
                            .withDataType("unfprnjletlxs")
                            .withColumnType("pddouifamowaziyn")))
                    .withRows(Arrays.asList("dataqwzdvpiwhxq", "datazdtmaajquhuxylrj", "datam", "dataygjbmzyospspsh")))
                .withRenderingProperties(new DiagnosticRendering().withType(311832546)
                    .withTitle("jpmspbpssdfppy")
                    .withDescription("tieyujtvczkcny")
                    .withIsVisible(false))))
            .withStatus(new DiagnosticsStatus().withMessage("njdxvglnkvxl").withStatusId(1233418998))
            .withDataProviderMetadata(new DiagnosticDataProviderMetadata().withProviderName("qivbgkcvkh")
                .withPropertyBag(Arrays.asList(
                    new DiagnosticDataProviderMetadataPropertyBagItem().withName("qdf").withValue("oniypfpubcpzgp"))));
        model = BinaryData.fromObject(model).toObject(DiagnosticsProperties.class);
        Assertions.assertEquals("ixtmkzjvkviirhgf", model.metadata().analysisTypes().get(0));
        Assertions.assertEquals("ictc", model.dataset().get(0).table().tableName());
        Assertions.assertEquals("kjzwrgxf", model.dataset().get(0).table().columns().get(0).columnName());
        Assertions.assertEquals("shkwfbkgozxwopd", model.dataset().get(0).table().columns().get(0).dataType());
        Assertions.assertEquals("dpizq", model.dataset().get(0).table().columns().get(0).columnType());
        Assertions.assertEquals(311832546, model.dataset().get(0).renderingProperties().type());
        Assertions.assertEquals("jpmspbpssdfppy", model.dataset().get(0).renderingProperties().title());
        Assertions.assertEquals("tieyujtvczkcny", model.dataset().get(0).renderingProperties().description());
        Assertions.assertFalse(model.dataset().get(0).renderingProperties().isVisible());
        Assertions.assertEquals("njdxvglnkvxl", model.status().message());
        Assertions.assertEquals(1233418998, model.status().statusId());
        Assertions.assertEquals("qivbgkcvkh", model.dataProviderMetadata().providerName());
        Assertions.assertEquals("qdf", model.dataProviderMetadata().propertyBag().get(0).name());
        Assertions.assertEquals("oniypfpubcpzgp", model.dataProviderMetadata().propertyBag().get(0).value());
    }
}
