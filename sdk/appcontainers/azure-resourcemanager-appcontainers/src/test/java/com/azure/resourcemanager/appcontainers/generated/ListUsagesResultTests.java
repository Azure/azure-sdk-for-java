// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.UsageInner;
import com.azure.resourcemanager.appcontainers.models.ListUsagesResult;
import com.azure.resourcemanager.appcontainers.models.UsageName;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ListUsagesResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ListUsagesResult model = BinaryData.fromString(
            "{\"value\":[{\"currentValue\":1.2442172,\"limit\":34.942795,\"name\":{\"value\":\"j\",\"localizedValue\":\"cmyfqipgxhnpo\"}}],\"nextLink\":\"qwcabvnui\"}")
            .toObject(ListUsagesResult.class);
        Assertions.assertEquals(1.2442172f, model.value().get(0).currentValue());
        Assertions.assertEquals(34.942795f, model.value().get(0).limit());
        Assertions.assertEquals("j", model.value().get(0).name().value());
        Assertions.assertEquals("cmyfqipgxhnpo", model.value().get(0).name().localizedValue());
        Assertions.assertEquals("qwcabvnui", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ListUsagesResult model = new ListUsagesResult()
            .withValue(Arrays.asList(new UsageInner().withCurrentValue(1.2442172f).withLimit(34.942795f)
                .withName(new UsageName().withValue("j").withLocalizedValue("cmyfqipgxhnpo"))))
            .withNextLink("qwcabvnui");
        model = BinaryData.fromObject(model).toObject(ListUsagesResult.class);
        Assertions.assertEquals(1.2442172f, model.value().get(0).currentValue());
        Assertions.assertEquals(34.942795f, model.value().get(0).limit());
        Assertions.assertEquals("j", model.value().get(0).name().value());
        Assertions.assertEquals("cmyfqipgxhnpo", model.value().get(0).name().localizedValue());
        Assertions.assertEquals("qwcabvnui", model.nextLink());
    }
}
