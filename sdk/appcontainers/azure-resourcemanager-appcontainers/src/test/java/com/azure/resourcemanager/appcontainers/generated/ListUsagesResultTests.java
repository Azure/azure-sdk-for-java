// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.UsageInner;
import com.azure.resourcemanager.appcontainers.models.ListUsagesResult;
import com.azure.resourcemanager.appcontainers.models.UsageName;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ListUsagesResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ListUsagesResult model = BinaryData.fromString(
            "{\"value\":[{\"currentValue\":38.06893,\"limit\":13.099998,\"name\":{\"value\":\"kvhd\",\"localizedValue\":\"wyojbfqzdkfnjyi\"}}],\"nextLink\":\"afr\"}")
            .toObject(ListUsagesResult.class);
        Assertions.assertEquals(38.06893f, model.value().get(0).currentValue());
        Assertions.assertEquals(13.099998f, model.value().get(0).limit());
        Assertions.assertEquals("kvhd", model.value().get(0).name().value());
        Assertions.assertEquals("wyojbfqzdkfnjyi", model.value().get(0).name().localizedValue());
        Assertions.assertEquals("afr", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ListUsagesResult model = new ListUsagesResult()
            .withValue(Arrays.asList(new UsageInner().withCurrentValue(38.06893f)
                .withLimit(13.099998f)
                .withName(new UsageName().withValue("kvhd").withLocalizedValue("wyojbfqzdkfnjyi"))))
            .withNextLink("afr");
        model = BinaryData.fromObject(model).toObject(ListUsagesResult.class);
        Assertions.assertEquals(38.06893f, model.value().get(0).currentValue());
        Assertions.assertEquals(13.099998f, model.value().get(0).limit());
        Assertions.assertEquals("kvhd", model.value().get(0).name().value());
        Assertions.assertEquals("wyojbfqzdkfnjyi", model.value().get(0).name().localizedValue());
        Assertions.assertEquals("afr", model.nextLink());
    }
}
