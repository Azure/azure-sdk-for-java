// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.JavaComponentProperties;
import com.azure.resourcemanager.appcontainers.models.JavaComponentConfigurationProperty;
import com.azure.resourcemanager.appcontainers.models.JavaComponentServiceBind;
import com.azure.resourcemanager.appcontainers.models.JavaComponentType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class JavaComponentPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        JavaComponentProperties model = BinaryData.fromString(
            "{\"componentType\":\"SpringCloudConfig\",\"provisioningState\":\"Succeeded\",\"configurations\":[{\"propertyName\":\"aklsbsbq\",\"value\":\"agwwrxaom\"}],\"serviceBinds\":[{\"name\":\"lrrcz\",\"serviceId\":\"k\"}]}")
            .toObject(JavaComponentProperties.class);
        Assertions.assertEquals(JavaComponentType.SPRING_CLOUD_CONFIG, model.componentType());
        Assertions.assertEquals("aklsbsbq", model.configurations().get(0).propertyName());
        Assertions.assertEquals("agwwrxaom", model.configurations().get(0).value());
        Assertions.assertEquals("lrrcz", model.serviceBinds().get(0).name());
        Assertions.assertEquals("k", model.serviceBinds().get(0).serviceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        JavaComponentProperties model
            = new JavaComponentProperties().withComponentType(JavaComponentType.SPRING_CLOUD_CONFIG)
                .withConfigurations(Arrays.asList(
                    new JavaComponentConfigurationProperty().withPropertyName("aklsbsbq").withValue("agwwrxaom")))
                .withServiceBinds(Arrays.asList(new JavaComponentServiceBind().withName("lrrcz").withServiceId("k")));
        model = BinaryData.fromObject(model).toObject(JavaComponentProperties.class);
        Assertions.assertEquals(JavaComponentType.SPRING_CLOUD_CONFIG, model.componentType());
        Assertions.assertEquals("aklsbsbq", model.configurations().get(0).propertyName());
        Assertions.assertEquals("agwwrxaom", model.configurations().get(0).value());
        Assertions.assertEquals("lrrcz", model.serviceBinds().get(0).name());
        Assertions.assertEquals("k", model.serviceBinds().get(0).serviceId());
    }
}
