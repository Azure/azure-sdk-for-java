// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.VnetConfiguration;
import org.junit.jupiter.api.Assertions;

public final class VnetConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VnetConfiguration model = BinaryData.fromString(
            "{\"internal\":true,\"infrastructureSubnetId\":\"vv\",\"dockerBridgeCidr\":\"nk\",\"platformReservedCidr\":\"hqyikvy\",\"platformReservedDnsIP\":\"uyav\"}")
            .toObject(VnetConfiguration.class);
        Assertions.assertEquals(true, model.internal());
        Assertions.assertEquals("vv", model.infrastructureSubnetId());
        Assertions.assertEquals("nk", model.dockerBridgeCidr());
        Assertions.assertEquals("hqyikvy", model.platformReservedCidr());
        Assertions.assertEquals("uyav", model.platformReservedDnsIp());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VnetConfiguration model = new VnetConfiguration().withInternal(true)
            .withInfrastructureSubnetId("vv")
            .withDockerBridgeCidr("nk")
            .withPlatformReservedCidr("hqyikvy")
            .withPlatformReservedDnsIp("uyav");
        model = BinaryData.fromObject(model).toObject(VnetConfiguration.class);
        Assertions.assertEquals(true, model.internal());
        Assertions.assertEquals("vv", model.infrastructureSubnetId());
        Assertions.assertEquals("nk", model.dockerBridgeCidr());
        Assertions.assertEquals("hqyikvy", model.platformReservedCidr());
        Assertions.assertEquals("uyav", model.platformReservedDnsIp());
    }
}
