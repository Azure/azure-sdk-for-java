// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.VnetConfiguration;
import org.junit.jupiter.api.Assertions;

public final class VnetConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VnetConfiguration model =
            BinaryData
                .fromString(
                    "{\"internal\":true,\"infrastructureSubnetId\":\"lma\",\"dockerBridgeCidr\":\"tcyohpfkyrk\",\"platformReservedCidr\":\"dg\",\"platformReservedDnsIP\":\"gsj\"}")
                .toObject(VnetConfiguration.class);
        Assertions.assertEquals(true, model.internal());
        Assertions.assertEquals("lma", model.infrastructureSubnetId());
        Assertions.assertEquals("tcyohpfkyrk", model.dockerBridgeCidr());
        Assertions.assertEquals("dg", model.platformReservedCidr());
        Assertions.assertEquals("gsj", model.platformReservedDnsIp());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VnetConfiguration model =
            new VnetConfiguration()
                .withInternal(true)
                .withInfrastructureSubnetId("lma")
                .withDockerBridgeCidr("tcyohpfkyrk")
                .withPlatformReservedCidr("dg")
                .withPlatformReservedDnsIp("gsj");
        model = BinaryData.fromObject(model).toObject(VnetConfiguration.class);
        Assertions.assertEquals(true, model.internal());
        Assertions.assertEquals("lma", model.infrastructureSubnetId());
        Assertions.assertEquals("tcyohpfkyrk", model.dockerBridgeCidr());
        Assertions.assertEquals("dg", model.platformReservedCidr());
        Assertions.assertEquals("gsj", model.platformReservedDnsIp());
    }
}
