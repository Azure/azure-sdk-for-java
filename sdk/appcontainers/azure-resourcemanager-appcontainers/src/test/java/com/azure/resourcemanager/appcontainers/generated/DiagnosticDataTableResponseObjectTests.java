// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.DiagnosticDataTableResponseColumn;
import com.azure.resourcemanager.appcontainers.models.DiagnosticDataTableResponseObject;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DiagnosticDataTableResponseObjectTests {
    @Test
    public void testDeserialize() {
        DiagnosticDataTableResponseObject model =
            BinaryData
                .fromString(
                    "{\"tableName\":\"xkcgxxlxsffgcvi\",\"columns\":[{\"columnName\":\"wlvwlyoupf\",\"dataType\":\"bkjubdyhgkfmins\",\"columnType\":\"wzf\"},{\"columnName\":\"sttktlahbqa\",\"dataType\":\"xtgzukxitmmqtgqq\",\"columnType\":\"hrnxrxc\"},{\"columnName\":\"uisavokq\",\"dataType\":\"fvazivjlfrqttba\",\"columnType\":\"katnwxyi\"},{\"columnName\":\"id\",\"dataType\":\"qfkuvscxkdmli\",\"columnType\":\"vibrxkpmloazuruo\"}],\"rows\":[]}")
                .toObject(DiagnosticDataTableResponseObject.class);
        Assertions.assertEquals("xkcgxxlxsffgcvi", model.tableName());
        Assertions.assertEquals("wlvwlyoupf", model.columns().get(0).columnName());
        Assertions.assertEquals("bkjubdyhgkfmins", model.columns().get(0).dataType());
        Assertions.assertEquals("wzf", model.columns().get(0).columnType());
    }

    @Test
    public void testSerialize() {
        DiagnosticDataTableResponseObject model =
            new DiagnosticDataTableResponseObject()
                .withTableName("xkcgxxlxsffgcvi")
                .withColumns(
                    Arrays
                        .asList(
                            new DiagnosticDataTableResponseColumn()
                                .withColumnName("wlvwlyoupf")
                                .withDataType("bkjubdyhgkfmins")
                                .withColumnType("wzf"),
                            new DiagnosticDataTableResponseColumn()
                                .withColumnName("sttktlahbqa")
                                .withDataType("xtgzukxitmmqtgqq")
                                .withColumnType("hrnxrxc"),
                            new DiagnosticDataTableResponseColumn()
                                .withColumnName("uisavokq")
                                .withDataType("fvazivjlfrqttba")
                                .withColumnType("katnwxyi"),
                            new DiagnosticDataTableResponseColumn()
                                .withColumnName("id")
                                .withDataType("qfkuvscxkdmli")
                                .withColumnType("vibrxkpmloazuruo")))
                .withRows(Arrays.asList());
        model = BinaryData.fromObject(model).toObject(DiagnosticDataTableResponseObject.class);
        Assertions.assertEquals("xkcgxxlxsffgcvi", model.tableName());
        Assertions.assertEquals("wlvwlyoupf", model.columns().get(0).columnName());
        Assertions.assertEquals("bkjubdyhgkfmins", model.columns().get(0).dataType());
        Assertions.assertEquals("wzf", model.columns().get(0).columnType());
    }
}
