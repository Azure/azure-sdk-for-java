// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.DiagnosticDataTableResponseColumn;
import com.azure.resourcemanager.appcontainers.models.DiagnosticDataTableResponseObject;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DiagnosticDataTableResponseObjectTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DiagnosticDataTableResponseObject model = BinaryData.fromString(
            "{\"tableName\":\"dfvpg\",\"columns\":[{\"columnName\":\"gsgbpfgzdjt\",\"dataType\":\"zflbqvg\",\"columnType\":\"vl\"},{\"columnName\":\"fcq\",\"dataType\":\"rdve\",\"columnType\":\"wsdtutnwl\"},{\"columnName\":\"ycvuzhyrmewipmv\",\"dataType\":\"dxukuqgsjjxundxg\",\"columnType\":\"twzhhzjhfjmhv\"},{\"columnName\":\"uvgp\",\"dataType\":\"neqsxvmh\",\"columnType\":\"uzjyihsasbhudypo\"}],\"rows\":[\"dataemslynsqyrp\",\"dataoobrlttyms\"]}")
            .toObject(DiagnosticDataTableResponseObject.class);
        Assertions.assertEquals("dfvpg", model.tableName());
        Assertions.assertEquals("gsgbpfgzdjt", model.columns().get(0).columnName());
        Assertions.assertEquals("zflbqvg", model.columns().get(0).dataType());
        Assertions.assertEquals("vl", model.columns().get(0).columnType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DiagnosticDataTableResponseObject model = new DiagnosticDataTableResponseObject().withTableName("dfvpg")
            .withColumns(Arrays.asList(
                new DiagnosticDataTableResponseColumn().withColumnName("gsgbpfgzdjt")
                    .withDataType("zflbqvg")
                    .withColumnType("vl"),
                new DiagnosticDataTableResponseColumn().withColumnName("fcq")
                    .withDataType("rdve")
                    .withColumnType("wsdtutnwl"),
                new DiagnosticDataTableResponseColumn().withColumnName("ycvuzhyrmewipmv")
                    .withDataType("dxukuqgsjjxundxg")
                    .withColumnType("twzhhzjhfjmhv"),
                new DiagnosticDataTableResponseColumn().withColumnName("uvgp")
                    .withDataType("neqsxvmh")
                    .withColumnType("uzjyihsasbhudypo")))
            .withRows(Arrays.asList("dataemslynsqyrp", "dataoobrlttyms"));
        model = BinaryData.fromObject(model).toObject(DiagnosticDataTableResponseObject.class);
        Assertions.assertEquals("dfvpg", model.tableName());
        Assertions.assertEquals("gsgbpfgzdjt", model.columns().get(0).columnName());
        Assertions.assertEquals("zflbqvg", model.columns().get(0).dataType());
        Assertions.assertEquals("vl", model.columns().get(0).columnType());
    }
}
