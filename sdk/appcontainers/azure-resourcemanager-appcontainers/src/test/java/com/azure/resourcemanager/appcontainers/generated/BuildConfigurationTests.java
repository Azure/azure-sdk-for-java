// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.BuildConfiguration;
import com.azure.resourcemanager.appcontainers.models.EnvironmentVariable;
import com.azure.resourcemanager.appcontainers.models.HttpGet;
import com.azure.resourcemanager.appcontainers.models.PreBuildStep;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BuildConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BuildConfiguration model = BinaryData.fromString(
            "{\"baseOs\":\"wmdyvxqtay\",\"platform\":\"ww\",\"platformVersion\":\"yqbexrmcqibycno\",\"environmentVariables\":[{\"name\":\"nmefqsgzvahapj\",\"value\":\"zhpvgqzcjrvxd\"}],\"preBuildSteps\":[{\"description\":\"wlxkvugfhzovaw\",\"scripts\":[\"u\",\"luthn\"],\"httpGet\":{\"url\":\"rnxipei\",\"fileName\":\"jzuaejxdultskzbb\",\"headers\":[\"umveekgpwozuhkf\",\"bsjyofdx\",\"uusdttouwa\"]}},{\"description\":\"ekqvkeln\",\"scripts\":[\"bxwyjsflhhcaa\",\"n\",\"ixisxyawjoy\"],\"httpGet\":{\"url\":\"cslyjpk\",\"fileName\":\"dzyexznelixh\",\"headers\":[\"tfolhbnx\",\"nalaulppg\",\"dtpnapnyiropuhp\"]}},{\"description\":\"vpgylgqgitxmed\",\"scripts\":[\"slynqwwnc\"],\"httpGet\":{\"url\":\"zhxgktrmgucn\",\"fileName\":\"kteo\",\"headers\":[\"wptfdy\",\"pfqbuaceopzf\"]}},{\"description\":\"hhuao\",\"scripts\":[\"cq\",\"qxolzdahzx\"],\"httpGet\":{\"url\":\"obgbkdmoizp\",\"fileName\":\"tmgrcfbun\",\"headers\":[\"qjhhkxbpv\",\"ymjhxxjyngudivkr\",\"swbxqz\",\"szjfauvjfdxxivet\"]}}]}")
            .toObject(BuildConfiguration.class);
        Assertions.assertEquals("wmdyvxqtay", model.baseOs());
        Assertions.assertEquals("ww", model.platform());
        Assertions.assertEquals("yqbexrmcqibycno", model.platformVersion());
        Assertions.assertEquals("nmefqsgzvahapj", model.environmentVariables().get(0).name());
        Assertions.assertEquals("zhpvgqzcjrvxd", model.environmentVariables().get(0).value());
        Assertions.assertEquals("wlxkvugfhzovaw", model.preBuildSteps().get(0).description());
        Assertions.assertEquals("u", model.preBuildSteps().get(0).scripts().get(0));
        Assertions.assertEquals("rnxipei", model.preBuildSteps().get(0).httpGet().url());
        Assertions.assertEquals("jzuaejxdultskzbb", model.preBuildSteps().get(0).httpGet().fileName());
        Assertions.assertEquals("umveekgpwozuhkf", model.preBuildSteps().get(0).httpGet().headers().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BuildConfiguration model = new BuildConfiguration().withBaseOs("wmdyvxqtay")
            .withPlatform("ww")
            .withPlatformVersion("yqbexrmcqibycno")
            .withEnvironmentVariables(
                Arrays.asList(new EnvironmentVariable().withName("nmefqsgzvahapj").withValue("zhpvgqzcjrvxd")))
            .withPreBuildSteps(Arrays.asList(
                new PreBuildStep().withDescription("wlxkvugfhzovaw")
                    .withScripts(Arrays.asList("u", "luthn"))
                    .withHttpGet(new HttpGet().withUrl("rnxipei")
                        .withFileName("jzuaejxdultskzbb")
                        .withHeaders(Arrays.asList("umveekgpwozuhkf", "bsjyofdx", "uusdttouwa"))),
                new PreBuildStep().withDescription("ekqvkeln")
                    .withScripts(Arrays.asList("bxwyjsflhhcaa", "n", "ixisxyawjoy"))
                    .withHttpGet(new HttpGet().withUrl("cslyjpk")
                        .withFileName("dzyexznelixh")
                        .withHeaders(Arrays.asList("tfolhbnx", "nalaulppg", "dtpnapnyiropuhp"))),
                new PreBuildStep().withDescription("vpgylgqgitxmed")
                    .withScripts(Arrays.asList("slynqwwnc"))
                    .withHttpGet(new HttpGet().withUrl("zhxgktrmgucn")
                        .withFileName("kteo")
                        .withHeaders(Arrays.asList("wptfdy", "pfqbuaceopzf"))),
                new PreBuildStep().withDescription("hhuao")
                    .withScripts(Arrays.asList("cq", "qxolzdahzx"))
                    .withHttpGet(new HttpGet().withUrl("obgbkdmoizp")
                        .withFileName("tmgrcfbun")
                        .withHeaders(Arrays.asList("qjhhkxbpv", "ymjhxxjyngudivkr", "swbxqz", "szjfauvjfdxxivet")))));
        model = BinaryData.fromObject(model).toObject(BuildConfiguration.class);
        Assertions.assertEquals("wmdyvxqtay", model.baseOs());
        Assertions.assertEquals("ww", model.platform());
        Assertions.assertEquals("yqbexrmcqibycno", model.platformVersion());
        Assertions.assertEquals("nmefqsgzvahapj", model.environmentVariables().get(0).name());
        Assertions.assertEquals("zhpvgqzcjrvxd", model.environmentVariables().get(0).value());
        Assertions.assertEquals("wlxkvugfhzovaw", model.preBuildSteps().get(0).description());
        Assertions.assertEquals("u", model.preBuildSteps().get(0).scripts().get(0));
        Assertions.assertEquals("rnxipei", model.preBuildSteps().get(0).httpGet().url());
        Assertions.assertEquals("jzuaejxdultskzbb", model.preBuildSteps().get(0).httpGet().fileName());
        Assertions.assertEquals("umveekgpwozuhkf", model.preBuildSteps().get(0).httpGet().headers().get(0));
    }
}
