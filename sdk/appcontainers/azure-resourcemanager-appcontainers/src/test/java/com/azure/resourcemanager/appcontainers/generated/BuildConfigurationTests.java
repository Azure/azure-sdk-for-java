// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.BuildConfiguration;
import com.azure.resourcemanager.appcontainers.models.EnvironmentVariable;
import com.azure.resourcemanager.appcontainers.models.HttpGet;
import com.azure.resourcemanager.appcontainers.models.PreBuildStep;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BuildConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BuildConfiguration model = BinaryData.fromString(
            "{\"baseOs\":\"qtkoievs\",\"platform\":\"tgqr\",\"platformVersion\":\"tmuwlauwzi\",\"environmentVariables\":[{\"name\":\"mpgcjefuzmuvpbt\",\"value\":\"d\"}],\"preBuildSteps\":[{\"description\":\"p\",\"scripts\":[\"bmnzbtbhjpgl\",\"fgohdneuelfphs\",\"yhtozfikdowwqu\",\"v\"],\"httpGet\":{\"url\":\"xclvit\",\"fileName\":\"qzonosggbhcohf\",\"headers\":[\"jnkaljutiiswacff\",\"dkzzewkfvhqcrail\"]}},{\"description\":\"n\",\"scripts\":[\"uflrwd\",\"hdlxyjrxsagafcn\",\"hgw\"],\"httpGet\":{\"url\":\"pnedgf\",\"fileName\":\"vkcvqvpkeqd\",\"headers\":[\"rhvoods\",\"tbobz\",\"opcjwvnhd\"]}},{\"description\":\"wmgxcxrsl\",\"scripts\":[\"twuoegrpkhjwni\"],\"httpGet\":{\"url\":\"sluicpdggkzz\",\"fileName\":\"mbmpaxmodfvuefy\",\"headers\":[\"pfvmwyhrfou\",\"ft\"]}},{\"description\":\"kcpwiy\",\"scripts\":[\"tmnubexkpzksmon\",\"jmquxvypomgk\",\"pkwhojvpa\"],\"httpGet\":{\"url\":\"gxysmocmbqfqvm\",\"fileName\":\"xozap\",\"headers\":[\"lxprglyatddckcbc\",\"ejrjxgciqibrho\",\"xsdqrhzoymibmrqy\",\"bahwfl\"]}}]}")
            .toObject(BuildConfiguration.class);
        Assertions.assertEquals("qtkoievs", model.baseOs());
        Assertions.assertEquals("tgqr", model.platform());
        Assertions.assertEquals("tmuwlauwzi", model.platformVersion());
        Assertions.assertEquals("mpgcjefuzmuvpbt", model.environmentVariables().get(0).name());
        Assertions.assertEquals("d", model.environmentVariables().get(0).value());
        Assertions.assertEquals("p", model.preBuildSteps().get(0).description());
        Assertions.assertEquals("bmnzbtbhjpgl", model.preBuildSteps().get(0).scripts().get(0));
        Assertions.assertEquals("xclvit", model.preBuildSteps().get(0).httpGet().url());
        Assertions.assertEquals("qzonosggbhcohf", model.preBuildSteps().get(0).httpGet().fileName());
        Assertions.assertEquals("jnkaljutiiswacff", model.preBuildSteps().get(0).httpGet().headers().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BuildConfiguration model
            = new BuildConfiguration().withBaseOs("qtkoievs").withPlatform("tgqr").withPlatformVersion("tmuwlauwzi")
                .withEnvironmentVariables(
                    Arrays.asList(new EnvironmentVariable().withName("mpgcjefuzmuvpbt").withValue("d")))
                .withPreBuildSteps(Arrays.asList(
                    new PreBuildStep().withDescription("p")
                        .withScripts(Arrays.asList("bmnzbtbhjpgl", "fgohdneuelfphs", "yhtozfikdowwqu", "v"))
                        .withHttpGet(new HttpGet().withUrl("xclvit").withFileName("qzonosggbhcohf")
                            .withHeaders(Arrays.asList("jnkaljutiiswacff", "dkzzewkfvhqcrail"))),
                    new PreBuildStep().withDescription("n")
                        .withScripts(Arrays.asList("uflrwd", "hdlxyjrxsagafcn", "hgw"))
                        .withHttpGet(new HttpGet().withUrl("pnedgf").withFileName("vkcvqvpkeqd")
                            .withHeaders(Arrays.asList("rhvoods", "tbobz", "opcjwvnhd"))),
                    new PreBuildStep().withDescription("wmgxcxrsl").withScripts(Arrays.asList("twuoegrpkhjwni"))
                        .withHttpGet(new HttpGet().withUrl("sluicpdggkzz").withFileName("mbmpaxmodfvuefy")
                            .withHeaders(Arrays.asList("pfvmwyhrfou", "ft"))),
                    new PreBuildStep().withDescription("kcpwiy")
                        .withScripts(Arrays.asList("tmnubexkpzksmon", "jmquxvypomgk", "pkwhojvpa"))
                        .withHttpGet(new HttpGet().withUrl("gxysmocmbqfqvm").withFileName("xozap").withHeaders(
                            Arrays.asList("lxprglyatddckcbc", "ejrjxgciqibrho", "xsdqrhzoymibmrqy", "bahwfl")))));
        model = BinaryData.fromObject(model).toObject(BuildConfiguration.class);
        Assertions.assertEquals("qtkoievs", model.baseOs());
        Assertions.assertEquals("tgqr", model.platform());
        Assertions.assertEquals("tmuwlauwzi", model.platformVersion());
        Assertions.assertEquals("mpgcjefuzmuvpbt", model.environmentVariables().get(0).name());
        Assertions.assertEquals("d", model.environmentVariables().get(0).value());
        Assertions.assertEquals("p", model.preBuildSteps().get(0).description());
        Assertions.assertEquals("bmnzbtbhjpgl", model.preBuildSteps().get(0).scripts().get(0));
        Assertions.assertEquals("xclvit", model.preBuildSteps().get(0).httpGet().url());
        Assertions.assertEquals("qzonosggbhcohf", model.preBuildSteps().get(0).httpGet().fileName());
        Assertions.assertEquals("jnkaljutiiswacff", model.preBuildSteps().get(0).httpGet().headers().get(0));
    }
}
