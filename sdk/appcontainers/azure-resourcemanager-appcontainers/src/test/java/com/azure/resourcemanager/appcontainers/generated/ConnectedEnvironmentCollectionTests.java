// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.ConnectedEnvironmentInner;
import com.azure.resourcemanager.appcontainers.models.ConnectedEnvironmentCollection;
import com.azure.resourcemanager.appcontainers.models.ExtendedLocation;
import com.azure.resourcemanager.appcontainers.models.ExtendedLocationTypes;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ConnectedEnvironmentCollectionTests {
    @Test
    public void testDeserialize() {
        ConnectedEnvironmentCollection model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"extendedLocation\":{\"name\":\"rtujwsawddjibab\",\"type\":\"CustomLocation\"},\"properties\":{\"provisioningState\":\"InfrastructureSetupComplete\",\"deploymentErrors\":\"tzeexav\",\"defaultDomain\":\"tfgle\",\"staticIp\":\"m\",\"daprAIConnectionString\":\"bwpypqtgsfjacb\"},\"location\":\"hxudbxvodht\",\"tags\":{\"agzrcxfa\":\"rudhzmmesckdl\",\"xwmdboxd\":\"lc\"},\"id\":\"gsftufqobrjlnacg\",\"name\":\"ckknhxkizvy\",\"type\":\"nrzvuljraaer\"},{\"extendedLocation\":{\"name\":\"kqg\",\"type\":\"CustomLocation\"},\"properties\":{\"provisioningState\":\"InitializationInProgress\",\"deploymentErrors\":\"broyla\",\"defaultDomain\":\"ulcdisdosf\",\"staticIp\":\"jsvg\",\"daprAIConnectionString\":\"whryvycytdcl\"},\"location\":\"cknfnwmbtmvpd\",\"tags\":{\"efedxihchrphkm\":\"httz\",\"gtgkylkdghr\":\"rjdqnsdfzp\",\"kvbwnhhtqlgeh\":\"euutlwxezwzh\",\"vgcxtx\":\"ppipifhpfeoa\"},\"id\":\"csheafidltugsr\",\"name\":\"smkss\",\"type\":\"h\"},{\"extendedLocation\":{\"name\":\"txfkfweg\",\"type\":\"CustomLocation\"},\"properties\":{\"provisioningState\":\"Failed\",\"deploymentErrors\":\"lucbiqtgdqohm\",\"defaultDomain\":\"sldrizetpwbral\",\"staticIp\":\"ibph\",\"daprAIConnectionString\":\"zmizakakan\"},\"location\":\"dnjzh\",\"tags\":{\"oyxprimr\":\"ylhjlm\",\"eislstvasylwx\":\"opteecj\",\"eoohguufuzboyj\":\"zaum\",\"a\":\"thwtzol\"},\"id\":\"mwmdxmebwjscjpa\",\"name\":\"lxveabfqx\",\"type\":\"mwmqtibx\"}],\"nextLink\":\"jddtvqct\"}")
                .toObject(ConnectedEnvironmentCollection.class);
        Assertions.assertEquals("hxudbxvodht", model.value().get(0).location());
        Assertions.assertEquals("rudhzmmesckdl", model.value().get(0).tags().get("agzrcxfa"));
        Assertions.assertEquals("rtujwsawddjibab", model.value().get(0).extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationTypes.CUSTOM_LOCATION, model.value().get(0).extendedLocation().type());
        Assertions.assertEquals("m", model.value().get(0).staticIp());
        Assertions.assertEquals("bwpypqtgsfjacb", model.value().get(0).daprAIConnectionString());
    }

    @Test
    public void testSerialize() {
        ConnectedEnvironmentCollection model =
            new ConnectedEnvironmentCollection()
                .withValue(
                    Arrays
                        .asList(
                            new ConnectedEnvironmentInner()
                                .withLocation("hxudbxvodht")
                                .withTags(mapOf("agzrcxfa", "rudhzmmesckdl", "xwmdboxd", "lc"))
                                .withExtendedLocation(
                                    new ExtendedLocation()
                                        .withName("rtujwsawddjibab")
                                        .withType(ExtendedLocationTypes.CUSTOM_LOCATION))
                                .withStaticIp("m")
                                .withDaprAIConnectionString("bwpypqtgsfjacb"),
                            new ConnectedEnvironmentInner()
                                .withLocation("cknfnwmbtmvpd")
                                .withTags(
                                    mapOf(
                                        "efedxihchrphkm",
                                        "httz",
                                        "gtgkylkdghr",
                                        "rjdqnsdfzp",
                                        "kvbwnhhtqlgeh",
                                        "euutlwxezwzh",
                                        "vgcxtx",
                                        "ppipifhpfeoa"))
                                .withExtendedLocation(
                                    new ExtendedLocation()
                                        .withName("kqg")
                                        .withType(ExtendedLocationTypes.CUSTOM_LOCATION))
                                .withStaticIp("jsvg")
                                .withDaprAIConnectionString("whryvycytdcl"),
                            new ConnectedEnvironmentInner()
                                .withLocation("dnjzh")
                                .withTags(
                                    mapOf(
                                        "oyxprimr",
                                        "ylhjlm",
                                        "eislstvasylwx",
                                        "opteecj",
                                        "eoohguufuzboyj",
                                        "zaum",
                                        "a",
                                        "thwtzol"))
                                .withExtendedLocation(
                                    new ExtendedLocation()
                                        .withName("txfkfweg")
                                        .withType(ExtendedLocationTypes.CUSTOM_LOCATION))
                                .withStaticIp("ibph")
                                .withDaprAIConnectionString("zmizakakan")));
        model = BinaryData.fromObject(model).toObject(ConnectedEnvironmentCollection.class);
        Assertions.assertEquals("hxudbxvodht", model.value().get(0).location());
        Assertions.assertEquals("rudhzmmesckdl", model.value().get(0).tags().get("agzrcxfa"));
        Assertions.assertEquals("rtujwsawddjibab", model.value().get(0).extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationTypes.CUSTOM_LOCATION, model.value().get(0).extendedLocation().type());
        Assertions.assertEquals("m", model.value().get(0).staticIp());
        Assertions.assertEquals("bwpypqtgsfjacb", model.value().get(0).daprAIConnectionString());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
