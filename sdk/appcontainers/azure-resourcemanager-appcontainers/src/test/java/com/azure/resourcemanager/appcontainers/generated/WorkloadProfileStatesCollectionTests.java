// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.WorkloadProfileStatesInner;
import com.azure.resourcemanager.appcontainers.models.WorkloadProfileStatesCollection;
import com.azure.resourcemanager.appcontainers.models.WorkloadProfileStatesProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class WorkloadProfileStatesCollectionTests {
    @Test
    public void testDeserialize() {
        WorkloadProfileStatesCollection model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"minimumCount\":1215063805,\"maximumCount\":1612515115,\"currentCount\":75239046},\"id\":\"metttwgd\",\"name\":\"lqxihhrmooiz\",\"type\":\"seypxiutcxapz\"}],\"nextLink\":\"rpetogebjoxsl\"}")
                .toObject(WorkloadProfileStatesCollection.class);
        Assertions.assertEquals(1215063805, model.value().get(0).properties().minimumCount());
        Assertions.assertEquals(1612515115, model.value().get(0).properties().maximumCount());
        Assertions.assertEquals(75239046, model.value().get(0).properties().currentCount());
    }

    @Test
    public void testSerialize() {
        WorkloadProfileStatesCollection model =
            new WorkloadProfileStatesCollection()
                .withValue(
                    Arrays
                        .asList(
                            new WorkloadProfileStatesInner()
                                .withProperties(
                                    new WorkloadProfileStatesProperties()
                                        .withMinimumCount(1215063805)
                                        .withMaximumCount(1612515115)
                                        .withCurrentCount(75239046))));
        model = BinaryData.fromObject(model).toObject(WorkloadProfileStatesCollection.class);
        Assertions.assertEquals(1215063805, model.value().get(0).properties().minimumCount());
        Assertions.assertEquals(1612515115, model.value().get(0).properties().maximumCount());
        Assertions.assertEquals(75239046, model.value().get(0).properties().currentCount());
    }
}
