// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.WorkloadProfileStatesInner;
import com.azure.resourcemanager.appcontainers.models.WorkloadProfileStatesCollection;
import com.azure.resourcemanager.appcontainers.models.WorkloadProfileStatesProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadProfileStatesCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadProfileStatesCollection model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"minimumCount\":792139303,\"maximumCount\":1099107522,\"currentCount\":381107449},\"id\":\"yrneizjcpeo\",\"name\":\"khnmgbrou\",\"type\":\"ddbhf\"}],\"nextLink\":\"fpazjzoywjxhpd\"}")
            .toObject(WorkloadProfileStatesCollection.class);
        Assertions.assertEquals(792139303, model.value().get(0).properties().minimumCount());
        Assertions.assertEquals(1099107522, model.value().get(0).properties().maximumCount());
        Assertions.assertEquals(381107449, model.value().get(0).properties().currentCount());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadProfileStatesCollection model = new WorkloadProfileStatesCollection().withValue(
            Arrays.asList(new WorkloadProfileStatesInner().withProperties(new WorkloadProfileStatesProperties()
                .withMinimumCount(792139303).withMaximumCount(1099107522).withCurrentCount(381107449))));
        model = BinaryData.fromObject(model).toObject(WorkloadProfileStatesCollection.class);
        Assertions.assertEquals(792139303, model.value().get(0).properties().minimumCount());
        Assertions.assertEquals(1099107522, model.value().get(0).properties().maximumCount());
        Assertions.assertEquals(381107449, model.value().get(0).properties().currentCount());
    }
}
