// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.BuilderResourceUpdate;
import com.azure.resourcemanager.appcontainers.models.ManagedServiceIdentity;
import com.azure.resourcemanager.appcontainers.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.appcontainers.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class BuilderResourceUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BuilderResourceUpdate model = BinaryData.fromString(
            "{\"identity\":{\"principalId\":\"4dab0a89-99af-4485-ac2d-1612cf03166e\",\"tenantId\":\"4c86363d-c12a-48a7-b68a-512869a05dbb\",\"type\":\"None\",\"userAssignedIdentities\":{\"ujqgidok\":{\"principalId\":\"b753ab65-48fc-4b8f-a96e-c20a24b796fd\",\"clientId\":\"bef1670a-f93c-4b0f-8cda-26c0d9100b7b\"}}},\"tags\":{\"gsncghkjeszz\":\"jyoxgvclt\",\"mxnehmp\":\"bijhtxfvgxbf\",\"godebfqkkrbmpu\":\"ec\"},\"properties\":{\"environmentId\":\"iw\"}}")
            .toObject(BuilderResourceUpdate.class);
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
        Assertions.assertEquals("jyoxgvclt", model.tags().get("gsncghkjeszz"));
        Assertions.assertEquals("iw", model.environmentId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BuilderResourceUpdate model = new BuilderResourceUpdate()
            .withIdentity(new ManagedServiceIdentity().withType(ManagedServiceIdentityType.NONE)
                .withUserAssignedIdentities(mapOf("ujqgidok", new UserAssignedIdentity())))
            .withTags(mapOf("gsncghkjeszz", "jyoxgvclt", "mxnehmp", "bijhtxfvgxbf", "godebfqkkrbmpu", "ec"))
            .withEnvironmentId("iw");
        model = BinaryData.fromObject(model).toObject(BuilderResourceUpdate.class);
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
        Assertions.assertEquals("jyoxgvclt", model.tags().get("gsncghkjeszz"));
        Assertions.assertEquals("iw", model.environmentId());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
