// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.BuilderResourceUpdate;
import com.azure.resourcemanager.appcontainers.models.ManagedServiceIdentity;
import com.azure.resourcemanager.appcontainers.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.appcontainers.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class BuilderResourceUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BuilderResourceUpdate model = BinaryData.fromString(
            "{\"identity\":{\"principalId\":\"baa6b7aa-8830-4ad0-83d6-45771d48fada\",\"tenantId\":\"c2e8c2db-5cbc-4d37-93c9-1c49cf60444a\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"dnhjdauwhvylw\":{\"principalId\":\"54b9d44a-d711-407f-a940-763ff5a70747\",\"clientId\":\"40731f01-c1bd-48bc-903d-98715273678f\"}}},\"tags\":{\"uwprzql\":\"dhxujznbmpo\",\"obbc\":\"eualupjmkhf\",\"tghfgblcgwxzvl\":\"wsrtjriplrbpbe\",\"egibtnmxiebww\":\"qhjk\"},\"properties\":{\"environmentId\":\"ayqcgw\"}}")
            .toObject(BuilderResourceUpdate.class);
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED, model.identity().type());
        Assertions.assertEquals("dhxujznbmpo", model.tags().get("uwprzql"));
        Assertions.assertEquals("ayqcgw", model.environmentId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BuilderResourceUpdate model = new BuilderResourceUpdate()
            .withIdentity(new ManagedServiceIdentity().withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED)
                .withUserAssignedIdentities(mapOf("dnhjdauwhvylw", new UserAssignedIdentity())))
            .withTags(mapOf("uwprzql", "dhxujznbmpo", "obbc", "eualupjmkhf", "tghfgblcgwxzvl", "wsrtjriplrbpbe",
                "egibtnmxiebww", "qhjk"))
            .withEnvironmentId("ayqcgw");
        model = BinaryData.fromObject(model).toObject(BuilderResourceUpdate.class);
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED, model.identity().type());
        Assertions.assertEquals("dhxujznbmpo", model.tags().get("uwprzql"));
        Assertions.assertEquals("ayqcgw", model.environmentId());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
