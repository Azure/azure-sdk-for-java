// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcontainers.ContainerAppsApiManager;
import com.azure.resourcemanager.appcontainers.models.JavaComponent;
import com.azure.resourcemanager.appcontainers.models.JavaComponentConfigurationProperty;
import com.azure.resourcemanager.appcontainers.models.JavaComponentProperties;
import com.azure.resourcemanager.appcontainers.models.JavaComponentPropertiesScale;
import com.azure.resourcemanager.appcontainers.models.JavaComponentServiceBind;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class JavaComponentsCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"componentType\":\"JavaComponentProperties\",\"provisioningState\":\"Succeeded\",\"configurations\":[{\"propertyName\":\"cejo\",\"value\":\"lblfs\"},{\"propertyName\":\"r\",\"value\":\"spimtcvvf\"}],\"scale\":{\"minReplicas\":1410005122,\"maxReplicas\":1846924782},\"serviceBinds\":[{\"name\":\"xizhqikmgo\",\"serviceId\":\"iqemcdiiisklbon\"},{\"name\":\"upjxvtrkfkgenjqn\",\"serviceId\":\"jwkosnyxigf\"},{\"name\":\"jjcxgdq\",\"serviceId\":\"lhnzkwo\"},{\"name\":\"wny\",\"serviceId\":\"xuprrxyxwjezb\"}]},\"id\":\"ployuekdcpvu\",\"name\":\"trsvjmnsvujnjkt\",\"type\":\"olefcjisepkdbxo\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        JavaComponent response = manager.javaComponents()
            .define("xbqssgfenffdxbvw")
            .withExistingManagedEnvironment("dyyrudma", "swtvd")
            .withProperties(new JavaComponentProperties()
                .withConfigurations(
                    Arrays.asList(new JavaComponentConfigurationProperty().withPropertyName("d").withValue("j"),
                        new JavaComponentConfigurationProperty().withPropertyName("xndmuvar").withValue("mzjotprrmuh"),
                        new JavaComponentConfigurationProperty().withPropertyName("htuzlxiwyopgar")
                            .withValue("ctwrapcz")))
                .withScale(new JavaComponentPropertiesScale().withMinReplicas(1524530170).withMaxReplicas(233932008))
                .withServiceBinds(
                    Arrays.asList(new JavaComponentServiceBind().withName("ipiysnjqyowa").withServiceId("c"),
                        new JavaComponentServiceBind().withName("azab").withServiceId("dtsewkaupwhlzyc"),
                        new JavaComponentServiceBind().withName("emgjlm").withServiceId("dorsirxxhy"))))
            .create();

        Assertions.assertEquals("cejo", response.properties().configurations().get(0).propertyName());
        Assertions.assertEquals("lblfs", response.properties().configurations().get(0).value());
        Assertions.assertEquals(1410005122, response.properties().scale().minReplicas());
        Assertions.assertEquals(1846924782, response.properties().scale().maxReplicas());
        Assertions.assertEquals("xizhqikmgo", response.properties().serviceBinds().get(0).name());
        Assertions.assertEquals("iqemcdiiisklbon", response.properties().serviceBinds().get(0).serviceId());
    }
}
