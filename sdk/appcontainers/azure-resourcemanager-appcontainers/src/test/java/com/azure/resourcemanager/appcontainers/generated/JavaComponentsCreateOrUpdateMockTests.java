// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcontainers.ContainerAppsApiManager;
import com.azure.resourcemanager.appcontainers.models.JavaComponent;
import com.azure.resourcemanager.appcontainers.models.JavaComponentConfigurationProperty;
import com.azure.resourcemanager.appcontainers.models.JavaComponentProperties;
import com.azure.resourcemanager.appcontainers.models.JavaComponentServiceBind;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class JavaComponentsCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"componentType\":\"JavaComponentProperties\",\"provisioningState\":\"Succeeded\",\"configurations\":[{\"propertyName\":\"zzfopu\",\"value\":\"qusvwlujopwnib\"}],\"serviceBinds\":[{\"name\":\"zt\",\"serviceId\":\"qumqvfmwcaddt\"},{\"name\":\"txegtvgwyurbelfn\",\"serviceId\":\"ryizwbxgde\"}]},\"id\":\"layunomirhpfabe\",\"name\":\"qlamwmgewayxfl\",\"type\":\"bcpjstbhem\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        JavaComponent response = manager.javaComponents()
            .define("zx")
            .withExistingManagedEnvironment("glaqjsg", "zstuj")
            .withProperties(new JavaComponentProperties()
                .withConfigurations(Arrays.asList(
                    new JavaComponentConfigurationProperty().withPropertyName("lduyehiiittugyuq").withValue("lda")))
                .withServiceBinds(
                    Arrays.asList(new JavaComponentServiceBind().withName("qa").withServiceId("sozjvxdzciggbnv"),
                        new JavaComponentServiceBind().withName("o").withServiceId("alzyxwhoeamo"),
                        new JavaComponentServiceBind().withName("bdoeysf").withServiceId("imtwuuhau"))))
            .create();

        Assertions.assertEquals("zzfopu", response.properties().configurations().get(0).propertyName());
        Assertions.assertEquals("qusvwlujopwnib", response.properties().configurations().get(0).value());
        Assertions.assertEquals("zt", response.properties().serviceBinds().get(0).name());
        Assertions.assertEquals("qumqvfmwcaddt", response.properties().serviceBinds().get(0).serviceId());
    }
}
