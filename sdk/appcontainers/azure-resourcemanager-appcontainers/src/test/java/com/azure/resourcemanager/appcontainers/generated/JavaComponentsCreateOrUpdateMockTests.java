// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcontainers.ContainerAppsApiManager;
import com.azure.resourcemanager.appcontainers.models.JavaComponent;
import com.azure.resourcemanager.appcontainers.models.JavaComponentConfigurationProperty;
import com.azure.resourcemanager.appcontainers.models.JavaComponentProperties;
import com.azure.resourcemanager.appcontainers.models.JavaComponentPropertiesScale;
import com.azure.resourcemanager.appcontainers.models.JavaComponentServiceBind;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class JavaComponentsCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"componentType\":\"JavaComponentProperties\",\"provisioningState\":\"Succeeded\",\"configurations\":[{\"propertyName\":\"sqrggvrbnyruko\",\"value\":\"aciduwjleip\"},{\"propertyName\":\"h\",\"value\":\"xpzruzythqkk\"},{\"propertyName\":\"bg\",\"value\":\"ellv\"},{\"propertyName\":\"nxdmnitmujdtv\",\"value\":\"lyymffhmjpddny\"}],\"scale\":{\"minReplicas\":1116641423,\"maxReplicas\":1558701655},\"serviceBinds\":[{\"name\":\"qmzjqrbrpvnmdy\",\"serviceId\":\"ebojtjppglao\"},{\"name\":\"qk\",\"serviceId\":\"t\"},{\"name\":\"jilaywkdcwmqsyri\",\"serviceId\":\"hxdqaol\"}]},\"id\":\"lnkkbjpjvlywltmf\",\"name\":\"obbjwhlwy\",\"type\":\"fnqzocr\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        JavaComponent response
            = manager.javaComponents()
                .define("ktjtgra")
                .withExistingManagedEnvironment("iwllbvgwzsffted", "us")
                .withProperties(new JavaComponentProperties()
                    .withConfigurations(Arrays.asList(
                        new JavaComponentConfigurationProperty().withPropertyName("bebauzlqb").withValue("xwpfhnjzud"),
                        new JavaComponentConfigurationProperty().withPropertyName("pzkg").withValue("boy"),
                        new JavaComponentConfigurationProperty().withPropertyName("czzqrhmngqbedyg")
                            .withValue("rzwnyk")))
                    .withScale(new JavaComponentPropertiesScale().withMinReplicas(605280163).withMaxReplicas(791235384))
                    .withServiceBinds(
                        Arrays.asList(new JavaComponentServiceBind().withName("pwctofl").withServiceId("eacdhztx"),
                            new JavaComponentServiceBind().withName("rfgdrwj").withServiceId("ewhfjsrwqrxetf"),
                            new JavaComponentServiceBind().withName("wvrrmdqn").withServiceId("cnawth"))))
                .create();

        Assertions.assertEquals("sqrggvrbnyruko", response.properties().configurations().get(0).propertyName());
        Assertions.assertEquals("aciduwjleip", response.properties().configurations().get(0).value());
        Assertions.assertEquals(1116641423, response.properties().scale().minReplicas());
        Assertions.assertEquals(1558701655, response.properties().scale().maxReplicas());
        Assertions.assertEquals("qmzjqrbrpvnmdy", response.properties().serviceBinds().get(0).name());
        Assertions.assertEquals("ebojtjppglao", response.properties().serviceBinds().get(0).serviceId());
    }
}
