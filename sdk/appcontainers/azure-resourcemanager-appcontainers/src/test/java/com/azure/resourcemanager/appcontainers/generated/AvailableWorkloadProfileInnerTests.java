// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.AvailableWorkloadProfileInner;
import com.azure.resourcemanager.appcontainers.models.Applicability;
import com.azure.resourcemanager.appcontainers.models.AvailableWorkloadProfileProperties;
import org.junit.jupiter.api.Assertions;

public final class AvailableWorkloadProfileInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AvailableWorkloadProfileInner model = BinaryData.fromString(
            "{\"location\":\"yocf\",\"properties\":{\"category\":\"s\",\"applicability\":\"Custom\",\"cores\":376493890,\"memoryGiB\":666664165,\"gpus\":30564685,\"displayName\":\"uxh\"},\"id\":\"udxorrqn\",\"name\":\"poczvyifqrvkdvjs\",\"type\":\"lrmv\"}")
            .toObject(AvailableWorkloadProfileInner.class);
        Assertions.assertEquals("yocf", model.location());
        Assertions.assertEquals("s", model.properties().category());
        Assertions.assertEquals(Applicability.CUSTOM, model.properties().applicability());
        Assertions.assertEquals(376493890, model.properties().cores());
        Assertions.assertEquals(666664165, model.properties().memoryGiB());
        Assertions.assertEquals(30564685, model.properties().gpus());
        Assertions.assertEquals("uxh", model.properties().displayName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AvailableWorkloadProfileInner model = new AvailableWorkloadProfileInner().withLocation("yocf").withProperties(
            new AvailableWorkloadProfileProperties().withCategory("s").withApplicability(Applicability.CUSTOM)
                .withCores(376493890).withMemoryGiB(666664165).withGpus(30564685).withDisplayName("uxh"));
        model = BinaryData.fromObject(model).toObject(AvailableWorkloadProfileInner.class);
        Assertions.assertEquals("yocf", model.location());
        Assertions.assertEquals("s", model.properties().category());
        Assertions.assertEquals(Applicability.CUSTOM, model.properties().applicability());
        Assertions.assertEquals(376493890, model.properties().cores());
        Assertions.assertEquals(666664165, model.properties().memoryGiB());
        Assertions.assertEquals(30564685, model.properties().gpus());
        Assertions.assertEquals("uxh", model.properties().displayName());
    }
}
