// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.AvailableWorkloadProfileInner;
import com.azure.resourcemanager.appcontainers.models.Applicability;
import com.azure.resourcemanager.appcontainers.models.AvailableWorkloadProfileProperties;
import org.junit.jupiter.api.Assertions;

public final class AvailableWorkloadProfileInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AvailableWorkloadProfileInner model =
            BinaryData
                .fromString(
                    "{\"location\":\"efovgmk\",\"properties\":{\"category\":\"eyyvxyqjpkcat\",\"applicability\":\"LocationDefault\",\"cores\":1698610201,\"memoryGiB\":1035421848,\"displayName\":\"czsqpjhvm\"},\"id\":\"ajvnysounqe\",\"name\":\"a\",\"type\":\"oaeupfhyhltrpmo\"}")
                .toObject(AvailableWorkloadProfileInner.class);
        Assertions.assertEquals("efovgmk", model.location());
        Assertions.assertEquals("eyyvxyqjpkcat", model.properties().category());
        Assertions.assertEquals(Applicability.LOCATION_DEFAULT, model.properties().applicability());
        Assertions.assertEquals(1698610201, model.properties().cores());
        Assertions.assertEquals(1035421848, model.properties().memoryGiB());
        Assertions.assertEquals("czsqpjhvm", model.properties().displayName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AvailableWorkloadProfileInner model =
            new AvailableWorkloadProfileInner()
                .withLocation("efovgmk")
                .withProperties(
                    new AvailableWorkloadProfileProperties()
                        .withCategory("eyyvxyqjpkcat")
                        .withApplicability(Applicability.LOCATION_DEFAULT)
                        .withCores(1698610201)
                        .withMemoryGiB(1035421848)
                        .withDisplayName("czsqpjhvm"));
        model = BinaryData.fromObject(model).toObject(AvailableWorkloadProfileInner.class);
        Assertions.assertEquals("efovgmk", model.location());
        Assertions.assertEquals("eyyvxyqjpkcat", model.properties().category());
        Assertions.assertEquals(Applicability.LOCATION_DEFAULT, model.properties().applicability());
        Assertions.assertEquals(1698610201, model.properties().cores());
        Assertions.assertEquals(1035421848, model.properties().memoryGiB());
        Assertions.assertEquals("czsqpjhvm", model.properties().displayName());
    }
}
