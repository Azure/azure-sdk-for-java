// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcontainers.ContainerAppsApiManager;
import com.azure.resourcemanager.appcontainers.models.DotNetComponent;
import com.azure.resourcemanager.appcontainers.models.DotNetComponentConfigurationProperty;
import com.azure.resourcemanager.appcontainers.models.DotNetComponentServiceBind;
import com.azure.resourcemanager.appcontainers.models.DotNetComponentType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DotNetComponentsCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"componentType\":\"AspireDashboard\",\"provisioningState\":\"Succeeded\",\"configurations\":[{\"propertyName\":\"zdqiqdlrat\",\"value\":\"wxoauwxsuy\"},{\"propertyName\":\"nhrfgslgl\",\"value\":\"ry\"},{\"propertyName\":\"zihuioaeo\",\"value\":\"ajtfey\"}],\"serviceBinds\":[{\"name\":\"gdd\",\"serviceId\":\"hdccxb\"},{\"name\":\"uqutkzwtjww\",\"serviceId\":\"zytijcx\"}]},\"id\":\"ondegjdydhqkkk\",\"name\":\"juck\",\"type\":\"a\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DotNetComponent response
            = manager.dotNetComponents()
                .define("ceeg")
                .withExistingManagedEnvironment("ovyzt", "lnomfpb")
                .withComponentType(DotNetComponentType.ASPIRE_DASHBOARD)
                .withConfigurations(Arrays.asList(
                    new DotNetComponentConfigurationProperty().withPropertyName("nji").withValue("ukkrehyh"),
                    new DotNetComponentConfigurationProperty().withPropertyName("joduifvulxfaryrv")
                        .withValue("gdezvjqwahoy"),
                    new DotNetComponentConfigurationProperty().withPropertyName("axqvjweiwtczkddn")
                        .withValue("vbooqbmdqrxy"),
                    new DotNetComponentConfigurationProperty().withPropertyName("ae").withValue("cflwtjdtlr")))
                .withServiceBinds(Arrays
                    .asList(new DotNetComponentServiceBind().withName("oyycuxdtz").withServiceId("ipsdudgcozzomehx")))
                .create();

        Assertions.assertEquals(DotNetComponentType.ASPIRE_DASHBOARD, response.componentType());
        Assertions.assertEquals("zdqiqdlrat", response.configurations().get(0).propertyName());
        Assertions.assertEquals("wxoauwxsuy", response.configurations().get(0).value());
        Assertions.assertEquals("gdd", response.serviceBinds().get(0).name());
        Assertions.assertEquals("hdccxb", response.serviceBinds().get(0).serviceId());
    }
}
