// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.ContainerAppProbe;
import com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet;
import com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGetHttpHeadersItem;
import com.azure.resourcemanager.appcontainers.models.ContainerAppProbeTcpSocket;
import com.azure.resourcemanager.appcontainers.models.Scheme;
import com.azure.resourcemanager.appcontainers.models.Type;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ContainerAppProbeTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ContainerAppProbe model = BinaryData.fromString(
            "{\"failureThreshold\":1290029311,\"httpGet\":{\"host\":\"ycnunvjsrtk\",\"httpHeaders\":[{\"name\":\"nopqgikyzirtx\",\"value\":\"yuxzejntpsewgi\"},{\"name\":\"ilqu\",\"value\":\"rydxtqm\"},{\"name\":\"eoxorggufhyao\",\"value\":\"tbghhavgrvkf\"},{\"name\":\"ovjzhpjbibgjmfx\",\"value\":\"mv\"}],\"path\":\"luyovwxnbkfezzx\",\"port\":357757853,\"scheme\":\"HTTPS\"},\"initialDelaySeconds\":1673017156,\"periodSeconds\":215949715,\"successThreshold\":1640359024,\"tcpSocket\":{\"host\":\"bzbomvzzbtdcqvpn\",\"port\":1622829877},\"terminationGracePeriodSeconds\":2588743107415946739,\"timeoutSeconds\":277819924,\"type\":\"Startup\"}")
            .toObject(ContainerAppProbe.class);
        Assertions.assertEquals(1290029311, model.failureThreshold());
        Assertions.assertEquals("ycnunvjsrtk", model.httpGet().host());
        Assertions.assertEquals("nopqgikyzirtx", model.httpGet().httpHeaders().get(0).name());
        Assertions.assertEquals("yuxzejntpsewgi", model.httpGet().httpHeaders().get(0).value());
        Assertions.assertEquals("luyovwxnbkfezzx", model.httpGet().path());
        Assertions.assertEquals(357757853, model.httpGet().port());
        Assertions.assertEquals(Scheme.HTTPS, model.httpGet().scheme());
        Assertions.assertEquals(1673017156, model.initialDelaySeconds());
        Assertions.assertEquals(215949715, model.periodSeconds());
        Assertions.assertEquals(1640359024, model.successThreshold());
        Assertions.assertEquals("bzbomvzzbtdcqvpn", model.tcpSocket().host());
        Assertions.assertEquals(1622829877, model.tcpSocket().port());
        Assertions.assertEquals(2588743107415946739L, model.terminationGracePeriodSeconds());
        Assertions.assertEquals(277819924, model.timeoutSeconds());
        Assertions.assertEquals(Type.STARTUP, model.type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ContainerAppProbe model = new ContainerAppProbe().withFailureThreshold(1290029311)
            .withHttpGet(new ContainerAppProbeHttpGet().withHost("ycnunvjsrtk")
                .withHttpHeaders(Arrays.asList(
                    new ContainerAppProbeHttpGetHttpHeadersItem().withName("nopqgikyzirtx").withValue("yuxzejntpsewgi"),
                    new ContainerAppProbeHttpGetHttpHeadersItem().withName("ilqu").withValue("rydxtqm"),
                    new ContainerAppProbeHttpGetHttpHeadersItem().withName("eoxorggufhyao").withValue("tbghhavgrvkf"),
                    new ContainerAppProbeHttpGetHttpHeadersItem().withName("ovjzhpjbibgjmfx").withValue("mv")))
                .withPath("luyovwxnbkfezzx").withPort(357757853).withScheme(Scheme.HTTPS))
            .withInitialDelaySeconds(1673017156).withPeriodSeconds(215949715).withSuccessThreshold(1640359024)
            .withTcpSocket(new ContainerAppProbeTcpSocket().withHost("bzbomvzzbtdcqvpn").withPort(1622829877))
            .withTerminationGracePeriodSeconds(2588743107415946739L).withTimeoutSeconds(277819924)
            .withType(Type.STARTUP);
        model = BinaryData.fromObject(model).toObject(ContainerAppProbe.class);
        Assertions.assertEquals(1290029311, model.failureThreshold());
        Assertions.assertEquals("ycnunvjsrtk", model.httpGet().host());
        Assertions.assertEquals("nopqgikyzirtx", model.httpGet().httpHeaders().get(0).name());
        Assertions.assertEquals("yuxzejntpsewgi", model.httpGet().httpHeaders().get(0).value());
        Assertions.assertEquals("luyovwxnbkfezzx", model.httpGet().path());
        Assertions.assertEquals(357757853, model.httpGet().port());
        Assertions.assertEquals(Scheme.HTTPS, model.httpGet().scheme());
        Assertions.assertEquals(1673017156, model.initialDelaySeconds());
        Assertions.assertEquals(215949715, model.periodSeconds());
        Assertions.assertEquals(1640359024, model.successThreshold());
        Assertions.assertEquals("bzbomvzzbtdcqvpn", model.tcpSocket().host());
        Assertions.assertEquals(1622829877, model.tcpSocket().port());
        Assertions.assertEquals(2588743107415946739L, model.terminationGracePeriodSeconds());
        Assertions.assertEquals(277819924, model.timeoutSeconds());
        Assertions.assertEquals(Type.STARTUP, model.type());
    }
}
