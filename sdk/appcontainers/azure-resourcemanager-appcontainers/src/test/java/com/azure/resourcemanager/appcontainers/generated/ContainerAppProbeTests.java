// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.ContainerAppProbe;
import com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet;
import com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGetHttpHeadersItem;
import com.azure.resourcemanager.appcontainers.models.ContainerAppProbeTcpSocket;
import com.azure.resourcemanager.appcontainers.models.Scheme;
import com.azure.resourcemanager.appcontainers.models.Type;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ContainerAppProbeTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ContainerAppProbe model = BinaryData.fromString(
            "{\"failureThreshold\":1285990077,\"httpGet\":{\"host\":\"uqgbdbutauvfbt\",\"httpHeaders\":[{\"name\":\"hhmhykojoxa\",\"value\":\"nn\"},{\"name\":\"lpichk\",\"value\":\"ymkcdyhb\"},{\"name\":\"kkpwdreqnovvq\",\"value\":\"ovljxywsu\"}],\"path\":\"yrs\",\"port\":371488938,\"scheme\":\"HTTPS\"},\"initialDelaySeconds\":38368134,\"periodSeconds\":749326216,\"successThreshold\":181693605,\"tcpSocket\":{\"host\":\"ea\",\"port\":884783389},\"terminationGracePeriodSeconds\":8790170709983104417,\"timeoutSeconds\":1893939111,\"type\":\"Liveness\"}")
            .toObject(ContainerAppProbe.class);
        Assertions.assertEquals(1285990077, model.failureThreshold());
        Assertions.assertEquals("uqgbdbutauvfbt", model.httpGet().host());
        Assertions.assertEquals("hhmhykojoxa", model.httpGet().httpHeaders().get(0).name());
        Assertions.assertEquals("nn", model.httpGet().httpHeaders().get(0).value());
        Assertions.assertEquals("yrs", model.httpGet().path());
        Assertions.assertEquals(371488938, model.httpGet().port());
        Assertions.assertEquals(Scheme.HTTPS, model.httpGet().scheme());
        Assertions.assertEquals(38368134, model.initialDelaySeconds());
        Assertions.assertEquals(749326216, model.periodSeconds());
        Assertions.assertEquals(181693605, model.successThreshold());
        Assertions.assertEquals("ea", model.tcpSocket().host());
        Assertions.assertEquals(884783389, model.tcpSocket().port());
        Assertions.assertEquals(8790170709983104417L, model.terminationGracePeriodSeconds());
        Assertions.assertEquals(1893939111, model.timeoutSeconds());
        Assertions.assertEquals(Type.LIVENESS, model.type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ContainerAppProbe model
            = new ContainerAppProbe().withFailureThreshold(1285990077)
                .withHttpGet(new ContainerAppProbeHttpGet().withHost("uqgbdbutauvfbt")
                    .withHttpHeaders(Arrays.asList(
                        new ContainerAppProbeHttpGetHttpHeadersItem().withName("hhmhykojoxa").withValue("nn"),
                        new ContainerAppProbeHttpGetHttpHeadersItem().withName("lpichk").withValue("ymkcdyhb"),
                        new ContainerAppProbeHttpGetHttpHeadersItem().withName("kkpwdreqnovvq").withValue("ovljxywsu")))
                    .withPath("yrs")
                    .withPort(371488938)
                    .withScheme(Scheme.HTTPS))
                .withInitialDelaySeconds(38368134)
                .withPeriodSeconds(749326216)
                .withSuccessThreshold(181693605)
                .withTcpSocket(new ContainerAppProbeTcpSocket().withHost("ea").withPort(884783389))
                .withTerminationGracePeriodSeconds(8790170709983104417L)
                .withTimeoutSeconds(1893939111)
                .withType(Type.LIVENESS);
        model = BinaryData.fromObject(model).toObject(ContainerAppProbe.class);
        Assertions.assertEquals(1285990077, model.failureThreshold());
        Assertions.assertEquals("uqgbdbutauvfbt", model.httpGet().host());
        Assertions.assertEquals("hhmhykojoxa", model.httpGet().httpHeaders().get(0).name());
        Assertions.assertEquals("nn", model.httpGet().httpHeaders().get(0).value());
        Assertions.assertEquals("yrs", model.httpGet().path());
        Assertions.assertEquals(371488938, model.httpGet().port());
        Assertions.assertEquals(Scheme.HTTPS, model.httpGet().scheme());
        Assertions.assertEquals(38368134, model.initialDelaySeconds());
        Assertions.assertEquals(749326216, model.periodSeconds());
        Assertions.assertEquals(181693605, model.successThreshold());
        Assertions.assertEquals("ea", model.tcpSocket().host());
        Assertions.assertEquals(884783389, model.tcpSocket().port());
        Assertions.assertEquals(8790170709983104417L, model.terminationGracePeriodSeconds());
        Assertions.assertEquals(1893939111, model.timeoutSeconds());
        Assertions.assertEquals(Type.LIVENESS, model.type());
    }
}
