// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.ContainerAppProbe;
import com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet;
import com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGetHttpHeadersItem;
import com.azure.resourcemanager.appcontainers.models.ContainerAppProbeTcpSocket;
import com.azure.resourcemanager.appcontainers.models.Scheme;
import com.azure.resourcemanager.appcontainers.models.Type;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ContainerAppProbeTests {
    @Test
    public void testDeserialize() {
        ContainerAppProbe model =
            BinaryData
                .fromString(
                    "{\"failureThreshold\":1892001157,\"httpGet\":{\"host\":\"rhyrnxxmueed\",\"httpHeaders\":[{\"name\":\"dvstkw\",\"value\":\"qtc\"},{\"name\":\"ealmfmtdaaygdvwv\",\"value\":\"piohgwxrtfu\"},{\"name\":\"xepxgyqagvrvmn\",\"value\":\"k\"}],\"path\":\"ghimdblx\",\"port\":505358997,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":1046627826,\"periodSeconds\":984160598,\"successThreshold\":44093722,\"tcpSocket\":{\"host\":\"mszkkfo\",\"port\":739435613},\"terminationGracePeriodSeconds\":6713909564686368420,\"timeoutSeconds\":520152641,\"type\":\"Readiness\"}")
                .toObject(ContainerAppProbe.class);
        Assertions.assertEquals(1892001157, model.failureThreshold());
        Assertions.assertEquals("rhyrnxxmueed", model.httpGet().host());
        Assertions.assertEquals("dvstkw", model.httpGet().httpHeaders().get(0).name());
        Assertions.assertEquals("qtc", model.httpGet().httpHeaders().get(0).value());
        Assertions.assertEquals("ghimdblx", model.httpGet().path());
        Assertions.assertEquals(505358997, model.httpGet().port());
        Assertions.assertEquals(Scheme.HTTP, model.httpGet().scheme());
        Assertions.assertEquals(1046627826, model.initialDelaySeconds());
        Assertions.assertEquals(984160598, model.periodSeconds());
        Assertions.assertEquals(44093722, model.successThreshold());
        Assertions.assertEquals("mszkkfo", model.tcpSocket().host());
        Assertions.assertEquals(739435613, model.tcpSocket().port());
        Assertions.assertEquals(6713909564686368420L, model.terminationGracePeriodSeconds());
        Assertions.assertEquals(520152641, model.timeoutSeconds());
        Assertions.assertEquals(Type.READINESS, model.type());
    }

    @Test
    public void testSerialize() {
        ContainerAppProbe model =
            new ContainerAppProbe()
                .withFailureThreshold(1892001157)
                .withHttpGet(
                    new ContainerAppProbeHttpGet()
                        .withHost("rhyrnxxmueed")
                        .withHttpHeaders(
                            Arrays
                                .asList(
                                    new ContainerAppProbeHttpGetHttpHeadersItem().withName("dvstkw").withValue("qtc"),
                                    new ContainerAppProbeHttpGetHttpHeadersItem()
                                        .withName("ealmfmtdaaygdvwv")
                                        .withValue("piohgwxrtfu"),
                                    new ContainerAppProbeHttpGetHttpHeadersItem()
                                        .withName("xepxgyqagvrvmn")
                                        .withValue("k")))
                        .withPath("ghimdblx")
                        .withPort(505358997)
                        .withScheme(Scheme.HTTP))
                .withInitialDelaySeconds(1046627826)
                .withPeriodSeconds(984160598)
                .withSuccessThreshold(44093722)
                .withTcpSocket(new ContainerAppProbeTcpSocket().withHost("mszkkfo").withPort(739435613))
                .withTerminationGracePeriodSeconds(6713909564686368420L)
                .withTimeoutSeconds(520152641)
                .withType(Type.READINESS);
        model = BinaryData.fromObject(model).toObject(ContainerAppProbe.class);
        Assertions.assertEquals(1892001157, model.failureThreshold());
        Assertions.assertEquals("rhyrnxxmueed", model.httpGet().host());
        Assertions.assertEquals("dvstkw", model.httpGet().httpHeaders().get(0).name());
        Assertions.assertEquals("qtc", model.httpGet().httpHeaders().get(0).value());
        Assertions.assertEquals("ghimdblx", model.httpGet().path());
        Assertions.assertEquals(505358997, model.httpGet().port());
        Assertions.assertEquals(Scheme.HTTP, model.httpGet().scheme());
        Assertions.assertEquals(1046627826, model.initialDelaySeconds());
        Assertions.assertEquals(984160598, model.periodSeconds());
        Assertions.assertEquals(44093722, model.successThreshold());
        Assertions.assertEquals("mszkkfo", model.tcpSocket().host());
        Assertions.assertEquals(739435613, model.tcpSocket().port());
        Assertions.assertEquals(6713909564686368420L, model.terminationGracePeriodSeconds());
        Assertions.assertEquals(520152641, model.timeoutSeconds());
        Assertions.assertEquals(Type.READINESS, model.type());
    }
}
