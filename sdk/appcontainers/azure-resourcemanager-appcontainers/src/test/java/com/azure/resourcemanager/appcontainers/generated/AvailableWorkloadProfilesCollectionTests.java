// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.AvailableWorkloadProfileInner;
import com.azure.resourcemanager.appcontainers.models.Applicability;
import com.azure.resourcemanager.appcontainers.models.AvailableWorkloadProfileProperties;
import com.azure.resourcemanager.appcontainers.models.AvailableWorkloadProfilesCollection;
import com.azure.resourcemanager.appcontainers.models.Category;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class AvailableWorkloadProfilesCollectionTests {
    @Test
    public void testDeserialize() {
        AvailableWorkloadProfilesCollection model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"location\":\"psttexoq\",\"properties\":{\"billingMeterCategory\":\"PremiumSkuGeneralPurpose\",\"applicability\":\"Custom\",\"cores\":402556977,\"memoryGiB\":130119392,\"displayName\":\"uncuw\"},\"id\":\"spkcdqzh\",\"name\":\"ctddun\",\"type\":\"ndy\"},{\"location\":\"chrqb\",\"properties\":{\"billingMeterCategory\":\"PremiumSkuGeneralPurpose\",\"applicability\":\"Custom\",\"cores\":1318617256,\"memoryGiB\":4442645,\"displayName\":\"wboxjumvqqo\"},\"id\":\"hrraiouaubrj\",\"name\":\"loqxfuojrngif\",\"type\":\"rzpasccbiuimzdly\"}],\"nextLink\":\"fqwmkyoquf\"}")
                .toObject(AvailableWorkloadProfilesCollection.class);
        Assertions.assertEquals("psttexoq", model.value().get(0).location());
        Assertions
            .assertEquals(
                Category.PREMIUM_SKU_GENERAL_PURPOSE, model.value().get(0).properties().billingMeterCategory());
        Assertions.assertEquals(Applicability.CUSTOM, model.value().get(0).properties().applicability());
        Assertions.assertEquals(402556977, model.value().get(0).properties().cores());
        Assertions.assertEquals(130119392, model.value().get(0).properties().memoryGiB());
        Assertions.assertEquals("uncuw", model.value().get(0).properties().displayName());
    }

    @Test
    public void testSerialize() {
        AvailableWorkloadProfilesCollection model =
            new AvailableWorkloadProfilesCollection()
                .withValue(
                    Arrays
                        .asList(
                            new AvailableWorkloadProfileInner()
                                .withLocation("psttexoq")
                                .withProperties(
                                    new AvailableWorkloadProfileProperties()
                                        .withBillingMeterCategory(Category.PREMIUM_SKU_GENERAL_PURPOSE)
                                        .withApplicability(Applicability.CUSTOM)
                                        .withCores(402556977)
                                        .withMemoryGiB(130119392)
                                        .withDisplayName("uncuw")),
                            new AvailableWorkloadProfileInner()
                                .withLocation("chrqb")
                                .withProperties(
                                    new AvailableWorkloadProfileProperties()
                                        .withBillingMeterCategory(Category.PREMIUM_SKU_GENERAL_PURPOSE)
                                        .withApplicability(Applicability.CUSTOM)
                                        .withCores(1318617256)
                                        .withMemoryGiB(4442645)
                                        .withDisplayName("wboxjumvqqo"))));
        model = BinaryData.fromObject(model).toObject(AvailableWorkloadProfilesCollection.class);
        Assertions.assertEquals("psttexoq", model.value().get(0).location());
        Assertions
            .assertEquals(
                Category.PREMIUM_SKU_GENERAL_PURPOSE, model.value().get(0).properties().billingMeterCategory());
        Assertions.assertEquals(Applicability.CUSTOM, model.value().get(0).properties().applicability());
        Assertions.assertEquals(402556977, model.value().get(0).properties().cores());
        Assertions.assertEquals(130119392, model.value().get(0).properties().memoryGiB());
        Assertions.assertEquals("uncuw", model.value().get(0).properties().displayName());
    }
}
