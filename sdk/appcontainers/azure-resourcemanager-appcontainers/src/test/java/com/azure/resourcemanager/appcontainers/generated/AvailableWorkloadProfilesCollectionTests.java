// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.AvailableWorkloadProfileInner;
import com.azure.resourcemanager.appcontainers.models.Applicability;
import com.azure.resourcemanager.appcontainers.models.AvailableWorkloadProfileProperties;
import com.azure.resourcemanager.appcontainers.models.AvailableWorkloadProfilesCollection;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AvailableWorkloadProfilesCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AvailableWorkloadProfilesCollection model = BinaryData.fromString(
            "{\"value\":[{\"location\":\"ynpwlbj\",\"properties\":{\"category\":\"acfta\",\"applicability\":\"LocationDefault\",\"cores\":2035779275,\"memoryGiB\":1194387790,\"gpus\":1099330569,\"displayName\":\"oppusuesnzw\"},\"id\":\"jbavorxzdm\",\"name\":\"hctbqvudwxdn\",\"type\":\"nvowgujju\"}],\"nextLink\":\"dkcglhsl\"}")
            .toObject(AvailableWorkloadProfilesCollection.class);
        Assertions.assertEquals("ynpwlbj", model.value().get(0).location());
        Assertions.assertEquals("acfta", model.value().get(0).properties().category());
        Assertions.assertEquals(Applicability.LOCATION_DEFAULT, model.value().get(0).properties().applicability());
        Assertions.assertEquals(2035779275, model.value().get(0).properties().cores());
        Assertions.assertEquals(1194387790, model.value().get(0).properties().memoryGiB());
        Assertions.assertEquals(1099330569, model.value().get(0).properties().gpus());
        Assertions.assertEquals("oppusuesnzw", model.value().get(0).properties().displayName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AvailableWorkloadProfilesCollection model = new AvailableWorkloadProfilesCollection()
            .withValue(Arrays.asList(new AvailableWorkloadProfileInner().withLocation("ynpwlbj")
                .withProperties(new AvailableWorkloadProfileProperties().withCategory("acfta")
                    .withApplicability(Applicability.LOCATION_DEFAULT)
                    .withCores(2035779275)
                    .withMemoryGiB(1194387790)
                    .withGpus(1099330569)
                    .withDisplayName("oppusuesnzw"))));
        model = BinaryData.fromObject(model).toObject(AvailableWorkloadProfilesCollection.class);
        Assertions.assertEquals("ynpwlbj", model.value().get(0).location());
        Assertions.assertEquals("acfta", model.value().get(0).properties().category());
        Assertions.assertEquals(Applicability.LOCATION_DEFAULT, model.value().get(0).properties().applicability());
        Assertions.assertEquals(2035779275, model.value().get(0).properties().cores());
        Assertions.assertEquals(1194387790, model.value().get(0).properties().memoryGiB());
        Assertions.assertEquals(1099330569, model.value().get(0).properties().gpus());
        Assertions.assertEquals("oppusuesnzw", model.value().get(0).properties().displayName());
    }
}
