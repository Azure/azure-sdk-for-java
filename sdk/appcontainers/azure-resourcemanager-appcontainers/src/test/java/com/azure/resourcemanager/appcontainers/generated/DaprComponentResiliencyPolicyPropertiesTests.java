// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.DaprComponentResiliencyPolicyProperties;
import com.azure.resourcemanager.appcontainers.models.DaprComponentResiliencyPolicyCircuitBreakerPolicyConfiguration;
import com.azure.resourcemanager.appcontainers.models.DaprComponentResiliencyPolicyConfiguration;
import com.azure.resourcemanager.appcontainers.models.DaprComponentResiliencyPolicyHttpRetryBackOffConfiguration;
import com.azure.resourcemanager.appcontainers.models.DaprComponentResiliencyPolicyHttpRetryPolicyConfiguration;
import com.azure.resourcemanager.appcontainers.models.DaprComponentResiliencyPolicyTimeoutPolicyConfiguration;
import org.junit.jupiter.api.Assertions;

public final class DaprComponentResiliencyPolicyPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DaprComponentResiliencyPolicyProperties model = BinaryData.fromString(
            "{\"inboundPolicy\":{\"httpRetryPolicy\":{\"maxRetries\":336660638,\"retryBackOff\":{\"initialDelayInMilliseconds\":485874118,\"maxIntervalInMilliseconds\":1672875845}},\"timeoutPolicy\":{\"responseTimeoutInSeconds\":2023850550},\"circuitBreakerPolicy\":{\"consecutiveErrors\":822937790,\"timeoutInSeconds\":1188527137,\"intervalInSeconds\":915705696}},\"outboundPolicy\":{\"httpRetryPolicy\":{\"maxRetries\":1877089971,\"retryBackOff\":{\"initialDelayInMilliseconds\":872457867,\"maxIntervalInMilliseconds\":1271280598}},\"timeoutPolicy\":{\"responseTimeoutInSeconds\":1910064100},\"circuitBreakerPolicy\":{\"consecutiveErrors\":322576383,\"timeoutInSeconds\":1822638526,\"intervalInSeconds\":1732227521}}}")
            .toObject(DaprComponentResiliencyPolicyProperties.class);
        Assertions.assertEquals(336660638, model.inboundPolicy().httpRetryPolicy().maxRetries());
        Assertions.assertEquals(485874118,
            model.inboundPolicy().httpRetryPolicy().retryBackOff().initialDelayInMilliseconds());
        Assertions.assertEquals(1672875845,
            model.inboundPolicy().httpRetryPolicy().retryBackOff().maxIntervalInMilliseconds());
        Assertions.assertEquals(2023850550, model.inboundPolicy().timeoutPolicy().responseTimeoutInSeconds());
        Assertions.assertEquals(822937790, model.inboundPolicy().circuitBreakerPolicy().consecutiveErrors());
        Assertions.assertEquals(1188527137, model.inboundPolicy().circuitBreakerPolicy().timeoutInSeconds());
        Assertions.assertEquals(915705696, model.inboundPolicy().circuitBreakerPolicy().intervalInSeconds());
        Assertions.assertEquals(1877089971, model.outboundPolicy().httpRetryPolicy().maxRetries());
        Assertions.assertEquals(872457867,
            model.outboundPolicy().httpRetryPolicy().retryBackOff().initialDelayInMilliseconds());
        Assertions.assertEquals(1271280598,
            model.outboundPolicy().httpRetryPolicy().retryBackOff().maxIntervalInMilliseconds());
        Assertions.assertEquals(1910064100, model.outboundPolicy().timeoutPolicy().responseTimeoutInSeconds());
        Assertions.assertEquals(322576383, model.outboundPolicy().circuitBreakerPolicy().consecutiveErrors());
        Assertions.assertEquals(1822638526, model.outboundPolicy().circuitBreakerPolicy().timeoutInSeconds());
        Assertions.assertEquals(1732227521, model.outboundPolicy().circuitBreakerPolicy().intervalInSeconds());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DaprComponentResiliencyPolicyProperties model = new DaprComponentResiliencyPolicyProperties()
            .withInboundPolicy(new DaprComponentResiliencyPolicyConfiguration()
                .withHttpRetryPolicy(
                    new DaprComponentResiliencyPolicyHttpRetryPolicyConfiguration().withMaxRetries(336660638)
                        .withRetryBackOff(new DaprComponentResiliencyPolicyHttpRetryBackOffConfiguration()
                            .withInitialDelayInMilliseconds(485874118)
                            .withMaxIntervalInMilliseconds(1672875845)))
                .withTimeoutPolicy(new DaprComponentResiliencyPolicyTimeoutPolicyConfiguration()
                    .withResponseTimeoutInSeconds(2023850550))
                .withCircuitBreakerPolicy(new DaprComponentResiliencyPolicyCircuitBreakerPolicyConfiguration()
                    .withConsecutiveErrors(822937790)
                    .withTimeoutInSeconds(1188527137)
                    .withIntervalInSeconds(915705696)))
            .withOutboundPolicy(new DaprComponentResiliencyPolicyConfiguration()
                .withHttpRetryPolicy(
                    new DaprComponentResiliencyPolicyHttpRetryPolicyConfiguration().withMaxRetries(1877089971)
                        .withRetryBackOff(new DaprComponentResiliencyPolicyHttpRetryBackOffConfiguration()
                            .withInitialDelayInMilliseconds(872457867)
                            .withMaxIntervalInMilliseconds(1271280598)))
                .withTimeoutPolicy(new DaprComponentResiliencyPolicyTimeoutPolicyConfiguration()
                    .withResponseTimeoutInSeconds(1910064100))
                .withCircuitBreakerPolicy(new DaprComponentResiliencyPolicyCircuitBreakerPolicyConfiguration()
                    .withConsecutiveErrors(322576383)
                    .withTimeoutInSeconds(1822638526)
                    .withIntervalInSeconds(1732227521)));
        model = BinaryData.fromObject(model).toObject(DaprComponentResiliencyPolicyProperties.class);
        Assertions.assertEquals(336660638, model.inboundPolicy().httpRetryPolicy().maxRetries());
        Assertions.assertEquals(485874118,
            model.inboundPolicy().httpRetryPolicy().retryBackOff().initialDelayInMilliseconds());
        Assertions.assertEquals(1672875845,
            model.inboundPolicy().httpRetryPolicy().retryBackOff().maxIntervalInMilliseconds());
        Assertions.assertEquals(2023850550, model.inboundPolicy().timeoutPolicy().responseTimeoutInSeconds());
        Assertions.assertEquals(822937790, model.inboundPolicy().circuitBreakerPolicy().consecutiveErrors());
        Assertions.assertEquals(1188527137, model.inboundPolicy().circuitBreakerPolicy().timeoutInSeconds());
        Assertions.assertEquals(915705696, model.inboundPolicy().circuitBreakerPolicy().intervalInSeconds());
        Assertions.assertEquals(1877089971, model.outboundPolicy().httpRetryPolicy().maxRetries());
        Assertions.assertEquals(872457867,
            model.outboundPolicy().httpRetryPolicy().retryBackOff().initialDelayInMilliseconds());
        Assertions.assertEquals(1271280598,
            model.outboundPolicy().httpRetryPolicy().retryBackOff().maxIntervalInMilliseconds());
        Assertions.assertEquals(1910064100, model.outboundPolicy().timeoutPolicy().responseTimeoutInSeconds());
        Assertions.assertEquals(322576383, model.outboundPolicy().circuitBreakerPolicy().consecutiveErrors());
        Assertions.assertEquals(1822638526, model.outboundPolicy().circuitBreakerPolicy().timeoutInSeconds());
        Assertions.assertEquals(1732227521, model.outboundPolicy().circuitBreakerPolicy().intervalInSeconds());
    }
}
