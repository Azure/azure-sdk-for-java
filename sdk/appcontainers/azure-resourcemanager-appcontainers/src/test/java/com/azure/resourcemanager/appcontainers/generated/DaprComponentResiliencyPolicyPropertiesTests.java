// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.DaprComponentResiliencyPolicyProperties;
import com.azure.resourcemanager.appcontainers.models.DaprComponentResiliencyPolicyCircuitBreakerPolicyConfiguration;
import com.azure.resourcemanager.appcontainers.models.DaprComponentResiliencyPolicyConfiguration;
import com.azure.resourcemanager.appcontainers.models.DaprComponentResiliencyPolicyHttpRetryBackOffConfiguration;
import com.azure.resourcemanager.appcontainers.models.DaprComponentResiliencyPolicyHttpRetryPolicyConfiguration;
import com.azure.resourcemanager.appcontainers.models.DaprComponentResiliencyPolicyTimeoutPolicyConfiguration;
import org.junit.jupiter.api.Assertions;

public final class DaprComponentResiliencyPolicyPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DaprComponentResiliencyPolicyProperties model = BinaryData.fromString(
            "{\"inboundPolicy\":{\"httpRetryPolicy\":{\"maxRetries\":535821892,\"retryBackOff\":{\"initialDelayInMilliseconds\":1370184740,\"maxIntervalInMilliseconds\":1661649499}},\"timeoutPolicy\":{\"responseTimeoutInSeconds\":67528675},\"circuitBreakerPolicy\":{\"consecutiveErrors\":512286657,\"timeoutInSeconds\":441004284,\"intervalInSeconds\":1693738620}},\"outboundPolicy\":{\"httpRetryPolicy\":{\"maxRetries\":2009099936,\"retryBackOff\":{\"initialDelayInMilliseconds\":926291018,\"maxIntervalInMilliseconds\":2138719926}},\"timeoutPolicy\":{\"responseTimeoutInSeconds\":551116987},\"circuitBreakerPolicy\":{\"consecutiveErrors\":1222024118,\"timeoutInSeconds\":112686676,\"intervalInSeconds\":1972305206}}}")
            .toObject(DaprComponentResiliencyPolicyProperties.class);
        Assertions.assertEquals(535821892, model.inboundPolicy().httpRetryPolicy().maxRetries());
        Assertions.assertEquals(1370184740,
            model.inboundPolicy().httpRetryPolicy().retryBackOff().initialDelayInMilliseconds());
        Assertions.assertEquals(1661649499,
            model.inboundPolicy().httpRetryPolicy().retryBackOff().maxIntervalInMilliseconds());
        Assertions.assertEquals(67528675, model.inboundPolicy().timeoutPolicy().responseTimeoutInSeconds());
        Assertions.assertEquals(512286657, model.inboundPolicy().circuitBreakerPolicy().consecutiveErrors());
        Assertions.assertEquals(441004284, model.inboundPolicy().circuitBreakerPolicy().timeoutInSeconds());
        Assertions.assertEquals(1693738620, model.inboundPolicy().circuitBreakerPolicy().intervalInSeconds());
        Assertions.assertEquals(2009099936, model.outboundPolicy().httpRetryPolicy().maxRetries());
        Assertions.assertEquals(926291018,
            model.outboundPolicy().httpRetryPolicy().retryBackOff().initialDelayInMilliseconds());
        Assertions.assertEquals(2138719926,
            model.outboundPolicy().httpRetryPolicy().retryBackOff().maxIntervalInMilliseconds());
        Assertions.assertEquals(551116987, model.outboundPolicy().timeoutPolicy().responseTimeoutInSeconds());
        Assertions.assertEquals(1222024118, model.outboundPolicy().circuitBreakerPolicy().consecutiveErrors());
        Assertions.assertEquals(112686676, model.outboundPolicy().circuitBreakerPolicy().timeoutInSeconds());
        Assertions.assertEquals(1972305206, model.outboundPolicy().circuitBreakerPolicy().intervalInSeconds());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DaprComponentResiliencyPolicyProperties model = new DaprComponentResiliencyPolicyProperties()
            .withInboundPolicy(new DaprComponentResiliencyPolicyConfiguration()
                .withHttpRetryPolicy(
                    new DaprComponentResiliencyPolicyHttpRetryPolicyConfiguration().withMaxRetries(535821892)
                        .withRetryBackOff(new DaprComponentResiliencyPolicyHttpRetryBackOffConfiguration()
                            .withInitialDelayInMilliseconds(1370184740)
                            .withMaxIntervalInMilliseconds(1661649499)))
                .withTimeoutPolicy(new DaprComponentResiliencyPolicyTimeoutPolicyConfiguration()
                    .withResponseTimeoutInSeconds(67528675))
                .withCircuitBreakerPolicy(new DaprComponentResiliencyPolicyCircuitBreakerPolicyConfiguration()
                    .withConsecutiveErrors(512286657)
                    .withTimeoutInSeconds(441004284)
                    .withIntervalInSeconds(1693738620)))
            .withOutboundPolicy(new DaprComponentResiliencyPolicyConfiguration()
                .withHttpRetryPolicy(
                    new DaprComponentResiliencyPolicyHttpRetryPolicyConfiguration().withMaxRetries(2009099936)
                        .withRetryBackOff(new DaprComponentResiliencyPolicyHttpRetryBackOffConfiguration()
                            .withInitialDelayInMilliseconds(926291018)
                            .withMaxIntervalInMilliseconds(2138719926)))
                .withTimeoutPolicy(new DaprComponentResiliencyPolicyTimeoutPolicyConfiguration()
                    .withResponseTimeoutInSeconds(551116987))
                .withCircuitBreakerPolicy(new DaprComponentResiliencyPolicyCircuitBreakerPolicyConfiguration()
                    .withConsecutiveErrors(1222024118)
                    .withTimeoutInSeconds(112686676)
                    .withIntervalInSeconds(1972305206)));
        model = BinaryData.fromObject(model).toObject(DaprComponentResiliencyPolicyProperties.class);
        Assertions.assertEquals(535821892, model.inboundPolicy().httpRetryPolicy().maxRetries());
        Assertions.assertEquals(1370184740,
            model.inboundPolicy().httpRetryPolicy().retryBackOff().initialDelayInMilliseconds());
        Assertions.assertEquals(1661649499,
            model.inboundPolicy().httpRetryPolicy().retryBackOff().maxIntervalInMilliseconds());
        Assertions.assertEquals(67528675, model.inboundPolicy().timeoutPolicy().responseTimeoutInSeconds());
        Assertions.assertEquals(512286657, model.inboundPolicy().circuitBreakerPolicy().consecutiveErrors());
        Assertions.assertEquals(441004284, model.inboundPolicy().circuitBreakerPolicy().timeoutInSeconds());
        Assertions.assertEquals(1693738620, model.inboundPolicy().circuitBreakerPolicy().intervalInSeconds());
        Assertions.assertEquals(2009099936, model.outboundPolicy().httpRetryPolicy().maxRetries());
        Assertions.assertEquals(926291018,
            model.outboundPolicy().httpRetryPolicy().retryBackOff().initialDelayInMilliseconds());
        Assertions.assertEquals(2138719926,
            model.outboundPolicy().httpRetryPolicy().retryBackOff().maxIntervalInMilliseconds());
        Assertions.assertEquals(551116987, model.outboundPolicy().timeoutPolicy().responseTimeoutInSeconds());
        Assertions.assertEquals(1222024118, model.outboundPolicy().circuitBreakerPolicy().consecutiveErrors());
        Assertions.assertEquals(112686676, model.outboundPolicy().circuitBreakerPolicy().timeoutInSeconds());
        Assertions.assertEquals(1972305206, model.outboundPolicy().circuitBreakerPolicy().intervalInSeconds());
    }
}
