// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.BindingType;
import com.azure.resourcemanager.appcontainers.models.CustomDomain;
import com.azure.resourcemanager.appcontainers.models.HttpRoute;
import com.azure.resourcemanager.appcontainers.models.HttpRouteAction;
import com.azure.resourcemanager.appcontainers.models.HttpRouteConfigProperties;
import com.azure.resourcemanager.appcontainers.models.HttpRouteMatch;
import com.azure.resourcemanager.appcontainers.models.HttpRouteRule;
import com.azure.resourcemanager.appcontainers.models.HttpRouteTarget;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class HttpRouteConfigPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HttpRouteConfigProperties model = BinaryData.fromString(
            "{\"provisioningState\":\"Canceled\",\"provisioningErrors\":[{\"timestamp\":\"2021-09-10T05:06:17Z\",\"message\":\"ekxgn\"}],\"fqdn\":\"km\",\"customDomains\":[{\"name\":\"wzvmdoksqd\",\"bindingType\":\"SniEnabled\",\"certificateId\":\"wxlboncqbazqicq\"},{\"name\":\"hygtv\",\"bindingType\":\"Disabled\",\"certificateId\":\"anepubd\"},{\"name\":\"kxyqvgxiaodetv\",\"bindingType\":\"Disabled\",\"certificateId\":\"dxuwsaifm\"},{\"name\":\"wnosbzlehgcvkbck\",\"bindingType\":\"Auto\",\"certificateId\":\"gjyy\"}],\"rules\":[{\"targets\":[{\"containerApp\":\"szerqzevxoqei\",\"revision\":\"xwaljgl\",\"label\":\"blqwaafrqulhmzy\",\"weight\":2020132379},{\"containerApp\":\"dvaf\",\"revision\":\"qpjiyrqjcr\",\"label\":\"xwmzwdfkbnrz\",\"weight\":1517917058},{\"containerApp\":\"dltb\",\"revision\":\"tqjfgxxsaet\",\"label\":\"dgvpyig\",\"weight\":1026610313}],\"routes\":[{\"match\":{\"prefix\":\"dcduwjoedxn\",\"path\":\"caifpaurww\",\"pathSeparatedPrefix\":\"l\",\"caseSensitive\":false},\"action\":{\"prefixRewrite\":\"cdmkxwxdcvjw\"}},{\"match\":{\"prefix\":\"iakeciqc\",\"path\":\"rtui\",\"pathSeparatedPrefix\":\"siw\",\"caseSensitive\":false},\"action\":{\"prefixRewrite\":\"zhzzwvywrg\"}},{\"match\":{\"prefix\":\"ydg\",\"path\":\"x\",\"pathSeparatedPrefix\":\"akiqa\",\"caseSensitive\":true},\"action\":{\"prefixRewrite\":\"kclamgglvlmf\"}}],\"description\":\"doqey\"},{\"targets\":[{\"containerApp\":\"tygxhqfgq\",\"revision\":\"yejsxtlg\",\"label\":\"wf\",\"weight\":463475114},{\"containerApp\":\"iucijjcea\",\"revision\":\"ijjj\",\"label\":\"va\",\"weight\":38693465},{\"containerApp\":\"szknxkvccxe\",\"revision\":\"vkunmign\",\"label\":\"ikkgqo\",\"weight\":865736943},{\"containerApp\":\"pinde\",\"revision\":\"abbxbhmedeil\",\"label\":\"ywfcfxzi\",\"weight\":391038387}],\"routes\":[{\"match\":{\"prefix\":\"ypusuvjslczwci\",\"path\":\"jsllfryvd\",\"pathSeparatedPrefix\":\"x\",\"caseSensitive\":false},\"action\":{\"prefixRewrite\":\"frgnawbabgfbktyj\"}},{\"match\":{\"prefix\":\"zlfsyqkfrbzgowo\",\"path\":\"mj\",\"pathSeparatedPrefix\":\"jcx\",\"caseSensitive\":false},\"action\":{\"prefixRewrite\":\"hlusrvxisi\"}}],\"description\":\"ceagbjqvlsumywz\"}]}")
            .toObject(HttpRouteConfigProperties.class);
        Assertions.assertEquals("wzvmdoksqd", model.customDomains().get(0).name());
        Assertions.assertEquals(BindingType.SNI_ENABLED, model.customDomains().get(0).bindingType());
        Assertions.assertEquals("wxlboncqbazqicq", model.customDomains().get(0).certificateId());
        Assertions.assertEquals("szerqzevxoqei", model.rules().get(0).targets().get(0).containerApp());
        Assertions.assertEquals("xwaljgl", model.rules().get(0).targets().get(0).revision());
        Assertions.assertEquals("blqwaafrqulhmzy", model.rules().get(0).targets().get(0).label());
        Assertions.assertEquals(2020132379, model.rules().get(0).targets().get(0).weight());
        Assertions.assertEquals("dcduwjoedxn", model.rules().get(0).routes().get(0).match().prefix());
        Assertions.assertEquals("caifpaurww", model.rules().get(0).routes().get(0).match().path());
        Assertions.assertEquals("l", model.rules().get(0).routes().get(0).match().pathSeparatedPrefix());
        Assertions.assertFalse(model.rules().get(0).routes().get(0).match().caseSensitive());
        Assertions.assertEquals("cdmkxwxdcvjw", model.rules().get(0).routes().get(0).action().prefixRewrite());
        Assertions.assertEquals("doqey", model.rules().get(0).description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HttpRouteConfigProperties model = new HttpRouteConfigProperties()
            .withCustomDomains(Arrays.asList(
                new CustomDomain().withName("wzvmdoksqd")
                    .withBindingType(BindingType.SNI_ENABLED)
                    .withCertificateId("wxlboncqbazqicq"),
                new CustomDomain().withName("hygtv").withBindingType(BindingType.DISABLED).withCertificateId("anepubd"),
                new CustomDomain().withName("kxyqvgxiaodetv")
                    .withBindingType(BindingType.DISABLED)
                    .withCertificateId("dxuwsaifm"),
                new CustomDomain().withName("wnosbzlehgcvkbck")
                    .withBindingType(BindingType.AUTO)
                    .withCertificateId("gjyy")))
            .withRules(Arrays.asList(
                new HttpRouteRule()
                    .withTargets(Arrays.asList(
                        new HttpRouteTarget().withContainerApp("szerqzevxoqei")
                            .withRevision("xwaljgl")
                            .withLabel("blqwaafrqulhmzy")
                            .withWeight(2020132379),
                        new HttpRouteTarget().withContainerApp("dvaf")
                            .withRevision("qpjiyrqjcr")
                            .withLabel("xwmzwdfkbnrz")
                            .withWeight(1517917058),
                        new HttpRouteTarget().withContainerApp("dltb")
                            .withRevision("tqjfgxxsaet")
                            .withLabel("dgvpyig")
                            .withWeight(1026610313)))
                    .withRoutes(Arrays.asList(
                        new HttpRoute()
                            .withMatch(new HttpRouteMatch().withPrefix("dcduwjoedxn")
                                .withPath("caifpaurww")
                                .withPathSeparatedPrefix("l")
                                .withCaseSensitive(false))
                            .withAction(new HttpRouteAction().withPrefixRewrite("cdmkxwxdcvjw")),
                        new HttpRoute()
                            .withMatch(new HttpRouteMatch().withPrefix("iakeciqc")
                                .withPath("rtui")
                                .withPathSeparatedPrefix("siw")
                                .withCaseSensitive(false))
                            .withAction(new HttpRouteAction().withPrefixRewrite("zhzzwvywrg")),
                        new HttpRoute()
                            .withMatch(new HttpRouteMatch().withPrefix("ydg")
                                .withPath("x")
                                .withPathSeparatedPrefix("akiqa")
                                .withCaseSensitive(true))
                            .withAction(new HttpRouteAction().withPrefixRewrite("kclamgglvlmf"))))
                    .withDescription("doqey"),
                new HttpRouteRule()
                    .withTargets(Arrays.asList(
                        new HttpRouteTarget().withContainerApp("tygxhqfgq")
                            .withRevision("yejsxtlg")
                            .withLabel("wf")
                            .withWeight(463475114),
                        new HttpRouteTarget().withContainerApp("iucijjcea")
                            .withRevision("ijjj")
                            .withLabel("va")
                            .withWeight(38693465),
                        new HttpRouteTarget().withContainerApp("szknxkvccxe")
                            .withRevision("vkunmign")
                            .withLabel("ikkgqo")
                            .withWeight(865736943),
                        new HttpRouteTarget().withContainerApp("pinde")
                            .withRevision("abbxbhmedeil")
                            .withLabel("ywfcfxzi")
                            .withWeight(391038387)))
                    .withRoutes(Arrays.asList(
                        new HttpRoute()
                            .withMatch(new HttpRouteMatch().withPrefix("ypusuvjslczwci")
                                .withPath("jsllfryvd")
                                .withPathSeparatedPrefix("x")
                                .withCaseSensitive(false))
                            .withAction(new HttpRouteAction().withPrefixRewrite("frgnawbabgfbktyj")),
                        new HttpRoute()
                            .withMatch(new HttpRouteMatch().withPrefix("zlfsyqkfrbzgowo")
                                .withPath("mj")
                                .withPathSeparatedPrefix("jcx")
                                .withCaseSensitive(false))
                            .withAction(new HttpRouteAction().withPrefixRewrite("hlusrvxisi"))))
                    .withDescription("ceagbjqvlsumywz")));
        model = BinaryData.fromObject(model).toObject(HttpRouteConfigProperties.class);
        Assertions.assertEquals("wzvmdoksqd", model.customDomains().get(0).name());
        Assertions.assertEquals(BindingType.SNI_ENABLED, model.customDomains().get(0).bindingType());
        Assertions.assertEquals("wxlboncqbazqicq", model.customDomains().get(0).certificateId());
        Assertions.assertEquals("szerqzevxoqei", model.rules().get(0).targets().get(0).containerApp());
        Assertions.assertEquals("xwaljgl", model.rules().get(0).targets().get(0).revision());
        Assertions.assertEquals("blqwaafrqulhmzy", model.rules().get(0).targets().get(0).label());
        Assertions.assertEquals(2020132379, model.rules().get(0).targets().get(0).weight());
        Assertions.assertEquals("dcduwjoedxn", model.rules().get(0).routes().get(0).match().prefix());
        Assertions.assertEquals("caifpaurww", model.rules().get(0).routes().get(0).match().path());
        Assertions.assertEquals("l", model.rules().get(0).routes().get(0).match().pathSeparatedPrefix());
        Assertions.assertFalse(model.rules().get(0).routes().get(0).match().caseSensitive());
        Assertions.assertEquals("cdmkxwxdcvjw", model.rules().get(0).routes().get(0).action().prefixRewrite());
        Assertions.assertEquals("doqey", model.rules().get(0).description());
    }
}
