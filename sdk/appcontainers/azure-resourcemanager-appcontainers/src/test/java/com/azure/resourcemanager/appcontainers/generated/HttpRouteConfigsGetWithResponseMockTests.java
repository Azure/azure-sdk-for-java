// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcontainers.ContainerAppsApiManager;
import com.azure.resourcemanager.appcontainers.models.BindingType;
import com.azure.resourcemanager.appcontainers.models.HttpRouteConfig;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class HttpRouteConfigsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Failed\",\"provisioningErrors\":[{\"timestamp\":\"2021-06-06T06:23:38Z\",\"message\":\"zskwqk\"},{\"timestamp\":\"2021-02-10T06:48Z\",\"message\":\"eiphgliupqs\"}],\"fqdn\":\"obkjlcaxsqcomjiq\",\"customDomains\":[{\"name\":\"cevxxkdevpximzi\",\"bindingType\":\"SniEnabled\",\"certificateId\":\"qmduvtvodqx\"},{\"name\":\"p\",\"bindingType\":\"Disabled\",\"certificateId\":\"qibtblmc\"},{\"name\":\"rjaznotdofqvpb\",\"bindingType\":\"Disabled\",\"certificateId\":\"kpsbqsbbmitaftaz\"},{\"name\":\"cxsvqlcqufylamxo\",\"bindingType\":\"SniEnabled\",\"certificateId\":\"joyutehlkarvtipq\"}],\"rules\":[{\"targets\":[{\"containerApp\":\"kn\"},{\"containerApp\":\"gofunswhpcekggv\"}],\"routes\":[{},{},{}],\"description\":\"bbxngdfkked\"},{\"targets\":[{\"containerApp\":\"xtpwcvgi\"},{\"containerApp\":\"wsunjzijaciwmmpd\"},{\"containerApp\":\"qdonbzzs\"}],\"routes\":[{},{}],\"description\":\"viiwsuanzhwsyu\"},{\"targets\":[{\"containerApp\":\"zqqhbtfloilmkfb\"},{\"containerApp\":\"oiipjpn\"},{\"containerApp\":\"vyvuoikdlpsx\"},{\"containerApp\":\"tug\"}],\"routes\":[{}],\"description\":\"qn\"},{\"targets\":[{\"containerApp\":\"locfmvsw\"}],\"routes\":[{},{},{}],\"description\":\"leif\"}]},\"id\":\"d\",\"name\":\"twwulkrybpaev\",\"type\":\"kbyje\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        HttpRouteConfig response = manager.httpRouteConfigs()
            .getWithResponse("wkgjwb", "fdwfbwxy", "dqtmggcpdrmeg", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("cevxxkdevpximzi", response.properties().customDomains().get(0).name());
        Assertions.assertEquals(BindingType.SNI_ENABLED, response.properties().customDomains().get(0).bindingType());
        Assertions.assertEquals("qmduvtvodqx", response.properties().customDomains().get(0).certificateId());
        Assertions.assertEquals("kn", response.properties().rules().get(0).targets().get(0).containerApp());
        Assertions.assertEquals("bbxngdfkked", response.properties().rules().get(0).description());
    }
}
