// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.OperationDetailInner;
import com.azure.resourcemanager.appcontainers.models.OperationDisplay;
import org.junit.jupiter.api.Assertions;

public final class OperationDetailInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationDetailInner model = BinaryData.fromString(
            "{\"name\":\"xff\",\"isDataAction\":true,\"display\":{\"provider\":\"fbkgozxwopdby\",\"resource\":\"izqaclnapxbiyg\",\"operation\":\"gjkn\",\"description\":\"mfcttux\"},\"origin\":\"yilflqoiquvrehmr\"}")
            .toObject(OperationDetailInner.class);
        Assertions.assertEquals("xff", model.name());
        Assertions.assertEquals(true, model.isDataAction());
        Assertions.assertEquals("fbkgozxwopdby", model.display().provider());
        Assertions.assertEquals("izqaclnapxbiyg", model.display().resource());
        Assertions.assertEquals("gjkn", model.display().operation());
        Assertions.assertEquals("mfcttux", model.display().description());
        Assertions.assertEquals("yilflqoiquvrehmr", model.origin());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationDetailInner model = new OperationDetailInner()
            .withName("xff").withIsDataAction(true).withDisplay(new OperationDisplay().withProvider("fbkgozxwopdby")
                .withResource("izqaclnapxbiyg").withOperation("gjkn").withDescription("mfcttux"))
            .withOrigin("yilflqoiquvrehmr");
        model = BinaryData.fromObject(model).toObject(OperationDetailInner.class);
        Assertions.assertEquals("xff", model.name());
        Assertions.assertEquals(true, model.isDataAction());
        Assertions.assertEquals("fbkgozxwopdby", model.display().provider());
        Assertions.assertEquals("izqaclnapxbiyg", model.display().resource());
        Assertions.assertEquals("gjkn", model.display().operation());
        Assertions.assertEquals("mfcttux", model.display().description());
        Assertions.assertEquals("yilflqoiquvrehmr", model.origin());
    }
}
