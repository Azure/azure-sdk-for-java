// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.OperationDetailInner;
import com.azure.resourcemanager.appcontainers.models.OperationDisplay;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class OperationDetailInnerTests {
    @Test
    public void testDeserialize() {
        OperationDetailInner model =
            BinaryData
                .fromString(
                    "{\"name\":\"qyuvvfonkp\",\"isDataAction\":false,\"display\":{\"provider\":\"kvylauyavl\",\"resource\":\"mncsttijfybvp\",\"operation\":\"krsgsgb\",\"description\":\"uzqgnjdgkynsc\"},\"origin\":\"qhzvhxnkomt\"}")
                .toObject(OperationDetailInner.class);
        Assertions.assertEquals("qyuvvfonkp", model.name());
        Assertions.assertEquals(false, model.isDataAction());
        Assertions.assertEquals("kvylauyavl", model.display().provider());
        Assertions.assertEquals("mncsttijfybvp", model.display().resource());
        Assertions.assertEquals("krsgsgb", model.display().operation());
        Assertions.assertEquals("uzqgnjdgkynsc", model.display().description());
        Assertions.assertEquals("qhzvhxnkomt", model.origin());
    }

    @Test
    public void testSerialize() {
        OperationDetailInner model =
            new OperationDetailInner()
                .withName("qyuvvfonkp")
                .withIsDataAction(false)
                .withDisplay(
                    new OperationDisplay()
                        .withProvider("kvylauyavl")
                        .withResource("mncsttijfybvp")
                        .withOperation("krsgsgb")
                        .withDescription("uzqgnjdgkynsc"))
                .withOrigin("qhzvhxnkomt");
        model = BinaryData.fromObject(model).toObject(OperationDetailInner.class);
        Assertions.assertEquals("qyuvvfonkp", model.name());
        Assertions.assertEquals(false, model.isDataAction());
        Assertions.assertEquals("kvylauyavl", model.display().provider());
        Assertions.assertEquals("mncsttijfybvp", model.display().resource());
        Assertions.assertEquals("krsgsgb", model.display().operation());
        Assertions.assertEquals("uzqgnjdgkynsc", model.display().description());
        Assertions.assertEquals("qhzvhxnkomt", model.origin());
    }
}
