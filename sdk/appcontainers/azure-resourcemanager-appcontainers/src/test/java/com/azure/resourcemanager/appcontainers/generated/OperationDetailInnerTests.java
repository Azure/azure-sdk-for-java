// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.OperationDetailInner;
import com.azure.resourcemanager.appcontainers.models.OperationDisplay;
import org.junit.jupiter.api.Assertions;

public final class OperationDetailInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationDetailInner model = BinaryData.fromString(
            "{\"name\":\"wslmiiiovgqcg\",\"isDataAction\":true,\"display\":{\"provider\":\"kctotiowlxteq\",\"resource\":\"tjgwdtguk\",\"operation\":\"nblwphqlkcc\",\"description\":\"gygqwah\"},\"origin\":\"ulwgniiprglvawuw\"}")
            .toObject(OperationDetailInner.class);
        Assertions.assertEquals("wslmiiiovgqcg", model.name());
        Assertions.assertEquals(true, model.isDataAction());
        Assertions.assertEquals("kctotiowlxteq", model.display().provider());
        Assertions.assertEquals("tjgwdtguk", model.display().resource());
        Assertions.assertEquals("nblwphqlkcc", model.display().operation());
        Assertions.assertEquals("gygqwah", model.display().description());
        Assertions.assertEquals("ulwgniiprglvawuw", model.origin());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationDetailInner model = new OperationDetailInner().withName("wslmiiiovgqcg")
            .withIsDataAction(true)
            .withDisplay(new OperationDisplay().withProvider("kctotiowlxteq")
                .withResource("tjgwdtguk")
                .withOperation("nblwphqlkcc")
                .withDescription("gygqwah"))
            .withOrigin("ulwgniiprglvawuw");
        model = BinaryData.fromObject(model).toObject(OperationDetailInner.class);
        Assertions.assertEquals("wslmiiiovgqcg", model.name());
        Assertions.assertEquals(true, model.isDataAction());
        Assertions.assertEquals("kctotiowlxteq", model.display().provider());
        Assertions.assertEquals("tjgwdtguk", model.display().resource());
        Assertions.assertEquals("nblwphqlkcc", model.display().operation());
        Assertions.assertEquals("gygqwah", model.display().description());
        Assertions.assertEquals("ulwgniiprglvawuw", model.origin());
    }
}
