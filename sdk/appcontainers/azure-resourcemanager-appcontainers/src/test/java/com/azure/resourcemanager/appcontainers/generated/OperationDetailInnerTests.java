// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.OperationDetailInner;
import com.azure.resourcemanager.appcontainers.models.OperationDisplay;
import org.junit.jupiter.api.Assertions;

public final class OperationDetailInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationDetailInner model = BinaryData.fromString(
            "{\"name\":\"lpvmjcdoewbidy\",\"isDataAction\":false,\"display\":{\"provider\":\"xvgpiude\",\"resource\":\"fsxzecp\",\"operation\":\"wkufykhvuhxepm\",\"description\":\"tznabao\"},\"origin\":\"slujdjltym\"}")
            .toObject(OperationDetailInner.class);
        Assertions.assertEquals("lpvmjcdoewbidy", model.name());
        Assertions.assertFalse(model.isDataAction());
        Assertions.assertEquals("xvgpiude", model.display().provider());
        Assertions.assertEquals("fsxzecp", model.display().resource());
        Assertions.assertEquals("wkufykhvuhxepm", model.display().operation());
        Assertions.assertEquals("tznabao", model.display().description());
        Assertions.assertEquals("slujdjltym", model.origin());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationDetailInner model = new OperationDetailInner().withName("lpvmjcdoewbidy")
            .withIsDataAction(false)
            .withDisplay(new OperationDisplay().withProvider("xvgpiude")
                .withResource("fsxzecp")
                .withOperation("wkufykhvuhxepm")
                .withDescription("tznabao"))
            .withOrigin("slujdjltym");
        model = BinaryData.fromObject(model).toObject(OperationDetailInner.class);
        Assertions.assertEquals("lpvmjcdoewbidy", model.name());
        Assertions.assertFalse(model.isDataAction());
        Assertions.assertEquals("xvgpiude", model.display().provider());
        Assertions.assertEquals("fsxzecp", model.display().resource());
        Assertions.assertEquals("wkufykhvuhxepm", model.display().operation());
        Assertions.assertEquals("tznabao", model.display().description());
        Assertions.assertEquals("slujdjltym", model.origin());
    }
}
