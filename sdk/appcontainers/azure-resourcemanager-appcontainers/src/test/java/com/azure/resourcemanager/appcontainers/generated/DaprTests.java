// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.AppProtocol;
import com.azure.resourcemanager.appcontainers.models.Dapr;
import com.azure.resourcemanager.appcontainers.models.LogLevel;
import org.junit.jupiter.api.Assertions;

public final class DaprTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Dapr model = BinaryData.fromString(
            "{\"enabled\":false,\"appId\":\"bnxknalaulppg\",\"appProtocol\":\"grpc\",\"appPort\":1767174247,\"httpReadBufferSize\":523387413,\"httpMaxRequestSize\":1500766151,\"logLevel\":\"warn\",\"enableApiLogging\":false}")
            .toObject(Dapr.class);
        Assertions.assertEquals(false, model.enabled());
        Assertions.assertEquals("bnxknalaulppg", model.appId());
        Assertions.assertEquals(AppProtocol.GRPC, model.appProtocol());
        Assertions.assertEquals(1767174247, model.appPort());
        Assertions.assertEquals(523387413, model.httpReadBufferSize());
        Assertions.assertEquals(1500766151, model.httpMaxRequestSize());
        Assertions.assertEquals(LogLevel.WARN, model.logLevel());
        Assertions.assertEquals(false, model.enableApiLogging());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Dapr model = new Dapr().withEnabled(false)
            .withAppId("bnxknalaulppg")
            .withAppProtocol(AppProtocol.GRPC)
            .withAppPort(1767174247)
            .withHttpReadBufferSize(523387413)
            .withHttpMaxRequestSize(1500766151)
            .withLogLevel(LogLevel.WARN)
            .withEnableApiLogging(false);
        model = BinaryData.fromObject(model).toObject(Dapr.class);
        Assertions.assertEquals(false, model.enabled());
        Assertions.assertEquals("bnxknalaulppg", model.appId());
        Assertions.assertEquals(AppProtocol.GRPC, model.appProtocol());
        Assertions.assertEquals(1767174247, model.appPort());
        Assertions.assertEquals(523387413, model.httpReadBufferSize());
        Assertions.assertEquals(1500766151, model.httpMaxRequestSize());
        Assertions.assertEquals(LogLevel.WARN, model.logLevel());
        Assertions.assertEquals(false, model.enableApiLogging());
    }
}
