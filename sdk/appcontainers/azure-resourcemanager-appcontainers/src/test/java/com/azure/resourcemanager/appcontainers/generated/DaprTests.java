// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.AppProtocol;
import com.azure.resourcemanager.appcontainers.models.Dapr;
import com.azure.resourcemanager.appcontainers.models.LogLevel;
import org.junit.jupiter.api.Assertions;

public final class DaprTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Dapr model = BinaryData.fromString(
            "{\"enabled\":false,\"appId\":\"pc\",\"appProtocol\":\"http\",\"appPort\":2091376747,\"httpReadBufferSize\":2104767633,\"httpMaxRequestSize\":561719480,\"logLevel\":\"error\",\"enableApiLogging\":false}")
            .toObject(Dapr.class);
        Assertions.assertEquals(false, model.enabled());
        Assertions.assertEquals("pc", model.appId());
        Assertions.assertEquals(AppProtocol.HTTP, model.appProtocol());
        Assertions.assertEquals(2091376747, model.appPort());
        Assertions.assertEquals(2104767633, model.httpReadBufferSize());
        Assertions.assertEquals(561719480, model.httpMaxRequestSize());
        Assertions.assertEquals(LogLevel.ERROR, model.logLevel());
        Assertions.assertEquals(false, model.enableApiLogging());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Dapr model = new Dapr().withEnabled(false)
            .withAppId("pc")
            .withAppProtocol(AppProtocol.HTTP)
            .withAppPort(2091376747)
            .withHttpReadBufferSize(2104767633)
            .withHttpMaxRequestSize(561719480)
            .withLogLevel(LogLevel.ERROR)
            .withEnableApiLogging(false);
        model = BinaryData.fromObject(model).toObject(Dapr.class);
        Assertions.assertEquals(false, model.enabled());
        Assertions.assertEquals("pc", model.appId());
        Assertions.assertEquals(AppProtocol.HTTP, model.appProtocol());
        Assertions.assertEquals(2091376747, model.appPort());
        Assertions.assertEquals(2104767633, model.httpReadBufferSize());
        Assertions.assertEquals(561719480, model.httpMaxRequestSize());
        Assertions.assertEquals(LogLevel.ERROR, model.logLevel());
        Assertions.assertEquals(false, model.enableApiLogging());
    }
}
