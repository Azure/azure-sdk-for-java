// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.AppProtocol;
import com.azure.resourcemanager.appcontainers.models.Dapr;
import com.azure.resourcemanager.appcontainers.models.LogLevel;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DaprTests {
    @Test
    public void testDeserialize() {
        Dapr model =
            BinaryData
                .fromString(
                    "{\"enabled\":true,\"appId\":\"prwmdyvxqt\",\"appProtocol\":\"http\",\"appPort\":357638492,\"httpReadBufferSize\":438099264,\"httpMaxRequestSize\":1692678524,\"logLevel\":\"debug\",\"enableApiLogging\":true}")
                .toObject(Dapr.class);
        Assertions.assertEquals(true, model.enabled());
        Assertions.assertEquals("prwmdyvxqt", model.appId());
        Assertions.assertEquals(AppProtocol.HTTP, model.appProtocol());
        Assertions.assertEquals(357638492, model.appPort());
        Assertions.assertEquals(438099264, model.httpReadBufferSize());
        Assertions.assertEquals(1692678524, model.httpMaxRequestSize());
        Assertions.assertEquals(LogLevel.DEBUG, model.logLevel());
        Assertions.assertEquals(true, model.enableApiLogging());
    }

    @Test
    public void testSerialize() {
        Dapr model =
            new Dapr()
                .withEnabled(true)
                .withAppId("prwmdyvxqt")
                .withAppProtocol(AppProtocol.HTTP)
                .withAppPort(357638492)
                .withHttpReadBufferSize(438099264)
                .withHttpMaxRequestSize(1692678524)
                .withLogLevel(LogLevel.DEBUG)
                .withEnableApiLogging(true);
        model = BinaryData.fromObject(model).toObject(Dapr.class);
        Assertions.assertEquals(true, model.enabled());
        Assertions.assertEquals("prwmdyvxqt", model.appId());
        Assertions.assertEquals(AppProtocol.HTTP, model.appProtocol());
        Assertions.assertEquals(357638492, model.appPort());
        Assertions.assertEquals(438099264, model.httpReadBufferSize());
        Assertions.assertEquals(1692678524, model.httpMaxRequestSize());
        Assertions.assertEquals(LogLevel.DEBUG, model.logLevel());
        Assertions.assertEquals(true, model.enableApiLogging());
    }
}
