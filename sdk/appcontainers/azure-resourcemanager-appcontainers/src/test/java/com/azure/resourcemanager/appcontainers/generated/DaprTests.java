// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.AppProtocol;
import com.azure.resourcemanager.appcontainers.models.Dapr;
import com.azure.resourcemanager.appcontainers.models.LogLevel;
import org.junit.jupiter.api.Assertions;

public final class DaprTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Dapr model =
            BinaryData
                .fromString(
                    "{\"enabled\":false,\"appId\":\"rfbjf\",\"appProtocol\":\"http\",\"appPort\":2146010865,\"httpReadBufferSize\":22179172,\"httpMaxRequestSize\":2101794539,\"logLevel\":\"info\",\"enableApiLogging\":true}")
                .toObject(Dapr.class);
        Assertions.assertEquals(false, model.enabled());
        Assertions.assertEquals("rfbjf", model.appId());
        Assertions.assertEquals(AppProtocol.HTTP, model.appProtocol());
        Assertions.assertEquals(2146010865, model.appPort());
        Assertions.assertEquals(22179172, model.httpReadBufferSize());
        Assertions.assertEquals(2101794539, model.httpMaxRequestSize());
        Assertions.assertEquals(LogLevel.INFO, model.logLevel());
        Assertions.assertEquals(true, model.enableApiLogging());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Dapr model =
            new Dapr()
                .withEnabled(false)
                .withAppId("rfbjf")
                .withAppProtocol(AppProtocol.HTTP)
                .withAppPort(2146010865)
                .withHttpReadBufferSize(22179172)
                .withHttpMaxRequestSize(2101794539)
                .withLogLevel(LogLevel.INFO)
                .withEnableApiLogging(true);
        model = BinaryData.fromObject(model).toObject(Dapr.class);
        Assertions.assertEquals(false, model.enabled());
        Assertions.assertEquals("rfbjf", model.appId());
        Assertions.assertEquals(AppProtocol.HTTP, model.appProtocol());
        Assertions.assertEquals(2146010865, model.appPort());
        Assertions.assertEquals(22179172, model.httpReadBufferSize());
        Assertions.assertEquals(2101794539, model.httpMaxRequestSize());
        Assertions.assertEquals(LogLevel.INFO, model.logLevel());
        Assertions.assertEquals(true, model.enableApiLogging());
    }
}
