// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.DiagnosticDataTableResponseColumn;
import com.azure.resourcemanager.appcontainers.models.DiagnosticDataTableResponseObject;
import com.azure.resourcemanager.appcontainers.models.DiagnosticRendering;
import com.azure.resourcemanager.appcontainers.models.DiagnosticsDataApiResponse;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DiagnosticsDataApiResponseTests {
    @Test
    public void testDeserialize() {
        DiagnosticsDataApiResponse model =
            BinaryData
                .fromString(
                    "{\"table\":{\"tableName\":\"euzaof\",\"columns\":[{\"columnName\":\"cyyysfgdot\",\"dataType\":\"biipuip\",\"columnType\":\"qonmacj\"},{\"columnName\":\"nizshqvcim\",\"dataType\":\"vfgmblrrilby\",\"columnType\":\"xsmiccwrwfscjf\"},{\"columnName\":\"nszqujiz\",\"dataType\":\"oqytibyowbblgy\",\"columnType\":\"utp\"}],\"rows\":[]},\"renderingProperties\":{\"type\":1814921702,\"title\":\"smsks\",\"description\":\"iml\",\"isVisible\":true}}")
                .toObject(DiagnosticsDataApiResponse.class);
        Assertions.assertEquals("euzaof", model.table().tableName());
        Assertions.assertEquals("cyyysfgdot", model.table().columns().get(0).columnName());
        Assertions.assertEquals("biipuip", model.table().columns().get(0).dataType());
        Assertions.assertEquals("qonmacj", model.table().columns().get(0).columnType());
        Assertions.assertEquals(1814921702, model.renderingProperties().type());
        Assertions.assertEquals("smsks", model.renderingProperties().title());
        Assertions.assertEquals("iml", model.renderingProperties().description());
        Assertions.assertEquals(true, model.renderingProperties().isVisible());
    }

    @Test
    public void testSerialize() {
        DiagnosticsDataApiResponse model =
            new DiagnosticsDataApiResponse()
                .withTable(
                    new DiagnosticDataTableResponseObject()
                        .withTableName("euzaof")
                        .withColumns(
                            Arrays
                                .asList(
                                    new DiagnosticDataTableResponseColumn()
                                        .withColumnName("cyyysfgdot")
                                        .withDataType("biipuip")
                                        .withColumnType("qonmacj"),
                                    new DiagnosticDataTableResponseColumn()
                                        .withColumnName("nizshqvcim")
                                        .withDataType("vfgmblrrilby")
                                        .withColumnType("xsmiccwrwfscjf"),
                                    new DiagnosticDataTableResponseColumn()
                                        .withColumnName("nszqujiz")
                                        .withDataType("oqytibyowbblgy")
                                        .withColumnType("utp")))
                        .withRows(Arrays.asList()))
                .withRenderingProperties(
                    new DiagnosticRendering()
                        .withType(1814921702)
                        .withTitle("smsks")
                        .withDescription("iml")
                        .withIsVisible(true));
        model = BinaryData.fromObject(model).toObject(DiagnosticsDataApiResponse.class);
        Assertions.assertEquals("euzaof", model.table().tableName());
        Assertions.assertEquals("cyyysfgdot", model.table().columns().get(0).columnName());
        Assertions.assertEquals("biipuip", model.table().columns().get(0).dataType());
        Assertions.assertEquals("qonmacj", model.table().columns().get(0).columnType());
        Assertions.assertEquals(1814921702, model.renderingProperties().type());
        Assertions.assertEquals("smsks", model.renderingProperties().title());
        Assertions.assertEquals("iml", model.renderingProperties().description());
        Assertions.assertEquals(true, model.renderingProperties().isVisible());
    }
}
