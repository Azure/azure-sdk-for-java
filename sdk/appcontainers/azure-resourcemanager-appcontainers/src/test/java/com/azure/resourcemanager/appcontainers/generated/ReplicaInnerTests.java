// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.ReplicaInner;
import com.azure.resourcemanager.appcontainers.models.ReplicaContainer;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ReplicaInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ReplicaInner model = BinaryData.fromString(
            "{\"properties\":{\"createdTime\":\"2021-04-24T08:22:39Z\",\"runningState\":\"Unknown\",\"runningStateDetails\":\"chrqb\",\"containers\":[{\"name\":\"cgegydcwbo\",\"containerId\":\"umvq\",\"ready\":true,\"started\":true,\"restartCount\":960198730,\"runningState\":\"Waiting\",\"runningStateDetails\":\"uaubrj\",\"logStreamEndpoint\":\"oq\",\"execEndpoint\":\"uojrngiflr\",\"debugEndpoint\":\"asccbiui\"}],\"initContainers\":[{\"name\":\"yjdfqwmky\",\"containerId\":\"ufdvruz\",\"ready\":true,\"started\":false,\"restartCount\":942842279,\"runningState\":\"Terminated\",\"runningStateDetails\":\"nmdxotngfd\",\"logStreamEndpoint\":\"geyzihgrkyuiz\",\"execEndpoint\":\"snmfpphojeevy\",\"debugEndpoint\":\"hsgz\"},{\"name\":\"zbgomfgbeg\",\"containerId\":\"gleohi\",\"ready\":true,\"started\":false,\"restartCount\":198526916,\"runningState\":\"Terminated\",\"runningStateDetails\":\"rfxeeebtij\",\"logStreamEndpoint\":\"cvbmqzb\",\"execEndpoint\":\"xl\",\"debugEndpoint\":\"rnwxacevehjkuyxo\"}]},\"id\":\"gaoql\",\"name\":\"faey\",\"type\":\"inmfgvxirp\"}")
            .toObject(ReplicaInner.class);
        Assertions.assertEquals("cgegydcwbo", model.containers().get(0).name());
        Assertions.assertEquals("umvq", model.containers().get(0).containerId());
        Assertions.assertTrue(model.containers().get(0).ready());
        Assertions.assertTrue(model.containers().get(0).started());
        Assertions.assertEquals(960198730, model.containers().get(0).restartCount());
        Assertions.assertEquals("yjdfqwmky", model.initContainers().get(0).name());
        Assertions.assertEquals("ufdvruz", model.initContainers().get(0).containerId());
        Assertions.assertTrue(model.initContainers().get(0).ready());
        Assertions.assertFalse(model.initContainers().get(0).started());
        Assertions.assertEquals(942842279, model.initContainers().get(0).restartCount());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ReplicaInner model = new ReplicaInner()
            .withContainers(Arrays.asList(new ReplicaContainer().withName("cgegydcwbo")
                .withContainerId("umvq")
                .withReady(true)
                .withStarted(true)
                .withRestartCount(960198730)))
            .withInitContainers(Arrays.asList(
                new ReplicaContainer().withName("yjdfqwmky")
                    .withContainerId("ufdvruz")
                    .withReady(true)
                    .withStarted(false)
                    .withRestartCount(942842279),
                new ReplicaContainer().withName("zbgomfgbeg")
                    .withContainerId("gleohi")
                    .withReady(true)
                    .withStarted(false)
                    .withRestartCount(198526916)));
        model = BinaryData.fromObject(model).toObject(ReplicaInner.class);
        Assertions.assertEquals("cgegydcwbo", model.containers().get(0).name());
        Assertions.assertEquals("umvq", model.containers().get(0).containerId());
        Assertions.assertTrue(model.containers().get(0).ready());
        Assertions.assertTrue(model.containers().get(0).started());
        Assertions.assertEquals(960198730, model.containers().get(0).restartCount());
        Assertions.assertEquals("yjdfqwmky", model.initContainers().get(0).name());
        Assertions.assertEquals("ufdvruz", model.initContainers().get(0).containerId());
        Assertions.assertTrue(model.initContainers().get(0).ready());
        Assertions.assertFalse(model.initContainers().get(0).started());
        Assertions.assertEquals(942842279, model.initContainers().get(0).restartCount());
    }
}
