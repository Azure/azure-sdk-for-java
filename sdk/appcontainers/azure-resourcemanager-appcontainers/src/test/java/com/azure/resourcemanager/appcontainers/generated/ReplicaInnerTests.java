// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.ReplicaInner;
import com.azure.resourcemanager.appcontainers.models.ReplicaContainer;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ReplicaInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ReplicaInner model = BinaryData.fromString(
            "{\"properties\":{\"createdTime\":\"2021-12-09T17:34:33Z\",\"runningState\":\"Running\",\"runningStateDetails\":\"sbvdkcrodtjinfw\",\"containers\":[{\"name\":\"tkacj\",\"containerId\":\"f\",\"ready\":false,\"started\":true,\"restartCount\":1731932488,\"runningState\":\"Terminated\",\"runningStateDetails\":\"fpagaowpulp\",\"logStreamEndpoint\":\"lyls\",\"execEndpoint\":\"k\"},{\"name\":\"nsj\",\"containerId\":\"vti\",\"ready\":true,\"started\":false,\"restartCount\":300652105,\"runningState\":\"Waiting\",\"runningStateDetails\":\"psbzkfzbeyvpn\",\"logStreamEndpoint\":\"cvinvkjjxdxrbuuk\",\"execEndpoint\":\"lewyhmlwpaz\"}],\"initContainers\":[{\"name\":\"fn\",\"containerId\":\"kwyfzqwhxxbuyqax\",\"ready\":false,\"started\":true,\"restartCount\":1560492687,\"runningState\":\"Waiting\",\"runningStateDetails\":\"o\",\"logStreamEndpoint\":\"or\",\"execEndpoint\":\"lt\"},{\"name\":\"mncwsobqwcsdb\",\"containerId\":\"dcfhucqdpf\",\"ready\":false,\"started\":false,\"restartCount\":665760554,\"runningState\":\"Running\",\"runningStateDetails\":\"nvxbvt\",\"logStreamEndpoint\":\"dut\",\"execEndpoint\":\"ormrlxqtvcofudfl\"}]},\"id\":\"gj\",\"name\":\"bgdknnqv\",\"type\":\"aznqntoru\"}")
            .toObject(ReplicaInner.class);
        Assertions.assertEquals("tkacj", model.containers().get(0).name());
        Assertions.assertEquals("f", model.containers().get(0).containerId());
        Assertions.assertEquals(false, model.containers().get(0).ready());
        Assertions.assertEquals(true, model.containers().get(0).started());
        Assertions.assertEquals(1731932488, model.containers().get(0).restartCount());
        Assertions.assertEquals("fn", model.initContainers().get(0).name());
        Assertions.assertEquals("kwyfzqwhxxbuyqax", model.initContainers().get(0).containerId());
        Assertions.assertEquals(false, model.initContainers().get(0).ready());
        Assertions.assertEquals(true, model.initContainers().get(0).started());
        Assertions.assertEquals(1560492687, model.initContainers().get(0).restartCount());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ReplicaInner model = new ReplicaInner()
            .withContainers(Arrays.asList(
                new ReplicaContainer().withName("tkacj")
                    .withContainerId("f")
                    .withReady(false)
                    .withStarted(true)
                    .withRestartCount(1731932488),
                new ReplicaContainer().withName("nsj")
                    .withContainerId("vti")
                    .withReady(true)
                    .withStarted(false)
                    .withRestartCount(300652105)))
            .withInitContainers(Arrays.asList(
                new ReplicaContainer().withName("fn")
                    .withContainerId("kwyfzqwhxxbuyqax")
                    .withReady(false)
                    .withStarted(true)
                    .withRestartCount(1560492687),
                new ReplicaContainer().withName("mncwsobqwcsdb")
                    .withContainerId("dcfhucqdpf")
                    .withReady(false)
                    .withStarted(false)
                    .withRestartCount(665760554)));
        model = BinaryData.fromObject(model).toObject(ReplicaInner.class);
        Assertions.assertEquals("tkacj", model.containers().get(0).name());
        Assertions.assertEquals("f", model.containers().get(0).containerId());
        Assertions.assertEquals(false, model.containers().get(0).ready());
        Assertions.assertEquals(true, model.containers().get(0).started());
        Assertions.assertEquals(1731932488, model.containers().get(0).restartCount());
        Assertions.assertEquals("fn", model.initContainers().get(0).name());
        Assertions.assertEquals("kwyfzqwhxxbuyqax", model.initContainers().get(0).containerId());
        Assertions.assertEquals(false, model.initContainers().get(0).ready());
        Assertions.assertEquals(true, model.initContainers().get(0).started());
        Assertions.assertEquals(1560492687, model.initContainers().get(0).restartCount());
    }
}
