// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.ReplicaInner;
import com.azure.resourcemanager.appcontainers.models.ReplicaContainer;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ReplicaInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ReplicaInner model = BinaryData.fromString(
            "{\"properties\":{\"createdTime\":\"2021-02-18T17:11:23Z\",\"runningState\":\"Running\",\"runningStateDetails\":\"pvz\",\"containers\":[{\"name\":\"mldgxobfirc\",\"containerId\":\"pkc\",\"ready\":false,\"started\":true,\"restartCount\":2022094145,\"runningState\":\"Running\",\"runningStateDetails\":\"awfvjlboxqvkjl\",\"logStreamEndpoint\":\"ho\",\"execEndpoint\":\"ynhdwdigum\"},{\"name\":\"raauzzpt\",\"containerId\":\"zysdzh\",\"ready\":true,\"started\":true,\"restartCount\":1899705757,\"runningState\":\"Running\",\"runningStateDetails\":\"vv\",\"logStreamEndpoint\":\"nk\",\"execEndpoint\":\"hqyikvy\"}],\"initContainers\":[{\"name\":\"avluwmncs\",\"containerId\":\"ijf\",\"ready\":false,\"started\":false,\"restartCount\":1661659645,\"runningState\":\"Waiting\",\"runningStateDetails\":\"sgbdhuz\",\"logStreamEndpoint\":\"njdgkynscliq\",\"execEndpoint\":\"vhxnk\"}]},\"id\":\"tkubotppn\",\"name\":\"dxzxhi\",\"type\":\"frbbc\"}")
            .toObject(ReplicaInner.class);
        Assertions.assertEquals("mldgxobfirc", model.containers().get(0).name());
        Assertions.assertEquals("pkc", model.containers().get(0).containerId());
        Assertions.assertEquals(false, model.containers().get(0).ready());
        Assertions.assertEquals(true, model.containers().get(0).started());
        Assertions.assertEquals(2022094145, model.containers().get(0).restartCount());
        Assertions.assertEquals("avluwmncs", model.initContainers().get(0).name());
        Assertions.assertEquals("ijf", model.initContainers().get(0).containerId());
        Assertions.assertEquals(false, model.initContainers().get(0).ready());
        Assertions.assertEquals(false, model.initContainers().get(0).started());
        Assertions.assertEquals(1661659645, model.initContainers().get(0).restartCount());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ReplicaInner model = new ReplicaInner()
            .withContainers(Arrays.asList(
                new ReplicaContainer().withName("mldgxobfirc")
                    .withContainerId("pkc")
                    .withReady(false)
                    .withStarted(true)
                    .withRestartCount(2022094145),
                new ReplicaContainer().withName("raauzzpt")
                    .withContainerId("zysdzh")
                    .withReady(true)
                    .withStarted(true)
                    .withRestartCount(1899705757)))
            .withInitContainers(Arrays.asList(new ReplicaContainer().withName("avluwmncs")
                .withContainerId("ijf")
                .withReady(false)
                .withStarted(false)
                .withRestartCount(1661659645)));
        model = BinaryData.fromObject(model).toObject(ReplicaInner.class);
        Assertions.assertEquals("mldgxobfirc", model.containers().get(0).name());
        Assertions.assertEquals("pkc", model.containers().get(0).containerId());
        Assertions.assertEquals(false, model.containers().get(0).ready());
        Assertions.assertEquals(true, model.containers().get(0).started());
        Assertions.assertEquals(2022094145, model.containers().get(0).restartCount());
        Assertions.assertEquals("avluwmncs", model.initContainers().get(0).name());
        Assertions.assertEquals("ijf", model.initContainers().get(0).containerId());
        Assertions.assertEquals(false, model.initContainers().get(0).ready());
        Assertions.assertEquals(false, model.initContainers().get(0).started());
        Assertions.assertEquals(1661659645, model.initContainers().get(0).restartCount());
    }
}
