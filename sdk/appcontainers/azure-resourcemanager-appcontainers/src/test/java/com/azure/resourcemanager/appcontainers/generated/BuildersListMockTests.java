// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcontainers.ContainerAppsApiManager;
import com.azure.resourcemanager.appcontainers.models.BuilderResource;
import com.azure.resourcemanager.appcontainers.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class BuildersListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Failed\",\"environmentId\":\"xxqn\",\"containerRegistries\":[{\"containerRegistryServer\":\"jkedwqurcgojmrv\",\"identityResourceId\":\"xwjongzse\"},{\"containerRegistryServer\":\"qqrsil\",\"identityResourceId\":\"chskxxka\"},{\"containerRegistryServer\":\"sbvr\",\"identityResourceId\":\"aqgvto\"}]},\"identity\":{\"principalId\":\"06d9da28-5b58-48f7-8355-fe23d7b1ead4\",\"tenantId\":\"a6b29d98-38ec-4723-b288-036f49c5e7f7\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"jrthcfjzhx\":{\"principalId\":\"040ba7b0-4f0b-45df-bc53-4d0ad84970fc\",\"clientId\":\"4cff4f48-4b1f-4f4f-86b3-57ec56353b1d\"},\"bqjr\":{\"principalId\":\"cfef1be6-d7ae-4ba2-b528-2434788463de\",\"clientId\":\"1d8e28ef-cd88-4bb7-a8d7-5f53c7387fc9\"},\"vrjeqmtzzbeqrztr\":{\"principalId\":\"74844d3c-94c2-4b60-b184-5e506b937919\",\"clientId\":\"c80fdca0-272f-4a64-9ab8-02ea0f9ecd8a\"},\"xrd\":{\"principalId\":\"5520ec73-cb34-4222-95ba-738d45cba661\",\"clientId\":\"649e2bb9-0f33-419f-b3f9-c9a02b08dd9f\"}}},\"location\":\"bsrwrsnrhpqat\",\"tags\":{\"ems\":\"kvyanxkvvc\",\"livrjjxnwx\":\"uvdjkqxetqm\"},\"id\":\"chp\",\"name\":\"jxlehzlx\",\"type\":\"gfquwz\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<BuilderResource> response = manager.builders().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("bsrwrsnrhpqat", response.iterator().next().location());
        Assertions.assertEquals("kvyanxkvvc", response.iterator().next().tags().get("ems"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, response.iterator().next().identity().type());
        Assertions.assertEquals("xxqn", response.iterator().next().environmentId());
        Assertions.assertEquals("jkedwqurcgojmrv",
            response.iterator().next().containerRegistries().get(0).containerRegistryServer());
        Assertions.assertEquals("xwjongzse",
            response.iterator().next().containerRegistries().get(0).identityResourceId());
    }
}
