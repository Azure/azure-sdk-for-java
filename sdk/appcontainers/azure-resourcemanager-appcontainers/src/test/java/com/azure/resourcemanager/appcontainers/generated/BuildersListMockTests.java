// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcontainers.ContainerAppsApiManager;
import com.azure.resourcemanager.appcontainers.models.BuilderResource;
import com.azure.resourcemanager.appcontainers.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class BuildersListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Failed\",\"environmentId\":\"sshajqfukpee\",\"containerRegistries\":[{\"containerRegistryServer\":\"eumilhw\",\"identityResourceId\":\"itrdexy\"},{\"containerRegistryServer\":\"onofninbdbzsxcw\",\"identityResourceId\":\"qrs\"}]},\"identity\":{\"principalId\":\"244fdd97-10d1-40e0-a8db-f7dea1b0d6ff\",\"tenantId\":\"af2e92cf-b098-46fd-aec5-0dba33728908\",\"type\":\"None\",\"userAssignedIdentities\":{\"gavbzbcyk\":{\"principalId\":\"b96bd741-6b0c-4346-97fd-79023a9758bf\",\"clientId\":\"80446455-f725-418c-a9b3-6858206a6a07\"},\"mf\":{\"principalId\":\"473d9add-ad83-43a7-97fb-282d9fdebaa2\",\"clientId\":\"fb009f27-f7d5-404e-aa66-f885c69897d0\"},\"rt\":{\"principalId\":\"ec374841-f68e-4147-af8b-08b13315eca6\",\"clientId\":\"f8a58d2e-8dac-453d-b84a-de3971a3a55b\"},\"mkrftsjcwjjxsgm\":{\"principalId\":\"5fb3cc1e-665d-4881-8cc1-c0b673f01a40\",\"clientId\":\"2de5db66-d1fd-46bf-93c9-47815a74f1bb\"}}},\"location\":\"wvif\",\"tags\":{\"hocjxwkloozrv\":\"eci\",\"xvi\":\"xvcmufunlcp\",\"g\":\"yeyng\",\"ygg\":\"rquv\"},\"id\":\"pmcrdcuelj\",\"name\":\"iahxmfqryarvs\",\"type\":\"zqbglcjkays\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<BuilderResource> response = manager.builders().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("wvif", response.iterator().next().location());
        Assertions.assertEquals("eci", response.iterator().next().tags().get("hocjxwkloozrv"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.iterator().next().identity().type());
        Assertions.assertEquals("sshajqfukpee", response.iterator().next().environmentId());
        Assertions.assertEquals("eumilhw",
            response.iterator().next().containerRegistries().get(0).containerRegistryServer());
        Assertions.assertEquals("itrdexy",
            response.iterator().next().containerRegistries().get(0).identityResourceId());
    }
}
