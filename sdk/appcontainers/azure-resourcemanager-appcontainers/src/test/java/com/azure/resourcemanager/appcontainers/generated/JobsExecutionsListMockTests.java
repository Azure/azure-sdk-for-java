// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcontainers.ContainerAppsApiManager;
import com.azure.resourcemanager.appcontainers.models.JobExecution;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class JobsExecutionsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"name\":\"gvp\",\"id\":\"rgjjktfinfhoksmm\",\"type\":\"lwkqic\",\"properties\":{\"status\":\"Succeeded\",\"startTime\":\"2021-04-09T01:06:58Z\",\"endTime\":\"2021-08-17T15:23:03Z\",\"template\":{\"containers\":[{\"image\":\"ojbtqpqsd\",\"name\":\"tpzp\",\"command\":[\"flmcdsgxc\",\"lujiswlluunxhfw\",\"fxzf\",\"u\"],\"args\":[\"pc\",\"necexkgrvfps\",\"d\",\"ngsy\"],\"env\":[{}],\"resources\":{}},{\"image\":\"fyxcnwawoxcgzbej\",\"name\":\"bifopf\",\"command\":[\"wdrpa\",\"q\",\"krfmbwotfcuuu\",\"tjigpgayiawohf\"],\"args\":[\"nzmec\"],\"env\":[{},{}],\"resources\":{}},{\"image\":\"en\",\"name\":\"idzr\",\"command\":[\"gloiovsl\",\"ivqsuvwtenb\"],\"args\":[\"jpk\"],\"env\":[{}],\"resources\":{}}],\"initContainers\":[{\"image\":\"ukuicjuftekioo\",\"name\":\"duewfhvpxjhxzu\",\"command\":[\"zabbwzgv\",\"uaixcdckix\"],\"args\":[\"aigavkmvyxzerejr\",\"pzjbyetjxryo\",\"taeitwhlbecgihz\",\"pemnrrabo\"],\"env\":[{},{},{},{}],\"resources\":{}},{\"image\":\"ywpj\",\"name\":\"pboxhifppsk\",\"command\":[\"wyhh\"],\"args\":[\"juajxwwvcmmp\",\"glyuqvcmla\",\"xbzbqufpnezs\",\"zaymld\"],\"env\":[{}],\"resources\":{}}]},\"detailedStatus\":{\"replicas\":[{\"name\":\"msimehtcuuwdh\",\"containers\":[{},{}]},{\"name\":\"yhn\",\"containers\":[{},{},{}]},{\"name\":\"nsugisn\",\"containers\":[{},{}]}]}}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<JobExecution> response
            = manager.jobsExecutions().list("fb", "ampqocl", "nnmxynlsuqbwzstr", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("gvp", response.iterator().next().name());
        Assertions.assertEquals("rgjjktfinfhoksmm", response.iterator().next().id());
        Assertions.assertEquals("lwkqic", response.iterator().next().type());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-09T01:06:58Z"), response.iterator().next().startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-17T15:23:03Z"), response.iterator().next().endTime());
        Assertions.assertEquals("ojbtqpqsd", response.iterator().next().template().containers().get(0).image());
        Assertions.assertEquals("tpzp", response.iterator().next().template().containers().get(0).name());
        Assertions.assertEquals("flmcdsgxc",
            response.iterator().next().template().containers().get(0).command().get(0));
        Assertions.assertEquals("pc", response.iterator().next().template().containers().get(0).args().get(0));
        Assertions.assertEquals("ukuicjuftekioo",
            response.iterator().next().template().initContainers().get(0).image());
        Assertions.assertEquals("duewfhvpxjhxzu", response.iterator().next().template().initContainers().get(0).name());
        Assertions.assertEquals("zabbwzgv",
            response.iterator().next().template().initContainers().get(0).command().get(0));
        Assertions.assertEquals("aigavkmvyxzerejr",
            response.iterator().next().template().initContainers().get(0).args().get(0));
        Assertions.assertEquals("msimehtcuuwdh", response.iterator().next().detailedStatus().replicas().get(0).name());
    }
}
