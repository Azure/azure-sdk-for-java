// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcontainers.ContainerAppsApiManager;
import com.azure.resourcemanager.appcontainers.models.JobExecution;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class JobsExecutionsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"name\":\"ulpodkaxpf\",\"id\":\"kzhmhj\",\"type\":\"lt\",\"properties\":{\"status\":\"Running\",\"startTime\":\"2021-01-28T22:25:44Z\",\"endTime\":\"2021-03-24T14:24:46Z\",\"template\":{\"containers\":[{\"image\":\"ztlraysrkgz\",\"name\":\"hudbkuwpzqxlcw\",\"command\":[\"fecjvxf\",\"qufqizj\"],\"args\":[\"wo\",\"a\",\"eyyjmjj\"],\"env\":[{},{}],\"resources\":{}}],\"initContainers\":[{\"image\":\"nzlslekc\",\"name\":\"gzkj\",\"command\":[\"p\",\"wadeghzt\"],\"args\":[\"vczdjiahuqymjzu\",\"wwmejjqhddwvmqx\",\"yookyfozkbnzxby\"],\"env\":[{},{},{}],\"resources\":{}},{\"image\":\"aix\",\"name\":\"grkkderfrswq\",\"command\":[\"epwoggg\",\"cwn\"],\"args\":[\"fmcqb\",\"udzpgchz\",\"gfqumjdjxhzghgo\",\"kynrceqavf\"],\"env\":[{},{},{},{}],\"resources\":{}},{\"image\":\"mxjdnaju\",\"name\":\"jyyqmkw\",\"command\":[\"cwlo\",\"dejkluxxrwzobuz\"],\"args\":[\"g\"],\"env\":[{},{},{}],\"resources\":{}},{\"image\":\"kwppthuzdprmimr\",\"name\":\"dpoqfxyem\",\"command\":[\"tbaewhte\"],\"args\":[\"amfmxtllfl\",\"ymqcnrrfijhgga\",\"qbgamkli\",\"irw\"],\"env\":[{},{},{}],\"resources\":{}}]},\"detailedStatus\":{\"replicas\":[{\"name\":\"zouhktqrxq\",\"containers\":[{},{}]},{\"name\":\"xrdfddtu\",\"containers\":[{}]},{\"name\":\"tavczc\",\"containers\":[{},{},{}]},{\"name\":\"eapyfmlxrlj\",\"containers\":[{},{},{}]}]}}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<JobExecution> response
            = manager.jobsExecutions().list("cucsqsnxfbxu", "eapdrbzyv", "su", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ulpodkaxpf", response.iterator().next().name());
        Assertions.assertEquals("kzhmhj", response.iterator().next().id());
        Assertions.assertEquals("lt", response.iterator().next().type());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-28T22:25:44Z"), response.iterator().next().startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-24T14:24:46Z"), response.iterator().next().endTime());
        Assertions.assertEquals("ztlraysrkgz", response.iterator().next().template().containers().get(0).image());
        Assertions.assertEquals("hudbkuwpzqxlcw", response.iterator().next().template().containers().get(0).name());
        Assertions.assertEquals("fecjvxf", response.iterator().next().template().containers().get(0).command().get(0));
        Assertions.assertEquals("wo", response.iterator().next().template().containers().get(0).args().get(0));
        Assertions.assertEquals("nzlslekc", response.iterator().next().template().initContainers().get(0).image());
        Assertions.assertEquals("gzkj", response.iterator().next().template().initContainers().get(0).name());
        Assertions.assertEquals("p", response.iterator().next().template().initContainers().get(0).command().get(0));
        Assertions.assertEquals("vczdjiahuqymjzu",
            response.iterator().next().template().initContainers().get(0).args().get(0));
        Assertions.assertEquals("zouhktqrxq", response.iterator().next().detailedStatus().replicas().get(0).name());
    }
}
