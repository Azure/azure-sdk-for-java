// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.HttpRoute;
import com.azure.resourcemanager.appcontainers.models.HttpRouteAction;
import com.azure.resourcemanager.appcontainers.models.HttpRouteMatch;
import com.azure.resourcemanager.appcontainers.models.HttpRouteRule;
import com.azure.resourcemanager.appcontainers.models.HttpRouteTarget;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class HttpRouteRuleTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HttpRouteRule model = BinaryData.fromString(
            "{\"targets\":[{\"containerApp\":\"tu\",\"revision\":\"bfjkw\",\"label\":\"snkq\"},{\"containerApp\":\"hsyrqunj\",\"revision\":\"denxau\",\"label\":\"pakdkifmjnnawt\"},{\"containerApp\":\"abpxuc\",\"revision\":\"ggqowey\",\"label\":\"dhlisngwflqqmpi\"}],\"routes\":[{\"match\":{\"prefix\":\"pqxpx\",\"path\":\"fcngjsa\",\"pathSeparatedPrefix\":\"iixtmkzj\",\"caseSensitive\":true},\"action\":{\"prefixRewrite\":\"rhgfgrwsdpgrat\"}},{\"match\":{\"prefix\":\"bglbyvict\",\"path\":\"brxkjzwr\",\"pathSeparatedPrefix\":\"ffm\",\"caseSensitive\":false},\"action\":{\"prefixRewrite\":\"bkgozxwopdbydpi\"}},{\"match\":{\"prefix\":\"clnapxbiygnugjkn\",\"path\":\"mfcttux\",\"pathSeparatedPrefix\":\"yilflqoiquvrehmr\",\"caseSensitive\":false},\"action\":{\"prefixRewrite\":\"ujztcz\"}},{\"match\":{\"prefix\":\"jtwhauunf\",\"path\":\"njle\",\"pathSeparatedPrefix\":\"xsmrpddouifamow\",\"caseSensitive\":false},\"action\":{\"prefixRewrite\":\"knlqwzdvpiwhxqsz\"}}],\"description\":\"maajquhuxylr\"}")
            .toObject(HttpRouteRule.class);
        Assertions.assertEquals("tu", model.targets().get(0).containerApp());
        Assertions.assertEquals("bfjkw", model.targets().get(0).revision());
        Assertions.assertEquals("snkq", model.targets().get(0).label());
        Assertions.assertEquals("pqxpx", model.routes().get(0).match().prefix());
        Assertions.assertEquals("fcngjsa", model.routes().get(0).match().path());
        Assertions.assertEquals("iixtmkzj", model.routes().get(0).match().pathSeparatedPrefix());
        Assertions.assertTrue(model.routes().get(0).match().caseSensitive());
        Assertions.assertEquals("rhgfgrwsdpgrat", model.routes().get(0).action().prefixRewrite());
        Assertions.assertEquals("maajquhuxylr", model.description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HttpRouteRule model = new HttpRouteRule()
            .withTargets(Arrays.asList(
                new HttpRouteTarget().withContainerApp("tu").withRevision("bfjkw").withLabel("snkq"),
                new HttpRouteTarget().withContainerApp("hsyrqunj").withRevision("denxau").withLabel("pakdkifmjnnawt"),
                new HttpRouteTarget().withContainerApp("abpxuc").withRevision("ggqowey").withLabel("dhlisngwflqqmpi")))
            .withRoutes(
                Arrays
                    .asList(
                        new HttpRoute()
                            .withMatch(new HttpRouteMatch().withPrefix("pqxpx")
                                .withPath("fcngjsa")
                                .withPathSeparatedPrefix("iixtmkzj")
                                .withCaseSensitive(true))
                            .withAction(new HttpRouteAction().withPrefixRewrite("rhgfgrwsdpgrat")),
                        new HttpRoute()
                            .withMatch(new HttpRouteMatch().withPrefix("bglbyvict")
                                .withPath("brxkjzwr")
                                .withPathSeparatedPrefix("ffm")
                                .withCaseSensitive(false))
                            .withAction(new HttpRouteAction().withPrefixRewrite("bkgozxwopdbydpi")),
                        new HttpRoute()
                            .withMatch(new HttpRouteMatch().withPrefix("clnapxbiygnugjkn")
                                .withPath("mfcttux")
                                .withPathSeparatedPrefix("yilflqoiquvrehmr")
                                .withCaseSensitive(false))
                            .withAction(new HttpRouteAction().withPrefixRewrite("ujztcz")),
                        new HttpRoute()
                            .withMatch(new HttpRouteMatch().withPrefix("jtwhauunf")
                                .withPath("njle")
                                .withPathSeparatedPrefix("xsmrpddouifamow")
                                .withCaseSensitive(false))
                            .withAction(new HttpRouteAction().withPrefixRewrite("knlqwzdvpiwhxqsz"))))
            .withDescription("maajquhuxylr");
        model = BinaryData.fromObject(model).toObject(HttpRouteRule.class);
        Assertions.assertEquals("tu", model.targets().get(0).containerApp());
        Assertions.assertEquals("bfjkw", model.targets().get(0).revision());
        Assertions.assertEquals("snkq", model.targets().get(0).label());
        Assertions.assertEquals("pqxpx", model.routes().get(0).match().prefix());
        Assertions.assertEquals("fcngjsa", model.routes().get(0).match().path());
        Assertions.assertEquals("iixtmkzj", model.routes().get(0).match().pathSeparatedPrefix());
        Assertions.assertTrue(model.routes().get(0).match().caseSensitive());
        Assertions.assertEquals("rhgfgrwsdpgrat", model.routes().get(0).action().prefixRewrite());
        Assertions.assertEquals("maajquhuxylr", model.description());
    }
}
