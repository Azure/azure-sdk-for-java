// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcontainers.ContainerAppsApiManager;
import com.azure.resourcemanager.appcontainers.models.Diagnostics;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class JobsListDetectorsMockTests {
    @Test
    public void testListDetectors() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"metadata\":{\"id\":\"tqgkujd\",\"name\":\"oxrqw\",\"description\":\"urbti\",\"author\":\"pdyarikeejdpd\",\"category\":\"twmmkfqbriqu\",\"supportTopicList\":[{\"id\":\"rjmeqkvyhz\",\"pesId\":\"poyu\"},{\"id\":\"uensn\",\"pesId\":\"jphmpoejnglpws\"},{\"id\":\"axj\",\"pesId\":\"mxpezco\"},{\"id\":\"yjrmfqzwqd\",\"pesId\":\"keedcnw\"}],\"analysisTypes\":[\"xfqzkvemyzd\"],\"type\":\"zaqpqi\",\"score\":58.71759},\"dataset\":[{\"table\":{\"tableName\":\"wtxzuisam\",\"columns\":[{}],\"rows\":[\"dataizexroqsqj\"]},\"renderingProperties\":{\"type\":1289621459,\"title\":\"hsplwsttxsrgxf\",\"description\":\"aniceovxgzwh\",\"isVisible\":false}},{\"table\":{\"tableName\":\"jmtikes\",\"columns\":[{},{}],\"rows\":[\"datahzixyqhfnkvy\",\"dataqqqdseipnquwz\",\"datahrptyodlhkfktltd\",\"datasobjop\"]},\"renderingProperties\":{\"type\":777460932,\"title\":\"qezkqxs\",\"description\":\"uzyigfcvcewbwqhd\",\"isVisible\":false}},{\"table\":{\"tableName\":\"tmrncma\",\"columns\":[{}],\"rows\":[\"dataxhyqmr\",\"datajparnpvgrszrbwt\"]},\"renderingProperties\":{\"type\":1077805593,\"title\":\"zwllxzlhhf\",\"description\":\"acfculzjrmhpf\",\"isVisible\":true}},{\"table\":{\"tableName\":\"dqpz\",\"columns\":[{},{}],\"rows\":[\"dataxi\",\"dataunjlzkdrocq\",\"dataxytqq\"]},\"renderingProperties\":{\"type\":1957395389,\"title\":\"dwisvnmeyl\",\"description\":\"amcajyhftpzcrryk\",\"isVisible\":false}}],\"status\":{\"message\":\"qanhkigg\",\"statusId\":1710211884},\"dataProviderMetadata\":{\"providerName\":\"lhv\",\"propertyBag\":[{\"name\":\"zphetxdqcm\",\"value\":\"tajqzj\"}]}},\"id\":\"lecxbibiwks\",\"name\":\"egyxsbfpzvoik\",\"type\":\"ntwczfzwushlc\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Diagnostics> response
            = manager.jobs().listDetectors("qmawzjdrpizfu", "gyc", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("xfqzkvemyzd",
            response.iterator().next().properties().metadata().analysisTypes().get(0));
        Assertions.assertEquals("wtxzuisam",
            response.iterator().next().properties().dataset().get(0).table().tableName());
        Assertions.assertEquals(1289621459,
            response.iterator().next().properties().dataset().get(0).renderingProperties().type());
        Assertions.assertEquals("hsplwsttxsrgxf",
            response.iterator().next().properties().dataset().get(0).renderingProperties().title());
        Assertions.assertEquals("aniceovxgzwh",
            response.iterator().next().properties().dataset().get(0).renderingProperties().description());
        Assertions.assertEquals(false,
            response.iterator().next().properties().dataset().get(0).renderingProperties().isVisible());
        Assertions.assertEquals("qanhkigg", response.iterator().next().properties().status().message());
        Assertions.assertEquals(1710211884, response.iterator().next().properties().status().statusId());
        Assertions.assertEquals("lhv", response.iterator().next().properties().dataProviderMetadata().providerName());
        Assertions.assertEquals("zphetxdqcm",
            response.iterator().next().properties().dataProviderMetadata().propertyBag().get(0).name());
        Assertions.assertEquals("tajqzj",
            response.iterator().next().properties().dataProviderMetadata().propertyBag().get(0).value());
    }
}
