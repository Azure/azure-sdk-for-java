// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcontainers.ContainerAppsApiManager;
import com.azure.resourcemanager.appcontainers.models.Diagnostics;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class JobsListDetectorsMockTests {
    @Test
    public void testListDetectors() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"metadata\":{\"id\":\"mydmhweqjfyxydgt\",\"name\":\"vq\",\"description\":\"wglgwzpvx\",\"author\":\"glhpse\",\"category\":\"fga\",\"supportTopicList\":[{\"id\":\"dvxcgdhyhgoqgsoy\",\"pesId\":\"xyjrcbqpb\"},{\"id\":\"pglqjo\",\"pesId\":\"dahneaoovty\"}],\"analysisTypes\":[\"ivfwjlofze\",\"fsr\"],\"type\":\"uklajvcfoc\",\"score\":60.513027},\"dataset\":[{\"table\":{\"tableName\":\"vtkwxnhw\",\"columns\":[{},{},{},{}],\"rows\":[\"datarzaaoee\"]},\"renderingProperties\":{\"type\":986004916,\"title\":\"nvjeateaxxc\",\"description\":\"oxdjxldnaryy\",\"isVisible\":true}}],\"status\":{\"message\":\"olrndwdb\",\"statusId\":1574399654},\"dataProviderMetadata\":{\"providerName\":\"ledoyqxlunkft\",\"propertyBag\":[{\"name\":\"qqxmyzklaoanpoh\",\"value\":\"mzrqraz\"},{\"name\":\"ivznllas\",\"value\":\"skhj\"},{\"name\":\"pvbaih\",\"value\":\"tgzgta\"},{\"name\":\"wbqgroigbsfsgsa\",\"value\":\"w\"}]}},\"id\":\"fmhl\",\"name\":\"qlxspmrj\",\"type\":\"tryldsxebuhsxr\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Diagnostics> response
            = manager.jobs().listDetectors("kktpmbmxbmbr", "gzzxljbkhxsd", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ivfwjlofze",
            response.iterator().next().properties().metadata().analysisTypes().get(0));
        Assertions.assertEquals("vtkwxnhw",
            response.iterator().next().properties().dataset().get(0).table().tableName());
        Assertions.assertEquals(986004916,
            response.iterator().next().properties().dataset().get(0).renderingProperties().type());
        Assertions.assertEquals("nvjeateaxxc",
            response.iterator().next().properties().dataset().get(0).renderingProperties().title());
        Assertions.assertEquals("oxdjxldnaryy",
            response.iterator().next().properties().dataset().get(0).renderingProperties().description());
        Assertions
            .assertTrue(response.iterator().next().properties().dataset().get(0).renderingProperties().isVisible());
        Assertions.assertEquals("olrndwdb", response.iterator().next().properties().status().message());
        Assertions.assertEquals(1574399654, response.iterator().next().properties().status().statusId());
        Assertions.assertEquals("ledoyqxlunkft",
            response.iterator().next().properties().dataProviderMetadata().providerName());
        Assertions.assertEquals("qqxmyzklaoanpoh",
            response.iterator().next().properties().dataProviderMetadata().propertyBag().get(0).name());
        Assertions.assertEquals("mzrqraz",
            response.iterator().next().properties().dataProviderMetadata().propertyBag().get(0).value());
    }
}
