// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.DotNetComponentProperties;
import com.azure.resourcemanager.appcontainers.models.DotNetComponentConfigurationProperty;
import com.azure.resourcemanager.appcontainers.models.DotNetComponentServiceBind;
import com.azure.resourcemanager.appcontainers.models.DotNetComponentType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DotNetComponentPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DotNetComponentProperties model = BinaryData.fromString(
            "{\"componentType\":\"AspireDashboard\",\"provisioningState\":\"Canceled\",\"configurations\":[{\"propertyName\":\"cvejyfdvlvhbwrn\",\"value\":\"tgddpqthehnmnaoy\"}],\"serviceBinds\":[{\"name\":\"oe\",\"serviceId\":\"wankltytmhdroznn\"},{\"name\":\"rlktgjcsggu\",\"serviceId\":\"eml\"},{\"name\":\"waeeczgfb\",\"serviceId\":\"klelssxb\"}]}")
            .toObject(DotNetComponentProperties.class);
        Assertions.assertEquals(DotNetComponentType.ASPIRE_DASHBOARD, model.componentType());
        Assertions.assertEquals("cvejyfdvlvhbwrn", model.configurations().get(0).propertyName());
        Assertions.assertEquals("tgddpqthehnmnaoy", model.configurations().get(0).value());
        Assertions.assertEquals("oe", model.serviceBinds().get(0).name());
        Assertions.assertEquals("wankltytmhdroznn", model.serviceBinds().get(0).serviceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DotNetComponentProperties model
            = new DotNetComponentProperties().withComponentType(DotNetComponentType.ASPIRE_DASHBOARD)
                .withConfigurations(
                    Arrays.asList(new DotNetComponentConfigurationProperty().withPropertyName("cvejyfdvlvhbwrn")
                        .withValue("tgddpqthehnmnaoy")))
                .withServiceBinds(
                    Arrays.asList(new DotNetComponentServiceBind().withName("oe").withServiceId("wankltytmhdroznn"),
                        new DotNetComponentServiceBind().withName("rlktgjcsggu").withServiceId("eml"),
                        new DotNetComponentServiceBind().withName("waeeczgfb").withServiceId("klelssxb")));
        model = BinaryData.fromObject(model).toObject(DotNetComponentProperties.class);
        Assertions.assertEquals(DotNetComponentType.ASPIRE_DASHBOARD, model.componentType());
        Assertions.assertEquals("cvejyfdvlvhbwrn", model.configurations().get(0).propertyName());
        Assertions.assertEquals("tgddpqthehnmnaoy", model.configurations().get(0).value());
        Assertions.assertEquals("oe", model.serviceBinds().get(0).name());
        Assertions.assertEquals("wankltytmhdroznn", model.serviceBinds().get(0).serviceId());
    }
}
