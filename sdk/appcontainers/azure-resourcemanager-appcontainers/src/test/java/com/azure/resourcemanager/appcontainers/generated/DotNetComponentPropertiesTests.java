// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.DotNetComponentProperties;
import com.azure.resourcemanager.appcontainers.models.DotNetComponentConfigurationProperty;
import com.azure.resourcemanager.appcontainers.models.DotNetComponentServiceBind;
import com.azure.resourcemanager.appcontainers.models.DotNetComponentType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DotNetComponentPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DotNetComponentProperties model = BinaryData.fromString(
            "{\"componentType\":\"AspireDashboard\",\"provisioningState\":\"Failed\",\"configurations\":[{\"propertyName\":\"ocxnehvsmtodl\",\"value\":\"yapucygvoa\"}],\"serviceBinds\":[{\"name\":\"ssxlghieegjlg\",\"serviceId\":\"paseksgb\"},{\"name\":\"antuygdhgaqipirp\",\"serviceId\":\"rqofulopmjnlexwh\"},{\"name\":\"jpib\",\"serviceId\":\"phuuuerctato\"},{\"name\":\"ntqpbr\",\"serviceId\":\"yrduczkgofxyfsr\"}]}")
            .toObject(DotNetComponentProperties.class);
        Assertions.assertEquals(DotNetComponentType.ASPIRE_DASHBOARD, model.componentType());
        Assertions.assertEquals("ocxnehvsmtodl", model.configurations().get(0).propertyName());
        Assertions.assertEquals("yapucygvoa", model.configurations().get(0).value());
        Assertions.assertEquals("ssxlghieegjlg", model.serviceBinds().get(0).name());
        Assertions.assertEquals("paseksgb", model.serviceBinds().get(0).serviceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DotNetComponentProperties model = new DotNetComponentProperties()
            .withComponentType(DotNetComponentType.ASPIRE_DASHBOARD)
            .withConfigurations(Arrays.asList(
                new DotNetComponentConfigurationProperty().withPropertyName("ocxnehvsmtodl").withValue("yapucygvoa")))
            .withServiceBinds(
                Arrays.asList(new DotNetComponentServiceBind().withName("ssxlghieegjlg").withServiceId("paseksgb"),
                    new DotNetComponentServiceBind().withName("antuygdhgaqipirp").withServiceId("rqofulopmjnlexwh"),
                    new DotNetComponentServiceBind().withName("jpib").withServiceId("phuuuerctato"),
                    new DotNetComponentServiceBind().withName("ntqpbr").withServiceId("yrduczkgofxyfsr")));
        model = BinaryData.fromObject(model).toObject(DotNetComponentProperties.class);
        Assertions.assertEquals(DotNetComponentType.ASPIRE_DASHBOARD, model.componentType());
        Assertions.assertEquals("ocxnehvsmtodl", model.configurations().get(0).propertyName());
        Assertions.assertEquals("yapucygvoa", model.configurations().get(0).value());
        Assertions.assertEquals("ssxlghieegjlg", model.serviceBinds().get(0).name());
        Assertions.assertEquals("paseksgb", model.serviceBinds().get(0).serviceId());
    }
}
