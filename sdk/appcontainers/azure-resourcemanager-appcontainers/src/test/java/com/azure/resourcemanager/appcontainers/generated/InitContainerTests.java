// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.ContainerResources;
import com.azure.resourcemanager.appcontainers.models.EnvironmentVar;
import com.azure.resourcemanager.appcontainers.models.InitContainer;
import com.azure.resourcemanager.appcontainers.models.VolumeMount;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class InitContainerTests {
    @Test
    public void testDeserialize() {
        InitContainer model =
            BinaryData
                .fromString(
                    "{\"image\":\"ogqxndlkzgxhuri\",\"name\":\"bpodxunkbebxm\",\"command\":[\"yntwlrbq\",\"koievseo\"],\"args\":[\"rlltmuwlauwzizx\"],\"env\":[{\"name\":\"cjefuzmu\",\"value\":\"bttdumorppxe\",\"secretRef\":\"nzbtbhj\"},{\"name\":\"lkfg\",\"value\":\"dneu\",\"secretRef\":\"fphsdyhtozfikdow\"},{\"name\":\"uuvxz\",\"value\":\"lvithhqzonosgg\",\"secretRef\":\"c\"}],\"resources\":{\"cpu\":61.21975235277173,\"memory\":\"jnkaljutiiswacff\",\"ephemeralStorage\":\"k\"},\"volumeMounts\":[{\"volumeName\":\"kfvhqcrailvpn\",\"mountPath\":\"fuflrwdmhdlx\"},{\"volumeName\":\"rxsagafcnihgwqa\",\"mountPath\":\"edgfbcvkcvq\"},{\"volumeName\":\"keqdcvdrhvoods\",\"mountPath\":\"bobzdopcjwvnhd\"}]}")
                .toObject(InitContainer.class);
        Assertions.assertEquals("ogqxndlkzgxhuri", model.image());
        Assertions.assertEquals("bpodxunkbebxm", model.name());
        Assertions.assertEquals("yntwlrbq", model.command().get(0));
        Assertions.assertEquals("rlltmuwlauwzizx", model.args().get(0));
        Assertions.assertEquals("cjefuzmu", model.env().get(0).name());
        Assertions.assertEquals("bttdumorppxe", model.env().get(0).value());
        Assertions.assertEquals("nzbtbhj", model.env().get(0).secretRef());
        Assertions.assertEquals(61.21975235277173D, model.resources().cpu());
        Assertions.assertEquals("jnkaljutiiswacff", model.resources().memory());
        Assertions.assertEquals("kfvhqcrailvpn", model.volumeMounts().get(0).volumeName());
        Assertions.assertEquals("fuflrwdmhdlx", model.volumeMounts().get(0).mountPath());
    }

    @Test
    public void testSerialize() {
        InitContainer model =
            new InitContainer()
                .withImage("ogqxndlkzgxhuri")
                .withName("bpodxunkbebxm")
                .withCommand(Arrays.asList("yntwlrbq", "koievseo"))
                .withArgs(Arrays.asList("rlltmuwlauwzizx"))
                .withEnv(
                    Arrays
                        .asList(
                            new EnvironmentVar()
                                .withName("cjefuzmu")
                                .withValue("bttdumorppxe")
                                .withSecretRef("nzbtbhj"),
                            new EnvironmentVar().withName("lkfg").withValue("dneu").withSecretRef("fphsdyhtozfikdow"),
                            new EnvironmentVar().withName("uuvxz").withValue("lvithhqzonosgg").withSecretRef("c")))
                .withResources(new ContainerResources().withCpu(61.21975235277173D).withMemory("jnkaljutiiswacff"))
                .withVolumeMounts(
                    Arrays
                        .asList(
                            new VolumeMount().withVolumeName("kfvhqcrailvpn").withMountPath("fuflrwdmhdlx"),
                            new VolumeMount().withVolumeName("rxsagafcnihgwqa").withMountPath("edgfbcvkcvq"),
                            new VolumeMount().withVolumeName("keqdcvdrhvoods").withMountPath("bobzdopcjwvnhd")));
        model = BinaryData.fromObject(model).toObject(InitContainer.class);
        Assertions.assertEquals("ogqxndlkzgxhuri", model.image());
        Assertions.assertEquals("bpodxunkbebxm", model.name());
        Assertions.assertEquals("yntwlrbq", model.command().get(0));
        Assertions.assertEquals("rlltmuwlauwzizx", model.args().get(0));
        Assertions.assertEquals("cjefuzmu", model.env().get(0).name());
        Assertions.assertEquals("bttdumorppxe", model.env().get(0).value());
        Assertions.assertEquals("nzbtbhj", model.env().get(0).secretRef());
        Assertions.assertEquals(61.21975235277173D, model.resources().cpu());
        Assertions.assertEquals("jnkaljutiiswacff", model.resources().memory());
        Assertions.assertEquals("kfvhqcrailvpn", model.volumeMounts().get(0).volumeName());
        Assertions.assertEquals("fuflrwdmhdlx", model.volumeMounts().get(0).mountPath());
    }
}
