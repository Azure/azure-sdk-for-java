// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.DaprComponentResiliencyPolicyInner;
import com.azure.resourcemanager.appcontainers.models.DaprComponentResiliencyPolicyCircuitBreakerPolicyConfiguration;
import com.azure.resourcemanager.appcontainers.models.DaprComponentResiliencyPolicyConfiguration;
import com.azure.resourcemanager.appcontainers.models.DaprComponentResiliencyPolicyHttpRetryBackOffConfiguration;
import com.azure.resourcemanager.appcontainers.models.DaprComponentResiliencyPolicyHttpRetryPolicyConfiguration;
import com.azure.resourcemanager.appcontainers.models.DaprComponentResiliencyPolicyTimeoutPolicyConfiguration;
import org.junit.jupiter.api.Assertions;

public final class DaprComponentResiliencyPolicyInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DaprComponentResiliencyPolicyInner model = BinaryData.fromString(
            "{\"properties\":{\"inboundPolicy\":{\"httpRetryPolicy\":{\"maxRetries\":1311307331,\"retryBackOff\":{\"initialDelayInMilliseconds\":1297019223,\"maxIntervalInMilliseconds\":1804548861}},\"timeoutPolicy\":{\"responseTimeoutInSeconds\":1178450124},\"circuitBreakerPolicy\":{\"consecutiveErrors\":1900564261,\"timeoutInSeconds\":705392467,\"intervalInSeconds\":736699412}},\"outboundPolicy\":{\"httpRetryPolicy\":{\"maxRetries\":659726359,\"retryBackOff\":{\"initialDelayInMilliseconds\":1299373983,\"maxIntervalInMilliseconds\":691820397}},\"timeoutPolicy\":{\"responseTimeoutInSeconds\":445927292},\"circuitBreakerPolicy\":{\"consecutiveErrors\":125722060,\"timeoutInSeconds\":1842303000,\"intervalInSeconds\":1552798454}}},\"id\":\"qipxgzdyimsf\",\"name\":\"yorpr\",\"type\":\"vk\"}")
            .toObject(DaprComponentResiliencyPolicyInner.class);
        Assertions.assertEquals(1311307331, model.inboundPolicy().httpRetryPolicy().maxRetries());
        Assertions.assertEquals(1297019223,
            model.inboundPolicy().httpRetryPolicy().retryBackOff().initialDelayInMilliseconds());
        Assertions.assertEquals(1804548861,
            model.inboundPolicy().httpRetryPolicy().retryBackOff().maxIntervalInMilliseconds());
        Assertions.assertEquals(1178450124, model.inboundPolicy().timeoutPolicy().responseTimeoutInSeconds());
        Assertions.assertEquals(1900564261, model.inboundPolicy().circuitBreakerPolicy().consecutiveErrors());
        Assertions.assertEquals(705392467, model.inboundPolicy().circuitBreakerPolicy().timeoutInSeconds());
        Assertions.assertEquals(736699412, model.inboundPolicy().circuitBreakerPolicy().intervalInSeconds());
        Assertions.assertEquals(659726359, model.outboundPolicy().httpRetryPolicy().maxRetries());
        Assertions.assertEquals(1299373983,
            model.outboundPolicy().httpRetryPolicy().retryBackOff().initialDelayInMilliseconds());
        Assertions.assertEquals(691820397,
            model.outboundPolicy().httpRetryPolicy().retryBackOff().maxIntervalInMilliseconds());
        Assertions.assertEquals(445927292, model.outboundPolicy().timeoutPolicy().responseTimeoutInSeconds());
        Assertions.assertEquals(125722060, model.outboundPolicy().circuitBreakerPolicy().consecutiveErrors());
        Assertions.assertEquals(1842303000, model.outboundPolicy().circuitBreakerPolicy().timeoutInSeconds());
        Assertions.assertEquals(1552798454, model.outboundPolicy().circuitBreakerPolicy().intervalInSeconds());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DaprComponentResiliencyPolicyInner model = new DaprComponentResiliencyPolicyInner()
            .withInboundPolicy(new DaprComponentResiliencyPolicyConfiguration()
                .withHttpRetryPolicy(
                    new DaprComponentResiliencyPolicyHttpRetryPolicyConfiguration().withMaxRetries(1311307331)
                        .withRetryBackOff(new DaprComponentResiliencyPolicyHttpRetryBackOffConfiguration()
                            .withInitialDelayInMilliseconds(1297019223)
                            .withMaxIntervalInMilliseconds(1804548861)))
                .withTimeoutPolicy(new DaprComponentResiliencyPolicyTimeoutPolicyConfiguration()
                    .withResponseTimeoutInSeconds(1178450124))
                .withCircuitBreakerPolicy(new DaprComponentResiliencyPolicyCircuitBreakerPolicyConfiguration()
                    .withConsecutiveErrors(1900564261)
                    .withTimeoutInSeconds(705392467)
                    .withIntervalInSeconds(736699412)))
            .withOutboundPolicy(new DaprComponentResiliencyPolicyConfiguration()
                .withHttpRetryPolicy(
                    new DaprComponentResiliencyPolicyHttpRetryPolicyConfiguration().withMaxRetries(659726359)
                        .withRetryBackOff(new DaprComponentResiliencyPolicyHttpRetryBackOffConfiguration()
                            .withInitialDelayInMilliseconds(1299373983)
                            .withMaxIntervalInMilliseconds(691820397)))
                .withTimeoutPolicy(new DaprComponentResiliencyPolicyTimeoutPolicyConfiguration()
                    .withResponseTimeoutInSeconds(445927292))
                .withCircuitBreakerPolicy(new DaprComponentResiliencyPolicyCircuitBreakerPolicyConfiguration()
                    .withConsecutiveErrors(125722060)
                    .withTimeoutInSeconds(1842303000)
                    .withIntervalInSeconds(1552798454)));
        model = BinaryData.fromObject(model).toObject(DaprComponentResiliencyPolicyInner.class);
        Assertions.assertEquals(1311307331, model.inboundPolicy().httpRetryPolicy().maxRetries());
        Assertions.assertEquals(1297019223,
            model.inboundPolicy().httpRetryPolicy().retryBackOff().initialDelayInMilliseconds());
        Assertions.assertEquals(1804548861,
            model.inboundPolicy().httpRetryPolicy().retryBackOff().maxIntervalInMilliseconds());
        Assertions.assertEquals(1178450124, model.inboundPolicy().timeoutPolicy().responseTimeoutInSeconds());
        Assertions.assertEquals(1900564261, model.inboundPolicy().circuitBreakerPolicy().consecutiveErrors());
        Assertions.assertEquals(705392467, model.inboundPolicy().circuitBreakerPolicy().timeoutInSeconds());
        Assertions.assertEquals(736699412, model.inboundPolicy().circuitBreakerPolicy().intervalInSeconds());
        Assertions.assertEquals(659726359, model.outboundPolicy().httpRetryPolicy().maxRetries());
        Assertions.assertEquals(1299373983,
            model.outboundPolicy().httpRetryPolicy().retryBackOff().initialDelayInMilliseconds());
        Assertions.assertEquals(691820397,
            model.outboundPolicy().httpRetryPolicy().retryBackOff().maxIntervalInMilliseconds());
        Assertions.assertEquals(445927292, model.outboundPolicy().timeoutPolicy().responseTimeoutInSeconds());
        Assertions.assertEquals(125722060, model.outboundPolicy().circuitBreakerPolicy().consecutiveErrors());
        Assertions.assertEquals(1842303000, model.outboundPolicy().circuitBreakerPolicy().timeoutInSeconds());
        Assertions.assertEquals(1552798454, model.outboundPolicy().circuitBreakerPolicy().intervalInSeconds());
    }
}
