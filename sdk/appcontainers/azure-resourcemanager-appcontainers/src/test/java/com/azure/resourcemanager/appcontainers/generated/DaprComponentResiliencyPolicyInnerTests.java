// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.DaprComponentResiliencyPolicyInner;
import com.azure.resourcemanager.appcontainers.models.DaprComponentResiliencyPolicyCircuitBreakerPolicyConfiguration;
import com.azure.resourcemanager.appcontainers.models.DaprComponentResiliencyPolicyConfiguration;
import com.azure.resourcemanager.appcontainers.models.DaprComponentResiliencyPolicyHttpRetryBackOffConfiguration;
import com.azure.resourcemanager.appcontainers.models.DaprComponentResiliencyPolicyHttpRetryPolicyConfiguration;
import com.azure.resourcemanager.appcontainers.models.DaprComponentResiliencyPolicyTimeoutPolicyConfiguration;
import org.junit.jupiter.api.Assertions;

public final class DaprComponentResiliencyPolicyInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DaprComponentResiliencyPolicyInner model = BinaryData.fromString(
            "{\"properties\":{\"inboundPolicy\":{\"httpRetryPolicy\":{\"maxRetries\":1308773307,\"retryBackOff\":{\"initialDelayInMilliseconds\":13948035,\"maxIntervalInMilliseconds\":1766746285}},\"timeoutPolicy\":{\"responseTimeoutInSeconds\":1507260148},\"circuitBreakerPolicy\":{\"consecutiveErrors\":897390783,\"timeoutInSeconds\":588380605,\"intervalInSeconds\":1724314397}},\"outboundPolicy\":{\"httpRetryPolicy\":{\"maxRetries\":543783060,\"retryBackOff\":{\"initialDelayInMilliseconds\":68368510,\"maxIntervalInMilliseconds\":606416580}},\"timeoutPolicy\":{\"responseTimeoutInSeconds\":1782927877},\"circuitBreakerPolicy\":{\"consecutiveErrors\":1532850528,\"timeoutInSeconds\":2079945802,\"intervalInSeconds\":1968607374}}},\"id\":\"x\",\"name\":\"yubhiqdx\",\"type\":\"urnpnuhzafccnuh\"}")
            .toObject(DaprComponentResiliencyPolicyInner.class);
        Assertions.assertEquals(1308773307, model.inboundPolicy().httpRetryPolicy().maxRetries());
        Assertions.assertEquals(13948035,
            model.inboundPolicy().httpRetryPolicy().retryBackOff().initialDelayInMilliseconds());
        Assertions.assertEquals(1766746285,
            model.inboundPolicy().httpRetryPolicy().retryBackOff().maxIntervalInMilliseconds());
        Assertions.assertEquals(1507260148, model.inboundPolicy().timeoutPolicy().responseTimeoutInSeconds());
        Assertions.assertEquals(897390783, model.inboundPolicy().circuitBreakerPolicy().consecutiveErrors());
        Assertions.assertEquals(588380605, model.inboundPolicy().circuitBreakerPolicy().timeoutInSeconds());
        Assertions.assertEquals(1724314397, model.inboundPolicy().circuitBreakerPolicy().intervalInSeconds());
        Assertions.assertEquals(543783060, model.outboundPolicy().httpRetryPolicy().maxRetries());
        Assertions.assertEquals(68368510,
            model.outboundPolicy().httpRetryPolicy().retryBackOff().initialDelayInMilliseconds());
        Assertions.assertEquals(606416580,
            model.outboundPolicy().httpRetryPolicy().retryBackOff().maxIntervalInMilliseconds());
        Assertions.assertEquals(1782927877, model.outboundPolicy().timeoutPolicy().responseTimeoutInSeconds());
        Assertions.assertEquals(1532850528, model.outboundPolicy().circuitBreakerPolicy().consecutiveErrors());
        Assertions.assertEquals(2079945802, model.outboundPolicy().circuitBreakerPolicy().timeoutInSeconds());
        Assertions.assertEquals(1968607374, model.outboundPolicy().circuitBreakerPolicy().intervalInSeconds());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DaprComponentResiliencyPolicyInner model = new DaprComponentResiliencyPolicyInner()
            .withInboundPolicy(new DaprComponentResiliencyPolicyConfiguration()
                .withHttpRetryPolicy(
                    new DaprComponentResiliencyPolicyHttpRetryPolicyConfiguration().withMaxRetries(1308773307)
                        .withRetryBackOff(new DaprComponentResiliencyPolicyHttpRetryBackOffConfiguration()
                            .withInitialDelayInMilliseconds(13948035)
                            .withMaxIntervalInMilliseconds(1766746285)))
                .withTimeoutPolicy(new DaprComponentResiliencyPolicyTimeoutPolicyConfiguration()
                    .withResponseTimeoutInSeconds(1507260148))
                .withCircuitBreakerPolicy(new DaprComponentResiliencyPolicyCircuitBreakerPolicyConfiguration()
                    .withConsecutiveErrors(897390783)
                    .withTimeoutInSeconds(588380605)
                    .withIntervalInSeconds(1724314397)))
            .withOutboundPolicy(new DaprComponentResiliencyPolicyConfiguration()
                .withHttpRetryPolicy(
                    new DaprComponentResiliencyPolicyHttpRetryPolicyConfiguration().withMaxRetries(543783060)
                        .withRetryBackOff(new DaprComponentResiliencyPolicyHttpRetryBackOffConfiguration()
                            .withInitialDelayInMilliseconds(68368510)
                            .withMaxIntervalInMilliseconds(606416580)))
                .withTimeoutPolicy(new DaprComponentResiliencyPolicyTimeoutPolicyConfiguration()
                    .withResponseTimeoutInSeconds(1782927877))
                .withCircuitBreakerPolicy(new DaprComponentResiliencyPolicyCircuitBreakerPolicyConfiguration()
                    .withConsecutiveErrors(1532850528)
                    .withTimeoutInSeconds(2079945802)
                    .withIntervalInSeconds(1968607374)));
        model = BinaryData.fromObject(model).toObject(DaprComponentResiliencyPolicyInner.class);
        Assertions.assertEquals(1308773307, model.inboundPolicy().httpRetryPolicy().maxRetries());
        Assertions.assertEquals(13948035,
            model.inboundPolicy().httpRetryPolicy().retryBackOff().initialDelayInMilliseconds());
        Assertions.assertEquals(1766746285,
            model.inboundPolicy().httpRetryPolicy().retryBackOff().maxIntervalInMilliseconds());
        Assertions.assertEquals(1507260148, model.inboundPolicy().timeoutPolicy().responseTimeoutInSeconds());
        Assertions.assertEquals(897390783, model.inboundPolicy().circuitBreakerPolicy().consecutiveErrors());
        Assertions.assertEquals(588380605, model.inboundPolicy().circuitBreakerPolicy().timeoutInSeconds());
        Assertions.assertEquals(1724314397, model.inboundPolicy().circuitBreakerPolicy().intervalInSeconds());
        Assertions.assertEquals(543783060, model.outboundPolicy().httpRetryPolicy().maxRetries());
        Assertions.assertEquals(68368510,
            model.outboundPolicy().httpRetryPolicy().retryBackOff().initialDelayInMilliseconds());
        Assertions.assertEquals(606416580,
            model.outboundPolicy().httpRetryPolicy().retryBackOff().maxIntervalInMilliseconds());
        Assertions.assertEquals(1782927877, model.outboundPolicy().timeoutPolicy().responseTimeoutInSeconds());
        Assertions.assertEquals(1532850528, model.outboundPolicy().circuitBreakerPolicy().consecutiveErrors());
        Assertions.assertEquals(2079945802, model.outboundPolicy().circuitBreakerPolicy().timeoutInSeconds());
        Assertions.assertEquals(1968607374, model.outboundPolicy().circuitBreakerPolicy().intervalInSeconds());
    }
}
