// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.AllowedPrincipals;
import com.azure.resourcemanager.appcontainers.models.DefaultAuthorizationPolicy;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DefaultAuthorizationPolicyTests {
    @Test
    public void testDeserialize() {
        DefaultAuthorizationPolicy model =
            BinaryData
                .fromString(
                    "{\"allowedPrincipals\":{\"groups\":[\"nohjt\"],\"identities\":[\"h\",\"soifiyipjxsqw\",\"gr\"]},\"allowedApplications\":[\"norcjxvsnbyxqab\",\"mocpc\"]}")
                .toObject(DefaultAuthorizationPolicy.class);
        Assertions.assertEquals("nohjt", model.allowedPrincipals().groups().get(0));
        Assertions.assertEquals("h", model.allowedPrincipals().identities().get(0));
        Assertions.assertEquals("norcjxvsnbyxqab", model.allowedApplications().get(0));
    }

    @Test
    public void testSerialize() {
        DefaultAuthorizationPolicy model =
            new DefaultAuthorizationPolicy()
                .withAllowedPrincipals(
                    new AllowedPrincipals()
                        .withGroups(Arrays.asList("nohjt"))
                        .withIdentities(Arrays.asList("h", "soifiyipjxsqw", "gr")))
                .withAllowedApplications(Arrays.asList("norcjxvsnbyxqab", "mocpc"));
        model = BinaryData.fromObject(model).toObject(DefaultAuthorizationPolicy.class);
        Assertions.assertEquals("nohjt", model.allowedPrincipals().groups().get(0));
        Assertions.assertEquals("h", model.allowedPrincipals().identities().get(0));
        Assertions.assertEquals("norcjxvsnbyxqab", model.allowedApplications().get(0));
    }
}
