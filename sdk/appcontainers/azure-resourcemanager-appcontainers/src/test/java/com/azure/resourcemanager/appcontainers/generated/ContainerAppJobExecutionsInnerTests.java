// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.ContainerAppJobExecutionsInner;
import com.azure.resourcemanager.appcontainers.fluent.models.JobExecutionInner;
import com.azure.resourcemanager.appcontainers.models.JobExecutionContainer;
import com.azure.resourcemanager.appcontainers.models.JobExecutionTemplate;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ContainerAppJobExecutionsInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ContainerAppJobExecutionsInner model = BinaryData.fromString(
            "{\"value\":[{\"name\":\"uartvti\",\"id\":\"yefchnm\",\"type\":\"hmnxhkxjqi\",\"properties\":{\"status\":\"Degraded\",\"startTime\":\"2021-02-25T22:43:28Z\",\"endTime\":\"2021-08-15T18:00:46Z\",\"template\":{\"containers\":[{}],\"initContainers\":[{}]}}},{\"name\":\"wrsnewmozqvbu\",\"id\":\"ma\",\"type\":\"sycxhxzgaz\",\"properties\":{\"status\":\"Running\",\"startTime\":\"2021-09-16T19:45:24Z\",\"endTime\":\"2021-01-19T00:16:09Z\",\"template\":{\"containers\":[{},{},{},{}],\"initContainers\":[{}]}}}],\"nextLink\":\"ubowsepdfgkm\"}")
            .toObject(ContainerAppJobExecutionsInner.class);
        Assertions.assertEquals("uartvti", model.value().get(0).name());
        Assertions.assertEquals("yefchnm", model.value().get(0).id());
        Assertions.assertEquals("hmnxhkxjqi", model.value().get(0).type());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-25T22:43:28Z"), model.value().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-15T18:00:46Z"), model.value().get(0).endTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ContainerAppJobExecutionsInner model = new ContainerAppJobExecutionsInner().withValue(Arrays.asList(
            new JobExecutionInner().withName("uartvti").withId("yefchnm").withType("hmnxhkxjqi")
                .withStartTime(OffsetDateTime.parse("2021-02-25T22:43:28Z"))
                .withEndTime(OffsetDateTime.parse("2021-08-15T18:00:46Z"))
                .withTemplate(new JobExecutionTemplate().withContainers(Arrays.asList(new JobExecutionContainer()))
                    .withInitContainers(Arrays.asList(new JobExecutionContainer()))),
            new JobExecutionInner().withName("wrsnewmozqvbu").withId("ma").withType("sycxhxzgaz")
                .withStartTime(OffsetDateTime.parse("2021-09-16T19:45:24Z"))
                .withEndTime(OffsetDateTime.parse("2021-01-19T00:16:09Z"))
                .withTemplate(new JobExecutionTemplate()
                    .withContainers(Arrays.asList(new JobExecutionContainer(), new JobExecutionContainer(),
                        new JobExecutionContainer(), new JobExecutionContainer()))
                    .withInitContainers(Arrays.asList(new JobExecutionContainer())))));
        model = BinaryData.fromObject(model).toObject(ContainerAppJobExecutionsInner.class);
        Assertions.assertEquals("uartvti", model.value().get(0).name());
        Assertions.assertEquals("yefchnm", model.value().get(0).id());
        Assertions.assertEquals("hmnxhkxjqi", model.value().get(0).type());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-25T22:43:28Z"), model.value().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-15T18:00:46Z"), model.value().get(0).endTime());
    }
}
