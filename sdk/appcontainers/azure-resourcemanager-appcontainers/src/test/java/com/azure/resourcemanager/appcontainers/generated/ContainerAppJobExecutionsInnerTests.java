// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.ContainerAppJobExecutionsInner;
import com.azure.resourcemanager.appcontainers.fluent.models.JobExecutionInner;
import com.azure.resourcemanager.appcontainers.models.JobExecutionContainer;
import com.azure.resourcemanager.appcontainers.models.JobExecutionTemplate;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ContainerAppJobExecutionsInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ContainerAppJobExecutionsInner model = BinaryData.fromString(
            "{\"value\":[{\"name\":\"b\",\"id\":\"bwvqvxkdi\",\"type\":\"ihebwtsw\",\"properties\":{\"status\":\"Processing\",\"startTime\":\"2021-12-01T16:14:23Z\",\"endTime\":\"2021-01-09T08:38:51Z\",\"template\":{\"containers\":[{},{},{}],\"initContainers\":[{}]}}},{\"name\":\"zvcjfelisdjubggb\",\"id\":\"gkxkbsazgakg\",\"type\":\"yrcmjdmspofap\",\"properties\":{\"status\":\"Failed\",\"startTime\":\"2021-08-12T07:21:18Z\",\"endTime\":\"2021-10-23T00:02:47Z\",\"template\":{\"containers\":[{}],\"initContainers\":[{},{},{}]}}}],\"nextLink\":\"zjedmstkvnlv\"}")
            .toObject(ContainerAppJobExecutionsInner.class);
        Assertions.assertEquals("b", model.value().get(0).name());
        Assertions.assertEquals("bwvqvxkdi", model.value().get(0).id());
        Assertions.assertEquals("ihebwtsw", model.value().get(0).type());
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-01T16:14:23Z"), model.value().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-09T08:38:51Z"), model.value().get(0).endTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ContainerAppJobExecutionsInner model
            = new ContainerAppJobExecutionsInner().withValue(Arrays.asList(
                new JobExecutionInner().withName("b")
                    .withId("bwvqvxkdi")
                    .withType("ihebwtsw")
                    .withStartTime(OffsetDateTime.parse("2021-12-01T16:14:23Z"))
                    .withEndTime(OffsetDateTime.parse("2021-01-09T08:38:51Z"))
                    .withTemplate(new JobExecutionTemplate()
                        .withContainers(Arrays.asList(new JobExecutionContainer(), new JobExecutionContainer(),
                            new JobExecutionContainer()))
                        .withInitContainers(Arrays.asList(new JobExecutionContainer()))),
                new JobExecutionInner().withName("zvcjfelisdjubggb")
                    .withId("gkxkbsazgakg")
                    .withType("yrcmjdmspofap")
                    .withStartTime(OffsetDateTime.parse("2021-08-12T07:21:18Z"))
                    .withEndTime(OffsetDateTime.parse("2021-10-23T00:02:47Z"))
                    .withTemplate(new JobExecutionTemplate().withContainers(Arrays.asList(new JobExecutionContainer()))
                        .withInitContainers(Arrays.asList(new JobExecutionContainer(), new JobExecutionContainer(),
                            new JobExecutionContainer())))));
        model = BinaryData.fromObject(model).toObject(ContainerAppJobExecutionsInner.class);
        Assertions.assertEquals("b", model.value().get(0).name());
        Assertions.assertEquals("bwvqvxkdi", model.value().get(0).id());
        Assertions.assertEquals("ihebwtsw", model.value().get(0).type());
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-01T16:14:23Z"), model.value().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-09T08:38:51Z"), model.value().get(0).endTime());
    }
}
