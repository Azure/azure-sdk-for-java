// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcontainers.ContainerAppsApiManager;
import com.azure.resourcemanager.appcontainers.models.Diagnostics;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ContainerAppsDiagnosticsListDetectorsMockTests {
    @Test
    public void testListDetectors() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"metadata\":{\"id\":\"toi\",\"name\":\"gygvfltgvdiho\",\"description\":\"krxwet\",\"author\":\"drcyrucpcun\",\"category\":\"zdqumoe\",\"supportTopicList\":[{\"id\":\"aienhqhsknd\",\"pesId\":\"lqkaadlknwf\"},{\"id\":\"nniyopetxi\",\"pesId\":\"nrlyxnuc\"},{\"id\":\"p\",\"pesId\":\"lkwq\"},{\"id\":\"tv\",\"pesId\":\"sdtcjbctvivuzqym\"}],\"analysisTypes\":[\"wogtgitsq\"],\"type\":\"vbrzcdb\",\"score\":84.15396},\"dataset\":[{\"table\":{\"tableName\":\"cxmxeatkdb\",\"columns\":[{}],\"rows\":[\"datajyibqbna\",\"datamhjrm\",\"datau\",\"datamaxljalfihcj\"]},\"renderingProperties\":{\"type\":1106408371,\"title\":\"nc\",\"description\":\"xxqcwgaxf\",\"isVisible\":true}},{\"table\":{\"tableName\":\"okzwjjzrlt\",\"columns\":[{}],\"rows\":[\"datayyfytpqsixymm\",\"dataujivyqlkjuvsm\"]},\"renderingProperties\":{\"type\":921930501,\"title\":\"oyovwz\",\"description\":\"pqvyb\",\"isVisible\":false}},{\"table\":{\"tableName\":\"x\",\"columns\":[{},{}],\"rows\":[\"datat\",\"dataubseskvcuartr\",\"dataunlpirykycndz\"]},\"renderingProperties\":{\"type\":1017219676,\"title\":\"reuykbbmnwagl\",\"description\":\"xoe\",\"isVisible\":true}}],\"status\":{\"message\":\"nfwmyymvqdbpb\",\"statusId\":1400688599},\"dataProviderMetadata\":{\"providerName\":\"vezcrcssbzhdd\",\"propertyBag\":[{\"name\":\"qfblhkalehpa\",\"value\":\"wugiqjti\"},{\"name\":\"qgdm\",\"value\":\"i\"}]}},\"id\":\"teajohiyg\",\"name\":\"pnbonhpcz\",\"type\":\"kmktpvwxqcseh\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Diagnostics> response = manager.containerAppsDiagnostics()
            .listDetectors("dfaifyzyzeyuube", "ds", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("wogtgitsq", response.iterator().next().properties().metadata().analysisTypes().get(0));
        Assertions.assertEquals("cxmxeatkdb",
            response.iterator().next().properties().dataset().get(0).table().tableName());
        Assertions.assertEquals(1106408371,
            response.iterator().next().properties().dataset().get(0).renderingProperties().type());
        Assertions.assertEquals("nc",
            response.iterator().next().properties().dataset().get(0).renderingProperties().title());
        Assertions.assertEquals("xxqcwgaxf",
            response.iterator().next().properties().dataset().get(0).renderingProperties().description());
        Assertions
            .assertTrue(response.iterator().next().properties().dataset().get(0).renderingProperties().isVisible());
        Assertions.assertEquals("nfwmyymvqdbpb", response.iterator().next().properties().status().message());
        Assertions.assertEquals(1400688599, response.iterator().next().properties().status().statusId());
        Assertions.assertEquals("vezcrcssbzhdd",
            response.iterator().next().properties().dataProviderMetadata().providerName());
        Assertions.assertEquals("qfblhkalehpa",
            response.iterator().next().properties().dataProviderMetadata().propertyBag().get(0).name());
        Assertions.assertEquals("wugiqjti",
            response.iterator().next().properties().dataProviderMetadata().propertyBag().get(0).value());
    }
}
