// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcontainers.ContainerAppsApiManager;
import com.azure.resourcemanager.appcontainers.models.Diagnostics;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ContainerAppsDiagnosticsListDetectorsMockTests {
    @Test
    public void testListDetectors() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"metadata\":{\"id\":\"kshloje\",\"name\":\"hzic\",\"description\":\"fdjhyaaknyukibxi\",\"author\":\"hphzwxqt\",\"category\":\"piilhvtozy\",\"supportTopicList\":[{\"id\":\"nxkbylhyyxgf\",\"pesId\":\"lvqzrwtrdgscnv\"},{\"id\":\"on\",\"pesId\":\"nwxlwm\"}],\"analysisTypes\":[\"ohxp\",\"hceopvkvtwf\"],\"type\":\"sobpbo\",\"score\":59.184067},\"dataset\":[{\"table\":{\"tableName\":\"yarnggcjfwblqhxk\",\"columns\":[{},{}],\"rows\":[\"datalmu\",\"datapyvaosdkluwzx\",\"dataygz\"]},\"renderingProperties\":{\"type\":626276272,\"title\":\"jhubno\",\"description\":\"uqisqsqkpd\",\"isVisible\":true}}],\"status\":{\"message\":\"pnml\",\"statusId\":1433905892},\"dataProviderMetadata\":{\"providerName\":\"szpm\",\"propertyBag\":[{\"name\":\"vrdmvxyrxdh\",\"value\":\"qojbxao\"},{\"name\":\"gbzxmbtplefoioy\",\"value\":\"oxznvgvd\"},{\"name\":\"uuvdawsx\",\"value\":\"szbknimxl\"},{\"name\":\"erxrzutylcurza\",\"value\":\"nbxqaeht\"}]}},\"id\":\"jmbnvynf\",\"name\":\"ooeactedc\",\"type\":\"lsk\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Diagnostics> response = manager.containerAppsDiagnostics()
            .listDetectors("hzqjjtsmuydqfttk", "cybdueurgm", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ohxp", response.iterator().next().properties().metadata().analysisTypes().get(0));
        Assertions.assertEquals("yarnggcjfwblqhxk",
            response.iterator().next().properties().dataset().get(0).table().tableName());
        Assertions.assertEquals(626276272,
            response.iterator().next().properties().dataset().get(0).renderingProperties().type());
        Assertions.assertEquals("jhubno",
            response.iterator().next().properties().dataset().get(0).renderingProperties().title());
        Assertions.assertEquals("uqisqsqkpd",
            response.iterator().next().properties().dataset().get(0).renderingProperties().description());
        Assertions
            .assertTrue(response.iterator().next().properties().dataset().get(0).renderingProperties().isVisible());
        Assertions.assertEquals("pnml", response.iterator().next().properties().status().message());
        Assertions.assertEquals(1433905892, response.iterator().next().properties().status().statusId());
        Assertions.assertEquals("szpm", response.iterator().next().properties().dataProviderMetadata().providerName());
        Assertions.assertEquals("vrdmvxyrxdh",
            response.iterator().next().properties().dataProviderMetadata().propertyBag().get(0).name());
        Assertions.assertEquals("qojbxao",
            response.iterator().next().properties().dataProviderMetadata().propertyBag().get(0).value());
    }
}
