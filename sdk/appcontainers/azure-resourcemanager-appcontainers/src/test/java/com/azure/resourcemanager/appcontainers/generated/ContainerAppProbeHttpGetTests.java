// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet;
import com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGetHttpHeadersItem;
import com.azure.resourcemanager.appcontainers.models.Scheme;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ContainerAppProbeHttpGetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ContainerAppProbeHttpGet model = BinaryData.fromString(
            "{\"host\":\"shfssnrbgyef\",\"httpHeaders\":[{\"name\":\"sgaojfmwncot\",\"value\":\"rfh\"},{\"name\":\"rctym\",\"value\":\"xoftpipiwyczu\"}],\"path\":\"a\",\"port\":850210589,\"scheme\":\"HTTP\"}")
            .toObject(ContainerAppProbeHttpGet.class);
        Assertions.assertEquals("shfssnrbgyef", model.host());
        Assertions.assertEquals("sgaojfmwncot", model.httpHeaders().get(0).name());
        Assertions.assertEquals("rfh", model.httpHeaders().get(0).value());
        Assertions.assertEquals("a", model.path());
        Assertions.assertEquals(850210589, model.port());
        Assertions.assertEquals(Scheme.HTTP, model.scheme());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ContainerAppProbeHttpGet model
            = new ContainerAppProbeHttpGet().withHost("shfssnrbgyef")
                .withHttpHeaders(Arrays.asList(
                    new ContainerAppProbeHttpGetHttpHeadersItem().withName("sgaojfmwncot").withValue("rfh"),
                    new ContainerAppProbeHttpGetHttpHeadersItem().withName("rctym").withValue("xoftpipiwyczu")))
                .withPath("a").withPort(850210589).withScheme(Scheme.HTTP);
        model = BinaryData.fromObject(model).toObject(ContainerAppProbeHttpGet.class);
        Assertions.assertEquals("shfssnrbgyef", model.host());
        Assertions.assertEquals("sgaojfmwncot", model.httpHeaders().get(0).name());
        Assertions.assertEquals("rfh", model.httpHeaders().get(0).value());
        Assertions.assertEquals("a", model.path());
        Assertions.assertEquals(850210589, model.port());
        Assertions.assertEquals(Scheme.HTTP, model.scheme());
    }
}
