// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet;
import com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGetHttpHeadersItem;
import com.azure.resourcemanager.appcontainers.models.Scheme;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ContainerAppProbeHttpGetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ContainerAppProbeHttpGet model = BinaryData.fromString(
            "{\"host\":\"qkagfhsxt\",\"httpHeaders\":[{\"name\":\"gzxnfaazpxdtnk\",\"value\":\"mkqjj\"},{\"name\":\"wuenvr\",\"value\":\"pyouaibrebqaays\"}],\"path\":\"ixqtn\",\"port\":1555595528,\"scheme\":\"HTTP\"}")
            .toObject(ContainerAppProbeHttpGet.class);
        Assertions.assertEquals("qkagfhsxt", model.host());
        Assertions.assertEquals("gzxnfaazpxdtnk", model.httpHeaders().get(0).name());
        Assertions.assertEquals("mkqjj", model.httpHeaders().get(0).value());
        Assertions.assertEquals("ixqtn", model.path());
        Assertions.assertEquals(1555595528, model.port());
        Assertions.assertEquals(Scheme.HTTP, model.scheme());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ContainerAppProbeHttpGet model = new ContainerAppProbeHttpGet().withHost("qkagfhsxt")
            .withHttpHeaders(Arrays.asList(
                new ContainerAppProbeHttpGetHttpHeadersItem().withName("gzxnfaazpxdtnk").withValue("mkqjj"),
                new ContainerAppProbeHttpGetHttpHeadersItem().withName("wuenvr").withValue("pyouaibrebqaays")))
            .withPath("ixqtn")
            .withPort(1555595528)
            .withScheme(Scheme.HTTP);
        model = BinaryData.fromObject(model).toObject(ContainerAppProbeHttpGet.class);
        Assertions.assertEquals("qkagfhsxt", model.host());
        Assertions.assertEquals("gzxnfaazpxdtnk", model.httpHeaders().get(0).name());
        Assertions.assertEquals("mkqjj", model.httpHeaders().get(0).value());
        Assertions.assertEquals("ixqtn", model.path());
        Assertions.assertEquals(1555595528, model.port());
        Assertions.assertEquals(Scheme.HTTP, model.scheme());
    }
}
