// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet;
import com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGetHttpHeadersItem;
import com.azure.resourcemanager.appcontainers.models.Scheme;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ContainerAppProbeHttpGetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ContainerAppProbeHttpGet model = BinaryData.fromString(
            "{\"host\":\"hrdgoihxumwcto\",\"httpHeaders\":[{\"name\":\"jl\",\"value\":\"udfdlwgg\"}],\"path\":\"sb\",\"port\":676587800,\"scheme\":\"HTTP\"}")
            .toObject(ContainerAppProbeHttpGet.class);
        Assertions.assertEquals("hrdgoihxumwcto", model.host());
        Assertions.assertEquals("jl", model.httpHeaders().get(0).name());
        Assertions.assertEquals("udfdlwgg", model.httpHeaders().get(0).value());
        Assertions.assertEquals("sb", model.path());
        Assertions.assertEquals(676587800, model.port());
        Assertions.assertEquals(Scheme.HTTP, model.scheme());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ContainerAppProbeHttpGet model = new ContainerAppProbeHttpGet().withHost("hrdgoihxumwcto")
            .withHttpHeaders(
                Arrays.asList(new ContainerAppProbeHttpGetHttpHeadersItem().withName("jl").withValue("udfdlwgg")))
            .withPath("sb")
            .withPort(676587800)
            .withScheme(Scheme.HTTP);
        model = BinaryData.fromObject(model).toObject(ContainerAppProbeHttpGet.class);
        Assertions.assertEquals("hrdgoihxumwcto", model.host());
        Assertions.assertEquals("jl", model.httpHeaders().get(0).name());
        Assertions.assertEquals("udfdlwgg", model.httpHeaders().get(0).value());
        Assertions.assertEquals("sb", model.path());
        Assertions.assertEquals(676587800, model.port());
        Assertions.assertEquals(Scheme.HTTP, model.scheme());
    }
}
