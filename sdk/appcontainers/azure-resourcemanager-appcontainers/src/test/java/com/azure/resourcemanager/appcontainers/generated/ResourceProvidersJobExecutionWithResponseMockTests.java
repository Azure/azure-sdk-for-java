// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcontainers.ContainerAppsApiManager;
import com.azure.resourcemanager.appcontainers.models.JobExecution;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ResourceProvidersJobExecutionWithResponseMockTests {
    @Test
    public void testJobExecutionWithResponse() throws Exception {
        String responseStr
            = "{\"name\":\"ltvdhqnufbx\",\"id\":\"iibntojo\",\"type\":\"nybydhuihaouwud\",\"properties\":{\"status\":\"Degraded\",\"startTime\":\"2021-09-23T08:57:31Z\",\"endTime\":\"2021-09-06T22:13:13Z\",\"template\":{\"containers\":[{\"image\":\"umo\",\"name\":\"ircamqprlo\",\"command\":[\"gejcvjkjyczc\",\"tag\",\"lajdyoljeqyxq\",\"mzsizzhravrcjk\"],\"args\":[\"gqb\",\"cxhnqxgzxlerm\",\"merghski\"],\"env\":[{},{},{}],\"resources\":{}},{\"image\":\"pkcbkfukdljq\",\"name\":\"tsdyds\",\"command\":[\"afyalo\",\"ww\"],\"args\":[\"znyufpqzs\",\"ifgufyjfdkqiyv\",\"djokgwesym\",\"qh\"],\"env\":[{}],\"resources\":{}},{\"image\":\"lpe\",\"name\":\"zn\",\"command\":[\"eaujq\",\"bgsimwejlwbkbp\",\"zobdwbcp\"],\"args\":[\"wkuh\"],\"env\":[{},{},{},{}],\"resources\":{}},{\"image\":\"czkfwfat\",\"name\":\"wphn\",\"command\":[\"vdwgtqcume\",\"saaqgoq\"],\"args\":[\"uy\",\"sbskowkrbhz\",\"rb\"],\"env\":[{},{},{},{}],\"resources\":{}}],\"initContainers\":[{\"image\":\"iuasfgq\",\"name\":\"cyhfaimqvdru\",\"command\":[\"gyfpeoehgfmqmsk\",\"ixvlz\",\"xplhpeva\",\"yntvzjyielbq\"],\"args\":[\"bqvknmpecqxgiq\"],\"env\":[{},{},{},{}],\"resources\":{}},{\"image\":\"bn\",\"name\":\"stlpwqp\",\"command\":[\"jkht\",\"psvyouweuiyxfw\",\"ztsm\"],\"args\":[\"evyllznfhkqyt\"],\"env\":[{},{},{}],\"resources\":{}},{\"image\":\"opgfzdgjfcy\",\"name\":\"svloyyhigq\",\"command\":[\"uqw\",\"ajquzxpixhyoi\"],\"args\":[\"dbgsosc\"],\"env\":[{},{},{},{}],\"resources\":{}}]},\"detailedStatus\":{\"replicas\":[{\"name\":\"ennmf\",\"containers\":[{},{},{},{}]},{\"name\":\"nrtekw\",\"containers\":[{}]},{\"name\":\"ro\",\"containers\":[{},{},{},{}]},{\"name\":\"d\",\"containers\":[{},{}]}]}}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        JobExecution response = manager.resourceProviders()
            .jobExecutionWithResponse("fedsbgz", "ncoinmphymc", "i", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ltvdhqnufbx", response.name());
        Assertions.assertEquals("iibntojo", response.id());
        Assertions.assertEquals("nybydhuihaouwud", response.type());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-23T08:57:31Z"), response.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-06T22:13:13Z"), response.endTime());
        Assertions.assertEquals("umo", response.template().containers().get(0).image());
        Assertions.assertEquals("ircamqprlo", response.template().containers().get(0).name());
        Assertions.assertEquals("gejcvjkjyczc", response.template().containers().get(0).command().get(0));
        Assertions.assertEquals("gqb", response.template().containers().get(0).args().get(0));
        Assertions.assertEquals("iuasfgq", response.template().initContainers().get(0).image());
        Assertions.assertEquals("cyhfaimqvdru", response.template().initContainers().get(0).name());
        Assertions.assertEquals("gyfpeoehgfmqmsk", response.template().initContainers().get(0).command().get(0));
        Assertions.assertEquals("bqvknmpecqxgiq", response.template().initContainers().get(0).args().get(0));
        Assertions.assertEquals("ennmf", response.detailedStatus().replicas().get(0).name());
    }
}
