// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcontainers.ContainerAppsApiManager;
import com.azure.resourcemanager.appcontainers.models.JobExecution;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ResourceProvidersJobExecutionWithResponseMockTests {
    @Test
    public void testJobExecutionWithResponse() throws Exception {
        String responseStr
            = "{\"name\":\"pcrtn\",\"id\":\"uefxxijtebdveywe\",\"type\":\"rhlolmcnwepfg\",\"properties\":{\"status\":\"Degraded\",\"startTime\":\"2021-04-28T00:59:31Z\",\"endTime\":\"2021-10-29T10:03:44Z\",\"template\":{\"containers\":[{\"image\":\"etlrnrdetawevx\",\"name\":\"uek\",\"command\":[\"jzvdovbrblerlp\"],\"args\":[\"qccddcbny\",\"djccxwbpwyykdi\",\"qzlrzndasdn\"],\"env\":[{},{}],\"resources\":{}},{\"image\":\"mvyt\",\"name\":\"iqlarhqtwvcaze\",\"command\":[\"dzffzjwztsmpchg\",\"ryelgfyatigfg\"],\"args\":[\"kdknczgorywnvo\"],\"env\":[{}],\"resources\":{}},{\"image\":\"evdlh\",\"name\":\"bkarbpyhssr\",\"command\":[\"pkpkocm\",\"ccebxxopyicyvspe\",\"lhwyykgvrccpumd\"],\"args\":[\"ajk\",\"dyd\",\"tpfcudvafnbfbqv\",\"nqnxhgkordwzej\"],\"env\":[{},{}],\"resources\":{}}],\"initContainers\":[{\"image\":\"mbpwdludayp\",\"name\":\"didwmtffbvtzldzc\",\"command\":[\"agwn\",\"zuvigvl\"],\"args\":[\"rbzakpjtcqr\",\"qpojpsucmximc\"],\"env\":[{}],\"resources\":{}},{\"image\":\"qjgsa\",\"name\":\"yv\",\"command\":[\"gngc\",\"usxhircpg\",\"vsvkkjbjolpyo\",\"lkvuznadvh\"],\"args\":[\"eoigowxxbhtpsyio\",\"emqwtq\",\"zzgyksikawan\"],\"env\":[{},{},{},{}],\"resources\":{}},{\"image\":\"gjqcrbkompnbnfg\",\"name\":\"e\",\"command\":[\"epgcmahiwf\",\"yawkch\",\"apitskshfyftt\",\"bjepzwhj\"],\"args\":[\"dgbggcjxzh\",\"livwehsud\",\"mymbhdosmbng\",\"q\"],\"env\":[{},{},{},{}],\"resources\":{}}]},\"detailedStatus\":{\"replicas\":[{\"name\":\"dmxexatmdmnrsenx\",\"containers\":[{},{},{},{}]}]}}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerAppsApiManager manager = ContainerAppsApiManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        JobExecution response = manager.resourceProviders()
            .jobExecutionWithResponse("nwnghojov", "eyym", "cjixxf", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("pcrtn", response.name());
        Assertions.assertEquals("uefxxijtebdveywe", response.id());
        Assertions.assertEquals("rhlolmcnwepfg", response.type());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-28T00:59:31Z"), response.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-29T10:03:44Z"), response.endTime());
        Assertions.assertEquals("etlrnrdetawevx", response.template().containers().get(0).image());
        Assertions.assertEquals("uek", response.template().containers().get(0).name());
        Assertions.assertEquals("jzvdovbrblerlp", response.template().containers().get(0).command().get(0));
        Assertions.assertEquals("qccddcbny", response.template().containers().get(0).args().get(0));
        Assertions.assertEquals("mbpwdludayp", response.template().initContainers().get(0).image());
        Assertions.assertEquals("didwmtffbvtzldzc", response.template().initContainers().get(0).name());
        Assertions.assertEquals("agwn", response.template().initContainers().get(0).command().get(0));
        Assertions.assertEquals("rbzakpjtcqr", response.template().initContainers().get(0).args().get(0));
        Assertions.assertEquals("dmxexatmdmnrsenx", response.detailedStatus().replicas().get(0).name());
    }
}
