// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.DiagnosticsInner;
import com.azure.resourcemanager.appcontainers.models.DiagnosticDataProviderMetadata;
import com.azure.resourcemanager.appcontainers.models.DiagnosticsDataApiResponse;
import com.azure.resourcemanager.appcontainers.models.DiagnosticsDefinition;
import com.azure.resourcemanager.appcontainers.models.DiagnosticsProperties;
import com.azure.resourcemanager.appcontainers.models.DiagnosticsStatus;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DiagnosticsInnerTests {
    @Test
    public void testDeserialize() {
        DiagnosticsInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"metadata\":{\"id\":\"fmviklby\",\"name\":\"khbejdznxc\",\"description\":\"srhnjivo\",\"author\":\"tnovqfzgemjdftul\",\"category\":\"tduceamt\",\"supportTopicList\":[],\"analysisTypes\":[\"m\"],\"type\":\"wcw\",\"score\":57.057808},\"dataset\":[{},{},{}],\"status\":{\"message\":\"sv\",\"statusId\":750225964},\"dataProviderMetadata\":{\"providerName\":\"vk\",\"propertyBag\":[]}},\"id\":\"ql\",\"name\":\"yxgtczh\",\"type\":\"ydbsd\"}")
                .toObject(DiagnosticsInner.class);
        Assertions.assertEquals("m", model.properties().metadata().analysisTypes().get(0));
        Assertions.assertEquals("sv", model.properties().status().message());
        Assertions.assertEquals(750225964, model.properties().status().statusId());
        Assertions.assertEquals("vk", model.properties().dataProviderMetadata().providerName());
    }

    @Test
    public void testSerialize() {
        DiagnosticsInner model =
            new DiagnosticsInner()
                .withProperties(
                    new DiagnosticsProperties()
                        .withMetadata(
                            new DiagnosticsDefinition()
                                .withSupportTopicList(Arrays.asList())
                                .withAnalysisTypes(Arrays.asList("m")))
                        .withDataset(
                            Arrays
                                .asList(
                                    new DiagnosticsDataApiResponse(),
                                    new DiagnosticsDataApiResponse(),
                                    new DiagnosticsDataApiResponse()))
                        .withStatus(new DiagnosticsStatus().withMessage("sv").withStatusId(750225964))
                        .withDataProviderMetadata(
                            new DiagnosticDataProviderMetadata()
                                .withProviderName("vk")
                                .withPropertyBag(Arrays.asList())));
        model = BinaryData.fromObject(model).toObject(DiagnosticsInner.class);
        Assertions.assertEquals("m", model.properties().metadata().analysisTypes().get(0));
        Assertions.assertEquals("sv", model.properties().status().message());
        Assertions.assertEquals(750225964, model.properties().status().statusId());
        Assertions.assertEquals("vk", model.properties().dataProviderMetadata().providerName());
    }
}
