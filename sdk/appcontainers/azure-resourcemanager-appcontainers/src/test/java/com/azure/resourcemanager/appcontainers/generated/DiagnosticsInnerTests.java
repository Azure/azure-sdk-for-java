// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.DiagnosticsInner;
import com.azure.resourcemanager.appcontainers.models.DiagnosticDataProviderMetadata;
import com.azure.resourcemanager.appcontainers.models.DiagnosticDataProviderMetadataPropertyBagItem;
import com.azure.resourcemanager.appcontainers.models.DiagnosticDataTableResponseColumn;
import com.azure.resourcemanager.appcontainers.models.DiagnosticDataTableResponseObject;
import com.azure.resourcemanager.appcontainers.models.DiagnosticRendering;
import com.azure.resourcemanager.appcontainers.models.DiagnosticsDataApiResponse;
import com.azure.resourcemanager.appcontainers.models.DiagnosticsDefinition;
import com.azure.resourcemanager.appcontainers.models.DiagnosticsProperties;
import com.azure.resourcemanager.appcontainers.models.DiagnosticsStatus;
import com.azure.resourcemanager.appcontainers.models.DiagnosticSupportTopic;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DiagnosticsInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DiagnosticsInner model = BinaryData.fromString(
            "{\"properties\":{\"metadata\":{\"id\":\"s\",\"name\":\"eq\",\"description\":\"arvlagunbt\",\"author\":\"ebwlnbmhyreeudzq\",\"category\":\"bpdqmjxlyy\",\"supportTopicList\":[{\"id\":\"ouwtl\",\"pesId\":\"jyuojqtobaxkjeyt\"},{\"id\":\"lbfjkwr\",\"pesId\":\"nkqbhsyrq\"},{\"id\":\"jqhden\",\"pesId\":\"ulkpakd\"}],\"analysisTypes\":[\"mjnnawtq\",\"bpxuckpggqoweyi\",\"dhlisngwflqqmpi\"],\"type\":\"uwnpqxpxiwfcng\",\"score\":17.444016},\"dataset\":[{\"table\":{\"tableName\":\"xtmkzjvkviir\",\"columns\":[{},{},{},{}],\"rows\":[\"datawsdpgratzvzb\",\"datalbyvictctbrxkjzw\"]},\"renderingProperties\":{\"type\":734526411,\"title\":\"mshkwfbkgo\",\"description\":\"wopdbydpiz\",\"isVisible\":true}}],\"status\":{\"message\":\"apxbi\",\"statusId\":923780636},\"dataProviderMetadata\":{\"providerName\":\"j\",\"propertyBag\":[{\"name\":\"mfcttux\",\"value\":\"yilflqoiquvrehmr\"},{\"name\":\"hvsujztc\",\"value\":\"tqjtwhauu\"},{\"name\":\"prnjletlxsmr\",\"value\":\"do\"},{\"name\":\"fa\",\"value\":\"waziy\"}]}},\"id\":\"nlqwzdvpiwhx\",\"name\":\"szdtmaajquh\",\"type\":\"xylrjvmtygjbmz\"}")
            .toObject(DiagnosticsInner.class);
        Assertions.assertEquals("mjnnawtq", model.properties().metadata().analysisTypes().get(0));
        Assertions.assertEquals("xtmkzjvkviir", model.properties().dataset().get(0).table().tableName());
        Assertions.assertEquals(734526411, model.properties().dataset().get(0).renderingProperties().type());
        Assertions.assertEquals("mshkwfbkgo", model.properties().dataset().get(0).renderingProperties().title());
        Assertions.assertEquals("wopdbydpiz", model.properties().dataset().get(0).renderingProperties().description());
        Assertions.assertEquals(true, model.properties().dataset().get(0).renderingProperties().isVisible());
        Assertions.assertEquals("apxbi", model.properties().status().message());
        Assertions.assertEquals(923780636, model.properties().status().statusId());
        Assertions.assertEquals("j", model.properties().dataProviderMetadata().providerName());
        Assertions.assertEquals("mfcttux", model.properties().dataProviderMetadata().propertyBag().get(0).name());
        Assertions.assertEquals("yilflqoiquvrehmr",
            model.properties().dataProviderMetadata().propertyBag().get(0).value());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DiagnosticsInner model
            = new DiagnosticsInner()
                .withProperties(new DiagnosticsProperties()
                    .withMetadata(new DiagnosticsDefinition()
                        .withSupportTopicList(Arrays.asList(new DiagnosticSupportTopic(), new DiagnosticSupportTopic(),
                            new DiagnosticSupportTopic()))
                        .withAnalysisTypes(Arrays.asList("mjnnawtq", "bpxuckpggqoweyi", "dhlisngwflqqmpi")))
                    .withDataset(Arrays.asList(new DiagnosticsDataApiResponse()
                        .withTable(new DiagnosticDataTableResponseObject().withTableName("xtmkzjvkviir")
                            .withColumns(Arrays.asList(new DiagnosticDataTableResponseColumn(),
                                new DiagnosticDataTableResponseColumn(), new DiagnosticDataTableResponseColumn(),
                                new DiagnosticDataTableResponseColumn()))
                            .withRows(Arrays.asList("datawsdpgratzvzb", "datalbyvictctbrxkjzw")))
                        .withRenderingProperties(new DiagnosticRendering().withType(734526411)
                            .withTitle("mshkwfbkgo")
                            .withDescription("wopdbydpiz")
                            .withIsVisible(true))))
                    .withStatus(new DiagnosticsStatus().withMessage("apxbi").withStatusId(923780636))
                    .withDataProviderMetadata(new DiagnosticDataProviderMetadata().withProviderName("j")
                        .withPropertyBag(Arrays.asList(new DiagnosticDataProviderMetadataPropertyBagItem()
                            .withName("mfcttux")
                            .withValue("yilflqoiquvrehmr"),
                            new DiagnosticDataProviderMetadataPropertyBagItem().withName("hvsujztc")
                                .withValue("tqjtwhauu"),
                            new DiagnosticDataProviderMetadataPropertyBagItem().withName("prnjletlxsmr")
                                .withValue("do"),
                            new DiagnosticDataProviderMetadataPropertyBagItem().withName("fa").withValue("waziy")))));
        model = BinaryData.fromObject(model).toObject(DiagnosticsInner.class);
        Assertions.assertEquals("mjnnawtq", model.properties().metadata().analysisTypes().get(0));
        Assertions.assertEquals("xtmkzjvkviir", model.properties().dataset().get(0).table().tableName());
        Assertions.assertEquals(734526411, model.properties().dataset().get(0).renderingProperties().type());
        Assertions.assertEquals("mshkwfbkgo", model.properties().dataset().get(0).renderingProperties().title());
        Assertions.assertEquals("wopdbydpiz", model.properties().dataset().get(0).renderingProperties().description());
        Assertions.assertEquals(true, model.properties().dataset().get(0).renderingProperties().isVisible());
        Assertions.assertEquals("apxbi", model.properties().status().message());
        Assertions.assertEquals(923780636, model.properties().status().statusId());
        Assertions.assertEquals("j", model.properties().dataProviderMetadata().providerName());
        Assertions.assertEquals("mfcttux", model.properties().dataProviderMetadata().propertyBag().get(0).name());
        Assertions.assertEquals("yilflqoiquvrehmr",
            model.properties().dataProviderMetadata().propertyBag().get(0).value());
    }
}
