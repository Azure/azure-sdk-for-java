// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.DiagnosticsInner;
import com.azure.resourcemanager.appcontainers.models.DiagnosticDataProviderMetadata;
import com.azure.resourcemanager.appcontainers.models.DiagnosticDataProviderMetadataPropertyBagItem;
import com.azure.resourcemanager.appcontainers.models.DiagnosticDataTableResponseColumn;
import com.azure.resourcemanager.appcontainers.models.DiagnosticDataTableResponseObject;
import com.azure.resourcemanager.appcontainers.models.DiagnosticRendering;
import com.azure.resourcemanager.appcontainers.models.DiagnosticSupportTopic;
import com.azure.resourcemanager.appcontainers.models.DiagnosticsDataApiResponse;
import com.azure.resourcemanager.appcontainers.models.DiagnosticsDefinition;
import com.azure.resourcemanager.appcontainers.models.DiagnosticsProperties;
import com.azure.resourcemanager.appcontainers.models.DiagnosticsStatus;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DiagnosticsInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DiagnosticsInner model = BinaryData.fromString(
            "{\"properties\":{\"metadata\":{\"id\":\"shejjtbxqm\",\"name\":\"uxlxqzvners\",\"description\":\"cucrwnamikze\",\"author\":\"qbsms\",\"category\":\"iqg\",\"supportTopicList\":[{\"id\":\"kzruswh\",\"pesId\":\"czznvfbycjsxj\"},{\"id\":\"i\",\"pesId\":\"vumwmxqh\"}],\"analysisTypes\":[\"noamldsehaohdj\",\"hflzokxco\",\"pelnjetag\"],\"type\":\"sxoa\",\"score\":38.990158},\"dataset\":[{\"table\":{\"tableName\":\"pbswvefloccsrm\",\"columns\":[{},{},{},{}],\"rows\":[\"dataipgawtxx\"]},\"renderingProperties\":{\"type\":2137168460,\"title\":\"xcjxgrytfmpcy\",\"description\":\"lrmcaykg\",\"isVisible\":true}},{\"table\":{\"tableName\":\"ztrksxwpndf\",\"columns\":[{},{}],\"rows\":[\"datanthjtwkjaosrxuzv\"]},\"renderingProperties\":{\"type\":1346105096,\"title\":\"cqiosmgbza\",\"description\":\"xqdlyrtltlapr\",\"isVisible\":false}}],\"status\":{\"message\":\"tbhjmznnbsoqe\",\"statusId\":1025410232},\"dataProviderMetadata\":{\"providerName\":\"vlagun\",\"propertyBag\":[{\"name\":\"ebwlnbmhyreeudzq\",\"value\":\"bpdqmjxlyy\"},{\"name\":\"lgouwtlmjj\",\"value\":\"ojqtobaxk\"}]}},\"id\":\"ytunlbfjkwr\",\"name\":\"snkq\",\"type\":\"hsyrqunj\"}")
            .toObject(DiagnosticsInner.class);
        Assertions.assertEquals("noamldsehaohdj", model.properties().metadata().analysisTypes().get(0));
        Assertions.assertEquals("pbswvefloccsrm", model.properties().dataset().get(0).table().tableName());
        Assertions.assertEquals(2137168460, model.properties().dataset().get(0).renderingProperties().type());
        Assertions.assertEquals("xcjxgrytfmpcy", model.properties().dataset().get(0).renderingProperties().title());
        Assertions.assertEquals("lrmcaykg", model.properties().dataset().get(0).renderingProperties().description());
        Assertions.assertTrue(model.properties().dataset().get(0).renderingProperties().isVisible());
        Assertions.assertEquals("tbhjmznnbsoqe", model.properties().status().message());
        Assertions.assertEquals(1025410232, model.properties().status().statusId());
        Assertions.assertEquals("vlagun", model.properties().dataProviderMetadata().providerName());
        Assertions.assertEquals("ebwlnbmhyreeudzq",
            model.properties().dataProviderMetadata().propertyBag().get(0).name());
        Assertions.assertEquals("bpdqmjxlyy", model.properties().dataProviderMetadata().propertyBag().get(0).value());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DiagnosticsInner model = new DiagnosticsInner().withProperties(new DiagnosticsProperties()
            .withMetadata(new DiagnosticsDefinition()
                .withSupportTopicList(Arrays.asList(new DiagnosticSupportTopic(), new DiagnosticSupportTopic()))
                .withAnalysisTypes(Arrays.asList("noamldsehaohdj", "hflzokxco", "pelnjetag")))
            .withDataset(Arrays.asList(
                new DiagnosticsDataApiResponse()
                    .withTable(new DiagnosticDataTableResponseObject().withTableName("pbswvefloccsrm")
                        .withColumns(Arrays.asList(new DiagnosticDataTableResponseColumn(),
                            new DiagnosticDataTableResponseColumn(), new DiagnosticDataTableResponseColumn(),
                            new DiagnosticDataTableResponseColumn()))
                        .withRows(Arrays.asList("dataipgawtxx")))
                    .withRenderingProperties(new DiagnosticRendering().withType(2137168460)
                        .withTitle("xcjxgrytfmpcy")
                        .withDescription("lrmcaykg")
                        .withIsVisible(true)),
                new DiagnosticsDataApiResponse()
                    .withTable(new DiagnosticDataTableResponseObject().withTableName("ztrksxwpndf")
                        .withColumns(Arrays.asList(new DiagnosticDataTableResponseColumn(),
                            new DiagnosticDataTableResponseColumn()))
                        .withRows(Arrays.asList("datanthjtwkjaosrxuzv")))
                    .withRenderingProperties(new DiagnosticRendering().withType(1346105096)
                        .withTitle("cqiosmgbza")
                        .withDescription("xqdlyrtltlapr")
                        .withIsVisible(false))))
            .withStatus(new DiagnosticsStatus().withMessage("tbhjmznnbsoqe").withStatusId(1025410232))
            .withDataProviderMetadata(new DiagnosticDataProviderMetadata().withProviderName("vlagun")
                .withPropertyBag(Arrays.asList(
                    new DiagnosticDataProviderMetadataPropertyBagItem().withName("ebwlnbmhyreeudzq")
                        .withValue("bpdqmjxlyy"),
                    new DiagnosticDataProviderMetadataPropertyBagItem().withName("lgouwtlmjj")
                        .withValue("ojqtobaxk")))));
        model = BinaryData.fromObject(model).toObject(DiagnosticsInner.class);
        Assertions.assertEquals("noamldsehaohdj", model.properties().metadata().analysisTypes().get(0));
        Assertions.assertEquals("pbswvefloccsrm", model.properties().dataset().get(0).table().tableName());
        Assertions.assertEquals(2137168460, model.properties().dataset().get(0).renderingProperties().type());
        Assertions.assertEquals("xcjxgrytfmpcy", model.properties().dataset().get(0).renderingProperties().title());
        Assertions.assertEquals("lrmcaykg", model.properties().dataset().get(0).renderingProperties().description());
        Assertions.assertTrue(model.properties().dataset().get(0).renderingProperties().isVisible());
        Assertions.assertEquals("tbhjmznnbsoqe", model.properties().status().message());
        Assertions.assertEquals(1025410232, model.properties().status().statusId());
        Assertions.assertEquals("vlagun", model.properties().dataProviderMetadata().providerName());
        Assertions.assertEquals("ebwlnbmhyreeudzq",
            model.properties().dataProviderMetadata().propertyBag().get(0).name());
        Assertions.assertEquals("bpdqmjxlyy", model.properties().dataProviderMetadata().propertyBag().get(0).value());
    }
}
