// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.Container;
import com.azure.resourcemanager.appcontainers.models.ContainerResources;
import com.azure.resourcemanager.appcontainers.models.InitContainer;
import com.azure.resourcemanager.appcontainers.models.Scale;
import com.azure.resourcemanager.appcontainers.models.ScaleRule;
import com.azure.resourcemanager.appcontainers.models.StorageType;
import com.azure.resourcemanager.appcontainers.models.Template;
import com.azure.resourcemanager.appcontainers.models.Volume;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class TemplateTests {
    @Test
    public void testDeserialize() {
        Template model =
            BinaryData
                .fromString(
                    "{\"revisionSuffix\":\"mcqibycnojv\",\"initContainers\":[{\"image\":\"fqsgzvahapjy\",\"name\":\"pvgqzcjrvxdjzlm\",\"command\":[\"kvugfhzovawjvzun\",\"uthnnprnxipeilpj\",\"uaejxdultsk\"],\"args\":[\"tdzumveekgpw\",\"zuhkfpbsjyof\",\"xl\"],\"env\":[],\"resources\":{\"cpu\":63.45978205100479,\"memory\":\"waboe\",\"ephemeralStorage\":\"v\"},\"volumeMounts\":[]},{\"image\":\"smv\",\"name\":\"wyjsflhhcaalnjix\",\"command\":[\"yaw\",\"oyaqcslyjpkiid\"],\"args\":[\"xznelixhnrztf\",\"lhbnxkna\",\"aulppggd\"],\"env\":[],\"resources\":{\"cpu\":62.44640700433306,\"memory\":\"ropuhpigv\",\"ephemeralStorage\":\"ylgqgitxmedjvcsl\"},\"volumeMounts\":[]},{\"image\":\"wncwzzhxgktrmg\",\"name\":\"napkteoellw\",\"command\":[\"d\",\"gpfqbuace\",\"pzfqrhhuaoppp\",\"qeqxo\"],\"args\":[\"ahzxctobgbk\",\"moizpos\",\"mgrcfbu\"],\"env\":[],\"resources\":{\"cpu\":39.820918987867984,\"memory\":\"kxbpvj\",\"ephemeralStorage\":\"jhxxjyn\"},\"volumeMounts\":[]},{\"image\":\"vkr\",\"name\":\"wbxqzvszjfau\",\"command\":[\"dxxiv\",\"tvtc\",\"aqtdoqmcbx\",\"wvxysl\"],\"args\":[\"sfxobl\",\"tkblmpewww\",\"bkrvrnsvshqj\"],\"env\":[],\"resources\":{\"cpu\":26.217415829732616,\"memory\":\"ovasrruvwbhsqfsu\",\"ephemeralStorage\":\"gjb\"},\"volumeMounts\":[]}],\"containers\":[{\"probes\":[],\"image\":\"rfbjf\",\"name\":\"w\",\"command\":[\"t\",\"tpvjzbexilzznfqq\",\"vwpm\",\"taruoujmkcj\"],\"args\":[\"ytjrybnwjewgdr\",\"ervnaenqpehi\",\"doy\",\"mifthnzdnd\"],\"env\":[],\"resources\":{\"cpu\":9.874823960807245,\"memory\":\"gynduha\",\"ephemeralStorage\":\"qlkth\"},\"volumeMounts\":[]},{\"probes\":[],\"image\":\"bgycduiertgccym\",\"name\":\"olpsslqlf\",\"command\":[\"n\",\"bglzpswi\",\"d\"],\"args\":[\"yhz\",\"xssadbzmnvdf\"],\"env\":[],\"resources\":{\"cpu\":6.678154863771269,\"memory\":\"xzb\",\"ephemeralStorage\":\"blylpstdbh\"},\"volumeMounts\":[]},{\"probes\":[],\"image\":\"zucerscdntnev\",\"name\":\"wjmy\",\"command\":[\"sslswtmweriof\",\"pyqs\"],\"args\":[\"abnetshh\"],\"env\":[],\"resources\":{\"cpu\":83.1289050402311,\"memory\":\"wiwubm\",\"ephemeralStorage\":\"besldnkwwtppjflc\"},\"volumeMounts\":[]}],\"scale\":{\"minReplicas\":97204853,\"maxReplicas\":244687825,\"rules\":[{\"name\":\"sikvmkqzeqqkdlt\"}]},\"volumes\":[{\"name\":\"gureodkwobdag\",\"storageType\":\"EmptyDir\",\"storageName\":\"qdxbxwa\"}]}")
                .toObject(Template.class);
        Assertions.assertEquals("mcqibycnojv", model.revisionSuffix());
        Assertions.assertEquals("fqsgzvahapjy", model.initContainers().get(0).image());
        Assertions.assertEquals("pvgqzcjrvxdjzlm", model.initContainers().get(0).name());
        Assertions.assertEquals("kvugfhzovawjvzun", model.initContainers().get(0).command().get(0));
        Assertions.assertEquals("tdzumveekgpw", model.initContainers().get(0).args().get(0));
        Assertions.assertEquals(63.45978205100479D, model.initContainers().get(0).resources().cpu());
        Assertions.assertEquals("waboe", model.initContainers().get(0).resources().memory());
        Assertions.assertEquals("rfbjf", model.containers().get(0).image());
        Assertions.assertEquals("w", model.containers().get(0).name());
        Assertions.assertEquals("t", model.containers().get(0).command().get(0));
        Assertions.assertEquals("ytjrybnwjewgdr", model.containers().get(0).args().get(0));
        Assertions.assertEquals(9.874823960807245D, model.containers().get(0).resources().cpu());
        Assertions.assertEquals("gynduha", model.containers().get(0).resources().memory());
        Assertions.assertEquals(97204853, model.scale().minReplicas());
        Assertions.assertEquals(244687825, model.scale().maxReplicas());
        Assertions.assertEquals("sikvmkqzeqqkdlt", model.scale().rules().get(0).name());
        Assertions.assertEquals("gureodkwobdag", model.volumes().get(0).name());
        Assertions.assertEquals(StorageType.EMPTY_DIR, model.volumes().get(0).storageType());
        Assertions.assertEquals("qdxbxwa", model.volumes().get(0).storageName());
    }

    @Test
    public void testSerialize() {
        Template model =
            new Template()
                .withRevisionSuffix("mcqibycnojv")
                .withInitContainers(
                    Arrays
                        .asList(
                            new InitContainer()
                                .withImage("fqsgzvahapjy")
                                .withName("pvgqzcjrvxdjzlm")
                                .withCommand(Arrays.asList("kvugfhzovawjvzun", "uthnnprnxipeilpj", "uaejxdultsk"))
                                .withArgs(Arrays.asList("tdzumveekgpw", "zuhkfpbsjyof", "xl"))
                                .withEnv(Arrays.asList())
                                .withResources(new ContainerResources().withCpu(63.45978205100479D).withMemory("waboe"))
                                .withVolumeMounts(Arrays.asList()),
                            new InitContainer()
                                .withImage("smv")
                                .withName("wyjsflhhcaalnjix")
                                .withCommand(Arrays.asList("yaw", "oyaqcslyjpkiid"))
                                .withArgs(Arrays.asList("xznelixhnrztf", "lhbnxkna", "aulppggd"))
                                .withEnv(Arrays.asList())
                                .withResources(
                                    new ContainerResources().withCpu(62.44640700433306D).withMemory("ropuhpigv"))
                                .withVolumeMounts(Arrays.asList()),
                            new InitContainer()
                                .withImage("wncwzzhxgktrmg")
                                .withName("napkteoellw")
                                .withCommand(Arrays.asList("d", "gpfqbuace", "pzfqrhhuaoppp", "qeqxo"))
                                .withArgs(Arrays.asList("ahzxctobgbk", "moizpos", "mgrcfbu"))
                                .withEnv(Arrays.asList())
                                .withResources(
                                    new ContainerResources().withCpu(39.820918987867984D).withMemory("kxbpvj"))
                                .withVolumeMounts(Arrays.asList()),
                            new InitContainer()
                                .withImage("vkr")
                                .withName("wbxqzvszjfau")
                                .withCommand(Arrays.asList("dxxiv", "tvtc", "aqtdoqmcbx", "wvxysl"))
                                .withArgs(Arrays.asList("sfxobl", "tkblmpewww", "bkrvrnsvshqj"))
                                .withEnv(Arrays.asList())
                                .withResources(
                                    new ContainerResources()
                                        .withCpu(26.217415829732616D)
                                        .withMemory("ovasrruvwbhsqfsu"))
                                .withVolumeMounts(Arrays.asList())))
                .withContainers(
                    Arrays
                        .asList(
                            new Container()
                                .withImage("rfbjf")
                                .withName("w")
                                .withCommand(Arrays.asList("t", "tpvjzbexilzznfqq", "vwpm", "taruoujmkcj"))
                                .withArgs(Arrays.asList("ytjrybnwjewgdr", "ervnaenqpehi", "doy", "mifthnzdnd"))
                                .withEnv(Arrays.asList())
                                .withResources(
                                    new ContainerResources().withCpu(9.874823960807245D).withMemory("gynduha"))
                                .withVolumeMounts(Arrays.asList())
                                .withProbes(Arrays.asList()),
                            new Container()
                                .withImage("bgycduiertgccym")
                                .withName("olpsslqlf")
                                .withCommand(Arrays.asList("n", "bglzpswi", "d"))
                                .withArgs(Arrays.asList("yhz", "xssadbzmnvdf"))
                                .withEnv(Arrays.asList())
                                .withResources(new ContainerResources().withCpu(6.678154863771269D).withMemory("xzb"))
                                .withVolumeMounts(Arrays.asList())
                                .withProbes(Arrays.asList()),
                            new Container()
                                .withImage("zucerscdntnev")
                                .withName("wjmy")
                                .withCommand(Arrays.asList("sslswtmweriof", "pyqs"))
                                .withArgs(Arrays.asList("abnetshh"))
                                .withEnv(Arrays.asList())
                                .withResources(new ContainerResources().withCpu(83.1289050402311D).withMemory("wiwubm"))
                                .withVolumeMounts(Arrays.asList())
                                .withProbes(Arrays.asList())))
                .withScale(
                    new Scale()
                        .withMinReplicas(97204853)
                        .withMaxReplicas(244687825)
                        .withRules(Arrays.asList(new ScaleRule().withName("sikvmkqzeqqkdlt"))))
                .withVolumes(
                    Arrays
                        .asList(
                            new Volume()
                                .withName("gureodkwobdag")
                                .withStorageType(StorageType.EMPTY_DIR)
                                .withStorageName("qdxbxwa")));
        model = BinaryData.fromObject(model).toObject(Template.class);
        Assertions.assertEquals("mcqibycnojv", model.revisionSuffix());
        Assertions.assertEquals("fqsgzvahapjy", model.initContainers().get(0).image());
        Assertions.assertEquals("pvgqzcjrvxdjzlm", model.initContainers().get(0).name());
        Assertions.assertEquals("kvugfhzovawjvzun", model.initContainers().get(0).command().get(0));
        Assertions.assertEquals("tdzumveekgpw", model.initContainers().get(0).args().get(0));
        Assertions.assertEquals(63.45978205100479D, model.initContainers().get(0).resources().cpu());
        Assertions.assertEquals("waboe", model.initContainers().get(0).resources().memory());
        Assertions.assertEquals("rfbjf", model.containers().get(0).image());
        Assertions.assertEquals("w", model.containers().get(0).name());
        Assertions.assertEquals("t", model.containers().get(0).command().get(0));
        Assertions.assertEquals("ytjrybnwjewgdr", model.containers().get(0).args().get(0));
        Assertions.assertEquals(9.874823960807245D, model.containers().get(0).resources().cpu());
        Assertions.assertEquals("gynduha", model.containers().get(0).resources().memory());
        Assertions.assertEquals(97204853, model.scale().minReplicas());
        Assertions.assertEquals(244687825, model.scale().maxReplicas());
        Assertions.assertEquals("sikvmkqzeqqkdlt", model.scale().rules().get(0).name());
        Assertions.assertEquals("gureodkwobdag", model.volumes().get(0).name());
        Assertions.assertEquals(StorageType.EMPTY_DIR, model.volumes().get(0).storageType());
        Assertions.assertEquals("qdxbxwa", model.volumes().get(0).storageName());
    }
}
