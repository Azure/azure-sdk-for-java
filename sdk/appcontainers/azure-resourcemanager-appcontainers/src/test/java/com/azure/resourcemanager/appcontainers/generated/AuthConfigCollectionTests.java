// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.fluent.models.AuthConfigInner;
import com.azure.resourcemanager.appcontainers.models.AllowedAudiencesValidation;
import com.azure.resourcemanager.appcontainers.models.AppRegistration;
import com.azure.resourcemanager.appcontainers.models.Apple;
import com.azure.resourcemanager.appcontainers.models.AppleRegistration;
import com.azure.resourcemanager.appcontainers.models.AuthConfigCollection;
import com.azure.resourcemanager.appcontainers.models.AuthPlatform;
import com.azure.resourcemanager.appcontainers.models.AzureActiveDirectory;
import com.azure.resourcemanager.appcontainers.models.AzureActiveDirectoryLogin;
import com.azure.resourcemanager.appcontainers.models.AzureActiveDirectoryRegistration;
import com.azure.resourcemanager.appcontainers.models.AzureActiveDirectoryValidation;
import com.azure.resourcemanager.appcontainers.models.AzureStaticWebApps;
import com.azure.resourcemanager.appcontainers.models.AzureStaticWebAppsRegistration;
import com.azure.resourcemanager.appcontainers.models.ClientRegistration;
import com.azure.resourcemanager.appcontainers.models.CookieExpiration;
import com.azure.resourcemanager.appcontainers.models.CookieExpirationConvention;
import com.azure.resourcemanager.appcontainers.models.CustomOpenIdConnectProvider;
import com.azure.resourcemanager.appcontainers.models.Facebook;
import com.azure.resourcemanager.appcontainers.models.ForwardProxy;
import com.azure.resourcemanager.appcontainers.models.ForwardProxyConvention;
import com.azure.resourcemanager.appcontainers.models.GitHub;
import com.azure.resourcemanager.appcontainers.models.GlobalValidation;
import com.azure.resourcemanager.appcontainers.models.Google;
import com.azure.resourcemanager.appcontainers.models.HttpSettings;
import com.azure.resourcemanager.appcontainers.models.HttpSettingsRoutes;
import com.azure.resourcemanager.appcontainers.models.IdentityProviders;
import com.azure.resourcemanager.appcontainers.models.Login;
import com.azure.resourcemanager.appcontainers.models.LoginRoutes;
import com.azure.resourcemanager.appcontainers.models.LoginScopes;
import com.azure.resourcemanager.appcontainers.models.Nonce;
import com.azure.resourcemanager.appcontainers.models.Twitter;
import com.azure.resourcemanager.appcontainers.models.TwitterRegistration;
import com.azure.resourcemanager.appcontainers.models.UnauthenticatedClientActionV2;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AuthConfigCollectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AuthConfigCollection model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"platform\":{\"enabled\":false,\"runtimeVersion\":\"gjxpybczmehmt\"},\"globalValidation\":{\"unauthenticatedClientAction\":\"Return403\",\"redirectToProvider\":\"phrupidgsybbejhp\",\"excludedPaths\":[\"cmsxaobhdxbm\"]},\"identityProviders\":{\"azureActiveDirectory\":{\"enabled\":false,\"registration\":{},\"login\":{},\"validation\":{},\"isAutoProvisioned\":false},\"facebook\":{\"enabled\":false,\"registration\":{},\"graphApiVersion\":\"ownoizhw\",\"login\":{}},\"gitHub\":{\"enabled\":false,\"registration\":{},\"login\":{}},\"google\":{\"enabled\":false,\"registration\":{},\"login\":{},\"validation\":{}},\"twitter\":{\"enabled\":true,\"registration\":{}},\"apple\":{\"enabled\":true,\"registration\":{},\"login\":{}},\"azureStaticWebApps\":{\"enabled\":false,\"registration\":{}},\"customOpenIdConnectProviders\":{\"nrbtcqqjnq\":{}}},\"login\":{\"routes\":{\"logoutEndpoint\":\"gnufoooj\"},\"preserveUrlFragmentsForLogins\":true,\"allowedExternalRedirectUrls\":[\"qes\"],\"cookieExpiration\":{\"convention\":\"IdentityProviderDerived\",\"timeToExpiration\":\"mglzlhj\"},\"nonce\":{\"validateNonce\":false,\"nonceExpirationInterval\":\"wmrvktsizntocipa\"}},\"httpSettings\":{\"requireHttps\":false,\"routes\":{\"apiPrefix\":\"qucmpo\"},\"forwardProxy\":{\"convention\":\"Standard\",\"customHostHeaderName\":\"ogknygjofjdd\",\"customProtoHeaderName\":\"s\"}}},\"id\":\"eupewnwreitjz\",\"name\":\"flusarhmof\",\"type\":\"qhsmyurkdtml\"},{\"properties\":{\"platform\":{\"enabled\":true,\"runtimeVersion\":\"sjtxukcdmp\"},\"globalValidation\":{\"unauthenticatedClientAction\":\"Return403\",\"redirectToProvider\":\"uanzwuxzdx\",\"excludedPaths\":[\"rlhm\",\"hfpmrqobmtukknr\",\"rtihfxtijbpz\",\"gnwzsymglzufc\"]},\"identityProviders\":{\"azureActiveDirectory\":{\"enabled\":false,\"registration\":{},\"login\":{},\"validation\":{},\"isAutoProvisioned\":true},\"facebook\":{\"enabled\":false,\"registration\":{},\"graphApiVersion\":\"cbjy\",\"login\":{}},\"gitHub\":{\"enabled\":false,\"registration\":{},\"login\":{}},\"google\":{\"enabled\":true,\"registration\":{},\"login\":{},\"validation\":{}},\"twitter\":{\"enabled\":true,\"registration\":{}},\"apple\":{\"enabled\":false,\"registration\":{},\"login\":{}},\"azureStaticWebApps\":{\"enabled\":false,\"registration\":{}},\"customOpenIdConnectProviders\":{\"uhivyqniw\":{}}},\"login\":{\"routes\":{\"logoutEndpoint\":\"k\"},\"preserveUrlFragmentsForLogins\":true,\"allowedExternalRedirectUrls\":[\"jgrtfwvukxga\"],\"cookieExpiration\":{\"convention\":\"FixedTime\",\"timeToExpiration\":\"nhsjcnyej\"},\"nonce\":{\"validateNonce\":true,\"nonceExpirationInterval\":\"tnapczwlokjyemkk\"}},\"httpSettings\":{\"requireHttps\":true,\"routes\":{\"apiPrefix\":\"xzjnchgejs\"},\"forwardProxy\":{\"convention\":\"Custom\",\"customHostHeaderName\":\"ilzyd\",\"customProtoHeaderName\":\"o\"}}},\"id\":\"yahux\",\"name\":\"npmqnjaqwixjspro\",\"type\":\"vcputegj\"},{\"properties\":{\"platform\":{\"enabled\":false,\"runtimeVersion\":\"t\"},\"globalValidation\":{\"unauthenticatedClientAction\":\"Return403\",\"redirectToProvider\":\"pjhulsuuvmkj\",\"excludedPaths\":[\"rwfndiod\"]},\"identityProviders\":{\"azureActiveDirectory\":{\"enabled\":false,\"registration\":{},\"login\":{},\"validation\":{},\"isAutoProvisioned\":true},\"facebook\":{\"enabled\":true,\"registration\":{},\"graphApiVersion\":\"psoacctazakljl\",\"login\":{}},\"gitHub\":{\"enabled\":true,\"registration\":{},\"login\":{}},\"google\":{\"enabled\":false,\"registration\":{},\"login\":{},\"validation\":{}},\"twitter\":{\"enabled\":false,\"registration\":{}},\"apple\":{\"enabled\":true,\"registration\":{},\"login\":{}},\"azureStaticWebApps\":{\"enabled\":true,\"registration\":{}},\"customOpenIdConnectProviders\":{\"jhcrz\":{},\"vdphlxaolthqtr\":{},\"qjbpfzfsin\":{},\"gvfcj\":{}}},\"login\":{\"routes\":{\"logoutEndpoint\":\"xxjtfe\"},\"preserveUrlFragmentsForLogins\":true,\"allowedExternalRedirectUrls\":[\"zitonpeqfpjkjl\",\"ofpdvh\"],\"cookieExpiration\":{\"convention\":\"IdentityProviderDerived\",\"timeToExpiration\":\"pini\"},\"nonce\":{\"validateNonce\":true,\"nonceExpirationInterval\":\"uybbkpodep\"}},\"httpSettings\":{\"requireHttps\":true,\"routes\":{\"apiPrefix\":\"vamih\"},\"forwardProxy\":{\"convention\":\"Custom\",\"customHostHeaderName\":\"rxzxtheo\",\"customProtoHeaderName\":\"si\"}}},\"id\":\"evcciqihnhun\",\"name\":\"bwjzr\",\"type\":\"fygxgispemvtzfk\"}],\"nextLink\":\"ubljofxqe\"}")
                .toObject(AuthConfigCollection.class);
        Assertions.assertEquals(false, model.value().get(0).platform().enabled());
        Assertions.assertEquals("gjxpybczmehmt", model.value().get(0).platform().runtimeVersion());
        Assertions
            .assertEquals(
                UnauthenticatedClientActionV2.RETURN403,
                model.value().get(0).globalValidation().unauthenticatedClientAction());
        Assertions.assertEquals("phrupidgsybbejhp", model.value().get(0).globalValidation().redirectToProvider());
        Assertions.assertEquals("cmsxaobhdxbm", model.value().get(0).globalValidation().excludedPaths().get(0));
        Assertions.assertEquals(false, model.value().get(0).identityProviders().azureActiveDirectory().enabled());
        Assertions
            .assertEquals(false, model.value().get(0).identityProviders().azureActiveDirectory().isAutoProvisioned());
        Assertions.assertEquals(false, model.value().get(0).identityProviders().facebook().enabled());
        Assertions.assertEquals("ownoizhw", model.value().get(0).identityProviders().facebook().graphApiVersion());
        Assertions.assertEquals(false, model.value().get(0).identityProviders().gitHub().enabled());
        Assertions.assertEquals(false, model.value().get(0).identityProviders().google().enabled());
        Assertions.assertEquals(true, model.value().get(0).identityProviders().twitter().enabled());
        Assertions.assertEquals(true, model.value().get(0).identityProviders().apple().enabled());
        Assertions.assertEquals(false, model.value().get(0).identityProviders().azureStaticWebApps().enabled());
        Assertions.assertEquals("gnufoooj", model.value().get(0).login().routes().logoutEndpoint());
        Assertions.assertEquals(true, model.value().get(0).login().preserveUrlFragmentsForLogins());
        Assertions.assertEquals("qes", model.value().get(0).login().allowedExternalRedirectUrls().get(0));
        Assertions
            .assertEquals(
                CookieExpirationConvention.IDENTITY_PROVIDER_DERIVED,
                model.value().get(0).login().cookieExpiration().convention());
        Assertions.assertEquals("mglzlhj", model.value().get(0).login().cookieExpiration().timeToExpiration());
        Assertions.assertEquals(false, model.value().get(0).login().nonce().validateNonce());
        Assertions.assertEquals("wmrvktsizntocipa", model.value().get(0).login().nonce().nonceExpirationInterval());
        Assertions.assertEquals(false, model.value().get(0).httpSettings().requireHttps());
        Assertions.assertEquals("qucmpo", model.value().get(0).httpSettings().routes().apiPrefix());
        Assertions
            .assertEquals(
                ForwardProxyConvention.STANDARD, model.value().get(0).httpSettings().forwardProxy().convention());
        Assertions
            .assertEquals("ogknygjofjdd", model.value().get(0).httpSettings().forwardProxy().customHostHeaderName());
        Assertions.assertEquals("s", model.value().get(0).httpSettings().forwardProxy().customProtoHeaderName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AuthConfigCollection model =
            new AuthConfigCollection()
                .withValue(
                    Arrays
                        .asList(
                            new AuthConfigInner()
                                .withPlatform(new AuthPlatform().withEnabled(false).withRuntimeVersion("gjxpybczmehmt"))
                                .withGlobalValidation(
                                    new GlobalValidation()
                                        .withUnauthenticatedClientAction(UnauthenticatedClientActionV2.RETURN403)
                                        .withRedirectToProvider("phrupidgsybbejhp")
                                        .withExcludedPaths(Arrays.asList("cmsxaobhdxbm")))
                                .withIdentityProviders(
                                    new IdentityProviders()
                                        .withAzureActiveDirectory(
                                            new AzureActiveDirectory()
                                                .withEnabled(false)
                                                .withRegistration(new AzureActiveDirectoryRegistration())
                                                .withLogin(new AzureActiveDirectoryLogin())
                                                .withValidation(new AzureActiveDirectoryValidation())
                                                .withIsAutoProvisioned(false))
                                        .withFacebook(
                                            new Facebook()
                                                .withEnabled(false)
                                                .withRegistration(new AppRegistration())
                                                .withGraphApiVersion("ownoizhw")
                                                .withLogin(new LoginScopes()))
                                        .withGitHub(
                                            new GitHub()
                                                .withEnabled(false)
                                                .withRegistration(new ClientRegistration())
                                                .withLogin(new LoginScopes()))
                                        .withGoogle(
                                            new Google()
                                                .withEnabled(false)
                                                .withRegistration(new ClientRegistration())
                                                .withLogin(new LoginScopes())
                                                .withValidation(new AllowedAudiencesValidation()))
                                        .withTwitter(
                                            new Twitter().withEnabled(true).withRegistration(new TwitterRegistration()))
                                        .withApple(
                                            new Apple()
                                                .withEnabled(true)
                                                .withRegistration(new AppleRegistration())
                                                .withLogin(new LoginScopes()))
                                        .withAzureStaticWebApps(
                                            new AzureStaticWebApps()
                                                .withEnabled(false)
                                                .withRegistration(new AzureStaticWebAppsRegistration()))
                                        .withCustomOpenIdConnectProviders(
                                            mapOf("nrbtcqqjnq", new CustomOpenIdConnectProvider())))
                                .withLogin(
                                    new Login()
                                        .withRoutes(new LoginRoutes().withLogoutEndpoint("gnufoooj"))
                                        .withPreserveUrlFragmentsForLogins(true)
                                        .withAllowedExternalRedirectUrls(Arrays.asList("qes"))
                                        .withCookieExpiration(
                                            new CookieExpiration()
                                                .withConvention(CookieExpirationConvention.IDENTITY_PROVIDER_DERIVED)
                                                .withTimeToExpiration("mglzlhj"))
                                        .withNonce(
                                            new Nonce()
                                                .withValidateNonce(false)
                                                .withNonceExpirationInterval("wmrvktsizntocipa")))
                                .withHttpSettings(
                                    new HttpSettings()
                                        .withRequireHttps(false)
                                        .withRoutes(new HttpSettingsRoutes().withApiPrefix("qucmpo"))
                                        .withForwardProxy(
                                            new ForwardProxy()
                                                .withConvention(ForwardProxyConvention.STANDARD)
                                                .withCustomHostHeaderName("ogknygjofjdd")
                                                .withCustomProtoHeaderName("s"))),
                            new AuthConfigInner()
                                .withPlatform(new AuthPlatform().withEnabled(true).withRuntimeVersion("sjtxukcdmp"))
                                .withGlobalValidation(
                                    new GlobalValidation()
                                        .withUnauthenticatedClientAction(UnauthenticatedClientActionV2.RETURN403)
                                        .withRedirectToProvider("uanzwuxzdx")
                                        .withExcludedPaths(
                                            Arrays.asList("rlhm", "hfpmrqobmtukknr", "rtihfxtijbpz", "gnwzsymglzufc")))
                                .withIdentityProviders(
                                    new IdentityProviders()
                                        .withAzureActiveDirectory(
                                            new AzureActiveDirectory()
                                                .withEnabled(false)
                                                .withRegistration(new AzureActiveDirectoryRegistration())
                                                .withLogin(new AzureActiveDirectoryLogin())
                                                .withValidation(new AzureActiveDirectoryValidation())
                                                .withIsAutoProvisioned(true))
                                        .withFacebook(
                                            new Facebook()
                                                .withEnabled(false)
                                                .withRegistration(new AppRegistration())
                                                .withGraphApiVersion("cbjy")
                                                .withLogin(new LoginScopes()))
                                        .withGitHub(
                                            new GitHub()
                                                .withEnabled(false)
                                                .withRegistration(new ClientRegistration())
                                                .withLogin(new LoginScopes()))
                                        .withGoogle(
                                            new Google()
                                                .withEnabled(true)
                                                .withRegistration(new ClientRegistration())
                                                .withLogin(new LoginScopes())
                                                .withValidation(new AllowedAudiencesValidation()))
                                        .withTwitter(
                                            new Twitter().withEnabled(true).withRegistration(new TwitterRegistration()))
                                        .withApple(
                                            new Apple()
                                                .withEnabled(false)
                                                .withRegistration(new AppleRegistration())
                                                .withLogin(new LoginScopes()))
                                        .withAzureStaticWebApps(
                                            new AzureStaticWebApps()
                                                .withEnabled(false)
                                                .withRegistration(new AzureStaticWebAppsRegistration()))
                                        .withCustomOpenIdConnectProviders(
                                            mapOf("uhivyqniw", new CustomOpenIdConnectProvider())))
                                .withLogin(
                                    new Login()
                                        .withRoutes(new LoginRoutes().withLogoutEndpoint("k"))
                                        .withPreserveUrlFragmentsForLogins(true)
                                        .withAllowedExternalRedirectUrls(Arrays.asList("jgrtfwvukxga"))
                                        .withCookieExpiration(
                                            new CookieExpiration()
                                                .withConvention(CookieExpirationConvention.FIXED_TIME)
                                                .withTimeToExpiration("nhsjcnyej"))
                                        .withNonce(
                                            new Nonce()
                                                .withValidateNonce(true)
                                                .withNonceExpirationInterval("tnapczwlokjyemkk")))
                                .withHttpSettings(
                                    new HttpSettings()
                                        .withRequireHttps(true)
                                        .withRoutes(new HttpSettingsRoutes().withApiPrefix("xzjnchgejs"))
                                        .withForwardProxy(
                                            new ForwardProxy()
                                                .withConvention(ForwardProxyConvention.CUSTOM)
                                                .withCustomHostHeaderName("ilzyd")
                                                .withCustomProtoHeaderName("o"))),
                            new AuthConfigInner()
                                .withPlatform(new AuthPlatform().withEnabled(false).withRuntimeVersion("t"))
                                .withGlobalValidation(
                                    new GlobalValidation()
                                        .withUnauthenticatedClientAction(UnauthenticatedClientActionV2.RETURN403)
                                        .withRedirectToProvider("pjhulsuuvmkj")
                                        .withExcludedPaths(Arrays.asList("rwfndiod")))
                                .withIdentityProviders(
                                    new IdentityProviders()
                                        .withAzureActiveDirectory(
                                            new AzureActiveDirectory()
                                                .withEnabled(false)
                                                .withRegistration(new AzureActiveDirectoryRegistration())
                                                .withLogin(new AzureActiveDirectoryLogin())
                                                .withValidation(new AzureActiveDirectoryValidation())
                                                .withIsAutoProvisioned(true))
                                        .withFacebook(
                                            new Facebook()
                                                .withEnabled(true)
                                                .withRegistration(new AppRegistration())
                                                .withGraphApiVersion("psoacctazakljl")
                                                .withLogin(new LoginScopes()))
                                        .withGitHub(
                                            new GitHub()
                                                .withEnabled(true)
                                                .withRegistration(new ClientRegistration())
                                                .withLogin(new LoginScopes()))
                                        .withGoogle(
                                            new Google()
                                                .withEnabled(false)
                                                .withRegistration(new ClientRegistration())
                                                .withLogin(new LoginScopes())
                                                .withValidation(new AllowedAudiencesValidation()))
                                        .withTwitter(
                                            new Twitter()
                                                .withEnabled(false)
                                                .withRegistration(new TwitterRegistration()))
                                        .withApple(
                                            new Apple()
                                                .withEnabled(true)
                                                .withRegistration(new AppleRegistration())
                                                .withLogin(new LoginScopes()))
                                        .withAzureStaticWebApps(
                                            new AzureStaticWebApps()
                                                .withEnabled(true)
                                                .withRegistration(new AzureStaticWebAppsRegistration()))
                                        .withCustomOpenIdConnectProviders(
                                            mapOf(
                                                "jhcrz",
                                                new CustomOpenIdConnectProvider(),
                                                "vdphlxaolthqtr",
                                                new CustomOpenIdConnectProvider(),
                                                "qjbpfzfsin",
                                                new CustomOpenIdConnectProvider(),
                                                "gvfcj",
                                                new CustomOpenIdConnectProvider())))
                                .withLogin(
                                    new Login()
                                        .withRoutes(new LoginRoutes().withLogoutEndpoint("xxjtfe"))
                                        .withPreserveUrlFragmentsForLogins(true)
                                        .withAllowedExternalRedirectUrls(Arrays.asList("zitonpeqfpjkjl", "ofpdvh"))
                                        .withCookieExpiration(
                                            new CookieExpiration()
                                                .withConvention(CookieExpirationConvention.IDENTITY_PROVIDER_DERIVED)
                                                .withTimeToExpiration("pini"))
                                        .withNonce(
                                            new Nonce()
                                                .withValidateNonce(true)
                                                .withNonceExpirationInterval("uybbkpodep")))
                                .withHttpSettings(
                                    new HttpSettings()
                                        .withRequireHttps(true)
                                        .withRoutes(new HttpSettingsRoutes().withApiPrefix("vamih"))
                                        .withForwardProxy(
                                            new ForwardProxy()
                                                .withConvention(ForwardProxyConvention.CUSTOM)
                                                .withCustomHostHeaderName("rxzxtheo")
                                                .withCustomProtoHeaderName("si")))));
        model = BinaryData.fromObject(model).toObject(AuthConfigCollection.class);
        Assertions.assertEquals(false, model.value().get(0).platform().enabled());
        Assertions.assertEquals("gjxpybczmehmt", model.value().get(0).platform().runtimeVersion());
        Assertions
            .assertEquals(
                UnauthenticatedClientActionV2.RETURN403,
                model.value().get(0).globalValidation().unauthenticatedClientAction());
        Assertions.assertEquals("phrupidgsybbejhp", model.value().get(0).globalValidation().redirectToProvider());
        Assertions.assertEquals("cmsxaobhdxbm", model.value().get(0).globalValidation().excludedPaths().get(0));
        Assertions.assertEquals(false, model.value().get(0).identityProviders().azureActiveDirectory().enabled());
        Assertions
            .assertEquals(false, model.value().get(0).identityProviders().azureActiveDirectory().isAutoProvisioned());
        Assertions.assertEquals(false, model.value().get(0).identityProviders().facebook().enabled());
        Assertions.assertEquals("ownoizhw", model.value().get(0).identityProviders().facebook().graphApiVersion());
        Assertions.assertEquals(false, model.value().get(0).identityProviders().gitHub().enabled());
        Assertions.assertEquals(false, model.value().get(0).identityProviders().google().enabled());
        Assertions.assertEquals(true, model.value().get(0).identityProviders().twitter().enabled());
        Assertions.assertEquals(true, model.value().get(0).identityProviders().apple().enabled());
        Assertions.assertEquals(false, model.value().get(0).identityProviders().azureStaticWebApps().enabled());
        Assertions.assertEquals("gnufoooj", model.value().get(0).login().routes().logoutEndpoint());
        Assertions.assertEquals(true, model.value().get(0).login().preserveUrlFragmentsForLogins());
        Assertions.assertEquals("qes", model.value().get(0).login().allowedExternalRedirectUrls().get(0));
        Assertions
            .assertEquals(
                CookieExpirationConvention.IDENTITY_PROVIDER_DERIVED,
                model.value().get(0).login().cookieExpiration().convention());
        Assertions.assertEquals("mglzlhj", model.value().get(0).login().cookieExpiration().timeToExpiration());
        Assertions.assertEquals(false, model.value().get(0).login().nonce().validateNonce());
        Assertions.assertEquals("wmrvktsizntocipa", model.value().get(0).login().nonce().nonceExpirationInterval());
        Assertions.assertEquals(false, model.value().get(0).httpSettings().requireHttps());
        Assertions.assertEquals("qucmpo", model.value().get(0).httpSettings().routes().apiPrefix());
        Assertions
            .assertEquals(
                ForwardProxyConvention.STANDARD, model.value().get(0).httpSettings().forwardProxy().convention());
        Assertions
            .assertEquals("ogknygjofjdd", model.value().get(0).httpSettings().forwardProxy().customHostHeaderName());
        Assertions.assertEquals("s", model.value().get(0).httpSettings().forwardProxy().customProtoHeaderName());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
