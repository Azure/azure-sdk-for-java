// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appcontainers.models.AllowedAudiencesValidation;
import com.azure.resourcemanager.appcontainers.models.ClientRegistration;
import com.azure.resourcemanager.appcontainers.models.Google;
import com.azure.resourcemanager.appcontainers.models.LoginScopes;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class GoogleTests {
    @Test
    public void testDeserialize() {
        Google model =
            BinaryData
                .fromString(
                    "{\"enabled\":true,\"registration\":{\"clientId\":\"dntwndeicbtw\",\"clientSecretSettingName\":\"zao\"},\"login\":{\"scopes\":[\"rhcffcydd\",\"lmjthjq\",\"wpyeicxmqciwqvh\",\"hix\"]},\"validation\":{\"allowedAudiences\":[\"topbobjogh\",\"e\"]}}")
                .toObject(Google.class);
        Assertions.assertEquals(true, model.enabled());
        Assertions.assertEquals("dntwndeicbtw", model.registration().clientId());
        Assertions.assertEquals("zao", model.registration().clientSecretSettingName());
        Assertions.assertEquals("rhcffcydd", model.login().scopes().get(0));
        Assertions.assertEquals("topbobjogh", model.validation().allowedAudiences().get(0));
    }

    @Test
    public void testSerialize() {
        Google model =
            new Google()
                .withEnabled(true)
                .withRegistration(
                    new ClientRegistration().withClientId("dntwndeicbtw").withClientSecretSettingName("zao"))
                .withLogin(
                    new LoginScopes().withScopes(Arrays.asList("rhcffcydd", "lmjthjq", "wpyeicxmqciwqvh", "hix")))
                .withValidation(
                    new AllowedAudiencesValidation().withAllowedAudiences(Arrays.asList("topbobjogh", "e")));
        model = BinaryData.fromObject(model).toObject(Google.class);
        Assertions.assertEquals(true, model.enabled());
        Assertions.assertEquals("dntwndeicbtw", model.registration().clientId());
        Assertions.assertEquals("zao", model.registration().clientSecretSettingName());
        Assertions.assertEquals("rhcffcydd", model.login().scopes().get(0));
        Assertions.assertEquals("topbobjogh", model.validation().allowedAudiences().get(0));
    }
}
