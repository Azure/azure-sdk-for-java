// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.appcontainers.models.ConnectedEnvironmentDaprComponentProvisioningState;
import com.azure.resourcemanager.appcontainers.models.DaprComponentServiceBinding;
import com.azure.resourcemanager.appcontainers.models.DaprMetadata;
import com.azure.resourcemanager.appcontainers.models.Secret;
import java.io.IOException;
import java.util.List;

/**
 * Dapr Component.
 */
@Fluent
public final class ConnectedEnvironmentDaprComponentInner extends ProxyResource {
    /*
     * Dapr component properties
     */
    private ConnectedEnvironmentDaprComponentProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    private SystemData systemData;

    /*
     * The type of the resource.
     */
    private String type;

    /*
     * The name of the resource.
     */
    private String name;

    /*
     * Fully qualified resource Id for the resource.
     */
    private String id;

    /**
     * Creates an instance of ConnectedEnvironmentDaprComponentInner class.
     */
    public ConnectedEnvironmentDaprComponentInner() {
    }

    /**
     * Get the innerProperties property: Dapr component properties.
     * 
     * @return the innerProperties value.
     */
    private ConnectedEnvironmentDaprComponentProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the type property: The type of the resource.
     * 
     * @return the type value.
     */
    @Override
    public String type() {
        return this.type;
    }

    /**
     * Get the name property: The name of the resource.
     * 
     * @return the name value.
     */
    @Override
    public String name() {
        return this.name;
    }

    /**
     * Get the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    @Override
    public String id() {
        return this.id;
    }

    /**
     * Get the provisioningState property: Provisioning state of the Connected Environment Dapr Component.
     * 
     * @return the provisioningState value.
     */
    public ConnectedEnvironmentDaprComponentProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the deploymentErrors property: Any errors that occurred during deployment or deployment validation.
     * 
     * @return the deploymentErrors value.
     */
    public String deploymentErrors() {
        return this.innerProperties() == null ? null : this.innerProperties().deploymentErrors();
    }

    /**
     * Get the componentType property: Component type.
     * 
     * @return the componentType value.
     */
    public String componentType() {
        return this.innerProperties() == null ? null : this.innerProperties().componentType();
    }

    /**
     * Set the componentType property: Component type.
     * 
     * @param componentType the componentType value to set.
     * @return the ConnectedEnvironmentDaprComponentInner object itself.
     */
    public ConnectedEnvironmentDaprComponentInner withComponentType(String componentType) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ConnectedEnvironmentDaprComponentProperties();
        }
        this.innerProperties().withComponentType(componentType);
        return this;
    }

    /**
     * Get the version property: Component version.
     * 
     * @return the version value.
     */
    public String version() {
        return this.innerProperties() == null ? null : this.innerProperties().version();
    }

    /**
     * Set the version property: Component version.
     * 
     * @param version the version value to set.
     * @return the ConnectedEnvironmentDaprComponentInner object itself.
     */
    public ConnectedEnvironmentDaprComponentInner withVersion(String version) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ConnectedEnvironmentDaprComponentProperties();
        }
        this.innerProperties().withVersion(version);
        return this;
    }

    /**
     * Get the ignoreErrors property: Boolean describing if the component errors are ignores.
     * 
     * @return the ignoreErrors value.
     */
    public Boolean ignoreErrors() {
        return this.innerProperties() == null ? null : this.innerProperties().ignoreErrors();
    }

    /**
     * Set the ignoreErrors property: Boolean describing if the component errors are ignores.
     * 
     * @param ignoreErrors the ignoreErrors value to set.
     * @return the ConnectedEnvironmentDaprComponentInner object itself.
     */
    public ConnectedEnvironmentDaprComponentInner withIgnoreErrors(Boolean ignoreErrors) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ConnectedEnvironmentDaprComponentProperties();
        }
        this.innerProperties().withIgnoreErrors(ignoreErrors);
        return this;
    }

    /**
     * Get the initTimeout property: Initialization timeout.
     * 
     * @return the initTimeout value.
     */
    public String initTimeout() {
        return this.innerProperties() == null ? null : this.innerProperties().initTimeout();
    }

    /**
     * Set the initTimeout property: Initialization timeout.
     * 
     * @param initTimeout the initTimeout value to set.
     * @return the ConnectedEnvironmentDaprComponentInner object itself.
     */
    public ConnectedEnvironmentDaprComponentInner withInitTimeout(String initTimeout) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ConnectedEnvironmentDaprComponentProperties();
        }
        this.innerProperties().withInitTimeout(initTimeout);
        return this;
    }

    /**
     * Get the secrets property: Collection of secrets used by a Dapr component.
     * 
     * @return the secrets value.
     */
    public List<Secret> secrets() {
        return this.innerProperties() == null ? null : this.innerProperties().secrets();
    }

    /**
     * Set the secrets property: Collection of secrets used by a Dapr component.
     * 
     * @param secrets the secrets value to set.
     * @return the ConnectedEnvironmentDaprComponentInner object itself.
     */
    public ConnectedEnvironmentDaprComponentInner withSecrets(List<Secret> secrets) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ConnectedEnvironmentDaprComponentProperties();
        }
        this.innerProperties().withSecrets(secrets);
        return this;
    }

    /**
     * Get the secretStoreComponent property: Name of a Dapr component to retrieve component secrets from.
     * 
     * @return the secretStoreComponent value.
     */
    public String secretStoreComponent() {
        return this.innerProperties() == null ? null : this.innerProperties().secretStoreComponent();
    }

    /**
     * Set the secretStoreComponent property: Name of a Dapr component to retrieve component secrets from.
     * 
     * @param secretStoreComponent the secretStoreComponent value to set.
     * @return the ConnectedEnvironmentDaprComponentInner object itself.
     */
    public ConnectedEnvironmentDaprComponentInner withSecretStoreComponent(String secretStoreComponent) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ConnectedEnvironmentDaprComponentProperties();
        }
        this.innerProperties().withSecretStoreComponent(secretStoreComponent);
        return this;
    }

    /**
     * Get the metadata property: Component metadata.
     * 
     * @return the metadata value.
     */
    public List<DaprMetadata> metadata() {
        return this.innerProperties() == null ? null : this.innerProperties().metadata();
    }

    /**
     * Set the metadata property: Component metadata.
     * 
     * @param metadata the metadata value to set.
     * @return the ConnectedEnvironmentDaprComponentInner object itself.
     */
    public ConnectedEnvironmentDaprComponentInner withMetadata(List<DaprMetadata> metadata) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ConnectedEnvironmentDaprComponentProperties();
        }
        this.innerProperties().withMetadata(metadata);
        return this;
    }

    /**
     * Get the scopes property: Names of container apps that can use this Dapr component.
     * 
     * @return the scopes value.
     */
    public List<String> scopes() {
        return this.innerProperties() == null ? null : this.innerProperties().scopes();
    }

    /**
     * Set the scopes property: Names of container apps that can use this Dapr component.
     * 
     * @param scopes the scopes value to set.
     * @return the ConnectedEnvironmentDaprComponentInner object itself.
     */
    public ConnectedEnvironmentDaprComponentInner withScopes(List<String> scopes) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ConnectedEnvironmentDaprComponentProperties();
        }
        this.innerProperties().withScopes(scopes);
        return this;
    }

    /**
     * Get the serviceComponentBind property: List of container app services that are bound to the Dapr component.
     * 
     * @return the serviceComponentBind value.
     */
    public List<DaprComponentServiceBinding> serviceComponentBind() {
        return this.innerProperties() == null ? null : this.innerProperties().serviceComponentBind();
    }

    /**
     * Set the serviceComponentBind property: List of container app services that are bound to the Dapr component.
     * 
     * @param serviceComponentBind the serviceComponentBind value to set.
     * @return the ConnectedEnvironmentDaprComponentInner object itself.
     */
    public ConnectedEnvironmentDaprComponentInner
        withServiceComponentBind(List<DaprComponentServiceBinding> serviceComponentBind) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ConnectedEnvironmentDaprComponentProperties();
        }
        this.innerProperties().withServiceComponentBind(serviceComponentBind);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ConnectedEnvironmentDaprComponentInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ConnectedEnvironmentDaprComponentInner if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ConnectedEnvironmentDaprComponentInner.
     */
    public static ConnectedEnvironmentDaprComponentInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ConnectedEnvironmentDaprComponentInner deserializedConnectedEnvironmentDaprComponentInner
                = new ConnectedEnvironmentDaprComponentInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedConnectedEnvironmentDaprComponentInner.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedConnectedEnvironmentDaprComponentInner.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedConnectedEnvironmentDaprComponentInner.type = reader.getString();
                } else if ("properties".equals(fieldName)) {
                    deserializedConnectedEnvironmentDaprComponentInner.innerProperties
                        = ConnectedEnvironmentDaprComponentProperties.fromJson(reader);
                } else if ("systemData".equals(fieldName)) {
                    deserializedConnectedEnvironmentDaprComponentInner.systemData = SystemData.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedConnectedEnvironmentDaprComponentInner;
        });
    }
}
