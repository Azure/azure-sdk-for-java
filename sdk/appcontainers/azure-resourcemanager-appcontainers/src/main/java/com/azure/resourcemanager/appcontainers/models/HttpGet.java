// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Model representing a http get request.
 */
@Fluent
public final class HttpGet {
    /*
     * URL to make HTTP GET request against.
     */
    @JsonProperty(value = "url", required = true)
    private String url;

    /*
     * Name of the file that the request should be saved to.
     */
    @JsonProperty(value = "fileName")
    private String fileName;

    /*
     * List of headers to send with the request.
     */
    @JsonProperty(value = "headers")
    private List<String> headers;

    /**
     * Creates an instance of HttpGet class.
     */
    public HttpGet() {
    }

    /**
     * Get the url property: URL to make HTTP GET request against.
     * 
     * @return the url value.
     */
    public String url() {
        return this.url;
    }

    /**
     * Set the url property: URL to make HTTP GET request against.
     * 
     * @param url the url value to set.
     * @return the HttpGet object itself.
     */
    public HttpGet withUrl(String url) {
        this.url = url;
        return this;
    }

    /**
     * Get the fileName property: Name of the file that the request should be saved to.
     * 
     * @return the fileName value.
     */
    public String fileName() {
        return this.fileName;
    }

    /**
     * Set the fileName property: Name of the file that the request should be saved to.
     * 
     * @param fileName the fileName value to set.
     * @return the HttpGet object itself.
     */
    public HttpGet withFileName(String fileName) {
        this.fileName = fileName;
        return this;
    }

    /**
     * Get the headers property: List of headers to send with the request.
     * 
     * @return the headers value.
     */
    public List<String> headers() {
        return this.headers;
    }

    /**
     * Set the headers property: List of headers to send with the request.
     * 
     * @param headers the headers value to set.
     * @return the HttpGet object itself.
     */
    public HttpGet withHeaders(List<String> headers) {
        this.headers = headers;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (url() == null) {
            throw LOGGER
                .logExceptionAsError(new IllegalArgumentException("Missing required property url in model HttpGet"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(HttpGet.class);
}
