// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Container App Secret. */
@Immutable
public final class ContainerAppSecret {
    /*
     * Secret Name.
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /*
     * Secret Value.
     */
    @JsonProperty(value = "value", access = JsonProperty.Access.WRITE_ONLY)
    private String value;

    /*
     * Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned
     * identity.
     */
    @JsonProperty(value = "identity", access = JsonProperty.Access.WRITE_ONLY)
    private String identity;

    /*
     * Azure Key Vault URL pointing to the secret referenced by the container app.
     */
    @JsonProperty(value = "keyVaultUrl", access = JsonProperty.Access.WRITE_ONLY)
    private String keyVaultUrl;

    /** Creates an instance of ContainerAppSecret class. */
    public ContainerAppSecret() {
    }

    /**
     * Get the name property: Secret Name.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the value property: Secret Value.
     *
     * @return the value value.
     */
    public String value() {
        return this.value;
    }

    /**
     * Get the identity property: Resource ID of a managed identity to authenticate with Azure Key Vault, or System to
     * use a system-assigned identity.
     *
     * @return the identity value.
     */
    public String identity() {
        return this.identity;
    }

    /**
     * Get the keyVaultUrl property: Azure Key Vault URL pointing to the secret referenced by the container app.
     *
     * @return the keyVaultUrl value.
     */
    public String keyVaultUrl() {
        return this.keyVaultUrl;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
