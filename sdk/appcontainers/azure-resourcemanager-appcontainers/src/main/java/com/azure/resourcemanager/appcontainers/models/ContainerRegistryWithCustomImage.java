// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Container registry that the final image will be uploaded to.
 */
@Fluent
public final class ContainerRegistryWithCustomImage {
    /*
     * Login server of the container registry that the final image should be uploaded to. Builder resource needs to
     * have this container registry defined along with an identity to use to access it.
     */
    @JsonProperty(value = "server", required = true)
    private String server;

    /*
     * Full name that the final image should be uploaded as, including both image name and tag.
     */
    @JsonProperty(value = "image")
    private String image;

    /**
     * Creates an instance of ContainerRegistryWithCustomImage class.
     */
    public ContainerRegistryWithCustomImage() {
    }

    /**
     * Get the server property: Login server of the container registry that the final image should be uploaded to.
     * Builder resource needs to have this container registry defined along with an identity to use to access it.
     * 
     * @return the server value.
     */
    public String server() {
        return this.server;
    }

    /**
     * Set the server property: Login server of the container registry that the final image should be uploaded to.
     * Builder resource needs to have this container registry defined along with an identity to use to access it.
     * 
     * @param server the server value to set.
     * @return the ContainerRegistryWithCustomImage object itself.
     */
    public ContainerRegistryWithCustomImage withServer(String server) {
        this.server = server;
        return this;
    }

    /**
     * Get the image property: Full name that the final image should be uploaded as, including both image name and tag.
     * 
     * @return the image value.
     */
    public String image() {
        return this.image;
    }

    /**
     * Set the image property: Full name that the final image should be uploaded as, including both image name and tag.
     * 
     * @param image the image value to set.
     * @return the ContainerRegistryWithCustomImage object itself.
     */
    public ContainerRegistryWithCustomImage withImage(String image) {
        this.image = image;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (server() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property server in model ContainerRegistryWithCustomImage"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ContainerRegistryWithCustomImage.class);
}
