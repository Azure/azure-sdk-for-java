// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Defines parameters for http connection pooling.
 */
@Fluent
public final class HttpConnectionPool {
    /*
     * Maximum number of pending http1 requests allowed
     */
    @JsonProperty(value = "http1MaxPendingRequests")
    private Integer http1MaxPendingRequests;

    /*
     * Maximum number of http2 requests allowed
     */
    @JsonProperty(value = "http2MaxRequests")
    private Integer http2MaxRequests;

    /**
     * Creates an instance of HttpConnectionPool class.
     */
    public HttpConnectionPool() {
    }

    /**
     * Get the http1MaxPendingRequests property: Maximum number of pending http1 requests allowed.
     * 
     * @return the http1MaxPendingRequests value.
     */
    public Integer http1MaxPendingRequests() {
        return this.http1MaxPendingRequests;
    }

    /**
     * Set the http1MaxPendingRequests property: Maximum number of pending http1 requests allowed.
     * 
     * @param http1MaxPendingRequests the http1MaxPendingRequests value to set.
     * @return the HttpConnectionPool object itself.
     */
    public HttpConnectionPool withHttp1MaxPendingRequests(Integer http1MaxPendingRequests) {
        this.http1MaxPendingRequests = http1MaxPendingRequests;
        return this;
    }

    /**
     * Get the http2MaxRequests property: Maximum number of http2 requests allowed.
     * 
     * @return the http2MaxRequests value.
     */
    public Integer http2MaxRequests() {
        return this.http2MaxRequests;
    }

    /**
     * Set the http2MaxRequests property: Maximum number of http2 requests allowed.
     * 
     * @param http2MaxRequests the http2MaxRequests value to set.
     * @return the HttpConnectionPool object itself.
     */
    public HttpConnectionPool withHttp2MaxRequests(Integer http2MaxRequests) {
        this.http2MaxRequests = http2MaxRequests;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
