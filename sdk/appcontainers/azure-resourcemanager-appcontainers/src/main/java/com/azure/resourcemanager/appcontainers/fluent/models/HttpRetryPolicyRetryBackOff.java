// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.fluent.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Settings for retry backoff characteristics.
 */
@Fluent
public final class HttpRetryPolicyRetryBackOff {
    /*
     * Initial delay, in milliseconds, before retrying a request
     */
    @JsonProperty(value = "initialDelayInMilliseconds")
    private Long initialDelayInMilliseconds;

    /*
     * Maximum interval, in milliseconds, between retries
     */
    @JsonProperty(value = "maxIntervalInMilliseconds")
    private Long maxIntervalInMilliseconds;

    /**
     * Creates an instance of HttpRetryPolicyRetryBackOff class.
     */
    public HttpRetryPolicyRetryBackOff() {
    }

    /**
     * Get the initialDelayInMilliseconds property: Initial delay, in milliseconds, before retrying a request.
     * 
     * @return the initialDelayInMilliseconds value.
     */
    public Long initialDelayInMilliseconds() {
        return this.initialDelayInMilliseconds;
    }

    /**
     * Set the initialDelayInMilliseconds property: Initial delay, in milliseconds, before retrying a request.
     * 
     * @param initialDelayInMilliseconds the initialDelayInMilliseconds value to set.
     * @return the HttpRetryPolicyRetryBackOff object itself.
     */
    public HttpRetryPolicyRetryBackOff withInitialDelayInMilliseconds(Long initialDelayInMilliseconds) {
        this.initialDelayInMilliseconds = initialDelayInMilliseconds;
        return this;
    }

    /**
     * Get the maxIntervalInMilliseconds property: Maximum interval, in milliseconds, between retries.
     * 
     * @return the maxIntervalInMilliseconds value.
     */
    public Long maxIntervalInMilliseconds() {
        return this.maxIntervalInMilliseconds;
    }

    /**
     * Set the maxIntervalInMilliseconds property: Maximum interval, in milliseconds, between retries.
     * 
     * @param maxIntervalInMilliseconds the maxIntervalInMilliseconds value to set.
     * @return the HttpRetryPolicyRetryBackOff object itself.
     */
    public HttpRetryPolicyRetryBackOff withMaxIntervalInMilliseconds(Long maxIntervalInMilliseconds) {
        this.maxIntervalInMilliseconds = maxIntervalInMilliseconds;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
