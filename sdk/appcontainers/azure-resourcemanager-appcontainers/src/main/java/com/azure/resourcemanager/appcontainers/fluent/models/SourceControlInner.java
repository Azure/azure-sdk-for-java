// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.appcontainers.models.GithubActionConfiguration;
import com.azure.resourcemanager.appcontainers.models.SourceControlOperationState;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Container App SourceControl. */
@Fluent
public final class SourceControlInner extends ProxyResource {
    /*
     * SourceControl resource specific properties
     */
    @JsonProperty(value = "properties")
    private SourceControlProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /** Creates an instance of SourceControlInner class. */
    public SourceControlInner() {
    }

    /**
     * Get the innerProperties property: SourceControl resource specific properties.
     *
     * @return the innerProperties value.
     */
    private SourceControlProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the operationState property: Current provisioning State of the operation.
     *
     * @return the operationState value.
     */
    public SourceControlOperationState operationState() {
        return this.innerProperties() == null ? null : this.innerProperties().operationState();
    }

    /**
     * Get the repoUrl property: The repo url which will be integrated to ContainerApp.
     *
     * @return the repoUrl value.
     */
    public String repoUrl() {
        return this.innerProperties() == null ? null : this.innerProperties().repoUrl();
    }

    /**
     * Set the repoUrl property: The repo url which will be integrated to ContainerApp.
     *
     * @param repoUrl the repoUrl value to set.
     * @return the SourceControlInner object itself.
     */
    public SourceControlInner withRepoUrl(String repoUrl) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SourceControlProperties();
        }
        this.innerProperties().withRepoUrl(repoUrl);
        return this;
    }

    /**
     * Get the branch property: The branch which will trigger the auto deployment.
     *
     * @return the branch value.
     */
    public String branch() {
        return this.innerProperties() == null ? null : this.innerProperties().branch();
    }

    /**
     * Set the branch property: The branch which will trigger the auto deployment.
     *
     * @param branch the branch value to set.
     * @return the SourceControlInner object itself.
     */
    public SourceControlInner withBranch(String branch) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SourceControlProperties();
        }
        this.innerProperties().withBranch(branch);
        return this;
    }

    /**
     * Get the githubActionConfiguration property: Container App Revision Template with all possible settings and the
     * defaults if user did not provide them. The defaults are populated as they were at the creation time.
     *
     * @return the githubActionConfiguration value.
     */
    public GithubActionConfiguration githubActionConfiguration() {
        return this.innerProperties() == null ? null : this.innerProperties().githubActionConfiguration();
    }

    /**
     * Set the githubActionConfiguration property: Container App Revision Template with all possible settings and the
     * defaults if user did not provide them. The defaults are populated as they were at the creation time.
     *
     * @param githubActionConfiguration the githubActionConfiguration value to set.
     * @return the SourceControlInner object itself.
     */
    public SourceControlInner withGithubActionConfiguration(GithubActionConfiguration githubActionConfiguration) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SourceControlProperties();
        }
        this.innerProperties().withGithubActionConfiguration(githubActionConfiguration);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
