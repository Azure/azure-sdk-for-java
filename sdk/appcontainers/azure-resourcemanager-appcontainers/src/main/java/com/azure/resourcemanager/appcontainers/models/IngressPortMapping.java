// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Port mappings of container app ingress.
 */
@Fluent
public final class IngressPortMapping {
    /*
     * Specifies whether the app port is accessible outside of the environment
     */
    @JsonProperty(value = "external", required = true)
    private boolean external;

    /*
     * Specifies the port user's container listens on
     */
    @JsonProperty(value = "targetPort", required = true)
    private int targetPort;

    /*
     * Specifies the exposed port for the target port. If not specified, it defaults to target port
     */
    @JsonProperty(value = "exposedPort")
    private Integer exposedPort;

    /**
     * Creates an instance of IngressPortMapping class.
     */
    public IngressPortMapping() {
    }

    /**
     * Get the external property: Specifies whether the app port is accessible outside of the environment.
     * 
     * @return the external value.
     */
    public boolean external() {
        return this.external;
    }

    /**
     * Set the external property: Specifies whether the app port is accessible outside of the environment.
     * 
     * @param external the external value to set.
     * @return the IngressPortMapping object itself.
     */
    public IngressPortMapping withExternal(boolean external) {
        this.external = external;
        return this;
    }

    /**
     * Get the targetPort property: Specifies the port user's container listens on.
     * 
     * @return the targetPort value.
     */
    public int targetPort() {
        return this.targetPort;
    }

    /**
     * Set the targetPort property: Specifies the port user's container listens on.
     * 
     * @param targetPort the targetPort value to set.
     * @return the IngressPortMapping object itself.
     */
    public IngressPortMapping withTargetPort(int targetPort) {
        this.targetPort = targetPort;
        return this;
    }

    /**
     * Get the exposedPort property: Specifies the exposed port for the target port. If not specified, it defaults to
     * target port.
     * 
     * @return the exposedPort value.
     */
    public Integer exposedPort() {
        return this.exposedPort;
    }

    /**
     * Set the exposedPort property: Specifies the exposed port for the target port. If not specified, it defaults to
     * target port.
     * 
     * @param exposedPort the exposedPort value to set.
     * @return the IngressPortMapping object itself.
     */
    public IngressPortMapping withExposedPort(Integer exposedPort) {
        this.exposedPort = exposedPort;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
