// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Dapr Component Resiliency Policy Configuration.
 */
@Fluent
public final class DaprComponentResiliencyPolicyConfiguration {
    /*
     * The optional HTTP retry policy configuration
     */
    @JsonProperty(value = "httpRetryPolicy")
    private DaprComponentResiliencyPolicyHttpRetryPolicyConfiguration httpRetryPolicy;

    /*
     * The optional timeout policy configuration
     */
    @JsonProperty(value = "timeoutPolicy")
    private DaprComponentResiliencyPolicyTimeoutPolicyConfiguration timeoutPolicy;

    /*
     * The optional circuit breaker policy configuration
     */
    @JsonProperty(value = "circuitBreakerPolicy")
    private DaprComponentResiliencyPolicyCircuitBreakerPolicyConfiguration circuitBreakerPolicy;

    /**
     * Creates an instance of DaprComponentResiliencyPolicyConfiguration class.
     */
    public DaprComponentResiliencyPolicyConfiguration() {
    }

    /**
     * Get the httpRetryPolicy property: The optional HTTP retry policy configuration.
     * 
     * @return the httpRetryPolicy value.
     */
    public DaprComponentResiliencyPolicyHttpRetryPolicyConfiguration httpRetryPolicy() {
        return this.httpRetryPolicy;
    }

    /**
     * Set the httpRetryPolicy property: The optional HTTP retry policy configuration.
     * 
     * @param httpRetryPolicy the httpRetryPolicy value to set.
     * @return the DaprComponentResiliencyPolicyConfiguration object itself.
     */
    public DaprComponentResiliencyPolicyConfiguration
        withHttpRetryPolicy(DaprComponentResiliencyPolicyHttpRetryPolicyConfiguration httpRetryPolicy) {
        this.httpRetryPolicy = httpRetryPolicy;
        return this;
    }

    /**
     * Get the timeoutPolicy property: The optional timeout policy configuration.
     * 
     * @return the timeoutPolicy value.
     */
    public DaprComponentResiliencyPolicyTimeoutPolicyConfiguration timeoutPolicy() {
        return this.timeoutPolicy;
    }

    /**
     * Set the timeoutPolicy property: The optional timeout policy configuration.
     * 
     * @param timeoutPolicy the timeoutPolicy value to set.
     * @return the DaprComponentResiliencyPolicyConfiguration object itself.
     */
    public DaprComponentResiliencyPolicyConfiguration
        withTimeoutPolicy(DaprComponentResiliencyPolicyTimeoutPolicyConfiguration timeoutPolicy) {
        this.timeoutPolicy = timeoutPolicy;
        return this;
    }

    /**
     * Get the circuitBreakerPolicy property: The optional circuit breaker policy configuration.
     * 
     * @return the circuitBreakerPolicy value.
     */
    public DaprComponentResiliencyPolicyCircuitBreakerPolicyConfiguration circuitBreakerPolicy() {
        return this.circuitBreakerPolicy;
    }

    /**
     * Set the circuitBreakerPolicy property: The optional circuit breaker policy configuration.
     * 
     * @param circuitBreakerPolicy the circuitBreakerPolicy value to set.
     * @return the DaprComponentResiliencyPolicyConfiguration object itself.
     */
    public DaprComponentResiliencyPolicyConfiguration
        withCircuitBreakerPolicy(DaprComponentResiliencyPolicyCircuitBreakerPolicyConfiguration circuitBreakerPolicy) {
        this.circuitBreakerPolicy = circuitBreakerPolicy;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (httpRetryPolicy() != null) {
            httpRetryPolicy().validate();
        }
        if (timeoutPolicy() != null) {
            timeoutPolicy().validate();
        }
        if (circuitBreakerPolicy() != null) {
            circuitBreakerPolicy().validate();
        }
    }
}
