// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentStorageInner;
import com.azure.resourcemanager.appcontainers.models.ManagedEnvironmentStorage;
import com.azure.resourcemanager.appcontainers.models.ManagedEnvironmentStorageProperties;

public final class ManagedEnvironmentStorageImpl
    implements ManagedEnvironmentStorage, ManagedEnvironmentStorage.Definition, ManagedEnvironmentStorage.Update {
    private ManagedEnvironmentStorageInner innerObject;

    private final com.azure.resourcemanager.appcontainers.ContainerAppsApiManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public ManagedEnvironmentStorageProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public ManagedEnvironmentStorageInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.appcontainers.ContainerAppsApiManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String envName;

    private String name;

    public ManagedEnvironmentStorageImpl withExistingManagedEnvironment(String resourceGroupName, String envName) {
        this.resourceGroupName = resourceGroupName;
        this.envName = envName;
        return this;
    }

    public ManagedEnvironmentStorage create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedEnvironmentsStorages()
                .createOrUpdateWithResponse(resourceGroupName, envName, name, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public ManagedEnvironmentStorage create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedEnvironmentsStorages()
                .createOrUpdateWithResponse(resourceGroupName, envName, name, this.innerModel(), context)
                .getValue();
        return this;
    }

    ManagedEnvironmentStorageImpl(
        String name, com.azure.resourcemanager.appcontainers.ContainerAppsApiManager serviceManager) {
        this.innerObject = new ManagedEnvironmentStorageInner();
        this.serviceManager = serviceManager;
        this.name = name;
    }

    public ManagedEnvironmentStorageImpl update() {
        return this;
    }

    public ManagedEnvironmentStorage apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedEnvironmentsStorages()
                .createOrUpdateWithResponse(resourceGroupName, envName, name, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public ManagedEnvironmentStorage apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedEnvironmentsStorages()
                .createOrUpdateWithResponse(resourceGroupName, envName, name, this.innerModel(), context)
                .getValue();
        return this;
    }

    ManagedEnvironmentStorageImpl(
        ManagedEnvironmentStorageInner innerObject,
        com.azure.resourcemanager.appcontainers.ContainerAppsApiManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.envName = Utils.getValueFromIdByName(innerObject.id(), "managedEnvironments");
        this.name = Utils.getValueFromIdByName(innerObject.id(), "storages");
    }

    public ManagedEnvironmentStorage refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedEnvironmentsStorages()
                .getWithResponse(resourceGroupName, envName, name, Context.NONE)
                .getValue();
        return this;
    }

    public ManagedEnvironmentStorage refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedEnvironmentsStorages()
                .getWithResponse(resourceGroupName, envName, name, context)
                .getValue();
        return this;
    }

    public ManagedEnvironmentStorageImpl withProperties(ManagedEnvironmentStorageProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
