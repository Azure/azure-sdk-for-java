// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.management.serializer.SerializerFactory;
import com.azure.core.util.serializer.SerializerEncoding;
import com.azure.resourcemanager.appcontainers.models.Container;
import com.azure.resourcemanager.appcontainers.models.ContainerAppProbe;
import com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet;
import com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGetHttpHeadersItem;
import com.azure.resourcemanager.appcontainers.models.ContainerResources;
import com.azure.resourcemanager.appcontainers.models.InitContainer;
import com.azure.resourcemanager.appcontainers.models.JobConfiguration;
import com.azure.resourcemanager.appcontainers.models.JobConfigurationEventTriggerConfig;
import com.azure.resourcemanager.appcontainers.models.JobConfigurationManualTriggerConfig;
import com.azure.resourcemanager.appcontainers.models.JobScale;
import com.azure.resourcemanager.appcontainers.models.JobScaleRule;
import com.azure.resourcemanager.appcontainers.models.JobTemplate;
import com.azure.resourcemanager.appcontainers.models.TriggerType;
import com.azure.resourcemanager.appcontainers.models.Type;
import java.io.IOException;
import java.util.Arrays;

/**
 * Samples for Jobs CreateOrUpdate.
 */
public final class JobsCreateOrUpdateSamples {
    /*
     * x-ms-original-file:
     * specification/app/resource-manager/Microsoft.App/stable/2024-03-01/examples/Job_CreateorUpdate_EventTrigger.json
     */
    /**
     * Sample code: Create or Update Container Apps Job With Event Driven Trigger.
     * 
     * @param manager Entry point to ContainerAppsApiManager.
     */
    public static void createOrUpdateContainerAppsJobWithEventDrivenTrigger(
        com.azure.resourcemanager.appcontainers.ContainerAppsApiManager manager) throws IOException {
        manager.jobs()
            .define("testcontainerappsjob0")
            .withRegion("East US")
            .withExistingResourceGroup("rg")
            .withEnvironmentId(
                "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/rg/providers/Microsoft.App/managedEnvironments/demokube")
            .withConfiguration(new JobConfiguration().withTriggerType(TriggerType.EVENT)
                .withReplicaTimeout(10)
                .withReplicaRetryLimit(10)
                .withEventTriggerConfig(new JobConfigurationEventTriggerConfig().withReplicaCompletionCount(1)
                    .withParallelism(4)
                    .withScale(new JobScale().withPollingInterval(40)
                        .withMinExecutions(1)
                        .withMaxExecutions(5)
                        .withRules(Arrays.asList(new JobScaleRule().withName("servicebuscalingrule")
                            .withType("azure-servicebus")
                            .withMetadata(SerializerFactory.createDefaultManagementSerializerAdapter()
                                .deserialize("{\"topicName\":\"my-topic\"}", Object.class,
                                    SerializerEncoding.JSON)))))))
            .withTemplate(new JobTemplate()
                .withInitContainers(Arrays.asList(new InitContainer().withImage("repo/testcontainerappsjob0:v4")
                    .withName("testinitcontainerAppsJob0")
                    .withCommand(Arrays.asList("/bin/sh"))
                    .withArgs(Arrays.asList("-c", "while true; do echo hello; sleep 10;done"))
                    .withResources(new ContainerResources().withCpu(0.5D).withMemory("1Gi"))))
                .withContainers(Arrays.asList(
                    new Container().withImage("repo/testcontainerappsjob0:v1").withName("testcontainerappsjob0"))))
            .create();
    }

    /*
     * x-ms-original-file:
     * specification/app/resource-manager/Microsoft.App/stable/2024-03-01/examples/Job_CreateorUpdate.json
     */
    /**
     * Sample code: Create or Update Container Apps Job.
     * 
     * @param manager Entry point to ContainerAppsApiManager.
     */
    public static void
        createOrUpdateContainerAppsJob(com.azure.resourcemanager.appcontainers.ContainerAppsApiManager manager) {
        manager.jobs()
            .define("testcontainerappsjob0")
            .withRegion("East US")
            .withExistingResourceGroup("rg")
            .withEnvironmentId(
                "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/rg/providers/Microsoft.App/managedEnvironments/demokube")
            .withConfiguration(new JobConfiguration().withTriggerType(TriggerType.MANUAL)
                .withReplicaTimeout(10)
                .withReplicaRetryLimit(10)
                .withManualTriggerConfig(
                    new JobConfigurationManualTriggerConfig().withReplicaCompletionCount(1).withParallelism(4)))
            .withTemplate(new JobTemplate()
                .withInitContainers(Arrays.asList(new InitContainer().withImage("repo/testcontainerappsjob0:v4")
                    .withName("testinitcontainerAppsJob0")
                    .withCommand(Arrays.asList("/bin/sh"))
                    .withArgs(Arrays.asList("-c", "while true; do echo hello; sleep 10;done"))
                    .withResources(new ContainerResources().withCpu(0.5D).withMemory("1Gi"))))
                .withContainers(Arrays.asList(new Container().withImage("repo/testcontainerappsjob0:v1")
                    .withName("testcontainerappsjob0")
                    .withProbes(Arrays.asList(new ContainerAppProbe()
                        .withHttpGet(new ContainerAppProbeHttpGet()
                            .withHttpHeaders(
                                Arrays.asList(new ContainerAppProbeHttpGetHttpHeadersItem().withName("Custom-Header")
                                    .withValue("Awesome")))
                            .withPath("/health")
                            .withPort(8080))
                        .withInitialDelaySeconds(5)
                        .withPeriodSeconds(3)
                        .withType(Type.LIVENESS))))))
            .create();
    }
}
