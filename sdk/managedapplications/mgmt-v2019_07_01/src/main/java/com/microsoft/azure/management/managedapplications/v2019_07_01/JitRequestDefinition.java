/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.managedapplications.v2019_07_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.managedapplications.v2019_07_01.implementation.ManagedApplicationsManager;
import java.util.List;
import com.microsoft.azure.management.managedapplications.v2019_07_01.implementation.JitRequestDefinitionInner;

/**
 * Type representing JitRequestDefinition.
 */
public interface JitRequestDefinition extends HasInner<JitRequestDefinitionInner>, Resource, GroupableResourceCore<ManagedApplicationsManager, JitRequestDefinitionInner>, HasResourceGroup, Refreshable<JitRequestDefinition>, Updatable<JitRequestDefinition.Update>, HasManager<ManagedApplicationsManager> {
    /**
     * @return the applicationResourceId value.
     */
    String applicationResourceId();

    /**
     * @return the createdBy value.
     */
    ApplicationClientDetails createdBy();

    /**
     * @return the jitAuthorizationPolicies value.
     */
    List<JitAuthorizationPolicies> jitAuthorizationPolicies();

    /**
     * @return the jitRequestState value.
     */
    JitRequestState jitRequestState();

    /**
     * @return the jitSchedulingPolicy value.
     */
    JitSchedulingPolicy jitSchedulingPolicy();

    /**
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * @return the publisherTenantId value.
     */
    String publisherTenantId();

    /**
     * @return the updatedBy value.
     */
    ApplicationClientDetails updatedBy();

    /**
     * The entirety of the JitRequestDefinition definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithApplicationResourceId, DefinitionStages.WithJitAuthorizationPolicies, DefinitionStages.WithJitSchedulingPolicy, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of JitRequestDefinition definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a JitRequestDefinition definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the JitRequestDefinition definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithApplicationResourceId> {
        }

        /**
         * The stage of the jitrequestdefinition definition allowing to specify ApplicationResourceId.
         */
        interface WithApplicationResourceId {
           /**
            * Specifies applicationResourceId.
            * @param applicationResourceId The parent application id
            * @return the next definition stage
*/
            WithJitAuthorizationPolicies withApplicationResourceId(String applicationResourceId);
        }

        /**
         * The stage of the jitrequestdefinition definition allowing to specify JitAuthorizationPolicies.
         */
        interface WithJitAuthorizationPolicies {
           /**
            * Specifies jitAuthorizationPolicies.
            * @param jitAuthorizationPolicies The JIT authorization policies
            * @return the next definition stage
*/
            WithJitSchedulingPolicy withJitAuthorizationPolicies(List<JitAuthorizationPolicies> jitAuthorizationPolicies);
        }

        /**
         * The stage of the jitrequestdefinition definition allowing to specify JitSchedulingPolicy.
         */
        interface WithJitSchedulingPolicy {
           /**
            * Specifies jitSchedulingPolicy.
            * @param jitSchedulingPolicy The JIT request properties
            * @return the next definition stage
*/
            WithCreate withJitSchedulingPolicy(JitSchedulingPolicy jitSchedulingPolicy);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<JitRequestDefinition>, Resource.DefinitionWithTags<WithCreate> {
        }
    }
    /**
     * The template for a JitRequestDefinition update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<JitRequestDefinition>, Resource.UpdateWithTags<Update> {
    }

    /**
     * Grouping of JitRequestDefinition update stages.
     */
    interface UpdateStages {
    }
}
