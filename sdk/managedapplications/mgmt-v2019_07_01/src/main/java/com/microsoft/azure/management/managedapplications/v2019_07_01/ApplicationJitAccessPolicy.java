/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.managedapplications.v2019_07_01;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Managed application Jit access policy.
 */
public class ApplicationJitAccessPolicy {
    /**
     * Whether the JIT access is enabled.
     */
    @JsonProperty(value = "jitAccessEnabled", required = true)
    private boolean jitAccessEnabled;

    /**
     * JIT approval mode. Possible values include: 'NotSpecified',
     * 'AutoApprove', 'ManualApprove'.
     */
    @JsonProperty(value = "jitApprovalMode")
    private JitApprovalMode jitApprovalMode;

    /**
     * The JIT approvers.
     */
    @JsonProperty(value = "jitApprovers")
    private List<JitApproverDefinition> jitApprovers;

    /**
     * The maximum duration JIT access is granted. This is an ISO8601 time
     * period value.
     */
    @JsonProperty(value = "maximumJitAccessDuration")
    private String maximumJitAccessDuration;

    /**
     * Get whether the JIT access is enabled.
     *
     * @return the jitAccessEnabled value
     */
    public boolean jitAccessEnabled() {
        return this.jitAccessEnabled;
    }

    /**
     * Set whether the JIT access is enabled.
     *
     * @param jitAccessEnabled the jitAccessEnabled value to set
     * @return the ApplicationJitAccessPolicy object itself.
     */
    public ApplicationJitAccessPolicy withJitAccessEnabled(boolean jitAccessEnabled) {
        this.jitAccessEnabled = jitAccessEnabled;
        return this;
    }

    /**
     * Get jIT approval mode. Possible values include: 'NotSpecified', 'AutoApprove', 'ManualApprove'.
     *
     * @return the jitApprovalMode value
     */
    public JitApprovalMode jitApprovalMode() {
        return this.jitApprovalMode;
    }

    /**
     * Set jIT approval mode. Possible values include: 'NotSpecified', 'AutoApprove', 'ManualApprove'.
     *
     * @param jitApprovalMode the jitApprovalMode value to set
     * @return the ApplicationJitAccessPolicy object itself.
     */
    public ApplicationJitAccessPolicy withJitApprovalMode(JitApprovalMode jitApprovalMode) {
        this.jitApprovalMode = jitApprovalMode;
        return this;
    }

    /**
     * Get the JIT approvers.
     *
     * @return the jitApprovers value
     */
    public List<JitApproverDefinition> jitApprovers() {
        return this.jitApprovers;
    }

    /**
     * Set the JIT approvers.
     *
     * @param jitApprovers the jitApprovers value to set
     * @return the ApplicationJitAccessPolicy object itself.
     */
    public ApplicationJitAccessPolicy withJitApprovers(List<JitApproverDefinition> jitApprovers) {
        this.jitApprovers = jitApprovers;
        return this;
    }

    /**
     * Get the maximum duration JIT access is granted. This is an ISO8601 time period value.
     *
     * @return the maximumJitAccessDuration value
     */
    public String maximumJitAccessDuration() {
        return this.maximumJitAccessDuration;
    }

    /**
     * Set the maximum duration JIT access is granted. This is an ISO8601 time period value.
     *
     * @param maximumJitAccessDuration the maximumJitAccessDuration value to set
     * @return the ApplicationJitAccessPolicy object itself.
     */
    public ApplicationJitAccessPolicy withMaximumJitAccessDuration(String maximumJitAccessDuration) {
        this.maximumJitAccessDuration = maximumJitAccessDuration;
        return this;
    }

}
