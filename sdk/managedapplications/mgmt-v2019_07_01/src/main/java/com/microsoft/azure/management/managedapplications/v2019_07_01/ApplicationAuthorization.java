/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.managedapplications.v2019_07_01;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The managed application provider authorization.
 */
public class ApplicationAuthorization {
    /**
     * The provider's principal identifier. This is the identity that the
     * provider will use to call ARM to manage the managed application
     * resources.
     */
    @JsonProperty(value = "principalId", required = true)
    private String principalId;

    /**
     * The provider's role definition identifier. This role will define all the
     * permissions that the provider must have on the managed application's
     * container resource group. This role definition cannot have permission to
     * delete the resource group.
     */
    @JsonProperty(value = "roleDefinitionId", required = true)
    private String roleDefinitionId;

    /**
     * Get the provider's principal identifier. This is the identity that the provider will use to call ARM to manage the managed application resources.
     *
     * @return the principalId value
     */
    public String principalId() {
        return this.principalId;
    }

    /**
     * Set the provider's principal identifier. This is the identity that the provider will use to call ARM to manage the managed application resources.
     *
     * @param principalId the principalId value to set
     * @return the ApplicationAuthorization object itself.
     */
    public ApplicationAuthorization withPrincipalId(String principalId) {
        this.principalId = principalId;
        return this;
    }

    /**
     * Get the provider's role definition identifier. This role will define all the permissions that the provider must have on the managed application's container resource group. This role definition cannot have permission to delete the resource group.
     *
     * @return the roleDefinitionId value
     */
    public String roleDefinitionId() {
        return this.roleDefinitionId;
    }

    /**
     * Set the provider's role definition identifier. This role will define all the permissions that the provider must have on the managed application's container resource group. This role definition cannot have permission to delete the resource group.
     *
     * @param roleDefinitionId the roleDefinitionId value to set
     * @return the ApplicationAuthorization object itself.
     */
    public ApplicationAuthorization withRoleDefinitionId(String roleDefinitionId) {
        this.roleDefinitionId = roleDefinitionId;
        return this;
    }

}
