/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.managedapplications.v2019_07_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.managedapplications.v2019_07_01.implementation.ManagedApplicationsManager;
import java.util.List;
import com.microsoft.azure.management.managedapplications.v2019_07_01.implementation.ApplicationInner;

/**
 * Type representing Application.
 */
public interface Application extends HasInner<ApplicationInner>, Resource, GroupableResourceCore<ManagedApplicationsManager, ApplicationInner>, HasResourceGroup, Refreshable<Application>, Updatable<Application.Update>, HasManager<ManagedApplicationsManager> {
    /**
     * @return the applicationDefinitionId value.
     */
    String applicationDefinitionId();

    /**
     * @return the artifacts value.
     */
    List<ApplicationArtifact> artifacts();

    /**
     * @return the authorizations value.
     */
    List<ApplicationAuthorization> authorizations();

    /**
     * @return the billingDetails value.
     */
    ApplicationBillingDetailsDefinition billingDetails();

    /**
     * @return the createdBy value.
     */
    ApplicationClientDetails createdBy();

    /**
     * @return the customerSupport value.
     */
    ApplicationPackageContact customerSupport();

    /**
     * @return the identity value.
     */
    Identity identity();

    /**
     * @return the jitAccessPolicy value.
     */
    ApplicationJitAccessPolicy jitAccessPolicy();

    /**
     * @return the kind value.
     */
    String kind();

    /**
     * @return the managedBy value.
     */
    String managedBy();

    /**
     * @return the managedResourceGroupId value.
     */
    String managedResourceGroupId();

    /**
     * @return the managementMode value.
     */
    ApplicationManagementMode managementMode();

    /**
     * @return the outputs value.
     */
    Object outputs();

    /**
     * @return the parameters value.
     */
    Object parameters();

    /**
     * @return the plan value.
     */
    Plan plan();

    /**
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * @return the publisherTenantId value.
     */
    String publisherTenantId();

    /**
     * @return the sku value.
     */
    Sku sku();

    /**
     * @return the supportUrls value.
     */
    ApplicationPackageSupportUrls supportUrls();

    /**
     * @return the updatedBy value.
     */
    ApplicationClientDetails updatedBy();

    /**
     * The entirety of the Application definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithKind, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of Application definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a Application definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the Application definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithKind> {
        }

        /**
         * The stage of the application definition allowing to specify Kind.
         */
        interface WithKind {
           /**
            * Specifies kind.
            * @param kind The kind of the managed application. Allowed values are MarketPlace and ServiceCatalog
            * @return the next definition stage
*/
            WithCreate withKind(String kind);
        }

        /**
         * The stage of the application definition allowing to specify ApplicationDefinitionId.
         */
        interface WithApplicationDefinitionId {
            /**
             * Specifies applicationDefinitionId.
             * @param applicationDefinitionId The fully qualified path of managed application definition Id
             * @return the next definition stage
             */
            WithCreate withApplicationDefinitionId(String applicationDefinitionId);
        }

        /**
         * The stage of the application definition allowing to specify Identity.
         */
        interface WithIdentity {
            /**
             * Specifies identity.
             * @param identity The identity of the resource
             * @return the next definition stage
             */
            WithCreate withIdentity(Identity identity);
        }

        /**
         * The stage of the application definition allowing to specify JitAccessPolicy.
         */
        interface WithJitAccessPolicy {
            /**
             * Specifies jitAccessPolicy.
             * @param jitAccessPolicy The managed application Jit access policy
             * @return the next definition stage
             */
            WithCreate withJitAccessPolicy(ApplicationJitAccessPolicy jitAccessPolicy);
        }

        /**
         * The stage of the application definition allowing to specify ManagedBy.
         */
        interface WithManagedBy {
            /**
             * Specifies managedBy.
             * @param managedBy ID of the resource that manages this resource
             * @return the next definition stage
             */
            WithCreate withManagedBy(String managedBy);
        }

        /**
         * The stage of the application definition allowing to specify ManagedResourceGroupId.
         */
        interface WithManagedResourceGroupId {
            /**
             * Specifies managedResourceGroupId.
             * @param managedResourceGroupId The managed resource group Id
             * @return the next definition stage
             */
            WithCreate withManagedResourceGroupId(String managedResourceGroupId);
        }

        /**
         * The stage of the application definition allowing to specify Parameters.
         */
        interface WithParameters {
            /**
             * Specifies parameters.
             * @param parameters Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string
             * @return the next definition stage
             */
            WithCreate withParameters(Object parameters);
        }

        /**
         * The stage of the application definition allowing to specify Plan.
         */
        interface WithPlan {
            /**
             * Specifies plan.
             * @param plan The plan information
             * @return the next definition stage
             */
            WithCreate withPlan(Plan plan);
        }

        /**
         * The stage of the application definition allowing to specify Sku.
         */
        interface WithSku {
            /**
             * Specifies sku.
             * @param sku The SKU of the resource
             * @return the next definition stage
             */
            WithCreate withSku(Sku sku);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<Application>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithApplicationDefinitionId, DefinitionStages.WithIdentity, DefinitionStages.WithJitAccessPolicy, DefinitionStages.WithManagedBy, DefinitionStages.WithManagedResourceGroupId, DefinitionStages.WithParameters, DefinitionStages.WithPlan, DefinitionStages.WithSku {
        }
    }
    /**
     * The template for a Application update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<Application>, Resource.UpdateWithTags<Update>, UpdateStages.WithApplicationDefinitionId, UpdateStages.WithIdentity, UpdateStages.WithJitAccessPolicy, UpdateStages.WithManagedBy, UpdateStages.WithManagedResourceGroupId, UpdateStages.WithParameters, UpdateStages.WithPlan, UpdateStages.WithSku {
    }

    /**
     * Grouping of Application update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the application update allowing to specify ApplicationDefinitionId.
         */
        interface WithApplicationDefinitionId {
            /**
             * Specifies applicationDefinitionId.
             * @param applicationDefinitionId The fully qualified path of managed application definition Id
             * @return the next update stage
             */
            Update withApplicationDefinitionId(String applicationDefinitionId);
        }

        /**
         * The stage of the application update allowing to specify Identity.
         */
        interface WithIdentity {
            /**
             * Specifies identity.
             * @param identity The identity of the resource
             * @return the next update stage
             */
            Update withIdentity(Identity identity);
        }

        /**
         * The stage of the application update allowing to specify JitAccessPolicy.
         */
        interface WithJitAccessPolicy {
            /**
             * Specifies jitAccessPolicy.
             * @param jitAccessPolicy The managed application Jit access policy
             * @return the next update stage
             */
            Update withJitAccessPolicy(ApplicationJitAccessPolicy jitAccessPolicy);
        }

        /**
         * The stage of the application update allowing to specify ManagedBy.
         */
        interface WithManagedBy {
            /**
             * Specifies managedBy.
             * @param managedBy ID of the resource that manages this resource
             * @return the next update stage
             */
            Update withManagedBy(String managedBy);
        }

        /**
         * The stage of the application update allowing to specify ManagedResourceGroupId.
         */
        interface WithManagedResourceGroupId {
            /**
             * Specifies managedResourceGroupId.
             * @param managedResourceGroupId The managed resource group Id
             * @return the next update stage
             */
            Update withManagedResourceGroupId(String managedResourceGroupId);
        }

        /**
         * The stage of the application update allowing to specify Parameters.
         */
        interface WithParameters {
            /**
             * Specifies parameters.
             * @param parameters Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string
             * @return the next update stage
             */
            Update withParameters(Object parameters);
        }

        /**
         * The stage of the application update allowing to specify Plan.
         */
        interface WithPlan {
            /**
             * Specifies plan.
             * @param plan The plan information
             * @return the next update stage
             */
            Update withPlan(Plan plan);
        }

        /**
         * The stage of the application update allowing to specify Sku.
         */
        interface WithSku {
            /**
             * Specifies sku.
             * @param sku The SKU of the resource
             * @return the next update stage
             */
            Update withSku(Sku sku);
        }

    }
}
