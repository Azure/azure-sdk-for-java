// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managedapplications.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.managedapplications.fluent.models.ApplicationInner;
import com.azure.resourcemanager.managedapplications.fluent.models.UpdateAccessDefinitionInner;
import com.azure.resourcemanager.managedapplications.models.AllowedUpgradePlansResult;
import com.azure.resourcemanager.managedapplications.models.Application;
import com.azure.resourcemanager.managedapplications.models.ApplicationArtifact;
import com.azure.resourcemanager.managedapplications.models.ApplicationAuthorization;
import com.azure.resourcemanager.managedapplications.models.ApplicationBillingDetailsDefinition;
import com.azure.resourcemanager.managedapplications.models.ApplicationClientDetails;
import com.azure.resourcemanager.managedapplications.models.ApplicationJitAccessPolicy;
import com.azure.resourcemanager.managedapplications.models.ApplicationManagementMode;
import com.azure.resourcemanager.managedapplications.models.ApplicationPackageContact;
import com.azure.resourcemanager.managedapplications.models.ApplicationPackageSupportUrls;
import com.azure.resourcemanager.managedapplications.models.Identity;
import com.azure.resourcemanager.managedapplications.models.ListTokenRequest;
import com.azure.resourcemanager.managedapplications.models.ManagedIdentityTokenResult;
import com.azure.resourcemanager.managedapplications.models.Plan;
import com.azure.resourcemanager.managedapplications.models.ProvisioningState;
import com.azure.resourcemanager.managedapplications.models.Sku;
import com.azure.resourcemanager.managedapplications.models.UpdateAccessDefinition;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class ApplicationImpl implements Application, Application.Definition, Application.Update {
    private ApplicationInner innerObject;

    private final com.azure.resourcemanager.managedapplications.ApplicationManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String managedBy() {
        return this.innerModel().managedBy();
    }

    public Sku sku() {
        return this.innerModel().sku();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Plan plan() {
        return this.innerModel().plan();
    }

    public String kind() {
        return this.innerModel().kind();
    }

    public Identity identity() {
        return this.innerModel().identity();
    }

    public String managedResourceGroupId() {
        return this.innerModel().managedResourceGroupId();
    }

    public String applicationDefinitionId() {
        return this.innerModel().applicationDefinitionId();
    }

    public Object parameters() {
        return this.innerModel().parameters();
    }

    public Object outputs() {
        return this.innerModel().outputs();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public ApplicationBillingDetailsDefinition billingDetails() {
        return this.innerModel().billingDetails();
    }

    public ApplicationJitAccessPolicy jitAccessPolicy() {
        return this.innerModel().jitAccessPolicy();
    }

    public String publisherTenantId() {
        return this.innerModel().publisherTenantId();
    }

    public List<ApplicationAuthorization> authorizations() {
        List<ApplicationAuthorization> inner = this.innerModel().authorizations();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ApplicationManagementMode managementMode() {
        return this.innerModel().managementMode();
    }

    public ApplicationPackageContact customerSupport() {
        return this.innerModel().customerSupport();
    }

    public ApplicationPackageSupportUrls supportUrls() {
        return this.innerModel().supportUrls();
    }

    public List<ApplicationArtifact> artifacts() {
        List<ApplicationArtifact> inner = this.innerModel().artifacts();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ApplicationClientDetails createdBy() {
        return this.innerModel().createdBy();
    }

    public ApplicationClientDetails updatedBy() {
        return this.innerModel().updatedBy();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ApplicationInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.managedapplications.ApplicationManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String applicationName;

    public ApplicationImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public Application create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplications()
                .createOrUpdate(resourceGroupName, applicationName, this.innerModel(), Context.NONE);
        return this;
    }

    public Application create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplications()
                .createOrUpdate(resourceGroupName, applicationName, this.innerModel(), context);
        return this;
    }

    ApplicationImpl(String name, com.azure.resourcemanager.managedapplications.ApplicationManager serviceManager) {
        this.innerObject = new ApplicationInner();
        this.serviceManager = serviceManager;
        this.applicationName = name;
    }

    public ApplicationImpl update() {
        return this;
    }

    public Application apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplications()
                .createOrUpdate(resourceGroupName, applicationName, this.innerModel(), Context.NONE);
        return this;
    }

    public Application apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplications()
                .createOrUpdate(resourceGroupName, applicationName, this.innerModel(), context);
        return this;
    }

    ApplicationImpl(
        ApplicationInner innerObject, com.azure.resourcemanager.managedapplications.ApplicationManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.applicationName = Utils.getValueFromIdByName(innerObject.id(), "applications");
    }

    public Application refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplications()
                .getByResourceGroupWithResponse(resourceGroupName, applicationName, Context.NONE)
                .getValue();
        return this;
    }

    public Application refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplications()
                .getByResourceGroupWithResponse(resourceGroupName, applicationName, context)
                .getValue();
        return this;
    }

    public void refreshPermissions() {
        serviceManager.applications().refreshPermissions(resourceGroupName, applicationName);
    }

    public void refreshPermissions(Context context) {
        serviceManager.applications().refreshPermissions(resourceGroupName, applicationName, context);
    }

    public Response<AllowedUpgradePlansResult> listAllowedUpgradePlansWithResponse(Context context) {
        return serviceManager
            .applications()
            .listAllowedUpgradePlansWithResponse(resourceGroupName, applicationName, context);
    }

    public AllowedUpgradePlansResult listAllowedUpgradePlans() {
        return serviceManager.applications().listAllowedUpgradePlans(resourceGroupName, applicationName);
    }

    public UpdateAccessDefinition updateAccess(UpdateAccessDefinitionInner parameters) {
        return serviceManager.applications().updateAccess(resourceGroupName, applicationName, parameters);
    }

    public UpdateAccessDefinition updateAccess(UpdateAccessDefinitionInner parameters, Context context) {
        return serviceManager.applications().updateAccess(resourceGroupName, applicationName, parameters, context);
    }

    public Response<ManagedIdentityTokenResult> listTokensWithResponse(ListTokenRequest parameters, Context context) {
        return serviceManager
            .applications()
            .listTokensWithResponse(resourceGroupName, applicationName, parameters, context);
    }

    public ManagedIdentityTokenResult listTokens(ListTokenRequest parameters) {
        return serviceManager.applications().listTokens(resourceGroupName, applicationName, parameters);
    }

    public ApplicationImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public ApplicationImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public ApplicationImpl withKind(String kind) {
        this.innerModel().withKind(kind);
        return this;
    }

    public ApplicationImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public ApplicationImpl withManagedBy(String managedBy) {
        this.innerModel().withManagedBy(managedBy);
        return this;
    }

    public ApplicationImpl withSku(Sku sku) {
        this.innerModel().withSku(sku);
        return this;
    }

    public ApplicationImpl withPlan(Plan plan) {
        this.innerModel().withPlan(plan);
        return this;
    }

    public ApplicationImpl withIdentity(Identity identity) {
        this.innerModel().withIdentity(identity);
        return this;
    }

    public ApplicationImpl withManagedResourceGroupId(String managedResourceGroupId) {
        this.innerModel().withManagedResourceGroupId(managedResourceGroupId);
        return this;
    }

    public ApplicationImpl withApplicationDefinitionId(String applicationDefinitionId) {
        this.innerModel().withApplicationDefinitionId(applicationDefinitionId);
        return this;
    }

    public ApplicationImpl withParameters(Object parameters) {
        this.innerModel().withParameters(parameters);
        return this;
    }

    public ApplicationImpl withJitAccessPolicy(ApplicationJitAccessPolicy jitAccessPolicy) {
        this.innerModel().withJitAccessPolicy(jitAccessPolicy);
        return this;
    }
}
