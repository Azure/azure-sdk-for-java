// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managedapplications.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * List token request body.
 */
@Fluent
public final class ListTokenRequest implements JsonSerializable<ListTokenRequest> {
    /*
     * The authorization audience.
     */
    private String authorizationAudience;

    /*
     * The user assigned identities.
     */
    private List<String> userAssignedIdentities;

    /**
     * Creates an instance of ListTokenRequest class.
     */
    public ListTokenRequest() {
    }

    /**
     * Get the authorizationAudience property: The authorization audience.
     * 
     * @return the authorizationAudience value.
     */
    public String authorizationAudience() {
        return this.authorizationAudience;
    }

    /**
     * Set the authorizationAudience property: The authorization audience.
     * 
     * @param authorizationAudience the authorizationAudience value to set.
     * @return the ListTokenRequest object itself.
     */
    public ListTokenRequest withAuthorizationAudience(String authorizationAudience) {
        this.authorizationAudience = authorizationAudience;
        return this;
    }

    /**
     * Get the userAssignedIdentities property: The user assigned identities.
     * 
     * @return the userAssignedIdentities value.
     */
    public List<String> userAssignedIdentities() {
        return this.userAssignedIdentities;
    }

    /**
     * Set the userAssignedIdentities property: The user assigned identities.
     * 
     * @param userAssignedIdentities the userAssignedIdentities value to set.
     * @return the ListTokenRequest object itself.
     */
    public ListTokenRequest withUserAssignedIdentities(List<String> userAssignedIdentities) {
        this.userAssignedIdentities = userAssignedIdentities;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("authorizationAudience", this.authorizationAudience);
        jsonWriter.writeArrayField("userAssignedIdentities", this.userAssignedIdentities,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ListTokenRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ListTokenRequest if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ListTokenRequest.
     */
    public static ListTokenRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ListTokenRequest deserializedListTokenRequest = new ListTokenRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("authorizationAudience".equals(fieldName)) {
                    deserializedListTokenRequest.authorizationAudience = reader.getString();
                } else if ("userAssignedIdentities".equals(fieldName)) {
                    List<String> userAssignedIdentities = reader.readArray(reader1 -> reader1.getString());
                    deserializedListTokenRequest.userAssignedIdentities = userAssignedIdentities;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedListTokenRequest;
        });
    }
}
