// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managedapplications.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.managedapplications.models.JitRequestMetadata;
import com.azure.resourcemanager.managedapplications.models.Status;
import com.azure.resourcemanager.managedapplications.models.Substatus;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Update access request definition. */
@Fluent
public final class UpdateAccessDefinitionInner {
    /*
     * The approver name.
     */
    @JsonProperty(value = "approver")
    private String approver;

    /*
     * The JIT request metadata.
     */
    @JsonProperty(value = "metadata", required = true)
    private JitRequestMetadata metadata;

    /*
     * The JIT status.
     */
    @JsonProperty(value = "status", required = true)
    private Status status;

    /*
     * The JIT status.
     */
    @JsonProperty(value = "subStatus", required = true)
    private Substatus subStatus;

    /** Creates an instance of UpdateAccessDefinitionInner class. */
    public UpdateAccessDefinitionInner() {
    }

    /**
     * Get the approver property: The approver name.
     *
     * @return the approver value.
     */
    public String approver() {
        return this.approver;
    }

    /**
     * Set the approver property: The approver name.
     *
     * @param approver the approver value to set.
     * @return the UpdateAccessDefinitionInner object itself.
     */
    public UpdateAccessDefinitionInner withApprover(String approver) {
        this.approver = approver;
        return this;
    }

    /**
     * Get the metadata property: The JIT request metadata.
     *
     * @return the metadata value.
     */
    public JitRequestMetadata metadata() {
        return this.metadata;
    }

    /**
     * Set the metadata property: The JIT request metadata.
     *
     * @param metadata the metadata value to set.
     * @return the UpdateAccessDefinitionInner object itself.
     */
    public UpdateAccessDefinitionInner withMetadata(JitRequestMetadata metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Get the status property: The JIT status.
     *
     * @return the status value.
     */
    public Status status() {
        return this.status;
    }

    /**
     * Set the status property: The JIT status.
     *
     * @param status the status value to set.
     * @return the UpdateAccessDefinitionInner object itself.
     */
    public UpdateAccessDefinitionInner withStatus(Status status) {
        this.status = status;
        return this;
    }

    /**
     * Get the subStatus property: The JIT status.
     *
     * @return the subStatus value.
     */
    public Substatus subStatus() {
        return this.subStatus;
    }

    /**
     * Set the subStatus property: The JIT status.
     *
     * @param subStatus the subStatus value to set.
     * @return the UpdateAccessDefinitionInner object itself.
     */
    public UpdateAccessDefinitionInner withSubStatus(Substatus subStatus) {
        this.subStatus = subStatus;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (metadata() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property metadata in model UpdateAccessDefinitionInner"));
        } else {
            metadata().validate();
        }
        if (status() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property status in model UpdateAccessDefinitionInner"));
        }
        if (subStatus() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property subStatus in model UpdateAccessDefinitionInner"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(UpdateAccessDefinitionInner.class);
}
