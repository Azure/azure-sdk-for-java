// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managedapplications.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.managedapplications.fluent.models.JitRequestDefinitionInner;
import com.azure.resourcemanager.managedapplications.models.ApplicationClientDetails;
import com.azure.resourcemanager.managedapplications.models.JitAuthorizationPolicies;
import com.azure.resourcemanager.managedapplications.models.JitRequestDefinition;
import com.azure.resourcemanager.managedapplications.models.JitRequestPatchable;
import com.azure.resourcemanager.managedapplications.models.JitRequestState;
import com.azure.resourcemanager.managedapplications.models.JitSchedulingPolicy;
import com.azure.resourcemanager.managedapplications.models.ProvisioningState;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class JitRequestDefinitionImpl
    implements JitRequestDefinition, JitRequestDefinition.Definition, JitRequestDefinition.Update {
    private JitRequestDefinitionInner innerObject;

    private final com.azure.resourcemanager.managedapplications.ApplicationManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String applicationResourceId() {
        return this.innerModel().applicationResourceId();
    }

    public String publisherTenantId() {
        return this.innerModel().publisherTenantId();
    }

    public List<JitAuthorizationPolicies> jitAuthorizationPolicies() {
        List<JitAuthorizationPolicies> inner = this.innerModel().jitAuthorizationPolicies();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public JitSchedulingPolicy jitSchedulingPolicy() {
        return this.innerModel().jitSchedulingPolicy();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public JitRequestState jitRequestState() {
        return this.innerModel().jitRequestState();
    }

    public ApplicationClientDetails createdBy() {
        return this.innerModel().createdBy();
    }

    public ApplicationClientDetails updatedBy() {
        return this.innerModel().updatedBy();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public JitRequestDefinitionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.managedapplications.ApplicationManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String jitRequestName;

    private JitRequestPatchable updateParameters;

    public JitRequestDefinitionImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public JitRequestDefinition create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getJitRequests()
                .createOrUpdate(resourceGroupName, jitRequestName, this.innerModel(), Context.NONE);
        return this;
    }

    public JitRequestDefinition create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getJitRequests()
                .createOrUpdate(resourceGroupName, jitRequestName, this.innerModel(), context);
        return this;
    }

    JitRequestDefinitionImpl(
        String name, com.azure.resourcemanager.managedapplications.ApplicationManager serviceManager) {
        this.innerObject = new JitRequestDefinitionInner();
        this.serviceManager = serviceManager;
        this.jitRequestName = name;
    }

    public JitRequestDefinitionImpl update() {
        this.updateParameters = new JitRequestPatchable();
        return this;
    }

    public JitRequestDefinition apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getJitRequests()
                .updateWithResponse(resourceGroupName, jitRequestName, updateParameters, Context.NONE)
                .getValue();
        return this;
    }

    public JitRequestDefinition apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getJitRequests()
                .updateWithResponse(resourceGroupName, jitRequestName, updateParameters, context)
                .getValue();
        return this;
    }

    JitRequestDefinitionImpl(
        JitRequestDefinitionInner innerObject,
        com.azure.resourcemanager.managedapplications.ApplicationManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.jitRequestName = Utils.getValueFromIdByName(innerObject.id(), "jitRequests");
    }

    public JitRequestDefinition refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getJitRequests()
                .getByResourceGroupWithResponse(resourceGroupName, jitRequestName, Context.NONE)
                .getValue();
        return this;
    }

    public JitRequestDefinition refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getJitRequests()
                .getByResourceGroupWithResponse(resourceGroupName, jitRequestName, context)
                .getValue();
        return this;
    }

    public JitRequestDefinitionImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public JitRequestDefinitionImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public JitRequestDefinitionImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateParameters.withTags(tags);
            return this;
        }
    }

    public JitRequestDefinitionImpl withApplicationResourceId(String applicationResourceId) {
        this.innerModel().withApplicationResourceId(applicationResourceId);
        return this;
    }

    public JitRequestDefinitionImpl withJitAuthorizationPolicies(
        List<JitAuthorizationPolicies> jitAuthorizationPolicies) {
        this.innerModel().withJitAuthorizationPolicies(jitAuthorizationPolicies);
        return this;
    }

    public JitRequestDefinitionImpl withJitSchedulingPolicy(JitSchedulingPolicy jitSchedulingPolicy) {
        this.innerModel().withJitSchedulingPolicy(jitSchedulingPolicy);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
