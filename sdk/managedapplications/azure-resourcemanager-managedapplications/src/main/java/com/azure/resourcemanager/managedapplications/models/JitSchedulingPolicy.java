// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managedapplications.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.Duration;
import java.time.OffsetDateTime;

/** The JIT scheduling policies. */
@Fluent
public final class JitSchedulingPolicy {
    /*
     * The type of JIT schedule.
     */
    @JsonProperty(value = "type", required = true)
    private JitSchedulingType type;

    /*
     * The required duration of the JIT request.
     */
    @JsonProperty(value = "duration", required = true)
    private Duration duration;

    /*
     * The start time of the request.
     */
    @JsonProperty(value = "startTime", required = true)
    private OffsetDateTime startTime;

    /** Creates an instance of JitSchedulingPolicy class. */
    public JitSchedulingPolicy() {
    }

    /**
     * Get the type property: The type of JIT schedule.
     *
     * @return the type value.
     */
    public JitSchedulingType type() {
        return this.type;
    }

    /**
     * Set the type property: The type of JIT schedule.
     *
     * @param type the type value to set.
     * @return the JitSchedulingPolicy object itself.
     */
    public JitSchedulingPolicy withType(JitSchedulingType type) {
        this.type = type;
        return this;
    }

    /**
     * Get the duration property: The required duration of the JIT request.
     *
     * @return the duration value.
     */
    public Duration duration() {
        return this.duration;
    }

    /**
     * Set the duration property: The required duration of the JIT request.
     *
     * @param duration the duration value to set.
     * @return the JitSchedulingPolicy object itself.
     */
    public JitSchedulingPolicy withDuration(Duration duration) {
        this.duration = duration;
        return this;
    }

    /**
     * Get the startTime property: The start time of the request.
     *
     * @return the startTime value.
     */
    public OffsetDateTime startTime() {
        return this.startTime;
    }

    /**
     * Set the startTime property: The start time of the request.
     *
     * @param startTime the startTime value to set.
     * @return the JitSchedulingPolicy object itself.
     */
    public JitSchedulingPolicy withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (type() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property type in model JitSchedulingPolicy"));
        }
        if (duration() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property duration in model JitSchedulingPolicy"));
        }
        if (startTime() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property startTime in model JitSchedulingPolicy"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(JitSchedulingPolicy.class);
}
