// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managedapplications.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.managedapplications.fluent.models.ApplicationDefinitionInner;
import com.azure.resourcemanager.managedapplications.models.ApplicationAuthorization;
import com.azure.resourcemanager.managedapplications.models.ApplicationDefinition;
import com.azure.resourcemanager.managedapplications.models.ApplicationDefinitionArtifact;
import com.azure.resourcemanager.managedapplications.models.ApplicationDefinitionPatchable;
import com.azure.resourcemanager.managedapplications.models.ApplicationDeploymentPolicy;
import com.azure.resourcemanager.managedapplications.models.ApplicationLockLevel;
import com.azure.resourcemanager.managedapplications.models.ApplicationManagementPolicy;
import com.azure.resourcemanager.managedapplications.models.ApplicationNotificationPolicy;
import com.azure.resourcemanager.managedapplications.models.ApplicationPackageLockingPolicyDefinition;
import com.azure.resourcemanager.managedapplications.models.ApplicationPolicy;
import com.azure.resourcemanager.managedapplications.models.Sku;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class ApplicationDefinitionImpl
    implements ApplicationDefinition, ApplicationDefinition.Definition, ApplicationDefinition.Update {
    private ApplicationDefinitionInner innerObject;

    private final com.azure.resourcemanager.managedapplications.ApplicationManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String managedBy() {
        return this.innerModel().managedBy();
    }

    public Sku sku() {
        return this.innerModel().sku();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public ApplicationLockLevel lockLevel() {
        return this.innerModel().lockLevel();
    }

    public String displayName() {
        return this.innerModel().displayName();
    }

    public Boolean isEnabled() {
        return this.innerModel().isEnabled();
    }

    public List<ApplicationAuthorization> authorizations() {
        List<ApplicationAuthorization> inner = this.innerModel().authorizations();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<ApplicationDefinitionArtifact> artifacts() {
        List<ApplicationDefinitionArtifact> inner = this.innerModel().artifacts();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String description() {
        return this.innerModel().description();
    }

    public String packageFileUri() {
        return this.innerModel().packageFileUri();
    }

    public String storageAccountId() {
        return this.innerModel().storageAccountId();
    }

    public Object mainTemplate() {
        return this.innerModel().mainTemplate();
    }

    public Object createUiDefinition() {
        return this.innerModel().createUiDefinition();
    }

    public ApplicationNotificationPolicy notificationPolicy() {
        return this.innerModel().notificationPolicy();
    }

    public ApplicationPackageLockingPolicyDefinition lockingPolicy() {
        return this.innerModel().lockingPolicy();
    }

    public ApplicationDeploymentPolicy deploymentPolicy() {
        return this.innerModel().deploymentPolicy();
    }

    public ApplicationManagementPolicy managementPolicy() {
        return this.innerModel().managementPolicy();
    }

    public List<ApplicationPolicy> policies() {
        List<ApplicationPolicy> inner = this.innerModel().policies();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ApplicationDefinitionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.managedapplications.ApplicationManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String applicationDefinitionName;

    private ApplicationDefinitionPatchable updateParameters;

    public ApplicationDefinitionImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public ApplicationDefinition create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplicationDefinitions()
                .createOrUpdateWithResponse(
                    resourceGroupName, applicationDefinitionName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public ApplicationDefinition create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplicationDefinitions()
                .createOrUpdateWithResponse(resourceGroupName, applicationDefinitionName, this.innerModel(), context)
                .getValue();
        return this;
    }

    ApplicationDefinitionImpl(
        String name, com.azure.resourcemanager.managedapplications.ApplicationManager serviceManager) {
        this.innerObject = new ApplicationDefinitionInner();
        this.serviceManager = serviceManager;
        this.applicationDefinitionName = name;
    }

    public ApplicationDefinitionImpl update() {
        this.updateParameters = new ApplicationDefinitionPatchable();
        return this;
    }

    public ApplicationDefinition apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplicationDefinitions()
                .updateWithResponse(resourceGroupName, applicationDefinitionName, updateParameters, Context.NONE)
                .getValue();
        return this;
    }

    public ApplicationDefinition apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplicationDefinitions()
                .updateWithResponse(resourceGroupName, applicationDefinitionName, updateParameters, context)
                .getValue();
        return this;
    }

    ApplicationDefinitionImpl(
        ApplicationDefinitionInner innerObject,
        com.azure.resourcemanager.managedapplications.ApplicationManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.applicationDefinitionName = Utils.getValueFromIdByName(innerObject.id(), "applicationDefinitions");
    }

    public ApplicationDefinition refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplicationDefinitions()
                .getByResourceGroupWithResponse(resourceGroupName, applicationDefinitionName, Context.NONE)
                .getValue();
        return this;
    }

    public ApplicationDefinition refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplicationDefinitions()
                .getByResourceGroupWithResponse(resourceGroupName, applicationDefinitionName, context)
                .getValue();
        return this;
    }

    public ApplicationDefinitionImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public ApplicationDefinitionImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public ApplicationDefinitionImpl withLockLevel(ApplicationLockLevel lockLevel) {
        this.innerModel().withLockLevel(lockLevel);
        return this;
    }

    public ApplicationDefinitionImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateParameters.withTags(tags);
            return this;
        }
    }

    public ApplicationDefinitionImpl withManagedBy(String managedBy) {
        this.innerModel().withManagedBy(managedBy);
        return this;
    }

    public ApplicationDefinitionImpl withSku(Sku sku) {
        this.innerModel().withSku(sku);
        return this;
    }

    public ApplicationDefinitionImpl withDisplayName(String displayName) {
        this.innerModel().withDisplayName(displayName);
        return this;
    }

    public ApplicationDefinitionImpl withIsEnabled(Boolean isEnabled) {
        this.innerModel().withIsEnabled(isEnabled);
        return this;
    }

    public ApplicationDefinitionImpl withAuthorizations(List<ApplicationAuthorization> authorizations) {
        this.innerModel().withAuthorizations(authorizations);
        return this;
    }

    public ApplicationDefinitionImpl withArtifacts(List<ApplicationDefinitionArtifact> artifacts) {
        this.innerModel().withArtifacts(artifacts);
        return this;
    }

    public ApplicationDefinitionImpl withDescription(String description) {
        this.innerModel().withDescription(description);
        return this;
    }

    public ApplicationDefinitionImpl withPackageFileUri(String packageFileUri) {
        this.innerModel().withPackageFileUri(packageFileUri);
        return this;
    }

    public ApplicationDefinitionImpl withStorageAccountId(String storageAccountId) {
        this.innerModel().withStorageAccountId(storageAccountId);
        return this;
    }

    public ApplicationDefinitionImpl withMainTemplate(Object mainTemplate) {
        this.innerModel().withMainTemplate(mainTemplate);
        return this;
    }

    public ApplicationDefinitionImpl withCreateUiDefinition(Object createUiDefinition) {
        this.innerModel().withCreateUiDefinition(createUiDefinition);
        return this;
    }

    public ApplicationDefinitionImpl withNotificationPolicy(ApplicationNotificationPolicy notificationPolicy) {
        this.innerModel().withNotificationPolicy(notificationPolicy);
        return this;
    }

    public ApplicationDefinitionImpl withLockingPolicy(ApplicationPackageLockingPolicyDefinition lockingPolicy) {
        this.innerModel().withLockingPolicy(lockingPolicy);
        return this;
    }

    public ApplicationDefinitionImpl withDeploymentPolicy(ApplicationDeploymentPolicy deploymentPolicy) {
        this.innerModel().withDeploymentPolicy(deploymentPolicy);
        return this;
    }

    public ApplicationDefinitionImpl withManagementPolicy(ApplicationManagementPolicy managementPolicy) {
        this.innerModel().withManagementPolicy(managementPolicy);
        return this;
    }

    public ApplicationDefinitionImpl withPolicies(List<ApplicationPolicy> policies) {
        this.innerModel().withPolicies(policies);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
