// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managedapplications.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Managed application notification policy. */
@Fluent
public final class ApplicationNotificationPolicy {
    /*
     * The managed application notification endpoint.
     */
    @JsonProperty(value = "notificationEndpoints", required = true)
    private List<ApplicationNotificationEndpoint> notificationEndpoints;

    /** Creates an instance of ApplicationNotificationPolicy class. */
    public ApplicationNotificationPolicy() {
    }

    /**
     * Get the notificationEndpoints property: The managed application notification endpoint.
     *
     * @return the notificationEndpoints value.
     */
    public List<ApplicationNotificationEndpoint> notificationEndpoints() {
        return this.notificationEndpoints;
    }

    /**
     * Set the notificationEndpoints property: The managed application notification endpoint.
     *
     * @param notificationEndpoints the notificationEndpoints value to set.
     * @return the ApplicationNotificationPolicy object itself.
     */
    public ApplicationNotificationPolicy withNotificationEndpoints(
        List<ApplicationNotificationEndpoint> notificationEndpoints) {
        this.notificationEndpoints = notificationEndpoints;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (notificationEndpoints() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property notificationEndpoints in model ApplicationNotificationPolicy"));
        } else {
            notificationEndpoints().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ApplicationNotificationPolicy.class);
}
