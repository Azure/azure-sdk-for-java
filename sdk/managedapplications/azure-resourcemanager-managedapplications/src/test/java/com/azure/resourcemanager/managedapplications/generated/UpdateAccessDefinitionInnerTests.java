// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managedapplications.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managedapplications.fluent.models.UpdateAccessDefinitionInner;
import com.azure.resourcemanager.managedapplications.models.JitRequestMetadata;
import com.azure.resourcemanager.managedapplications.models.Status;
import com.azure.resourcemanager.managedapplications.models.Substatus;
import org.junit.jupiter.api.Assertions;

public final class UpdateAccessDefinitionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UpdateAccessDefinitionInner model =
            BinaryData
                .fromString(
                    "{\"approver\":\"zydagfuaxbezyiuo\",\"metadata\":{\"originRequestId\":\"twhrdxwzywqsm\",\"requestorId\":\"ureximoryocfs\",\"tenantDisplayName\":\"s\",\"subjectDisplayName\":\"ddystkiiuxhqy\"},\"status\":\"Elevate\",\"subStatus\":\"Failed\"}")
                .toObject(UpdateAccessDefinitionInner.class);
        Assertions.assertEquals("zydagfuaxbezyiuo", model.approver());
        Assertions.assertEquals("twhrdxwzywqsm", model.metadata().originRequestId());
        Assertions.assertEquals("ureximoryocfs", model.metadata().requestorId());
        Assertions.assertEquals("s", model.metadata().tenantDisplayName());
        Assertions.assertEquals("ddystkiiuxhqy", model.metadata().subjectDisplayName());
        Assertions.assertEquals(Status.ELEVATE, model.status());
        Assertions.assertEquals(Substatus.FAILED, model.subStatus());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UpdateAccessDefinitionInner model =
            new UpdateAccessDefinitionInner()
                .withApprover("zydagfuaxbezyiuo")
                .withMetadata(
                    new JitRequestMetadata()
                        .withOriginRequestId("twhrdxwzywqsm")
                        .withRequestorId("ureximoryocfs")
                        .withTenantDisplayName("s")
                        .withSubjectDisplayName("ddystkiiuxhqy"))
                .withStatus(Status.ELEVATE)
                .withSubStatus(Substatus.FAILED);
        model = BinaryData.fromObject(model).toObject(UpdateAccessDefinitionInner.class);
        Assertions.assertEquals("zydagfuaxbezyiuo", model.approver());
        Assertions.assertEquals("twhrdxwzywqsm", model.metadata().originRequestId());
        Assertions.assertEquals("ureximoryocfs", model.metadata().requestorId());
        Assertions.assertEquals("s", model.metadata().tenantDisplayName());
        Assertions.assertEquals("ddystkiiuxhqy", model.metadata().subjectDisplayName());
        Assertions.assertEquals(Status.ELEVATE, model.status());
        Assertions.assertEquals(Substatus.FAILED, model.subStatus());
    }
}
