// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managedapplications.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.managedapplications.ApplicationManager;
import com.azure.resourcemanager.managedapplications.models.Operation;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ResourceProvidersListOperationsMockTests {
    @Test
    public void testListOperations() throws Exception {
        String responseStr
            = "{\"value\":[{\"name\":\"zjuqkhrsaj\",\"isDataAction\":false,\"display\":{\"provider\":\"foskghsauuimj\",\"resource\":\"xieduugidyjrr\",\"operation\":\"y\",\"description\":\"svexcsonpclhoco\"},\"origin\":\"system\",\"actionType\":\"Internal\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApplicationManager manager = ApplicationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Operation> response
            = manager.resourceProviders().listOperations(com.azure.core.util.Context.NONE);

    }
}
