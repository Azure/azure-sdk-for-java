// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managedapplications.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managedapplications.models.ApplicationJitAccessPolicy;
import com.azure.resourcemanager.managedapplications.models.JitApprovalMode;
import com.azure.resourcemanager.managedapplications.models.JitApproverDefinition;
import com.azure.resourcemanager.managedapplications.models.JitApproverType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ApplicationJitAccessPolicyTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ApplicationJitAccessPolicy model =
            BinaryData
                .fromString(
                    "{\"jitAccessEnabled\":true,\"jitApprovalMode\":\"AutoApprove\",\"jitApprovers\":[{\"id\":\"kufubljo\",\"type\":\"user\",\"displayName\":\"ofjaeqjhqjb\"},{\"id\":\"s\",\"type\":\"group\",\"displayName\":\"jqul\"}],\"maximumJitAccessDuration\":\"sntnbybkzgcw\"}")
                .toObject(ApplicationJitAccessPolicy.class);
        Assertions.assertEquals(true, model.jitAccessEnabled());
        Assertions.assertEquals(JitApprovalMode.AUTO_APPROVE, model.jitApprovalMode());
        Assertions.assertEquals("kufubljo", model.jitApprovers().get(0).id());
        Assertions.assertEquals(JitApproverType.USER, model.jitApprovers().get(0).type());
        Assertions.assertEquals("ofjaeqjhqjb", model.jitApprovers().get(0).displayName());
        Assertions.assertEquals("sntnbybkzgcw", model.maximumJitAccessDuration());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ApplicationJitAccessPolicy model =
            new ApplicationJitAccessPolicy()
                .withJitAccessEnabled(true)
                .withJitApprovalMode(JitApprovalMode.AUTO_APPROVE)
                .withJitApprovers(
                    Arrays
                        .asList(
                            new JitApproverDefinition()
                                .withId("kufubljo")
                                .withType(JitApproverType.USER)
                                .withDisplayName("ofjaeqjhqjb"),
                            new JitApproverDefinition()
                                .withId("s")
                                .withType(JitApproverType.GROUP)
                                .withDisplayName("jqul")))
                .withMaximumJitAccessDuration("sntnbybkzgcw");
        model = BinaryData.fromObject(model).toObject(ApplicationJitAccessPolicy.class);
        Assertions.assertEquals(true, model.jitAccessEnabled());
        Assertions.assertEquals(JitApprovalMode.AUTO_APPROVE, model.jitApprovalMode());
        Assertions.assertEquals("kufubljo", model.jitApprovers().get(0).id());
        Assertions.assertEquals(JitApproverType.USER, model.jitApprovers().get(0).type());
        Assertions.assertEquals("ofjaeqjhqjb", model.jitApprovers().get(0).displayName());
        Assertions.assertEquals("sntnbybkzgcw", model.maximumJitAccessDuration());
    }
}
