// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.windowsesu.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.windowsesu.fluent.models.MultipleActivationKeyInner;
import java.time.OffsetDateTime;
import java.util.Map;

/** An immutable client-side representation of MultipleActivationKey. */
public interface MultipleActivationKey {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the multipleActivationKey property: MAK 5x5 key.
     *
     * @return the multipleActivationKey value.
     */
    String multipleActivationKey();

    /**
     * Gets the expirationDate property: End of support of security updates activated by the MAK key.
     *
     * @return the expirationDate value.
     */
    OffsetDateTime expirationDate();

    /**
     * Gets the osType property: Type of OS for which the key is requested.
     *
     * @return the osType value.
     */
    OsType osType();

    /**
     * Gets the supportType property: Type of support.
     *
     * @return the supportType value.
     */
    SupportType supportType();

    /**
     * Gets the installedServerNumber property: Number of activations/servers using the MAK key.
     *
     * @return the installedServerNumber value.
     */
    Integer installedServerNumber();

    /**
     * Gets the agreementNumber property: Agreement number under which the key is requested.
     *
     * @return the agreementNumber value.
     */
    String agreementNumber();

    /**
     * Gets the isEligible property: &lt;code&gt; true &lt;/code&gt; if user has eligible on-premises Windows physical
     * or virtual machines, and that the requested key will only be used in their organization; &lt;code&gt; false
     * &lt;/code&gt; otherwise.
     *
     * @return the isEligible value.
     */
    Boolean isEligible();

    /**
     * Gets the provisioningState property: The provisioningState property.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.windowsesu.fluent.models.MultipleActivationKeyInner object.
     *
     * @return the inner object.
     */
    MultipleActivationKeyInner innerModel();

    /** The entirety of the MultipleActivationKey definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }
    /** The MultipleActivationKey definition stages. */
    interface DefinitionStages {
        /** The first stage of the MultipleActivationKey definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the MultipleActivationKey definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the MultipleActivationKey definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the MultipleActivationKey definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithOsType,
                DefinitionStages.WithSupportType,
                DefinitionStages.WithInstalledServerNumber,
                DefinitionStages.WithAgreementNumber,
                DefinitionStages.WithIsEligible {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            MultipleActivationKey create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            MultipleActivationKey create(Context context);
        }
        /** The stage of the MultipleActivationKey definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the MultipleActivationKey definition allowing to specify osType. */
        interface WithOsType {
            /**
             * Specifies the osType property: Type of OS for which the key is requested..
             *
             * @param osType Type of OS for which the key is requested.
             * @return the next definition stage.
             */
            WithCreate withOsType(OsType osType);
        }
        /** The stage of the MultipleActivationKey definition allowing to specify supportType. */
        interface WithSupportType {
            /**
             * Specifies the supportType property: Type of support.
             *
             * @param supportType Type of support.
             * @return the next definition stage.
             */
            WithCreate withSupportType(SupportType supportType);
        }
        /** The stage of the MultipleActivationKey definition allowing to specify installedServerNumber. */
        interface WithInstalledServerNumber {
            /**
             * Specifies the installedServerNumber property: Number of activations/servers using the MAK key..
             *
             * @param installedServerNumber Number of activations/servers using the MAK key.
             * @return the next definition stage.
             */
            WithCreate withInstalledServerNumber(Integer installedServerNumber);
        }
        /** The stage of the MultipleActivationKey definition allowing to specify agreementNumber. */
        interface WithAgreementNumber {
            /**
             * Specifies the agreementNumber property: Agreement number under which the key is requested..
             *
             * @param agreementNumber Agreement number under which the key is requested.
             * @return the next definition stage.
             */
            WithCreate withAgreementNumber(String agreementNumber);
        }
        /** The stage of the MultipleActivationKey definition allowing to specify isEligible. */
        interface WithIsEligible {
            /**
             * Specifies the isEligible property: &lt;code&gt; true &lt;/code&gt; if user has eligible on-premises
             * Windows physical or virtual machines, and that the requested key will only be used in their organization;
             * &lt;code&gt; false &lt;/code&gt; otherwise..
             *
             * @param isEligible &lt;code&gt; true &lt;/code&gt; if user has eligible on-premises Windows physical or
             *     virtual machines, and that the requested key will only be used in their organization; &lt;code&gt;
             *     false &lt;/code&gt; otherwise.
             * @return the next definition stage.
             */
            WithCreate withIsEligible(Boolean isEligible);
        }
    }
    /**
     * Begins update for the MultipleActivationKey resource.
     *
     * @return the stage of resource update.
     */
    MultipleActivationKey.Update update();

    /** The template for MultipleActivationKey update. */
    interface Update extends UpdateStages.WithTags {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        MultipleActivationKey apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        MultipleActivationKey apply(Context context);
    }
    /** The MultipleActivationKey update stages. */
    interface UpdateStages {
        /** The stage of the MultipleActivationKey update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    MultipleActivationKey refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    MultipleActivationKey refresh(Context context);
}
