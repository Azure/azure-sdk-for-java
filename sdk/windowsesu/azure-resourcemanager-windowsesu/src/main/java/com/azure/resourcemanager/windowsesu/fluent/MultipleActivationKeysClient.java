// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.windowsesu.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.windowsesu.fluent.models.MultipleActivationKeyInner;
import com.azure.resourcemanager.windowsesu.models.MultipleActivationKeyUpdate;

/** An instance of this class provides access to all the operations defined in MultipleActivationKeysClient. */
public interface MultipleActivationKeysClient {
    /**
     * List all Multiple Activation Keys (MAK) created for a subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of MAK keys.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<MultipleActivationKeyInner> list();

    /**
     * List all Multiple Activation Keys (MAK) created for a subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of MAK keys.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<MultipleActivationKeyInner> list(Context context);

    /**
     * List all Multiple Activation Keys (MAK) in a resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of MAK keys.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<MultipleActivationKeyInner> listByResourceGroup(String resourceGroupName);

    /**
     * List all Multiple Activation Keys (MAK) in a resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of MAK keys.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<MultipleActivationKeyInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Get a MAK key.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param multipleActivationKeyName The name of the MAK key.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a MAK key.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MultipleActivationKeyInner getByResourceGroup(String resourceGroupName, String multipleActivationKeyName);

    /**
     * Get a MAK key.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param multipleActivationKeyName The name of the MAK key.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a MAK key.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<MultipleActivationKeyInner> getByResourceGroupWithResponse(
        String resourceGroupName, String multipleActivationKeyName, Context context);

    /**
     * Create a MAK key.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param multipleActivationKeyName The name of the MAK key.
     * @param multipleActivationKey Details of the MAK key.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mAK key details.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<MultipleActivationKeyInner>, MultipleActivationKeyInner> beginCreate(
        String resourceGroupName, String multipleActivationKeyName, MultipleActivationKeyInner multipleActivationKey);

    /**
     * Create a MAK key.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param multipleActivationKeyName The name of the MAK key.
     * @param multipleActivationKey Details of the MAK key.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mAK key details.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<MultipleActivationKeyInner>, MultipleActivationKeyInner> beginCreate(
        String resourceGroupName,
        String multipleActivationKeyName,
        MultipleActivationKeyInner multipleActivationKey,
        Context context);

    /**
     * Create a MAK key.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param multipleActivationKeyName The name of the MAK key.
     * @param multipleActivationKey Details of the MAK key.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mAK key details.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MultipleActivationKeyInner create(
        String resourceGroupName, String multipleActivationKeyName, MultipleActivationKeyInner multipleActivationKey);

    /**
     * Create a MAK key.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param multipleActivationKeyName The name of the MAK key.
     * @param multipleActivationKey Details of the MAK key.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mAK key details.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MultipleActivationKeyInner create(
        String resourceGroupName,
        String multipleActivationKeyName,
        MultipleActivationKeyInner multipleActivationKey,
        Context context);

    /**
     * Update a MAK key.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param multipleActivationKeyName The name of the MAK key.
     * @param multipleActivationKey Details of the MAK key.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mAK key details.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MultipleActivationKeyInner update(
        String resourceGroupName, String multipleActivationKeyName, MultipleActivationKeyUpdate multipleActivationKey);

    /**
     * Update a MAK key.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param multipleActivationKeyName The name of the MAK key.
     * @param multipleActivationKey Details of the MAK key.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mAK key details.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<MultipleActivationKeyInner> updateWithResponse(
        String resourceGroupName,
        String multipleActivationKeyName,
        MultipleActivationKeyUpdate multipleActivationKey,
        Context context);

    /**
     * Delete a MAK key.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param multipleActivationKeyName The name of the MAK key.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String multipleActivationKeyName);

    /**
     * Delete a MAK key.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param multipleActivationKeyName The name of the MAK key.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String multipleActivationKeyName, Context context);
}
