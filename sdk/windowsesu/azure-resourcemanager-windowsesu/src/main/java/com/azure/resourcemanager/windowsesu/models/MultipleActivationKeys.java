// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.windowsesu.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of MultipleActivationKeys. */
public interface MultipleActivationKeys {
    /**
     * List all Multiple Activation Keys (MAK) created for a subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of MAK keys.
     */
    PagedIterable<MultipleActivationKey> list();

    /**
     * List all Multiple Activation Keys (MAK) created for a subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of MAK keys.
     */
    PagedIterable<MultipleActivationKey> list(Context context);

    /**
     * List all Multiple Activation Keys (MAK) in a resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of MAK keys.
     */
    PagedIterable<MultipleActivationKey> listByResourceGroup(String resourceGroupName);

    /**
     * List all Multiple Activation Keys (MAK) in a resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of MAK keys.
     */
    PagedIterable<MultipleActivationKey> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Get a MAK key.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param multipleActivationKeyName The name of the MAK key.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a MAK key.
     */
    MultipleActivationKey getByResourceGroup(String resourceGroupName, String multipleActivationKeyName);

    /**
     * Get a MAK key.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param multipleActivationKeyName The name of the MAK key.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a MAK key.
     */
    Response<MultipleActivationKey> getByResourceGroupWithResponse(
        String resourceGroupName, String multipleActivationKeyName, Context context);

    /**
     * Delete a MAK key.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param multipleActivationKeyName The name of the MAK key.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String multipleActivationKeyName);

    /**
     * Delete a MAK key.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param multipleActivationKeyName The name of the MAK key.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    Response<Void> deleteWithResponse(String resourceGroupName, String multipleActivationKeyName, Context context);

    /**
     * Get a MAK key.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a MAK key.
     */
    MultipleActivationKey getById(String id);

    /**
     * Get a MAK key.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a MAK key.
     */
    Response<MultipleActivationKey> getByIdWithResponse(String id, Context context);

    /**
     * Delete a MAK key.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a MAK key.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new MultipleActivationKey resource.
     *
     * @param name resource name.
     * @return the first stage of the new MultipleActivationKey definition.
     */
    MultipleActivationKey.DefinitionStages.Blank define(String name);
}
