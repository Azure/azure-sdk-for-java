// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.relay.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.relay.fluent.models.AuthorizationRuleInner;
import com.azure.resourcemanager.relay.models.AccessRights;
import com.azure.resourcemanager.relay.models.AuthorizationRuleListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AuthorizationRuleListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AuthorizationRuleListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"rights\":[\"Listen\",\"Manage\"]},\"id\":\"jitcjczdzevn\",\"name\":\"hkr\",\"type\":\"pdappds\"},{\"properties\":{\"rights\":[\"Manage\",\"Manage\",\"Manage\"]},\"id\":\"rwjfe\",\"name\":\"snhu\",\"type\":\"je\"},{\"properties\":{\"rights\":[\"Send\",\"Send\",\"Listen\",\"Send\"]},\"id\":\"hugjzzdatqxhoc\",\"name\":\"geablgphuticndvk\",\"type\":\"ozwyiftyhxhuro\"},{\"properties\":{\"rights\":[\"Manage\",\"Send\",\"Listen\"]},\"id\":\"olniwpwcukjf\",\"name\":\"giawx\",\"type\":\"lryplwckbasyy\"}],\"nextLink\":\"ddhsgcbacphe\"}")
            .toObject(AuthorizationRuleListResult.class);
        Assertions.assertEquals(AccessRights.LISTEN, model.value().get(0).rights().get(0));
        Assertions.assertEquals("ddhsgcbacphe", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AuthorizationRuleListResult model = new AuthorizationRuleListResult()
            .withValue(Arrays.asList(
                new AuthorizationRuleInner().withRights(Arrays.asList(AccessRights.LISTEN, AccessRights.MANAGE)),
                new AuthorizationRuleInner()
                    .withRights(Arrays.asList(AccessRights.MANAGE, AccessRights.MANAGE, AccessRights.MANAGE)),
                new AuthorizationRuleInner().withRights(
                    Arrays.asList(AccessRights.SEND, AccessRights.SEND, AccessRights.LISTEN, AccessRights.SEND)),
                new AuthorizationRuleInner()
                    .withRights(Arrays.asList(AccessRights.MANAGE, AccessRights.SEND, AccessRights.LISTEN))))
            .withNextLink("ddhsgcbacphe");
        model = BinaryData.fromObject(model).toObject(AuthorizationRuleListResult.class);
        Assertions.assertEquals(AccessRights.LISTEN, model.value().get(0).rights().get(0));
        Assertions.assertEquals("ddhsgcbacphe", model.nextLink());
    }
}
