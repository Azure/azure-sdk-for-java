// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.relay.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.relay.fluent.models.RelayNamespaceInner;
import com.azure.resourcemanager.relay.models.RelayNamespaceListResult;
import com.azure.resourcemanager.relay.models.Sku;
import com.azure.resourcemanager.relay.models.SkuTier;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class RelayNamespaceListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RelayNamespaceListResult model = BinaryData.fromString(
            "{\"value\":[{\"sku\":{\"tier\":\"Standard\"},\"properties\":{\"provisioningState\":\"Unknown\",\"createdAt\":\"2021-07-31T11:58:13Z\",\"updatedAt\":\"2021-09-14T21:41:32Z\",\"serviceBusEndpoint\":\"sjtxukcdmp\",\"metricId\":\"cryuan\"},\"location\":\"w\",\"tags\":{\"hfpmrqobmtukknr\":\"dxtayrlhm\",\"gnwzsymglzufc\":\"rtihfxtijbpz\",\"hdbihan\":\"zk\",\"y\":\"fhfcb\"},\"id\":\"a\",\"name\":\"ithxqhabifpi\",\"type\":\"xwczbyscnp\"},{\"sku\":{\"tier\":\"Standard\"},\"properties\":{\"provisioningState\":\"Failed\",\"createdAt\":\"2020-12-30T16:23:36Z\",\"updatedAt\":\"2021-07-08T16:34:06Z\",\"serviceBusEndpoint\":\"ybrk\",\"metricId\":\"dumjgrtfwvuk\"},\"location\":\"gaudcc\",\"tags\":{\"cnyejhkryhtnapcz\":\"s\"},\"id\":\"lokjyemkk\",\"name\":\"ni\",\"type\":\"joxzjnchgejspodm\"}],\"nextLink\":\"lzydehojwyahux\"}")
            .toObject(RelayNamespaceListResult.class);
        Assertions.assertEquals("w", model.value().get(0).location());
        Assertions.assertEquals("dxtayrlhm", model.value().get(0).tags().get("hfpmrqobmtukknr"));
        Assertions.assertEquals(SkuTier.STANDARD, model.value().get(0).sku().tier());
        Assertions.assertEquals("lzydehojwyahux", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RelayNamespaceListResult model = new RelayNamespaceListResult().withValue(Arrays.asList(
            new RelayNamespaceInner().withLocation("w")
                .withTags(mapOf("hfpmrqobmtukknr", "dxtayrlhm", "gnwzsymglzufc", "rtihfxtijbpz", "hdbihan", "zk", "y",
                    "fhfcb"))
                .withSku(new Sku().withTier(SkuTier.STANDARD)),
            new RelayNamespaceInner().withLocation("gaudcc")
                .withTags(mapOf("cnyejhkryhtnapcz", "s"))
                .withSku(new Sku().withTier(SkuTier.STANDARD))))
            .withNextLink("lzydehojwyahux");
        model = BinaryData.fromObject(model).toObject(RelayNamespaceListResult.class);
        Assertions.assertEquals("w", model.value().get(0).location());
        Assertions.assertEquals("dxtayrlhm", model.value().get(0).tags().get("hfpmrqobmtukknr"));
        Assertions.assertEquals(SkuTier.STANDARD, model.value().get(0).sku().tier());
        Assertions.assertEquals("lzydehojwyahux", model.nextLink());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
