// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.relay.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.relay.RelayManager;
import com.azure.resourcemanager.relay.models.AccessRights;
import com.azure.resourcemanager.relay.models.AuthorizationRule;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NamespacesGetAuthorizationRuleWithResponseMockTests {
    @Test
    public void testGetAuthorizationRuleWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"rights\":[\"Send\",\"Send\",\"Manage\"]},\"id\":\"qkwpyeicxmqc\",\"name\":\"wqvhkhixuigdt\",\"type\":\"pbobjo\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RelayManager manager = RelayManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        AuthorizationRule response = manager.namespaces()
            .getAuthorizationRuleWithResponse("xqbzvddntwnd", "icbtwnpzao", "vuhrhcffcyddgl",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(AccessRights.SEND, response.rights().get(0));
    }
}
