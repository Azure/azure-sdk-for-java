// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.newrelicobservability.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataResourceInner;
import com.azure.resourcemanager.newrelicobservability.models.AccountCreationSource;
import com.azure.resourcemanager.newrelicobservability.models.BillingCycle;
import com.azure.resourcemanager.newrelicobservability.models.OrgCreationSource;
import com.azure.resourcemanager.newrelicobservability.models.PlanData;
import com.azure.resourcemanager.newrelicobservability.models.PlanDataListResponse;
import com.azure.resourcemanager.newrelicobservability.models.UsageType;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PlanDataListResponseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PlanDataListResponse model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"planData\":{\"usageType\":\"PAYG\",\"billingCycle\":\"WEEKLY\",\"planDetails\":\"mbe\",\"effectiveDate\":\"2021-10-01T04:14:33Z\"},\"orgCreationSource\":\"NEWRELIC\",\"accountCreationSource\":\"LIFTR\"},\"id\":\"rolfpfp\",\"name\":\"algbquxigjyjg\",\"type\":\"jaoyfhrtx\"}],\"nextLink\":\"n\"}")
            .toObject(PlanDataListResponse.class);
        Assertions.assertEquals(UsageType.PAYG, model.value().get(0).planData().usageType());
        Assertions.assertEquals(BillingCycle.WEEKLY, model.value().get(0).planData().billingCycle());
        Assertions.assertEquals("mbe", model.value().get(0).planData().planDetails());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-01T04:14:33Z"),
            model.value().get(0).planData().effectiveDate());
        Assertions.assertEquals(OrgCreationSource.NEWRELIC, model.value().get(0).orgCreationSource());
        Assertions.assertEquals(AccountCreationSource.LIFTR, model.value().get(0).accountCreationSource());
        Assertions.assertEquals("n", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PlanDataListResponse model = new PlanDataListResponse().withValue(Arrays.asList(new PlanDataResourceInner()
            .withPlanData(new PlanData().withUsageType(UsageType.PAYG).withBillingCycle(BillingCycle.WEEKLY)
                .withPlanDetails("mbe").withEffectiveDate(OffsetDateTime.parse("2021-10-01T04:14:33Z")))
            .withOrgCreationSource(OrgCreationSource.NEWRELIC).withAccountCreationSource(AccountCreationSource.LIFTR)))
            .withNextLink("n");
        model = BinaryData.fromObject(model).toObject(PlanDataListResponse.class);
        Assertions.assertEquals(UsageType.PAYG, model.value().get(0).planData().usageType());
        Assertions.assertEquals(BillingCycle.WEEKLY, model.value().get(0).planData().billingCycle());
        Assertions.assertEquals("mbe", model.value().get(0).planData().planDetails());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-01T04:14:33Z"),
            model.value().get(0).planData().effectiveDate());
        Assertions.assertEquals(OrgCreationSource.NEWRELIC, model.value().get(0).orgCreationSource());
        Assertions.assertEquals(AccountCreationSource.LIFTR, model.value().get(0).accountCreationSource());
        Assertions.assertEquals("n", model.nextLink());
    }
}
