// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.newrelicobservability.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.newrelicobservability.fluent.models.ConnectedPartnerResourcesListFormatInner;
import com.azure.resourcemanager.newrelicobservability.models.ConnectedPartnerResourceProperties;
import org.junit.jupiter.api.Assertions;

public final class ConnectedPartnerResourcesListFormatInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ConnectedPartnerResourcesListFormatInner model = BinaryData.fromString(
            "{\"properties\":{\"accountName\":\"eupfhyhltrpm\",\"accountId\":\"jmcmatuokthfu\",\"azureResourceId\":\"aodsfcpkv\",\"location\":\"dpuozmyz\"}}")
            .toObject(ConnectedPartnerResourcesListFormatInner.class);
        Assertions.assertEquals("eupfhyhltrpm", model.properties().accountName());
        Assertions.assertEquals("jmcmatuokthfu", model.properties().accountId());
        Assertions.assertEquals("aodsfcpkv", model.properties().azureResourceId());
        Assertions.assertEquals("dpuozmyz", model.properties().location());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ConnectedPartnerResourcesListFormatInner model = new ConnectedPartnerResourcesListFormatInner()
            .withProperties(new ConnectedPartnerResourceProperties().withAccountName("eupfhyhltrpm")
                .withAccountId("jmcmatuokthfu").withAzureResourceId("aodsfcpkv").withLocation("dpuozmyz"));
        model = BinaryData.fromObject(model).toObject(ConnectedPartnerResourcesListFormatInner.class);
        Assertions.assertEquals("eupfhyhltrpm", model.properties().accountName());
        Assertions.assertEquals("jmcmatuokthfu", model.properties().accountId());
        Assertions.assertEquals("aodsfcpkv", model.properties().azureResourceId());
        Assertions.assertEquals("dpuozmyz", model.properties().location());
    }
}
