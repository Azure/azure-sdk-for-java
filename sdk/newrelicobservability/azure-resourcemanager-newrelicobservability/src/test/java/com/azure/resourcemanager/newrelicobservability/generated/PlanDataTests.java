// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.newrelicobservability.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.newrelicobservability.models.BillingCycle;
import com.azure.resourcemanager.newrelicobservability.models.PlanData;
import com.azure.resourcemanager.newrelicobservability.models.UsageType;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class PlanDataTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PlanData model = BinaryData.fromString(
            "{\"usageType\":\"COMMITTED\",\"billingCycle\":\"WEEKLY\",\"planDetails\":\"gsntnbybkzgcwr\",\"effectiveDate\":\"2021-09-26T22:03:54Z\"}")
            .toObject(PlanData.class);
        Assertions.assertEquals(UsageType.COMMITTED, model.usageType());
        Assertions.assertEquals(BillingCycle.WEEKLY, model.billingCycle());
        Assertions.assertEquals("gsntnbybkzgcwr", model.planDetails());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-26T22:03:54Z"), model.effectiveDate());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PlanData model = new PlanData().withUsageType(UsageType.COMMITTED).withBillingCycle(BillingCycle.WEEKLY)
            .withPlanDetails("gsntnbybkzgcwr").withEffectiveDate(OffsetDateTime.parse("2021-09-26T22:03:54Z"));
        model = BinaryData.fromObject(model).toObject(PlanData.class);
        Assertions.assertEquals(UsageType.COMMITTED, model.usageType());
        Assertions.assertEquals(BillingCycle.WEEKLY, model.billingCycle());
        Assertions.assertEquals("gsntnbybkzgcwr", model.planDetails());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-26T22:03:54Z"), model.effectiveDate());
    }
}
