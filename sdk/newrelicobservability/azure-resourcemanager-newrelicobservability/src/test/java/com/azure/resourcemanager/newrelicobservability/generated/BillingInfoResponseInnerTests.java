// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.newrelicobservability.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.newrelicobservability.fluent.models.BillingInfoResponseInner;
import com.azure.resourcemanager.newrelicobservability.models.MarketplaceSaaSInfo;
import com.azure.resourcemanager.newrelicobservability.models.PartnerBillingEntity;
import org.junit.jupiter.api.Assertions;

public final class BillingInfoResponseInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BillingInfoResponseInner model = BinaryData.fromString(
            "{\"marketplaceSaasInfo\":{\"marketplaceSubscriptionId\":\"eo\",\"marketplaceSubscriptionName\":\"okeyyienj\",\"marketplaceResourceId\":\"lwtgrhpdj\",\"marketplaceStatus\":\"umasxazjpq\",\"billedAzureSubscriptionId\":\"gual\"},\"partnerBillingEntity\":{\"organizationId\":\"xhejjzzvdud\",\"organizationName\":\"dslfhotwmcy\"}}")
            .toObject(BillingInfoResponseInner.class);
        Assertions.assertEquals("eo", model.marketplaceSaasInfo().marketplaceSubscriptionId());
        Assertions.assertEquals("okeyyienj", model.marketplaceSaasInfo().marketplaceSubscriptionName());
        Assertions.assertEquals("lwtgrhpdj", model.marketplaceSaasInfo().marketplaceResourceId());
        Assertions.assertEquals("umasxazjpq", model.marketplaceSaasInfo().marketplaceStatus());
        Assertions.assertEquals("gual", model.marketplaceSaasInfo().billedAzureSubscriptionId());
        Assertions.assertEquals("xhejjzzvdud", model.partnerBillingEntity().organizationId());
        Assertions.assertEquals("dslfhotwmcy", model.partnerBillingEntity().organizationName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BillingInfoResponseInner model
            = new BillingInfoResponseInner()
                .withMarketplaceSaasInfo(new MarketplaceSaaSInfo().withMarketplaceSubscriptionId("eo")
                    .withMarketplaceSubscriptionName("okeyyienj").withMarketplaceResourceId("lwtgrhpdj")
                    .withMarketplaceStatus("umasxazjpq").withBilledAzureSubscriptionId("gual"))
                .withPartnerBillingEntity(
                    new PartnerBillingEntity().withOrganizationId("xhejjzzvdud").withOrganizationName("dslfhotwmcy"));
        model = BinaryData.fromObject(model).toObject(BillingInfoResponseInner.class);
        Assertions.assertEquals("eo", model.marketplaceSaasInfo().marketplaceSubscriptionId());
        Assertions.assertEquals("okeyyienj", model.marketplaceSaasInfo().marketplaceSubscriptionName());
        Assertions.assertEquals("lwtgrhpdj", model.marketplaceSaasInfo().marketplaceResourceId());
        Assertions.assertEquals("umasxazjpq", model.marketplaceSaasInfo().marketplaceStatus());
        Assertions.assertEquals("gual", model.marketplaceSaasInfo().billedAzureSubscriptionId());
        Assertions.assertEquals("xhejjzzvdud", model.partnerBillingEntity().organizationId());
        Assertions.assertEquals("dslfhotwmcy", model.partnerBillingEntity().organizationName());
    }
}
