// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.newrelicobservability.fluent.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Details of VM Resource having NewRelic OneAgent installed. */
@Fluent
public final class VMInfoInner {
    /*
     * Azure VM resource ID
     */
    @JsonProperty(value = "vmId")
    private String vmId;

    /*
     * Version of the NewRelic agent installed on the VM.
     */
    @JsonProperty(value = "agentVersion")
    private String agentVersion;

    /*
     * Status of the NewRelic agent installed on the VM.
     */
    @JsonProperty(value = "agentStatus")
    private String agentStatus;

    /** Creates an instance of VMInfoInner class. */
    public VMInfoInner() {
    }

    /**
     * Get the vmId property: Azure VM resource ID.
     *
     * @return the vmId value.
     */
    public String vmId() {
        return this.vmId;
    }

    /**
     * Set the vmId property: Azure VM resource ID.
     *
     * @param vmId the vmId value to set.
     * @return the VMInfoInner object itself.
     */
    public VMInfoInner withVmId(String vmId) {
        this.vmId = vmId;
        return this;
    }

    /**
     * Get the agentVersion property: Version of the NewRelic agent installed on the VM.
     *
     * @return the agentVersion value.
     */
    public String agentVersion() {
        return this.agentVersion;
    }

    /**
     * Set the agentVersion property: Version of the NewRelic agent installed on the VM.
     *
     * @param agentVersion the agentVersion value to set.
     * @return the VMInfoInner object itself.
     */
    public VMInfoInner withAgentVersion(String agentVersion) {
        this.agentVersion = agentVersion;
        return this;
    }

    /**
     * Get the agentStatus property: Status of the NewRelic agent installed on the VM.
     *
     * @return the agentStatus value.
     */
    public String agentStatus() {
        return this.agentStatus;
    }

    /**
     * Set the agentStatus property: Status of the NewRelic agent installed on the VM.
     *
     * @param agentStatus the agentStatus value to set.
     * @return the VMInfoInner object itself.
     */
    public VMInfoInner withAgentStatus(String agentStatus) {
        this.agentStatus = agentStatus;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
