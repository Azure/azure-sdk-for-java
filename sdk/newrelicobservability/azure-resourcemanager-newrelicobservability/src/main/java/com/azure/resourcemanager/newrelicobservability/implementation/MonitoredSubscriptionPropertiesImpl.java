// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.newrelicobservability.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.newrelicobservability.fluent.models.MonitoredSubscriptionPropertiesInner;
import com.azure.resourcemanager.newrelicobservability.models.ConfigurationName;
import com.azure.resourcemanager.newrelicobservability.models.MonitoredSubscriptionProperties;
import com.azure.resourcemanager.newrelicobservability.models.SubscriptionList;

public final class MonitoredSubscriptionPropertiesImpl implements MonitoredSubscriptionProperties,
    MonitoredSubscriptionProperties.Definition, MonitoredSubscriptionProperties.Update {
    private MonitoredSubscriptionPropertiesInner innerObject;

    private final com.azure.resourcemanager.newrelicobservability.NewRelicObservabilityManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SubscriptionList properties() {
        return this.innerModel().properties();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public MonitoredSubscriptionPropertiesInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.newrelicobservability.NewRelicObservabilityManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String monitorName;

    private ConfigurationName configurationName;

    public MonitoredSubscriptionPropertiesImpl withExistingMonitor(String resourceGroupName, String monitorName) {
        this.resourceGroupName = resourceGroupName;
        this.monitorName = monitorName;
        return this;
    }

    public MonitoredSubscriptionProperties create() {
        this.innerObject = serviceManager.serviceClient().getMonitoredSubscriptions().createorUpdate(resourceGroupName,
            monitorName, configurationName, this.innerModel(), Context.NONE);
        return this;
    }

    public MonitoredSubscriptionProperties create(Context context) {
        this.innerObject = serviceManager.serviceClient().getMonitoredSubscriptions().createorUpdate(resourceGroupName,
            monitorName, configurationName, this.innerModel(), context);
        return this;
    }

    MonitoredSubscriptionPropertiesImpl(ConfigurationName name,
        com.azure.resourcemanager.newrelicobservability.NewRelicObservabilityManager serviceManager) {
        this.innerObject = new MonitoredSubscriptionPropertiesInner();
        this.serviceManager = serviceManager;
        this.configurationName = name;
    }

    public MonitoredSubscriptionPropertiesImpl update() {
        return this;
    }

    public MonitoredSubscriptionProperties apply() {
        this.innerObject = serviceManager.serviceClient().getMonitoredSubscriptions().update(resourceGroupName,
            monitorName, configurationName, this.innerModel(), Context.NONE);
        return this;
    }

    public MonitoredSubscriptionProperties apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getMonitoredSubscriptions().update(resourceGroupName,
            monitorName, configurationName, this.innerModel(), context);
        return this;
    }

    MonitoredSubscriptionPropertiesImpl(MonitoredSubscriptionPropertiesInner innerObject,
        com.azure.resourcemanager.newrelicobservability.NewRelicObservabilityManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.monitorName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "monitors");
        this.configurationName = ConfigurationName
            .fromString(ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "monitoredSubscriptions"));
    }

    public MonitoredSubscriptionProperties refresh() {
        this.innerObject = serviceManager.serviceClient().getMonitoredSubscriptions()
            .getWithResponse(resourceGroupName, monitorName, configurationName, Context.NONE).getValue();
        return this;
    }

    public MonitoredSubscriptionProperties refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getMonitoredSubscriptions()
            .getWithResponse(resourceGroupName, monitorName, configurationName, context).getValue();
        return this;
    }

    public MonitoredSubscriptionPropertiesImpl withProperties(SubscriptionList properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
