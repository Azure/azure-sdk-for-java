// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.newrelicobservability.implementation;

import com.azure.resourcemanager.newrelicobservability.fluent.models.MonitoredSubscriptionInner;
import com.azure.resourcemanager.newrelicobservability.fluent.models.MonitoringTagRulesPropertiesInner;
import com.azure.resourcemanager.newrelicobservability.models.MonitoredSubscription;
import com.azure.resourcemanager.newrelicobservability.models.MonitoringTagRulesProperties;
import com.azure.resourcemanager.newrelicobservability.models.Status;

public final class MonitoredSubscriptionImpl implements MonitoredSubscription {
    private MonitoredSubscriptionInner innerObject;

    private final com.azure.resourcemanager.newrelicobservability.NewRelicObservabilityManager serviceManager;

    MonitoredSubscriptionImpl(MonitoredSubscriptionInner innerObject,
        com.azure.resourcemanager.newrelicobservability.NewRelicObservabilityManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String subscriptionId() {
        return this.innerModel().subscriptionId();
    }

    public Status status() {
        return this.innerModel().status();
    }

    public String error() {
        return this.innerModel().error();
    }

    public MonitoringTagRulesProperties tagRules() {
        MonitoringTagRulesPropertiesInner inner = this.innerModel().tagRules();
        if (inner != null) {
            return new MonitoringTagRulesPropertiesImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public MonitoredSubscriptionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.newrelicobservability.NewRelicObservabilityManager manager() {
        return this.serviceManager;
    }
}
