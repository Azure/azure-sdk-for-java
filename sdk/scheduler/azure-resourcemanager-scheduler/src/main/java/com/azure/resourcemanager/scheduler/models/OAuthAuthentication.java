// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scheduler.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** The OAuthAuthentication model. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type")
@JsonTypeName("ActiveDirectoryOAuth")
@Fluent
public final class OAuthAuthentication extends HttpAuthentication {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(OAuthAuthentication.class);

    /*
     * Gets or sets the secret, return value will always be empty.
     */
    @JsonProperty(value = "secret")
    private String secret;

    /*
     * Gets or sets the tenant.
     */
    @JsonProperty(value = "tenant")
    private String tenant;

    /*
     * Gets or sets the audience.
     */
    @JsonProperty(value = "audience")
    private String audience;

    /*
     * Gets or sets the client identifier.
     */
    @JsonProperty(value = "clientId")
    private String clientId;

    /**
     * Get the secret property: Gets or sets the secret, return value will always be empty.
     *
     * @return the secret value.
     */
    public String secret() {
        return this.secret;
    }

    /**
     * Set the secret property: Gets or sets the secret, return value will always be empty.
     *
     * @param secret the secret value to set.
     * @return the OAuthAuthentication object itself.
     */
    public OAuthAuthentication withSecret(String secret) {
        this.secret = secret;
        return this;
    }

    /**
     * Get the tenant property: Gets or sets the tenant.
     *
     * @return the tenant value.
     */
    public String tenant() {
        return this.tenant;
    }

    /**
     * Set the tenant property: Gets or sets the tenant.
     *
     * @param tenant the tenant value to set.
     * @return the OAuthAuthentication object itself.
     */
    public OAuthAuthentication withTenant(String tenant) {
        this.tenant = tenant;
        return this;
    }

    /**
     * Get the audience property: Gets or sets the audience.
     *
     * @return the audience value.
     */
    public String audience() {
        return this.audience;
    }

    /**
     * Set the audience property: Gets or sets the audience.
     *
     * @param audience the audience value to set.
     * @return the OAuthAuthentication object itself.
     */
    public OAuthAuthentication withAudience(String audience) {
        this.audience = audience;
        return this;
    }

    /**
     * Get the clientId property: Gets or sets the client identifier.
     *
     * @return the clientId value.
     */
    public String clientId() {
        return this.clientId;
    }

    /**
     * Set the clientId property: Gets or sets the client identifier.
     *
     * @param clientId the clientId value to set.
     * @return the OAuthAuthentication object itself.
     */
    public OAuthAuthentication withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
