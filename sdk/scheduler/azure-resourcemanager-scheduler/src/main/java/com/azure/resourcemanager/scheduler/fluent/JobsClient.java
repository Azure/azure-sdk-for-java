// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scheduler.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.scheduler.fluent.models.JobDefinitionInner;
import com.azure.resourcemanager.scheduler.fluent.models.JobHistoryDefinitionInner;

/** An instance of this class provides access to all the operations defined in JobsClient. */
public interface JobsClient {
    /**
     * Gets a job.
     *
     * @param resourceGroupName The resource group name.
     * @param jobCollectionName The job collection name.
     * @param jobName The job name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a job.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    JobDefinitionInner get(String resourceGroupName, String jobCollectionName, String jobName);

    /**
     * Gets a job.
     *
     * @param resourceGroupName The resource group name.
     * @param jobCollectionName The job collection name.
     * @param jobName The job name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a job.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<JobDefinitionInner> getWithResponse(
        String resourceGroupName, String jobCollectionName, String jobName, Context context);

    /**
     * Provisions a new job or updates an existing job.
     *
     * @param resourceGroupName The resource group name.
     * @param jobCollectionName The job collection name.
     * @param jobName The job name.
     * @param job The job definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    JobDefinitionInner createOrUpdate(
        String resourceGroupName, String jobCollectionName, String jobName, JobDefinitionInner job);

    /**
     * Provisions a new job or updates an existing job.
     *
     * @param resourceGroupName The resource group name.
     * @param jobCollectionName The job collection name.
     * @param jobName The job name.
     * @param job The job definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<JobDefinitionInner> createOrUpdateWithResponse(
        String resourceGroupName, String jobCollectionName, String jobName, JobDefinitionInner job, Context context);

    /**
     * Patches an existing job.
     *
     * @param resourceGroupName The resource group name.
     * @param jobCollectionName The job collection name.
     * @param jobName The job name.
     * @param job The job definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    JobDefinitionInner patch(
        String resourceGroupName, String jobCollectionName, String jobName, JobDefinitionInner job);

    /**
     * Patches an existing job.
     *
     * @param resourceGroupName The resource group name.
     * @param jobCollectionName The job collection name.
     * @param jobName The job name.
     * @param job The job definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<JobDefinitionInner> patchWithResponse(
        String resourceGroupName, String jobCollectionName, String jobName, JobDefinitionInner job, Context context);

    /**
     * Deletes a job.
     *
     * @param resourceGroupName The resource group name.
     * @param jobCollectionName The job collection name.
     * @param jobName The job name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String jobCollectionName, String jobName);

    /**
     * Deletes a job.
     *
     * @param resourceGroupName The resource group name.
     * @param jobCollectionName The job collection name.
     * @param jobName The job name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(
        String resourceGroupName, String jobCollectionName, String jobName, Context context);

    /**
     * Runs a job.
     *
     * @param resourceGroupName The resource group name.
     * @param jobCollectionName The job collection name.
     * @param jobName The job name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void run(String resourceGroupName, String jobCollectionName, String jobName);

    /**
     * Runs a job.
     *
     * @param resourceGroupName The resource group name.
     * @param jobCollectionName The job collection name.
     * @param jobName The job name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> runWithResponse(String resourceGroupName, String jobCollectionName, String jobName, Context context);

    /**
     * Lists all jobs under the specified job collection.
     *
     * @param resourceGroupName The resource group name.
     * @param jobCollectionName The job collection name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<JobDefinitionInner> list(String resourceGroupName, String jobCollectionName);

    /**
     * Lists all jobs under the specified job collection.
     *
     * @param resourceGroupName The resource group name.
     * @param jobCollectionName The job collection name.
     * @param top The number of jobs to request, in the of range of [1..100].
     * @param skip The (0-based) index of the job history list from which to begin requesting entries.
     * @param filter The filter to apply on the job state.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<JobDefinitionInner> list(
        String resourceGroupName, String jobCollectionName, Integer top, Integer skip, String filter, Context context);

    /**
     * Lists job history.
     *
     * @param resourceGroupName The resource group name.
     * @param jobCollectionName The job collection name.
     * @param jobName The job name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<JobHistoryDefinitionInner> listJobHistory(
        String resourceGroupName, String jobCollectionName, String jobName);

    /**
     * Lists job history.
     *
     * @param resourceGroupName The resource group name.
     * @param jobCollectionName The job collection name.
     * @param jobName The job name.
     * @param top the number of job history to request, in the of range of [1..100].
     * @param skip The (0-based) index of the job history list from which to begin requesting entries.
     * @param filter The filter to apply on the job state.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<JobHistoryDefinitionInner> listJobHistory(
        String resourceGroupName,
        String jobCollectionName,
        String jobName,
        Integer top,
        Integer skip,
        String filter,
        Context context);
}
