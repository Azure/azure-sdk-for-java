// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scheduler.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** The JobProperties model. */
@Fluent
public final class JobProperties {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(JobProperties.class);

    /*
     * Gets or sets the job start time.
     */
    @JsonProperty(value = "startTime")
    private OffsetDateTime startTime;

    /*
     * Gets or sets the job action.
     */
    @JsonProperty(value = "action")
    private JobAction action;

    /*
     * Gets or sets the job recurrence.
     */
    @JsonProperty(value = "recurrence")
    private JobRecurrence recurrence;

    /*
     * Gets or set the job state.
     */
    @JsonProperty(value = "state")
    private JobState state;

    /*
     * Gets the job status.
     */
    @JsonProperty(value = "status", access = JsonProperty.Access.WRITE_ONLY)
    private JobStatus status;

    /**
     * Get the startTime property: Gets or sets the job start time.
     *
     * @return the startTime value.
     */
    public OffsetDateTime startTime() {
        return this.startTime;
    }

    /**
     * Set the startTime property: Gets or sets the job start time.
     *
     * @param startTime the startTime value to set.
     * @return the JobProperties object itself.
     */
    public JobProperties withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * Get the action property: Gets or sets the job action.
     *
     * @return the action value.
     */
    public JobAction action() {
        return this.action;
    }

    /**
     * Set the action property: Gets or sets the job action.
     *
     * @param action the action value to set.
     * @return the JobProperties object itself.
     */
    public JobProperties withAction(JobAction action) {
        this.action = action;
        return this;
    }

    /**
     * Get the recurrence property: Gets or sets the job recurrence.
     *
     * @return the recurrence value.
     */
    public JobRecurrence recurrence() {
        return this.recurrence;
    }

    /**
     * Set the recurrence property: Gets or sets the job recurrence.
     *
     * @param recurrence the recurrence value to set.
     * @return the JobProperties object itself.
     */
    public JobProperties withRecurrence(JobRecurrence recurrence) {
        this.recurrence = recurrence;
        return this;
    }

    /**
     * Get the state property: Gets or set the job state.
     *
     * @return the state value.
     */
    public JobState state() {
        return this.state;
    }

    /**
     * Set the state property: Gets or set the job state.
     *
     * @param state the state value to set.
     * @return the JobProperties object itself.
     */
    public JobProperties withState(JobState state) {
        this.state = state;
        return this;
    }

    /**
     * Get the status property: Gets the job status.
     *
     * @return the status value.
     */
    public JobStatus status() {
        return this.status;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (action() != null) {
            action().validate();
        }
        if (recurrence() != null) {
            recurrence().validate();
        }
        if (status() != null) {
            status().validate();
        }
    }
}
