// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hanaonazure.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.hanaonazure.models.HanaProvisioningStatesEnum;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** A provider instance associated with a SAP monitor. */
@JsonFlatten
@Fluent
public class ProviderInstanceInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ProviderInstanceInner.class);

    /*
     * The type of provider instance.
     */
    @JsonProperty(value = "properties.type")
    private String typePropertiesType;

    /*
     * A JSON string containing the properties of the provider instance.
     */
    @JsonProperty(value = "properties.properties")
    private String properties;

    /*
     * A JSON string containing metadata of the provider instance.
     */
    @JsonProperty(value = "properties.metadata")
    private String metadata;

    /*
     * State of provisioning of the provider instance
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private HanaProvisioningStatesEnum provisioningState;

    /**
     * Get the typePropertiesType property: The type of provider instance.
     *
     * @return the typePropertiesType value.
     */
    public String typePropertiesType() {
        return this.typePropertiesType;
    }

    /**
     * Set the typePropertiesType property: The type of provider instance.
     *
     * @param typePropertiesType the typePropertiesType value to set.
     * @return the ProviderInstanceInner object itself.
     */
    public ProviderInstanceInner withTypePropertiesType(String typePropertiesType) {
        this.typePropertiesType = typePropertiesType;
        return this;
    }

    /**
     * Get the properties property: A JSON string containing the properties of the provider instance.
     *
     * @return the properties value.
     */
    public String properties() {
        return this.properties;
    }

    /**
     * Set the properties property: A JSON string containing the properties of the provider instance.
     *
     * @param properties the properties value to set.
     * @return the ProviderInstanceInner object itself.
     */
    public ProviderInstanceInner withProperties(String properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Get the metadata property: A JSON string containing metadata of the provider instance.
     *
     * @return the metadata value.
     */
    public String metadata() {
        return this.metadata;
    }

    /**
     * Set the metadata property: A JSON string containing metadata of the provider instance.
     *
     * @param metadata the metadata value to set.
     * @return the ProviderInstanceInner object itself.
     */
    public ProviderInstanceInner withMetadata(String metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Get the provisioningState property: State of provisioning of the provider instance.
     *
     * @return the provisioningState value.
     */
    public HanaProvisioningStatesEnum provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
