// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hanaonazure.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Specifies the operating system settings for the HANA instance. */
@Fluent
public final class OSProfile {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(OSProfile.class);

    /*
     * Specifies the host OS name of the HANA instance.
     */
    @JsonProperty(value = "computerName")
    private String computerName;

    /*
     * This property allows you to specify the type of the OS.
     */
    @JsonProperty(value = "osType")
    private String osType;

    /*
     * Specifies version of operating system.
     */
    @JsonProperty(value = "version")
    private String version;

    /*
     * Specifies the SSH public key used to access the operating system.
     */
    @JsonProperty(value = "sshPublicKey")
    private String sshPublicKey;

    /**
     * Get the computerName property: Specifies the host OS name of the HANA instance.
     *
     * @return the computerName value.
     */
    public String computerName() {
        return this.computerName;
    }

    /**
     * Set the computerName property: Specifies the host OS name of the HANA instance.
     *
     * @param computerName the computerName value to set.
     * @return the OSProfile object itself.
     */
    public OSProfile withComputerName(String computerName) {
        this.computerName = computerName;
        return this;
    }

    /**
     * Get the osType property: This property allows you to specify the type of the OS.
     *
     * @return the osType value.
     */
    public String osType() {
        return this.osType;
    }

    /**
     * Set the osType property: This property allows you to specify the type of the OS.
     *
     * @param osType the osType value to set.
     * @return the OSProfile object itself.
     */
    public OSProfile withOsType(String osType) {
        this.osType = osType;
        return this;
    }

    /**
     * Get the version property: Specifies version of operating system.
     *
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Set the version property: Specifies version of operating system.
     *
     * @param version the version value to set.
     * @return the OSProfile object itself.
     */
    public OSProfile withVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get the sshPublicKey property: Specifies the SSH public key used to access the operating system.
     *
     * @return the sshPublicKey value.
     */
    public String sshPublicKey() {
        return this.sshPublicKey;
    }

    /**
     * Set the sshPublicKey property: Specifies the SSH public key used to access the operating system.
     *
     * @param sshPublicKey the sshPublicKey value to set.
     * @return the OSProfile object itself.
     */
    public OSProfile withSshPublicKey(String sshPublicKey) {
        this.sshPublicKey = sshPublicKey;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
