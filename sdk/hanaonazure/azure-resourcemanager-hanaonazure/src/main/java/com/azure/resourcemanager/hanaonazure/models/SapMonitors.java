// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hanaonazure.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of SapMonitors. */
public interface SapMonitors {
    /**
     * Gets a list of SAP monitors in the specified subscription. The operations returns various properties of each SAP
     * monitor.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of SAP monitors in the specified subscription.
     */
    PagedIterable<SapMonitor> list();

    /**
     * Gets a list of SAP monitors in the specified subscription. The operations returns various properties of each SAP
     * monitor.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of SAP monitors in the specified subscription.
     */
    PagedIterable<SapMonitor> list(Context context);

    /**
     * Gets properties of a SAP monitor for the specified subscription, resource group, and resource name.
     *
     * @param resourceGroupName Name of the resource group.
     * @param sapMonitorName Name of the SAP monitor resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of a SAP monitor for the specified subscription, resource group, and resource name.
     */
    SapMonitor getByResourceGroup(String resourceGroupName, String sapMonitorName);

    /**
     * Gets properties of a SAP monitor for the specified subscription, resource group, and resource name.
     *
     * @param resourceGroupName Name of the resource group.
     * @param sapMonitorName Name of the SAP monitor resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of a SAP monitor for the specified subscription, resource group, and resource name.
     */
    Response<SapMonitor> getByResourceGroupWithResponse(
        String resourceGroupName, String sapMonitorName, Context context);

    /**
     * Deletes a SAP monitor with the specified subscription, resource group, and monitor name.
     *
     * @param resourceGroupName Name of the resource group.
     * @param sapMonitorName Name of the SAP monitor resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String sapMonitorName);

    /**
     * Deletes a SAP monitor with the specified subscription, resource group, and monitor name.
     *
     * @param resourceGroupName Name of the resource group.
     * @param sapMonitorName Name of the SAP monitor resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String sapMonitorName, Context context);

    /**
     * Gets properties of a SAP monitor for the specified subscription, resource group, and resource name.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of a SAP monitor for the specified subscription, resource group, and resource name.
     */
    SapMonitor getById(String id);

    /**
     * Gets properties of a SAP monitor for the specified subscription, resource group, and resource name.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of a SAP monitor for the specified subscription, resource group, and resource name.
     */
    Response<SapMonitor> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a SAP monitor with the specified subscription, resource group, and monitor name.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes a SAP monitor with the specified subscription, resource group, and monitor name.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new SapMonitor resource.
     *
     * @param name resource name.
     * @return the first stage of the new SapMonitor definition.
     */
    SapMonitor.DefinitionStages.Blank define(String name);
}
