// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hanaonazure.generated;

import java.util.HashMap;
import java.util.Map;

/** Samples for SapMonitors Create. */
public final class SapMonitorsCreateSamples {
    /*
     * x-ms-original-file: specification/hanaonazure/resource-manager/Microsoft.HanaOnAzure/preview/2020-02-07-preview/examples/SapMonitors_Create.json
     */
    /**
     * Sample code: Create a SAP Monitor.
     *
     * @param manager Entry point to HanaManager.
     */
    public static void createASAPMonitor(com.azure.resourcemanager.hanaonazure.HanaManager manager) {
        manager
            .sapMonitors()
            .define("mySapMonitor")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withTags(mapOf("key", "value"))
            .withLogAnalyticsWorkspaceArmId(
                "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/microsoft.operationalinsights/workspaces/myWorkspace")
            .withEnableCustomerAnalytics(true)
            .withLogAnalyticsWorkspaceId("00000000-0000-0000-0000-000000000000")
            .withLogAnalyticsWorkspaceSharedKey(
                "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000==")
            .withMonitorSubnet(
                "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVnet/subnets/mySubnet")
            .create();
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
