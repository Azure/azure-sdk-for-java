// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.cognitiveservices.translator.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Detected Language with alternatives. */
@Immutable
public final class DetectedLanguageWithAlternatives extends DetectedLanguageElement {
    /*
     * An array of other possible languages.
     */
    @JsonProperty(value = "alternatives", required = true)
    private List<DetectedLanguage> alternatives;

    /**
     * Creates an instance of DetectedLanguageWithAlternatives class.
     *
     * @param language the language value to set.
     * @param score the score value to set.
     * @param isTranslationSupported the isTranslationSupported value to set.
     * @param isTransliterationSupported the isTransliterationSupported value to set.
     * @param alternatives the alternatives value to set.
     */
    @JsonCreator
    private DetectedLanguageWithAlternatives(
            @JsonProperty(value = "language", required = true) String language,
            @JsonProperty(value = "score", required = true) double score,
            @JsonProperty(value = "isTranslationSupported", required = true) boolean isTranslationSupported,
            @JsonProperty(value = "isTransliterationSupported", required = true) boolean isTransliterationSupported,
            @JsonProperty(value = "alternatives", required = true) List<DetectedLanguage> alternatives) {
        super(language, score, isTranslationSupported, isTransliterationSupported);
        this.alternatives = alternatives;
    }

    /**
     * Get the alternatives property: An array of other possible languages.
     *
     * @return the alternatives value.
     */
    public List<DetectedLanguage> getAlternatives() {
        return this.alternatives;
    }
}
