// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Properties of Cognitive Services account deployment model. (Deprecated, please use Deployment.sku instead.).
 */
@Fluent
public final class DeploymentScaleSettings implements JsonSerializable<DeploymentScaleSettings> {
    /*
     * Deployment scale type.
     */
    private DeploymentScaleType scaleType;

    /*
     * Deployment capacity.
     */
    private Integer capacity;

    /*
     * Deployment active capacity. This value might be different from `capacity` if customer recently updated
     * `capacity`.
     */
    private Integer activeCapacity;

    /**
     * Creates an instance of DeploymentScaleSettings class.
     */
    public DeploymentScaleSettings() {
    }

    /**
     * Get the scaleType property: Deployment scale type.
     * 
     * @return the scaleType value.
     */
    public DeploymentScaleType scaleType() {
        return this.scaleType;
    }

    /**
     * Set the scaleType property: Deployment scale type.
     * 
     * @param scaleType the scaleType value to set.
     * @return the DeploymentScaleSettings object itself.
     */
    public DeploymentScaleSettings withScaleType(DeploymentScaleType scaleType) {
        this.scaleType = scaleType;
        return this;
    }

    /**
     * Get the capacity property: Deployment capacity.
     * 
     * @return the capacity value.
     */
    public Integer capacity() {
        return this.capacity;
    }

    /**
     * Set the capacity property: Deployment capacity.
     * 
     * @param capacity the capacity value to set.
     * @return the DeploymentScaleSettings object itself.
     */
    public DeploymentScaleSettings withCapacity(Integer capacity) {
        this.capacity = capacity;
        return this;
    }

    /**
     * Get the activeCapacity property: Deployment active capacity. This value might be different from `capacity` if
     * customer recently updated `capacity`.
     * 
     * @return the activeCapacity value.
     */
    public Integer activeCapacity() {
        return this.activeCapacity;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("scaleType", this.scaleType == null ? null : this.scaleType.toString());
        jsonWriter.writeNumberField("capacity", this.capacity);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DeploymentScaleSettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DeploymentScaleSettings if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the DeploymentScaleSettings.
     */
    public static DeploymentScaleSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DeploymentScaleSettings deserializedDeploymentScaleSettings = new DeploymentScaleSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("scaleType".equals(fieldName)) {
                    deserializedDeploymentScaleSettings.scaleType = DeploymentScaleType.fromString(reader.getString());
                } else if ("capacity".equals(fieldName)) {
                    deserializedDeploymentScaleSettings.capacity = reader.getNullable(JsonReader::getInt);
                } else if ("activeCapacity".equals(fieldName)) {
                    deserializedDeploymentScaleSettings.activeCapacity = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDeploymentScaleSettings;
        });
    }
}
