// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.cognitiveservices.fluent.models.RaiPolicyInner;

/**
 * An instance of this class provides access to all the operations defined in RaiPoliciesClient.
 */
public interface RaiPoliciesClient {
    /**
     * Gets the content filters associated with the Azure OpenAI account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the content filters associated with the Azure OpenAI account as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RaiPolicyInner> list(String resourceGroupName, String accountName);

    /**
     * Gets the content filters associated with the Azure OpenAI account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the content filters associated with the Azure OpenAI account as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RaiPolicyInner> list(String resourceGroupName, String accountName, Context context);

    /**
     * Gets the specified Content Filters associated with the Azure OpenAI account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param raiPolicyName The name of the RaiPolicy associated with the Cognitive Services Account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified Content Filters associated with the Azure OpenAI account along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<RaiPolicyInner> getWithResponse(String resourceGroupName, String accountName, String raiPolicyName,
        Context context);

    /**
     * Gets the specified Content Filters associated with the Azure OpenAI account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param raiPolicyName The name of the RaiPolicy associated with the Cognitive Services Account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified Content Filters associated with the Azure OpenAI account.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RaiPolicyInner get(String resourceGroupName, String accountName, String raiPolicyName);

    /**
     * Update the state of specified Content Filters associated with the Azure OpenAI account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param raiPolicyName The name of the RaiPolicy associated with the Cognitive Services Account.
     * @param raiPolicy Properties describing the Content Filters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return cognitive Services RaiPolicy along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<RaiPolicyInner> createOrUpdateWithResponse(String resourceGroupName, String accountName,
        String raiPolicyName, RaiPolicyInner raiPolicy, Context context);

    /**
     * Update the state of specified Content Filters associated with the Azure OpenAI account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param raiPolicyName The name of the RaiPolicy associated with the Cognitive Services Account.
     * @param raiPolicy Properties describing the Content Filters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return cognitive Services RaiPolicy.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RaiPolicyInner createOrUpdate(String resourceGroupName, String accountName, String raiPolicyName,
        RaiPolicyInner raiPolicy);

    /**
     * Deletes the specified Content Filters associated with the Azure OpenAI account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param raiPolicyName The name of the RaiPolicy associated with the Cognitive Services Account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String accountName, String raiPolicyName);

    /**
     * Deletes the specified Content Filters associated with the Azure OpenAI account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param raiPolicyName The name of the RaiPolicy associated with the Cognitive Services Account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String accountName, String raiPolicyName,
        Context context);

    /**
     * Deletes the specified Content Filters associated with the Azure OpenAI account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param raiPolicyName The name of the RaiPolicy associated with the Cognitive Services Account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String accountName, String raiPolicyName);

    /**
     * Deletes the specified Content Filters associated with the Azure OpenAI account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param raiPolicyName The name of the RaiPolicy associated with the Cognitive Services Account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String accountName, String raiPolicyName, Context context);
}
