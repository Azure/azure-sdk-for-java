// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.cognitiveservices.fluent.models.RaiContentFilterInner;

/**
 * An instance of this class provides access to all the operations defined in RaiContentFiltersClient.
 */
public interface RaiContentFiltersClient {
    /**
     * List Content Filters types.
     * 
     * @param location Resource location.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of Content Filters as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RaiContentFilterInner> list(String location);

    /**
     * List Content Filters types.
     * 
     * @param location Resource location.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of Content Filters as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RaiContentFilterInner> list(String location, Context context);

    /**
     * Get Content Filters by Name.
     * 
     * @param location Resource location.
     * @param filterName The name of the RAI Content Filter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return content Filters by Name along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<RaiContentFilterInner> getWithResponse(String location, String filterName, Context context);

    /**
     * Get Content Filters by Name.
     * 
     * @param location Resource location.
     * @param filterName The name of the RAI Content Filter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return content Filters by Name.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RaiContentFilterInner get(String location, String filterName);
}
