// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The ConnectionManagedIdentity model.
 */
@Fluent
public final class ConnectionManagedIdentity implements JsonSerializable<ConnectionManagedIdentity> {
    /*
     * The clientId property.
     */
    private String clientId;

    /*
     * The resourceId property.
     */
    private String resourceId;

    /**
     * Creates an instance of ConnectionManagedIdentity class.
     */
    public ConnectionManagedIdentity() {
    }

    /**
     * Get the clientId property: The clientId property.
     * 
     * @return the clientId value.
     */
    public String clientId() {
        return this.clientId;
    }

    /**
     * Set the clientId property: The clientId property.
     * 
     * @param clientId the clientId value to set.
     * @return the ConnectionManagedIdentity object itself.
     */
    public ConnectionManagedIdentity withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }

    /**
     * Get the resourceId property: The resourceId property.
     * 
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Set the resourceId property: The resourceId property.
     * 
     * @param resourceId the resourceId value to set.
     * @return the ConnectionManagedIdentity object itself.
     */
    public ConnectionManagedIdentity withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("clientId", this.clientId);
        jsonWriter.writeStringField("resourceId", this.resourceId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ConnectionManagedIdentity from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ConnectionManagedIdentity if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ConnectionManagedIdentity.
     */
    public static ConnectionManagedIdentity fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ConnectionManagedIdentity deserializedConnectionManagedIdentity = new ConnectionManagedIdentity();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("clientId".equals(fieldName)) {
                    deserializedConnectionManagedIdentity.clientId = reader.getString();
                } else if ("resourceId".equals(fieldName)) {
                    deserializedConnectionManagedIdentity.resourceId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedConnectionManagedIdentity;
        });
    }
}
