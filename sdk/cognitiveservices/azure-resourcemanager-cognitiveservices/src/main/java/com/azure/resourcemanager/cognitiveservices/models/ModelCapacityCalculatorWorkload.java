// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Model Capacity Calculator Workload.
 */
@Fluent
public final class ModelCapacityCalculatorWorkload implements JsonSerializable<ModelCapacityCalculatorWorkload> {
    /*
     * Request per minute.
     */
    private Long requestPerMinute;

    /*
     * Dictionary, Model Capacity Calculator Workload Parameters.
     */
    private ModelCapacityCalculatorWorkloadRequestParam requestParameters;

    /**
     * Creates an instance of ModelCapacityCalculatorWorkload class.
     */
    public ModelCapacityCalculatorWorkload() {
    }

    /**
     * Get the requestPerMinute property: Request per minute.
     * 
     * @return the requestPerMinute value.
     */
    public Long requestPerMinute() {
        return this.requestPerMinute;
    }

    /**
     * Set the requestPerMinute property: Request per minute.
     * 
     * @param requestPerMinute the requestPerMinute value to set.
     * @return the ModelCapacityCalculatorWorkload object itself.
     */
    public ModelCapacityCalculatorWorkload withRequestPerMinute(Long requestPerMinute) {
        this.requestPerMinute = requestPerMinute;
        return this;
    }

    /**
     * Get the requestParameters property: Dictionary, Model Capacity Calculator Workload Parameters.
     * 
     * @return the requestParameters value.
     */
    public ModelCapacityCalculatorWorkloadRequestParam requestParameters() {
        return this.requestParameters;
    }

    /**
     * Set the requestParameters property: Dictionary, Model Capacity Calculator Workload Parameters.
     * 
     * @param requestParameters the requestParameters value to set.
     * @return the ModelCapacityCalculatorWorkload object itself.
     */
    public ModelCapacityCalculatorWorkload
        withRequestParameters(ModelCapacityCalculatorWorkloadRequestParam requestParameters) {
        this.requestParameters = requestParameters;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (requestParameters() != null) {
            requestParameters().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("requestPerMinute", this.requestPerMinute);
        jsonWriter.writeJsonField("requestParameters", this.requestParameters);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ModelCapacityCalculatorWorkload from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ModelCapacityCalculatorWorkload if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ModelCapacityCalculatorWorkload.
     */
    public static ModelCapacityCalculatorWorkload fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ModelCapacityCalculatorWorkload deserializedModelCapacityCalculatorWorkload
                = new ModelCapacityCalculatorWorkload();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("requestPerMinute".equals(fieldName)) {
                    deserializedModelCapacityCalculatorWorkload.requestPerMinute
                        = reader.getNullable(JsonReader::getLong);
                } else if ("requestParameters".equals(fieldName)) {
                    deserializedModelCapacityCalculatorWorkload.requestParameters
                        = ModelCapacityCalculatorWorkloadRequestParam.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedModelCapacityCalculatorWorkload;
        });
    }
}
