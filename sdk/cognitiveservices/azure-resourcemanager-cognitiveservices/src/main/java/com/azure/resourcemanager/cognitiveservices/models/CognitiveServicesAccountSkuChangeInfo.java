// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Sku change info of account. */
@Immutable
public final class CognitiveServicesAccountSkuChangeInfo {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(CognitiveServicesAccountSkuChangeInfo.class);

    /*
     * Gets the count of downgrades.
     */
    @JsonProperty(value = "countOfDowngrades", access = JsonProperty.Access.WRITE_ONLY)
    private Float countOfDowngrades;

    /*
     * Gets the count of upgrades after downgrades.
     */
    @JsonProperty(value = "countOfUpgradesAfterDowngrades", access = JsonProperty.Access.WRITE_ONLY)
    private Float countOfUpgradesAfterDowngrades;

    /*
     * Gets the last change date.
     */
    @JsonProperty(value = "lastChangeDate", access = JsonProperty.Access.WRITE_ONLY)
    private String lastChangeDate;

    /**
     * Get the countOfDowngrades property: Gets the count of downgrades.
     *
     * @return the countOfDowngrades value.
     */
    public Float countOfDowngrades() {
        return this.countOfDowngrades;
    }

    /**
     * Get the countOfUpgradesAfterDowngrades property: Gets the count of upgrades after downgrades.
     *
     * @return the countOfUpgradesAfterDowngrades value.
     */
    public Float countOfUpgradesAfterDowngrades() {
        return this.countOfUpgradesAfterDowngrades;
    }

    /**
     * Get the lastChangeDate property: Gets the last change date.
     *
     * @return the lastChangeDate value.
     */
    public String lastChangeDate() {
        return this.lastChangeDate;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
