// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * Properties of Quota Tier resource'.
 */
@Fluent
public final class QuotaTierProperties implements JsonSerializable<QuotaTierProperties> {
    /*
     * Name of the current quota tier for the subscription.
     */
    private String currentTierName;

    /*
     * Gets the tier upgrade policy for the subscription.
     */
    private TierUpgradePolicy tierUpgradePolicy;

    /*
     * The date on which the current tier was assigned to the subscription (UTC).
     */
    private OffsetDateTime assignmentDate;

    /*
     * Information about the quota tier upgrade eligibility for the subscription.
     */
    private QuotaTierUpgradeEligibilityInfo tierUpgradeEligibilityInfo;

    /**
     * Creates an instance of QuotaTierProperties class.
     */
    public QuotaTierProperties() {
    }

    /**
     * Get the currentTierName property: Name of the current quota tier for the subscription.
     * 
     * @return the currentTierName value.
     */
    public String currentTierName() {
        return this.currentTierName;
    }

    /**
     * Get the tierUpgradePolicy property: Gets the tier upgrade policy for the subscription.
     * 
     * @return the tierUpgradePolicy value.
     */
    public TierUpgradePolicy tierUpgradePolicy() {
        return this.tierUpgradePolicy;
    }

    /**
     * Set the tierUpgradePolicy property: Gets the tier upgrade policy for the subscription.
     * 
     * @param tierUpgradePolicy the tierUpgradePolicy value to set.
     * @return the QuotaTierProperties object itself.
     */
    public QuotaTierProperties withTierUpgradePolicy(TierUpgradePolicy tierUpgradePolicy) {
        this.tierUpgradePolicy = tierUpgradePolicy;
        return this;
    }

    /**
     * Get the assignmentDate property: The date on which the current tier was assigned to the subscription (UTC).
     * 
     * @return the assignmentDate value.
     */
    public OffsetDateTime assignmentDate() {
        return this.assignmentDate;
    }

    /**
     * Get the tierUpgradeEligibilityInfo property: Information about the quota tier upgrade eligibility for the
     * subscription.
     * 
     * @return the tierUpgradeEligibilityInfo value.
     */
    public QuotaTierUpgradeEligibilityInfo tierUpgradeEligibilityInfo() {
        return this.tierUpgradeEligibilityInfo;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (tierUpgradeEligibilityInfo() != null) {
            tierUpgradeEligibilityInfo().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("tierUpgradePolicy",
            this.tierUpgradePolicy == null ? null : this.tierUpgradePolicy.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of QuotaTierProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of QuotaTierProperties if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the QuotaTierProperties.
     */
    public static QuotaTierProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            QuotaTierProperties deserializedQuotaTierProperties = new QuotaTierProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("currentTierName".equals(fieldName)) {
                    deserializedQuotaTierProperties.currentTierName = reader.getString();
                } else if ("tierUpgradePolicy".equals(fieldName)) {
                    deserializedQuotaTierProperties.tierUpgradePolicy
                        = TierUpgradePolicy.fromString(reader.getString());
                } else if ("assignmentDate".equals(fieldName)) {
                    deserializedQuotaTierProperties.assignmentDate = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("tierUpgradeEligibilityInfo".equals(fieldName)) {
                    deserializedQuotaTierProperties.tierUpgradeEligibilityInfo
                        = QuotaTierUpgradeEligibilityInfo.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedQuotaTierProperties;
        });
    }
}
