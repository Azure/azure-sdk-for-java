// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of EncryptionScopes.
 */
public interface EncryptionScopes {
    /**
     * Gets the content filters associated with the Azure OpenAI account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the content filters associated with the Azure OpenAI account as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<EncryptionScope> list(String resourceGroupName, String accountName);

    /**
     * Gets the content filters associated with the Azure OpenAI account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the content filters associated with the Azure OpenAI account as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<EncryptionScope> list(String resourceGroupName, String accountName, Context context);

    /**
     * Gets the specified EncryptionScope associated with the Cognitive Services account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param encryptionScopeName The name of the encryptionScope associated with the Cognitive Services Account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified EncryptionScope associated with the Cognitive Services account along with {@link Response}.
     */
    Response<EncryptionScope> getWithResponse(String resourceGroupName, String accountName, String encryptionScopeName,
        Context context);

    /**
     * Gets the specified EncryptionScope associated with the Cognitive Services account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param encryptionScopeName The name of the encryptionScope associated with the Cognitive Services Account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified EncryptionScope associated with the Cognitive Services account.
     */
    EncryptionScope get(String resourceGroupName, String accountName, String encryptionScopeName);

    /**
     * Deletes the specified encryptionScope associated with the Cognitive Services account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param encryptionScopeName The name of the encryptionScope associated with the Cognitive Services Account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String accountName, String encryptionScopeName);

    /**
     * Deletes the specified encryptionScope associated with the Cognitive Services account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param encryptionScopeName The name of the encryptionScope associated with the Cognitive Services Account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String accountName, String encryptionScopeName, Context context);

    /**
     * Gets the specified EncryptionScope associated with the Cognitive Services account.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified EncryptionScope associated with the Cognitive Services account along with {@link Response}.
     */
    EncryptionScope getById(String id);

    /**
     * Gets the specified EncryptionScope associated with the Cognitive Services account.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified EncryptionScope associated with the Cognitive Services account along with {@link Response}.
     */
    Response<EncryptionScope> getByIdWithResponse(String id, Context context);

    /**
     * Deletes the specified encryptionScope associated with the Cognitive Services account.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes the specified encryptionScope associated with the Cognitive Services account.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new EncryptionScope resource.
     * 
     * @param name resource name.
     * @return the first stage of the new EncryptionScope definition.
     */
    EncryptionScope.DefinitionStages.Blank define(String name);
}
