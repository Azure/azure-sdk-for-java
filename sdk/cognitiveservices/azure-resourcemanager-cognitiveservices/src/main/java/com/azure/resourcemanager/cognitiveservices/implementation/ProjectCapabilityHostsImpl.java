// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.cognitiveservices.fluent.ProjectCapabilityHostsClient;
import com.azure.resourcemanager.cognitiveservices.fluent.models.CapabilityHostInner;
import com.azure.resourcemanager.cognitiveservices.models.CapabilityHost;
import com.azure.resourcemanager.cognitiveservices.models.ProjectCapabilityHosts;

public final class ProjectCapabilityHostsImpl implements ProjectCapabilityHosts {
    private static final ClientLogger LOGGER = new ClientLogger(ProjectCapabilityHostsImpl.class);

    private final ProjectCapabilityHostsClient innerClient;

    private final com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager serviceManager;

    public ProjectCapabilityHostsImpl(ProjectCapabilityHostsClient innerClient,
        com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public void delete(String resourceGroupName, String accountName, String projectName, String capabilityHostname) {
        this.serviceClient().delete(resourceGroupName, accountName, projectName, capabilityHostname);
    }

    public void delete(String resourceGroupName, String accountName, String projectName, String capabilityHostname,
        Context context) {
        this.serviceClient().delete(resourceGroupName, accountName, projectName, capabilityHostname, context);
    }

    public Response<CapabilityHost> getWithResponse(String resourceGroupName, String accountName, String projectName,
        String capabilityHostname, Context context) {
        Response<CapabilityHostInner> inner = this.serviceClient()
            .getWithResponse(resourceGroupName, accountName, projectName, capabilityHostname, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new CapabilityHostImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public CapabilityHost get(String resourceGroupName, String accountName, String projectName,
        String capabilityHostname) {
        CapabilityHostInner inner
            = this.serviceClient().get(resourceGroupName, accountName, projectName, capabilityHostname);
        if (inner != null) {
            return new CapabilityHostImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public CapabilityHost createOrUpdate(String resourceGroupName, String accountName, String projectName,
        String capabilityHostname, CapabilityHostInner body) {
        CapabilityHostInner inner = this.serviceClient()
            .createOrUpdate(resourceGroupName, accountName, projectName, capabilityHostname, body);
        if (inner != null) {
            return new CapabilityHostImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public CapabilityHost createOrUpdate(String resourceGroupName, String accountName, String projectName,
        String capabilityHostname, CapabilityHostInner body, Context context) {
        CapabilityHostInner inner = this.serviceClient()
            .createOrUpdate(resourceGroupName, accountName, projectName, capabilityHostname, body, context);
        if (inner != null) {
            return new CapabilityHostImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private ProjectCapabilityHostsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager manager() {
        return this.serviceManager;
    }
}
