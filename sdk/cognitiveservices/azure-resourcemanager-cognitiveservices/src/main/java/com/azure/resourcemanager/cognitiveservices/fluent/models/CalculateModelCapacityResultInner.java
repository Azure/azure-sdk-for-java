// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.cognitiveservices.models.CalculateModelCapacityResultEstimatedCapacity;
import com.azure.resourcemanager.cognitiveservices.models.DeploymentModel;
import java.io.IOException;

/**
 * Calculate Model Capacity result.
 */
@Fluent
public final class CalculateModelCapacityResultInner implements JsonSerializable<CalculateModelCapacityResultInner> {
    /*
     * Properties of Cognitive Services account deployment model.
     */
    private DeploymentModel model;

    /*
     * The skuName property.
     */
    private String skuName;

    /*
     * Model Estimated Capacity.
     */
    private CalculateModelCapacityResultEstimatedCapacity estimatedCapacity;

    /**
     * Creates an instance of CalculateModelCapacityResultInner class.
     */
    public CalculateModelCapacityResultInner() {
    }

    /**
     * Get the model property: Properties of Cognitive Services account deployment model.
     * 
     * @return the model value.
     */
    public DeploymentModel model() {
        return this.model;
    }

    /**
     * Set the model property: Properties of Cognitive Services account deployment model.
     * 
     * @param model the model value to set.
     * @return the CalculateModelCapacityResultInner object itself.
     */
    public CalculateModelCapacityResultInner withModel(DeploymentModel model) {
        this.model = model;
        return this;
    }

    /**
     * Get the skuName property: The skuName property.
     * 
     * @return the skuName value.
     */
    public String skuName() {
        return this.skuName;
    }

    /**
     * Set the skuName property: The skuName property.
     * 
     * @param skuName the skuName value to set.
     * @return the CalculateModelCapacityResultInner object itself.
     */
    public CalculateModelCapacityResultInner withSkuName(String skuName) {
        this.skuName = skuName;
        return this;
    }

    /**
     * Get the estimatedCapacity property: Model Estimated Capacity.
     * 
     * @return the estimatedCapacity value.
     */
    public CalculateModelCapacityResultEstimatedCapacity estimatedCapacity() {
        return this.estimatedCapacity;
    }

    /**
     * Set the estimatedCapacity property: Model Estimated Capacity.
     * 
     * @param estimatedCapacity the estimatedCapacity value to set.
     * @return the CalculateModelCapacityResultInner object itself.
     */
    public CalculateModelCapacityResultInner
        withEstimatedCapacity(CalculateModelCapacityResultEstimatedCapacity estimatedCapacity) {
        this.estimatedCapacity = estimatedCapacity;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (model() != null) {
            model().validate();
        }
        if (estimatedCapacity() != null) {
            estimatedCapacity().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("model", this.model);
        jsonWriter.writeStringField("skuName", this.skuName);
        jsonWriter.writeJsonField("estimatedCapacity", this.estimatedCapacity);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CalculateModelCapacityResultInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CalculateModelCapacityResultInner if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CalculateModelCapacityResultInner.
     */
    public static CalculateModelCapacityResultInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CalculateModelCapacityResultInner deserializedCalculateModelCapacityResultInner
                = new CalculateModelCapacityResultInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("model".equals(fieldName)) {
                    deserializedCalculateModelCapacityResultInner.model = DeploymentModel.fromJson(reader);
                } else if ("skuName".equals(fieldName)) {
                    deserializedCalculateModelCapacityResultInner.skuName = reader.getString();
                } else if ("estimatedCapacity".equals(fieldName)) {
                    deserializedCalculateModelCapacityResultInner.estimatedCapacity
                        = CalculateModelCapacityResultEstimatedCapacity.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCalculateModelCapacityResultInner;
        });
    }
}
