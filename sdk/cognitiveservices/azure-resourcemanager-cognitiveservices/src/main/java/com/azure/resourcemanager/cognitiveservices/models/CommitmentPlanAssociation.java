// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The commitment plan association.
 */
@Fluent
public final class CommitmentPlanAssociation implements JsonSerializable<CommitmentPlanAssociation> {
    /*
     * The Azure resource id of the commitment plan.
     */
    private String commitmentPlanId;

    /*
     * The location of of the commitment plan.
     */
    private String commitmentPlanLocation;

    /**
     * Creates an instance of CommitmentPlanAssociation class.
     */
    public CommitmentPlanAssociation() {
    }

    /**
     * Get the commitmentPlanId property: The Azure resource id of the commitment plan.
     * 
     * @return the commitmentPlanId value.
     */
    public String commitmentPlanId() {
        return this.commitmentPlanId;
    }

    /**
     * Set the commitmentPlanId property: The Azure resource id of the commitment plan.
     * 
     * @param commitmentPlanId the commitmentPlanId value to set.
     * @return the CommitmentPlanAssociation object itself.
     */
    public CommitmentPlanAssociation withCommitmentPlanId(String commitmentPlanId) {
        this.commitmentPlanId = commitmentPlanId;
        return this;
    }

    /**
     * Get the commitmentPlanLocation property: The location of of the commitment plan.
     * 
     * @return the commitmentPlanLocation value.
     */
    public String commitmentPlanLocation() {
        return this.commitmentPlanLocation;
    }

    /**
     * Set the commitmentPlanLocation property: The location of of the commitment plan.
     * 
     * @param commitmentPlanLocation the commitmentPlanLocation value to set.
     * @return the CommitmentPlanAssociation object itself.
     */
    public CommitmentPlanAssociation withCommitmentPlanLocation(String commitmentPlanLocation) {
        this.commitmentPlanLocation = commitmentPlanLocation;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("commitmentPlanId", this.commitmentPlanId);
        jsonWriter.writeStringField("commitmentPlanLocation", this.commitmentPlanLocation);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CommitmentPlanAssociation from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CommitmentPlanAssociation if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CommitmentPlanAssociation.
     */
    public static CommitmentPlanAssociation fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CommitmentPlanAssociation deserializedCommitmentPlanAssociation = new CommitmentPlanAssociation();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("commitmentPlanId".equals(fieldName)) {
                    deserializedCommitmentPlanAssociation.commitmentPlanId = reader.getString();
                } else if ("commitmentPlanLocation".equals(fieldName)) {
                    deserializedCommitmentPlanAssociation.commitmentPlanLocation = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCommitmentPlanAssociation;
        });
    }
}
