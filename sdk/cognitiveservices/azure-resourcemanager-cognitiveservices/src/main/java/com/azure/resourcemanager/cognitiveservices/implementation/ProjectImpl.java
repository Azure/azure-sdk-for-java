// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.cognitiveservices.fluent.models.ProjectInner;
import com.azure.resourcemanager.cognitiveservices.models.Identity;
import com.azure.resourcemanager.cognitiveservices.models.Project;
import com.azure.resourcemanager.cognitiveservices.models.ProjectProperties;
import java.util.Collections;
import java.util.Map;

public final class ProjectImpl implements Project, Project.Definition, Project.Update {
    private ProjectInner innerObject;

    private final com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Identity identity() {
        return this.innerModel().identity();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String location() {
        return this.innerModel().location();
    }

    public ProjectProperties properties() {
        return this.innerModel().properties();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ProjectInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String accountName;

    private String projectName;

    public ProjectImpl withExistingAccount(String resourceGroupName, String accountName) {
        this.resourceGroupName = resourceGroupName;
        this.accountName = accountName;
        return this;
    }

    public Project create() {
        this.innerObject = serviceManager.serviceClient()
            .getProjects()
            .create(resourceGroupName, accountName, projectName, this.innerModel(), Context.NONE);
        return this;
    }

    public Project create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getProjects()
            .create(resourceGroupName, accountName, projectName, this.innerModel(), context);
        return this;
    }

    ProjectImpl(String name, com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager serviceManager) {
        this.innerObject = new ProjectInner();
        this.serviceManager = serviceManager;
        this.projectName = name;
    }

    public ProjectImpl update() {
        return this;
    }

    public Project apply() {
        this.innerObject = serviceManager.serviceClient()
            .getProjects()
            .update(resourceGroupName, accountName, projectName, this.innerModel(), Context.NONE);
        return this;
    }

    public Project apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getProjects()
            .update(resourceGroupName, accountName, projectName, this.innerModel(), context);
        return this;
    }

    ProjectImpl(ProjectInner innerObject,
        com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.accountName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "accounts");
        this.projectName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "projects");
    }

    public Project refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getProjects()
            .getWithResponse(resourceGroupName, accountName, projectName, Context.NONE)
            .getValue();
        return this;
    }

    public Project refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getProjects()
            .getWithResponse(resourceGroupName, accountName, projectName, context)
            .getValue();
        return this;
    }

    public ProjectImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public ProjectImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public ProjectImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public ProjectImpl withIdentity(Identity identity) {
        this.innerModel().withIdentity(identity);
        return this;
    }

    public ProjectImpl withProperties(ProjectProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
