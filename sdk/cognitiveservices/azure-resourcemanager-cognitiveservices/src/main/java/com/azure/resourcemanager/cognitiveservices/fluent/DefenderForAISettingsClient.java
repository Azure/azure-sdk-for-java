// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.cognitiveservices.fluent.models.DefenderForAISettingInner;

/**
 * An instance of this class provides access to all the operations defined in DefenderForAISettingsClient.
 */
public interface DefenderForAISettingsClient {
    /**
     * Lists the Defender for AI settings.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of cognitive services Defender for AI Settings as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DefenderForAISettingInner> list(String resourceGroupName, String accountName);

    /**
     * Lists the Defender for AI settings.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of cognitive services Defender for AI Settings as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DefenderForAISettingInner> list(String resourceGroupName, String accountName, Context context);

    /**
     * Gets the specified Defender for AI setting by name.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param defenderForAISettingName The name of the defender for AI setting.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified Defender for AI setting by name along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DefenderForAISettingInner> getWithResponse(String resourceGroupName, String accountName,
        String defenderForAISettingName, Context context);

    /**
     * Gets the specified Defender for AI setting by name.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param defenderForAISettingName The name of the defender for AI setting.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified Defender for AI setting by name.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DefenderForAISettingInner get(String resourceGroupName, String accountName, String defenderForAISettingName);

    /**
     * Creates or Updates the specified Defender for AI setting.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param defenderForAISettingName The name of the defender for AI setting.
     * @param defenderForAISettings Properties describing the Defender for AI setting.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Defender for AI resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DefenderForAISettingInner> createOrUpdateWithResponse(String resourceGroupName, String accountName,
        String defenderForAISettingName, DefenderForAISettingInner defenderForAISettings, Context context);

    /**
     * Creates or Updates the specified Defender for AI setting.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param defenderForAISettingName The name of the defender for AI setting.
     * @param defenderForAISettings Properties describing the Defender for AI setting.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Defender for AI resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DefenderForAISettingInner createOrUpdate(String resourceGroupName, String accountName,
        String defenderForAISettingName, DefenderForAISettingInner defenderForAISettings);

    /**
     * Updates the specified Defender for AI setting.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param defenderForAISettingName The name of the defender for AI setting.
     * @param defenderForAISettings Properties describing the Defender for AI setting.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Defender for AI resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DefenderForAISettingInner> updateWithResponse(String resourceGroupName, String accountName,
        String defenderForAISettingName, DefenderForAISettingInner defenderForAISettings, Context context);

    /**
     * Updates the specified Defender for AI setting.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param defenderForAISettingName The name of the defender for AI setting.
     * @param defenderForAISettings Properties describing the Defender for AI setting.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Defender for AI resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DefenderForAISettingInner update(String resourceGroupName, String accountName, String defenderForAISettingName,
        DefenderForAISettingInner defenderForAISettings);
}
