// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager;
import com.azure.resourcemanager.cognitiveservices.models.RaiTopic;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RaiTopicsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"etag\":\"gttpufpbpgnrho\",\"tags\":{\"ysolsy\":\"jbfwxipl\",\"xslwhd\":\"p\",\"wzbxpc\":\"cvhtbbzjhfvh\"},\"properties\":{\"topicId\":\"ihotjecohmxv\",\"topicName\":\"rrskapbxwieexuy\",\"description\":\"erltfokyk\",\"sampleBlobUrl\":\"imyc\",\"status\":\"r\",\"failedReason\":\"cxzznnuife\",\"createdAt\":\"2021-08-05T14:37:40Z\",\"lastModifiedAt\":\"2021-03-27T07:18:57Z\"},\"id\":\"prkjg\",\"name\":\"wrjmwv\",\"type\":\"btuqkxx\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CognitiveServicesManager manager = CognitiveServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        RaiTopic response = manager.raiTopics()
            .getWithResponse("okvjgbzsxebrslt", "fyhcdjw", "uoard", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("jbfwxipl", response.tags().get("ysolsy"));
        Assertions.assertEquals("ihotjecohmxv", response.properties().topicId());
        Assertions.assertEquals("rrskapbxwieexuy", response.properties().topicName());
        Assertions.assertEquals("erltfokyk", response.properties().description());
        Assertions.assertEquals("imyc", response.properties().sampleBlobUrl());
        Assertions.assertEquals("r", response.properties().status());
        Assertions.assertEquals("cxzznnuife", response.properties().failedReason());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-05T14:37:40Z"), response.properties().createdAt());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-27T07:18:57Z"), response.properties().lastModifiedAt());
    }
}
