// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager;
import com.azure.resourcemanager.cognitiveservices.models.QuotaUsageStatus;
import com.azure.resourcemanager.cognitiveservices.models.UnitType;
import com.azure.resourcemanager.cognitiveservices.models.UsageListResult;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AccountsListUsagesWithResponseMockTests {
    @Test
    public void testListUsagesWithResponse() throws Exception {
        String responseStr
            = "{\"nextLink\":\"mmbugtywatmqaq\",\"value\":[{\"unit\":\"Percent\",\"name\":{\"value\":\"oeshoygzcbyfq\",\"localizedValue\":\"faoytehqpuv\"},\"quotaPeriod\":\"vqmtdwckygroejn\",\"limit\":76.49773710610344,\"currentValue\":67.05490418254814,\"nextResetTime\":\"kb\",\"status\":\"Included\"},{\"unit\":\"Bytes\",\"name\":{\"value\":\"ceysfaqeg\",\"localizedValue\":\"wryshwd\"},\"quotaPeriod\":\"vbxgkqusyb\",\"limit\":63.81647101579004,\"currentValue\":90.05665099395556,\"nextResetTime\":\"vvlfntymtp\",\"status\":\"Blocked\"},{\"unit\":\"CountPerSecond\",\"name\":{\"value\":\"erohzrsqalsxkdn\",\"localizedValue\":\"apfgsdpcvessm\"},\"quotaPeriod\":\"h\",\"limit\":39.5785601199793,\"currentValue\":51.17838108548566,\"nextResetTime\":\"qctekvalb\",\"status\":\"InOverage\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CognitiveServicesManager manager = CognitiveServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        UsageListResult response = manager.accounts()
            .listUsagesWithResponse("kwiswskukjtas", "vwisp", "xkdtxfkndlqvtwkn", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("mmbugtywatmqaq", response.nextLink());
        Assertions.assertEquals(UnitType.PERCENT, response.value().get(0).unit());
        Assertions.assertEquals("oeshoygzcbyfq", response.value().get(0).name().value());
        Assertions.assertEquals("faoytehqpuv", response.value().get(0).name().localizedValue());
        Assertions.assertEquals("vqmtdwckygroejn", response.value().get(0).quotaPeriod());
        Assertions.assertEquals(76.49773710610344D, response.value().get(0).limit());
        Assertions.assertEquals(67.05490418254814D, response.value().get(0).currentValue());
        Assertions.assertEquals("kb", response.value().get(0).nextResetTime());
        Assertions.assertEquals(QuotaUsageStatus.INCLUDED, response.value().get(0).status());
    }
}
