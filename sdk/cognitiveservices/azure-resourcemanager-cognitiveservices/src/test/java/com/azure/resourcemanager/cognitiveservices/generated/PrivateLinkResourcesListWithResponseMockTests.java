// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager;
import com.azure.resourcemanager.cognitiveservices.models.PrivateLinkResourceListResult;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PrivateLinkResourcesListWithResponseMockTests {
    @Test
    public void testListWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"groupId\":\"ewj\",\"requiredMembers\":[\"liuhqawmoaiancz\"],\"requiredZoneNames\":[\"drrslblxydk\",\"rxvvbxi\",\"kgfbqljnqkhy\"],\"displayName\":\"ocokule\"},\"id\":\"urqlrqffawey\",\"name\":\"rkphyjdxr\",\"type\":\"vjuqdbrxmrgchb\"},{\"properties\":{\"groupId\":\"kiyfjjkbajbusc\",\"requiredMembers\":[\"u\",\"ioycbl\",\"vpmclujyxkyxlz\"],\"requiredZoneNames\":[\"gkzz\"],\"displayName\":\"afhbzf\"},\"id\":\"ovwmbjlzqsczpgvd\",\"name\":\"napfdqwowftpt\",\"type\":\"uwjtks\"},{\"properties\":{\"groupId\":\"cgqyhleseyq\",\"requiredMembers\":[\"y\",\"ldotjvdkwisws\"],\"requiredZoneNames\":[\"jtasbvwispk\",\"kdtxfkndlqvtwkn\"],\"displayName\":\"mmbugtywatmqaq\"},\"id\":\"ueatgroe\",\"name\":\"hoygzcbyfq\",\"type\":\"kfaoytehq\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CognitiveServicesManager manager = CognitiveServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PrivateLinkResourceListResult response = manager.privateLinkResources()
            .listWithResponse("ejdtxptl", "h", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("drrslblxydk", response.value().get(0).properties().requiredZoneNames().get(0));
    }
}
