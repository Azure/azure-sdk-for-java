// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterConfiguration;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NetworkSecurityPerimeterConfigurationsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"vmaxgnuyea\",\"provisioningIssues\":[{\"name\":\"udf\",\"properties\":{\"issueType\":\"ehok\",\"severity\":\"pqtwloesqrggvrb\",\"description\":\"rukoi\",\"suggestedResourceIds\":[\"iduw\",\"leipjl\"],\"suggestedAccessRules\":[{},{},{}]}},{\"name\":\"p\",\"properties\":{\"issueType\":\"z\",\"severity\":\"hqkkwhbgxvellvul\",\"description\":\"d\",\"suggestedResourceIds\":[\"tmujdtvmc\",\"yymffhmjp\",\"dnyxfzuvrz\"],\"suggestedAccessRules\":[{},{},{},{}]}},{\"name\":\"zjqr\",\"properties\":{\"issueType\":\"vnmdyfoeboj\",\"severity\":\"pp\",\"description\":\"aohoqkpjtnq\",\"suggestedResourceIds\":[\"aywkdcwmqsyril\"],\"suggestedAccessRules\":[{},{},{},{}]}},{\"name\":\"qaolfylnkkbjpjv\",\"properties\":{\"issueType\":\"ltm\",\"severity\":\"obbjwhlwy\",\"description\":\"nqzocrdzg\",\"suggestedResourceIds\":[\"untgxdn\",\"aqttiek\",\"i\",\"uvny\"],\"suggestedAccessRules\":[{},{},{},{}]}}],\"networkSecurityPerimeter\":{\"id\":\"xgyrihlgmgbehlqt\",\"perimeterGuid\":\"rflknd\",\"location\":\"dpg\"},\"resourceAssociation\":{\"name\":\"dhdaqotwfhipx\",\"accessMode\":\"sabvcip\"},\"profile\":{\"name\":\"afcz\",\"accessRulesVersion\":2476059658162124344,\"accessRules\":[{\"name\":\"rvpe\",\"properties\":{}},{\"name\":\"dvei\",\"properties\":{}},{\"name\":\"jnsxzajlnsjhwjuy\",\"properties\":{}},{\"name\":\"xqvmvuay\",\"properties\":{}}],\"diagnosticSettingsVersion\":2506282520754540951,\"enabledLogCategories\":[\"eqbw\",\"ntghyksarcdr\"]}},\"id\":\"xsl\",\"name\":\"vlzladl\",\"type\":\"x\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CognitiveServicesManager manager = CognitiveServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        NetworkSecurityPerimeterConfiguration response = manager.networkSecurityPerimeterConfigurations()
            .getWithResponse("wjiyewhfjsrwq", "xet", "gcwvrrmdqntycna", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("udf", response.properties().provisioningIssues().get(0).name());
        Assertions.assertEquals("ehok", response.properties().provisioningIssues().get(0).properties().issueType());
        Assertions.assertEquals("pqtwloesqrggvrb",
            response.properties().provisioningIssues().get(0).properties().severity());
        Assertions.assertEquals("rukoi", response.properties().provisioningIssues().get(0).properties().description());
        Assertions.assertEquals("iduw",
            response.properties().provisioningIssues().get(0).properties().suggestedResourceIds().get(0));
        Assertions.assertEquals("xgyrihlgmgbehlqt", response.properties().networkSecurityPerimeter().id());
        Assertions.assertEquals("rflknd", response.properties().networkSecurityPerimeter().perimeterGuid());
        Assertions.assertEquals("dpg", response.properties().networkSecurityPerimeter().location());
        Assertions.assertEquals("dhdaqotwfhipx", response.properties().resourceAssociation().name());
        Assertions.assertEquals("sabvcip", response.properties().resourceAssociation().accessMode());
        Assertions.assertEquals("afcz", response.properties().profile().name());
        Assertions.assertEquals(2476059658162124344L, response.properties().profile().accessRulesVersion());
        Assertions.assertEquals("rvpe", response.properties().profile().accessRules().get(0).name());
        Assertions.assertEquals(2506282520754540951L, response.properties().profile().diagnosticSettingsVersion());
        Assertions.assertEquals("eqbw", response.properties().profile().enabledLogCategories().get(0));
    }
}
