// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager;
import com.azure.resourcemanager.cognitiveservices.models.RaiTopic;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RaiTopicsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"etag\":\"jaqupbyynvskpaj\",\"tags\":{\"ccwkqmtx\":\"eumexmjbxc\",\"qis\":\"p\"},\"properties\":{\"topicId\":\"ilg\",\"topicName\":\"rqre\",\"description\":\"aahu\",\"sampleBlobUrl\":\"m\",\"status\":\"ahlfxlmuifmuadj\",\"failedReason\":\"snc\",\"createdAt\":\"2021-03-03T03:02:30Z\",\"lastModifiedAt\":\"2021-05-31T00:54:30Z\"},\"id\":\"hjgczetyb\",\"name\":\"xgztlcgctjch\",\"type\":\"j\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CognitiveServicesManager manager = CognitiveServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<RaiTopic> response
            = manager.raiTopics().list("mwgxqlde", "otjgxieqfkyfhi", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("eumexmjbxc", response.iterator().next().tags().get("ccwkqmtx"));
        Assertions.assertEquals("ilg", response.iterator().next().properties().topicId());
        Assertions.assertEquals("rqre", response.iterator().next().properties().topicName());
        Assertions.assertEquals("aahu", response.iterator().next().properties().description());
        Assertions.assertEquals("m", response.iterator().next().properties().sampleBlobUrl());
        Assertions.assertEquals("ahlfxlmuifmuadj", response.iterator().next().properties().status());
        Assertions.assertEquals("snc", response.iterator().next().properties().failedReason());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-03T03:02:30Z"),
            response.iterator().next().properties().createdAt());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-31T00:54:30Z"),
            response.iterator().next().properties().lastModifiedAt());
    }
}
