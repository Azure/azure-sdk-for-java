// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager;
import com.azure.resourcemanager.cognitiveservices.models.CommitmentPlan;
import com.azure.resourcemanager.cognitiveservices.models.HostingModel;
import com.azure.resourcemanager.cognitiveservices.models.SkuTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CommitmentPlansGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"etag\":\"bsmfkwiyjvz\",\"kind\":\"osrnawnvzmlnkoy\",\"sku\":{\"name\":\"xvjabjq\",\"tier\":\"Premium\",\"size\":\"yvymcnudndo\",\"family\":\"hjxwxq\",\"capacity\":2080227457},\"tags\":{\"ksmitnsqxtlt\":\"mp\",\"frakkldgrc\":\"lkrdpqgfhy\"},\"location\":\"cmfcnrjajq\",\"properties\":{\"provisioningState\":\"Creating\",\"commitmentPlanGuid\":\"tie\",\"hostingModel\":\"ConnectedContainer\",\"planType\":\"gxxgfb\",\"current\":{\"tier\":\"lpqagyn\",\"count\":1110367561,\"quota\":{\"quantity\":1769523423599098954,\"unit\":\"lin\"},\"startDate\":\"yqxzxaqzibmqim\",\"endDate\":\"mqruqguhfupe\"},\"autoRenew\":true,\"next\":{\"tier\":\"oqsbpkflanfkgxsy\",\"count\":124843164,\"quota\":{\"quantity\":2742281976066601209,\"unit\":\"uohdkcprgukxr\"},\"startDate\":\"io\",\"endDate\":\"lutixmq\"},\"last\":{\"tier\":\"jizcbfzmcrunfhiu\",\"count\":1201337958,\"quota\":{\"quantity\":6768706483497184556,\"unit\":\"qktkrumzuedkyzbf\"},\"startDate\":\"ovqkxiu\",\"endDate\":\"ggvqrnhyhlwcjs\"},\"provisioningIssues\":[\"jhffbxrqrkij\",\"euqlsdxeqztv\"]},\"id\":\"mwwmjswenaww\",\"name\":\"me\",\"type\":\"leqioulndh\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CognitiveServicesManager manager = CognitiveServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        CommitmentPlan response = manager.commitmentPlans()
            .getWithResponse("hlimby", "ecr", "odlikcdrdaasax", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("osrnawnvzmlnkoy", response.kind());
        Assertions.assertEquals("xvjabjq", response.sku().name());
        Assertions.assertEquals(SkuTier.PREMIUM, response.sku().tier());
        Assertions.assertEquals("yvymcnudndo", response.sku().size());
        Assertions.assertEquals("hjxwxq", response.sku().family());
        Assertions.assertEquals(2080227457, response.sku().capacity());
        Assertions.assertEquals("mp", response.tags().get("ksmitnsqxtlt"));
        Assertions.assertEquals("cmfcnrjajq", response.location());
        Assertions.assertEquals("tie", response.properties().commitmentPlanGuid());
        Assertions.assertEquals(HostingModel.CONNECTED_CONTAINER, response.properties().hostingModel());
        Assertions.assertEquals("gxxgfb", response.properties().planType());
        Assertions.assertEquals("lpqagyn", response.properties().current().tier());
        Assertions.assertEquals(1110367561, response.properties().current().count());
        Assertions.assertTrue(response.properties().autoRenew());
        Assertions.assertEquals("oqsbpkflanfkgxsy", response.properties().next().tier());
        Assertions.assertEquals(124843164, response.properties().next().count());
    }
}
