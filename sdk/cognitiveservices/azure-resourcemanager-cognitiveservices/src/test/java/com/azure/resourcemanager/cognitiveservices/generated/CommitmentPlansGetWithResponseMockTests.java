// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager;
import com.azure.resourcemanager.cognitiveservices.models.CommitmentPlan;
import com.azure.resourcemanager.cognitiveservices.models.HostingModel;
import com.azure.resourcemanager.cognitiveservices.models.SkuTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CommitmentPlansGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"etag\":\"jcg\",\"kind\":\"itpfinzcpdl\",\"sku\":{\"name\":\"rlgjm\",\"tier\":\"Premium\",\"size\":\"vcqguefzh\",\"family\":\"p\",\"capacity\":1763207717},\"tags\":{\"ckyeclcdigpta\":\"relyujlfyoum\",\"utgjcyz\":\"brzmqxucycijoclx\",\"r\":\"zjd\",\"xjeaoqaqbzgyh\":\"jb\"},\"location\":\"wvua\",\"properties\":{\"provisioningState\":\"Accepted\",\"commitmentPlanGuid\":\"amteuliyslpkc\",\"hostingModel\":\"Web\",\"planType\":\"auxxepmyw\",\"current\":{\"tier\":\"mcqmiciijqp\",\"count\":1691281722,\"quota\":{\"quantity\":1611139504738174431,\"unit\":\"mcsmyqwixvcp\"},\"startDate\":\"kwywzwofalic\",\"endDate\":\"uoiqt\"},\"autoRenew\":false,\"next\":{\"tier\":\"sknxrwzawnvsbcf\",\"count\":1134702687,\"quota\":{\"quantity\":4559772417977252207,\"unit\":\"ycvdimw\"},\"startDate\":\"regzgyufutrwpwer\",\"endDate\":\"kzkdhmeott\"},\"last\":{\"tier\":\"yos\",\"count\":2090687916,\"quota\":{\"quantity\":322047466281494995,\"unit\":\"fv\"},\"startDate\":\"dpmiljpn\",\"endDate\":\"nudqllz\"},\"provisioningIssues\":[\"zp\",\"lxeehuxiq\",\"zlrayme\"]},\"id\":\"xls\",\"name\":\"ihmxrfdsajredn\",\"type\":\"yyshtuwgmevua\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CognitiveServicesManager manager = CognitiveServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        CommitmentPlan response = manager.commitmentPlans()
            .getWithResponse("rzmwn", "opagttmvmmag", "aqylkjztji", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("itpfinzcpdl", response.kind());
        Assertions.assertEquals("rlgjm", response.sku().name());
        Assertions.assertEquals(SkuTier.PREMIUM, response.sku().tier());
        Assertions.assertEquals("vcqguefzh", response.sku().size());
        Assertions.assertEquals("p", response.sku().family());
        Assertions.assertEquals(1763207717, response.sku().capacity());
        Assertions.assertEquals("relyujlfyoum", response.tags().get("ckyeclcdigpta"));
        Assertions.assertEquals("wvua", response.location());
        Assertions.assertEquals("amteuliyslpkc", response.properties().commitmentPlanGuid());
        Assertions.assertEquals(HostingModel.WEB, response.properties().hostingModel());
        Assertions.assertEquals("auxxepmyw", response.properties().planType());
        Assertions.assertEquals("mcqmiciijqp", response.properties().current().tier());
        Assertions.assertEquals(1691281722, response.properties().current().count());
        Assertions.assertFalse(response.properties().autoRenew());
        Assertions.assertEquals("sknxrwzawnvsbcf", response.properties().next().tier());
        Assertions.assertEquals(1134702687, response.properties().next().count());
    }
}
