// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.fluent.models.NetworkSecurityPerimeterConfigurationInner;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeter;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRule;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRuleProperties;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterConfigurationAssociationInfo;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterConfigurationProperties;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterProfileInfo;
import com.azure.resourcemanager.cognitiveservices.models.NspAccessRuleDirection;
import com.azure.resourcemanager.cognitiveservices.models.ProvisioningIssue;
import com.azure.resourcemanager.cognitiveservices.models.ProvisioningIssueProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkSecurityPerimeterConfigurationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkSecurityPerimeterConfigurationInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"zoz\",\"provisioningIssues\":[{\"name\":\"xg\",\"properties\":{\"issueType\":\"yxcdyuibhmfdnbzy\",\"severity\":\"f\",\"description\":\"cjnaeoisrvhmgor\",\"suggestedResourceIds\":[\"kiscvwmzhwpl\",\"faxvxil\",\"btgn\"],\"suggestedAccessRules\":[{},{},{},{}]}},{\"name\":\"yqxtjjfzql\",\"properties\":{\"issueType\":\"cavodggxdbe\",\"severity\":\"mieknlraria\",\"description\":\"iuagydwqfbylyrfg\",\"suggestedResourceIds\":[\"tcojocqwo\",\"fnzjvusfzldm\",\"zuxylfsbtkadpyso\"],\"suggestedAccessRules\":[{},{},{},{}]}},{\"name\":\"gkbugrjqct\",\"properties\":{\"issueType\":\"mi\",\"severity\":\"fieypefojyqdhcup\",\"description\":\"plcwkhi\",\"suggestedResourceIds\":[\"lhzdsqtzb\",\"rgnowcjhfgm\",\"ecactx\",\"wotey\"],\"suggestedAccessRules\":[{},{},{},{}]}}],\"networkSecurityPerimeter\":{\"id\":\"qovekqvgqou\",\"perimeterGuid\":\"fzmpjwyivq\",\"location\":\"f\"},\"resourceAssociation\":{\"name\":\"hrfsphuagrtti\",\"accessMode\":\"eusqczkvyklxu\"},\"profile\":{\"name\":\"affmmfblcqc\",\"accessRulesVersion\":2840399916594550699,\"accessRules\":[{\"name\":\"rtalmet\",\"properties\":{\"direction\":\"Outbound\",\"addressPrefixes\":[\"lqxihhrmooiz\",\"seypxiutcxapz\"],\"subscriptions\":[{},{},{},{}],\"networkSecurityPerimeters\":[{},{}],\"fullyQualifiedDomainNames\":[\"g\"]}},{\"name\":\"joxslhvnhla\",\"properties\":{\"direction\":\"Inbound\",\"addressPrefixes\":[\"zjcjbtr\",\"aehvvibrxjjstoq\",\"eitpkxztmo\"],\"subscriptions\":[{}],\"networkSecurityPerimeters\":[{}],\"fullyQualifiedDomainNames\":[\"dgfcwqmp\",\"maqxzhemjyh\"]}}],\"diagnosticSettingsVersion\":1949053077919246869,\"enabledLogCategories\":[\"t\",\"kozzwculkb\"]}},\"id\":\"wpfaj\",\"name\":\"jwltlwtjjgu\",\"type\":\"talhsnvkcdmxzr\"}")
            .toObject(NetworkSecurityPerimeterConfigurationInner.class);
        Assertions.assertEquals("xg", model.properties().provisioningIssues().get(0).name());
        Assertions.assertEquals("yxcdyuibhmfdnbzy",
            model.properties().provisioningIssues().get(0).properties().issueType());
        Assertions.assertEquals("f", model.properties().provisioningIssues().get(0).properties().severity());
        Assertions.assertEquals("cjnaeoisrvhmgor",
            model.properties().provisioningIssues().get(0).properties().description());
        Assertions.assertEquals("kiscvwmzhwpl",
            model.properties().provisioningIssues().get(0).properties().suggestedResourceIds().get(0));
        Assertions.assertEquals("qovekqvgqou", model.properties().networkSecurityPerimeter().id());
        Assertions.assertEquals("fzmpjwyivq", model.properties().networkSecurityPerimeter().perimeterGuid());
        Assertions.assertEquals("f", model.properties().networkSecurityPerimeter().location());
        Assertions.assertEquals("hrfsphuagrtti", model.properties().resourceAssociation().name());
        Assertions.assertEquals("eusqczkvyklxu", model.properties().resourceAssociation().accessMode());
        Assertions.assertEquals("affmmfblcqc", model.properties().profile().name());
        Assertions.assertEquals(2840399916594550699L, model.properties().profile().accessRulesVersion());
        Assertions.assertEquals("rtalmet", model.properties().profile().accessRules().get(0).name());
        Assertions.assertEquals(NspAccessRuleDirection.OUTBOUND,
            model.properties().profile().accessRules().get(0).properties().direction());
        Assertions.assertEquals("lqxihhrmooiz",
            model.properties().profile().accessRules().get(0).properties().addressPrefixes().get(0));
        Assertions.assertEquals("g",
            model.properties().profile().accessRules().get(0).properties().fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals(1949053077919246869L, model.properties().profile().diagnosticSettingsVersion());
        Assertions.assertEquals("t", model.properties().profile().enabledLogCategories().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkSecurityPerimeterConfigurationInner model
            = new NetworkSecurityPerimeterConfigurationInner()
                .withProperties(new NetworkSecurityPerimeterConfigurationProperties()
                    .withProvisioningIssues(Arrays.asList(
                        new ProvisioningIssue()
                            .withName("xg")
                            .withProperties(new ProvisioningIssueProperties()
                                .withIssueType("yxcdyuibhmfdnbzy")
                                .withSeverity("f")
                                .withDescription("cjnaeoisrvhmgor")
                                .withSuggestedResourceIds(Arrays.asList("kiscvwmzhwpl", "faxvxil", "btgn"))
                                .withSuggestedAccessRules(Arrays.asList(
                                    new NetworkSecurityPerimeterAccessRule(), new NetworkSecurityPerimeterAccessRule(),
                                    new NetworkSecurityPerimeterAccessRule(),
                                    new NetworkSecurityPerimeterAccessRule()))),
                        new ProvisioningIssue().withName("yqxtjjfzql")
                            .withProperties(new ProvisioningIssueProperties().withIssueType("cavodggxdbe")
                                .withSeverity("mieknlraria")
                                .withDescription("iuagydwqfbylyrfg")
                                .withSuggestedResourceIds(
                                    Arrays.asList("tcojocqwo", "fnzjvusfzldm", "zuxylfsbtkadpyso"))
                                .withSuggestedAccessRules(Arrays.asList(new NetworkSecurityPerimeterAccessRule(),
                                    new NetworkSecurityPerimeterAccessRule(), new NetworkSecurityPerimeterAccessRule(),
                                    new NetworkSecurityPerimeterAccessRule()))),
                        new ProvisioningIssue().withName("gkbugrjqct")
                            .withProperties(new ProvisioningIssueProperties().withIssueType("mi")
                                .withSeverity("fieypefojyqdhcup")
                                .withDescription("plcwkhi")
                                .withSuggestedResourceIds(Arrays.asList("lhzdsqtzb", "rgnowcjhfgm", "ecactx", "wotey"))
                                .withSuggestedAccessRules(Arrays.asList(new NetworkSecurityPerimeterAccessRule(),
                                    new NetworkSecurityPerimeterAccessRule(), new NetworkSecurityPerimeterAccessRule(),
                                    new NetworkSecurityPerimeterAccessRule())))))
                    .withNetworkSecurityPerimeter(new NetworkSecurityPerimeter().withId("qovekqvgqou")
                        .withPerimeterGuid("fzmpjwyivq")
                        .withLocation("f"))
                    .withResourceAssociation(
                        new NetworkSecurityPerimeterConfigurationAssociationInfo().withName("hrfsphuagrtti")
                            .withAccessMode("eusqczkvyklxu"))
                    .withProfile(new NetworkSecurityPerimeterProfileInfo().withName("affmmfblcqc")
                        .withAccessRulesVersion(2840399916594550699L)
                        .withAccessRules(Arrays.asList(
                            new NetworkSecurityPerimeterAccessRule().withName("rtalmet")
                                .withProperties(new NetworkSecurityPerimeterAccessRuleProperties()
                                    .withDirection(NspAccessRuleDirection.OUTBOUND)
                                    .withAddressPrefixes(Arrays.asList("lqxihhrmooiz", "seypxiutcxapz"))
                                    .withSubscriptions(Arrays.asList(
                                        new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem(),
                                        new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem(),
                                        new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem(),
                                        new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem()))
                                    .withNetworkSecurityPerimeters(
                                        Arrays.asList(new NetworkSecurityPerimeter(), new NetworkSecurityPerimeter()))
                                    .withFullyQualifiedDomainNames(Arrays.asList("g"))),
                            new NetworkSecurityPerimeterAccessRule().withName("joxslhvnhla")
                                .withProperties(new NetworkSecurityPerimeterAccessRuleProperties()
                                    .withDirection(NspAccessRuleDirection.INBOUND)
                                    .withAddressPrefixes(Arrays.asList("zjcjbtr", "aehvvibrxjjstoq", "eitpkxztmo"))
                                    .withSubscriptions(Arrays
                                        .asList(new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem()))
                                    .withNetworkSecurityPerimeters(Arrays.asList(new NetworkSecurityPerimeter()))
                                    .withFullyQualifiedDomainNames(Arrays.asList("dgfcwqmp", "maqxzhemjyh")))))
                        .withDiagnosticSettingsVersion(1949053077919246869L)
                        .withEnabledLogCategories(Arrays.asList("t", "kozzwculkb"))));
        model = BinaryData.fromObject(model).toObject(NetworkSecurityPerimeterConfigurationInner.class);
        Assertions.assertEquals("xg", model.properties().provisioningIssues().get(0).name());
        Assertions.assertEquals("yxcdyuibhmfdnbzy",
            model.properties().provisioningIssues().get(0).properties().issueType());
        Assertions.assertEquals("f", model.properties().provisioningIssues().get(0).properties().severity());
        Assertions.assertEquals("cjnaeoisrvhmgor",
            model.properties().provisioningIssues().get(0).properties().description());
        Assertions.assertEquals("kiscvwmzhwpl",
            model.properties().provisioningIssues().get(0).properties().suggestedResourceIds().get(0));
        Assertions.assertEquals("qovekqvgqou", model.properties().networkSecurityPerimeter().id());
        Assertions.assertEquals("fzmpjwyivq", model.properties().networkSecurityPerimeter().perimeterGuid());
        Assertions.assertEquals("f", model.properties().networkSecurityPerimeter().location());
        Assertions.assertEquals("hrfsphuagrtti", model.properties().resourceAssociation().name());
        Assertions.assertEquals("eusqczkvyklxu", model.properties().resourceAssociation().accessMode());
        Assertions.assertEquals("affmmfblcqc", model.properties().profile().name());
        Assertions.assertEquals(2840399916594550699L, model.properties().profile().accessRulesVersion());
        Assertions.assertEquals("rtalmet", model.properties().profile().accessRules().get(0).name());
        Assertions.assertEquals(NspAccessRuleDirection.OUTBOUND,
            model.properties().profile().accessRules().get(0).properties().direction());
        Assertions.assertEquals("lqxihhrmooiz",
            model.properties().profile().accessRules().get(0).properties().addressPrefixes().get(0));
        Assertions.assertEquals("g",
            model.properties().profile().accessRules().get(0).properties().fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals(1949053077919246869L, model.properties().profile().diagnosticSettingsVersion());
        Assertions.assertEquals("t", model.properties().profile().enabledLogCategories().get(0));
    }
}
