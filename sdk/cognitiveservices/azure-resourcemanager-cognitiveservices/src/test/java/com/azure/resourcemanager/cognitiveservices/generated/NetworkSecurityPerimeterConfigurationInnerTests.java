// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.fluent.models.NetworkSecurityPerimeterConfigurationInner;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeter;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRule;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRuleProperties;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterConfigurationAssociationInfo;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterConfigurationProperties;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterProfileInfo;
import com.azure.resourcemanager.cognitiveservices.models.NspAccessRuleDirection;
import com.azure.resourcemanager.cognitiveservices.models.ProvisioningIssue;
import com.azure.resourcemanager.cognitiveservices.models.ProvisioningIssueProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkSecurityPerimeterConfigurationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkSecurityPerimeterConfigurationInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"omylwea\",\"provisioningIssues\":[{\"name\":\"sethwwn\",\"properties\":{\"issueType\":\"l\",\"severity\":\"swpchwahfbousn\",\"description\":\"pgfewetwlyx\",\"suggestedResourceIds\":[\"xykxhdj\"],\"suggestedAccessRules\":[{},{}]}},{\"name\":\"mbcxfhbcp\",\"properties\":{\"issueType\":\"vxcjzhqizxfpxtgq\",\"severity\":\"javftjuhdqa\",\"description\":\"mtggu\",\"suggestedResourceIds\":[\"jrajcivm\"],\"suggestedAccessRules\":[{}]}},{\"name\":\"cf\",\"properties\":{\"issueType\":\"xgkn\",\"severity\":\"vyi\",\"description\":\"qodfvp\",\"suggestedResourceIds\":[\"oxgsgbpfgzdjtx\",\"zflbqvg\",\"qvlgafcqusrdvetn\"],\"suggestedAccessRules\":[{},{},{}]}}],\"networkSecurityPerimeter\":{\"id\":\"tnwlduycv\",\"perimeterGuid\":\"hyrmewipmvekdx\",\"location\":\"uqgsj\"},\"resourceAssociation\":{\"name\":\"n\",\"accessMode\":\"gketwzhhzjhf\"},\"profile\":{\"name\":\"vvmu\",\"accessRulesVersion\":9183951659456928206,\"accessRules\":[{\"name\":\"qsxvmhf\",\"properties\":{\"direction\":\"Outbound\",\"addressPrefixes\":[\"hsasbhu\",\"ypoh\"],\"subscriptions\":[{},{},{}],\"networkSecurityPerimeters\":[{},{},{}],\"fullyQualifiedDomainNames\":[\"nsqyrpfoobrltt\",\"msjnygqdnfw\",\"zdzgtilaxhnfhqly\"]}},{\"name\":\"jouw\",\"properties\":{\"direction\":\"Outbound\",\"addressPrefixes\":[\"zunbixx\",\"ti\",\"vcpwpgclrc\",\"vtsoxf\"],\"subscriptions\":[{},{},{}],\"networkSecurityPerimeters\":[{},{},{},{}],\"fullyQualifiedDomainNames\":[\"yyefrpmpdnqqs\"]}}],\"diagnosticSettingsVersion\":9156957823967073009,\"enabledLogCategories\":[\"vmm\",\"npqfrtqlkzmeg\"]}},\"id\":\"itgvkx\",\"name\":\"zyqdrfegcealzx\",\"type\":\"hcans\"}")
            .toObject(NetworkSecurityPerimeterConfigurationInner.class);
        Assertions.assertEquals("sethwwn", model.properties().provisioningIssues().get(0).name());
        Assertions.assertEquals("l", model.properties().provisioningIssues().get(0).properties().issueType());
        Assertions.assertEquals("swpchwahfbousn",
            model.properties().provisioningIssues().get(0).properties().severity());
        Assertions.assertEquals("pgfewetwlyx",
            model.properties().provisioningIssues().get(0).properties().description());
        Assertions.assertEquals("xykxhdj",
            model.properties().provisioningIssues().get(0).properties().suggestedResourceIds().get(0));
        Assertions.assertEquals("tnwlduycv", model.properties().networkSecurityPerimeter().id());
        Assertions.assertEquals("hyrmewipmvekdx", model.properties().networkSecurityPerimeter().perimeterGuid());
        Assertions.assertEquals("uqgsj", model.properties().networkSecurityPerimeter().location());
        Assertions.assertEquals("n", model.properties().resourceAssociation().name());
        Assertions.assertEquals("gketwzhhzjhf", model.properties().resourceAssociation().accessMode());
        Assertions.assertEquals("vvmu", model.properties().profile().name());
        Assertions.assertEquals(9183951659456928206L, model.properties().profile().accessRulesVersion());
        Assertions.assertEquals("qsxvmhf", model.properties().profile().accessRules().get(0).name());
        Assertions.assertEquals(NspAccessRuleDirection.OUTBOUND,
            model.properties().profile().accessRules().get(0).properties().direction());
        Assertions.assertEquals("hsasbhu",
            model.properties().profile().accessRules().get(0).properties().addressPrefixes().get(0));
        Assertions.assertEquals("nsqyrpfoobrltt",
            model.properties().profile().accessRules().get(0).properties().fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals(9156957823967073009L, model.properties().profile().diagnosticSettingsVersion());
        Assertions.assertEquals("vmm", model.properties().profile().enabledLogCategories().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkSecurityPerimeterConfigurationInner model
            = new NetworkSecurityPerimeterConfigurationInner()
                .withProperties(new NetworkSecurityPerimeterConfigurationProperties()
                    .withProvisioningIssues(Arrays.asList(
                        new ProvisioningIssue()
                            .withName("sethwwn")
                            .withProperties(new ProvisioningIssueProperties().withIssueType("l")
                                .withSeverity("swpchwahfbousn")
                                .withDescription("pgfewetwlyx")
                                .withSuggestedResourceIds(Arrays.asList("xykxhdj"))
                                .withSuggestedAccessRules(Arrays.asList(new NetworkSecurityPerimeterAccessRule(),
                                    new NetworkSecurityPerimeterAccessRule()))),
                        new ProvisioningIssue().withName("mbcxfhbcp")
                            .withProperties(new ProvisioningIssueProperties()
                                .withIssueType("vxcjzhqizxfpxtgq")
                                .withSeverity("javftjuhdqa")
                                .withDescription("mtggu")
                                .withSuggestedResourceIds(Arrays.asList("jrajcivm"))
                                .withSuggestedAccessRules(Arrays.asList(new NetworkSecurityPerimeterAccessRule()))),
                        new ProvisioningIssue().withName("cf")
                            .withProperties(new ProvisioningIssueProperties().withIssueType("xgkn")
                                .withSeverity("vyi")
                                .withDescription("qodfvp")
                                .withSuggestedResourceIds(
                                    Arrays.asList("oxgsgbpfgzdjtx", "zflbqvg", "qvlgafcqusrdvetn"))
                                .withSuggestedAccessRules(Arrays.asList(new NetworkSecurityPerimeterAccessRule(),
                                    new NetworkSecurityPerimeterAccessRule(),
                                    new NetworkSecurityPerimeterAccessRule())))))
                    .withNetworkSecurityPerimeter(new NetworkSecurityPerimeter().withId("tnwlduycv")
                        .withPerimeterGuid("hyrmewipmvekdx")
                        .withLocation("uqgsj"))
                    .withResourceAssociation(new NetworkSecurityPerimeterConfigurationAssociationInfo().withName("n")
                        .withAccessMode("gketwzhhzjhf"))
                    .withProfile(
                        new NetworkSecurityPerimeterProfileInfo().withName("vvmu")
                            .withAccessRulesVersion(9183951659456928206L)
                            .withAccessRules(Arrays.asList(
                                new NetworkSecurityPerimeterAccessRule().withName("qsxvmhf")
                                    .withProperties(new NetworkSecurityPerimeterAccessRuleProperties()
                                        .withDirection(NspAccessRuleDirection.OUTBOUND)
                                        .withAddressPrefixes(Arrays.asList("hsasbhu", "ypoh"))
                                        .withSubscriptions(Arrays.asList(
                                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem(),
                                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem(),
                                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem()))
                                        .withNetworkSecurityPerimeters(Arrays.asList(new NetworkSecurityPerimeter(),
                                            new NetworkSecurityPerimeter(), new NetworkSecurityPerimeter()))
                                        .withFullyQualifiedDomainNames(
                                            Arrays.asList("nsqyrpfoobrltt", "msjnygqdnfw", "zdzgtilaxhnfhqly"))),
                                new NetworkSecurityPerimeterAccessRule().withName("jouw")
                                    .withProperties(new NetworkSecurityPerimeterAccessRuleProperties()
                                        .withDirection(NspAccessRuleDirection.OUTBOUND)
                                        .withAddressPrefixes(Arrays.asList("zunbixx", "ti", "vcpwpgclrc", "vtsoxf"))
                                        .withSubscriptions(Arrays.asList(
                                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem(),
                                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem(),
                                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem()))
                                        .withNetworkSecurityPerimeters(Arrays.asList(new NetworkSecurityPerimeter(),
                                            new NetworkSecurityPerimeter(), new NetworkSecurityPerimeter(),
                                            new NetworkSecurityPerimeter()))
                                        .withFullyQualifiedDomainNames(Arrays.asList("yyefrpmpdnqqs")))))
                            .withDiagnosticSettingsVersion(9156957823967073009L)
                            .withEnabledLogCategories(Arrays.asList("vmm", "npqfrtqlkzmeg"))));
        model = BinaryData.fromObject(model).toObject(NetworkSecurityPerimeterConfigurationInner.class);
        Assertions.assertEquals("sethwwn", model.properties().provisioningIssues().get(0).name());
        Assertions.assertEquals("l", model.properties().provisioningIssues().get(0).properties().issueType());
        Assertions.assertEquals("swpchwahfbousn",
            model.properties().provisioningIssues().get(0).properties().severity());
        Assertions.assertEquals("pgfewetwlyx",
            model.properties().provisioningIssues().get(0).properties().description());
        Assertions.assertEquals("xykxhdj",
            model.properties().provisioningIssues().get(0).properties().suggestedResourceIds().get(0));
        Assertions.assertEquals("tnwlduycv", model.properties().networkSecurityPerimeter().id());
        Assertions.assertEquals("hyrmewipmvekdx", model.properties().networkSecurityPerimeter().perimeterGuid());
        Assertions.assertEquals("uqgsj", model.properties().networkSecurityPerimeter().location());
        Assertions.assertEquals("n", model.properties().resourceAssociation().name());
        Assertions.assertEquals("gketwzhhzjhf", model.properties().resourceAssociation().accessMode());
        Assertions.assertEquals("vvmu", model.properties().profile().name());
        Assertions.assertEquals(9183951659456928206L, model.properties().profile().accessRulesVersion());
        Assertions.assertEquals("qsxvmhf", model.properties().profile().accessRules().get(0).name());
        Assertions.assertEquals(NspAccessRuleDirection.OUTBOUND,
            model.properties().profile().accessRules().get(0).properties().direction());
        Assertions.assertEquals("hsasbhu",
            model.properties().profile().accessRules().get(0).properties().addressPrefixes().get(0));
        Assertions.assertEquals("nsqyrpfoobrltt",
            model.properties().profile().accessRules().get(0).properties().fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals(9156957823967073009L, model.properties().profile().diagnosticSettingsVersion());
        Assertions.assertEquals("vmm", model.properties().profile().enabledLogCategories().get(0));
    }
}
