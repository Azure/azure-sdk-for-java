// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.models.CommitmentPlanListResult;
import org.junit.jupiter.api.Assertions;

public final class CommitmentPlanListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CommitmentPlanListResult model = BinaryData.fromString(
            "{\"nextLink\":\"sdjpvkvp\",\"value\":[{\"etag\":\"zbzkdvncjabudurg\",\"kind\":\"kmokz\",\"sku\":{\"name\":\"jk\",\"tier\":\"Enterprise\",\"size\":\"mouwqlgzrfzeey\",\"family\":\"izikayuhq\",\"capacity\":2014142159},\"tags\":{\"ldgmfpgvmpip\":\"ybbqwrv\",\"x\":\"slthaq\"},\"location\":\"mwutwbdsre\",\"properties\":{\"provisioningState\":\"Succeeded\",\"commitmentPlanGuid\":\"neuyow\",\"hostingModel\":\"Web\",\"planType\":\"ytisibir\",\"current\":{\"tier\":\"ikpzimejza\",\"count\":108512766,\"quota\":{\"quantity\":5666619485240381449,\"unit\":\"rmbzo\"},\"startDate\":\"kixrj\",\"endDate\":\"irgzp\"},\"autoRenew\":false,\"next\":{\"tier\":\"szrnwo\",\"count\":1723984044,\"quota\":{\"quantity\":2655439268574784215,\"unit\":\"jylwbtlhflsj\"},\"startDate\":\"hszfjvfb\",\"endDate\":\"feljagrqm\"},\"last\":{\"tier\":\"dvriiiojnal\",\"count\":524245347,\"quota\":{\"quantity\":3278506032102071495,\"unit\":\"ex\"},\"startDate\":\"wueluqhhahhxv\",\"endDate\":\"mzkwpjg\"},\"provisioningIssues\":[\"pughftqsxh\",\"xujxuknd\",\"digrjguufzdmsyqt\"]},\"id\":\"ihwhbotzingamvpp\",\"name\":\"o\",\"type\":\"zqzudph\"},{\"etag\":\"vdkfwynwcvtbvk\",\"kind\":\"hmtnvy\",\"sku\":{\"name\":\"atkzwpcnpw\",\"tier\":\"Basic\",\"size\":\"esgvvsccyaj\",\"family\":\"qfhwyg\",\"capacity\":376601626},\"tags\":{\"emdwzrmuhapfc\":\"kfxu\"},\"location\":\"psqxq\",\"properties\":{\"provisioningState\":\"Moving\",\"commitmentPlanGuid\":\"oymgccelvezr\",\"hostingModel\":\"DisconnectedContainer\",\"planType\":\"mfe\",\"current\":{\"tier\":\"rqwky\",\"count\":359384916,\"quota\":{\"quantity\":2163259137534860371,\"unit\":\"edkowepbqpcrfk\"},\"startDate\":\"ccsnjvcdwxlpq\",\"endDate\":\"ftnkhtj\"},\"autoRenew\":false,\"next\":{\"tier\":\"wfqatmtd\",\"count\":866000446,\"quota\":{\"quantity\":5714337485006383517,\"unit\":\"ikdgszywkbir\"},\"startDate\":\"uzhlhkjoqrv\",\"endDate\":\"aatjinrvgoupmfi\"},\"last\":{\"tier\":\"ggjioolvr\",\"count\":1483667739,\"quota\":{\"quantity\":4652937384056066741,\"unit\":\"llqwjygvjayvblmh\"},\"startDate\":\"zuhbxvvyhgsopb\",\"endDate\":\"qufegxuvwzfbn\"},\"provisioningIssues\":[\"ctlpdngitvgb\",\"hrixkwmy\",\"jejveg\"]},\"id\":\"hbpnaixexccbd\",\"name\":\"eaxhcexdrrvqahqk\",\"type\":\"htpwij\"},{\"etag\":\"jsvfycxzbfvoowv\",\"kind\":\"mtg\",\"sku\":{\"name\":\"ppyostronzmyhgf\",\"tier\":\"Basic\",\"size\":\"xkmcwaekrrjre\",\"family\":\"xt\",\"capacity\":747215260},\"tags\":{\"pvuzlmv\":\"jglikkxwslolb\",\"gplcrpwjxeznoigb\":\"elfk\"},\"location\":\"jwmwkpnbs\",\"properties\":{\"provisioningState\":\"Failed\",\"commitmentPlanGuid\":\"oqkag\",\"hostingModel\":\"ConnectedContainer\",\"planType\":\"ttaugzxnfaazp\",\"current\":{\"tier\":\"n\",\"count\":1270256319,\"quota\":{\"quantity\":818520490272243455,\"unit\":\"wuenvr\"},\"startDate\":\"yo\",\"endDate\":\"ibreb\"},\"autoRenew\":true,\"next\":{\"tier\":\"j\",\"count\":1330578772,\"quota\":{\"quantity\":7129303737344697098,\"unit\":\"tezlwff\"},\"startDate\":\"akpjpqqmtedlt\",\"endDate\":\"jihy\"},\"last\":{\"tier\":\"phvwauyqncygu\",\"count\":2143760681,\"quota\":{\"quantity\":2524662615582469653,\"unit\":\"cwxqu\"},\"startDate\":\"vzhfstotxhoj\",\"endDate\":\"bypel\"},\"provisioningIssues\":[\"vhixbjxy\",\"w\",\"yl\"]},\"id\":\"coolsttpkiwkkb\",\"name\":\"ujrywvtyl\",\"type\":\"fpncurdo\"}]}")
            .toObject(CommitmentPlanListResult.class);
        Assertions.assertEquals("sdjpvkvp", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CommitmentPlanListResult model = new CommitmentPlanListResult().withNextLink("sdjpvkvp");
        model = BinaryData.fromObject(model).toObject(CommitmentPlanListResult.class);
        Assertions.assertEquals("sdjpvkvp", model.nextLink());
    }
}
