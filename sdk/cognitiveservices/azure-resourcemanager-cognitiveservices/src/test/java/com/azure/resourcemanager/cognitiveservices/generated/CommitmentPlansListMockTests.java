// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager;
import com.azure.resourcemanager.cognitiveservices.models.CommitmentPlan;
import com.azure.resourcemanager.cognitiveservices.models.HostingModel;
import com.azure.resourcemanager.cognitiveservices.models.SkuTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CommitmentPlansListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"etag\":\"gqztwhghmupgx\",\"kind\":\"tcdxabbujftaben\",\"sku\":{\"name\":\"klqpx\",\"tier\":\"Enterprise\",\"size\":\"feddwwnlza\",\"family\":\"xud\",\"capacity\":1909698338},\"tags\":{\"gpbemeluclvdjju\":\"okrtalvnb\",\"ahhxhqfaqnvzoqg\":\"yrdnqod\",\"ejdtxptl\":\"ipemchgavscz\"},\"location\":\"wzhomewjjstl\",\"properties\":{\"provisioningState\":\"Failed\",\"commitmentPlanGuid\":\"wmoaiancznvodrrs\",\"hostingModel\":\"DisconnectedContainer\",\"planType\":\"ydkxr\",\"current\":{\"tier\":\"bxiwkgfbqljn\",\"count\":1056190404,\"quota\":{\"quantity\":93268107041015915,\"unit\":\"okulehurqlrqf\"},\"startDate\":\"weyurkphyjd\",\"endDate\":\"av\"},\"autoRenew\":true,\"next\":{\"tier\":\"rxmrgchbapx\",\"count\":257643221,\"quota\":{\"quantity\":316638403801617867,\"unit\":\"ajb\"},\"startDate\":\"cgduusio\",\"endDate\":\"blevpmcluj\"},\"last\":{\"tier\":\"yxlzgs\",\"count\":733092764,\"quota\":{\"quantity\":2104792511194971954,\"unit\":\"fhbzffovwmbjlzq\"},\"startDate\":\"zpgvdwnapfd\",\"endDate\":\"owftptnuwjtks\"},\"provisioningIssues\":[\"cgqyhleseyq\",\"hvyeldotj\",\"dkwisw\",\"kukjtasb\"]},\"id\":\"wispkxk\",\"name\":\"txfkndlqvt\",\"type\":\"knvgmmbugtywat\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CognitiveServicesManager manager = CognitiveServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<CommitmentPlan> response
            = manager.commitmentPlans().list("v", "kxrerlniylylyfwx", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("tcdxabbujftaben", response.iterator().next().kind());
        Assertions.assertEquals("klqpx", response.iterator().next().sku().name());
        Assertions.assertEquals(SkuTier.ENTERPRISE, response.iterator().next().sku().tier());
        Assertions.assertEquals("feddwwnlza", response.iterator().next().sku().size());
        Assertions.assertEquals("xud", response.iterator().next().sku().family());
        Assertions.assertEquals(1909698338, response.iterator().next().sku().capacity());
        Assertions.assertEquals("okrtalvnb", response.iterator().next().tags().get("gpbemeluclvdjju"));
        Assertions.assertEquals("wzhomewjjstl", response.iterator().next().location());
        Assertions.assertEquals("wmoaiancznvodrrs", response.iterator().next().properties().commitmentPlanGuid());
        Assertions.assertEquals(HostingModel.DISCONNECTED_CONTAINER,
            response.iterator().next().properties().hostingModel());
        Assertions.assertEquals("ydkxr", response.iterator().next().properties().planType());
        Assertions.assertEquals("bxiwkgfbqljn", response.iterator().next().properties().current().tier());
        Assertions.assertEquals(1056190404, response.iterator().next().properties().current().count());
        Assertions.assertEquals(true, response.iterator().next().properties().autoRenew());
        Assertions.assertEquals("rxmrgchbapx", response.iterator().next().properties().next().tier());
        Assertions.assertEquals(257643221, response.iterator().next().properties().next().count());
    }
}
