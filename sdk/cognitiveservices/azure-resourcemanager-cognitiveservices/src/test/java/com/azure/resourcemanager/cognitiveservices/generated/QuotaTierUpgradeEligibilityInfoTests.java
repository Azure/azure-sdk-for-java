// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.models.QuotaTierUpgradeEligibilityInfo;
import com.azure.resourcemanager.cognitiveservices.models.UpgradeAvailabilityStatus;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class QuotaTierUpgradeEligibilityInfoTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        QuotaTierUpgradeEligibilityInfo model = BinaryData.fromString(
            "{\"nextTierName\":\"x\",\"upgradeAvailabilityStatus\":\"NotAvailable\",\"upgradeApplicableDate\":\"2021-01-20T06:24:16Z\",\"upgradeUnavailabilityReason\":\"ptsoqfyiase\"}")
            .toObject(QuotaTierUpgradeEligibilityInfo.class);
        Assertions.assertEquals("x", model.nextTierName());
        Assertions.assertEquals(UpgradeAvailabilityStatus.NOT_AVAILABLE, model.upgradeAvailabilityStatus());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-20T06:24:16Z"), model.upgradeApplicableDate());
        Assertions.assertEquals("ptsoqfyiase", model.upgradeUnavailabilityReason());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        QuotaTierUpgradeEligibilityInfo model = new QuotaTierUpgradeEligibilityInfo().withNextTierName("x")
            .withUpgradeAvailabilityStatus(UpgradeAvailabilityStatus.NOT_AVAILABLE)
            .withUpgradeApplicableDate(OffsetDateTime.parse("2021-01-20T06:24:16Z"))
            .withUpgradeUnavailabilityReason("ptsoqfyiase");
        model = BinaryData.fromObject(model).toObject(QuotaTierUpgradeEligibilityInfo.class);
        Assertions.assertEquals("x", model.nextTierName());
        Assertions.assertEquals(UpgradeAvailabilityStatus.NOT_AVAILABLE, model.upgradeAvailabilityStatus());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-20T06:24:16Z"), model.upgradeApplicableDate());
        Assertions.assertEquals("ptsoqfyiase", model.upgradeUnavailabilityReason());
    }
}
