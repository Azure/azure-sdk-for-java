// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.models.MultiRegionSettings;
import com.azure.resourcemanager.cognitiveservices.models.RegionSetting;
import com.azure.resourcemanager.cognitiveservices.models.RoutingMethods;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MultiRegionSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MultiRegionSettings model = BinaryData.fromString(
            "{\"routingMethod\":\"Weighted\",\"regions\":[{\"name\":\"yqkgfg\",\"value\":77.32275,\"customsubdomain\":\"dgak\"}]}")
            .toObject(MultiRegionSettings.class);
        Assertions.assertEquals(RoutingMethods.WEIGHTED, model.routingMethod());
        Assertions.assertEquals("yqkgfg", model.regions().get(0).name());
        Assertions.assertEquals(77.32275F, model.regions().get(0).value());
        Assertions.assertEquals("dgak", model.regions().get(0).customsubdomain());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MultiRegionSettings model = new MultiRegionSettings().withRoutingMethod(RoutingMethods.WEIGHTED)
            .withRegions(
                Arrays.asList(new RegionSetting().withName("yqkgfg").withValue(77.32275F).withCustomsubdomain("dgak")));
        model = BinaryData.fromObject(model).toObject(MultiRegionSettings.class);
        Assertions.assertEquals(RoutingMethods.WEIGHTED, model.routingMethod());
        Assertions.assertEquals("yqkgfg", model.regions().get(0).name());
        Assertions.assertEquals(77.32275F, model.regions().get(0).value());
        Assertions.assertEquals("dgak", model.regions().get(0).customsubdomain());
    }
}
