// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.fluent.models.ProjectInner;
import com.azure.resourcemanager.cognitiveservices.models.Identity;
import com.azure.resourcemanager.cognitiveservices.models.ProjectProperties;
import com.azure.resourcemanager.cognitiveservices.models.ResourceIdentityType;
import com.azure.resourcemanager.cognitiveservices.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ProjectInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProjectInner model = BinaryData.fromString(
            "{\"identity\":{\"type\":\"SystemAssigned\",\"tenantId\":\"dohzjq\",\"principalId\":\"ucoig\",\"userAssignedIdentities\":{\"dlfgtdysnaq\":{\"principalId\":\"cnwfepbnwgfmxjg\",\"clientId\":\"bjb\"},\"antkwcegyamlbns\":{\"principalId\":\"lqbctqhamzjrw\",\"clientId\":\"qzeqyjleziunjxdf\"}}},\"tags\":{\"m\":\"cjjvpilguooqja\"},\"location\":\"tg\",\"properties\":{\"provisioningState\":\"Canceled\",\"displayName\":\"kjbsah\",\"description\":\"dt\",\"endpoints\":{\"cslmotoebnfxo\":\"lq\",\"razftxejwabmdujt\":\"vcjkgd\",\"m\":\"vcopex\"},\"isDefault\":false},\"etag\":\"u\",\"id\":\"lkyqltqsrog\",\"name\":\"uwkffdjktsysid\",\"type\":\"vclglxnfuij\"}")
            .toObject(ProjectInner.class);
        Assertions.assertEquals(ResourceIdentityType.SYSTEM_ASSIGNED, model.identity().type());
        Assertions.assertEquals("cjjvpilguooqja", model.tags().get("m"));
        Assertions.assertEquals("tg", model.location());
        Assertions.assertEquals("kjbsah", model.properties().displayName());
        Assertions.assertEquals("dt", model.properties().description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProjectInner model
            = new ProjectInner()
                .withIdentity(new Identity().withType(ResourceIdentityType.SYSTEM_ASSIGNED)
                    .withUserAssignedIdentities(mapOf("dlfgtdysnaq", new UserAssignedIdentity(), "antkwcegyamlbns",
                        new UserAssignedIdentity())))
                .withTags(mapOf("m", "cjjvpilguooqja"))
                .withLocation("tg")
                .withProperties(new ProjectProperties().withDisplayName("kjbsah").withDescription("dt"));
        model = BinaryData.fromObject(model).toObject(ProjectInner.class);
        Assertions.assertEquals(ResourceIdentityType.SYSTEM_ASSIGNED, model.identity().type());
        Assertions.assertEquals("cjjvpilguooqja", model.tags().get("m"));
        Assertions.assertEquals("tg", model.location());
        Assertions.assertEquals("kjbsah", model.properties().displayName());
        Assertions.assertEquals("dt", model.properties().description());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
