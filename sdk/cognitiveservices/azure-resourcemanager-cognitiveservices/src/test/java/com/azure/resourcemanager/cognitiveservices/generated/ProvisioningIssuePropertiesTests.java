// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeter;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRule;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRuleProperties;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem;
import com.azure.resourcemanager.cognitiveservices.models.NspAccessRuleDirection;
import com.azure.resourcemanager.cognitiveservices.models.ProvisioningIssueProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ProvisioningIssuePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProvisioningIssueProperties model = BinaryData.fromString(
            "{\"issueType\":\"wncvjtszcofiz\",\"severity\":\"tdhgbjkvrelj\",\"description\":\"murvzm\",\"suggestedResourceIds\":[\"uanashcxlp\",\"jerbdkelvidizozs\",\"bccxjmonfdgn\"],\"suggestedAccessRules\":[{\"name\":\"puuw\",\"properties\":{\"direction\":\"Inbound\",\"addressPrefixes\":[\"jctzenkei\",\"zzhmkd\",\"svflyhbxcudch\"],\"subscriptions\":[{\"id\":\"boldforobwj\"},{\"id\":\"izbfhfovvacq\"},{\"id\":\"tuodxeszabbelaw\"}],\"networkSecurityPerimeters\":[{\"id\":\"slzkwrrwoycqu\",\"perimeterGuid\":\"yhahnomdrkyw\",\"location\":\"psvfuurutlwexxwl\"}],\"fullyQualifiedDomainNames\":[\"iexzsrzpge\",\"q\",\"yb\",\"wwpgdakchzyvlixq\"]}},{\"name\":\"kcxk\",\"properties\":{\"direction\":\"Inbound\",\"addressPrefixes\":[\"ysux\"],\"subscriptions\":[{\"id\":\"ntvlwijpsttexo\"},{\"id\":\"pwcyyufmhr\"}],\"networkSecurityPerimeters\":[{\"id\":\"wmqs\",\"perimeterGuid\":\"cdqzhlctddu\",\"location\":\"ndy\"},{\"id\":\"chrqb\",\"perimeterGuid\":\"jrcg\",\"location\":\"ydcwboxjumv\"}],\"fullyQualifiedDomainNames\":[\"lihrraiouaubr\",\"tloqxfuojrn\"]}},{\"name\":\"flrzpas\",\"properties\":{\"direction\":\"Inbound\",\"addressPrefixes\":[\"mzdlyjdfqwmkyo\",\"ufdvruz\"],\"subscriptions\":[{\"id\":\"j\"},{\"id\":\"ctfnmdxotng\"},{\"id\":\"gugey\"}],\"networkSecurityPerimeters\":[{\"id\":\"rkyui\",\"perimeterGuid\":\"bsnmfpph\",\"location\":\"eevy\"},{\"id\":\"hsgz\",\"perimeterGuid\":\"zbgomfgbeg\",\"location\":\"gleohi\"}],\"fullyQualifiedDomainNames\":[\"nlu\",\"nkrrf\",\"eeebtijvacv\"]}}]}")
            .toObject(ProvisioningIssueProperties.class);
        Assertions.assertEquals("wncvjtszcofiz", model.issueType());
        Assertions.assertEquals("tdhgbjkvrelj", model.severity());
        Assertions.assertEquals("murvzm", model.description());
        Assertions.assertEquals("uanashcxlp", model.suggestedResourceIds().get(0));
        Assertions.assertEquals("puuw", model.suggestedAccessRules().get(0).name());
        Assertions.assertEquals(NspAccessRuleDirection.INBOUND,
            model.suggestedAccessRules().get(0).properties().direction());
        Assertions.assertEquals("jctzenkei", model.suggestedAccessRules().get(0).properties().addressPrefixes().get(0));
        Assertions.assertEquals("boldforobwj",
            model.suggestedAccessRules().get(0).properties().subscriptions().get(0).id());
        Assertions.assertEquals("slzkwrrwoycqu",
            model.suggestedAccessRules().get(0).properties().networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals("yhahnomdrkyw",
            model.suggestedAccessRules().get(0).properties().networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("psvfuurutlwexxwl",
            model.suggestedAccessRules().get(0).properties().networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("iexzsrzpge",
            model.suggestedAccessRules().get(0).properties().fullyQualifiedDomainNames().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProvisioningIssueProperties model = new ProvisioningIssueProperties().withIssueType("wncvjtszcofiz")
            .withSeverity("tdhgbjkvrelj")
            .withDescription("murvzm")
            .withSuggestedResourceIds(Arrays.asList("uanashcxlp", "jerbdkelvidizozs", "bccxjmonfdgn"))
            .withSuggestedAccessRules(Arrays.asList(
                new NetworkSecurityPerimeterAccessRule().withName("puuw")
                    .withProperties(new NetworkSecurityPerimeterAccessRuleProperties()
                        .withDirection(NspAccessRuleDirection.INBOUND)
                        .withAddressPrefixes(Arrays.asList("jctzenkei", "zzhmkd", "svflyhbxcudch"))
                        .withSubscriptions(Arrays.asList(
                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("boldforobwj"),
                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("izbfhfovvacq"),
                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem()
                                .withId("tuodxeszabbelaw")))
                        .withNetworkSecurityPerimeters(
                            Arrays.asList(new NetworkSecurityPerimeter().withId("slzkwrrwoycqu")
                                .withPerimeterGuid("yhahnomdrkyw")
                                .withLocation("psvfuurutlwexxwl")))
                        .withFullyQualifiedDomainNames(Arrays.asList("iexzsrzpge", "q", "yb", "wwpgdakchzyvlixq"))),
                new NetworkSecurityPerimeterAccessRule().withName("kcxk")
                    .withProperties(new NetworkSecurityPerimeterAccessRuleProperties()
                        .withDirection(NspAccessRuleDirection.INBOUND)
                        .withAddressPrefixes(Arrays.asList("ysux"))
                        .withSubscriptions(Arrays.asList(
                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem()
                                .withId("ntvlwijpsttexo"),
                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("pwcyyufmhr")))
                        .withNetworkSecurityPerimeters(Arrays.asList(
                            new NetworkSecurityPerimeter().withId("wmqs")
                                .withPerimeterGuid("cdqzhlctddu")
                                .withLocation("ndy"),
                            new NetworkSecurityPerimeter().withId("chrqb")
                                .withPerimeterGuid("jrcg")
                                .withLocation("ydcwboxjumv")))
                        .withFullyQualifiedDomainNames(Arrays.asList("lihrraiouaubr", "tloqxfuojrn"))),
                new NetworkSecurityPerimeterAccessRule().withName("flrzpas")
                    .withProperties(new NetworkSecurityPerimeterAccessRuleProperties()
                        .withDirection(NspAccessRuleDirection.INBOUND)
                        .withAddressPrefixes(Arrays.asList("mzdlyjdfqwmkyo", "ufdvruz"))
                        .withSubscriptions(Arrays.asList(
                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("j"),
                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("ctfnmdxotng"),
                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("gugey")))
                        .withNetworkSecurityPerimeters(Arrays.asList(
                            new NetworkSecurityPerimeter().withId("rkyui")
                                .withPerimeterGuid("bsnmfpph")
                                .withLocation("eevy"),
                            new NetworkSecurityPerimeter().withId("hsgz")
                                .withPerimeterGuid("zbgomfgbeg")
                                .withLocation("gleohi")))
                        .withFullyQualifiedDomainNames(Arrays.asList("nlu", "nkrrf", "eeebtijvacv")))));
        model = BinaryData.fromObject(model).toObject(ProvisioningIssueProperties.class);
        Assertions.assertEquals("wncvjtszcofiz", model.issueType());
        Assertions.assertEquals("tdhgbjkvrelj", model.severity());
        Assertions.assertEquals("murvzm", model.description());
        Assertions.assertEquals("uanashcxlp", model.suggestedResourceIds().get(0));
        Assertions.assertEquals("puuw", model.suggestedAccessRules().get(0).name());
        Assertions.assertEquals(NspAccessRuleDirection.INBOUND,
            model.suggestedAccessRules().get(0).properties().direction());
        Assertions.assertEquals("jctzenkei", model.suggestedAccessRules().get(0).properties().addressPrefixes().get(0));
        Assertions.assertEquals("boldforobwj",
            model.suggestedAccessRules().get(0).properties().subscriptions().get(0).id());
        Assertions.assertEquals("slzkwrrwoycqu",
            model.suggestedAccessRules().get(0).properties().networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals("yhahnomdrkyw",
            model.suggestedAccessRules().get(0).properties().networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("psvfuurutlwexxwl",
            model.suggestedAccessRules().get(0).properties().networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("iexzsrzpge",
            model.suggestedAccessRules().get(0).properties().fullyQualifiedDomainNames().get(0));
    }
}
