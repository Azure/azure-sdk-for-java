// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.cognitiveservices.fluent.models.PrivateEndpointConnectionListResultInner;
import com.azure.resourcemanager.cognitiveservices.models.PrivateEndpoint;
import com.azure.resourcemanager.cognitiveservices.models.PrivateEndpointConnectionProperties;
import com.azure.resourcemanager.cognitiveservices.models.PrivateEndpointServiceConnectionStatus;
import com.azure.resourcemanager.cognitiveservices.models.PrivateLinkServiceConnectionState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionListResultInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionListResultInner model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"privateEndpoint\":{\"id\":\"ygdvwv\"},\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"hgwxrtfudx\",\"actionsRequired\":\"xg\"},\"provisioningState\":\"Deleting\",\"groupIds\":[\"rvmnpkukghimdblx\",\"wi\",\"fnjhfjxwmszkkfo\",\"rey\"]},\"location\":\"zi\",\"etag\":\"jawneaiv\",\"id\":\"czelpcirel\",\"name\":\"feaenwab\",\"type\":\"atklddxbjhwuaa\"},{\"properties\":{\"privateEndpoint\":{\"id\":\"osphyoul\"},\"privateLinkServiceConnectionState\":{\"status\":\"Rejected\",\"description\":\"xagl\",\"actionsRequired\":\"imjwosyt\"},\"provisioningState\":\"Succeeded\",\"groupIds\":[\"kfcktqum\"]},\"location\":\"kkezzikhlyfjhdgq\",\"etag\":\"ebdunyg\",\"id\":\"qidbqfatpxllrxcy\",\"name\":\"moadsuvarmy\",\"type\":\"dmjsjqb\"},{\"properties\":{\"privateEndpoint\":{\"id\":\"x\"},\"privateLinkServiceConnectionState\":{\"status\":\"Rejected\",\"description\":\"yc\",\"actionsRequired\":\"uhpkxkgymar\"},\"provisioningState\":\"Succeeded\",\"groupIds\":[\"xqugjhkycubedd\",\"ssofwqmzqa\",\"krmnjijpxacqqud\"]},\"location\":\"byxbaaabjy\",\"etag\":\"yffimrzrtuzqogs\",\"id\":\"nevfdnw\",\"name\":\"wmewzsyy\",\"type\":\"euzsoi\"}]}")
            .toObject(PrivateEndpointConnectionListResultInner.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.APPROVED,
            model.value().get(0).properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("hgwxrtfudx",
            model.value().get(0).properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("xg",
            model.value().get(0).properties().privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("rvmnpkukghimdblx", model.value().get(0).properties().groupIds().get(0));
        Assertions.assertEquals("zi", model.value().get(0).location());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionListResultInner model
            = new PrivateEndpointConnectionListResultInner()
                .withValue(Arrays.asList(
                    new PrivateEndpointConnectionInner()
                        .withProperties(
                            new PrivateEndpointConnectionProperties().withPrivateEndpoint(new PrivateEndpoint())
                                .withPrivateLinkServiceConnectionState(
                                    new PrivateLinkServiceConnectionState()
                                        .withStatus(PrivateEndpointServiceConnectionStatus.APPROVED)
                                        .withDescription("hgwxrtfudx")
                                        .withActionsRequired("xg"))
                                .withGroupIds(Arrays.asList("rvmnpkukghimdblx", "wi", "fnjhfjxwmszkkfo", "rey")))
                        .withLocation("zi"),
                    new PrivateEndpointConnectionInner().withProperties(
                        new PrivateEndpointConnectionProperties().withPrivateEndpoint(new PrivateEndpoint())
                            .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                                .withStatus(PrivateEndpointServiceConnectionStatus.REJECTED)
                                .withDescription("xagl")
                                .withActionsRequired("imjwosyt"))
                            .withGroupIds(Arrays.asList("kfcktqum")))
                        .withLocation("kkezzikhlyfjhdgq"),
                    new PrivateEndpointConnectionInner()
                        .withProperties(
                            new PrivateEndpointConnectionProperties().withPrivateEndpoint(new PrivateEndpoint())
                                .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                                    .withStatus(PrivateEndpointServiceConnectionStatus.REJECTED)
                                    .withDescription("yc")
                                    .withActionsRequired("uhpkxkgymar"))
                                .withGroupIds(Arrays.asList("xqugjhkycubedd", "ssofwqmzqa", "krmnjijpxacqqud")))
                        .withLocation("byxbaaabjy")));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionListResultInner.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.APPROVED,
            model.value().get(0).properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("hgwxrtfudx",
            model.value().get(0).properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("xg",
            model.value().get(0).properties().privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("rvmnpkukghimdblx", model.value().get(0).properties().groupIds().get(0));
        Assertions.assertEquals("zi", model.value().get(0).location());
    }
}
