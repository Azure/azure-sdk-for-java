// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.models.RaiTopicProperties;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class RaiTopicPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RaiTopicProperties model = BinaryData.fromString(
            "{\"topicId\":\"unzo\",\"topicName\":\"dhcxgkmoy\",\"description\":\"dyuib\",\"sampleBlobUrl\":\"fdn\",\"status\":\"ydvfvfcjnae\",\"failedReason\":\"srvhmgorffuki\",\"createdAt\":\"2021-01-16T11:03:16Z\",\"lastModifiedAt\":\"2021-06-12T10:23:26Z\"}")
            .toObject(RaiTopicProperties.class);
        Assertions.assertEquals("unzo", model.topicId());
        Assertions.assertEquals("dhcxgkmoy", model.topicName());
        Assertions.assertEquals("dyuib", model.description());
        Assertions.assertEquals("fdn", model.sampleBlobUrl());
        Assertions.assertEquals("ydvfvfcjnae", model.status());
        Assertions.assertEquals("srvhmgorffuki", model.failedReason());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-16T11:03:16Z"), model.createdAt());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-12T10:23:26Z"), model.lastModifiedAt());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RaiTopicProperties model = new RaiTopicProperties().withTopicId("unzo")
            .withTopicName("dhcxgkmoy")
            .withDescription("dyuib")
            .withSampleBlobUrl("fdn")
            .withStatus("ydvfvfcjnae")
            .withFailedReason("srvhmgorffuki")
            .withCreatedAt(OffsetDateTime.parse("2021-01-16T11:03:16Z"))
            .withLastModifiedAt(OffsetDateTime.parse("2021-06-12T10:23:26Z"));
        model = BinaryData.fromObject(model).toObject(RaiTopicProperties.class);
        Assertions.assertEquals("unzo", model.topicId());
        Assertions.assertEquals("dhcxgkmoy", model.topicName());
        Assertions.assertEquals("dyuib", model.description());
        Assertions.assertEquals("fdn", model.sampleBlobUrl());
        Assertions.assertEquals("ydvfvfcjnae", model.status());
        Assertions.assertEquals("srvhmgorffuki", model.failedReason());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-16T11:03:16Z"), model.createdAt());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-12T10:23:26Z"), model.lastModifiedAt());
    }
}
