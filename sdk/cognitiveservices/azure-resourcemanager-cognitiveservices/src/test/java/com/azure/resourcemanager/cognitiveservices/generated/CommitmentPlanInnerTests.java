// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.fluent.models.CommitmentPlanInner;
import com.azure.resourcemanager.cognitiveservices.models.CommitmentPeriod;
import com.azure.resourcemanager.cognitiveservices.models.CommitmentPlanProperties;
import com.azure.resourcemanager.cognitiveservices.models.HostingModel;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class CommitmentPlanInnerTests {
    @Test
    public void testDeserialize() {
        CommitmentPlanInner model =
            BinaryData
                .fromString(
                    "{\"etag\":\"gbhcohfwdsj\",\"properties\":{\"hostingModel\":\"Web\",\"planType\":\"utiiswacf\",\"current\":{\"tier\":\"k\",\"count\":655957615,\"startDate\":\"fvhqc\",\"endDate\":\"ilvpnppfuflrwd\"},\"autoRenew\":false,\"next\":{\"tier\":\"yjrxsagafcnih\",\"count\":728963944,\"startDate\":\"nedgfbc\",\"endDate\":\"cvqvpkeqdcv\"},\"last\":{\"tier\":\"vo\",\"count\":1383619855,\"startDate\":\"bobzdopcjwvnhd\",\"endDate\":\"wmgxcxrsl\"}},\"id\":\"mutwuoe\",\"name\":\"rpkhjwn\",\"type\":\"yqsluic\"}")
                .toObject(CommitmentPlanInner.class);
        Assertions.assertEquals(HostingModel.WEB, model.properties().hostingModel());
        Assertions.assertEquals("utiiswacf", model.properties().planType());
        Assertions.assertEquals("k", model.properties().current().tier());
        Assertions.assertEquals(655957615, model.properties().current().count());
        Assertions.assertEquals(false, model.properties().autoRenew());
        Assertions.assertEquals("yjrxsagafcnih", model.properties().next().tier());
        Assertions.assertEquals(728963944, model.properties().next().count());
    }

    @Test
    public void testSerialize() {
        CommitmentPlanInner model =
            new CommitmentPlanInner()
                .withProperties(
                    new CommitmentPlanProperties()
                        .withHostingModel(HostingModel.WEB)
                        .withPlanType("utiiswacf")
                        .withCurrent(new CommitmentPeriod().withTier("k").withCount(655957615))
                        .withAutoRenew(false)
                        .withNext(new CommitmentPeriod().withTier("yjrxsagafcnih").withCount(728963944)));
        model = BinaryData.fromObject(model).toObject(CommitmentPlanInner.class);
        Assertions.assertEquals(HostingModel.WEB, model.properties().hostingModel());
        Assertions.assertEquals("utiiswacf", model.properties().planType());
        Assertions.assertEquals("k", model.properties().current().tier());
        Assertions.assertEquals(655957615, model.properties().current().count());
        Assertions.assertEquals(false, model.properties().autoRenew());
        Assertions.assertEquals("yjrxsagafcnih", model.properties().next().tier());
        Assertions.assertEquals(728963944, model.properties().next().count());
    }
}
