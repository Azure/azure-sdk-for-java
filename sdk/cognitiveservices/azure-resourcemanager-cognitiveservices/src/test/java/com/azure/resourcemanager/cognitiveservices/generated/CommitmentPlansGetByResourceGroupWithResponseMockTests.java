// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager;
import com.azure.resourcemanager.cognitiveservices.models.CommitmentPlan;
import com.azure.resourcemanager.cognitiveservices.models.HostingModel;
import com.azure.resourcemanager.cognitiveservices.models.SkuTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CommitmentPlansGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"etag\":\"hydt\",\"kind\":\"vvadswzs\",\"sku\":{\"name\":\"yemlowuowhlxln\",\"tier\":\"Premium\",\"size\":\"ouvblgmo\",\"family\":\"kltrfow\",\"capacity\":930453402},\"tags\":{\"ftukvhd\":\"mvlihcvjdrqcrjid\",\"ixh\":\"lwyojbfqzdkfnj\",\"valqjrhuzgfxo\":\"fratqxmbjroumzz\",\"pdbollg\":\"jtpusllywpvtiotz\"},\"location\":\"fqiu\",\"properties\":{\"provisioningState\":\"Failed\",\"commitmentPlanGuid\":\"owsocnequygdjbo\",\"hostingModel\":\"DisconnectedContainer\",\"planType\":\"tqjkqevad\",\"current\":{\"tier\":\"wiu\",\"count\":1945581840,\"quota\":{\"quantity\":7167505371363947234,\"unit\":\"xiid\"},\"startDate\":\"czskoswoqiqazu\",\"endDate\":\"mxzkr\"},\"autoRenew\":true,\"next\":{\"tier\":\"sbamnppcc\",\"count\":6478909,\"quota\":{\"quantity\":1281520358620814891,\"unit\":\"ezax\"},\"startDate\":\"ukzxuizh\",\"endDate\":\"nepk\"},\"last\":{\"tier\":\"iarxqiubxdukec\",\"count\":95721883,\"quota\":{\"quantity\":186391438069461558,\"unit\":\"ctmmkoszudbl\"},\"startDate\":\"ntrpcaqkiof\",\"endDate\":\"tfmhklbnldpvcb\"},\"provisioningIssues\":[\"zyqu\",\"usqxutrpbrr\"]},\"id\":\"yuuatvlmbjwcolbm\",\"name\":\"lbnwtpcpahp\",\"type\":\"z\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CognitiveServicesManager manager = CognitiveServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        CommitmentPlan response = manager.commitmentPlans()
            .getByResourceGroupWithResponse("oqodkadpp", "ibngqladyw", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("vvadswzs", response.kind());
        Assertions.assertEquals("yemlowuowhlxln", response.sku().name());
        Assertions.assertEquals(SkuTier.PREMIUM, response.sku().tier());
        Assertions.assertEquals("ouvblgmo", response.sku().size());
        Assertions.assertEquals("kltrfow", response.sku().family());
        Assertions.assertEquals(930453402, response.sku().capacity());
        Assertions.assertEquals("mvlihcvjdrqcrjid", response.tags().get("ftukvhd"));
        Assertions.assertEquals("fqiu", response.location());
        Assertions.assertEquals("owsocnequygdjbo", response.properties().commitmentPlanGuid());
        Assertions.assertEquals(HostingModel.DISCONNECTED_CONTAINER, response.properties().hostingModel());
        Assertions.assertEquals("tqjkqevad", response.properties().planType());
        Assertions.assertEquals("wiu", response.properties().current().tier());
        Assertions.assertEquals(1945581840, response.properties().current().count());
        Assertions.assertTrue(response.properties().autoRenew());
        Assertions.assertEquals("sbamnppcc", response.properties().next().tier());
        Assertions.assertEquals(6478909, response.properties().next().count());
    }
}
