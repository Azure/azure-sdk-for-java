// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.fluent.models.RaiContentFilterInner;
import com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterListResult;
import com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties;
import com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentSource;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RaiContentFilterListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RaiContentFilterListResult model = BinaryData.fromString(
            "{\"nextLink\":\"pthjoxo\",\"value\":[{\"properties\":{\"name\":\"sbpimlq\",\"isMultiLevelFilter\":true,\"source\":\"Completion\"},\"id\":\"cgxxlxs\",\"name\":\"fgcviz\",\"type\":\"zdwlvwlyoupfgfb\"},{\"properties\":{\"name\":\"bdyhgkfminsgowz\",\"isMultiLevelFilter\":true,\"source\":\"Completion\"},\"id\":\"t\",\"name\":\"tlahbq\",\"type\":\"ctxtgzukxi\"}]}")
            .toObject(RaiContentFilterListResult.class);
        Assertions.assertEquals("pthjoxo", model.nextLink());
        Assertions.assertEquals("sbpimlq", model.value().get(0).properties().name());
        Assertions.assertTrue(model.value().get(0).properties().isMultiLevelFilter());
        Assertions.assertEquals(RaiPolicyContentSource.COMPLETION, model.value().get(0).properties().source());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RaiContentFilterListResult model = new RaiContentFilterListResult().withNextLink("pthjoxo")
            .withValue(Arrays.asList(
                new RaiContentFilterInner().withProperties(new RaiContentFilterProperties().withName("sbpimlq")
                    .withIsMultiLevelFilter(true)
                    .withSource(RaiPolicyContentSource.COMPLETION)),
                new RaiContentFilterInner().withProperties(new RaiContentFilterProperties().withName("bdyhgkfminsgowz")
                    .withIsMultiLevelFilter(true)
                    .withSource(RaiPolicyContentSource.COMPLETION))));
        model = BinaryData.fromObject(model).toObject(RaiContentFilterListResult.class);
        Assertions.assertEquals("pthjoxo", model.nextLink());
        Assertions.assertEquals("sbpimlq", model.value().get(0).properties().name());
        Assertions.assertTrue(model.value().get(0).properties().isMultiLevelFilter());
        Assertions.assertEquals(RaiPolicyContentSource.COMPLETION, model.value().get(0).properties().source());
    }
}
