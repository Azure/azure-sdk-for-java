// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.models.MetricName;
import com.azure.resourcemanager.cognitiveservices.models.QuotaUsageStatus;
import com.azure.resourcemanager.cognitiveservices.models.UnitType;
import com.azure.resourcemanager.cognitiveservices.models.Usage;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class UsageTests {
    @Test
    public void testDeserialize() {
        Usage model =
            BinaryData
                .fromString(
                    "{\"unit\":\"Percent\",\"name\":{\"value\":\"wooc\",\"localizedValue\":\"bonqvpkvlrxnjeas\"},\"quotaPeriod\":\"pheoflokeyy\",\"limit\":8.258695733393173,\"currentValue\":56.75923754933715,\"nextResetTime\":\"tgrhpdjpjumas\",\"status\":\"Included\"}")
                .toObject(Usage.class);
        Assertions.assertEquals(UnitType.PERCENT, model.unit());
        Assertions.assertEquals("wooc", model.name().value());
        Assertions.assertEquals("bonqvpkvlrxnjeas", model.name().localizedValue());
        Assertions.assertEquals("pheoflokeyy", model.quotaPeriod());
        Assertions.assertEquals(8.258695733393173D, model.limit());
        Assertions.assertEquals(56.75923754933715D, model.currentValue());
        Assertions.assertEquals("tgrhpdjpjumas", model.nextResetTime());
        Assertions.assertEquals(QuotaUsageStatus.INCLUDED, model.status());
    }

    @Test
    public void testSerialize() {
        Usage model =
            new Usage()
                .withUnit(UnitType.PERCENT)
                .withName(new MetricName().withValue("wooc").withLocalizedValue("bonqvpkvlrxnjeas"))
                .withQuotaPeriod("pheoflokeyy")
                .withLimit(8.258695733393173D)
                .withCurrentValue(56.75923754933715D)
                .withNextResetTime("tgrhpdjpjumas")
                .withStatus(QuotaUsageStatus.INCLUDED);
        model = BinaryData.fromObject(model).toObject(Usage.class);
        Assertions.assertEquals(UnitType.PERCENT, model.unit());
        Assertions.assertEquals("wooc", model.name().value());
        Assertions.assertEquals("bonqvpkvlrxnjeas", model.name().localizedValue());
        Assertions.assertEquals("pheoflokeyy", model.quotaPeriod());
        Assertions.assertEquals(8.258695733393173D, model.limit());
        Assertions.assertEquals(56.75923754933715D, model.currentValue());
        Assertions.assertEquals("tgrhpdjpjumas", model.nextResetTime());
        Assertions.assertEquals(QuotaUsageStatus.INCLUDED, model.status());
    }
}
