// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterConfiguration;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NetworkSecurityPerimeterConfigurationsReconcileMockTests {
    @Test
    public void testReconcile() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Succeeded\",\"provisioningIssues\":[{\"name\":\"dfwakwseivmak\",\"properties\":{\"issueType\":\"so\",\"severity\":\"juxlkbectvtfjm\",\"description\":\"dchmaiubavlz\",\"suggestedResourceIds\":[\"gmfalkzazmgoked\",\"jqafkmkro\",\"zrthqet\",\"pqrtvaoznqni\"],\"suggestedAccessRules\":[{},{},{},{}]}},{\"name\":\"eagmceituug\",\"properties\":{\"issueType\":\"fpjstlzmb\",\"severity\":\"yjdeolctaebfs\",\"description\":\"ledjcustbvtqigd\",\"suggestedResourceIds\":[\"sgeafgfosehx\",\"zsxezppkkwaae\"],\"suggestedAccessRules\":[{},{},{}]}},{\"name\":\"jlpzeqtoyrp\",\"properties\":{\"issueType\":\"lajmllp\",\"severity\":\"evhamfowg\",\"description\":\"tmk\",\"suggestedResourceIds\":[\"pkzwa\"],\"suggestedAccessRules\":[{},{},{},{}]}}],\"networkSecurityPerimeter\":{\"id\":\"ovchiqbplvfid\",\"perimeterGuid\":\"ztekxbyjgmsfep\",\"location\":\"ihpq\"},\"resourceAssociation\":{\"name\":\"grhrdic\",\"accessMode\":\"wyjfowxwyovcxjs\"},\"profile\":{\"name\":\"pcukd\",\"accessRulesVersion\":6478476939633501020,\"accessRules\":[{\"name\":\"oduchvlscr\",\"properties\":{}},{\"name\":\"bfdyjduss\",\"properties\":{}},{\"name\":\"zekbhwlkaagg\",\"properties\":{}},{\"name\":\"hbfrnuybfflj\",\"properties\":{}}],\"diagnosticSettingsVersion\":3504021996381944964,\"enabledLogCategories\":[\"agsqta\"]}},\"id\":\"dusr\",\"name\":\"xxfavsqwudohzilf\",\"type\":\"nl\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CognitiveServicesManager manager = CognitiveServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        NetworkSecurityPerimeterConfiguration response = manager.networkSecurityPerimeterConfigurations()
            .reconcile("pbqhvfdqqjwkr", "wzdanojisgglmvo", "atuztjct", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("dfwakwseivmak", response.properties().provisioningIssues().get(0).name());
        Assertions.assertEquals("so", response.properties().provisioningIssues().get(0).properties().issueType());
        Assertions.assertEquals("juxlkbectvtfjm",
            response.properties().provisioningIssues().get(0).properties().severity());
        Assertions.assertEquals("dchmaiubavlz",
            response.properties().provisioningIssues().get(0).properties().description());
        Assertions.assertEquals("gmfalkzazmgoked",
            response.properties().provisioningIssues().get(0).properties().suggestedResourceIds().get(0));
        Assertions.assertEquals("ovchiqbplvfid", response.properties().networkSecurityPerimeter().id());
        Assertions.assertEquals("ztekxbyjgmsfep", response.properties().networkSecurityPerimeter().perimeterGuid());
        Assertions.assertEquals("ihpq", response.properties().networkSecurityPerimeter().location());
        Assertions.assertEquals("grhrdic", response.properties().resourceAssociation().name());
        Assertions.assertEquals("wyjfowxwyovcxjs", response.properties().resourceAssociation().accessMode());
        Assertions.assertEquals("pcukd", response.properties().profile().name());
        Assertions.assertEquals(6478476939633501020L, response.properties().profile().accessRulesVersion());
        Assertions.assertEquals("oduchvlscr", response.properties().profile().accessRules().get(0).name());
        Assertions.assertEquals(3504021996381944964L, response.properties().profile().diagnosticSettingsVersion());
        Assertions.assertEquals("agsqta", response.properties().profile().enabledLogCategories().get(0));
    }
}
