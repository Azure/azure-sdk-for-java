// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.models.AccountSku;
import com.azure.resourcemanager.cognitiveservices.models.Sku;
import com.azure.resourcemanager.cognitiveservices.models.SkuTier;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class AccountSkuTests {
    @Test
    public void testDeserialize() {
        AccountSku model =
            BinaryData
                .fromString(
                    "{\"resourceType\":\"utqxlngx\",\"sku\":{\"name\":\"fgugnxkrxdqmid\",\"tier\":\"Basic\",\"size\":\"rvqdra\",\"family\":\"jybige\",\"capacity\":1279126864}}")
                .toObject(AccountSku.class);
        Assertions.assertEquals("utqxlngx", model.resourceType());
        Assertions.assertEquals("fgugnxkrxdqmid", model.sku().name());
        Assertions.assertEquals(SkuTier.BASIC, model.sku().tier());
        Assertions.assertEquals("rvqdra", model.sku().size());
        Assertions.assertEquals("jybige", model.sku().family());
        Assertions.assertEquals(1279126864, model.sku().capacity());
    }

    @Test
    public void testSerialize() {
        AccountSku model =
            new AccountSku()
                .withResourceType("utqxlngx")
                .withSku(
                    new Sku()
                        .withName("fgugnxkrxdqmid")
                        .withTier(SkuTier.BASIC)
                        .withSize("rvqdra")
                        .withFamily("jybige")
                        .withCapacity(1279126864));
        model = BinaryData.fromObject(model).toObject(AccountSku.class);
        Assertions.assertEquals("utqxlngx", model.resourceType());
        Assertions.assertEquals("fgugnxkrxdqmid", model.sku().name());
        Assertions.assertEquals(SkuTier.BASIC, model.sku().tier());
        Assertions.assertEquals("rvqdra", model.sku().size());
        Assertions.assertEquals("jybige", model.sku().family());
        Assertions.assertEquals(1279126864, model.sku().capacity());
    }
}
