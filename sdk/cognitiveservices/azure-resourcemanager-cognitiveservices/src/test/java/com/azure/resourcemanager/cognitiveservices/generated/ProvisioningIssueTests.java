// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeter;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRule;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRuleProperties;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem;
import com.azure.resourcemanager.cognitiveservices.models.NspAccessRuleDirection;
import com.azure.resourcemanager.cognitiveservices.models.ProvisioningIssue;
import com.azure.resourcemanager.cognitiveservices.models.ProvisioningIssueProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ProvisioningIssueTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProvisioningIssue model = BinaryData.fromString(
            "{\"name\":\"dqxtbjwgnyf\",\"properties\":{\"issueType\":\"zsvtuikzhajqgl\",\"severity\":\"hm\",\"description\":\"qryxyn\",\"suggestedResourceIds\":[\"rd\",\"sovwxznptgoeiyb\",\"abpfhvfs\",\"kvntjlrigjkskyri\"],\"suggestedAccessRules\":[{\"name\":\"idsxwaabzmifry\",\"properties\":{\"direction\":\"Outbound\",\"addressPrefixes\":[\"xrizkzobgop\"],\"subscriptions\":[{}],\"networkSecurityPerimeters\":[{},{},{}],\"fullyQualifiedDomainNames\":[\"lxieixynllxecwcr\",\"jphslhcaw\",\"u\",\"i\"]}},{\"name\":\"wfmvigorqjbt\",\"properties\":{\"direction\":\"Inbound\",\"addressPrefixes\":[\"lkafhonqjuje\"],\"subscriptions\":[{},{},{},{}],\"networkSecurityPerimeters\":[{},{}],\"fullyQualifiedDomainNames\":[\"p\",\"pmxelnwcltyje\"]}},{\"name\":\"xxmlfmkqscazua\",\"properties\":{\"direction\":\"Inbound\",\"addressPrefixes\":[\"uamwabzxrvxc\",\"s\",\"sphaivmxyasflvg\"],\"subscriptions\":[{},{}],\"networkSecurityPerimeters\":[{},{}],\"fullyQualifiedDomainNames\":[\"koih\"]}}]}}")
            .toObject(ProvisioningIssue.class);
        Assertions.assertEquals("dqxtbjwgnyf", model.name());
        Assertions.assertEquals("zsvtuikzhajqgl", model.properties().issueType());
        Assertions.assertEquals("hm", model.properties().severity());
        Assertions.assertEquals("qryxyn", model.properties().description());
        Assertions.assertEquals("rd", model.properties().suggestedResourceIds().get(0));
        Assertions.assertEquals("idsxwaabzmifry", model.properties().suggestedAccessRules().get(0).name());
        Assertions.assertEquals(NspAccessRuleDirection.OUTBOUND,
            model.properties().suggestedAccessRules().get(0).properties().direction());
        Assertions.assertEquals("xrizkzobgop",
            model.properties().suggestedAccessRules().get(0).properties().addressPrefixes().get(0));
        Assertions.assertEquals("lxieixynllxecwcr",
            model.properties().suggestedAccessRules().get(0).properties().fullyQualifiedDomainNames().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProvisioningIssue model
            = new ProvisioningIssue().withName("dqxtbjwgnyf")
                .withProperties(
                    new ProvisioningIssueProperties().withIssueType("zsvtuikzhajqgl")
                        .withSeverity("hm")
                        .withDescription("qryxyn")
                        .withSuggestedResourceIds(
                            Arrays.asList("rd", "sovwxznptgoeiyb", "abpfhvfs", "kvntjlrigjkskyri"))
                        .withSuggestedAccessRules(
                            Arrays.asList(
                                new NetworkSecurityPerimeterAccessRule().withName("idsxwaabzmifry")
                                    .withProperties(new NetworkSecurityPerimeterAccessRuleProperties()
                                        .withDirection(NspAccessRuleDirection.OUTBOUND)
                                        .withAddressPrefixes(Arrays.asList("xrizkzobgop"))
                                        .withSubscriptions(Arrays.asList(
                                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem()))
                                        .withNetworkSecurityPerimeters(Arrays.asList(new NetworkSecurityPerimeter(),
                                            new NetworkSecurityPerimeter(), new NetworkSecurityPerimeter()))
                                        .withFullyQualifiedDomainNames(
                                            Arrays.asList("lxieixynllxecwcr", "jphslhcaw", "u", "i"))),
                                new NetworkSecurityPerimeterAccessRule().withName("wfmvigorqjbt")
                                    .withProperties(new NetworkSecurityPerimeterAccessRuleProperties()
                                        .withDirection(NspAccessRuleDirection.INBOUND)
                                        .withAddressPrefixes(Arrays.asList("lkafhonqjuje"))
                                        .withSubscriptions(Arrays.asList(
                                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem(),
                                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem(),
                                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem(),
                                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem()))
                                        .withNetworkSecurityPerimeters(Arrays
                                            .asList(new NetworkSecurityPerimeter(), new NetworkSecurityPerimeter()))
                                        .withFullyQualifiedDomainNames(Arrays.asList("p", "pmxelnwcltyje"))),
                                new NetworkSecurityPerimeterAccessRule().withName("xxmlfmkqscazua")
                                    .withProperties(new NetworkSecurityPerimeterAccessRuleProperties()
                                        .withDirection(NspAccessRuleDirection.INBOUND)
                                        .withAddressPrefixes(Arrays.asList("uamwabzxrvxc", "s", "sphaivmxyasflvg"))
                                        .withSubscriptions(Arrays.asList(
                                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem(),
                                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem()))
                                        .withNetworkSecurityPerimeters(Arrays.asList(new NetworkSecurityPerimeter(),
                                            new NetworkSecurityPerimeter()))
                                        .withFullyQualifiedDomainNames(Arrays.asList("koih"))))));
        model = BinaryData.fromObject(model).toObject(ProvisioningIssue.class);
        Assertions.assertEquals("dqxtbjwgnyf", model.name());
        Assertions.assertEquals("zsvtuikzhajqgl", model.properties().issueType());
        Assertions.assertEquals("hm", model.properties().severity());
        Assertions.assertEquals("qryxyn", model.properties().description());
        Assertions.assertEquals("rd", model.properties().suggestedResourceIds().get(0));
        Assertions.assertEquals("idsxwaabzmifry", model.properties().suggestedAccessRules().get(0).name());
        Assertions.assertEquals(NspAccessRuleDirection.OUTBOUND,
            model.properties().suggestedAccessRules().get(0).properties().direction());
        Assertions.assertEquals("xrizkzobgop",
            model.properties().suggestedAccessRules().get(0).properties().addressPrefixes().get(0));
        Assertions.assertEquals("lxieixynllxecwcr",
            model.properties().suggestedAccessRules().get(0).properties().fullyQualifiedDomainNames().get(0));
    }
}
