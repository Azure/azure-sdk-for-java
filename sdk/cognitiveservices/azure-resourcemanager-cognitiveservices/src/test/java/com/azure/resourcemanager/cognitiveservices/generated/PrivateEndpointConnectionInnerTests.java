// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.cognitiveservices.models.PrivateEndpoint;
import com.azure.resourcemanager.cognitiveservices.models.PrivateEndpointConnectionProperties;
import com.azure.resourcemanager.cognitiveservices.models.PrivateEndpointServiceConnectionStatus;
import com.azure.resourcemanager.cognitiveservices.models.PrivateLinkServiceConnectionState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionInner model = BinaryData.fromString(
            "{\"properties\":{\"privateEndpoint\":{\"id\":\"iheogna\"},\"privateLinkServiceConnectionState\":{\"status\":\"Rejected\",\"description\":\"theotusiv\",\"actionsRequired\":\"v\"},\"provisioningState\":\"Creating\",\"groupIds\":[\"hn\",\"un\"]},\"location\":\"jzrnf\",\"etag\":\"xgispemvtzfkufu\",\"id\":\"ljofxqeofjaeqjh\",\"name\":\"jbasvmsmjqulngs\",\"type\":\"tnb\"}")
            .toObject(PrivateEndpointConnectionInner.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.REJECTED,
            model.properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("theotusiv", model.properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("v", model.properties().privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("hn", model.properties().groupIds().get(0));
        Assertions.assertEquals("jzrnf", model.location());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionInner model
            = new PrivateEndpointConnectionInner()
                .withProperties(new PrivateEndpointConnectionProperties().withPrivateEndpoint(new PrivateEndpoint())
                    .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                        .withStatus(PrivateEndpointServiceConnectionStatus.REJECTED)
                        .withDescription("theotusiv")
                        .withActionsRequired("v"))
                    .withGroupIds(Arrays.asList("hn", "un")))
                .withLocation("jzrnf");
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionInner.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.REJECTED,
            model.properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("theotusiv", model.properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("v", model.properties().privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("hn", model.properties().groupIds().get(0));
        Assertions.assertEquals("jzrnf", model.location());
    }
}
