// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.fluent.models.AccountSkuListResultInner;
import com.azure.resourcemanager.cognitiveservices.models.AccountSku;
import com.azure.resourcemanager.cognitiveservices.models.Sku;
import com.azure.resourcemanager.cognitiveservices.models.SkuTier;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AccountSkuListResultInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AccountSkuListResultInner model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"resourceType\":\"bdlwtgrhpdjpj\",\"sku\":{\"name\":\"asxazjpqyegualhb\",\"tier\":\"Free\",\"size\":\"jj\",\"family\":\"v\",\"capacity\":303390013}}]}")
                .toObject(AccountSkuListResultInner.class);
        Assertions.assertEquals("bdlwtgrhpdjpj", model.value().get(0).resourceType());
        Assertions.assertEquals("asxazjpqyegualhb", model.value().get(0).sku().name());
        Assertions.assertEquals(SkuTier.FREE, model.value().get(0).sku().tier());
        Assertions.assertEquals("jj", model.value().get(0).sku().size());
        Assertions.assertEquals("v", model.value().get(0).sku().family());
        Assertions.assertEquals(303390013, model.value().get(0).sku().capacity());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AccountSkuListResultInner model =
            new AccountSkuListResultInner()
                .withValue(
                    Arrays
                        .asList(
                            new AccountSku()
                                .withResourceType("bdlwtgrhpdjpj")
                                .withSku(
                                    new Sku()
                                        .withName("asxazjpqyegualhb")
                                        .withTier(SkuTier.FREE)
                                        .withSize("jj")
                                        .withFamily("v")
                                        .withCapacity(303390013))));
        model = BinaryData.fromObject(model).toObject(AccountSkuListResultInner.class);
        Assertions.assertEquals("bdlwtgrhpdjpj", model.value().get(0).resourceType());
        Assertions.assertEquals("asxazjpqyegualhb", model.value().get(0).sku().name());
        Assertions.assertEquals(SkuTier.FREE, model.value().get(0).sku().tier());
        Assertions.assertEquals("jj", model.value().get(0).sku().size());
        Assertions.assertEquals("v", model.value().get(0).sku().family());
        Assertions.assertEquals(303390013, model.value().get(0).sku().capacity());
    }
}
