// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager;
import com.azure.resourcemanager.cognitiveservices.models.ConnectionCategory;
import com.azure.resourcemanager.cognitiveservices.models.ConnectionPropertiesV2BasicResource;
import com.azure.resourcemanager.cognitiveservices.models.ManagedPERequirement;
import com.azure.resourcemanager.cognitiveservices.models.ManagedPEStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AccountConnectionsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"authType\":\"ConnectionPropertiesV2\",\"category\":\"BingLLMSearch\",\"createdByWorkspaceArmId\":\"jparnpvgrszrbwt\",\"error\":\"cwgzwllxzl\",\"expiryTime\":\"2021-11-16T13:56:23Z\",\"group\":\"AzureAI\",\"isSharedToAll\":false,\"metadata\":{\"rmhpf\":\"ulz\"},\"peRequirement\":\"Required\",\"peStatus\":\"NotApplicable\",\"sharedUserList\":[\"pzfzxsoxinunjlz\",\"drocqsxytq\",\"tcmiwd\"],\"target\":\"svnmeylajamcajy\",\"useWorkspaceManagedIdentity\":false},\"id\":\"zcrryklleynqa\",\"name\":\"hkigglclwalhvub\",\"type\":\"gzphetxd\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CognitiveServicesManager manager = CognitiveServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<ConnectionPropertiesV2BasicResource> response = manager.accountConnections()
            .list("qxsaluzyig", "cvcewb", "qhdgsjsatmrn", "mazdfsqxh", false, com.azure.core.util.Context.NONE);

        Assertions.assertEquals(ConnectionCategory.BING_LLMSEARCH, response.iterator().next().properties().category());
        Assertions.assertEquals("cwgzwllxzl", response.iterator().next().properties().error());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-16T13:56:23Z"),
            response.iterator().next().properties().expiryTime());
        Assertions.assertFalse(response.iterator().next().properties().isSharedToAll());
        Assertions.assertEquals("ulz", response.iterator().next().properties().metadata().get("rmhpf"));
        Assertions.assertEquals(ManagedPERequirement.REQUIRED, response.iterator().next().properties().peRequirement());
        Assertions.assertEquals(ManagedPEStatus.NOT_APPLICABLE, response.iterator().next().properties().peStatus());
        Assertions.assertEquals("pzfzxsoxinunjlz", response.iterator().next().properties().sharedUserList().get(0));
        Assertions.assertEquals("svnmeylajamcajy", response.iterator().next().properties().target());
        Assertions.assertFalse(response.iterator().next().properties().useWorkspaceManagedIdentity());
    }
}
