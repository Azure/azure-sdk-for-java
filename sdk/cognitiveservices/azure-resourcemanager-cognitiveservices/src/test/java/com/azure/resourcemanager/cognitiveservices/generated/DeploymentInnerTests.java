// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.fluent.models.DeploymentInner;
import com.azure.resourcemanager.cognitiveservices.models.DeploymentModel;
import com.azure.resourcemanager.cognitiveservices.models.DeploymentProperties;
import com.azure.resourcemanager.cognitiveservices.models.DeploymentScaleSettings;
import com.azure.resourcemanager.cognitiveservices.models.DeploymentScaleType;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DeploymentInnerTests {
    @Test
    public void testDeserialize() {
        DeploymentInner model =
            BinaryData
                .fromString(
                    "{\"etag\":\"xc\",\"properties\":{\"provisioningState\":\"Moving\",\"model\":{\"format\":\"asrru\",\"name\":\"bhsqfsubcgjbirxb\",\"version\":\"bsrfbj\"},\"scaleSettings\":{\"scaleType\":\"Standard\",\"capacity\":1365200524,\"activeCapacity\":772106102},\"capabilities\":{\"exilzznfqqnvwpmq\":\"vjz\",\"r\":\"aruoujmkcjhwqyt\"},\"raiPolicyName\":\"n\",\"callRateLimit\":{\"count\":84.0863,\"renewalPeriod\":97.183586,\"rules\":[]}},\"id\":\"ervnaenqpehi\",\"name\":\"doy\",\"type\":\"mifthnzdnd\"}")
                .toObject(DeploymentInner.class);
        Assertions.assertEquals("asrru", model.properties().model().format());
        Assertions.assertEquals("bhsqfsubcgjbirxb", model.properties().model().name());
        Assertions.assertEquals("bsrfbj", model.properties().model().version());
        Assertions.assertEquals(DeploymentScaleType.STANDARD, model.properties().scaleSettings().scaleType());
        Assertions.assertEquals(1365200524, model.properties().scaleSettings().capacity());
        Assertions.assertEquals("n", model.properties().raiPolicyName());
    }

    @Test
    public void testSerialize() {
        DeploymentInner model =
            new DeploymentInner()
                .withProperties(
                    new DeploymentProperties()
                        .withModel(
                            new DeploymentModel()
                                .withFormat("asrru")
                                .withName("bhsqfsubcgjbirxb")
                                .withVersion("bsrfbj"))
                        .withScaleSettings(
                            new DeploymentScaleSettings()
                                .withScaleType(DeploymentScaleType.STANDARD)
                                .withCapacity(1365200524))
                        .withRaiPolicyName("n"));
        model = BinaryData.fromObject(model).toObject(DeploymentInner.class);
        Assertions.assertEquals("asrru", model.properties().model().format());
        Assertions.assertEquals("bhsqfsubcgjbirxb", model.properties().model().name());
        Assertions.assertEquals("bsrfbj", model.properties().model().version());
        Assertions.assertEquals(DeploymentScaleType.STANDARD, model.properties().scaleSettings().scaleType());
        Assertions.assertEquals(1365200524, model.properties().scaleSettings().capacity());
        Assertions.assertEquals("n", model.properties().raiPolicyName());
    }
}
