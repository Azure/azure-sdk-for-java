// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.fluent.models.NetworkSecurityPerimeterConfigurationInner;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeter;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRule;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterConfigurationAssociationInfo;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterConfigurationList;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterConfigurationProperties;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterProfileInfo;
import com.azure.resourcemanager.cognitiveservices.models.ProvisioningIssue;
import com.azure.resourcemanager.cognitiveservices.models.ProvisioningIssueProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkSecurityPerimeterConfigurationListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkSecurityPerimeterConfigurationList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningState\":\"ogtqxepnylbf\",\"provisioningIssues\":[{\"name\":\"yjt\",\"properties\":{}},{\"name\":\"fqzhv\",\"properties\":{}},{\"name\":\"byfmowuxr\",\"properties\":{}}],\"networkSecurityPerimeter\":{\"id\":\"dwxf\",\"perimeterGuid\":\"iivwzjbhyzsxjrka\",\"location\":\"trnegvmnvuqeqvld\"},\"resourceAssociation\":{\"name\":\"stjbkkdmfl\",\"accessMode\":\"stmjlxrri\"},\"profile\":{\"name\":\"apeewchpxlkt\",\"accessRulesVersion\":6958921108876978916,\"accessRules\":[{},{},{},{}],\"diagnosticSettingsVersion\":1991609817956957761,\"enabledLogCategories\":[\"ufuztcktyhjtq\"]}},\"id\":\"dcgzul\",\"name\":\"mmrqz\",\"type\":\"rr\"},{\"properties\":{\"provisioningState\":\"gl\",\"provisioningIssues\":[{\"name\":\"krvq\",\"properties\":{}},{\"name\":\"toepryu\",\"properties\":{}}],\"networkSecurityPerimeter\":{\"id\":\"tpzdmovzvfvaawzq\",\"perimeterGuid\":\"f\",\"location\":\"z\"},\"resourceAssociation\":{\"name\":\"glae\",\"accessMode\":\"ndtic\"},\"profile\":{\"name\":\"vzm\",\"accessRulesVersion\":231546792285942083,\"accessRules\":[{},{},{}],\"diagnosticSettingsVersion\":258278956113020754,\"enabledLogCategories\":[\"irclnpk\",\"iayz\",\"iykhy\",\"wf\"]}},\"id\":\"jlb\",\"name\":\"xqvkjlmxhomdyn\",\"type\":\"dwdigumb\"},{\"properties\":{\"provisioningState\":\"auzzptjazysd\",\"provisioningIssues\":[{\"name\":\"wwvaiqyuvvfonk\",\"properties\":{}},{\"name\":\"qyikvy\",\"properties\":{}}],\"networkSecurityPerimeter\":{\"id\":\"avluwmncs\",\"perimeterGuid\":\"ijf\",\"location\":\"vpo\"},\"resourceAssociation\":{\"name\":\"sgsgbdhu\",\"accessMode\":\"gnjdgkynscliqhz\"},\"profile\":{\"name\":\"nk\",\"accessRulesVersion\":620897221549417842,\"accessRules\":[{}],\"diagnosticSettingsVersion\":4043359579426698154,\"enabledLogCategories\":[\"vdxzxhihfrbbc\",\"vqagtltdhlf\",\"qojpy\",\"vgtrdcnifmzzs\"]}},\"id\":\"ymbrnysuxmpraf\",\"name\":\"g\",\"type\":\"khocxvdfffwaf\"}],\"nextLink\":\"oudaspavehhrvk\"}")
            .toObject(NetworkSecurityPerimeterConfigurationList.class);
        Assertions.assertEquals("yjt", model.value().get(0).properties().provisioningIssues().get(0).name());
        Assertions.assertEquals("dwxf", model.value().get(0).properties().networkSecurityPerimeter().id());
        Assertions.assertEquals("iivwzjbhyzsxjrka",
            model.value().get(0).properties().networkSecurityPerimeter().perimeterGuid());
        Assertions.assertEquals("trnegvmnvuqeqvld",
            model.value().get(0).properties().networkSecurityPerimeter().location());
        Assertions.assertEquals("stjbkkdmfl", model.value().get(0).properties().resourceAssociation().name());
        Assertions.assertEquals("stmjlxrri", model.value().get(0).properties().resourceAssociation().accessMode());
        Assertions.assertEquals("apeewchpxlkt", model.value().get(0).properties().profile().name());
        Assertions.assertEquals(6958921108876978916L, model.value().get(0).properties().profile().accessRulesVersion());
        Assertions.assertEquals(1991609817956957761L,
            model.value().get(0).properties().profile().diagnosticSettingsVersion());
        Assertions.assertEquals("ufuztcktyhjtq",
            model.value().get(0).properties().profile().enabledLogCategories().get(0));
        Assertions.assertEquals("oudaspavehhrvk", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkSecurityPerimeterConfigurationList model = new NetworkSecurityPerimeterConfigurationList()
            .withValue(Arrays.asList(
                new NetworkSecurityPerimeterConfigurationInner()
                    .withProperties(new NetworkSecurityPerimeterConfigurationProperties()
                        .withProvisioningIssues(Arrays.asList(
                            new ProvisioningIssue().withName("yjt").withProperties(new ProvisioningIssueProperties()),
                            new ProvisioningIssue().withName("fqzhv").withProperties(new ProvisioningIssueProperties()),
                            new ProvisioningIssue().withName("byfmowuxr")
                                .withProperties(new ProvisioningIssueProperties())))
                        .withNetworkSecurityPerimeter(new NetworkSecurityPerimeter().withId("dwxf")
                            .withPerimeterGuid("iivwzjbhyzsxjrka")
                            .withLocation("trnegvmnvuqeqvld"))
                        .withResourceAssociation(
                            new NetworkSecurityPerimeterConfigurationAssociationInfo().withName("stjbkkdmfl")
                                .withAccessMode("stmjlxrri"))
                        .withProfile(new NetworkSecurityPerimeterProfileInfo().withName("apeewchpxlkt")
                            .withAccessRulesVersion(6958921108876978916L)
                            .withAccessRules(Arrays.asList(new NetworkSecurityPerimeterAccessRule(),
                                new NetworkSecurityPerimeterAccessRule(), new NetworkSecurityPerimeterAccessRule(),
                                new NetworkSecurityPerimeterAccessRule()))
                            .withDiagnosticSettingsVersion(1991609817956957761L)
                            .withEnabledLogCategories(Arrays.asList("ufuztcktyhjtq")))),
                new NetworkSecurityPerimeterConfigurationInner()
                    .withProperties(new NetworkSecurityPerimeterConfigurationProperties()
                        .withProvisioningIssues(Arrays.asList(
                            new ProvisioningIssue().withName("krvq").withProperties(new ProvisioningIssueProperties()),
                            new ProvisioningIssue().withName("toepryu")
                                .withProperties(new ProvisioningIssueProperties())))
                        .withNetworkSecurityPerimeter(new NetworkSecurityPerimeter().withId("tpzdmovzvfvaawzq")
                            .withPerimeterGuid("f")
                            .withLocation("z"))
                        .withResourceAssociation(
                            new NetworkSecurityPerimeterConfigurationAssociationInfo().withName("glae")
                                .withAccessMode("ndtic"))
                        .withProfile(new NetworkSecurityPerimeterProfileInfo().withName("vzm")
                            .withAccessRulesVersion(231546792285942083L)
                            .withAccessRules(Arrays.asList(new NetworkSecurityPerimeterAccessRule(),
                                new NetworkSecurityPerimeterAccessRule(), new NetworkSecurityPerimeterAccessRule()))
                            .withDiagnosticSettingsVersion(258278956113020754L)
                            .withEnabledLogCategories(Arrays.asList("irclnpk", "iayz", "iykhy", "wf")))),
                new NetworkSecurityPerimeterConfigurationInner().withProperties(
                    new NetworkSecurityPerimeterConfigurationProperties().withProvisioningIssues(Arrays.asList(
                        new ProvisioningIssue().withName("wwvaiqyuvvfonk")
                            .withProperties(new ProvisioningIssueProperties()),
                        new ProvisioningIssue().withName("qyikvy").withProperties(new ProvisioningIssueProperties())))
                        .withNetworkSecurityPerimeter(new NetworkSecurityPerimeter().withId("avluwmncs")
                            .withPerimeterGuid("ijf")
                            .withLocation("vpo"))
                        .withResourceAssociation(
                            new NetworkSecurityPerimeterConfigurationAssociationInfo().withName("sgsgbdhu")
                                .withAccessMode("gnjdgkynscliqhz"))
                        .withProfile(new NetworkSecurityPerimeterProfileInfo().withName("nk")
                            .withAccessRulesVersion(620897221549417842L)
                            .withAccessRules(Arrays.asList(new NetworkSecurityPerimeterAccessRule()))
                            .withDiagnosticSettingsVersion(4043359579426698154L)
                            .withEnabledLogCategories(
                                Arrays.asList("vdxzxhihfrbbc", "vqagtltdhlf", "qojpy", "vgtrdcnifmzzs"))))))
            .withNextLink("oudaspavehhrvk");
        model = BinaryData.fromObject(model).toObject(NetworkSecurityPerimeterConfigurationList.class);
        Assertions.assertEquals("yjt", model.value().get(0).properties().provisioningIssues().get(0).name());
        Assertions.assertEquals("dwxf", model.value().get(0).properties().networkSecurityPerimeter().id());
        Assertions.assertEquals("iivwzjbhyzsxjrka",
            model.value().get(0).properties().networkSecurityPerimeter().perimeterGuid());
        Assertions.assertEquals("trnegvmnvuqeqvld",
            model.value().get(0).properties().networkSecurityPerimeter().location());
        Assertions.assertEquals("stjbkkdmfl", model.value().get(0).properties().resourceAssociation().name());
        Assertions.assertEquals("stmjlxrri", model.value().get(0).properties().resourceAssociation().accessMode());
        Assertions.assertEquals("apeewchpxlkt", model.value().get(0).properties().profile().name());
        Assertions.assertEquals(6958921108876978916L, model.value().get(0).properties().profile().accessRulesVersion());
        Assertions.assertEquals(1991609817956957761L,
            model.value().get(0).properties().profile().diagnosticSettingsVersion());
        Assertions.assertEquals("ufuztcktyhjtq",
            model.value().get(0).properties().profile().enabledLogCategories().get(0));
        Assertions.assertEquals("oudaspavehhrvk", model.nextLink());
    }
}
