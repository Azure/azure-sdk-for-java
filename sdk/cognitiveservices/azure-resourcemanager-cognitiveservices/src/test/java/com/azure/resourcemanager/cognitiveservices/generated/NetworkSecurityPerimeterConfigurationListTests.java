// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.fluent.models.NetworkSecurityPerimeterConfigurationInner;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeter;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRule;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterConfigurationAssociationInfo;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterConfigurationList;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterConfigurationProperties;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterProfileInfo;
import com.azure.resourcemanager.cognitiveservices.models.ProvisioningIssue;
import com.azure.resourcemanager.cognitiveservices.models.ProvisioningIssueProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkSecurityPerimeterConfigurationListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkSecurityPerimeterConfigurationList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningState\":\"sofieypefojyqd\",\"provisioningIssues\":[{\"name\":\"lcplc\",\"properties\":{}}],\"networkSecurityPerimeter\":{\"id\":\"hihlhzdsqtzbs\",\"perimeterGuid\":\"nowc\",\"location\":\"fgmvecactxmwo\"},\"resourceAssociation\":{\"name\":\"owcluqo\",\"accessMode\":\"kqvgqouw\"},\"profile\":{\"name\":\"mpjw\",\"accessRulesVersion\":7600818262729980675,\"accessRules\":[{},{},{}],\"diagnosticSettingsVersion\":7788041719620322166,\"enabledLogCategories\":[\"rfsphuagrt\",\"ikteusqczkvyk\",\"xubyjaffmmfblcqc\",\"ubgq\"]}},\"id\":\"brta\",\"name\":\"metttwgd\",\"type\":\"lqxihhrmooiz\"},{\"properties\":{\"provisioningState\":\"ypxiutcxap\",\"provisioningIssues\":[{\"name\":\"petogebjox\",\"properties\":{}}],\"networkSecurityPerimeter\":{\"id\":\"nhl\",\"perimeterGuid\":\"rqnkkzjcjbtr\",\"location\":\"ehvvib\"},\"resourceAssociation\":{\"name\":\"jsto\",\"accessMode\":\"eitpkxztmo\"},\"profile\":{\"name\":\"lftidgfcwqmpim\",\"accessRulesVersion\":8470531276404867506,\"accessRules\":[{}],\"diagnosticSettingsVersion\":6375317048909912503,\"enabledLogCategories\":[\"hujswtwkozzwcul\"]}},\"id\":\"bawpfajnjwltlwt\",\"name\":\"j\",\"type\":\"uktalhsnvkcdmxz\"}],\"nextLink\":\"oaimlnw\"}")
            .toObject(NetworkSecurityPerimeterConfigurationList.class);
        Assertions.assertEquals("lcplc", model.value().get(0).properties().provisioningIssues().get(0).name());
        Assertions.assertEquals("hihlhzdsqtzbs", model.value().get(0).properties().networkSecurityPerimeter().id());
        Assertions.assertEquals("nowc", model.value().get(0).properties().networkSecurityPerimeter().perimeterGuid());
        Assertions.assertEquals("fgmvecactxmwo",
            model.value().get(0).properties().networkSecurityPerimeter().location());
        Assertions.assertEquals("owcluqo", model.value().get(0).properties().resourceAssociation().name());
        Assertions.assertEquals("kqvgqouw", model.value().get(0).properties().resourceAssociation().accessMode());
        Assertions.assertEquals("mpjw", model.value().get(0).properties().profile().name());
        Assertions.assertEquals(7600818262729980675L, model.value().get(0).properties().profile().accessRulesVersion());
        Assertions.assertEquals(7788041719620322166L,
            model.value().get(0).properties().profile().diagnosticSettingsVersion());
        Assertions.assertEquals("rfsphuagrt",
            model.value().get(0).properties().profile().enabledLogCategories().get(0));
        Assertions.assertEquals("oaimlnw", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkSecurityPerimeterConfigurationList model
            = new NetworkSecurityPerimeterConfigurationList().withValue(Arrays.asList(
                new NetworkSecurityPerimeterConfigurationInner()
                    .withProperties(new NetworkSecurityPerimeterConfigurationProperties()
                        .withProvisioningIssues(Arrays.asList(new ProvisioningIssue().withName("lcplc")
                            .withProperties(new ProvisioningIssueProperties())))
                        .withNetworkSecurityPerimeter(new NetworkSecurityPerimeter().withId("hihlhzdsqtzbs")
                            .withPerimeterGuid("nowc")
                            .withLocation("fgmvecactxmwo"))
                        .withResourceAssociation(
                            new NetworkSecurityPerimeterConfigurationAssociationInfo().withName("owcluqo")
                                .withAccessMode("kqvgqouw"))
                        .withProfile(new NetworkSecurityPerimeterProfileInfo().withName("mpjw")
                            .withAccessRulesVersion(7600818262729980675L)
                            .withAccessRules(Arrays.asList(new NetworkSecurityPerimeterAccessRule(),
                                new NetworkSecurityPerimeterAccessRule(), new NetworkSecurityPerimeterAccessRule()))
                            .withDiagnosticSettingsVersion(7788041719620322166L)
                            .withEnabledLogCategories(
                                Arrays.asList("rfsphuagrt", "ikteusqczkvyk", "xubyjaffmmfblcqc", "ubgq")))),
                new NetworkSecurityPerimeterConfigurationInner()
                    .withProperties(new NetworkSecurityPerimeterConfigurationProperties()
                        .withProvisioningIssues(Arrays.asList(new ProvisioningIssue().withName("petogebjox")
                            .withProperties(new ProvisioningIssueProperties())))
                        .withNetworkSecurityPerimeter(new NetworkSecurityPerimeter().withId("nhl")
                            .withPerimeterGuid("rqnkkzjcjbtr")
                            .withLocation("ehvvib"))
                        .withResourceAssociation(
                            new NetworkSecurityPerimeterConfigurationAssociationInfo().withName("jsto")
                                .withAccessMode("eitpkxztmo"))
                        .withProfile(new NetworkSecurityPerimeterProfileInfo().withName("lftidgfcwqmpim")
                            .withAccessRulesVersion(8470531276404867506L)
                            .withAccessRules(Arrays.asList(new NetworkSecurityPerimeterAccessRule()))
                            .withDiagnosticSettingsVersion(6375317048909912503L)
                            .withEnabledLogCategories(Arrays.asList("hujswtwkozzwcul"))))))
                .withNextLink("oaimlnw");
        model = BinaryData.fromObject(model).toObject(NetworkSecurityPerimeterConfigurationList.class);
        Assertions.assertEquals("lcplc", model.value().get(0).properties().provisioningIssues().get(0).name());
        Assertions.assertEquals("hihlhzdsqtzbs", model.value().get(0).properties().networkSecurityPerimeter().id());
        Assertions.assertEquals("nowc", model.value().get(0).properties().networkSecurityPerimeter().perimeterGuid());
        Assertions.assertEquals("fgmvecactxmwo",
            model.value().get(0).properties().networkSecurityPerimeter().location());
        Assertions.assertEquals("owcluqo", model.value().get(0).properties().resourceAssociation().name());
        Assertions.assertEquals("kqvgqouw", model.value().get(0).properties().resourceAssociation().accessMode());
        Assertions.assertEquals("mpjw", model.value().get(0).properties().profile().name());
        Assertions.assertEquals(7600818262729980675L, model.value().get(0).properties().profile().accessRulesVersion());
        Assertions.assertEquals(7788041719620322166L,
            model.value().get(0).properties().profile().diagnosticSettingsVersion());
        Assertions.assertEquals("rfsphuagrt",
            model.value().get(0).properties().profile().enabledLogCategories().get(0));
        Assertions.assertEquals("oaimlnw", model.nextLink());
    }
}
