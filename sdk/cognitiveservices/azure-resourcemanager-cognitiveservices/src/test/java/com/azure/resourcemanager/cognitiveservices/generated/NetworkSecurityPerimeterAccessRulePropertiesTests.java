// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeter;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRuleProperties;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem;
import com.azure.resourcemanager.cognitiveservices.models.NspAccessRuleDirection;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkSecurityPerimeterAccessRulePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkSecurityPerimeterAccessRuleProperties model = BinaryData.fromString(
            "{\"direction\":\"Inbound\",\"addressPrefixes\":[\"zhokvbwnhh\"],\"subscriptions\":[{\"id\":\"ehgpp\"},{\"id\":\"ifhpf\"}],\"networkSecurityPerimeters\":[{\"id\":\"vgcxtx\",\"perimeterGuid\":\"sheafid\",\"location\":\"ugsresmkssjhoi\"},{\"id\":\"xfkfwegprhptill\",\"perimeterGuid\":\"biqtgdq\",\"location\":\"mcwsldrizetpwb\"},{\"id\":\"lllibph\",\"perimeterGuid\":\"zmizakakan\",\"location\":\"p\"},{\"id\":\"jzhajoy\",\"perimeterGuid\":\"jlmuoyxprimrsopt\",\"location\":\"cjmeislstvasy\"}],\"fullyQualifiedDomainNames\":[\"dzaumweooh\"]}")
            .toObject(NetworkSecurityPerimeterAccessRuleProperties.class);
        Assertions.assertEquals(NspAccessRuleDirection.INBOUND, model.direction());
        Assertions.assertEquals("zhokvbwnhh", model.addressPrefixes().get(0));
        Assertions.assertEquals("ehgpp", model.subscriptions().get(0).id());
        Assertions.assertEquals("vgcxtx", model.networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals("sheafid", model.networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("ugsresmkssjhoi", model.networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("dzaumweooh", model.fullyQualifiedDomainNames().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkSecurityPerimeterAccessRuleProperties model
            = new NetworkSecurityPerimeterAccessRuleProperties().withDirection(NspAccessRuleDirection.INBOUND)
                .withAddressPrefixes(Arrays.asList("zhokvbwnhh"))
                .withSubscriptions(
                    Arrays.asList(new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("ehgpp"),
                        new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("ifhpf")))
                .withNetworkSecurityPerimeters(Arrays.asList(
                    new NetworkSecurityPerimeter().withId("vgcxtx")
                        .withPerimeterGuid("sheafid")
                        .withLocation("ugsresmkssjhoi"),
                    new NetworkSecurityPerimeter().withId("xfkfwegprhptill")
                        .withPerimeterGuid("biqtgdq")
                        .withLocation("mcwsldrizetpwb"),
                    new NetworkSecurityPerimeter().withId("lllibph").withPerimeterGuid("zmizakakan").withLocation("p"),
                    new NetworkSecurityPerimeter().withId("jzhajoy")
                        .withPerimeterGuid("jlmuoyxprimrsopt")
                        .withLocation("cjmeislstvasy")))
                .withFullyQualifiedDomainNames(Arrays.asList("dzaumweooh"));
        model = BinaryData.fromObject(model).toObject(NetworkSecurityPerimeterAccessRuleProperties.class);
        Assertions.assertEquals(NspAccessRuleDirection.INBOUND, model.direction());
        Assertions.assertEquals("zhokvbwnhh", model.addressPrefixes().get(0));
        Assertions.assertEquals("ehgpp", model.subscriptions().get(0).id());
        Assertions.assertEquals("vgcxtx", model.networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals("sheafid", model.networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("ugsresmkssjhoi", model.networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("dzaumweooh", model.fullyQualifiedDomainNames().get(0));
    }
}
