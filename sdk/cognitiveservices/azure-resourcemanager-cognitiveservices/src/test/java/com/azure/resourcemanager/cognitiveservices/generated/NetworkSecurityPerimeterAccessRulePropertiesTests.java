// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeter;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRuleProperties;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem;
import com.azure.resourcemanager.cognitiveservices.models.NspAccessRuleDirection;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkSecurityPerimeterAccessRulePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkSecurityPerimeterAccessRuleProperties model = BinaryData.fromString(
            "{\"direction\":\"Outbound\",\"addressPrefixes\":[\"oudorhcgyyp\",\"otwypundmb\"],\"subscriptions\":[{\"id\":\"cmjkavlgorbmftpm\"},{\"id\":\"zfjltfvnzcyjto\"},{\"id\":\"vopvp\"},{\"id\":\"bzqgqqi\"}],\"networkSecurityPerimeters\":[{\"id\":\"vqwt\",\"perimeterGuid\":\"ky\",\"location\":\"cysihs\"},{\"id\":\"cw\",\"perimeterGuid\":\"ohsdtmcd\",\"location\":\"ufcohdxbz\"}],\"fullyQualifiedDomainNames\":[\"muapcvhdbevw\",\"qxeysko\",\"qzinkfkbg\"]}")
            .toObject(NetworkSecurityPerimeterAccessRuleProperties.class);
        Assertions.assertEquals(NspAccessRuleDirection.OUTBOUND, model.direction());
        Assertions.assertEquals("oudorhcgyyp", model.addressPrefixes().get(0));
        Assertions.assertEquals("cmjkavlgorbmftpm", model.subscriptions().get(0).id());
        Assertions.assertEquals("vqwt", model.networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals("ky", model.networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("cysihs", model.networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("muapcvhdbevw", model.fullyQualifiedDomainNames().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkSecurityPerimeterAccessRuleProperties model
            = new NetworkSecurityPerimeterAccessRuleProperties().withDirection(NspAccessRuleDirection.OUTBOUND)
                .withAddressPrefixes(Arrays.asList("oudorhcgyyp", "otwypundmb"))
                .withSubscriptions(Arrays.asList(
                    new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("cmjkavlgorbmftpm"),
                    new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("zfjltfvnzcyjto"),
                    new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("vopvp"),
                    new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("bzqgqqi")))
                .withNetworkSecurityPerimeters(Arrays.asList(
                    new NetworkSecurityPerimeter().withId("vqwt").withPerimeterGuid("ky").withLocation("cysihs"),
                    new NetworkSecurityPerimeter().withId("cw")
                        .withPerimeterGuid("ohsdtmcd")
                        .withLocation("ufcohdxbz")))
                .withFullyQualifiedDomainNames(Arrays.asList("muapcvhdbevw", "qxeysko", "qzinkfkbg"));
        model = BinaryData.fromObject(model).toObject(NetworkSecurityPerimeterAccessRuleProperties.class);
        Assertions.assertEquals(NspAccessRuleDirection.OUTBOUND, model.direction());
        Assertions.assertEquals("oudorhcgyyp", model.addressPrefixes().get(0));
        Assertions.assertEquals("cmjkavlgorbmftpm", model.subscriptions().get(0).id());
        Assertions.assertEquals("vqwt", model.networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals("ky", model.networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("cysihs", model.networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("muapcvhdbevw", model.fullyQualifiedDomainNames().get(0));
    }
}
