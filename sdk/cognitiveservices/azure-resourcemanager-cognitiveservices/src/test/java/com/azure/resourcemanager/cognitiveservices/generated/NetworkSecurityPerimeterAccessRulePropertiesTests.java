// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeter;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRuleProperties;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem;
import com.azure.resourcemanager.cognitiveservices.models.NspAccessRuleDirection;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkSecurityPerimeterAccessRulePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkSecurityPerimeterAccessRuleProperties model = BinaryData.fromString(
            "{\"direction\":\"Outbound\",\"addressPrefixes\":[\"oqeq\"],\"subscriptions\":[{\"id\":\"vlagun\"},{\"id\":\"gfebwlnb\"},{\"id\":\"yreeudz\"}],\"networkSecurityPerimeters\":[{\"id\":\"pdqmjxlyyzglgouw\",\"perimeterGuid\":\"mjjyuojq\",\"location\":\"baxk\"},{\"id\":\"ytunlbfjkwr\",\"perimeterGuid\":\"nkqbhsyrq\",\"location\":\"jqhden\"},{\"id\":\"ulkpakd\",\"perimeterGuid\":\"fmjnnawtqa\",\"location\":\"xuckpggqoweyir\"},{\"id\":\"lisn\",\"perimeterGuid\":\"fl\",\"location\":\"mpizru\"}],\"fullyQualifiedDomainNames\":[\"qxpxiwfcngjsaa\",\"iixtmkzj\"]}")
            .toObject(NetworkSecurityPerimeterAccessRuleProperties.class);
        Assertions.assertEquals(NspAccessRuleDirection.OUTBOUND, model.direction());
        Assertions.assertEquals("oqeq", model.addressPrefixes().get(0));
        Assertions.assertEquals("vlagun", model.subscriptions().get(0).id());
        Assertions.assertEquals("pdqmjxlyyzglgouw", model.networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals("mjjyuojq", model.networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("baxk", model.networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("qxpxiwfcngjsaa", model.fullyQualifiedDomainNames().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkSecurityPerimeterAccessRuleProperties model
            = new NetworkSecurityPerimeterAccessRuleProperties().withDirection(NspAccessRuleDirection.OUTBOUND)
                .withAddressPrefixes(Arrays.asList("oqeq"))
                .withSubscriptions(
                    Arrays.asList(new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("vlagun"),
                        new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("gfebwlnb"),
                        new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("yreeudz")))
                .withNetworkSecurityPerimeters(Arrays.asList(
                    new NetworkSecurityPerimeter().withId("pdqmjxlyyzglgouw")
                        .withPerimeterGuid("mjjyuojq")
                        .withLocation("baxk"),
                    new NetworkSecurityPerimeter().withId("ytunlbfjkwr")
                        .withPerimeterGuid("nkqbhsyrq")
                        .withLocation("jqhden"),
                    new NetworkSecurityPerimeter().withId("ulkpakd")
                        .withPerimeterGuid("fmjnnawtqa")
                        .withLocation("xuckpggqoweyir"),
                    new NetworkSecurityPerimeter().withId("lisn").withPerimeterGuid("fl").withLocation("mpizru")))
                .withFullyQualifiedDomainNames(Arrays.asList("qxpxiwfcngjsaa", "iixtmkzj"));
        model = BinaryData.fromObject(model).toObject(NetworkSecurityPerimeterAccessRuleProperties.class);
        Assertions.assertEquals(NspAccessRuleDirection.OUTBOUND, model.direction());
        Assertions.assertEquals("oqeq", model.addressPrefixes().get(0));
        Assertions.assertEquals("vlagun", model.subscriptions().get(0).id());
        Assertions.assertEquals("pdqmjxlyyzglgouw", model.networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals("mjjyuojq", model.networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("baxk", model.networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("qxpxiwfcngjsaa", model.fullyQualifiedDomainNames().get(0));
    }
}
