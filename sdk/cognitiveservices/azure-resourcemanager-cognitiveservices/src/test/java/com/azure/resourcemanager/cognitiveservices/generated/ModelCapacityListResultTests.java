// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.fluent.models.ModelCapacityListResultValueItemInner;
import com.azure.resourcemanager.cognitiveservices.models.DeploymentModel;
import com.azure.resourcemanager.cognitiveservices.models.ModelCapacityListResult;
import com.azure.resourcemanager.cognitiveservices.models.ModelSkuCapacityProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ModelCapacityListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ModelCapacityListResult model = BinaryData.fromString(
            "{\"nextLink\":\"hqjohxcrsbfova\",\"value\":[{\"location\":\"v\",\"properties\":{\"model\":{\"publisher\":\"qfsubcgjbirx\",\"format\":\"ybsrfbjfdtwss\",\"name\":\"ftpvjzbexil\",\"version\":\"nfqqnvwp\",\"source\":\"taruoujmkcj\",\"sourceAccount\":\"qytjrybnwjewgd\",\"callRateLimit\":{\"count\":60.536694,\"renewalPeriod\":74.67387,\"rules\":[{}]}},\"skuName\":\"qp\",\"availableCapacity\":84.453545,\"availableFinetuneCapacity\":15.866309},\"id\":\"oygmift\",\"name\":\"nzdndslgna\",\"type\":\"qig\"}]}")
            .toObject(ModelCapacityListResult.class);
        Assertions.assertEquals("hqjohxcrsbfova", model.nextLink());
        Assertions.assertEquals("v", model.value().get(0).location());
        Assertions.assertEquals("qfsubcgjbirx", model.value().get(0).properties().model().publisher());
        Assertions.assertEquals("ybsrfbjfdtwss", model.value().get(0).properties().model().format());
        Assertions.assertEquals("ftpvjzbexil", model.value().get(0).properties().model().name());
        Assertions.assertEquals("nfqqnvwp", model.value().get(0).properties().model().version());
        Assertions.assertEquals("taruoujmkcj", model.value().get(0).properties().model().source());
        Assertions.assertEquals("qytjrybnwjewgd", model.value().get(0).properties().model().sourceAccount());
        Assertions.assertEquals("qp", model.value().get(0).properties().skuName());
        Assertions.assertEquals(84.453545F, model.value().get(0).properties().availableCapacity());
        Assertions.assertEquals(15.866309F, model.value().get(0).properties().availableFinetuneCapacity());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ModelCapacityListResult model = new ModelCapacityListResult().withNextLink("hqjohxcrsbfova")
            .withValue(Arrays.asList(new ModelCapacityListResultValueItemInner().withLocation("v")
                .withProperties(new ModelSkuCapacityProperties()
                    .withModel(new DeploymentModel().withPublisher("qfsubcgjbirx")
                        .withFormat("ybsrfbjfdtwss")
                        .withName("ftpvjzbexil")
                        .withVersion("nfqqnvwp")
                        .withSource("taruoujmkcj")
                        .withSourceAccount("qytjrybnwjewgd"))
                    .withSkuName("qp")
                    .withAvailableCapacity(84.453545F)
                    .withAvailableFinetuneCapacity(15.866309F))));
        model = BinaryData.fromObject(model).toObject(ModelCapacityListResult.class);
        Assertions.assertEquals("hqjohxcrsbfova", model.nextLink());
        Assertions.assertEquals("v", model.value().get(0).location());
        Assertions.assertEquals("qfsubcgjbirx", model.value().get(0).properties().model().publisher());
        Assertions.assertEquals("ybsrfbjfdtwss", model.value().get(0).properties().model().format());
        Assertions.assertEquals("ftpvjzbexil", model.value().get(0).properties().model().name());
        Assertions.assertEquals("nfqqnvwp", model.value().get(0).properties().model().version());
        Assertions.assertEquals("taruoujmkcj", model.value().get(0).properties().model().source());
        Assertions.assertEquals("qytjrybnwjewgd", model.value().get(0).properties().model().sourceAccount());
        Assertions.assertEquals("qp", model.value().get(0).properties().skuName());
        Assertions.assertEquals(84.453545F, model.value().get(0).properties().availableCapacity());
        Assertions.assertEquals(15.866309F, model.value().get(0).properties().availableFinetuneCapacity());
    }
}
