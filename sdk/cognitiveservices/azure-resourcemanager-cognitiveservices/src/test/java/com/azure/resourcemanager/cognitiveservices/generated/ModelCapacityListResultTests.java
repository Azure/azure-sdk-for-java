// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.fluent.models.ModelCapacityListResultValueItemInner;
import com.azure.resourcemanager.cognitiveservices.models.DeploymentModel;
import com.azure.resourcemanager.cognitiveservices.models.ModelCapacityListResult;
import com.azure.resourcemanager.cognitiveservices.models.ModelSkuCapacityProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ModelCapacityListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ModelCapacityListResult model = BinaryData.fromString(
            "{\"nextLink\":\"cvdrhvoodsot\",\"value\":[{\"location\":\"dopcjwvnh\",\"properties\":{\"model\":{\"publisher\":\"mgxcxrslpm\",\"format\":\"wuoegrpk\",\"name\":\"wniyqsluicpd\",\"version\":\"kzzlvmbmpaxmodf\",\"source\":\"efyw\",\"sourceAccount\":\"pfvmwyhrfou\",\"callRateLimit\":{\"count\":20.784086,\"renewalPeriod\":32.10248,\"rules\":[{},{},{}]}},\"skuName\":\"iyzvqtmnub\",\"availableCapacity\":71.15051,\"availableFinetuneCapacity\":46.320225},\"id\":\"ksmond\",\"name\":\"mquxvypo\",\"type\":\"gkopkwhojvpajqgx\"},{\"location\":\"mocmbqfqvmk\",\"properties\":{\"model\":{\"publisher\":\"apvhelxprgly\",\"format\":\"dd\",\"name\":\"cbcuejrjxgciqi\",\"version\":\"hos\",\"source\":\"dqrhzoymib\",\"sourceAccount\":\"qyib\",\"callRateLimit\":{\"count\":48.058273,\"renewalPeriod\":70.92327,\"rules\":[{},{},{}]}},\"skuName\":\"tmhrkwofyyvoqacp\",\"availableCapacity\":57.89401,\"availableFinetuneCapacity\":79.0544},\"id\":\"tg\",\"name\":\"wbwo\",\"type\":\"nwashrtd\"}]}")
            .toObject(ModelCapacityListResult.class);
        Assertions.assertEquals("cvdrhvoodsot", model.nextLink());
        Assertions.assertEquals("dopcjwvnh", model.value().get(0).location());
        Assertions.assertEquals("mgxcxrslpm", model.value().get(0).properties().model().publisher());
        Assertions.assertEquals("wuoegrpk", model.value().get(0).properties().model().format());
        Assertions.assertEquals("wniyqsluicpd", model.value().get(0).properties().model().name());
        Assertions.assertEquals("kzzlvmbmpaxmodf", model.value().get(0).properties().model().version());
        Assertions.assertEquals("efyw", model.value().get(0).properties().model().source());
        Assertions.assertEquals("pfvmwyhrfou", model.value().get(0).properties().model().sourceAccount());
        Assertions.assertEquals("iyzvqtmnub", model.value().get(0).properties().skuName());
        Assertions.assertEquals(71.15051F, model.value().get(0).properties().availableCapacity());
        Assertions.assertEquals(46.320225F, model.value().get(0).properties().availableFinetuneCapacity());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ModelCapacityListResult model = new ModelCapacityListResult().withNextLink("cvdrhvoodsot")
            .withValue(Arrays.asList(
                new ModelCapacityListResultValueItemInner().withLocation("dopcjwvnh")
                    .withProperties(new ModelSkuCapacityProperties()
                        .withModel(new DeploymentModel().withPublisher("mgxcxrslpm")
                            .withFormat("wuoegrpk")
                            .withName("wniyqsluicpd")
                            .withVersion("kzzlvmbmpaxmodf")
                            .withSource("efyw")
                            .withSourceAccount("pfvmwyhrfou"))
                        .withSkuName("iyzvqtmnub")
                        .withAvailableCapacity(71.15051F)
                        .withAvailableFinetuneCapacity(46.320225F)),
                new ModelCapacityListResultValueItemInner().withLocation("mocmbqfqvmk")
                    .withProperties(new ModelSkuCapacityProperties()
                        .withModel(new DeploymentModel().withPublisher("apvhelxprgly")
                            .withFormat("dd")
                            .withName("cbcuejrjxgciqi")
                            .withVersion("hos")
                            .withSource("dqrhzoymib")
                            .withSourceAccount("qyib"))
                        .withSkuName("tmhrkwofyyvoqacp")
                        .withAvailableCapacity(57.89401F)
                        .withAvailableFinetuneCapacity(79.0544F))));
        model = BinaryData.fromObject(model).toObject(ModelCapacityListResult.class);
        Assertions.assertEquals("cvdrhvoodsot", model.nextLink());
        Assertions.assertEquals("dopcjwvnh", model.value().get(0).location());
        Assertions.assertEquals("mgxcxrslpm", model.value().get(0).properties().model().publisher());
        Assertions.assertEquals("wuoegrpk", model.value().get(0).properties().model().format());
        Assertions.assertEquals("wniyqsluicpd", model.value().get(0).properties().model().name());
        Assertions.assertEquals("kzzlvmbmpaxmodf", model.value().get(0).properties().model().version());
        Assertions.assertEquals("efyw", model.value().get(0).properties().model().source());
        Assertions.assertEquals("pfvmwyhrfou", model.value().get(0).properties().model().sourceAccount());
        Assertions.assertEquals("iyzvqtmnub", model.value().get(0).properties().skuName());
        Assertions.assertEquals(71.15051F, model.value().get(0).properties().availableCapacity());
        Assertions.assertEquals(46.320225F, model.value().get(0).properties().availableFinetuneCapacity());
    }
}
