// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.fluent.models.ModelCapacityListResultValueItemInner;
import com.azure.resourcemanager.cognitiveservices.models.DeploymentModel;
import com.azure.resourcemanager.cognitiveservices.models.ModelCapacityListResult;
import com.azure.resourcemanager.cognitiveservices.models.ModelSkuCapacityProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ModelCapacityListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ModelCapacityListResult model = BinaryData.fromString(
            "{\"nextLink\":\"cuejrjxgci\",\"value\":[{\"location\":\"hos\",\"properties\":{\"model\":{\"publisher\":\"rhzo\",\"format\":\"i\",\"name\":\"rq\",\"version\":\"bahwfl\",\"source\":\"zdtmhrkwofy\",\"sourceAccount\":\"oqac\",\"callRateLimit\":{\"count\":57.89401,\"renewalPeriod\":79.0544,\"rules\":[{},{},{}]}},\"skuName\":\"wbwo\",\"availableCapacity\":26.065277,\"availableFinetuneCapacity\":81.16658},\"id\":\"rtdtkcnqxw\",\"name\":\"p\",\"type\":\"kulpiujwaasi\"}]}")
            .toObject(ModelCapacityListResult.class);
        Assertions.assertEquals("cuejrjxgci", model.nextLink());
        Assertions.assertEquals("hos", model.value().get(0).location());
        Assertions.assertEquals("rhzo", model.value().get(0).properties().model().publisher());
        Assertions.assertEquals("i", model.value().get(0).properties().model().format());
        Assertions.assertEquals("rq", model.value().get(0).properties().model().name());
        Assertions.assertEquals("bahwfl", model.value().get(0).properties().model().version());
        Assertions.assertEquals("zdtmhrkwofy", model.value().get(0).properties().model().source());
        Assertions.assertEquals("oqac", model.value().get(0).properties().model().sourceAccount());
        Assertions.assertEquals("wbwo", model.value().get(0).properties().skuName());
        Assertions.assertEquals(26.065277F, model.value().get(0).properties().availableCapacity());
        Assertions.assertEquals(81.16658F, model.value().get(0).properties().availableFinetuneCapacity());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ModelCapacityListResult model = new ModelCapacityListResult().withNextLink("cuejrjxgci")
            .withValue(Arrays.asList(new ModelCapacityListResultValueItemInner().withLocation("hos")
                .withProperties(new ModelSkuCapacityProperties()
                    .withModel(new DeploymentModel().withPublisher("rhzo")
                        .withFormat("i")
                        .withName("rq")
                        .withVersion("bahwfl")
                        .withSource("zdtmhrkwofy")
                        .withSourceAccount("oqac"))
                    .withSkuName("wbwo")
                    .withAvailableCapacity(26.065277F)
                    .withAvailableFinetuneCapacity(81.16658F))));
        model = BinaryData.fromObject(model).toObject(ModelCapacityListResult.class);
        Assertions.assertEquals("cuejrjxgci", model.nextLink());
        Assertions.assertEquals("hos", model.value().get(0).location());
        Assertions.assertEquals("rhzo", model.value().get(0).properties().model().publisher());
        Assertions.assertEquals("i", model.value().get(0).properties().model().format());
        Assertions.assertEquals("rq", model.value().get(0).properties().model().name());
        Assertions.assertEquals("bahwfl", model.value().get(0).properties().model().version());
        Assertions.assertEquals("zdtmhrkwofy", model.value().get(0).properties().model().source());
        Assertions.assertEquals("oqac", model.value().get(0).properties().model().sourceAccount());
        Assertions.assertEquals("wbwo", model.value().get(0).properties().skuName());
        Assertions.assertEquals(26.065277F, model.value().get(0).properties().availableCapacity());
        Assertions.assertEquals(81.16658F, model.value().get(0).properties().availableFinetuneCapacity());
    }
}
