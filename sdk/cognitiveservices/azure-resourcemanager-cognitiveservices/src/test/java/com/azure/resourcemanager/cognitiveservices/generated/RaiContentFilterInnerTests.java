// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.fluent.models.RaiContentFilterInner;
import com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties;
import com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentSource;
import org.junit.jupiter.api.Assertions;

public final class RaiContentFilterInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RaiContentFilterInner model = BinaryData.fromString(
            "{\"properties\":{\"name\":\"qtgqqqxhrnxr\",\"isMultiLevelFilter\":false,\"source\":\"Prompt\"},\"id\":\"isavok\",\"name\":\"dzf\",\"type\":\"azivjlfrqttbajl\"}")
            .toObject(RaiContentFilterInner.class);
        Assertions.assertEquals("qtgqqqxhrnxr", model.properties().name());
        Assertions.assertFalse(model.properties().isMultiLevelFilter());
        Assertions.assertEquals(RaiPolicyContentSource.PROMPT, model.properties().source());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RaiContentFilterInner model
            = new RaiContentFilterInner().withProperties(new RaiContentFilterProperties().withName("qtgqqqxhrnxr")
                .withIsMultiLevelFilter(false)
                .withSource(RaiPolicyContentSource.PROMPT));
        model = BinaryData.fromObject(model).toObject(RaiContentFilterInner.class);
        Assertions.assertEquals("qtgqqqxhrnxr", model.properties().name());
        Assertions.assertFalse(model.properties().isMultiLevelFilter());
        Assertions.assertEquals(RaiPolicyContentSource.PROMPT, model.properties().source());
    }
}
