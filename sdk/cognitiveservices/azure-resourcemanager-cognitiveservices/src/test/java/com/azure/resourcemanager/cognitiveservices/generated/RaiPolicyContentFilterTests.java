// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.models.ContentLevel;
import com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter;
import com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentSource;
import org.junit.jupiter.api.Assertions;

public final class RaiPolicyContentFilterTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RaiPolicyContentFilter model = BinaryData.fromString(
            "{\"name\":\"rykqgaifmvikl\",\"enabled\":false,\"severityThreshold\":\"Medium\",\"blocking\":true,\"source\":\"Prompt\"}")
            .toObject(RaiPolicyContentFilter.class);
        Assertions.assertEquals("rykqgaifmvikl", model.name());
        Assertions.assertFalse(model.enabled());
        Assertions.assertEquals(ContentLevel.MEDIUM, model.severityThreshold());
        Assertions.assertTrue(model.blocking());
        Assertions.assertEquals(RaiPolicyContentSource.PROMPT, model.source());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RaiPolicyContentFilter model = new RaiPolicyContentFilter().withName("rykqgaifmvikl")
            .withEnabled(false)
            .withSeverityThreshold(ContentLevel.MEDIUM)
            .withBlocking(true)
            .withSource(RaiPolicyContentSource.PROMPT);
        model = BinaryData.fromObject(model).toObject(RaiPolicyContentFilter.class);
        Assertions.assertEquals("rykqgaifmvikl", model.name());
        Assertions.assertFalse(model.enabled());
        Assertions.assertEquals(ContentLevel.MEDIUM, model.severityThreshold());
        Assertions.assertTrue(model.blocking());
        Assertions.assertEquals(RaiPolicyContentSource.PROMPT, model.source());
    }
}
