// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.models.ByPassSelection;
import com.azure.resourcemanager.cognitiveservices.models.IpRule;
import com.azure.resourcemanager.cognitiveservices.models.NetworkRuleAction;
import com.azure.resourcemanager.cognitiveservices.models.NetworkRuleSet;
import com.azure.resourcemanager.cognitiveservices.models.VirtualNetworkRule;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkRuleSetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkRuleSet model = BinaryData.fromString(
            "{\"defaultAction\":\"Deny\",\"bypass\":\"AzureServices\",\"ipRules\":[{\"value\":\"xj\"},{\"value\":\"prozvcputegjvwmf\"},{\"value\":\"atscmd\"},{\"value\":\"pjhulsuuvmkj\"}],\"virtualNetworkRules\":[{\"id\":\"rwfndiod\",\"state\":\"slwejdpvw\",\"ignoreMissingVnetServiceEndpoint\":false}]}")
            .toObject(NetworkRuleSet.class);
        Assertions.assertEquals(NetworkRuleAction.DENY, model.defaultAction());
        Assertions.assertEquals(ByPassSelection.AZURE_SERVICES, model.bypass());
        Assertions.assertEquals("xj", model.ipRules().get(0).value());
        Assertions.assertEquals("rwfndiod", model.virtualNetworkRules().get(0).id());
        Assertions.assertEquals("slwejdpvw", model.virtualNetworkRules().get(0).state());
        Assertions.assertFalse(model.virtualNetworkRules().get(0).ignoreMissingVnetServiceEndpoint());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkRuleSet model = new NetworkRuleSet().withDefaultAction(NetworkRuleAction.DENY)
            .withBypass(ByPassSelection.AZURE_SERVICES)
            .withIpRules(Arrays.asList(new IpRule().withValue("xj"), new IpRule().withValue("prozvcputegjvwmf"),
                new IpRule().withValue("atscmd"), new IpRule().withValue("pjhulsuuvmkj")))
            .withVirtualNetworkRules(Arrays.asList(new VirtualNetworkRule().withId("rwfndiod")
                .withState("slwejdpvw")
                .withIgnoreMissingVnetServiceEndpoint(false)));
        model = BinaryData.fromObject(model).toObject(NetworkRuleSet.class);
        Assertions.assertEquals(NetworkRuleAction.DENY, model.defaultAction());
        Assertions.assertEquals(ByPassSelection.AZURE_SERVICES, model.bypass());
        Assertions.assertEquals("xj", model.ipRules().get(0).value());
        Assertions.assertEquals("rwfndiod", model.virtualNetworkRules().get(0).id());
        Assertions.assertEquals("slwejdpvw", model.virtualNetworkRules().get(0).state());
        Assertions.assertFalse(model.virtualNetworkRules().get(0).ignoreMissingVnetServiceEndpoint());
    }
}
