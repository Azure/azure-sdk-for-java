// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterConfiguration;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NetworkSecurityPerimeterConfigurationsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"iuxqggvqr\",\"provisioningIssues\":[{\"name\":\"lwcjsqggjhffb\",\"properties\":{\"issueType\":\"rkijpeuqlsdxeqz\",\"severity\":\"x\",\"description\":\"wwmjs\",\"suggestedResourceIds\":[\"awwamecleqiouln\"],\"suggestedAccessRules\":[{},{}]}},{\"name\":\"oeojhto\",\"properties\":{\"issueType\":\"svidmytzlnglx\",\"severity\":\"ovyoanf\",\"description\":\"swqagywvtxigvjrk\",\"suggestedResourceIds\":[\"aeukyawohpm\",\"hqnucs\",\"lhsidsjtdl\"],\"suggestedAccessRules\":[{},{},{}]}},{\"name\":\"njg\",\"properties\":{\"issueType\":\"sv\",\"severity\":\"fcpu\",\"description\":\"e\",\"suggestedResourceIds\":[\"cciklhs\",\"ekrdr\",\"nxolriyehqb\"],\"suggestedAccessRules\":[{},{},{},{}]}}],\"networkSecurityPerimeter\":{\"id\":\"hydwbdbfgrlp\",\"perimeterGuid\":\"ytjlkesmmpath\",\"location\":\"ta\"},\"resourceAssociation\":{\"name\":\"an\",\"accessMode\":\"wllbv\"},\"profile\":{\"name\":\"sfftedousnktjtgr\",\"accessRulesVersion\":2376986574027159113,\"accessRules\":[{\"name\":\"kbeba\",\"properties\":{}},{\"name\":\"qbtxxwpf\",\"properties\":{}},{\"name\":\"zudrtpzk\",\"properties\":{}},{\"name\":\"boy\",\"properties\":{}}],\"diagnosticSettingsVersion\":5573114607045046591,\"enabledLogCategories\":[\"hmngqb\",\"dygisrzwnykd\",\"djchlr\"]}},\"id\":\"pwctofl\",\"name\":\"seac\",\"type\":\"hztxkbrfgd\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CognitiveServicesManager manager = CognitiveServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<NetworkSecurityPerimeterConfiguration> response = manager.networkSecurityPerimeterConfigurations()
            .list("aqktkrumzu", "dkyzbfvxov", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("lwcjsqggjhffb",
            response.iterator().next().properties().provisioningIssues().get(0).name());
        Assertions.assertEquals("rkijpeuqlsdxeqz",
            response.iterator().next().properties().provisioningIssues().get(0).properties().issueType());
        Assertions.assertEquals("x",
            response.iterator().next().properties().provisioningIssues().get(0).properties().severity());
        Assertions.assertEquals("wwmjs",
            response.iterator().next().properties().provisioningIssues().get(0).properties().description());
        Assertions.assertEquals("awwamecleqiouln",
            response.iterator()
                .next()
                .properties()
                .provisioningIssues()
                .get(0)
                .properties()
                .suggestedResourceIds()
                .get(0));
        Assertions.assertEquals("hydwbdbfgrlp",
            response.iterator().next().properties().networkSecurityPerimeter().id());
        Assertions.assertEquals("ytjlkesmmpath",
            response.iterator().next().properties().networkSecurityPerimeter().perimeterGuid());
        Assertions.assertEquals("ta", response.iterator().next().properties().networkSecurityPerimeter().location());
        Assertions.assertEquals("an", response.iterator().next().properties().resourceAssociation().name());
        Assertions.assertEquals("wllbv", response.iterator().next().properties().resourceAssociation().accessMode());
        Assertions.assertEquals("sfftedousnktjtgr", response.iterator().next().properties().profile().name());
        Assertions.assertEquals(2376986574027159113L,
            response.iterator().next().properties().profile().accessRulesVersion());
        Assertions.assertEquals("kbeba", response.iterator().next().properties().profile().accessRules().get(0).name());
        Assertions.assertEquals(5573114607045046591L,
            response.iterator().next().properties().profile().diagnosticSettingsVersion());
        Assertions.assertEquals("hmngqb",
            response.iterator().next().properties().profile().enabledLogCategories().get(0));
    }
}
