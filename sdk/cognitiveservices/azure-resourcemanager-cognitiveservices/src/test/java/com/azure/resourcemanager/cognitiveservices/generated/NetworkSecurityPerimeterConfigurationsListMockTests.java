// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterConfiguration;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NetworkSecurityPerimeterConfigurationsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"uhkslg\",\"provisioningIssues\":[{\"name\":\"hueoijyzcqyp\",\"properties\":{\"issueType\":\"ufgsyfejyvdw\",\"severity\":\"xptpqaya\",\"description\":\"ncfgybmxsnxoc\",\"suggestedResourceIds\":[\"l\",\"j\",\"poy\",\"g\"],\"suggestedAccessRules\":[{},{},{}]}}],\"networkSecurityPerimeter\":{\"id\":\"xdbdljzgdyrcvu\",\"perimeterGuid\":\"sgzlrqhb\",\"location\":\"qogdx\"},\"resourceAssociation\":{\"name\":\"fpyxxtjlflec\",\"accessMode\":\"inxojjlux\"},\"profile\":{\"name\":\"ilz\",\"accessRulesVersion\":6188065114013522658,\"accessRules\":[{\"name\":\"uezayov\",\"properties\":{}},{\"name\":\"qloto\",\"properties\":{}}],\"diagnosticSettingsVersion\":3718849288716769479,\"enabledLogCategories\":[\"znkcqwwxwjy\"]}},\"id\":\"fgwhnkbtlwljs\",\"name\":\"mctsnldkpwo\",\"type\":\"gisubxbt\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CognitiveServicesManager manager = CognitiveServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<NetworkSecurityPerimeterConfiguration> response = manager.networkSecurityPerimeterConfigurations()
            .list("ttkgsux", "nrswgkpjhboyik", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("hueoijyzcqyp",
            response.iterator().next().properties().provisioningIssues().get(0).name());
        Assertions.assertEquals("ufgsyfejyvdw",
            response.iterator().next().properties().provisioningIssues().get(0).properties().issueType());
        Assertions.assertEquals("xptpqaya",
            response.iterator().next().properties().provisioningIssues().get(0).properties().severity());
        Assertions.assertEquals("ncfgybmxsnxoc",
            response.iterator().next().properties().provisioningIssues().get(0).properties().description());
        Assertions.assertEquals("l",
            response.iterator()
                .next()
                .properties()
                .provisioningIssues()
                .get(0)
                .properties()
                .suggestedResourceIds()
                .get(0));
        Assertions.assertEquals("xdbdljzgdyrcvu",
            response.iterator().next().properties().networkSecurityPerimeter().id());
        Assertions.assertEquals("sgzlrqhb",
            response.iterator().next().properties().networkSecurityPerimeter().perimeterGuid());
        Assertions.assertEquals("qogdx", response.iterator().next().properties().networkSecurityPerimeter().location());
        Assertions.assertEquals("fpyxxtjlflec", response.iterator().next().properties().resourceAssociation().name());
        Assertions.assertEquals("inxojjlux",
            response.iterator().next().properties().resourceAssociation().accessMode());
        Assertions.assertEquals("ilz", response.iterator().next().properties().profile().name());
        Assertions.assertEquals(6188065114013522658L,
            response.iterator().next().properties().profile().accessRulesVersion());
        Assertions.assertEquals("uezayov",
            response.iterator().next().properties().profile().accessRules().get(0).name());
        Assertions.assertEquals(3718849288716769479L,
            response.iterator().next().properties().profile().diagnosticSettingsVersion());
        Assertions.assertEquals("znkcqwwxwjy",
            response.iterator().next().properties().profile().enabledLogCategories().get(0));
    }
}
