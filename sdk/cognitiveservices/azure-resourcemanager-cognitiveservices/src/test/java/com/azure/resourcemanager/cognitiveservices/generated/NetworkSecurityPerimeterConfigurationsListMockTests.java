// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterConfiguration;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NetworkSecurityPerimeterConfigurationsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"olnthb\",\"provisioningIssues\":[{\"name\":\"zukwdrnzkj\",\"properties\":{\"issueType\":\"ceyjnc\",\"severity\":\"lfuyfjbpfiddhlr\",\"description\":\"zcqy\",\"suggestedResourceIds\":[\"rfuiocusel\",\"k\",\"sazrhxuddqmdtff\"],\"suggestedAccessRules\":[{}]}},{\"name\":\"rkkhmwdmdlgy\",\"properties\":{\"issueType\":\"okwtjawhvagnqfqq\",\"severity\":\"cvmyolcaymjchtv\",\"description\":\"vlaqdnzyzawa\",\"suggestedResourceIds\":[\"qkokbczothy\",\"gobllms\",\"wgwima\",\"neakh\"],\"suggestedAccessRules\":[{}]}},{\"name\":\"bcyanrfvqtvk\",\"properties\":{\"issueType\":\"oog\",\"severity\":\"fnaoaqym\",\"description\":\"ctopuowyrnsk\",\"suggestedResourceIds\":[\"quhczygxvh\",\"jpxecxqnwhsco\",\"awmvgxs\",\"pknpwirfljfewxq\"],\"suggestedAccessRules\":[{},{},{}]}},{\"name\":\"ud\",\"properties\":{\"issueType\":\"kaprhknqiijg\",\"severity\":\"cdgmoqu\",\"description\":\"ihkkyowl\",\"suggestedResourceIds\":[\"uwhldxwhieproqks\",\"fxmcvprstvk\",\"tbfjtdyotnplf\"],\"suggestedAccessRules\":[{},{},{},{}]}}],\"networkSecurityPerimeter\":{\"id\":\"cqrq\",\"perimeterGuid\":\"etjt\",\"location\":\"hutfdoadtxopge\"},\"resourceAssociation\":{\"name\":\"dkmdzgsszx\",\"accessMode\":\"tkbbxuhar\"},\"profile\":{\"name\":\"rncclabv\",\"accessRulesVersion\":5518516719089735498,\"accessRules\":[{\"name\":\"xczbmyqjoghdsaid\",\"properties\":{}}],\"diagnosticSettingsVersion\":9011503856576673885,\"enabledLogCategories\":[\"vdxxurntujmoilun\",\"emhdeeljslky\",\"zdsfzjuegr\",\"rhtslejtvxjnxvgj\"]}},\"id\":\"iobpnjodf\",\"name\":\"bj\",\"type\":\"qwm\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CognitiveServicesManager manager = CognitiveServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<NetworkSecurityPerimeterConfiguration> response = manager.networkSecurityPerimeterConfigurations()
            .list("mkczynuhhoqe", "shavljqkx", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("zukwdrnzkj",
            response.iterator().next().properties().provisioningIssues().get(0).name());
        Assertions.assertEquals("ceyjnc",
            response.iterator().next().properties().provisioningIssues().get(0).properties().issueType());
        Assertions.assertEquals("lfuyfjbpfiddhlr",
            response.iterator().next().properties().provisioningIssues().get(0).properties().severity());
        Assertions.assertEquals("zcqy",
            response.iterator().next().properties().provisioningIssues().get(0).properties().description());
        Assertions.assertEquals("rfuiocusel",
            response.iterator()
                .next()
                .properties()
                .provisioningIssues()
                .get(0)
                .properties()
                .suggestedResourceIds()
                .get(0));
        Assertions.assertEquals("cqrq", response.iterator().next().properties().networkSecurityPerimeter().id());
        Assertions.assertEquals("etjt",
            response.iterator().next().properties().networkSecurityPerimeter().perimeterGuid());
        Assertions.assertEquals("hutfdoadtxopge",
            response.iterator().next().properties().networkSecurityPerimeter().location());
        Assertions.assertEquals("dkmdzgsszx", response.iterator().next().properties().resourceAssociation().name());
        Assertions.assertEquals("tkbbxuhar",
            response.iterator().next().properties().resourceAssociation().accessMode());
        Assertions.assertEquals("rncclabv", response.iterator().next().properties().profile().name());
        Assertions.assertEquals(5518516719089735498L,
            response.iterator().next().properties().profile().accessRulesVersion());
        Assertions.assertEquals("xczbmyqjoghdsaid",
            response.iterator().next().properties().profile().accessRules().get(0).name());
        Assertions.assertEquals(9011503856576673885L,
            response.iterator().next().properties().profile().diagnosticSettingsVersion());
        Assertions.assertEquals("vdxxurntujmoilun",
            response.iterator().next().properties().profile().enabledLogCategories().get(0));
    }
}
