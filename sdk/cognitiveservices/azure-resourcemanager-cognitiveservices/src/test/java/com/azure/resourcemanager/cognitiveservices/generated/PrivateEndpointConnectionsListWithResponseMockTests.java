// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager;
import com.azure.resourcemanager.cognitiveservices.models.PrivateEndpointConnectionListResult;
import com.azure.resourcemanager.cognitiveservices.models.PrivateEndpointServiceConnectionStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PrivateEndpointConnectionsListWithResponseMockTests {
    @Test
    public void testListWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"privateEndpoint\":{\"id\":\"eg\"},\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"zxwhcansymoyqhlw\",\"actionsRequired\":\"divb\"},\"provisioningState\":\"Deleting\",\"groupIds\":[\"mf\",\"juwasqvdaeyyguxa\"]},\"location\":\"qzhzbezkgimsi\",\"etag\":\"asi\",\"id\":\"ddyvvjskgfmo\",\"name\":\"wa\",\"type\":\"pqg\"},{\"properties\":{\"privateEndpoint\":{\"id\":\"a\"},\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"jhhn\",\"actionsRequired\":\"zybbj\"},\"provisioningState\":\"Succeeded\",\"groupIds\":[\"syxkyxvxevblb\",\"ednljl\",\"geuaulx\",\"nsmjbnkppxynen\"]},\"location\":\"xeizzg\",\"etag\":\"lnsrmffe\",\"id\":\"cxcktpi\",\"name\":\"merteeammxqiek\",\"type\":\"kzddrtkgdojbmxva\"},{\"properties\":{\"privateEndpoint\":{\"id\":\"de\"},\"privateLinkServiceConnectionState\":{\"status\":\"Rejected\",\"description\":\"cuijpxt\",\"actionsRequired\":\"uwprtujwsawd\"},\"provisioningState\":\"Failed\",\"groupIds\":[\"bxv\",\"titvtzeexavox\"]},\"location\":\"lecdmdqbw\",\"etag\":\"pqtgsfjac\",\"id\":\"slhhxudbxv\",\"name\":\"d\",\"type\":\"tnsi\"},{\"properties\":{\"privateEndpoint\":{\"id\":\"z\"},\"privateLinkServiceConnectionState\":{\"status\":\"Pending\",\"description\":\"ckdlpag\",\"actionsRequired\":\"cxfailcfxwmdboxd\"},\"provisioningState\":\"Failed\",\"groupIds\":[\"ufqobrjlnac\",\"cc\",\"knh\",\"kizvytn\"]},\"location\":\"uljraae\",\"etag\":\"nok\",\"id\":\"gukkjqnvbroy\",\"name\":\"a\",\"type\":\"xulcdisdos\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CognitiveServicesManager manager = CognitiveServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PrivateEndpointConnectionListResult response = manager.privateEndpointConnections()
            .listWithResponse("awaoqvmmbnpqfrt", "lkzmegnitgvkxl", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.APPROVED,
            response.value().get(0).properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("zxwhcansymoyqhlw",
            response.value().get(0).properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("divb",
            response.value().get(0).properties().privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("mf", response.value().get(0).properties().groupIds().get(0));
        Assertions.assertEquals("qzhzbezkgimsi", response.value().get(0).location());
    }
}
