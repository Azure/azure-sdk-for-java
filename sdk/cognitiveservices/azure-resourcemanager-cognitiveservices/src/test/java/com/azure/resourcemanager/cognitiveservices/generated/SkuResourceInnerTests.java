// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.fluent.models.SkuResourceInner;
import com.azure.resourcemanager.cognitiveservices.models.CapacityConfig;
import com.azure.resourcemanager.cognitiveservices.models.Sku;
import com.azure.resourcemanager.cognitiveservices.models.SkuTier;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SkuResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SkuResourceInner model = BinaryData.fromString(
            "{\"resourceType\":\"df\",\"sku\":{\"name\":\"waezkojvd\",\"tier\":\"Basic\",\"size\":\"oqouicybxarzgszu\",\"family\":\"x\",\"capacity\":95404001},\"capacity\":{\"minimum\":1114621463,\"maximum\":2028743450,\"step\":1543353321,\"default\":1108967269,\"allowedValues\":[790260334,1660457179]}}")
            .toObject(SkuResourceInner.class);
        Assertions.assertEquals("df", model.resourceType());
        Assertions.assertEquals("waezkojvd", model.sku().name());
        Assertions.assertEquals(SkuTier.BASIC, model.sku().tier());
        Assertions.assertEquals("oqouicybxarzgszu", model.sku().size());
        Assertions.assertEquals("x", model.sku().family());
        Assertions.assertEquals(95404001, model.sku().capacity());
        Assertions.assertEquals(1114621463, model.capacity().minimum());
        Assertions.assertEquals(2028743450, model.capacity().maximum());
        Assertions.assertEquals(1543353321, model.capacity().step());
        Assertions.assertEquals(1108967269, model.capacity().defaultProperty());
        Assertions.assertEquals(790260334, model.capacity().allowedValues().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SkuResourceInner model = new SkuResourceInner().withResourceType("df")
            .withSku(new Sku().withName("waezkojvd")
                .withTier(SkuTier.BASIC)
                .withSize("oqouicybxarzgszu")
                .withFamily("x")
                .withCapacity(95404001))
            .withCapacity(new CapacityConfig().withMinimum(1114621463)
                .withMaximum(2028743450)
                .withStep(1543353321)
                .withDefaultProperty(1108967269)
                .withAllowedValues(Arrays.asList(790260334, 1660457179)));
        model = BinaryData.fromObject(model).toObject(SkuResourceInner.class);
        Assertions.assertEquals("df", model.resourceType());
        Assertions.assertEquals("waezkojvd", model.sku().name());
        Assertions.assertEquals(SkuTier.BASIC, model.sku().tier());
        Assertions.assertEquals("oqouicybxarzgszu", model.sku().size());
        Assertions.assertEquals("x", model.sku().family());
        Assertions.assertEquals(95404001, model.sku().capacity());
        Assertions.assertEquals(1114621463, model.capacity().minimum());
        Assertions.assertEquals(2028743450, model.capacity().maximum());
        Assertions.assertEquals(1543353321, model.capacity().step());
        Assertions.assertEquals(1108967269, model.capacity().defaultProperty());
        Assertions.assertEquals(790260334, model.capacity().allowedValues().get(0));
    }
}
