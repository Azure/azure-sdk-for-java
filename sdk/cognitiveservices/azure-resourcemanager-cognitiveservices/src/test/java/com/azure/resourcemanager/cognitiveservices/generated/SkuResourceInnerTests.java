// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.fluent.models.SkuResourceInner;
import com.azure.resourcemanager.cognitiveservices.models.CapacityConfig;
import com.azure.resourcemanager.cognitiveservices.models.Sku;
import com.azure.resourcemanager.cognitiveservices.models.SkuTier;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SkuResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SkuResourceInner model = BinaryData.fromString(
            "{\"resourceType\":\"nyowxwlmdjrkvfg\",\"sku\":{\"name\":\"fvpdbo\",\"tier\":\"Basic\",\"size\":\"zsjqlh\",\"family\":\"r\",\"capacity\":1873747723},\"capacity\":{\"minimum\":180588113,\"maximum\":1262026177,\"step\":972824299,\"default\":1566726508,\"allowedValues\":[1573874006,370586550]}}")
            .toObject(SkuResourceInner.class);
        Assertions.assertEquals("nyowxwlmdjrkvfg", model.resourceType());
        Assertions.assertEquals("fvpdbo", model.sku().name());
        Assertions.assertEquals(SkuTier.BASIC, model.sku().tier());
        Assertions.assertEquals("zsjqlh", model.sku().size());
        Assertions.assertEquals("r", model.sku().family());
        Assertions.assertEquals(1873747723, model.sku().capacity());
        Assertions.assertEquals(180588113, model.capacity().minimum());
        Assertions.assertEquals(1262026177, model.capacity().maximum());
        Assertions.assertEquals(972824299, model.capacity().step());
        Assertions.assertEquals(1566726508, model.capacity().defaultProperty());
        Assertions.assertEquals(1573874006, model.capacity().allowedValues().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SkuResourceInner model = new SkuResourceInner().withResourceType("nyowxwlmdjrkvfg")
            .withSku(new Sku().withName("fvpdbo")
                .withTier(SkuTier.BASIC)
                .withSize("zsjqlh")
                .withFamily("r")
                .withCapacity(1873747723))
            .withCapacity(new CapacityConfig().withMinimum(180588113)
                .withMaximum(1262026177)
                .withStep(972824299)
                .withDefaultProperty(1566726508)
                .withAllowedValues(Arrays.asList(1573874006, 370586550)));
        model = BinaryData.fromObject(model).toObject(SkuResourceInner.class);
        Assertions.assertEquals("nyowxwlmdjrkvfg", model.resourceType());
        Assertions.assertEquals("fvpdbo", model.sku().name());
        Assertions.assertEquals(SkuTier.BASIC, model.sku().tier());
        Assertions.assertEquals("zsjqlh", model.sku().size());
        Assertions.assertEquals("r", model.sku().family());
        Assertions.assertEquals(1873747723, model.sku().capacity());
        Assertions.assertEquals(180588113, model.capacity().minimum());
        Assertions.assertEquals(1262026177, model.capacity().maximum());
        Assertions.assertEquals(972824299, model.capacity().step());
        Assertions.assertEquals(1566726508, model.capacity().defaultProperty());
        Assertions.assertEquals(1573874006, model.capacity().allowedValues().get(0));
    }
}
