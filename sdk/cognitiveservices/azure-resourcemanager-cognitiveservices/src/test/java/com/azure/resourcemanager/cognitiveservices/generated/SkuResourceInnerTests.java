// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.fluent.models.SkuResourceInner;
import com.azure.resourcemanager.cognitiveservices.models.CapacityConfig;
import com.azure.resourcemanager.cognitiveservices.models.Sku;
import com.azure.resourcemanager.cognitiveservices.models.SkuTier;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SkuResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SkuResourceInner model = BinaryData.fromString(
            "{\"resourceType\":\"deibqip\",\"sku\":{\"name\":\"ghvxndzwmkrefa\",\"tier\":\"Free\",\"size\":\"rwkq\",\"family\":\"hgbijt\",\"capacity\":1921447285},\"capacity\":{\"minimum\":394204922,\"maximum\":1033603649,\"step\":1988757032,\"default\":1529871140,\"allowedValues\":[1037462008,838227429,1939074971,1059509232]}}")
            .toObject(SkuResourceInner.class);
        Assertions.assertEquals("deibqip", model.resourceType());
        Assertions.assertEquals("ghvxndzwmkrefa", model.sku().name());
        Assertions.assertEquals(SkuTier.FREE, model.sku().tier());
        Assertions.assertEquals("rwkq", model.sku().size());
        Assertions.assertEquals("hgbijt", model.sku().family());
        Assertions.assertEquals(1921447285, model.sku().capacity());
        Assertions.assertEquals(394204922, model.capacity().minimum());
        Assertions.assertEquals(1033603649, model.capacity().maximum());
        Assertions.assertEquals(1988757032, model.capacity().step());
        Assertions.assertEquals(1529871140, model.capacity().defaultProperty());
        Assertions.assertEquals(1037462008, model.capacity().allowedValues().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SkuResourceInner model = new SkuResourceInner().withResourceType("deibqip")
            .withSku(new Sku().withName("ghvxndzwmkrefa")
                .withTier(SkuTier.FREE)
                .withSize("rwkq")
                .withFamily("hgbijt")
                .withCapacity(1921447285))
            .withCapacity(new CapacityConfig().withMinimum(394204922)
                .withMaximum(1033603649)
                .withStep(1988757032)
                .withDefaultProperty(1529871140)
                .withAllowedValues(Arrays.asList(1037462008, 838227429, 1939074971, 1059509232)));
        model = BinaryData.fromObject(model).toObject(SkuResourceInner.class);
        Assertions.assertEquals("deibqip", model.resourceType());
        Assertions.assertEquals("ghvxndzwmkrefa", model.sku().name());
        Assertions.assertEquals(SkuTier.FREE, model.sku().tier());
        Assertions.assertEquals("rwkq", model.sku().size());
        Assertions.assertEquals("hgbijt", model.sku().family());
        Assertions.assertEquals(1921447285, model.sku().capacity());
        Assertions.assertEquals(394204922, model.capacity().minimum());
        Assertions.assertEquals(1033603649, model.capacity().maximum());
        Assertions.assertEquals(1988757032, model.capacity().step());
        Assertions.assertEquals(1529871140, model.capacity().defaultProperty());
        Assertions.assertEquals(1037462008, model.capacity().allowedValues().get(0));
    }
}
