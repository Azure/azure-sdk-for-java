// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager;
import com.azure.resourcemanager.cognitiveservices.models.ContentLevel;
import com.azure.resourcemanager.cognitiveservices.models.RaiPolicy;
import com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentSource;
import com.azure.resourcemanager.cognitiveservices.models.RaiPolicyMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RaiPoliciesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"etag\":\"aydb\",\"tags\":{\"lcfn\":\"qy\"},\"properties\":{\"type\":\"UserManaged\",\"mode\":\"Asynchronous_filter\",\"basePolicyName\":\"lgwqkpm\",\"contentFilters\":[{\"name\":\"tauolawiubmom\",\"enabled\":true,\"severityThreshold\":\"Low\",\"blocking\":true,\"source\":\"Completion\"},{\"name\":\"lohewjjmajnkdflq\",\"enabled\":false,\"severityThreshold\":\"Medium\",\"blocking\":false,\"source\":\"Completion\"}],\"customBlocklists\":[{\"source\":\"Completion\",\"blocklistName\":\"jo\",\"blocking\":true},{\"source\":\"Completion\",\"blocklistName\":\"tryegpkh\",\"blocking\":true}],\"customTopics\":[{\"source\":\"Completion\",\"topicName\":\"wkbfokxkhupzer\",\"blocking\":false},{\"source\":\"Prompt\",\"topicName\":\"cdr\",\"blocking\":true},{\"source\":\"Completion\",\"topicName\":\"ftzgy\",\"blocking\":false}]},\"id\":\"lugekdfqnhtt\",\"name\":\"do\",\"type\":\"rczfjjnnuxxr\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CognitiveServicesManager manager = CognitiveServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        RaiPolicy response = manager.raiPolicies()
            .getWithResponse("knsjulugd", "bnhrxlelfjhkeiz", "pihtdmiwjekpt", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("qy", response.tags().get("lcfn"));
        Assertions.assertEquals(RaiPolicyMode.ASYNCHRONOUS_FILTER, response.properties().mode());
        Assertions.assertEquals("lgwqkpm", response.properties().basePolicyName());
        Assertions.assertEquals("tauolawiubmom", response.properties().contentFilters().get(0).name());
        Assertions.assertTrue(response.properties().contentFilters().get(0).enabled());
        Assertions.assertEquals(ContentLevel.LOW, response.properties().contentFilters().get(0).severityThreshold());
        Assertions.assertTrue(response.properties().contentFilters().get(0).blocking());
        Assertions.assertEquals(RaiPolicyContentSource.COMPLETION,
            response.properties().contentFilters().get(0).source());
        Assertions.assertEquals("jo", response.properties().customBlocklists().get(0).blocklistName());
        Assertions.assertTrue(response.properties().customBlocklists().get(0).blocking());
        Assertions.assertEquals(RaiPolicyContentSource.COMPLETION,
            response.properties().customBlocklists().get(0).source());
        Assertions.assertEquals("wkbfokxkhupzer", response.properties().customTopics().get(0).topicName());
        Assertions.assertFalse(response.properties().customTopics().get(0).blocking());
        Assertions.assertEquals(RaiPolicyContentSource.COMPLETION,
            response.properties().customTopics().get(0).source());
    }
}
