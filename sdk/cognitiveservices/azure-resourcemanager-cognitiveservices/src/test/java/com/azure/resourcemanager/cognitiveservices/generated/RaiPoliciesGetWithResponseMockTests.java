// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager;
import com.azure.resourcemanager.cognitiveservices.models.ContentLevel;
import com.azure.resourcemanager.cognitiveservices.models.RaiPolicy;
import com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentSource;
import com.azure.resourcemanager.cognitiveservices.models.RaiPolicyMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RaiPoliciesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"etag\":\"srhkhgsnxuwwkpph\",\"tags\":{\"wzacnmw\":\"bzxlbzxomeikjc\",\"oyfpuq\":\"fsuqtaazyqbxy\"},\"properties\":{\"type\":\"SystemManaged\",\"mode\":\"Deferred\",\"basePolicyName\":\"hdjzqdcadwvpsoz\",\"contentFilters\":[{\"name\":\"jriyb\",\"enabled\":false,\"severityThreshold\":\"Medium\",\"blocking\":true,\"source\":\"Completion\"}],\"customBlocklists\":[{\"source\":\"Completion\",\"blocklistName\":\"kgvfnmxaursqf\",\"blocking\":false}]},\"id\":\"tyibuyvpirfqjpnq\",\"name\":\"oowsbe\",\"type\":\"e\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CognitiveServicesManager manager = CognitiveServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        RaiPolicy response = manager.raiPolicies()
            .getWithResponse("uiyqvldaswvppi", "qqzlgcndhz", "rr", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("bzxlbzxomeikjc", response.tags().get("wzacnmw"));
        Assertions.assertEquals(RaiPolicyMode.DEFERRED, response.properties().mode());
        Assertions.assertEquals("hdjzqdcadwvpsoz", response.properties().basePolicyName());
        Assertions.assertEquals("jriyb", response.properties().contentFilters().get(0).name());
        Assertions.assertEquals(false, response.properties().contentFilters().get(0).enabled());
        Assertions.assertEquals(ContentLevel.MEDIUM, response.properties().contentFilters().get(0).severityThreshold());
        Assertions.assertEquals(true, response.properties().contentFilters().get(0).blocking());
        Assertions.assertEquals(RaiPolicyContentSource.COMPLETION,
            response.properties().contentFilters().get(0).source());
        Assertions.assertEquals("kgvfnmxaursqf", response.properties().customBlocklists().get(0).blocklistName());
        Assertions.assertEquals(false, response.properties().customBlocklists().get(0).blocking());
        Assertions.assertEquals(RaiPolicyContentSource.COMPLETION,
            response.properties().customBlocklists().get(0).source());
    }
}
