// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager;
import com.azure.resourcemanager.cognitiveservices.models.ContentLevel;
import com.azure.resourcemanager.cognitiveservices.models.RaiPolicy;
import com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentSource;
import com.azure.resourcemanager.cognitiveservices.models.RaiPolicyMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RaiPoliciesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"etag\":\"wzzoslpk\",\"tags\":{\"emqbmfuvqarwzxuq\":\"glwkzpgajsqj\",\"fgtdmbvx\":\"ebluimmbwx\",\"budbt\":\"kraokq\",\"ke\":\"aokbavlyttaaknwf\"},\"properties\":{\"type\":\"SystemManaged\",\"mode\":\"Asynchronous_filter\",\"basePolicyName\":\"jdigatole\",\"contentFilters\":[{\"name\":\"ctnanqimwbzxp\",\"enabled\":true,\"severityThreshold\":\"Low\",\"blocking\":true,\"source\":\"Prompt\"},{\"name\":\"nlaimouxwksqmudm\",\"enabled\":false,\"severityThreshold\":\"Low\",\"blocking\":false,\"source\":\"Prompt\"},{\"name\":\"swswjrkbq\",\"enabled\":true,\"severityThreshold\":\"Medium\",\"blocking\":false,\"source\":\"Completion\"},{\"name\":\"scyrfwbivqv\",\"enabled\":false,\"severityThreshold\":\"Low\",\"blocking\":true,\"source\":\"Prompt\"}],\"customBlocklists\":[{\"source\":\"Prompt\",\"blocklistName\":\"yqe\",\"blocking\":false},{\"source\":\"Completion\",\"blocklistName\":\"ikcdrdaasax\",\"blocking\":true},{\"source\":\"Completion\",\"blocklistName\":\"kwiy\",\"blocking\":false},{\"source\":\"Prompt\",\"blocklistName\":\"srnawnvzmln\",\"blocking\":true}]},\"id\":\"wsxvjab\",\"name\":\"qqax\",\"type\":\"yvymcnudndo\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CognitiveServicesManager manager = CognitiveServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        RaiPolicy response = manager.raiPolicies()
            .getWithResponse("nxtminklog", "svtzarhzv", "nsqktc", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("glwkzpgajsqj", response.tags().get("emqbmfuvqarwzxuq"));
        Assertions.assertEquals(RaiPolicyMode.ASYNCHRONOUS_FILTER, response.properties().mode());
        Assertions.assertEquals("jdigatole", response.properties().basePolicyName());
        Assertions.assertEquals("ctnanqimwbzxp", response.properties().contentFilters().get(0).name());
        Assertions.assertTrue(response.properties().contentFilters().get(0).enabled());
        Assertions.assertEquals(ContentLevel.LOW, response.properties().contentFilters().get(0).severityThreshold());
        Assertions.assertTrue(response.properties().contentFilters().get(0).blocking());
        Assertions.assertEquals(RaiPolicyContentSource.PROMPT, response.properties().contentFilters().get(0).source());
        Assertions.assertEquals("yqe", response.properties().customBlocklists().get(0).blocklistName());
        Assertions.assertFalse(response.properties().customBlocklists().get(0).blocking());
        Assertions.assertEquals(RaiPolicyContentSource.PROMPT,
            response.properties().customBlocklists().get(0).source());
    }
}
