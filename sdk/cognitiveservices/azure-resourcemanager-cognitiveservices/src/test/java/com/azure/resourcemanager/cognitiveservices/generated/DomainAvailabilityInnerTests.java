// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.fluent.models.DomainAvailabilityInner;
import org.junit.jupiter.api.Assertions;

public final class DomainAvailabilityInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DomainAvailabilityInner model = BinaryData.fromString(
            "{\"isSubdomainAvailable\":true,\"reason\":\"zrpzb\",\"subdomainName\":\"ckqqzqioxiysui\",\"type\":\"ynkedyatrwyhqmib\",\"kind\":\"hwit\"}")
            .toObject(DomainAvailabilityInner.class);
        Assertions.assertTrue(model.isSubdomainAvailable());
        Assertions.assertEquals("zrpzb", model.reason());
        Assertions.assertEquals("ckqqzqioxiysui", model.subdomainName());
        Assertions.assertEquals("ynkedyatrwyhqmib", model.type());
        Assertions.assertEquals("hwit", model.kind());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DomainAvailabilityInner model = new DomainAvailabilityInner().withIsSubdomainAvailable(true)
            .withReason("zrpzb")
            .withSubdomainName("ckqqzqioxiysui")
            .withType("ynkedyatrwyhqmib")
            .withKind("hwit");
        model = BinaryData.fromObject(model).toObject(DomainAvailabilityInner.class);
        Assertions.assertTrue(model.isSubdomainAvailable());
        Assertions.assertEquals("zrpzb", model.reason());
        Assertions.assertEquals("ckqqzqioxiysui", model.subdomainName());
        Assertions.assertEquals("ynkedyatrwyhqmib", model.type());
        Assertions.assertEquals("hwit", model.kind());
    }
}
