// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.fluent.models.DomainAvailabilityInner;
import org.junit.jupiter.api.Assertions;

public final class DomainAvailabilityInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DomainAvailabilityInner model = BinaryData.fromString(
            "{\"isSubdomainAvailable\":true,\"reason\":\"qiy\",\"subdomainName\":\"orzihle\",\"type\":\"jswsrmslyz\",\"kind\":\"zbchckqqzqioxiy\"}")
            .toObject(DomainAvailabilityInner.class);
        Assertions.assertEquals(true, model.isSubdomainAvailable());
        Assertions.assertEquals("qiy", model.reason());
        Assertions.assertEquals("orzihle", model.subdomainName());
        Assertions.assertEquals("jswsrmslyz", model.type());
        Assertions.assertEquals("zbchckqqzqioxiy", model.kind());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DomainAvailabilityInner model = new DomainAvailabilityInner().withIsSubdomainAvailable(true)
            .withReason("qiy")
            .withSubdomainName("orzihle")
            .withType("jswsrmslyz")
            .withKind("zbchckqqzqioxiy");
        model = BinaryData.fromObject(model).toObject(DomainAvailabilityInner.class);
        Assertions.assertEquals(true, model.isSubdomainAvailable());
        Assertions.assertEquals("qiy", model.reason());
        Assertions.assertEquals("orzihle", model.subdomainName());
        Assertions.assertEquals("jswsrmslyz", model.type());
        Assertions.assertEquals("zbchckqqzqioxiy", model.kind());
    }
}
