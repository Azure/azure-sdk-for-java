// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeter;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRule;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRuleProperties;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterProfileInfo;
import com.azure.resourcemanager.cognitiveservices.models.NspAccessRuleDirection;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkSecurityPerimeterProfileInfoTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkSecurityPerimeterProfileInfo model = BinaryData.fromString(
            "{\"name\":\"jddtvqct\",\"accessRulesVersion\":3995165957523237174,\"accessRules\":[{\"name\":\"ukm\",\"properties\":{\"direction\":\"Inbound\",\"addressPrefixes\":[\"pndzaapmudqmeq\"],\"subscriptions\":[{\"id\":\"ibudqwy\"}],\"networkSecurityPerimeters\":[{\"id\":\"ybpmzznrtffyaq\",\"perimeterGuid\":\"mhh\",\"location\":\"oqaqhvseufuq\"},{\"id\":\"xpdlcgqlsis\",\"perimeterGuid\":\"qfrddgam\",\"location\":\"hiosrsjuiv\"},{\"id\":\"disyirnxz\",\"perimeterGuid\":\"zexrxzbujrt\",\"location\":\"qvwre\"},{\"id\":\"h\",\"perimeterGuid\":\"lnzonzlrpiqywn\",\"location\":\"jtszcof\"}],\"fullyQualifiedDomainNames\":[\"htd\"]}},{\"name\":\"bjkvreljeamu\",\"properties\":{\"direction\":\"Outbound\",\"addressPrefixes\":[\"vuanashcxlp\"],\"subscriptions\":[{\"id\":\"bdkelvidizo\"},{\"id\":\"db\"}],\"networkSecurityPerimeters\":[{\"id\":\"monfdgnwncypuuww\",\"perimeterGuid\":\"v\",\"location\":\"jctzenkei\"},{\"id\":\"zhmkdasvflyh\",\"perimeterGuid\":\"cu\",\"location\":\"hxgsrboldfor\"}],\"fullyQualifiedDomainNames\":[\"jlvizbfhfovva\",\"qpbtuodxes\",\"abbelawumuaslzk\"]}}],\"diagnosticSettingsVersion\":2589313714101269318,\"enabledLogCategories\":[\"cqucwyhahnom\",\"rkywuhpsvfuu\"]}")
            .toObject(NetworkSecurityPerimeterProfileInfo.class);
        Assertions.assertEquals("jddtvqct", model.name());
        Assertions.assertEquals(3995165957523237174L, model.accessRulesVersion());
        Assertions.assertEquals("ukm", model.accessRules().get(0).name());
        Assertions.assertEquals(NspAccessRuleDirection.INBOUND, model.accessRules().get(0).properties().direction());
        Assertions.assertEquals("pndzaapmudqmeq", model.accessRules().get(0).properties().addressPrefixes().get(0));
        Assertions.assertEquals("ibudqwy", model.accessRules().get(0).properties().subscriptions().get(0).id());
        Assertions.assertEquals("ybpmzznrtffyaq",
            model.accessRules().get(0).properties().networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals("mhh",
            model.accessRules().get(0).properties().networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("oqaqhvseufuq",
            model.accessRules().get(0).properties().networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("htd", model.accessRules().get(0).properties().fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals(2589313714101269318L, model.diagnosticSettingsVersion());
        Assertions.assertEquals("cqucwyhahnom", model.enabledLogCategories().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkSecurityPerimeterProfileInfo model
            = new NetworkSecurityPerimeterProfileInfo().withName("jddtvqct")
                .withAccessRulesVersion(3995165957523237174L)
                .withAccessRules(Arrays.asList(
                    new NetworkSecurityPerimeterAccessRule().withName("ukm")
                        .withProperties(new NetworkSecurityPerimeterAccessRuleProperties()
                            .withDirection(NspAccessRuleDirection.INBOUND)
                            .withAddressPrefixes(Arrays.asList("pndzaapmudqmeq"))
                            .withSubscriptions(Arrays.asList(
                                new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("ibudqwy")))
                            .withNetworkSecurityPerimeters(
                                Arrays.asList(
                                    new NetworkSecurityPerimeter().withId("ybpmzznrtffyaq")
                                        .withPerimeterGuid("mhh")
                                        .withLocation("oqaqhvseufuq"),
                                    new NetworkSecurityPerimeter().withId("xpdlcgqlsis")
                                        .withPerimeterGuid("qfrddgam")
                                        .withLocation("hiosrsjuiv"),
                                    new NetworkSecurityPerimeter().withId("disyirnxz")
                                        .withPerimeterGuid("zexrxzbujrt")
                                        .withLocation("qvwre"),
                                    new NetworkSecurityPerimeter().withId("h")
                                        .withPerimeterGuid("lnzonzlrpiqywn")
                                        .withLocation("jtszcof")))
                            .withFullyQualifiedDomainNames(Arrays.asList("htd"))),
                    new NetworkSecurityPerimeterAccessRule().withName("bjkvreljeamu")
                        .withProperties(new NetworkSecurityPerimeterAccessRuleProperties()
                            .withDirection(NspAccessRuleDirection.OUTBOUND)
                            .withAddressPrefixes(Arrays.asList("vuanashcxlp"))
                            .withSubscriptions(Arrays.asList(
                                new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem()
                                    .withId("bdkelvidizo"),
                                new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("db")))
                            .withNetworkSecurityPerimeters(Arrays.asList(
                                new NetworkSecurityPerimeter().withId("monfdgnwncypuuww")
                                    .withPerimeterGuid("v")
                                    .withLocation("jctzenkei"),
                                new NetworkSecurityPerimeter().withId("zhmkdasvflyh")
                                    .withPerimeterGuid("cu")
                                    .withLocation("hxgsrboldfor")))
                            .withFullyQualifiedDomainNames(
                                Arrays.asList("jlvizbfhfovva", "qpbtuodxes", "abbelawumuaslzk")))))
                .withDiagnosticSettingsVersion(2589313714101269318L)
                .withEnabledLogCategories(Arrays.asList("cqucwyhahnom", "rkywuhpsvfuu"));
        model = BinaryData.fromObject(model).toObject(NetworkSecurityPerimeterProfileInfo.class);
        Assertions.assertEquals("jddtvqct", model.name());
        Assertions.assertEquals(3995165957523237174L, model.accessRulesVersion());
        Assertions.assertEquals("ukm", model.accessRules().get(0).name());
        Assertions.assertEquals(NspAccessRuleDirection.INBOUND, model.accessRules().get(0).properties().direction());
        Assertions.assertEquals("pndzaapmudqmeq", model.accessRules().get(0).properties().addressPrefixes().get(0));
        Assertions.assertEquals("ibudqwy", model.accessRules().get(0).properties().subscriptions().get(0).id());
        Assertions.assertEquals("ybpmzznrtffyaq",
            model.accessRules().get(0).properties().networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals("mhh",
            model.accessRules().get(0).properties().networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("oqaqhvseufuq",
            model.accessRules().get(0).properties().networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("htd", model.accessRules().get(0).properties().fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals(2589313714101269318L, model.diagnosticSettingsVersion());
        Assertions.assertEquals("cqucwyhahnom", model.enabledLogCategories().get(0));
    }
}
