// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeter;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRule;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRuleProperties;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem;
import com.azure.resourcemanager.cognitiveservices.models.NetworkSecurityPerimeterProfileInfo;
import com.azure.resourcemanager.cognitiveservices.models.NspAccessRuleDirection;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkSecurityPerimeterProfileInfoTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkSecurityPerimeterProfileInfo model = BinaryData.fromString(
            "{\"name\":\"clnapxbiygnugjkn\",\"accessRulesVersion\":7448053712084224188,\"accessRules\":[{\"name\":\"uxuuyilflq\",\"properties\":{\"direction\":\"Inbound\",\"addressPrefixes\":[\"ehmrn\",\"hvsujztc\"],\"subscriptions\":[{\"id\":\"jtwhauunf\"},{\"id\":\"njle\"},{\"id\":\"xsmrpddouifamow\"}],\"networkSecurityPerimeters\":[{\"id\":\"nknlqwzdvpi\",\"perimeterGuid\":\"xqszdtmaajquh\",\"location\":\"ylr\"},{\"id\":\"m\",\"perimeterGuid\":\"g\",\"location\":\"mzyospspshck\"}],\"fullyQualifiedDomainNames\":[\"jpmspbpssdfppy\",\"gt\",\"eyujtvczkcnyxrx\",\"unjdx\"]}},{\"name\":\"lnkvxlx\",\"properties\":{\"direction\":\"Outbound\",\"addressPrefixes\":[\"vbgkcvkhpzv\",\"qdf\"],\"subscriptions\":[{\"id\":\"iypfp\"},{\"id\":\"cpzgpxtiv\"},{\"id\":\"knidib\"},{\"id\":\"jxgpnrhgovfg\"}],\"networkSecurityPerimeters\":[{\"id\":\"mhha\",\"perimeterGuid\":\"jrmzvupor\",\"location\":\"dfuyd\"},{\"id\":\"kfvxcnq\",\"perimeterGuid\":\"qpswokmvkhlggdhb\",\"location\":\"zqkzszuwi\"},{\"id\":\"glxxhljfpgpic\",\"perimeterGuid\":\"nzhrgmqgjsxvpqcb\",\"location\":\"mbodthsqqgvri\"}],\"fullyQualifiedDomainNames\":[\"kclacjfrn\"]}},{\"name\":\"usx\",\"properties\":{\"direction\":\"Inbound\",\"addressPrefixes\":[\"sgmwoh\"],\"subscriptions\":[{\"id\":\"zvuxm\"},{\"id\":\"jsvthnwpzteko\"},{\"id\":\"ribi\"}],\"networkSecurityPerimeters\":[{\"id\":\"plucfotangcfhnyk\",\"perimeterGuid\":\"ugswvx\",\"location\":\"mzqwmvtxnjmxmcu\"},{\"id\":\"dtcvcl\",\"perimeterGuid\":\"npdkv\",\"location\":\"abuiy\"},{\"id\":\"buzphdugn\",\"perimeterGuid\":\"knpgoxgjiuq\",\"location\":\"btozipqwje\"}],\"fullyQualifiedDomainNames\":[\"rrxxgewpktvq\",\"lkm\",\"pzoyhlfbcg\"]}},{\"name\":\"cloxo\",\"properties\":{\"direction\":\"Outbound\",\"addressPrefixes\":[\"ipnwj\",\"ujqlafcbahh\"],\"subscriptions\":[{\"id\":\"foiyjwpfilk\"},{\"id\":\"kholvd\"}],\"networkSecurityPerimeters\":[{\"id\":\"auo\",\"perimeterGuid\":\"huartv\",\"location\":\"ukyefchnmnahmnxh\"},{\"id\":\"jqirwrw\",\"perimeterGuid\":\"oxffif\",\"location\":\"wrsnewmozqvbu\"},{\"id\":\"ma\",\"perimeterGuid\":\"sycxhxzgaz\",\"location\":\"abo\"}],\"fullyQualifiedDomainNames\":[\"mfqhppubowse\",\"dfgkmtdh\",\"rngbtcjuahokqtob\"]}}],\"diagnosticSettingsVersion\":8540357974239086249,\"enabledLogCategories\":[\"sh\",\"phwpnulaiywzej\"]}")
            .toObject(NetworkSecurityPerimeterProfileInfo.class);
        Assertions.assertEquals("clnapxbiygnugjkn", model.name());
        Assertions.assertEquals(7448053712084224188L, model.accessRulesVersion());
        Assertions.assertEquals("uxuuyilflq", model.accessRules().get(0).name());
        Assertions.assertEquals(NspAccessRuleDirection.INBOUND, model.accessRules().get(0).properties().direction());
        Assertions.assertEquals("ehmrn", model.accessRules().get(0).properties().addressPrefixes().get(0));
        Assertions.assertEquals("jtwhauunf", model.accessRules().get(0).properties().subscriptions().get(0).id());
        Assertions.assertEquals("nknlqwzdvpi",
            model.accessRules().get(0).properties().networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals("xqszdtmaajquh",
            model.accessRules().get(0).properties().networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("ylr",
            model.accessRules().get(0).properties().networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("jpmspbpssdfppy",
            model.accessRules().get(0).properties().fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals(8540357974239086249L, model.diagnosticSettingsVersion());
        Assertions.assertEquals("sh", model.enabledLogCategories().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkSecurityPerimeterProfileInfo model = new NetworkSecurityPerimeterProfileInfo()
            .withName("clnapxbiygnugjkn")
            .withAccessRulesVersion(7448053712084224188L)
            .withAccessRules(Arrays.asList(
                new NetworkSecurityPerimeterAccessRule().withName("uxuuyilflq")
                    .withProperties(new NetworkSecurityPerimeterAccessRuleProperties()
                        .withDirection(NspAccessRuleDirection.INBOUND)
                        .withAddressPrefixes(Arrays.asList("ehmrn", "hvsujztc"))
                        .withSubscriptions(
                            Arrays.asList(
                                new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("jtwhauunf"),
                                new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("njle"),
                                new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem()
                                    .withId("xsmrpddouifamow")))
                        .withNetworkSecurityPerimeters(Arrays.asList(new NetworkSecurityPerimeter()
                            .withId("nknlqwzdvpi")
                            .withPerimeterGuid("xqszdtmaajquh")
                            .withLocation("ylr"),
                            new NetworkSecurityPerimeter().withId("m")
                                .withPerimeterGuid("g")
                                .withLocation("mzyospspshck")))
                        .withFullyQualifiedDomainNames(
                            Arrays.asList("jpmspbpssdfppy", "gt", "eyujtvczkcnyxrx", "unjdx"))),
                new NetworkSecurityPerimeterAccessRule().withName("lnkvxlx")
                    .withProperties(new NetworkSecurityPerimeterAccessRuleProperties()
                        .withDirection(NspAccessRuleDirection.OUTBOUND)
                        .withAddressPrefixes(Arrays.asList("vbgkcvkhpzv", "qdf"))
                        .withSubscriptions(Arrays.asList(
                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("iypfp"),
                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("cpzgpxtiv"),
                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("knidib"),
                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("jxgpnrhgovfg")))
                        .withNetworkSecurityPerimeters(Arrays.asList(
                            new NetworkSecurityPerimeter().withId("mhha")
                                .withPerimeterGuid("jrmzvupor")
                                .withLocation("dfuyd"),
                            new NetworkSecurityPerimeter().withId("kfvxcnq")
                                .withPerimeterGuid("qpswokmvkhlggdhb")
                                .withLocation("zqkzszuwi"),
                            new NetworkSecurityPerimeter().withId("glxxhljfpgpic")
                                .withPerimeterGuid("nzhrgmqgjsxvpqcb")
                                .withLocation("mbodthsqqgvri")))
                        .withFullyQualifiedDomainNames(Arrays.asList("kclacjfrn"))),
                new NetworkSecurityPerimeterAccessRule().withName("usx")
                    .withProperties(new NetworkSecurityPerimeterAccessRuleProperties()
                        .withDirection(NspAccessRuleDirection.INBOUND)
                        .withAddressPrefixes(Arrays.asList("sgmwoh"))
                        .withSubscriptions(Arrays.asList(
                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("zvuxm"),
                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("jsvthnwpzteko"),
                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("ribi")))
                        .withNetworkSecurityPerimeters(Arrays.asList(
                            new NetworkSecurityPerimeter().withId("plucfotangcfhnyk")
                                .withPerimeterGuid("ugswvx")
                                .withLocation("mzqwmvtxnjmxmcu"),
                            new NetworkSecurityPerimeter().withId("dtcvcl")
                                .withPerimeterGuid("npdkv")
                                .withLocation("abuiy"),
                            new NetworkSecurityPerimeter().withId("buzphdugn")
                                .withPerimeterGuid("knpgoxgjiuq")
                                .withLocation("btozipqwje")))
                        .withFullyQualifiedDomainNames(Arrays.asList("rrxxgewpktvq", "lkm", "pzoyhlfbcg"))),
                new NetworkSecurityPerimeterAccessRule().withName("cloxo")
                    .withProperties(new NetworkSecurityPerimeterAccessRuleProperties()
                        .withDirection(NspAccessRuleDirection.OUTBOUND)
                        .withAddressPrefixes(Arrays.asList("ipnwj", "ujqlafcbahh"))
                        .withSubscriptions(Arrays.asList(
                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("foiyjwpfilk"),
                            new NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem().withId("kholvd")))
                        .withNetworkSecurityPerimeters(Arrays.asList(
                            new NetworkSecurityPerimeter().withId("auo")
                                .withPerimeterGuid("huartv")
                                .withLocation("ukyefchnmnahmnxh"),
                            new NetworkSecurityPerimeter().withId("jqirwrw")
                                .withPerimeterGuid("oxffif")
                                .withLocation("wrsnewmozqvbu"),
                            new NetworkSecurityPerimeter().withId("ma")
                                .withPerimeterGuid("sycxhxzgaz")
                                .withLocation("abo")))
                        .withFullyQualifiedDomainNames(Arrays.asList("mfqhppubowse", "dfgkmtdh", "rngbtcjuahokqtob")))))
            .withDiagnosticSettingsVersion(8540357974239086249L)
            .withEnabledLogCategories(Arrays.asList("sh", "phwpnulaiywzej"));
        model = BinaryData.fromObject(model).toObject(NetworkSecurityPerimeterProfileInfo.class);
        Assertions.assertEquals("clnapxbiygnugjkn", model.name());
        Assertions.assertEquals(7448053712084224188L, model.accessRulesVersion());
        Assertions.assertEquals("uxuuyilflq", model.accessRules().get(0).name());
        Assertions.assertEquals(NspAccessRuleDirection.INBOUND, model.accessRules().get(0).properties().direction());
        Assertions.assertEquals("ehmrn", model.accessRules().get(0).properties().addressPrefixes().get(0));
        Assertions.assertEquals("jtwhauunf", model.accessRules().get(0).properties().subscriptions().get(0).id());
        Assertions.assertEquals("nknlqwzdvpi",
            model.accessRules().get(0).properties().networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals("xqszdtmaajquh",
            model.accessRules().get(0).properties().networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("ylr",
            model.accessRules().get(0).properties().networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("jpmspbpssdfppy",
            model.accessRules().get(0).properties().fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals(8540357974239086249L, model.diagnosticSettingsVersion());
        Assertions.assertEquals("sh", model.enabledLogCategories().get(0));
    }
}
