/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.cognitiveservices.vision.faceapi.models;

import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Operation status object. Operation refers to the asynchronous backend task
 * including taking a snapshot and applying a snapshot.
 */
public class OperationStatus {
    /**
     * Operation status: notstarted, running, succeeded, failed. If the
     * operation is requested and waiting to perform, the status is notstarted.
     * If the operation is ongoing in backend, the status is running. Status
     * succeeded means the operation is completed successfully, specifically
     * for snapshot taking operation, it illustrates the snapshot is well taken
     * and ready to apply, and for snapshot applying operation, it presents the
     * target object has finished creating by the snapshot and ready to be
     * used. Status failed is often caused by editing the source object while
     * taking the snapshot or editing the target object while applying the
     * snapshot before completion, see the field "message" to check the failure
     * reason. Possible values include: 'notstarted', 'running', 'succeeded',
     * 'failed'.
     */
    @JsonProperty(value = "status", required = true)
    private OperationStatusType status;

    /**
     * A combined UTC date and time string that describes the time when the
     * operation (take or apply a snapshot) is requested. E.g.
     * 2018-12-25T11:41:02.2331413Z.
     */
    @JsonProperty(value = "createdTime", required = true)
    private DateTime createdTime;

    /**
     * A combined UTC date and time string that describes the last time the
     * operation (take or apply a snapshot) is actively migrating data. The
     * lastActionTime will keep increasing until the operation finishes. E.g.
     * 2018-12-25T11:51:27.8705696Z.
     */
    @JsonProperty(value = "lastActionTime")
    private DateTime lastActionTime;

    /**
     * When the operation succeeds successfully, for snapshot taking operation
     * the snapshot id will be included in this field, and for snapshot
     * applying operation, the path to get the target object will be returned
     * in this field.
     */
    @JsonProperty(value = "resourceLocation")
    private String resourceLocation;

    /**
     * Show failure message when operation fails (omitted when operation
     * succeeds).
     */
    @JsonProperty(value = "message")
    private String message;

    /**
     * Get the status value.
     *
     * @return the status value
     */
    public OperationStatusType status() {
        return this.status;
    }

    /**
     * Set the status value.
     *
     * @param status the status value to set
     * @return the OperationStatus object itself.
     */
    public OperationStatus withStatus(OperationStatusType status) {
        this.status = status;
        return this;
    }

    /**
     * Get the createdTime value.
     *
     * @return the createdTime value
     */
    public DateTime createdTime() {
        return this.createdTime;
    }

    /**
     * Set the createdTime value.
     *
     * @param createdTime the createdTime value to set
     * @return the OperationStatus object itself.
     */
    public OperationStatus withCreatedTime(DateTime createdTime) {
        this.createdTime = createdTime;
        return this;
    }

    /**
     * Get the lastActionTime value.
     *
     * @return the lastActionTime value
     */
    public DateTime lastActionTime() {
        return this.lastActionTime;
    }

    /**
     * Set the lastActionTime value.
     *
     * @param lastActionTime the lastActionTime value to set
     * @return the OperationStatus object itself.
     */
    public OperationStatus withLastActionTime(DateTime lastActionTime) {
        this.lastActionTime = lastActionTime;
        return this;
    }

    /**
     * Get the resourceLocation value.
     *
     * @return the resourceLocation value
     */
    public String resourceLocation() {
        return this.resourceLocation;
    }

    /**
     * Set the resourceLocation value.
     *
     * @param resourceLocation the resourceLocation value to set
     * @return the OperationStatus object itself.
     */
    public OperationStatus withResourceLocation(String resourceLocation) {
        this.resourceLocation = resourceLocation;
        return this;
    }

    /**
     * Get the message value.
     *
     * @return the message value
     */
    public String message() {
        return this.message;
    }

    /**
     * Set the message value.
     *
     * @param message the message value to set
     * @return the OperationStatus object itself.
     */
    public OperationStatus withMessage(String message) {
        this.message = message;
        return this;
    }

}
