// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.speech.batchtranscription.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Mode of profanity filtering.
 */
public final class ProfanityFilterMode extends ExpandableStringEnum<ProfanityFilterMode> {
    /**
     * Disable profanity filtering.
     */
    @Generated
    public static final ProfanityFilterMode NONE = fromString("None");

    /**
     * Remove profanity.
     */
    @Generated
    public static final ProfanityFilterMode REMOVED = fromString("Removed");

    /**
     * Add "profanity" XML tags&lt;/Profanity&gt;.
     */
    @Generated
    public static final ProfanityFilterMode TAGS = fromString("Tags");

    /**
     * Mask the profanity with * except of the first letter, e.g., f***.
     */
    @Generated
    public static final ProfanityFilterMode MASKED = fromString("Masked");

    /**
     * Creates a new instance of ProfanityFilterMode value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public ProfanityFilterMode() {
    }

    /**
     * Creates or finds a ProfanityFilterMode from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding ProfanityFilterMode.
     */
    @Generated
    public static ProfanityFilterMode fromString(String name) {
        return fromString(name, ProfanityFilterMode.class);
    }

    /**
     * Gets known ProfanityFilterMode values.
     * 
     * @return known ProfanityFilterMode values.
     */
    @Generated
    public static Collection<ProfanityFilterMode> values() {
        return values(ProfanityFilterMode.class);
    }
}
