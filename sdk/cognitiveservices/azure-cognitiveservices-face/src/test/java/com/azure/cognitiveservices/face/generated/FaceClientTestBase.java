// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.cognitiveservices.face.generated;

import com.azure.cognitiveservices.face.FaceClient;
import com.azure.cognitiveservices.face.FaceClientBuilder;
import com.azure.cognitiveservices.face.FaceListClient;
import com.azure.cognitiveservices.face.FaceListClientBuilder;
import com.azure.cognitiveservices.face.LargeFaceListClient;
import com.azure.cognitiveservices.face.LargeFaceListClientBuilder;
import com.azure.cognitiveservices.face.LargePersonGroupClient;
import com.azure.cognitiveservices.face.LargePersonGroupClientBuilder;
import com.azure.cognitiveservices.face.LargePersonGroupPersonClient;
import com.azure.cognitiveservices.face.LargePersonGroupPersonClientBuilder;
import com.azure.cognitiveservices.face.PersonDirectoryClient;
import com.azure.cognitiveservices.face.PersonDirectoryClientBuilder;
import com.azure.cognitiveservices.face.PersonGroupClient;
import com.azure.cognitiveservices.face.PersonGroupClientBuilder;
import com.azure.cognitiveservices.face.PersonGroupPersonClient;
import com.azure.cognitiveservices.face.PersonGroupPersonClientBuilder;
import com.azure.cognitiveservices.face.SnapshotClient;
import com.azure.cognitiveservices.face.SnapshotClientBuilder;
import com.azure.core.http.HttpClient;
import com.azure.core.http.policy.HttpLogDetailLevel;
import com.azure.core.http.policy.HttpLogOptions;
import com.azure.core.test.TestBase;
import com.azure.core.test.TestMode;
import com.azure.core.util.Configuration;

class FaceClientTestBase extends TestBase {
    protected FaceClient faceClient;

    protected PersonGroupPersonClient personGroupPersonClient;

    protected PersonGroupClient personGroupClient;

    protected FaceListClient faceListClient;

    protected LargePersonGroupPersonClient largePersonGroupPersonClient;

    protected LargePersonGroupClient largePersonGroupClient;

    protected LargeFaceListClient largeFaceListClient;

    protected SnapshotClient snapshotClient;

    protected PersonDirectoryClient personDirectoryClient;

    @Override
    protected void beforeTest() {
        FaceClientBuilder faceClientbuilder =
                new FaceClientBuilder()
                        .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                        .httpClient(HttpClient.createDefault())
                        .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            faceClientbuilder.httpClient(interceptorManager.getPlaybackClient());
        } else if (getTestMode() == TestMode.RECORD) {
            faceClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        faceClient = faceClientbuilder.buildClient();

        PersonGroupPersonClientBuilder personGroupPersonClientbuilder =
                new PersonGroupPersonClientBuilder()
                        .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                        .httpClient(HttpClient.createDefault())
                        .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            personGroupPersonClientbuilder.httpClient(interceptorManager.getPlaybackClient());
        } else if (getTestMode() == TestMode.RECORD) {
            personGroupPersonClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        personGroupPersonClient = personGroupPersonClientbuilder.buildClient();

        PersonGroupClientBuilder personGroupClientbuilder =
                new PersonGroupClientBuilder()
                        .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                        .httpClient(HttpClient.createDefault())
                        .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            personGroupClientbuilder.httpClient(interceptorManager.getPlaybackClient());
        } else if (getTestMode() == TestMode.RECORD) {
            personGroupClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        personGroupClient = personGroupClientbuilder.buildClient();

        FaceListClientBuilder faceListClientbuilder =
                new FaceListClientBuilder()
                        .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                        .httpClient(HttpClient.createDefault())
                        .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            faceListClientbuilder.httpClient(interceptorManager.getPlaybackClient());
        } else if (getTestMode() == TestMode.RECORD) {
            faceListClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        faceListClient = faceListClientbuilder.buildClient();

        LargePersonGroupPersonClientBuilder largePersonGroupPersonClientbuilder =
                new LargePersonGroupPersonClientBuilder()
                        .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                        .httpClient(HttpClient.createDefault())
                        .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            largePersonGroupPersonClientbuilder.httpClient(interceptorManager.getPlaybackClient());
        } else if (getTestMode() == TestMode.RECORD) {
            largePersonGroupPersonClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        largePersonGroupPersonClient = largePersonGroupPersonClientbuilder.buildClient();

        LargePersonGroupClientBuilder largePersonGroupClientbuilder =
                new LargePersonGroupClientBuilder()
                        .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                        .httpClient(HttpClient.createDefault())
                        .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            largePersonGroupClientbuilder.httpClient(interceptorManager.getPlaybackClient());
        } else if (getTestMode() == TestMode.RECORD) {
            largePersonGroupClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        largePersonGroupClient = largePersonGroupClientbuilder.buildClient();

        LargeFaceListClientBuilder largeFaceListClientbuilder =
                new LargeFaceListClientBuilder()
                        .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                        .httpClient(HttpClient.createDefault())
                        .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            largeFaceListClientbuilder.httpClient(interceptorManager.getPlaybackClient());
        } else if (getTestMode() == TestMode.RECORD) {
            largeFaceListClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        largeFaceListClient = largeFaceListClientbuilder.buildClient();

        SnapshotClientBuilder snapshotClientbuilder =
                new SnapshotClientBuilder()
                        .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                        .httpClient(HttpClient.createDefault())
                        .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            snapshotClientbuilder.httpClient(interceptorManager.getPlaybackClient());
        } else if (getTestMode() == TestMode.RECORD) {
            snapshotClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        snapshotClient = snapshotClientbuilder.buildClient();

        PersonDirectoryClientBuilder personDirectoryClientbuilder =
                new PersonDirectoryClientBuilder()
                        .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                        .httpClient(HttpClient.createDefault())
                        .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            personDirectoryClientbuilder.httpClient(interceptorManager.getPlaybackClient());
        } else if (getTestMode() == TestMode.RECORD) {
            personDirectoryClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        personDirectoryClient = personDirectoryClientbuilder.buildClient();
    }
}
