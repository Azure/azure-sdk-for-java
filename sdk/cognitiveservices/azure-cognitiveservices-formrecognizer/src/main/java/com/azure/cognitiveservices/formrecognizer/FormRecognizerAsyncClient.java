// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.cognitiveservices.formrecognizer;

import com.azure.cognitiveservices.formrecognizer.implementation.FormRecognizerClientImpl;
import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.http.rest.PagedFlux;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.azure.core.util.polling.PollerFlux;
import reactor.core.publisher.Mono;

/** Initializes a new instance of the asynchronous FormRecognizerClient type. */
@ServiceClient(builder = FormRecognizerClientBuilder.class, isAsync = true)
public final class FormRecognizerAsyncClient {
    @Generated private final FormRecognizerClientImpl serviceClient;

    /**
     * Initializes an instance of FormRecognizerClient client.
     *
     * @param serviceClient the service client implementation.
     */
    @Generated
    FormRecognizerAsyncClient(FormRecognizerClientImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Analyzes document with model.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>pages</td><td>String</td><td>No</td><td>List of 1-based page numbers to analyze.  Ex. "1-3,5,7-9"</td></tr>
     *     <tr><td>locale</td><td>String</td><td>No</td><td>Locale hint for text recognition and document analysis.  Value may contain only the language code (ex. "en", "fr") or BCP 47 language tag (ex. "en-US").</td></tr>
     *     <tr><td>stringIndexType</td><td>String</td><td>No</td><td>Method used to compute string offset and length.</td></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * <p><strong>Header Parameters</strong>
     *
     * <table border="1">
     *     <caption>Header Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>Content-Type</td><td>String</td><td>Yes</td><td>Upload file type</td></tr>
     *     <tr><td>Content-Length</td><td>String</td><td>No</td><td>The contentLength parameter</td></tr>
     * </table>
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * Flux<ByteBuffer>
     * }</pre>
     *
     * @param modelId Unique model name.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> analyzeDocumentWithResponse(String modelId, RequestOptions requestOptions) {
        return this.serviceClient.analyzeDocumentWithResponseAsync(modelId, requestOptions);
    }

    /**
     * Analyzes document with model.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>pages</td><td>String</td><td>No</td><td>List of 1-based page numbers to analyze.  Ex. "1-3,5,7-9"</td></tr>
     *     <tr><td>locale</td><td>String</td><td>No</td><td>Locale hint for text recognition and document analysis.  Value may contain only the language code (ex. "en", "fr") or BCP 47 language tag (ex. "en-US").</td></tr>
     *     <tr><td>stringIndexType</td><td>String</td><td>No</td><td>Method used to compute string offset and length.</td></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * <p><strong>Header Parameters</strong>
     *
     * <table border="1">
     *     <caption>Header Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>Content-Type</td><td>String</td><td>Yes</td><td>Upload file type</td></tr>
     *     <tr><td>Content-Length</td><td>String</td><td>No</td><td>The contentLength parameter</td></tr>
     * </table>
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * Flux<ByteBuffer>
     * }</pre>
     *
     * @param modelId Unique model name.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return the {@link PollerFlux} for polling of long-running operation.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    public PollerFlux<BinaryData, BinaryData> beginAnalyzeDocument(String modelId, RequestOptions requestOptions) {
        return this.serviceClient.beginAnalyzeDocumentAsync(modelId, requestOptions);
    }

    /**
     * Gets the result of document analysis.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     status: String(notStarted/running/failed/succeeded)
     *     createdDateTime: String
     *     lastUpdatedDateTime: String
     *     error: {
     *         code: String
     *         message: String
     *         target: String
     *         details: [
     *             (recursive schema, see above)
     *         ]
     *         innererror: {
     *             code: String
     *             message: String
     *             innererror: (recursive schema, see innererror above)
     *         }
     *     }
     *     analyzeResult: {
     *         apiVersion: String(2022-01-30-preview)
     *         modelId: String
     *         stringIndexType: String(textElements/unicodeCodePoint/utf16CodeUnit)
     *         content: String
     *         pages: [
     *             {
     *                 pageNumber: int
     *                 angle: float
     *                 width: float
     *                 height: float
     *                 unit: String(pixel/inch)
     *                 spans: [
     *                     {
     *                         offset: int
     *                         length: int
     *                     }
     *                 ]
     *                 words: [
     *                     {
     *                         content: String
     *                         boundingBox: [
     *                             float
     *                         ]
     *                         span: (recursive schema, see span above)
     *                         confidence: float
     *                     }
     *                 ]
     *                 selectionMarks: [
     *                     {
     *                         state: String(selected/unselected)
     *                         boundingBox: [
     *                             float
     *                         ]
     *                         span: (recursive schema, see span above)
     *                         confidence: float
     *                     }
     *                 ]
     *                 lines: [
     *                     {
     *                         content: String
     *                         boundingBox: [
     *                             float
     *                         ]
     *                         spans: [
     *                             (recursive schema, see above)
     *                         ]
     *                     }
     *                 ]
     *             }
     *         ]
     *         tables: [
     *             {
     *                 rowCount: int
     *                 columnCount: int
     *                 cells: [
     *                     {
     *                         kind: String(content/rowHeader/columnHeader/stubHead/description)
     *                         rowIndex: int
     *                         columnIndex: int
     *                         rowSpan: Integer
     *                         columnSpan: Integer
     *                         content: String
     *                         boundingRegions: [
     *                             {
     *                                 pageNumber: int
     *                                 boundingBox: [
     *                                     float
     *                                 ]
     *                             }
     *                         ]
     *                         spans: [
     *                             (recursive schema, see above)
     *                         ]
     *                     }
     *                 ]
     *                 boundingRegions: [
     *                     (recursive schema, see above)
     *                 ]
     *                 spans: [
     *                     (recursive schema, see above)
     *                 ]
     *             }
     *         ]
     *         keyValuePairs: [
     *             {
     *                 key: {
     *                     content: String
     *                     boundingRegions: [
     *                         (recursive schema, see above)
     *                     ]
     *                     spans: [
     *                         (recursive schema, see above)
     *                     ]
     *                 }
     *                 value: (recursive schema, see value above)
     *                 confidence: float
     *             }
     *         ]
     *         entities: [
     *             {
     *                 category: String
     *                 subCategory: String
     *                 content: String
     *                 boundingRegions: [
     *                     (recursive schema, see above)
     *                 ]
     *                 spans: [
     *                     (recursive schema, see above)
     *                 ]
     *                 confidence: float
     *             }
     *         ]
     *         styles: [
     *             {
     *                 isHandwritten: Boolean
     *                 spans: [
     *                     (recursive schema, see above)
     *                 ]
     *                 confidence: float
     *             }
     *         ]
     *         languages: [
     *             {
     *                 languageCode: String
     *                 spans: [
     *                     (recursive schema, see above)
     *                 ]
     *                 confidence: float
     *             }
     *         ]
     *         documents: [
     *             {
     *                 docType: String
     *                 boundingRegions: [
     *                     (recursive schema, see above)
     *                 ]
     *                 spans: [
     *                     (recursive schema, see above)
     *                 ]
     *                 fields: {
     *                     String: {
     *                         type: String(string/date/time/phoneNumber/number/integer/selectionMark/countryRegion/signature/array/object/currency)
     *                         valueString: String
     *                         valueDate: String
     *                         valueTime: String
     *                         valuePhoneNumber: String
     *                         valueNumber: Float
     *                         valueInteger: Long
     *                         valueSelectionMark: String(selected/unselected)
     *                         valueSignature: String(signed/unsigned)
     *                         valueCountryRegion: String
     *                         valueArray: [
     *                             (recursive schema, see above)
     *                         ]
     *                         valueObject: {
     *                             String: (recursive schema, see String above)
     *                         }
     *                         valueCurrency: {
     *                             amount: double
     *                             currencySymbol: String
     *                         }
     *                         content: String
     *                         boundingRegions: [
     *                             (recursive schema, see above)
     *                         ]
     *                         spans: [
     *                             (recursive schema, see above)
     *                         ]
     *                         confidence: Float
     *                     }
     *                 }
     *                 confidence: float
     *             }
     *         ]
     *     }
     * }
     * }</pre>
     *
     * @param modelId Unique model name.
     * @param resultId Analyze operation result ID.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return the result of document analysis along with {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getAnalyzeDocumentResultWithResponse(
            String modelId, String resultId, RequestOptions requestOptions) {
        return this.serviceClient.getAnalyzeDocumentResultWithResponseAsync(modelId, resultId, requestOptions);
    }

    /**
     * Builds a custom document analysis model.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     modelId: String
     *     description: String
     *     buildMode: String(template/neural)
     *     azureBlobSource: {
     *         containerUrl: String
     *         prefix: String
     *     }
     *     tags: {
     *         String: String
     *     }
     * }
     * }</pre>
     *
     * @param buildRequest Building request parameters.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> buildDocumentModelWithResponse(BinaryData buildRequest, RequestOptions requestOptions) {
        return this.serviceClient.buildDocumentModelWithResponseAsync(buildRequest, requestOptions);
    }

    /**
     * Builds a custom document analysis model.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     modelId: String
     *     description: String
     *     buildMode: String(template/neural)
     *     azureBlobSource: {
     *         containerUrl: String
     *         prefix: String
     *     }
     *     tags: {
     *         String: String
     *     }
     * }
     * }</pre>
     *
     * @param buildRequest Building request parameters.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return the {@link PollerFlux} for polling of long-running operation.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    public PollerFlux<BinaryData, BinaryData> beginBuildDocumentModel(
            BinaryData buildRequest, RequestOptions requestOptions) {
        return this.serviceClient.beginBuildDocumentModelAsync(buildRequest, requestOptions);
    }

    /**
     * Creates a new model from document types of existing models.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     modelId: String
     *     description: String
     *     componentModels: [
     *         {
     *             modelId: String
     *         }
     *     ]
     *     tags: {
     *         String: String
     *     }
     * }
     * }</pre>
     *
     * @param composeRequest Compose request parameters.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> composeDocumentModelWithResponse(
            BinaryData composeRequest, RequestOptions requestOptions) {
        return this.serviceClient.composeDocumentModelWithResponseAsync(composeRequest, requestOptions);
    }

    /**
     * Creates a new model from document types of existing models.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     modelId: String
     *     description: String
     *     componentModels: [
     *         {
     *             modelId: String
     *         }
     *     ]
     *     tags: {
     *         String: String
     *     }
     * }
     * }</pre>
     *
     * @param composeRequest Compose request parameters.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return the {@link PollerFlux} for polling of long-running operation.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    public PollerFlux<BinaryData, BinaryData> beginComposeDocumentModel(
            BinaryData composeRequest, RequestOptions requestOptions) {
        return this.serviceClient.beginComposeDocumentModelAsync(composeRequest, requestOptions);
    }

    /**
     * Generates authorization to copy a model to this location with specified modelId and optional description.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     modelId: String
     *     description: String
     *     tags: {
     *         String: String
     *     }
     * }
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     targetResourceId: String
     *     targetResourceRegion: String
     *     targetModelId: String
     *     targetModelLocation: String
     *     accessToken: String
     *     expirationDateTime: String
     * }
     * }</pre>
     *
     * @param authorizeCopyRequest Authorize copy request parameters.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return authorization to copy a model to the specified target resource and modelId along with {@link Response} on
     *     successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> authorizeCopyDocumentModelWithResponse(
            BinaryData authorizeCopyRequest, RequestOptions requestOptions) {
        return this.serviceClient.authorizeCopyDocumentModelWithResponseAsync(authorizeCopyRequest, requestOptions);
    }

    /**
     * Copies model to the target resource, region, and modelId.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     targetResourceId: String
     *     targetResourceRegion: String
     *     targetModelId: String
     *     targetModelLocation: String
     *     accessToken: String
     *     expirationDateTime: String
     * }
     * }</pre>
     *
     * @param modelId Unique model name.
     * @param copyToRequest Copy to request parameters.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> copyDocumentModelToWithResponse(
            String modelId, BinaryData copyToRequest, RequestOptions requestOptions) {
        return this.serviceClient.copyDocumentModelToWithResponseAsync(modelId, copyToRequest, requestOptions);
    }

    /**
     * Copies model to the target resource, region, and modelId.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     targetResourceId: String
     *     targetResourceRegion: String
     *     targetModelId: String
     *     targetModelLocation: String
     *     accessToken: String
     *     expirationDateTime: String
     * }
     * }</pre>
     *
     * @param modelId Unique model name.
     * @param copyToRequest Copy to request parameters.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return the {@link PollerFlux} for polling of long-running operation.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    public PollerFlux<BinaryData, BinaryData> beginCopyDocumentModelTo(
            String modelId, BinaryData copyToRequest, RequestOptions requestOptions) {
        return this.serviceClient.beginCopyDocumentModelToAsync(modelId, copyToRequest, requestOptions);
    }

    /**
     * Lists all operations.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     value: [
     *         {
     *             operationId: String
     *             status: String(notStarted/running/failed/succeeded/canceled)
     *             percentCompleted: Integer
     *             createdDateTime: String
     *             lastUpdatedDateTime: String
     *             kind: String(documentModelBuild/documentModelCompose/documentModelCopyTo)
     *             resourceLocation: String
     *             apiVersion: String
     *             tags: {
     *                 String: String
     *             }
     *         }
     *     ]
     *     nextLink: String
     * }
     * }</pre>
     *
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return list Operations response object as paginated response with {@link PagedFlux}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.COLLECTION)
    public PagedFlux<BinaryData> getOperations(RequestOptions requestOptions) {
        return this.serviceClient.getOperationsAsync(requestOptions);
    }

    /**
     * Gets operation info.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     operationId: String
     *     status: String(notStarted/running/failed/succeeded/canceled)
     *     percentCompleted: Integer
     *     createdDateTime: String
     *     lastUpdatedDateTime: String
     *     kind: String(documentModelBuild/documentModelCompose/documentModelCopyTo)
     *     resourceLocation: String
     *     apiVersion: String
     *     tags: {
     *         String: String
     *     }
     *     error: {
     *         code: String
     *         message: String
     *         target: String
     *         details: [
     *             (recursive schema, see above)
     *         ]
     *         innererror: {
     *             code: String
     *             message: String
     *             innererror: (recursive schema, see innererror above)
     *         }
     *     }
     *     result: Object
     * }
     * }</pre>
     *
     * @param operationId Unique operation ID.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return operation info along with {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getOperationWithResponse(String operationId, RequestOptions requestOptions) {
        return this.serviceClient.getOperationWithResponseAsync(operationId, requestOptions);
    }

    /**
     * List all models.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     value: [
     *         {
     *             modelId: String
     *             description: String
     *             createdDateTime: String
     *             apiVersion: String
     *             tags: {
     *                 String: String
     *             }
     *         }
     *     ]
     *     nextLink: String
     * }
     * }</pre>
     *
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return list Models response object as paginated response with {@link PagedFlux}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.COLLECTION)
    public PagedFlux<BinaryData> getModels(RequestOptions requestOptions) {
        return this.serviceClient.getModelsAsync(requestOptions);
    }

    /**
     * Gets detailed model information.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     modelId: String
     *     description: String
     *     createdDateTime: String
     *     apiVersion: String
     *     tags: {
     *         String: String
     *     }
     *     docTypes: {
     *         String: {
     *             description: String
     *             buildMode: String(template/neural)
     *             fieldSchema: {
     *                 String: {
     *                     type: String(string/date/time/phoneNumber/number/integer/selectionMark/countryRegion/signature/array/object/currency)
     *                     description: String
     *                     example: String
     *                     items: (recursive schema, see items above)
     *                     properties: {
     *                         String: (recursive schema, see String above)
     *                     }
     *                 }
     *             }
     *             fieldConfidence: {
     *                 String: float
     *             }
     *         }
     *     }
     * }
     * }</pre>
     *
     * @param modelId Unique model name.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return detailed model information along with {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getModelWithResponse(String modelId, RequestOptions requestOptions) {
        return this.serviceClient.getModelWithResponseAsync(modelId, requestOptions);
    }

    /**
     * Deletes model.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * @param modelId Unique model name.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> deleteModelWithResponse(String modelId, RequestOptions requestOptions) {
        return this.serviceClient.deleteModelWithResponseAsync(modelId, requestOptions);
    }

    /**
     * Return basic info about the current resource.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     customDocumentModels: {
     *         count: int
     *         limit: int
     *     }
     * }
     * }</pre>
     *
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @return general information regarding the current resource along with {@link Response} on successful completion
     *     of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getInfoWithResponse(RequestOptions requestOptions) {
        return this.serviceClient.getInfoWithResponseAsync(requestOptions);
    }
}
