// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.speech.transcription.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Phrase list properties for transcription.
 */
@Fluent
public final class PhraseListProperties implements JsonSerializable<PhraseListProperties> {
    /*
     * List of phrases for recognition.
     */
    @Generated
    private List<String> phrases;

    /*
     * Biasing weight for phrase list (1.0 to 20.0).
     */
    @Generated
    private Double biasingWeight;

    /**
     * Creates an instance of PhraseListProperties class.
     */
    @Generated
    public PhraseListProperties() {
    }

    /**
     * Get the phrases property: List of phrases for recognition.
     * 
     * @return the phrases value.
     */
    @Generated
    public List<String> getPhrases() {
        return this.phrases;
    }

    /**
     * Set the phrases property: List of phrases for recognition.
     * 
     * @param phrases the phrases value to set.
     * @return the PhraseListProperties object itself.
     */
    @Generated
    public PhraseListProperties setPhrases(List<String> phrases) {
        this.phrases = phrases;
        return this;
    }

    /**
     * Get the biasingWeight property: Biasing weight for phrase list (1.0 to 20.0).
     * 
     * @return the biasingWeight value.
     */
    @Generated
    public Double getBiasingWeight() {
        return this.biasingWeight;
    }

    /**
     * Set the biasingWeight property: Biasing weight for phrase list (1.0 to 20.0).
     * 
     * @param biasingWeight the biasingWeight value to set.
     * @return the PhraseListProperties object itself.
     */
    @Generated
    public PhraseListProperties setBiasingWeight(Double biasingWeight) {
        this.biasingWeight = biasingWeight;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("phrases", this.phrases, (writer, element) -> writer.writeString(element));
        jsonWriter.writeNumberField("biasingWeight", this.biasingWeight);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PhraseListProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of PhraseListProperties if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the PhraseListProperties.
     */
    @Generated
    public static PhraseListProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PhraseListProperties deserializedPhraseListProperties = new PhraseListProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("phrases".equals(fieldName)) {
                    List<String> phrases = reader.readArray(reader1 -> reader1.getString());
                    deserializedPhraseListProperties.phrases = phrases;
                } else if ("biasingWeight".equals(fieldName)) {
                    deserializedPhraseListProperties.biasingWeight = reader.getNullable(JsonReader::getDouble);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPhraseListProperties;
        });
    }
}
