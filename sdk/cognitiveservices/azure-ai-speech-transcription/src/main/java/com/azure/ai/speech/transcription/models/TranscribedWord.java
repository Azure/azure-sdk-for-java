// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.speech.transcription.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Time-stamped word in the display form.
 */
@Immutable
public final class TranscribedWord implements JsonSerializable<TranscribedWord> {
    /*
     * The recognized word, including punctuation.
     */
    @Generated
    private final String text;

    /*
     * The start offset of the word in milliseconds.
     */
    @Generated
    private final int offsetMilliseconds;

    /*
     * The duration of the word in milliseconds.
     */
    @Generated
    private final int durationMilliseconds;

    /**
     * Creates an instance of TranscribedWord class.
     * 
     * @param text the text value to set.
     * @param offsetMilliseconds the offsetMilliseconds value to set.
     * @param durationMilliseconds the durationMilliseconds value to set.
     */
    @Generated
    private TranscribedWord(String text, int offsetMilliseconds, int durationMilliseconds) {
        this.text = text;
        this.offsetMilliseconds = offsetMilliseconds;
        this.durationMilliseconds = durationMilliseconds;
    }

    /**
     * Get the text property: The recognized word, including punctuation.
     * 
     * @return the text value.
     */
    @Generated
    public String getText() {
        return this.text;
    }

    /**
     * Get the offsetMilliseconds property: The start offset of the word in milliseconds.
     * 
     * @return the offsetMilliseconds value.
     */
    @Generated
    public int getOffsetMilliseconds() {
        return this.offsetMilliseconds;
    }

    /**
     * Get the durationMilliseconds property: The duration of the word in milliseconds.
     * 
     * @return the durationMilliseconds value.
     */
    @Generated
    public int getDurationMilliseconds() {
        return this.durationMilliseconds;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("text", this.text);
        jsonWriter.writeIntField("offsetMilliseconds", this.offsetMilliseconds);
        jsonWriter.writeIntField("durationMilliseconds", this.durationMilliseconds);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TranscribedWord from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TranscribedWord if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the TranscribedWord.
     */
    @Generated
    public static TranscribedWord fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String text = null;
            int offsetMilliseconds = 0;
            int durationMilliseconds = 0;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("text".equals(fieldName)) {
                    text = reader.getString();
                } else if ("offsetMilliseconds".equals(fieldName)) {
                    offsetMilliseconds = reader.getInt();
                } else if ("durationMilliseconds".equals(fieldName)) {
                    durationMilliseconds = reader.getInt();
                } else {
                    reader.skipChildren();
                }
            }
            return new TranscribedWord(text, offsetMilliseconds, durationMilliseconds);
        });
    }
}
