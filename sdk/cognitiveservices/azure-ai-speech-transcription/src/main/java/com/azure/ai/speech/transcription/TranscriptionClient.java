// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.speech.transcription;

import com.azure.ai.speech.transcription.implementation.MultipartFormDataHelper;
import com.azure.ai.speech.transcription.implementation.TranscriptionClientImpl;
import com.azure.ai.speech.transcription.models.TranscribeRequestContent;
import com.azure.ai.speech.transcription.models.TranscriptionResult;
import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;

/**
 * Initializes a new instance of the synchronous TranscriptionClient type.
 *
 * <p><strong>Instantiating a synchronous TranscriptionClient</strong></p>
 *
 * <!-- src_embed com.azure.ai.speech.transcription.transcriptionclient.instantiation -->
 * <pre>
 * TranscriptionClient client = new TranscriptionClientBuilder&#40;&#41;
 *     .endpoint&#40;&quot;https:&#47;&#47;&lt;your-resource-name&gt;.cognitiveservices.azure.com&#47;&quot;&#41;
 *     .credential&#40;new KeyCredential&#40;&quot;&lt;your-api-key&gt;&quot;&#41;&#41;
 *     .buildClient&#40;&#41;;
 * </pre>
 * <!-- end com.azure.ai.speech.transcription.transcriptionclient.instantiation -->
 *
 * <p>View {@link TranscriptionClientBuilder this} for additional ways to construct the client.</p>
 *
 * @see TranscriptionClientBuilder
 */
@ServiceClient(builder = TranscriptionClientBuilder.class)
public final class TranscriptionClient {
    @Generated
    private final TranscriptionClientImpl serviceClient;

    /**
     * Initializes an instance of TranscriptionClient class.
     *
     * @param serviceClient the service client implementation.
     */
    @Generated
    TranscriptionClient(TranscriptionClientImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Transcribes the provided audio stream.
     * <p><strong>Response Body Schema</strong></p>
     *
     * <pre>
     * {@code
     * {
     *     durationMilliseconds: int (Required)
     *     combinedPhrases (Required): [
     *          (Required){
     *             channel: Integer (Optional)
     *             text: String (Required)
     *         }
     *     ]
     *     phrases (Required): [
     *          (Required){
     *             channel: Integer (Optional)
     *             speaker: Integer (Optional)
     *             offsetMilliseconds: int (Required)
     *             durationMilliseconds: int (Required)
     *             text: String (Required)
     *             words (Optional): [
     *                  (Optional){
     *                     text: String (Required)
     *                     offsetMilliseconds: int (Required)
     *                     durationMilliseconds: int (Required)
     *                 }
     *             ]
     *             locale: String (Optional)
     *             confidence: double (Required)
     *         }
     *     ]
     * }
     * }
     * </pre>
     *
     * @param body The body of the multipart request.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the result of the transcribe operation along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<BinaryData> transcribeWithResponse(BinaryData body, RequestOptions requestOptions) {
        // Operation 'transcribe' is of content-type 'multipart/form-data'. Protocol API is not usable and hence not
        // generated.
        return this.serviceClient.transcribeWithResponse(body, requestOptions);
    }

    /**
     * Transcribes the provided audio stream.
     *
     * <p><strong>Code Samples</strong></p>
     *
     * <!-- src_embed com.azure.ai.speech.transcription.transcriptionclient.transcribe -->
     * <pre>
     * byte[] audioData = Files.readAllBytes&#40;Paths.get&#40;&quot;path&#47;to&#47;audio.wav&quot;&#41;&#41;;
     *
     * AudioFileDetails audioFileDetails = new AudioFileDetails&#40;BinaryData.fromBytes&#40;audioData&#41;&#41;
     *     .setFilename&#40;&quot;audio.wav&quot;&#41;;
     *
     * TranscriptionOptions options = new TranscriptionOptions&#40;&#41;;
     *
     * TranscribeRequestContent requestContent = new TranscribeRequestContent&#40;&#41;
     *     .setAudio&#40;audioFileDetails&#41;
     *     .setOptions&#40;options&#41;;
     *
     * TranscriptionResult result = client.transcribe&#40;requestContent&#41;;
     *
     * System.out.println&#40;&quot;Duration: &quot; + result.getDurationMilliseconds&#40;&#41; + &quot;ms&quot;&#41;;
     * result.getCombinedPhrases&#40;&#41;.forEach&#40;phrase -&gt; &#123;
     *     System.out.println&#40;&quot;Transcription: &quot; + phrase.getText&#40;&#41;&#41;;
     * &#125;&#41;;
     * </pre>
     * <!-- end com.azure.ai.speech.transcription.transcriptionclient.transcribe -->
     *
     * @param body The body of the multipart request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the result of the transcribe operation.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public TranscriptionResult transcribe(TranscribeRequestContent body) {
        // Generated convenience method for transcribeWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return transcribeWithResponse(
            new MultipartFormDataHelper(requestOptions).serializeJsonField("definition", body.getOptions())
                .serializeFileField("audio", body.getAudio() == null ? null : body.getAudio().getContent(),
                    body.getAudio() == null ? null : body.getAudio().getContentType(),
                    body.getAudio() == null ? null : body.getAudio().getFilename())
                .end()
                .getRequestBody(),
            requestOptions).getValue().toObject(TranscriptionResult.class);
    }
}
