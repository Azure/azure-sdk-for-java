// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

package textanalytics.implementation;

import com.azure.core.annotation.BodyParam;
import com.azure.core.annotation.ExpectedResponses;
import com.azure.core.annotation.Host;
import com.azure.core.annotation.HostParam;
import com.azure.core.annotation.Post;
import com.azure.core.annotation.QueryParam;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClientBuilder;
import com.azure.core.annotation.ServiceInterface;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.implementation.RestProxy;
import reactor.core.publisher.Mono;
import textanalytics.models.LanguageBatchInput;
import textanalytics.models.MultiLanguageBatchInput;

/**
 * A builder for creating a new instance of the TextAnalyticsAPI type.
 */
@ServiceClientBuilder(serviceClients = TextAnalyticsAPIImpl.class)
public final class TextAnalyticsAPIBuilder {
    /*
     * Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).
     */
    private String endpoint;

    /**
     * Sets Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).
     *
     * @param endpoint the endpoint value.
     * @return the TextAnalyticsAPIBuilder.
     */
    public TextAnalyticsAPIBuilder endpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }

    /*
     * The HTTP pipeline to send requests through
     */
    private HttpPipeline pipeline;

    /**
     * Sets The HTTP pipeline to send requests through.
     *
     * @param pipeline the pipeline value.
     * @return the TextAnalyticsAPIBuilder.
     */
    public TextAnalyticsAPIBuilder pipeline(HttpPipeline pipeline) {
        this.pipeline = pipeline;
        return this;
    }

    /**
     * Builds an instance of TextAnalyticsAPIImpl with the provided parameters.
     *
     * @return an instance of TextAnalyticsAPIImpl.
     */
    public TextAnalyticsAPIImpl build() {
        if (pipeline == null) {
            this.pipeline = RestProxy.createDefaultPipeline();
        }
        TextAnalyticsAPIImpl client = new TextAnalyticsAPIImpl(pipeline);
        if (this.endpoint != null) {
            client.setEndpoint(this.endpoint);
        }
        return client;
    }
}
