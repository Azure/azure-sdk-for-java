/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.cognitiveservices.v2016_02_01_preview.implementation;

import com.microsoft.azure.AzureEnvironment;
import com.microsoft.azure.AzureResponseBuilder;
import com.microsoft.azure.credentials.AzureTokenCredentials;
import com.microsoft.azure.management.apigeneration.Beta;
import com.microsoft.azure.management.apigeneration.Beta.SinceVersion;
import com.microsoft.azure.arm.resources.AzureConfigurable;
import com.microsoft.azure.serializer.AzureJacksonAdapter;
import com.microsoft.rest.RestClient;
import com.microsoft.azure.management.cognitiveservices.v2016_02_01_preview.CognitiveServicesAccounts;
import com.microsoft.azure.arm.resources.implementation.AzureConfigurableCoreImpl;
import com.microsoft.azure.arm.resources.implementation.ManagerCore;

/**
 * Entry point to Azure CognitiveServices resource management.
 */
public final class CognitiveServicesManager extends ManagerCore<CognitiveServicesManager, CognitiveServicesManagementClientImpl> {
    private CognitiveServicesAccounts cognitiveServicesAccounts;
    /**
    * Get a Configurable instance that can be used to create CognitiveServicesManager with optional configuration.
    *
    * @return the instance allowing configurations
    */
    public static Configurable configure() {
        return new CognitiveServicesManager.ConfigurableImpl();
    }
    /**
    * Creates an instance of CognitiveServicesManager that exposes CognitiveServices resource management API entry points.
    *
    * @param credentials the credentials to use
    * @param subscriptionId the subscription UUID
    * @return the CognitiveServicesManager
    */
    public static CognitiveServicesManager authenticate(AzureTokenCredentials credentials, String subscriptionId) {
        return new CognitiveServicesManager(new RestClient.Builder()
            .withBaseUrl(credentials.environment(), AzureEnvironment.Endpoint.RESOURCE_MANAGER)
            .withCredentials(credentials)
            .withSerializerAdapter(new AzureJacksonAdapter())
            .withResponseBuilderFactory(new AzureResponseBuilder.Factory())
            .build(), subscriptionId);
    }
    /**
    * Creates an instance of CognitiveServicesManager that exposes CognitiveServices resource management API entry points.
    *
    * @param restClient the RestClient to be used for API calls.
    * @param subscriptionId the subscription UUID
    * @return the CognitiveServicesManager
    */
    public static CognitiveServicesManager authenticate(RestClient restClient, String subscriptionId) {
        return new CognitiveServicesManager(restClient, subscriptionId);
    }
    /**
    * The interface allowing configurations to be set.
    */
    public interface Configurable extends AzureConfigurable<Configurable> {
        /**
        * Creates an instance of CognitiveServicesManager that exposes CognitiveServices management API entry points.
        *
        * @param credentials the credentials to use
        * @param subscriptionId the subscription UUID
        * @return the interface exposing CognitiveServices management API entry points that work across subscriptions
        */
        CognitiveServicesManager authenticate(AzureTokenCredentials credentials, String subscriptionId);
    }

    /**
     * @return Entry point to manage CognitiveServicesAccounts.
     */
    public CognitiveServicesAccounts cognitiveServicesAccounts() {
        if (this.cognitiveServicesAccounts == null) {
            this.cognitiveServicesAccounts = new CognitiveServicesAccountsImpl(this);
        }
        return this.cognitiveServicesAccounts;
    }

    /**
    * The implementation for Configurable interface.
    */
    private static final class ConfigurableImpl extends AzureConfigurableCoreImpl<Configurable> implements Configurable {
        public CognitiveServicesManager authenticate(AzureTokenCredentials credentials, String subscriptionId) {
           return CognitiveServicesManager.authenticate(buildRestClient(credentials), subscriptionId);
        }
     }
    private CognitiveServicesManager(RestClient restClient, String subscriptionId) {
        super(
            restClient,
            subscriptionId,
            new CognitiveServicesManagementClientImpl(restClient).withSubscriptionId(subscriptionId));
    }
}
