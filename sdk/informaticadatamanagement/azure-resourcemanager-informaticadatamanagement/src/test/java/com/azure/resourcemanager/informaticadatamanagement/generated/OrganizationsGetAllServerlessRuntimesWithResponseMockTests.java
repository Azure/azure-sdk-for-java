// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.informaticadatamanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.informaticadatamanagement.InformaticaDataManagementManager;
import com.azure.resourcemanager.informaticadatamanagement.models.InformaticaServerlessRuntimeResourceList;
import com.azure.resourcemanager.informaticadatamanagement.models.RuntimeType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OrganizationsGetAllServerlessRuntimesWithResponseMockTests {
    @Test
    public void testGetAllServerlessRuntimesWithResponse() throws Exception {
        String responseStr
            = "{\"informaticaRuntimeResources\":[{\"name\":\"cnunvjsr\",\"createdTime\":\"kfawnopqgikyz\",\"updatedTime\":\"rtxdyuxzejnt\",\"createdBy\":\"sewgioilqukr\",\"updatedBy\":\"dxtqmieoxo\",\"id\":\"ggufhyaomtb\",\"type\":\"SERVERLESS\",\"status\":\"havgrvk\",\"statusLocalized\":\"fo\",\"statusMessage\":\"jzhpjbibgjmfx\",\"serverlessConfigProperties\":{\"subnet\":\"vfcluyovwxnbkfe\",\"applicationType\":\"xscyhwzdgirujbz\",\"resourceGroupName\":\"mvzzbtdcqvp\",\"advancedCustomProperties\":\"yujviylwdshfssn\",\"supplementaryFileLocation\":\"gy\",\"platform\":\"rymsgaojfmw\",\"tags\":\"otmrfhir\",\"vnet\":\"ymoxoftpipiwyczu\",\"executionTimeout\":\"a\",\"computeUnits\":\"qjlihhyuspska\",\"tenantId\":\"vlmfwdgzxulucv\",\"subscriptionId\":\"mrsreuzvxurisjnh\",\"region\":\"txifqj\",\"serverlessArmResourceId\":\"xmrhu\"},\"description\":\"wp\"},{\"name\":\"esutrgjupauutpw\",\"createdTime\":\"qhih\",\"updatedTime\":\"jqgwzp\",\"createdBy\":\"fqntcyp\",\"updatedBy\":\"xjvfoimwksl\",\"id\":\"rcizjxvyd\",\"type\":\"SERVERLESS\",\"status\":\"eacvl\",\"statusLocalized\":\"vygdyft\",\"statusMessage\":\"mrtwna\",\"serverlessConfigProperties\":{\"subnet\":\"slbi\",\"applicationType\":\"ojgcyzt\",\"resourceGroupName\":\"mznbaeqphch\",\"advancedCustomProperties\":\"rn\",\"supplementaryFileLocation\":\"x\",\"platform\":\"uwrykqgaifmvikl\",\"tags\":\"dvk\",\"vnet\":\"ejd\",\"executionTimeout\":\"xcv\",\"computeUnits\":\"rhnj\",\"tenantId\":\"olvtnovqfzge\",\"subscriptionId\":\"dftuljltduce\",\"region\":\"tmczuomejwcwwqi\",\"serverlessArmResourceId\":\"nssxmojmsvpk\"},\"description\":\"rvkwc\"},{\"name\":\"zqljyxgtczh\",\"createdTime\":\"ydbsd\",\"updatedTime\":\"hmkxmaehvbb\",\"createdBy\":\"uripltfnhtba\",\"updatedBy\":\"kgxywr\",\"id\":\"kpyklyhp\",\"type\":\"SERVERLESS\",\"status\":\"odpvruudlgzib\",\"statusLocalized\":\"hostgktstvdxecl\",\"statusMessage\":\"edqbc\",\"serverlessConfigProperties\":{\"subnet\":\"zlhp\",\"applicationType\":\"dqkdlwwqfbu\",\"resourceGroupName\":\"kxtrq\",\"advancedCustomProperties\":\"smlmbtxhwgfwsrta\",\"supplementaryFileLocation\":\"oezbrhubsk\",\"platform\":\"dyg\",\"tags\":\"okkqfqjbvleo\",\"vnet\":\"ml\",\"executionTimeout\":\"qtqzfavyv\",\"computeUnits\":\"qybaryeua\",\"tenantId\":\"kq\",\"subscriptionId\":\"qgzsles\",\"region\":\"bhernntiew\",\"serverlessArmResourceId\":\"cv\"},\"description\":\"uwrbehwagoh\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        InformaticaDataManagementManager manager = InformaticaDataManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        InformaticaServerlessRuntimeResourceList response = manager.organizations()
            .getAllServerlessRuntimesWithResponse("hrnsvbu", "wdvzyy", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("cnunvjsr", response.informaticaRuntimeResources().get(0).name());
        Assertions.assertEquals("kfawnopqgikyz", response.informaticaRuntimeResources().get(0).createdTime());
        Assertions.assertEquals("rtxdyuxzejnt", response.informaticaRuntimeResources().get(0).updatedTime());
        Assertions.assertEquals("sewgioilqukr", response.informaticaRuntimeResources().get(0).createdBy());
        Assertions.assertEquals("dxtqmieoxo", response.informaticaRuntimeResources().get(0).updatedBy());
        Assertions.assertEquals("ggufhyaomtb", response.informaticaRuntimeResources().get(0).id());
        Assertions.assertEquals(RuntimeType.SERVERLESS, response.informaticaRuntimeResources().get(0).type());
        Assertions.assertEquals("havgrvk", response.informaticaRuntimeResources().get(0).status());
        Assertions.assertEquals("fo", response.informaticaRuntimeResources().get(0).statusLocalized());
        Assertions.assertEquals("jzhpjbibgjmfx", response.informaticaRuntimeResources().get(0).statusMessage());
        Assertions.assertEquals("vfcluyovwxnbkfe",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().subnet());
        Assertions.assertEquals("xscyhwzdgirujbz",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().applicationType());
        Assertions.assertEquals("mvzzbtdcqvp",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().resourceGroupName());
        Assertions.assertEquals("yujviylwdshfssn",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().advancedCustomProperties());
        Assertions.assertEquals("gy",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().supplementaryFileLocation());
        Assertions.assertEquals("rymsgaojfmw",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().platform());
        Assertions.assertEquals("otmrfhir",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().tags());
        Assertions.assertEquals("ymoxoftpipiwyczu",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().vnet());
        Assertions.assertEquals("a",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().executionTimeout());
        Assertions.assertEquals("qjlihhyuspska",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().computeUnits());
        Assertions.assertEquals("vlmfwdgzxulucv",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().tenantId());
        Assertions.assertEquals("mrsreuzvxurisjnh",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().subscriptionId());
        Assertions.assertEquals("txifqj",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().region());
        Assertions.assertEquals("xmrhu",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().serverlessArmResourceId());
        Assertions.assertEquals("wp", response.informaticaRuntimeResources().get(0).description());
    }
}
