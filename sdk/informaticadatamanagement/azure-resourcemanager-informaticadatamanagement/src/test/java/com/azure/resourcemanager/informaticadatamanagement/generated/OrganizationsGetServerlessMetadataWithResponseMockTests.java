// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.informaticadatamanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.informaticadatamanagement.InformaticaDataManagementManager;
import com.azure.resourcemanager.informaticadatamanagement.models.PlatformType;
import com.azure.resourcemanager.informaticadatamanagement.models.RuntimeType;
import com.azure.resourcemanager.informaticadatamanagement.models.ServerlessMetadataResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OrganizationsGetServerlessMetadataWithResponseMockTests {
    @Test
    public void testGetServerlessMetadataWithResponse() throws Exception {
        String responseStr
            = "{\"type\":\"SERVERLESS\",\"serverlessConfigProperties\":{\"platform\":\"AZURE\",\"applicationTypes\":[{\"name\":\"bihwqknfdnt\",\"value\":\"chrdgoihxumwcto\"},{\"name\":\"zj\",\"value\":\"udfdlwgg\"}],\"computeUnits\":[{\"name\":\"wtovvtgsein\",\"value\":[\"ufxqknpirgnepttw\",\"msniffc\",\"mqnrojlpijnkr\"]}],\"executionTimeout\":\"rddh\",\"regions\":[{\"id\":\"izzronasxiftozqy\",\"name\":\"f\"}]},\"serverlessRuntimeConfigProperties\":{\"cdiConfigProps\":[{\"engineName\":\"gogczhonnxkrlgny\",\"engineVersion\":\"mossxkkgthrrghxj\",\"applicationConfigs\":[{\"type\":\"hqxvcxgfrpdsofbs\",\"name\":\"rnsvbuswd\",\"value\":\"z\",\"platform\":\"ybycnunvj\",\"customized\":\"rtkfawnopq\",\"defaultValue\":\"ikyzirtxdy\"},{\"type\":\"x\",\"name\":\"ejnt\",\"value\":\"sewgioilqukr\",\"platform\":\"dxtqmieoxo\",\"customized\":\"ggufhyaomtb\",\"defaultValue\":\"hhavgrvkffovjz\"}]},{\"engineName\":\"pjbi\",\"engineVersion\":\"gjmfxumvfcl\",\"applicationConfigs\":[{\"type\":\"ovwxnbkfezzxsc\",\"name\":\"hwzdgirujbz\",\"value\":\"omvzzbtd\",\"platform\":\"qvpn\",\"customized\":\"yujviylwdshfssn\",\"defaultValue\":\"bgye\"}]},{\"engineName\":\"rymsgaojfmw\",\"engineVersion\":\"cotmr\",\"applicationConfigs\":[{\"type\":\"irctymoxoftpipiw\",\"name\":\"czuhxacpqjlihh\",\"value\":\"usps\",\"platform\":\"asdvl\",\"customized\":\"fwdgzxulucvp\",\"defaultValue\":\"mrsreuzvxurisjnh\"},{\"type\":\"ytxifqjzgxmrh\",\"name\":\"blwpcesutrgj\",\"value\":\"pauutpw\",\"platform\":\"qhih\",\"customized\":\"jqgwzp\",\"defaultValue\":\"fqntcyp\"},{\"type\":\"xjvfoimwksl\",\"name\":\"rcizjxvyd\",\"value\":\"ceacvlhvygdy\",\"platform\":\"t\",\"customized\":\"mrtwna\",\"defaultValue\":\"jslb\"},{\"type\":\"wkojgcyztsfmzn\",\"name\":\"aeqphchqnr\",\"value\":\"rpxeh\",\"platform\":\"wrykqgai\",\"customized\":\"mvikl\",\"defaultValue\":\"ydv\"}]}],\"cdieConfigProps\":[{\"engineName\":\"ejd\",\"engineVersion\":\"nxcvds\",\"applicationConfigs\":[{\"type\":\"njivolvtnovq\",\"name\":\"zgemjdftuljlt\",\"value\":\"ucea\",\"platform\":\"tmczuomejwcwwqi\",\"customized\":\"knssxmojm\",\"defaultValue\":\"vpkjpr\"},{\"type\":\"kwcf\",\"name\":\"ql\",\"value\":\"yxgtczh\",\"platform\":\"ydbsd\",\"customized\":\"hmkxmaehvbb\",\"defaultValue\":\"uripltfnhtba\"}]},{\"engineName\":\"kgxywr\",\"engineVersion\":\"kpyklyhp\",\"applicationConfigs\":[{\"type\":\"odpvruudlgzib\",\"name\":\"hostgktstvdxecl\",\"value\":\"edqbc\",\"platform\":\"hzlhplodqkdlww\",\"customized\":\"fbumlkx\",\"defaultValue\":\"rqjfsmlm\"},{\"type\":\"txhwgfws\",\"name\":\"tawc\",\"value\":\"ezbrhubskh\",\"platform\":\"dyg\",\"customized\":\"ookk\",\"defaultValue\":\"fqjbvleo\"}]},{\"engineName\":\"fmluiqtqzfavyvn\",\"engineVersion\":\"qybaryeua\",\"applicationConfigs\":[{\"type\":\"kq\",\"name\":\"bqgzslesjcbhern\",\"value\":\"tiewdj\",\"platform\":\"vbquwr\",\"customized\":\"ehwagoh\",\"defaultValue\":\"uffkmrqemvvh\"}]}]}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        InformaticaDataManagementManager manager = InformaticaDataManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ServerlessMetadataResponse response = manager.organizations()
            .getServerlessMetadataWithResponse("rd", "iwii", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(RuntimeType.SERVERLESS, response.type());
        Assertions.assertEquals(PlatformType.AZURE, response.serverlessConfigProperties().platform());
        Assertions.assertEquals("bihwqknfdnt", response.serverlessConfigProperties().applicationTypes().get(0).name());
        Assertions.assertEquals("chrdgoihxumwcto",
            response.serverlessConfigProperties().applicationTypes().get(0).value());
        Assertions.assertEquals("wtovvtgsein", response.serverlessConfigProperties().computeUnits().get(0).name());
        Assertions.assertEquals("ufxqknpirgnepttw",
            response.serverlessConfigProperties().computeUnits().get(0).value().get(0));
        Assertions.assertEquals("rddh", response.serverlessConfigProperties().executionTimeout());
        Assertions.assertEquals("izzronasxiftozqy", response.serverlessConfigProperties().regions().get(0).id());
        Assertions.assertEquals("f", response.serverlessConfigProperties().regions().get(0).name());
        Assertions.assertEquals("gogczhonnxkrlgny",
            response.serverlessRuntimeConfigProperties().cdiConfigProps().get(0).engineName());
        Assertions.assertEquals("mossxkkgthrrghxj",
            response.serverlessRuntimeConfigProperties().cdiConfigProps().get(0).engineVersion());
        Assertions.assertEquals("hqxvcxgfrpdsofbs",
            response.serverlessRuntimeConfigProperties().cdiConfigProps().get(0).applicationConfigs().get(0).type());
        Assertions.assertEquals("rnsvbuswd",
            response.serverlessRuntimeConfigProperties().cdiConfigProps().get(0).applicationConfigs().get(0).name());
        Assertions.assertEquals("z",
            response.serverlessRuntimeConfigProperties().cdiConfigProps().get(0).applicationConfigs().get(0).value());
        Assertions.assertEquals("ybycnunvj",
            response.serverlessRuntimeConfigProperties()
                .cdiConfigProps()
                .get(0)
                .applicationConfigs()
                .get(0)
                .platform());
        Assertions.assertEquals("rtkfawnopq",
            response.serverlessRuntimeConfigProperties()
                .cdiConfigProps()
                .get(0)
                .applicationConfigs()
                .get(0)
                .customized());
        Assertions.assertEquals("ikyzirtxdy",
            response.serverlessRuntimeConfigProperties()
                .cdiConfigProps()
                .get(0)
                .applicationConfigs()
                .get(0)
                .defaultValue());
        Assertions.assertEquals("ejd",
            response.serverlessRuntimeConfigProperties().cdieConfigProps().get(0).engineName());
        Assertions.assertEquals("nxcvds",
            response.serverlessRuntimeConfigProperties().cdieConfigProps().get(0).engineVersion());
        Assertions.assertEquals("njivolvtnovq",
            response.serverlessRuntimeConfigProperties().cdieConfigProps().get(0).applicationConfigs().get(0).type());
        Assertions.assertEquals("zgemjdftuljlt",
            response.serverlessRuntimeConfigProperties().cdieConfigProps().get(0).applicationConfigs().get(0).name());
        Assertions.assertEquals("ucea",
            response.serverlessRuntimeConfigProperties().cdieConfigProps().get(0).applicationConfigs().get(0).value());
        Assertions.assertEquals("tmczuomejwcwwqi",
            response.serverlessRuntimeConfigProperties()
                .cdieConfigProps()
                .get(0)
                .applicationConfigs()
                .get(0)
                .platform());
        Assertions.assertEquals("knssxmojm",
            response.serverlessRuntimeConfigProperties()
                .cdieConfigProps()
                .get(0)
                .applicationConfigs()
                .get(0)
                .customized());
        Assertions.assertEquals("vpkjpr",
            response.serverlessRuntimeConfigProperties()
                .cdieConfigProps()
                .get(0)
                .applicationConfigs()
                .get(0)
                .defaultValue());
    }
}
