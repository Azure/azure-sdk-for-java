// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.informaticadatamanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.informaticadatamanagement.models.CompanyDetailsUpdate;
import com.azure.resourcemanager.informaticadatamanagement.models.InformaticaOrganizationResourceUpdate;
import com.azure.resourcemanager.informaticadatamanagement.models.MarketplaceDetailsUpdate;
import com.azure.resourcemanager.informaticadatamanagement.models.OfferDetailsUpdate;
import com.azure.resourcemanager.informaticadatamanagement.models.OrganizationPropertiesCustomUpdate;
import com.azure.resourcemanager.informaticadatamanagement.models.UserDetailsUpdate;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class InformaticaOrganizationResourceUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InformaticaOrganizationResourceUpdate model = BinaryData.fromString(
            "{\"tags\":{\"smodmgloug\":\"flmmnk\",\"wtmutduq\":\"b\"},\"properties\":{\"informaticaOrganizationProperties\":{\"tags\":{\"kdosvqw\":\"pwgcuertu\",\"bjf\":\"bmdg\",\"bexppb\":\"dgmb\",\"rolfpfp\":\"tq\"},\"properties\":{\"informaticaOrganizationProperties\":{\"tags\":{\"gjyjgzjaoyfhrtxi\":\"qux\",\"rkujy\":\"n\"},\"properties\":{\"informaticaOrganizationProperties\":{},\"marketplaceDetails\":{},\"userDetails\":{},\"companyDetails\":{},\"existingResourceId\":\"fqawrlyxw\"}},\"marketplaceDetails\":{\"marketplaceSubscriptionId\":\"prbnwbxgjvtbv\",\"offerDetails\":{\"publisherId\":\"szdnr\",\"offerId\":\"qguhmuo\",\"planId\":\"f\",\"planName\":\"wzwbnguitn\",\"termUnit\":\"izgazxu\",\"termId\":\"zuckyfi\"}},\"userDetails\":{\"firstName\":\"idf\",\"lastName\":\"wdzuhtymwisd\",\"emailAddress\":\"thwxmnteiwaopvkm\",\"upn\":\"c\",\"phoneNumber\":\"xdcu\"},\"companyDetails\":{\"companyName\":\"srp\",\"officeAddress\":\"zidnsezcxtbzsgfy\",\"country\":\"sne\",\"domain\":\"dwzjeiach\",\"business\":\"osfln\",\"numberOfEmployees\":13730136},\"existingResourceId\":\"qpteeh\"}},\"marketplaceDetails\":{\"marketplaceSubscriptionId\":\"ypyqrimzinp\",\"offerDetails\":{\"publisherId\":\"jdkirsoodqx\",\"offerId\":\"rmnohj\",\"planId\":\"kwh\",\"planName\":\"oifiyipjxsqwpgr\",\"termUnit\":\"znorcj\",\"termId\":\"snb\"}},\"userDetails\":{\"firstName\":\"abnmocpcyshu\",\"lastName\":\"afbljjgpbtoqcjmk\",\"emailAddress\":\"a\",\"upn\":\"qidtqajzyu\",\"phoneNumber\":\"kudjkrlkhb\"},\"companyDetails\":{\"companyName\":\"epgzgqexz\",\"officeAddress\":\"c\",\"country\":\"c\",\"domain\":\"ierhhbcsglummaj\",\"business\":\"aodxo\",\"numberOfEmployees\":547031215},\"existingResourceId\":\"xkqpxo\"}}")
            .toObject(InformaticaOrganizationResourceUpdate.class);
        Assertions.assertEquals("flmmnk", model.tags().get("smodmgloug"));
        Assertions.assertEquals("pwgcuertu",
            model.properties().informaticaOrganizationProperties().tags().get("kdosvqw"));
        Assertions.assertEquals("qux",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .informaticaOrganizationProperties()
                .tags()
                .get("gjyjgzjaoyfhrtxi"));
        Assertions.assertEquals("fqawrlyxw",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .informaticaOrganizationProperties()
                .properties()
                .existingResourceId());
        Assertions.assertEquals("prbnwbxgjvtbv",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .marketplaceSubscriptionId());
        Assertions.assertEquals("szdnr",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .offerDetails()
                .publisherId());
        Assertions.assertEquals("qguhmuo",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .offerDetails()
                .offerId());
        Assertions.assertEquals("f",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .offerDetails()
                .planId());
        Assertions.assertEquals("wzwbnguitn",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .offerDetails()
                .planName());
        Assertions.assertEquals("izgazxu",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .offerDetails()
                .termUnit());
        Assertions.assertEquals("zuckyfi",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .offerDetails()
                .termId());
        Assertions.assertEquals("idf",
            model.properties().informaticaOrganizationProperties().properties().userDetails().firstName());
        Assertions.assertEquals("wdzuhtymwisd",
            model.properties().informaticaOrganizationProperties().properties().userDetails().lastName());
        Assertions.assertEquals("thwxmnteiwaopvkm",
            model.properties().informaticaOrganizationProperties().properties().userDetails().emailAddress());
        Assertions.assertEquals("c",
            model.properties().informaticaOrganizationProperties().properties().userDetails().upn());
        Assertions.assertEquals("xdcu",
            model.properties().informaticaOrganizationProperties().properties().userDetails().phoneNumber());
        Assertions.assertEquals("srp",
            model.properties().informaticaOrganizationProperties().properties().companyDetails().companyName());
        Assertions.assertEquals("zidnsezcxtbzsgfy",
            model.properties().informaticaOrganizationProperties().properties().companyDetails().officeAddress());
        Assertions.assertEquals("sne",
            model.properties().informaticaOrganizationProperties().properties().companyDetails().country());
        Assertions.assertEquals("dwzjeiach",
            model.properties().informaticaOrganizationProperties().properties().companyDetails().domain());
        Assertions.assertEquals("osfln",
            model.properties().informaticaOrganizationProperties().properties().companyDetails().business());
        Assertions.assertEquals(13730136,
            model.properties().informaticaOrganizationProperties().properties().companyDetails().numberOfEmployees());
        Assertions.assertEquals("qpteeh",
            model.properties().informaticaOrganizationProperties().properties().existingResourceId());
        Assertions.assertEquals("ypyqrimzinp", model.properties().marketplaceDetails().marketplaceSubscriptionId());
        Assertions.assertEquals("jdkirsoodqx", model.properties().marketplaceDetails().offerDetails().publisherId());
        Assertions.assertEquals("rmnohj", model.properties().marketplaceDetails().offerDetails().offerId());
        Assertions.assertEquals("kwh", model.properties().marketplaceDetails().offerDetails().planId());
        Assertions.assertEquals("oifiyipjxsqwpgr", model.properties().marketplaceDetails().offerDetails().planName());
        Assertions.assertEquals("znorcj", model.properties().marketplaceDetails().offerDetails().termUnit());
        Assertions.assertEquals("snb", model.properties().marketplaceDetails().offerDetails().termId());
        Assertions.assertEquals("abnmocpcyshu", model.properties().userDetails().firstName());
        Assertions.assertEquals("afbljjgpbtoqcjmk", model.properties().userDetails().lastName());
        Assertions.assertEquals("a", model.properties().userDetails().emailAddress());
        Assertions.assertEquals("qidtqajzyu", model.properties().userDetails().upn());
        Assertions.assertEquals("kudjkrlkhb", model.properties().userDetails().phoneNumber());
        Assertions.assertEquals("epgzgqexz", model.properties().companyDetails().companyName());
        Assertions.assertEquals("c", model.properties().companyDetails().officeAddress());
        Assertions.assertEquals("c", model.properties().companyDetails().country());
        Assertions.assertEquals("ierhhbcsglummaj", model.properties().companyDetails().domain());
        Assertions.assertEquals("aodxo", model.properties().companyDetails().business());
        Assertions.assertEquals(547031215, model.properties().companyDetails().numberOfEmployees());
        Assertions.assertEquals("xkqpxo", model.properties().existingResourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InformaticaOrganizationResourceUpdate model
            = new InformaticaOrganizationResourceUpdate().withTags(mapOf("smodmgloug", "flmmnk", "wtmutduq", "b"))
                .withProperties(
                    new OrganizationPropertiesCustomUpdate()
                        .withInformaticaOrganizationProperties(new InformaticaOrganizationResourceUpdate()
                            .withTags(mapOf("kdosvqw", "pwgcuertu", "bjf", "bmdg", "bexppb", "dgmb", "rolfpfp", "tq"))
                            .withProperties(new OrganizationPropertiesCustomUpdate()
                                .withInformaticaOrganizationProperties(new InformaticaOrganizationResourceUpdate()
                                    .withTags(mapOf("gjyjgzjaoyfhrtxi", "qux", "rkujy", "n"))
                                    .withProperties(new OrganizationPropertiesCustomUpdate()
                                        .withInformaticaOrganizationProperties(
                                            new InformaticaOrganizationResourceUpdate())
                                        .withMarketplaceDetails(new MarketplaceDetailsUpdate())
                                        .withUserDetails(new UserDetailsUpdate())
                                        .withCompanyDetails(new CompanyDetailsUpdate())
                                        .withExistingResourceId("fqawrlyxw")))
                                .withMarketplaceDetails(
                                    new MarketplaceDetailsUpdate().withMarketplaceSubscriptionId("prbnwbxgjvtbv")
                                        .withOfferDetails(new OfferDetailsUpdate().withPublisherId("szdnr")
                                            .withOfferId("qguhmuo")
                                            .withPlanId("f")
                                            .withPlanName("wzwbnguitn")
                                            .withTermUnit("izgazxu")
                                            .withTermId("zuckyfi")))
                                .withUserDetails(new UserDetailsUpdate().withFirstName("idf")
                                    .withLastName("wdzuhtymwisd")
                                    .withEmailAddress("thwxmnteiwaopvkm")
                                    .withUpn("c")
                                    .withPhoneNumber("xdcu"))
                                .withCompanyDetails(new CompanyDetailsUpdate().withCompanyName("srp")
                                    .withOfficeAddress("zidnsezcxtbzsgfy")
                                    .withCountry("sne")
                                    .withDomain("dwzjeiach")
                                    .withBusiness("osfln")
                                    .withNumberOfEmployees(13730136))
                                .withExistingResourceId("qpteeh")))
                        .withMarketplaceDetails(
                            new MarketplaceDetailsUpdate().withMarketplaceSubscriptionId("ypyqrimzinp")
                                .withOfferDetails(new OfferDetailsUpdate().withPublisherId("jdkirsoodqx")
                                    .withOfferId("rmnohj")
                                    .withPlanId("kwh")
                                    .withPlanName("oifiyipjxsqwpgr")
                                    .withTermUnit("znorcj")
                                    .withTermId("snb")))
                        .withUserDetails(new UserDetailsUpdate().withFirstName("abnmocpcyshu")
                            .withLastName("afbljjgpbtoqcjmk")
                            .withEmailAddress("a")
                            .withUpn("qidtqajzyu")
                            .withPhoneNumber("kudjkrlkhb"))
                        .withCompanyDetails(new CompanyDetailsUpdate().withCompanyName("epgzgqexz")
                            .withOfficeAddress("c")
                            .withCountry("c")
                            .withDomain("ierhhbcsglummaj")
                            .withBusiness("aodxo")
                            .withNumberOfEmployees(547031215))
                        .withExistingResourceId("xkqpxo"));
        model = BinaryData.fromObject(model).toObject(InformaticaOrganizationResourceUpdate.class);
        Assertions.assertEquals("flmmnk", model.tags().get("smodmgloug"));
        Assertions.assertEquals("pwgcuertu",
            model.properties().informaticaOrganizationProperties().tags().get("kdosvqw"));
        Assertions.assertEquals("qux",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .informaticaOrganizationProperties()
                .tags()
                .get("gjyjgzjaoyfhrtxi"));
        Assertions.assertEquals("fqawrlyxw",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .informaticaOrganizationProperties()
                .properties()
                .existingResourceId());
        Assertions.assertEquals("prbnwbxgjvtbv",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .marketplaceSubscriptionId());
        Assertions.assertEquals("szdnr",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .offerDetails()
                .publisherId());
        Assertions.assertEquals("qguhmuo",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .offerDetails()
                .offerId());
        Assertions.assertEquals("f",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .offerDetails()
                .planId());
        Assertions.assertEquals("wzwbnguitn",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .offerDetails()
                .planName());
        Assertions.assertEquals("izgazxu",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .offerDetails()
                .termUnit());
        Assertions.assertEquals("zuckyfi",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .offerDetails()
                .termId());
        Assertions.assertEquals("idf",
            model.properties().informaticaOrganizationProperties().properties().userDetails().firstName());
        Assertions.assertEquals("wdzuhtymwisd",
            model.properties().informaticaOrganizationProperties().properties().userDetails().lastName());
        Assertions.assertEquals("thwxmnteiwaopvkm",
            model.properties().informaticaOrganizationProperties().properties().userDetails().emailAddress());
        Assertions.assertEquals("c",
            model.properties().informaticaOrganizationProperties().properties().userDetails().upn());
        Assertions.assertEquals("xdcu",
            model.properties().informaticaOrganizationProperties().properties().userDetails().phoneNumber());
        Assertions.assertEquals("srp",
            model.properties().informaticaOrganizationProperties().properties().companyDetails().companyName());
        Assertions.assertEquals("zidnsezcxtbzsgfy",
            model.properties().informaticaOrganizationProperties().properties().companyDetails().officeAddress());
        Assertions.assertEquals("sne",
            model.properties().informaticaOrganizationProperties().properties().companyDetails().country());
        Assertions.assertEquals("dwzjeiach",
            model.properties().informaticaOrganizationProperties().properties().companyDetails().domain());
        Assertions.assertEquals("osfln",
            model.properties().informaticaOrganizationProperties().properties().companyDetails().business());
        Assertions.assertEquals(13730136,
            model.properties().informaticaOrganizationProperties().properties().companyDetails().numberOfEmployees());
        Assertions.assertEquals("qpteeh",
            model.properties().informaticaOrganizationProperties().properties().existingResourceId());
        Assertions.assertEquals("ypyqrimzinp", model.properties().marketplaceDetails().marketplaceSubscriptionId());
        Assertions.assertEquals("jdkirsoodqx", model.properties().marketplaceDetails().offerDetails().publisherId());
        Assertions.assertEquals("rmnohj", model.properties().marketplaceDetails().offerDetails().offerId());
        Assertions.assertEquals("kwh", model.properties().marketplaceDetails().offerDetails().planId());
        Assertions.assertEquals("oifiyipjxsqwpgr", model.properties().marketplaceDetails().offerDetails().planName());
        Assertions.assertEquals("znorcj", model.properties().marketplaceDetails().offerDetails().termUnit());
        Assertions.assertEquals("snb", model.properties().marketplaceDetails().offerDetails().termId());
        Assertions.assertEquals("abnmocpcyshu", model.properties().userDetails().firstName());
        Assertions.assertEquals("afbljjgpbtoqcjmk", model.properties().userDetails().lastName());
        Assertions.assertEquals("a", model.properties().userDetails().emailAddress());
        Assertions.assertEquals("qidtqajzyu", model.properties().userDetails().upn());
        Assertions.assertEquals("kudjkrlkhb", model.properties().userDetails().phoneNumber());
        Assertions.assertEquals("epgzgqexz", model.properties().companyDetails().companyName());
        Assertions.assertEquals("c", model.properties().companyDetails().officeAddress());
        Assertions.assertEquals("c", model.properties().companyDetails().country());
        Assertions.assertEquals("ierhhbcsglummaj", model.properties().companyDetails().domain());
        Assertions.assertEquals("aodxo", model.properties().companyDetails().business());
        Assertions.assertEquals(547031215, model.properties().companyDetails().numberOfEmployees());
        Assertions.assertEquals("xkqpxo", model.properties().existingResourceId());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
