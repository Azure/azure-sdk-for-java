// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.informaticadatamanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.informaticadatamanagement.models.CompanyDetailsUpdate;
import com.azure.resourcemanager.informaticadatamanagement.models.InformaticaOrganizationResourceUpdate;
import com.azure.resourcemanager.informaticadatamanagement.models.MarketplaceDetailsUpdate;
import com.azure.resourcemanager.informaticadatamanagement.models.OfferDetailsUpdate;
import com.azure.resourcemanager.informaticadatamanagement.models.OrganizationPropertiesCustomUpdate;
import com.azure.resourcemanager.informaticadatamanagement.models.UserDetailsUpdate;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class InformaticaOrganizationResourceUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InformaticaOrganizationResourceUpdate model = BinaryData.fromString(
            "{\"tags\":{\"jcmmxdcufufsrp\":\"km\",\"sgfyccsnew\":\"mzidnsezcxtb\",\"oosflnr\":\"dwzjeiach\",\"vypyqrimzinpv\":\"sfqpteehz\"},\"properties\":{\"informaticaOrganizationProperties\":{\"tags\":{\"ckwhds\":\"irsoodqxhcrmnohj\",\"znorcj\":\"ifiyipjxsqwpgrj\",\"xqabnmocpcysh\":\"vsnb\"},\"properties\":{\"informaticaOrganizationProperties\":{\"tags\":{\"j\":\"bl\"},\"properties\":{\"informaticaOrganizationProperties\":{},\"marketplaceDetails\":{},\"userDetails\":{},\"companyDetails\":{},\"existingResourceId\":\"jmkljavbqidtqajz\"}},\"marketplaceDetails\":{\"marketplaceSubscriptionId\":\"pku\",\"offerDetails\":{\"publisherId\":\"rlkhbzhfepgzgq\",\"offerId\":\"zloc\",\"planId\":\"c\",\"planName\":\"ierhhbcsglummaj\",\"termUnit\":\"aodxo\",\"termId\":\"bdxkqpxokaj\"}},\"userDetails\":{\"firstName\":\"pimexgstxgcpodg\",\"lastName\":\"ajrmvdjwzrlovmc\",\"emailAddress\":\"hijco\",\"upn\":\"ctbzaq\",\"phoneNumber\":\"sycbkbfk\"},\"companyDetails\":{\"companyName\":\"dkexxppofm\",\"officeAddress\":\"x\",\"country\":\"jpgd\",\"domain\":\"ocjjxhvpmouexh\",\"business\":\"xibqeojnx\",\"numberOfEmployees\":2010157167},\"existingResourceId\":\"ddntwndei\"}},\"marketplaceDetails\":{\"marketplaceSubscriptionId\":\"w\",\"offerDetails\":{\"publisherId\":\"aoqvuh\",\"offerId\":\"cffcyddglmj\",\"planId\":\"jqkwpyeicx\",\"planName\":\"ciwqvhk\",\"termUnit\":\"xuigdtopbobj\",\"termId\":\"hm\"}},\"userDetails\":{\"firstName\":\"a\",\"lastName\":\"uhrzayvvt\",\"emailAddress\":\"vdfgiotk\",\"upn\":\"utqxlngx\",\"phoneNumber\":\"fgugnxkrxdqmid\"},\"companyDetails\":{\"companyName\":\"zrvqdr\",\"officeAddress\":\"hjybigehoqfbo\",\"country\":\"kanyktzlcuiywg\",\"domain\":\"wgndrvynhzgpp\",\"business\":\"cgyncocpecf\",\"numberOfEmployees\":925016585},\"existingResourceId\":\"oo\"}}")
            .toObject(InformaticaOrganizationResourceUpdate.class);
        Assertions.assertEquals("km", model.tags().get("jcmmxdcufufsrp"));
        Assertions.assertEquals("irsoodqxhcrmnohj",
            model.properties().informaticaOrganizationProperties().tags().get("ckwhds"));
        Assertions.assertEquals("bl",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .informaticaOrganizationProperties()
                .tags()
                .get("j"));
        Assertions.assertEquals("jmkljavbqidtqajz",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .informaticaOrganizationProperties()
                .properties()
                .existingResourceId());
        Assertions.assertEquals("pku",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .marketplaceSubscriptionId());
        Assertions.assertEquals("rlkhbzhfepgzgq",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .offerDetails()
                .publisherId());
        Assertions.assertEquals("zloc",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .offerDetails()
                .offerId());
        Assertions.assertEquals("c",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .offerDetails()
                .planId());
        Assertions.assertEquals("ierhhbcsglummaj",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .offerDetails()
                .planName());
        Assertions.assertEquals("aodxo",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .offerDetails()
                .termUnit());
        Assertions.assertEquals("bdxkqpxokaj",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .offerDetails()
                .termId());
        Assertions.assertEquals("pimexgstxgcpodg",
            model.properties().informaticaOrganizationProperties().properties().userDetails().firstName());
        Assertions.assertEquals("ajrmvdjwzrlovmc",
            model.properties().informaticaOrganizationProperties().properties().userDetails().lastName());
        Assertions.assertEquals("hijco",
            model.properties().informaticaOrganizationProperties().properties().userDetails().emailAddress());
        Assertions.assertEquals("ctbzaq",
            model.properties().informaticaOrganizationProperties().properties().userDetails().upn());
        Assertions.assertEquals("sycbkbfk",
            model.properties().informaticaOrganizationProperties().properties().userDetails().phoneNumber());
        Assertions.assertEquals("dkexxppofm",
            model.properties().informaticaOrganizationProperties().properties().companyDetails().companyName());
        Assertions.assertEquals("x",
            model.properties().informaticaOrganizationProperties().properties().companyDetails().officeAddress());
        Assertions.assertEquals("jpgd",
            model.properties().informaticaOrganizationProperties().properties().companyDetails().country());
        Assertions.assertEquals("ocjjxhvpmouexh",
            model.properties().informaticaOrganizationProperties().properties().companyDetails().domain());
        Assertions.assertEquals("xibqeojnx",
            model.properties().informaticaOrganizationProperties().properties().companyDetails().business());
        Assertions.assertEquals(2010157167,
            model.properties().informaticaOrganizationProperties().properties().companyDetails().numberOfEmployees());
        Assertions.assertEquals("ddntwndei",
            model.properties().informaticaOrganizationProperties().properties().existingResourceId());
        Assertions.assertEquals("w", model.properties().marketplaceDetails().marketplaceSubscriptionId());
        Assertions.assertEquals("aoqvuh", model.properties().marketplaceDetails().offerDetails().publisherId());
        Assertions.assertEquals("cffcyddglmj", model.properties().marketplaceDetails().offerDetails().offerId());
        Assertions.assertEquals("jqkwpyeicx", model.properties().marketplaceDetails().offerDetails().planId());
        Assertions.assertEquals("ciwqvhk", model.properties().marketplaceDetails().offerDetails().planName());
        Assertions.assertEquals("xuigdtopbobj", model.properties().marketplaceDetails().offerDetails().termUnit());
        Assertions.assertEquals("hm", model.properties().marketplaceDetails().offerDetails().termId());
        Assertions.assertEquals("a", model.properties().userDetails().firstName());
        Assertions.assertEquals("uhrzayvvt", model.properties().userDetails().lastName());
        Assertions.assertEquals("vdfgiotk", model.properties().userDetails().emailAddress());
        Assertions.assertEquals("utqxlngx", model.properties().userDetails().upn());
        Assertions.assertEquals("fgugnxkrxdqmid", model.properties().userDetails().phoneNumber());
        Assertions.assertEquals("zrvqdr", model.properties().companyDetails().companyName());
        Assertions.assertEquals("hjybigehoqfbo", model.properties().companyDetails().officeAddress());
        Assertions.assertEquals("kanyktzlcuiywg", model.properties().companyDetails().country());
        Assertions.assertEquals("wgndrvynhzgpp", model.properties().companyDetails().domain());
        Assertions.assertEquals("cgyncocpecf", model.properties().companyDetails().business());
        Assertions.assertEquals(925016585, model.properties().companyDetails().numberOfEmployees());
        Assertions.assertEquals("oo", model.properties().existingResourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InformaticaOrganizationResourceUpdate model
            = new InformaticaOrganizationResourceUpdate()
                .withTags(mapOf("jcmmxdcufufsrp", "km", "sgfyccsnew", "mzidnsezcxtb", "oosflnr", "dwzjeiach",
                    "vypyqrimzinpv", "sfqpteehz"))
                .withProperties(new OrganizationPropertiesCustomUpdate()
                    .withInformaticaOrganizationProperties(new InformaticaOrganizationResourceUpdate()
                        .withTags(mapOf("ckwhds", "irsoodqxhcrmnohj", "znorcj", "ifiyipjxsqwpgrj", "xqabnmocpcysh",
                            "vsnb"))
                        .withProperties(
                            new OrganizationPropertiesCustomUpdate()
                                .withInformaticaOrganizationProperties(
                                    new InformaticaOrganizationResourceUpdate().withTags(mapOf("j", "bl"))
                                        .withProperties(new OrganizationPropertiesCustomUpdate()
                                            .withInformaticaOrganizationProperties(
                                                new InformaticaOrganizationResourceUpdate())
                                            .withMarketplaceDetails(new MarketplaceDetailsUpdate())
                                            .withUserDetails(new UserDetailsUpdate())
                                            .withCompanyDetails(new CompanyDetailsUpdate())
                                            .withExistingResourceId("jmkljavbqidtqajz")))
                                .withMarketplaceDetails(
                                    new MarketplaceDetailsUpdate().withMarketplaceSubscriptionId("pku")
                                        .withOfferDetails(new OfferDetailsUpdate().withPublisherId("rlkhbzhfepgzgq")
                                            .withOfferId("zloc")
                                            .withPlanId("c")
                                            .withPlanName("ierhhbcsglummaj")
                                            .withTermUnit("aodxo")
                                            .withTermId("bdxkqpxokaj")))
                                .withUserDetails(new UserDetailsUpdate().withFirstName("pimexgstxgcpodg")
                                    .withLastName("ajrmvdjwzrlovmc")
                                    .withEmailAddress("hijco")
                                    .withUpn("ctbzaq")
                                    .withPhoneNumber("sycbkbfk"))
                                .withCompanyDetails(new CompanyDetailsUpdate().withCompanyName("dkexxppofm")
                                    .withOfficeAddress("x")
                                    .withCountry("jpgd")
                                    .withDomain("ocjjxhvpmouexh")
                                    .withBusiness("xibqeojnx")
                                    .withNumberOfEmployees(2010157167))
                                .withExistingResourceId("ddntwndei")))
                    .withMarketplaceDetails(new MarketplaceDetailsUpdate().withMarketplaceSubscriptionId("w")
                        .withOfferDetails(new OfferDetailsUpdate().withPublisherId("aoqvuh")
                            .withOfferId("cffcyddglmj")
                            .withPlanId("jqkwpyeicx")
                            .withPlanName("ciwqvhk")
                            .withTermUnit("xuigdtopbobj")
                            .withTermId("hm")))
                    .withUserDetails(new UserDetailsUpdate().withFirstName("a")
                        .withLastName("uhrzayvvt")
                        .withEmailAddress("vdfgiotk")
                        .withUpn("utqxlngx")
                        .withPhoneNumber("fgugnxkrxdqmid"))
                    .withCompanyDetails(new CompanyDetailsUpdate().withCompanyName("zrvqdr")
                        .withOfficeAddress("hjybigehoqfbo")
                        .withCountry("kanyktzlcuiywg")
                        .withDomain("wgndrvynhzgpp")
                        .withBusiness("cgyncocpecf")
                        .withNumberOfEmployees(925016585))
                    .withExistingResourceId("oo"));
        model = BinaryData.fromObject(model).toObject(InformaticaOrganizationResourceUpdate.class);
        Assertions.assertEquals("km", model.tags().get("jcmmxdcufufsrp"));
        Assertions.assertEquals("irsoodqxhcrmnohj",
            model.properties().informaticaOrganizationProperties().tags().get("ckwhds"));
        Assertions.assertEquals("bl",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .informaticaOrganizationProperties()
                .tags()
                .get("j"));
        Assertions.assertEquals("jmkljavbqidtqajz",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .informaticaOrganizationProperties()
                .properties()
                .existingResourceId());
        Assertions.assertEquals("pku",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .marketplaceSubscriptionId());
        Assertions.assertEquals("rlkhbzhfepgzgq",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .offerDetails()
                .publisherId());
        Assertions.assertEquals("zloc",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .offerDetails()
                .offerId());
        Assertions.assertEquals("c",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .offerDetails()
                .planId());
        Assertions.assertEquals("ierhhbcsglummaj",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .offerDetails()
                .planName());
        Assertions.assertEquals("aodxo",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .offerDetails()
                .termUnit());
        Assertions.assertEquals("bdxkqpxokaj",
            model.properties()
                .informaticaOrganizationProperties()
                .properties()
                .marketplaceDetails()
                .offerDetails()
                .termId());
        Assertions.assertEquals("pimexgstxgcpodg",
            model.properties().informaticaOrganizationProperties().properties().userDetails().firstName());
        Assertions.assertEquals("ajrmvdjwzrlovmc",
            model.properties().informaticaOrganizationProperties().properties().userDetails().lastName());
        Assertions.assertEquals("hijco",
            model.properties().informaticaOrganizationProperties().properties().userDetails().emailAddress());
        Assertions.assertEquals("ctbzaq",
            model.properties().informaticaOrganizationProperties().properties().userDetails().upn());
        Assertions.assertEquals("sycbkbfk",
            model.properties().informaticaOrganizationProperties().properties().userDetails().phoneNumber());
        Assertions.assertEquals("dkexxppofm",
            model.properties().informaticaOrganizationProperties().properties().companyDetails().companyName());
        Assertions.assertEquals("x",
            model.properties().informaticaOrganizationProperties().properties().companyDetails().officeAddress());
        Assertions.assertEquals("jpgd",
            model.properties().informaticaOrganizationProperties().properties().companyDetails().country());
        Assertions.assertEquals("ocjjxhvpmouexh",
            model.properties().informaticaOrganizationProperties().properties().companyDetails().domain());
        Assertions.assertEquals("xibqeojnx",
            model.properties().informaticaOrganizationProperties().properties().companyDetails().business());
        Assertions.assertEquals(2010157167,
            model.properties().informaticaOrganizationProperties().properties().companyDetails().numberOfEmployees());
        Assertions.assertEquals("ddntwndei",
            model.properties().informaticaOrganizationProperties().properties().existingResourceId());
        Assertions.assertEquals("w", model.properties().marketplaceDetails().marketplaceSubscriptionId());
        Assertions.assertEquals("aoqvuh", model.properties().marketplaceDetails().offerDetails().publisherId());
        Assertions.assertEquals("cffcyddglmj", model.properties().marketplaceDetails().offerDetails().offerId());
        Assertions.assertEquals("jqkwpyeicx", model.properties().marketplaceDetails().offerDetails().planId());
        Assertions.assertEquals("ciwqvhk", model.properties().marketplaceDetails().offerDetails().planName());
        Assertions.assertEquals("xuigdtopbobj", model.properties().marketplaceDetails().offerDetails().termUnit());
        Assertions.assertEquals("hm", model.properties().marketplaceDetails().offerDetails().termId());
        Assertions.assertEquals("a", model.properties().userDetails().firstName());
        Assertions.assertEquals("uhrzayvvt", model.properties().userDetails().lastName());
        Assertions.assertEquals("vdfgiotk", model.properties().userDetails().emailAddress());
        Assertions.assertEquals("utqxlngx", model.properties().userDetails().upn());
        Assertions.assertEquals("fgugnxkrxdqmid", model.properties().userDetails().phoneNumber());
        Assertions.assertEquals("zrvqdr", model.properties().companyDetails().companyName());
        Assertions.assertEquals("hjybigehoqfbo", model.properties().companyDetails().officeAddress());
        Assertions.assertEquals("kanyktzlcuiywg", model.properties().companyDetails().country());
        Assertions.assertEquals("wgndrvynhzgpp", model.properties().companyDetails().domain());
        Assertions.assertEquals("cgyncocpecf", model.properties().companyDetails().business());
        Assertions.assertEquals(925016585, model.properties().companyDetails().numberOfEmployees());
        Assertions.assertEquals("oo", model.properties().existingResourceId());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
