// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.informaticadatamanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.informaticadatamanagement.models.NetworkInterfaceConfigurationUpdate;
import com.azure.resourcemanager.informaticadatamanagement.models.ServerlessRuntimeNetworkProfileUpdate;
import org.junit.jupiter.api.Assertions;

public final class ServerlessRuntimeNetworkProfileUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServerlessRuntimeNetworkProfileUpdate model = BinaryData.fromString(
            "{\"networkInterfaceConfiguration\":{\"vnetId\":\"oaxoruzfgsqu\",\"subnetId\":\"xrxxlep\",\"vnetResourceGuid\":\"amxjezwlw\"}}")
            .toObject(ServerlessRuntimeNetworkProfileUpdate.class);
        Assertions.assertEquals("oaxoruzfgsqu", model.networkInterfaceConfiguration().vnetId());
        Assertions.assertEquals("xrxxlep", model.networkInterfaceConfiguration().subnetId());
        Assertions.assertEquals("amxjezwlw", model.networkInterfaceConfiguration().vnetResourceGuid());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServerlessRuntimeNetworkProfileUpdate model = new ServerlessRuntimeNetworkProfileUpdate()
            .withNetworkInterfaceConfiguration(new NetworkInterfaceConfigurationUpdate().withVnetId("oaxoruzfgsqu")
                .withSubnetId("xrxxlep")
                .withVnetResourceGuid("amxjezwlw"));
        model = BinaryData.fromObject(model).toObject(ServerlessRuntimeNetworkProfileUpdate.class);
        Assertions.assertEquals("oaxoruzfgsqu", model.networkInterfaceConfiguration().vnetId());
        Assertions.assertEquals("xrxxlep", model.networkInterfaceConfiguration().subnetId());
        Assertions.assertEquals("amxjezwlw", model.networkInterfaceConfiguration().vnetResourceGuid());
    }
}
