// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.informaticadatamanagement.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.informaticadatamanagement.models.RuntimeType;
import com.azure.resourcemanager.informaticadatamanagement.models.ServerlessConfigProperties;
import com.azure.resourcemanager.informaticadatamanagement.models.ServerlessRuntimeConfigProperties;
import java.io.IOException;

/**
 * Serverless Runtime environment Metadata response.
 */
@Immutable
public final class ServerlessMetadataResponseInner implements JsonSerializable<ServerlessMetadataResponseInner> {
    /*
     * type of the runtime environment.
     */
    private RuntimeType type;

    /*
     * serverless config properties
     */
    private ServerlessConfigProperties serverlessConfigProperties;

    /*
     * serverless runtime config properties
     */
    private ServerlessRuntimeConfigProperties serverlessRuntimeConfigProperties;

    /**
     * Creates an instance of ServerlessMetadataResponseInner class.
     */
    private ServerlessMetadataResponseInner() {
    }

    /**
     * Get the type property: type of the runtime environment.
     * 
     * @return the type value.
     */
    public RuntimeType type() {
        return this.type;
    }

    /**
     * Get the serverlessConfigProperties property: serverless config properties.
     * 
     * @return the serverlessConfigProperties value.
     */
    public ServerlessConfigProperties serverlessConfigProperties() {
        return this.serverlessConfigProperties;
    }

    /**
     * Get the serverlessRuntimeConfigProperties property: serverless runtime config properties.
     * 
     * @return the serverlessRuntimeConfigProperties value.
     */
    public ServerlessRuntimeConfigProperties serverlessRuntimeConfigProperties() {
        return this.serverlessRuntimeConfigProperties;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (serverlessConfigProperties() != null) {
            serverlessConfigProperties().validate();
        }
        if (serverlessRuntimeConfigProperties() != null) {
            serverlessRuntimeConfigProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        jsonWriter.writeJsonField("serverlessConfigProperties", this.serverlessConfigProperties);
        jsonWriter.writeJsonField("serverlessRuntimeConfigProperties", this.serverlessRuntimeConfigProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ServerlessMetadataResponseInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ServerlessMetadataResponseInner if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ServerlessMetadataResponseInner.
     */
    public static ServerlessMetadataResponseInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ServerlessMetadataResponseInner deserializedServerlessMetadataResponseInner
                = new ServerlessMetadataResponseInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("type".equals(fieldName)) {
                    deserializedServerlessMetadataResponseInner.type = RuntimeType.fromString(reader.getString());
                } else if ("serverlessConfigProperties".equals(fieldName)) {
                    deserializedServerlessMetadataResponseInner.serverlessConfigProperties
                        = ServerlessConfigProperties.fromJson(reader);
                } else if ("serverlessRuntimeConfigProperties".equals(fieldName)) {
                    deserializedServerlessMetadataResponseInner.serverlessRuntimeConfigProperties
                        = ServerlessRuntimeConfigProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedServerlessMetadataResponseInner;
        });
    }
}
