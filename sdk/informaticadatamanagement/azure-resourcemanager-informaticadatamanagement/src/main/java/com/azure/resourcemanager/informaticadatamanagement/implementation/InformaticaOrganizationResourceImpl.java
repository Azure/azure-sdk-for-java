// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.informaticadatamanagement.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.informaticadatamanagement.fluent.models.InformaticaOrganizationResourceInner;
import com.azure.resourcemanager.informaticadatamanagement.models.InformaticaOrganizationResource;
import com.azure.resourcemanager.informaticadatamanagement.models.InformaticaOrganizationResourceUpdate;
import com.azure.resourcemanager.informaticadatamanagement.models.InformaticaServerlessRuntimeResourceList;
import com.azure.resourcemanager.informaticadatamanagement.models.OrganizationProperties;
import com.azure.resourcemanager.informaticadatamanagement.models.OrganizationPropertiesCustomUpdate;
import com.azure.resourcemanager.informaticadatamanagement.models.ServerlessMetadataResponse;
import java.util.Collections;
import java.util.Map;

public final class InformaticaOrganizationResourceImpl implements InformaticaOrganizationResource,
    InformaticaOrganizationResource.Definition, InformaticaOrganizationResource.Update {
    private InformaticaOrganizationResourceInner innerObject;

    private final com.azure.resourcemanager.informaticadatamanagement.InformaticaDataManagementManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public OrganizationProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public InformaticaOrganizationResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.informaticadatamanagement.InformaticaDataManagementManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String organizationName;

    private InformaticaOrganizationResourceUpdate updateProperties;

    public InformaticaOrganizationResourceImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public InformaticaOrganizationResource create() {
        this.innerObject = serviceManager.serviceClient()
            .getOrganizations()
            .createOrUpdate(resourceGroupName, organizationName, this.innerModel(), Context.NONE);
        return this;
    }

    public InformaticaOrganizationResource create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getOrganizations()
            .createOrUpdate(resourceGroupName, organizationName, this.innerModel(), context);
        return this;
    }

    InformaticaOrganizationResourceImpl(String name,
        com.azure.resourcemanager.informaticadatamanagement.InformaticaDataManagementManager serviceManager) {
        this.innerObject = new InformaticaOrganizationResourceInner();
        this.serviceManager = serviceManager;
        this.organizationName = name;
    }

    public InformaticaOrganizationResourceImpl update() {
        this.updateProperties = new InformaticaOrganizationResourceUpdate();
        return this;
    }

    public InformaticaOrganizationResource apply() {
        this.innerObject = serviceManager.serviceClient()
            .getOrganizations()
            .updateWithResponse(resourceGroupName, organizationName, updateProperties, Context.NONE)
            .getValue();
        return this;
    }

    public InformaticaOrganizationResource apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getOrganizations()
            .updateWithResponse(resourceGroupName, organizationName, updateProperties, context)
            .getValue();
        return this;
    }

    InformaticaOrganizationResourceImpl(InformaticaOrganizationResourceInner innerObject,
        com.azure.resourcemanager.informaticadatamanagement.InformaticaDataManagementManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.organizationName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "organizations");
    }

    public InformaticaOrganizationResource refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getOrganizations()
            .getByResourceGroupWithResponse(resourceGroupName, organizationName, Context.NONE)
            .getValue();
        return this;
    }

    public InformaticaOrganizationResource refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getOrganizations()
            .getByResourceGroupWithResponse(resourceGroupName, organizationName, context)
            .getValue();
        return this;
    }

    public Response<InformaticaServerlessRuntimeResourceList> getAllServerlessRuntimesWithResponse(Context context) {
        return serviceManager.organizations()
            .getAllServerlessRuntimesWithResponse(resourceGroupName, organizationName, context);
    }

    public InformaticaServerlessRuntimeResourceList getAllServerlessRuntimes() {
        return serviceManager.organizations().getAllServerlessRuntimes(resourceGroupName, organizationName);
    }

    public Response<ServerlessMetadataResponse> getServerlessMetadataWithResponse(Context context) {
        return serviceManager.organizations()
            .getServerlessMetadataWithResponse(resourceGroupName, organizationName, context);
    }

    public ServerlessMetadataResponse getServerlessMetadata() {
        return serviceManager.organizations().getServerlessMetadata(resourceGroupName, organizationName);
    }

    public InformaticaOrganizationResourceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public InformaticaOrganizationResourceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public InformaticaOrganizationResourceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateProperties.withTags(tags);
            return this;
        }
    }

    public InformaticaOrganizationResourceImpl withProperties(OrganizationProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public InformaticaOrganizationResourceImpl withProperties(OrganizationPropertiesCustomUpdate properties) {
        this.updateProperties.withProperties(properties);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
