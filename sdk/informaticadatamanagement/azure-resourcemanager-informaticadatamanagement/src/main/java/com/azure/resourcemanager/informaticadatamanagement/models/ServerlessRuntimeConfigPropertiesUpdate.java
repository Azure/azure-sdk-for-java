// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.informaticadatamanagement.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The template for adding optional properties.
 */
@Fluent
public final class ServerlessRuntimeConfigPropertiesUpdate {
    /*
     * The List of Informatica Serverless Runtime CDI Config Properties.
     */
    @JsonProperty(value = "cdiConfigProps")
    private List<CdiConfigProps> cdiConfigProps;

    /*
     * The List of Informatica Serverless Runtime CDIE Config Properties.
     */
    @JsonProperty(value = "cdieConfigProps")
    private List<CdiConfigProps> cdieConfigProps;

    /**
     * Creates an instance of ServerlessRuntimeConfigPropertiesUpdate class.
     */
    public ServerlessRuntimeConfigPropertiesUpdate() {
    }

    /**
     * Get the cdiConfigProps property: The List of Informatica Serverless Runtime CDI Config Properties.
     * 
     * @return the cdiConfigProps value.
     */
    public List<CdiConfigProps> cdiConfigProps() {
        return this.cdiConfigProps;
    }

    /**
     * Set the cdiConfigProps property: The List of Informatica Serverless Runtime CDI Config Properties.
     * 
     * @param cdiConfigProps the cdiConfigProps value to set.
     * @return the ServerlessRuntimeConfigPropertiesUpdate object itself.
     */
    public ServerlessRuntimeConfigPropertiesUpdate withCdiConfigProps(List<CdiConfigProps> cdiConfigProps) {
        this.cdiConfigProps = cdiConfigProps;
        return this;
    }

    /**
     * Get the cdieConfigProps property: The List of Informatica Serverless Runtime CDIE Config Properties.
     * 
     * @return the cdieConfigProps value.
     */
    public List<CdiConfigProps> cdieConfigProps() {
        return this.cdieConfigProps;
    }

    /**
     * Set the cdieConfigProps property: The List of Informatica Serverless Runtime CDIE Config Properties.
     * 
     * @param cdieConfigProps the cdieConfigProps value to set.
     * @return the ServerlessRuntimeConfigPropertiesUpdate object itself.
     */
    public ServerlessRuntimeConfigPropertiesUpdate withCdieConfigProps(List<CdiConfigProps> cdieConfigProps) {
        this.cdieConfigProps = cdieConfigProps;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (cdiConfigProps() != null) {
            cdiConfigProps().forEach(e -> e.validate());
        }
        if (cdieConfigProps() != null) {
            cdieConfigProps().forEach(e -> e.validate());
        }
    }
}
