// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.informaticadatamanagement.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Informatica Serverless Runtime Network Interface configurations.
 */
@Fluent
public final class NetworkInterfaceConfiguration {
    /*
     * Virtual network resource id
     */
    @JsonProperty(value = "vnetId", required = true)
    private String vnetId;

    /*
     * Virtual network subnet resource id
     */
    @JsonProperty(value = "subnetId", required = true)
    private String subnetId;

    /*
     * Virtual network resource guid
     */
    @JsonProperty(value = "vnetResourceGuid")
    private String vnetResourceGuid;

    /**
     * Creates an instance of NetworkInterfaceConfiguration class.
     */
    public NetworkInterfaceConfiguration() {
    }

    /**
     * Get the vnetId property: Virtual network resource id.
     * 
     * @return the vnetId value.
     */
    public String vnetId() {
        return this.vnetId;
    }

    /**
     * Set the vnetId property: Virtual network resource id.
     * 
     * @param vnetId the vnetId value to set.
     * @return the NetworkInterfaceConfiguration object itself.
     */
    public NetworkInterfaceConfiguration withVnetId(String vnetId) {
        this.vnetId = vnetId;
        return this;
    }

    /**
     * Get the subnetId property: Virtual network subnet resource id.
     * 
     * @return the subnetId value.
     */
    public String subnetId() {
        return this.subnetId;
    }

    /**
     * Set the subnetId property: Virtual network subnet resource id.
     * 
     * @param subnetId the subnetId value to set.
     * @return the NetworkInterfaceConfiguration object itself.
     */
    public NetworkInterfaceConfiguration withSubnetId(String subnetId) {
        this.subnetId = subnetId;
        return this;
    }

    /**
     * Get the vnetResourceGuid property: Virtual network resource guid.
     * 
     * @return the vnetResourceGuid value.
     */
    public String vnetResourceGuid() {
        return this.vnetResourceGuid;
    }

    /**
     * Set the vnetResourceGuid property: Virtual network resource guid.
     * 
     * @param vnetResourceGuid the vnetResourceGuid value to set.
     * @return the NetworkInterfaceConfiguration object itself.
     */
    public NetworkInterfaceConfiguration withVnetResourceGuid(String vnetResourceGuid) {
        this.vnetResourceGuid = vnetResourceGuid;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (vnetId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property vnetId in model NetworkInterfaceConfiguration"));
        }
        if (subnetId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property subnetId in model NetworkInterfaceConfiguration"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(NetworkInterfaceConfiguration.class);
}
