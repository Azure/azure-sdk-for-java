// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.informaticadatamanagement.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Informatica CDI Configuration Properties.
 */
@Fluent
public final class CdiConfigProps {
    /*
     * EngineName of the application config.
     */
    @JsonProperty(value = "engineName", required = true)
    private String engineName;

    /*
     * EngineVersion of the application config.
     */
    @JsonProperty(value = "engineVersion", required = true)
    private String engineVersion;

    /*
     * ApplicationConfigs of the CDI or CDIE.
     */
    @JsonProperty(value = "applicationConfigs", required = true)
    private List<ApplicationConfigs> applicationConfigs;

    /**
     * Creates an instance of CdiConfigProps class.
     */
    public CdiConfigProps() {
    }

    /**
     * Get the engineName property: EngineName of the application config.
     * 
     * @return the engineName value.
     */
    public String engineName() {
        return this.engineName;
    }

    /**
     * Set the engineName property: EngineName of the application config.
     * 
     * @param engineName the engineName value to set.
     * @return the CdiConfigProps object itself.
     */
    public CdiConfigProps withEngineName(String engineName) {
        this.engineName = engineName;
        return this;
    }

    /**
     * Get the engineVersion property: EngineVersion of the application config.
     * 
     * @return the engineVersion value.
     */
    public String engineVersion() {
        return this.engineVersion;
    }

    /**
     * Set the engineVersion property: EngineVersion of the application config.
     * 
     * @param engineVersion the engineVersion value to set.
     * @return the CdiConfigProps object itself.
     */
    public CdiConfigProps withEngineVersion(String engineVersion) {
        this.engineVersion = engineVersion;
        return this;
    }

    /**
     * Get the applicationConfigs property: ApplicationConfigs of the CDI or CDIE.
     * 
     * @return the applicationConfigs value.
     */
    public List<ApplicationConfigs> applicationConfigs() {
        return this.applicationConfigs;
    }

    /**
     * Set the applicationConfigs property: ApplicationConfigs of the CDI or CDIE.
     * 
     * @param applicationConfigs the applicationConfigs value to set.
     * @return the CdiConfigProps object itself.
     */
    public CdiConfigProps withApplicationConfigs(List<ApplicationConfigs> applicationConfigs) {
        this.applicationConfigs = applicationConfigs;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (engineName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property engineName in model CdiConfigProps"));
        }
        if (engineVersion() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property engineVersion in model CdiConfigProps"));
        }
        if (applicationConfigs() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property applicationConfigs in model CdiConfigProps"));
        } else {
            applicationConfigs().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(CdiConfigProps.class);
}
