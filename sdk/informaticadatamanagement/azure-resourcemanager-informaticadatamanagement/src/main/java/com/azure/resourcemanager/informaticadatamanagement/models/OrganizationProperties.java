// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.informaticadatamanagement.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Properties specific to the Informatica DataManagement Organization resource.
 */
@Fluent
public final class OrganizationProperties {
    /*
     * Provisioning State of the resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * Informatica Organization properties.
     */
    @JsonProperty(value = "informaticaProperties")
    private InformaticaProperties informaticaProperties;

    /*
     * Marketplace details.
     */
    @JsonProperty(value = "marketplaceDetails")
    private MarketplaceDetails marketplaceDetails;

    /*
     * User details
     */
    @JsonProperty(value = "userDetails")
    private UserDetails userDetails;

    /*
     * Company details.
     */
    @JsonProperty(value = "companyDetails")
    private CompanyDetails companyDetails;

    /*
     * Link Organization
     */
    @JsonProperty(value = "linkOrganization")
    private LinkOrganization linkOrganization;

    /**
     * Creates an instance of OrganizationProperties class.
     */
    public OrganizationProperties() {
    }

    /**
     * Get the provisioningState property: Provisioning State of the resource.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the informaticaProperties property: Informatica Organization properties.
     * 
     * @return the informaticaProperties value.
     */
    public InformaticaProperties informaticaProperties() {
        return this.informaticaProperties;
    }

    /**
     * Set the informaticaProperties property: Informatica Organization properties.
     * 
     * @param informaticaProperties the informaticaProperties value to set.
     * @return the OrganizationProperties object itself.
     */
    public OrganizationProperties withInformaticaProperties(InformaticaProperties informaticaProperties) {
        this.informaticaProperties = informaticaProperties;
        return this;
    }

    /**
     * Get the marketplaceDetails property: Marketplace details.
     * 
     * @return the marketplaceDetails value.
     */
    public MarketplaceDetails marketplaceDetails() {
        return this.marketplaceDetails;
    }

    /**
     * Set the marketplaceDetails property: Marketplace details.
     * 
     * @param marketplaceDetails the marketplaceDetails value to set.
     * @return the OrganizationProperties object itself.
     */
    public OrganizationProperties withMarketplaceDetails(MarketplaceDetails marketplaceDetails) {
        this.marketplaceDetails = marketplaceDetails;
        return this;
    }

    /**
     * Get the userDetails property: User details.
     * 
     * @return the userDetails value.
     */
    public UserDetails userDetails() {
        return this.userDetails;
    }

    /**
     * Set the userDetails property: User details.
     * 
     * @param userDetails the userDetails value to set.
     * @return the OrganizationProperties object itself.
     */
    public OrganizationProperties withUserDetails(UserDetails userDetails) {
        this.userDetails = userDetails;
        return this;
    }

    /**
     * Get the companyDetails property: Company details.
     * 
     * @return the companyDetails value.
     */
    public CompanyDetails companyDetails() {
        return this.companyDetails;
    }

    /**
     * Set the companyDetails property: Company details.
     * 
     * @param companyDetails the companyDetails value to set.
     * @return the OrganizationProperties object itself.
     */
    public OrganizationProperties withCompanyDetails(CompanyDetails companyDetails) {
        this.companyDetails = companyDetails;
        return this;
    }

    /**
     * Get the linkOrganization property: Link Organization.
     * 
     * @return the linkOrganization value.
     */
    public LinkOrganization linkOrganization() {
        return this.linkOrganization;
    }

    /**
     * Set the linkOrganization property: Link Organization.
     * 
     * @param linkOrganization the linkOrganization value to set.
     * @return the OrganizationProperties object itself.
     */
    public OrganizationProperties withLinkOrganization(LinkOrganization linkOrganization) {
        this.linkOrganization = linkOrganization;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (informaticaProperties() != null) {
            informaticaProperties().validate();
        }
        if (marketplaceDetails() != null) {
            marketplaceDetails().validate();
        }
        if (userDetails() != null) {
            userDetails().validate();
        }
        if (companyDetails() != null) {
            companyDetails().validate();
        }
        if (linkOrganization() != null) {
            linkOrganization().validate();
        }
    }
}
