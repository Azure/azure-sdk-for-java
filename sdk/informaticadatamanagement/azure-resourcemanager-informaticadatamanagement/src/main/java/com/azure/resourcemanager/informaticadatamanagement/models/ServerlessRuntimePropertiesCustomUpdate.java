// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.informaticadatamanagement.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Patchable Properties of the Informatica Serverless Runtime resource.
 */
@Fluent
public final class ServerlessRuntimePropertiesCustomUpdate
    implements JsonSerializable<ServerlessRuntimePropertiesCustomUpdate> {
    /*
     * description of the serverless runtime.
     */
    private String description;

    /*
     * Platform type of the Serverless Runtime.
     */
    private PlatformType platform;

    /*
     * Application type of the Serverless Runtime environment.
     */
    private ApplicationType applicationType;

    /*
     * Compute units of the serverless runtime.
     */
    private String computeUnits;

    /*
     * Serverless Execution timeout
     */
    private String executionTimeout;

    /*
     * Serverless account creation location
     */
    private String serverlessAccountLocation;

    /*
     * Informatica Serverless Network profile properties.
     */
    private ServerlessRuntimeNetworkProfileUpdate serverlessRuntimeNetworkProfile;

    /*
     * String KV pairs indicating Advanced custom properties.
     */
    private List<AdvancedCustomProperties> advancedCustomProperties;

    /*
     * Supplementary file location.
     */
    private String supplementaryFileLocation;

    /*
     * Serverless config properties
     */
    private ServerlessRuntimeConfigPropertiesUpdate serverlessRuntimeConfig;

    /*
     * Serverless Runtime Tags
     */
    private List<ServerlessRuntimeTag> serverlessRuntimeTags;

    /*
     * Serverless runtime user context properties
     */
    private ServerlessRuntimeUserContextPropertiesUpdate serverlessRuntimeUserContextProperties;

    /**
     * Creates an instance of ServerlessRuntimePropertiesCustomUpdate class.
     */
    public ServerlessRuntimePropertiesCustomUpdate() {
    }

    /**
     * Get the description property: description of the serverless runtime.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: description of the serverless runtime.
     * 
     * @param description the description value to set.
     * @return the ServerlessRuntimePropertiesCustomUpdate object itself.
     */
    public ServerlessRuntimePropertiesCustomUpdate withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the platform property: Platform type of the Serverless Runtime.
     * 
     * @return the platform value.
     */
    public PlatformType platform() {
        return this.platform;
    }

    /**
     * Set the platform property: Platform type of the Serverless Runtime.
     * 
     * @param platform the platform value to set.
     * @return the ServerlessRuntimePropertiesCustomUpdate object itself.
     */
    public ServerlessRuntimePropertiesCustomUpdate withPlatform(PlatformType platform) {
        this.platform = platform;
        return this;
    }

    /**
     * Get the applicationType property: Application type of the Serverless Runtime environment.
     * 
     * @return the applicationType value.
     */
    public ApplicationType applicationType() {
        return this.applicationType;
    }

    /**
     * Set the applicationType property: Application type of the Serverless Runtime environment.
     * 
     * @param applicationType the applicationType value to set.
     * @return the ServerlessRuntimePropertiesCustomUpdate object itself.
     */
    public ServerlessRuntimePropertiesCustomUpdate withApplicationType(ApplicationType applicationType) {
        this.applicationType = applicationType;
        return this;
    }

    /**
     * Get the computeUnits property: Compute units of the serverless runtime.
     * 
     * @return the computeUnits value.
     */
    public String computeUnits() {
        return this.computeUnits;
    }

    /**
     * Set the computeUnits property: Compute units of the serverless runtime.
     * 
     * @param computeUnits the computeUnits value to set.
     * @return the ServerlessRuntimePropertiesCustomUpdate object itself.
     */
    public ServerlessRuntimePropertiesCustomUpdate withComputeUnits(String computeUnits) {
        this.computeUnits = computeUnits;
        return this;
    }

    /**
     * Get the executionTimeout property: Serverless Execution timeout.
     * 
     * @return the executionTimeout value.
     */
    public String executionTimeout() {
        return this.executionTimeout;
    }

    /**
     * Set the executionTimeout property: Serverless Execution timeout.
     * 
     * @param executionTimeout the executionTimeout value to set.
     * @return the ServerlessRuntimePropertiesCustomUpdate object itself.
     */
    public ServerlessRuntimePropertiesCustomUpdate withExecutionTimeout(String executionTimeout) {
        this.executionTimeout = executionTimeout;
        return this;
    }

    /**
     * Get the serverlessAccountLocation property: Serverless account creation location.
     * 
     * @return the serverlessAccountLocation value.
     */
    public String serverlessAccountLocation() {
        return this.serverlessAccountLocation;
    }

    /**
     * Set the serverlessAccountLocation property: Serverless account creation location.
     * 
     * @param serverlessAccountLocation the serverlessAccountLocation value to set.
     * @return the ServerlessRuntimePropertiesCustomUpdate object itself.
     */
    public ServerlessRuntimePropertiesCustomUpdate withServerlessAccountLocation(String serverlessAccountLocation) {
        this.serverlessAccountLocation = serverlessAccountLocation;
        return this;
    }

    /**
     * Get the serverlessRuntimeNetworkProfile property: Informatica Serverless Network profile properties.
     * 
     * @return the serverlessRuntimeNetworkProfile value.
     */
    public ServerlessRuntimeNetworkProfileUpdate serverlessRuntimeNetworkProfile() {
        return this.serverlessRuntimeNetworkProfile;
    }

    /**
     * Set the serverlessRuntimeNetworkProfile property: Informatica Serverless Network profile properties.
     * 
     * @param serverlessRuntimeNetworkProfile the serverlessRuntimeNetworkProfile value to set.
     * @return the ServerlessRuntimePropertiesCustomUpdate object itself.
     */
    public ServerlessRuntimePropertiesCustomUpdate
        withServerlessRuntimeNetworkProfile(ServerlessRuntimeNetworkProfileUpdate serverlessRuntimeNetworkProfile) {
        this.serverlessRuntimeNetworkProfile = serverlessRuntimeNetworkProfile;
        return this;
    }

    /**
     * Get the advancedCustomProperties property: String KV pairs indicating Advanced custom properties.
     * 
     * @return the advancedCustomProperties value.
     */
    public List<AdvancedCustomProperties> advancedCustomProperties() {
        return this.advancedCustomProperties;
    }

    /**
     * Set the advancedCustomProperties property: String KV pairs indicating Advanced custom properties.
     * 
     * @param advancedCustomProperties the advancedCustomProperties value to set.
     * @return the ServerlessRuntimePropertiesCustomUpdate object itself.
     */
    public ServerlessRuntimePropertiesCustomUpdate
        withAdvancedCustomProperties(List<AdvancedCustomProperties> advancedCustomProperties) {
        this.advancedCustomProperties = advancedCustomProperties;
        return this;
    }

    /**
     * Get the supplementaryFileLocation property: Supplementary file location.
     * 
     * @return the supplementaryFileLocation value.
     */
    public String supplementaryFileLocation() {
        return this.supplementaryFileLocation;
    }

    /**
     * Set the supplementaryFileLocation property: Supplementary file location.
     * 
     * @param supplementaryFileLocation the supplementaryFileLocation value to set.
     * @return the ServerlessRuntimePropertiesCustomUpdate object itself.
     */
    public ServerlessRuntimePropertiesCustomUpdate withSupplementaryFileLocation(String supplementaryFileLocation) {
        this.supplementaryFileLocation = supplementaryFileLocation;
        return this;
    }

    /**
     * Get the serverlessRuntimeConfig property: Serverless config properties.
     * 
     * @return the serverlessRuntimeConfig value.
     */
    public ServerlessRuntimeConfigPropertiesUpdate serverlessRuntimeConfig() {
        return this.serverlessRuntimeConfig;
    }

    /**
     * Set the serverlessRuntimeConfig property: Serverless config properties.
     * 
     * @param serverlessRuntimeConfig the serverlessRuntimeConfig value to set.
     * @return the ServerlessRuntimePropertiesCustomUpdate object itself.
     */
    public ServerlessRuntimePropertiesCustomUpdate
        withServerlessRuntimeConfig(ServerlessRuntimeConfigPropertiesUpdate serverlessRuntimeConfig) {
        this.serverlessRuntimeConfig = serverlessRuntimeConfig;
        return this;
    }

    /**
     * Get the serverlessRuntimeTags property: Serverless Runtime Tags.
     * 
     * @return the serverlessRuntimeTags value.
     */
    public List<ServerlessRuntimeTag> serverlessRuntimeTags() {
        return this.serverlessRuntimeTags;
    }

    /**
     * Set the serverlessRuntimeTags property: Serverless Runtime Tags.
     * 
     * @param serverlessRuntimeTags the serverlessRuntimeTags value to set.
     * @return the ServerlessRuntimePropertiesCustomUpdate object itself.
     */
    public ServerlessRuntimePropertiesCustomUpdate
        withServerlessRuntimeTags(List<ServerlessRuntimeTag> serverlessRuntimeTags) {
        this.serverlessRuntimeTags = serverlessRuntimeTags;
        return this;
    }

    /**
     * Get the serverlessRuntimeUserContextProperties property: Serverless runtime user context properties.
     * 
     * @return the serverlessRuntimeUserContextProperties value.
     */
    public ServerlessRuntimeUserContextPropertiesUpdate serverlessRuntimeUserContextProperties() {
        return this.serverlessRuntimeUserContextProperties;
    }

    /**
     * Set the serverlessRuntimeUserContextProperties property: Serverless runtime user context properties.
     * 
     * @param serverlessRuntimeUserContextProperties the serverlessRuntimeUserContextProperties value to set.
     * @return the ServerlessRuntimePropertiesCustomUpdate object itself.
     */
    public ServerlessRuntimePropertiesCustomUpdate withServerlessRuntimeUserContextProperties(
        ServerlessRuntimeUserContextPropertiesUpdate serverlessRuntimeUserContextProperties) {
        this.serverlessRuntimeUserContextProperties = serverlessRuntimeUserContextProperties;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (serverlessRuntimeNetworkProfile() != null) {
            serverlessRuntimeNetworkProfile().validate();
        }
        if (advancedCustomProperties() != null) {
            advancedCustomProperties().forEach(e -> e.validate());
        }
        if (serverlessRuntimeConfig() != null) {
            serverlessRuntimeConfig().validate();
        }
        if (serverlessRuntimeTags() != null) {
            serverlessRuntimeTags().forEach(e -> e.validate());
        }
        if (serverlessRuntimeUserContextProperties() != null) {
            serverlessRuntimeUserContextProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("description", this.description);
        jsonWriter.writeStringField("platform", this.platform == null ? null : this.platform.toString());
        jsonWriter.writeStringField("applicationType",
            this.applicationType == null ? null : this.applicationType.toString());
        jsonWriter.writeStringField("computeUnits", this.computeUnits);
        jsonWriter.writeStringField("executionTimeout", this.executionTimeout);
        jsonWriter.writeStringField("serverlessAccountLocation", this.serverlessAccountLocation);
        jsonWriter.writeJsonField("serverlessRuntimeNetworkProfile", this.serverlessRuntimeNetworkProfile);
        jsonWriter.writeArrayField("advancedCustomProperties", this.advancedCustomProperties,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("supplementaryFileLocation", this.supplementaryFileLocation);
        jsonWriter.writeJsonField("serverlessRuntimeConfig", this.serverlessRuntimeConfig);
        jsonWriter.writeArrayField("serverlessRuntimeTags", this.serverlessRuntimeTags,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeJsonField("serverlessRuntimeUserContextProperties",
            this.serverlessRuntimeUserContextProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ServerlessRuntimePropertiesCustomUpdate from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ServerlessRuntimePropertiesCustomUpdate if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ServerlessRuntimePropertiesCustomUpdate.
     */
    public static ServerlessRuntimePropertiesCustomUpdate fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ServerlessRuntimePropertiesCustomUpdate deserializedServerlessRuntimePropertiesCustomUpdate
                = new ServerlessRuntimePropertiesCustomUpdate();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("description".equals(fieldName)) {
                    deserializedServerlessRuntimePropertiesCustomUpdate.description = reader.getString();
                } else if ("platform".equals(fieldName)) {
                    deserializedServerlessRuntimePropertiesCustomUpdate.platform
                        = PlatformType.fromString(reader.getString());
                } else if ("applicationType".equals(fieldName)) {
                    deserializedServerlessRuntimePropertiesCustomUpdate.applicationType
                        = ApplicationType.fromString(reader.getString());
                } else if ("computeUnits".equals(fieldName)) {
                    deserializedServerlessRuntimePropertiesCustomUpdate.computeUnits = reader.getString();
                } else if ("executionTimeout".equals(fieldName)) {
                    deserializedServerlessRuntimePropertiesCustomUpdate.executionTimeout = reader.getString();
                } else if ("serverlessAccountLocation".equals(fieldName)) {
                    deserializedServerlessRuntimePropertiesCustomUpdate.serverlessAccountLocation = reader.getString();
                } else if ("serverlessRuntimeNetworkProfile".equals(fieldName)) {
                    deserializedServerlessRuntimePropertiesCustomUpdate.serverlessRuntimeNetworkProfile
                        = ServerlessRuntimeNetworkProfileUpdate.fromJson(reader);
                } else if ("advancedCustomProperties".equals(fieldName)) {
                    List<AdvancedCustomProperties> advancedCustomProperties
                        = reader.readArray(reader1 -> AdvancedCustomProperties.fromJson(reader1));
                    deserializedServerlessRuntimePropertiesCustomUpdate.advancedCustomProperties
                        = advancedCustomProperties;
                } else if ("supplementaryFileLocation".equals(fieldName)) {
                    deserializedServerlessRuntimePropertiesCustomUpdate.supplementaryFileLocation = reader.getString();
                } else if ("serverlessRuntimeConfig".equals(fieldName)) {
                    deserializedServerlessRuntimePropertiesCustomUpdate.serverlessRuntimeConfig
                        = ServerlessRuntimeConfigPropertiesUpdate.fromJson(reader);
                } else if ("serverlessRuntimeTags".equals(fieldName)) {
                    List<ServerlessRuntimeTag> serverlessRuntimeTags
                        = reader.readArray(reader1 -> ServerlessRuntimeTag.fromJson(reader1));
                    deserializedServerlessRuntimePropertiesCustomUpdate.serverlessRuntimeTags = serverlessRuntimeTags;
                } else if ("serverlessRuntimeUserContextProperties".equals(fieldName)) {
                    deserializedServerlessRuntimePropertiesCustomUpdate.serverlessRuntimeUserContextProperties
                        = ServerlessRuntimeUserContextPropertiesUpdate.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedServerlessRuntimePropertiesCustomUpdate;
        });
    }
}
