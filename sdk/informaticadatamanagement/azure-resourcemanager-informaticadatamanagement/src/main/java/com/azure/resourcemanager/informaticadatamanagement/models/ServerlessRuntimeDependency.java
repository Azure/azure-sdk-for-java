// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.informaticadatamanagement.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Dependency reference for a serverless runtime resource.
 */
@Fluent
public final class ServerlessRuntimeDependency {
    /*
     * Dependency ID
     */
    @JsonProperty(value = "id", required = true)
    private String id;

    /*
     * Application context ID
     */
    @JsonProperty(value = "appContextId", required = true)
    private String appContextId;

    /*
     * Dependency path
     */
    @JsonProperty(value = "path", required = true)
    private String path;

    /*
     * document type
     */
    @JsonProperty(value = "documentType", required = true)
    private String documentType;

    /*
     * description of Dependency
     */
    @JsonProperty(value = "description", required = true)
    private String description;

    /*
     * Last Update Time
     */
    @JsonProperty(value = "lastUpdatedTime", required = true)
    private String lastUpdatedTime;

    /**
     * Creates an instance of ServerlessRuntimeDependency class.
     */
    public ServerlessRuntimeDependency() {
    }

    /**
     * Get the id property: Dependency ID.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: Dependency ID.
     * 
     * @param id the id value to set.
     * @return the ServerlessRuntimeDependency object itself.
     */
    public ServerlessRuntimeDependency withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the appContextId property: Application context ID.
     * 
     * @return the appContextId value.
     */
    public String appContextId() {
        return this.appContextId;
    }

    /**
     * Set the appContextId property: Application context ID.
     * 
     * @param appContextId the appContextId value to set.
     * @return the ServerlessRuntimeDependency object itself.
     */
    public ServerlessRuntimeDependency withAppContextId(String appContextId) {
        this.appContextId = appContextId;
        return this;
    }

    /**
     * Get the path property: Dependency path.
     * 
     * @return the path value.
     */
    public String path() {
        return this.path;
    }

    /**
     * Set the path property: Dependency path.
     * 
     * @param path the path value to set.
     * @return the ServerlessRuntimeDependency object itself.
     */
    public ServerlessRuntimeDependency withPath(String path) {
        this.path = path;
        return this;
    }

    /**
     * Get the documentType property: document type.
     * 
     * @return the documentType value.
     */
    public String documentType() {
        return this.documentType;
    }

    /**
     * Set the documentType property: document type.
     * 
     * @param documentType the documentType value to set.
     * @return the ServerlessRuntimeDependency object itself.
     */
    public ServerlessRuntimeDependency withDocumentType(String documentType) {
        this.documentType = documentType;
        return this;
    }

    /**
     * Get the description property: description of Dependency.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: description of Dependency.
     * 
     * @param description the description value to set.
     * @return the ServerlessRuntimeDependency object itself.
     */
    public ServerlessRuntimeDependency withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the lastUpdatedTime property: Last Update Time.
     * 
     * @return the lastUpdatedTime value.
     */
    public String lastUpdatedTime() {
        return this.lastUpdatedTime;
    }

    /**
     * Set the lastUpdatedTime property: Last Update Time.
     * 
     * @param lastUpdatedTime the lastUpdatedTime value to set.
     * @return the ServerlessRuntimeDependency object itself.
     */
    public ServerlessRuntimeDependency withLastUpdatedTime(String lastUpdatedTime) {
        this.lastUpdatedTime = lastUpdatedTime;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (id() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property id in model ServerlessRuntimeDependency"));
        }
        if (appContextId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property appContextId in model ServerlessRuntimeDependency"));
        }
        if (path() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property path in model ServerlessRuntimeDependency"));
        }
        if (documentType() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property documentType in model ServerlessRuntimeDependency"));
        }
        if (description() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property description in model ServerlessRuntimeDependency"));
        }
        if (lastUpdatedTime() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property lastUpdatedTime in model ServerlessRuntimeDependency"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ServerlessRuntimeDependency.class);
}
