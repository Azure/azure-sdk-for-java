// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.informaticadatamanagement.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of ServerlessRuntimes.
 */
public interface ServerlessRuntimes {
    /**
     * List InformaticaServerlessRuntimeResource resources by InformaticaOrganizationResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a InformaticaServerlessRuntimeResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<InformaticaServerlessRuntimeResource> listByInformaticaOrganizationResource(String resourceGroupName,
        String organizationName);

    /**
     * List InformaticaServerlessRuntimeResource resources by InformaticaOrganizationResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a InformaticaServerlessRuntimeResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<InformaticaServerlessRuntimeResource> listByInformaticaOrganizationResource(String resourceGroupName,
        String organizationName, Context context);

    /**
     * Get a InformaticaServerlessRuntimeResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a InformaticaServerlessRuntimeResource along with {@link Response}.
     */
    Response<InformaticaServerlessRuntimeResource> getWithResponse(String resourceGroupName, String organizationName,
        String serverlessRuntimeName, Context context);

    /**
     * Get a InformaticaServerlessRuntimeResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a InformaticaServerlessRuntimeResource.
     */
    InformaticaServerlessRuntimeResource get(String resourceGroupName, String organizationName,
        String serverlessRuntimeName);

    /**
     * Delete a InformaticaServerlessRuntimeResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String organizationName, String serverlessRuntimeName);

    /**
     * Delete a InformaticaServerlessRuntimeResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String organizationName, String serverlessRuntimeName, Context context);

    /**
     * Checks all dependencies for a serverless runtime resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return model for the check dependencies API for an informatica serverless runtime resource along with
     * {@link Response}.
     */
    Response<CheckDependenciesResponse> checkDependenciesWithResponse(String resourceGroupName, String organizationName,
        String serverlessRuntimeName, Context context);

    /**
     * Checks all dependencies for a serverless runtime resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return model for the check dependencies API for an informatica serverless runtime resource.
     */
    CheckDependenciesResponse checkDependencies(String resourceGroupName, String organizationName,
        String serverlessRuntimeName);

    /**
     * Returns a serverless runtime resource by ID.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Serverless Runtime environment resource by Informatica along with {@link Response}.
     */
    Response<InformaticaServerlessRuntimeResource> serverlessResourceByIdWithResponse(String resourceGroupName,
        String organizationName, String serverlessRuntimeName, Context context);

    /**
     * Returns a serverless runtime resource by ID.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Serverless Runtime environment resource by Informatica.
     */
    InformaticaServerlessRuntimeResource serverlessResourceById(String resourceGroupName, String organizationName,
        String serverlessRuntimeName);

    /**
     * Starts a failed runtime resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> startFailedServerlessRuntimeWithResponse(String resourceGroupName, String organizationName,
        String serverlessRuntimeName, Context context);

    /**
     * Starts a failed runtime resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void startFailedServerlessRuntime(String resourceGroupName, String organizationName, String serverlessRuntimeName);

    /**
     * Get a InformaticaServerlessRuntimeResource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a InformaticaServerlessRuntimeResource along with {@link Response}.
     */
    InformaticaServerlessRuntimeResource getById(String id);

    /**
     * Get a InformaticaServerlessRuntimeResource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a InformaticaServerlessRuntimeResource along with {@link Response}.
     */
    Response<InformaticaServerlessRuntimeResource> getByIdWithResponse(String id, Context context);

    /**
     * Delete a InformaticaServerlessRuntimeResource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a InformaticaServerlessRuntimeResource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new InformaticaServerlessRuntimeResource resource.
     * 
     * @param name resource name.
     * @return the first stage of the new InformaticaServerlessRuntimeResource definition.
     */
    InformaticaServerlessRuntimeResource.DefinitionStages.Blank define(String name);
}
