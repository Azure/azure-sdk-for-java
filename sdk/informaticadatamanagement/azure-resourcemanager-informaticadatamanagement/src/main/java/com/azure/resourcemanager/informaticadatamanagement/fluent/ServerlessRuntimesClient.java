// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.informaticadatamanagement.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.informaticadatamanagement.fluent.models.CheckDependenciesResponseInner;
import com.azure.resourcemanager.informaticadatamanagement.fluent.models.InformaticaServerlessRuntimeResourceInner;
import com.azure.resourcemanager.informaticadatamanagement.models.InformaticaServerlessRuntimeResourceUpdate;

/**
 * An instance of this class provides access to all the operations defined in ServerlessRuntimesClient.
 */
public interface ServerlessRuntimesClient {
    /**
     * Get a InformaticaServerlessRuntimeResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a InformaticaServerlessRuntimeResource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<InformaticaServerlessRuntimeResourceInner> getWithResponse(String resourceGroupName,
        String organizationName, String serverlessRuntimeName, Context context);

    /**
     * Get a InformaticaServerlessRuntimeResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a InformaticaServerlessRuntimeResource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    InformaticaServerlessRuntimeResourceInner get(String resourceGroupName, String organizationName,
        String serverlessRuntimeName);

    /**
     * Create a InformaticaServerlessRuntimeResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a Serverless Runtime environment resource by Informatica.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<InformaticaServerlessRuntimeResourceInner>, InformaticaServerlessRuntimeResourceInner>
        beginCreateOrUpdate(String resourceGroupName, String organizationName, String serverlessRuntimeName,
            InformaticaServerlessRuntimeResourceInner resource);

    /**
     * Create a InformaticaServerlessRuntimeResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a Serverless Runtime environment resource by Informatica.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<InformaticaServerlessRuntimeResourceInner>, InformaticaServerlessRuntimeResourceInner>
        beginCreateOrUpdate(String resourceGroupName, String organizationName, String serverlessRuntimeName,
            InformaticaServerlessRuntimeResourceInner resource, Context context);

    /**
     * Create a InformaticaServerlessRuntimeResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Serverless Runtime environment resource by Informatica.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    InformaticaServerlessRuntimeResourceInner createOrUpdate(String resourceGroupName, String organizationName,
        String serverlessRuntimeName, InformaticaServerlessRuntimeResourceInner resource);

    /**
     * Create a InformaticaServerlessRuntimeResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Serverless Runtime environment resource by Informatica.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    InformaticaServerlessRuntimeResourceInner createOrUpdate(String resourceGroupName, String organizationName,
        String serverlessRuntimeName, InformaticaServerlessRuntimeResourceInner resource, Context context);

    /**
     * Delete a InformaticaServerlessRuntimeResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String organizationName,
        String serverlessRuntimeName);

    /**
     * Delete a InformaticaServerlessRuntimeResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String organizationName,
        String serverlessRuntimeName, Context context);

    /**
     * Delete a InformaticaServerlessRuntimeResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String organizationName, String serverlessRuntimeName);

    /**
     * Delete a InformaticaServerlessRuntimeResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String organizationName, String serverlessRuntimeName, Context context);

    /**
     * List InformaticaServerlessRuntimeResource resources by InformaticaOrganizationResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a InformaticaServerlessRuntimeResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<InformaticaServerlessRuntimeResourceInner>
        listByInformaticaOrganizationResource(String resourceGroupName, String organizationName);

    /**
     * List InformaticaServerlessRuntimeResource resources by InformaticaOrganizationResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a InformaticaServerlessRuntimeResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<InformaticaServerlessRuntimeResourceInner>
        listByInformaticaOrganizationResource(String resourceGroupName, String organizationName, Context context);

    /**
     * Update a InformaticaServerlessRuntimeResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Serverless Runtime environment resource by Informatica along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<InformaticaServerlessRuntimeResourceInner> updateWithResponse(String resourceGroupName,
        String organizationName, String serverlessRuntimeName, InformaticaServerlessRuntimeResourceUpdate properties,
        Context context);

    /**
     * Update a InformaticaServerlessRuntimeResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Serverless Runtime environment resource by Informatica.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    InformaticaServerlessRuntimeResourceInner update(String resourceGroupName, String organizationName,
        String serverlessRuntimeName, InformaticaServerlessRuntimeResourceUpdate properties);

    /**
     * Checks all dependencies for a serverless runtime resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return model for the check dependencies API for an informatica serverless runtime resource along with
     * {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<CheckDependenciesResponseInner> checkDependenciesWithResponse(String resourceGroupName,
        String organizationName, String serverlessRuntimeName, Context context);

    /**
     * Checks all dependencies for a serverless runtime resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return model for the check dependencies API for an informatica serverless runtime resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CheckDependenciesResponseInner checkDependencies(String resourceGroupName, String organizationName,
        String serverlessRuntimeName);

    /**
     * Starts a failed runtime resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> startFailedServerlessRuntimeWithResponse(String resourceGroupName, String organizationName,
        String serverlessRuntimeName, Context context);

    /**
     * Starts a failed runtime resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void startFailedServerlessRuntime(String resourceGroupName, String organizationName, String serverlessRuntimeName);

    /**
     * Returns a serverless runtime resource by ID.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Serverless Runtime environment resource by Informatica along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<InformaticaServerlessRuntimeResourceInner> serverlessResourceByIdWithResponse(String resourceGroupName,
        String organizationName, String serverlessRuntimeName, Context context);

    /**
     * Returns a serverless runtime resource by ID.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Organizations resource.
     * @param serverlessRuntimeName Name of the Serverless Runtime resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Serverless Runtime environment resource by Informatica.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    InformaticaServerlessRuntimeResourceInner serverlessResourceById(String resourceGroupName, String organizationName,
        String serverlessRuntimeName);
}
