// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.informaticadatamanagement.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Patchable Properties of the Informatica Organization resource.
 */
@Fluent
public final class OrganizationPropertiesCustomUpdate implements JsonSerializable<OrganizationPropertiesCustomUpdate> {
    /*
     * Informatica Organization properties
     */
    private InformaticaOrganizationResourceUpdate informaticaOrganizationProperties;

    /*
     * Marketplace details
     */
    private MarketplaceDetailsUpdate marketplaceDetails;

    /*
     * User details
     */
    private UserDetailsUpdate userDetails;

    /*
     * Company Details
     */
    private CompanyDetailsUpdate companyDetails;

    /*
     * Existing Resource Id
     */
    private String existingResourceId;

    /**
     * Creates an instance of OrganizationPropertiesCustomUpdate class.
     */
    public OrganizationPropertiesCustomUpdate() {
    }

    /**
     * Get the informaticaOrganizationProperties property: Informatica Organization properties.
     * 
     * @return the informaticaOrganizationProperties value.
     */
    public InformaticaOrganizationResourceUpdate informaticaOrganizationProperties() {
        return this.informaticaOrganizationProperties;
    }

    /**
     * Set the informaticaOrganizationProperties property: Informatica Organization properties.
     * 
     * @param informaticaOrganizationProperties the informaticaOrganizationProperties value to set.
     * @return the OrganizationPropertiesCustomUpdate object itself.
     */
    public OrganizationPropertiesCustomUpdate
        withInformaticaOrganizationProperties(InformaticaOrganizationResourceUpdate informaticaOrganizationProperties) {
        this.informaticaOrganizationProperties = informaticaOrganizationProperties;
        return this;
    }

    /**
     * Get the marketplaceDetails property: Marketplace details.
     * 
     * @return the marketplaceDetails value.
     */
    public MarketplaceDetailsUpdate marketplaceDetails() {
        return this.marketplaceDetails;
    }

    /**
     * Set the marketplaceDetails property: Marketplace details.
     * 
     * @param marketplaceDetails the marketplaceDetails value to set.
     * @return the OrganizationPropertiesCustomUpdate object itself.
     */
    public OrganizationPropertiesCustomUpdate withMarketplaceDetails(MarketplaceDetailsUpdate marketplaceDetails) {
        this.marketplaceDetails = marketplaceDetails;
        return this;
    }

    /**
     * Get the userDetails property: User details.
     * 
     * @return the userDetails value.
     */
    public UserDetailsUpdate userDetails() {
        return this.userDetails;
    }

    /**
     * Set the userDetails property: User details.
     * 
     * @param userDetails the userDetails value to set.
     * @return the OrganizationPropertiesCustomUpdate object itself.
     */
    public OrganizationPropertiesCustomUpdate withUserDetails(UserDetailsUpdate userDetails) {
        this.userDetails = userDetails;
        return this;
    }

    /**
     * Get the companyDetails property: Company Details.
     * 
     * @return the companyDetails value.
     */
    public CompanyDetailsUpdate companyDetails() {
        return this.companyDetails;
    }

    /**
     * Set the companyDetails property: Company Details.
     * 
     * @param companyDetails the companyDetails value to set.
     * @return the OrganizationPropertiesCustomUpdate object itself.
     */
    public OrganizationPropertiesCustomUpdate withCompanyDetails(CompanyDetailsUpdate companyDetails) {
        this.companyDetails = companyDetails;
        return this;
    }

    /**
     * Get the existingResourceId property: Existing Resource Id.
     * 
     * @return the existingResourceId value.
     */
    public String existingResourceId() {
        return this.existingResourceId;
    }

    /**
     * Set the existingResourceId property: Existing Resource Id.
     * 
     * @param existingResourceId the existingResourceId value to set.
     * @return the OrganizationPropertiesCustomUpdate object itself.
     */
    public OrganizationPropertiesCustomUpdate withExistingResourceId(String existingResourceId) {
        this.existingResourceId = existingResourceId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (informaticaOrganizationProperties() != null) {
            informaticaOrganizationProperties().validate();
        }
        if (marketplaceDetails() != null) {
            marketplaceDetails().validate();
        }
        if (userDetails() != null) {
            userDetails().validate();
        }
        if (companyDetails() != null) {
            companyDetails().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("informaticaOrganizationProperties", this.informaticaOrganizationProperties);
        jsonWriter.writeJsonField("marketplaceDetails", this.marketplaceDetails);
        jsonWriter.writeJsonField("userDetails", this.userDetails);
        jsonWriter.writeJsonField("companyDetails", this.companyDetails);
        jsonWriter.writeStringField("existingResourceId", this.existingResourceId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OrganizationPropertiesCustomUpdate from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of OrganizationPropertiesCustomUpdate if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the OrganizationPropertiesCustomUpdate.
     */
    public static OrganizationPropertiesCustomUpdate fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OrganizationPropertiesCustomUpdate deserializedOrganizationPropertiesCustomUpdate
                = new OrganizationPropertiesCustomUpdate();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("informaticaOrganizationProperties".equals(fieldName)) {
                    deserializedOrganizationPropertiesCustomUpdate.informaticaOrganizationProperties
                        = InformaticaOrganizationResourceUpdate.fromJson(reader);
                } else if ("marketplaceDetails".equals(fieldName)) {
                    deserializedOrganizationPropertiesCustomUpdate.marketplaceDetails
                        = MarketplaceDetailsUpdate.fromJson(reader);
                } else if ("userDetails".equals(fieldName)) {
                    deserializedOrganizationPropertiesCustomUpdate.userDetails = UserDetailsUpdate.fromJson(reader);
                } else if ("companyDetails".equals(fieldName)) {
                    deserializedOrganizationPropertiesCustomUpdate.companyDetails
                        = CompanyDetailsUpdate.fromJson(reader);
                } else if ("existingResourceId".equals(fieldName)) {
                    deserializedOrganizationPropertiesCustomUpdate.existingResourceId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedOrganizationPropertiesCustomUpdate;
        });
    }
}
