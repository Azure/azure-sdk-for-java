// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.informaticadatamanagement.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Details of the product offering.
 */
@Fluent
public final class OfferDetailsUpdate implements JsonSerializable<OfferDetailsUpdate> {
    /*
     * Id of the product publisher.
     */
    private String publisherId;

    /*
     * Id of the product offering.
     */
    private String offerId;

    /*
     * Id of the product offer plan.
     */
    private String planId;

    /*
     * Name of the product offer plan.
     */
    private String planName;

    /*
     * Offer plan term unit.
     */
    private String termUnit;

    /*
     * Offer plan term id.
     */
    private String termId;

    /**
     * Creates an instance of OfferDetailsUpdate class.
     */
    public OfferDetailsUpdate() {
    }

    /**
     * Get the publisherId property: Id of the product publisher.
     * 
     * @return the publisherId value.
     */
    public String publisherId() {
        return this.publisherId;
    }

    /**
     * Set the publisherId property: Id of the product publisher.
     * 
     * @param publisherId the publisherId value to set.
     * @return the OfferDetailsUpdate object itself.
     */
    public OfferDetailsUpdate withPublisherId(String publisherId) {
        this.publisherId = publisherId;
        return this;
    }

    /**
     * Get the offerId property: Id of the product offering.
     * 
     * @return the offerId value.
     */
    public String offerId() {
        return this.offerId;
    }

    /**
     * Set the offerId property: Id of the product offering.
     * 
     * @param offerId the offerId value to set.
     * @return the OfferDetailsUpdate object itself.
     */
    public OfferDetailsUpdate withOfferId(String offerId) {
        this.offerId = offerId;
        return this;
    }

    /**
     * Get the planId property: Id of the product offer plan.
     * 
     * @return the planId value.
     */
    public String planId() {
        return this.planId;
    }

    /**
     * Set the planId property: Id of the product offer plan.
     * 
     * @param planId the planId value to set.
     * @return the OfferDetailsUpdate object itself.
     */
    public OfferDetailsUpdate withPlanId(String planId) {
        this.planId = planId;
        return this;
    }

    /**
     * Get the planName property: Name of the product offer plan.
     * 
     * @return the planName value.
     */
    public String planName() {
        return this.planName;
    }

    /**
     * Set the planName property: Name of the product offer plan.
     * 
     * @param planName the planName value to set.
     * @return the OfferDetailsUpdate object itself.
     */
    public OfferDetailsUpdate withPlanName(String planName) {
        this.planName = planName;
        return this;
    }

    /**
     * Get the termUnit property: Offer plan term unit.
     * 
     * @return the termUnit value.
     */
    public String termUnit() {
        return this.termUnit;
    }

    /**
     * Set the termUnit property: Offer plan term unit.
     * 
     * @param termUnit the termUnit value to set.
     * @return the OfferDetailsUpdate object itself.
     */
    public OfferDetailsUpdate withTermUnit(String termUnit) {
        this.termUnit = termUnit;
        return this;
    }

    /**
     * Get the termId property: Offer plan term id.
     * 
     * @return the termId value.
     */
    public String termId() {
        return this.termId;
    }

    /**
     * Set the termId property: Offer plan term id.
     * 
     * @param termId the termId value to set.
     * @return the OfferDetailsUpdate object itself.
     */
    public OfferDetailsUpdate withTermId(String termId) {
        this.termId = termId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("publisherId", this.publisherId);
        jsonWriter.writeStringField("offerId", this.offerId);
        jsonWriter.writeStringField("planId", this.planId);
        jsonWriter.writeStringField("planName", this.planName);
        jsonWriter.writeStringField("termUnit", this.termUnit);
        jsonWriter.writeStringField("termId", this.termId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OfferDetailsUpdate from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of OfferDetailsUpdate if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the OfferDetailsUpdate.
     */
    public static OfferDetailsUpdate fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OfferDetailsUpdate deserializedOfferDetailsUpdate = new OfferDetailsUpdate();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("publisherId".equals(fieldName)) {
                    deserializedOfferDetailsUpdate.publisherId = reader.getString();
                } else if ("offerId".equals(fieldName)) {
                    deserializedOfferDetailsUpdate.offerId = reader.getString();
                } else if ("planId".equals(fieldName)) {
                    deserializedOfferDetailsUpdate.planId = reader.getString();
                } else if ("planName".equals(fieldName)) {
                    deserializedOfferDetailsUpdate.planName = reader.getString();
                } else if ("termUnit".equals(fieldName)) {
                    deserializedOfferDetailsUpdate.termUnit = reader.getString();
                } else if ("termId".equals(fieldName)) {
                    deserializedOfferDetailsUpdate.termId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedOfferDetailsUpdate;
        });
    }
}
