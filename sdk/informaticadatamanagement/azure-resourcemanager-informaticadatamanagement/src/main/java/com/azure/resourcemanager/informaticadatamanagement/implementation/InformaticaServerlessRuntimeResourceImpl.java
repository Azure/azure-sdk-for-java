// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.informaticadatamanagement.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.informaticadatamanagement.fluent.models.InformaticaServerlessRuntimeResourceInner;
import com.azure.resourcemanager.informaticadatamanagement.models.CheckDependenciesResponse;
import com.azure.resourcemanager.informaticadatamanagement.models.InformaticaServerlessRuntimeProperties;
import com.azure.resourcemanager.informaticadatamanagement.models.InformaticaServerlessRuntimeResource;
import com.azure.resourcemanager.informaticadatamanagement.models.InformaticaServerlessRuntimeResourceUpdate;
import com.azure.resourcemanager.informaticadatamanagement.models.ServerlessRuntimePropertiesCustomUpdate;

public final class InformaticaServerlessRuntimeResourceImpl implements InformaticaServerlessRuntimeResource,
    InformaticaServerlessRuntimeResource.Definition, InformaticaServerlessRuntimeResource.Update {
    private InformaticaServerlessRuntimeResourceInner innerObject;

    private final com.azure.resourcemanager.informaticadatamanagement.InformaticaDataManagementManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public InformaticaServerlessRuntimeProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public InformaticaServerlessRuntimeResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.informaticadatamanagement.InformaticaDataManagementManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String organizationName;

    private String serverlessRuntimeName;

    private InformaticaServerlessRuntimeResourceUpdate updateProperties;

    public InformaticaServerlessRuntimeResourceImpl withExistingOrganization(String resourceGroupName,
        String organizationName) {
        this.resourceGroupName = resourceGroupName;
        this.organizationName = organizationName;
        return this;
    }

    public InformaticaServerlessRuntimeResource create() {
        this.innerObject = serviceManager.serviceClient()
            .getServerlessRuntimes()
            .createOrUpdate(resourceGroupName, organizationName, serverlessRuntimeName, this.innerModel(),
                Context.NONE);
        return this;
    }

    public InformaticaServerlessRuntimeResource create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getServerlessRuntimes()
            .createOrUpdate(resourceGroupName, organizationName, serverlessRuntimeName, this.innerModel(), context);
        return this;
    }

    InformaticaServerlessRuntimeResourceImpl(String name,
        com.azure.resourcemanager.informaticadatamanagement.InformaticaDataManagementManager serviceManager) {
        this.innerObject = new InformaticaServerlessRuntimeResourceInner();
        this.serviceManager = serviceManager;
        this.serverlessRuntimeName = name;
    }

    public InformaticaServerlessRuntimeResourceImpl update() {
        this.updateProperties = new InformaticaServerlessRuntimeResourceUpdate();
        return this;
    }

    public InformaticaServerlessRuntimeResource apply() {
        this.innerObject = serviceManager.serviceClient()
            .getServerlessRuntimes()
            .updateWithResponse(resourceGroupName, organizationName, serverlessRuntimeName, updateProperties,
                Context.NONE)
            .getValue();
        return this;
    }

    public InformaticaServerlessRuntimeResource apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getServerlessRuntimes()
            .updateWithResponse(resourceGroupName, organizationName, serverlessRuntimeName, updateProperties, context)
            .getValue();
        return this;
    }

    InformaticaServerlessRuntimeResourceImpl(InformaticaServerlessRuntimeResourceInner innerObject,
        com.azure.resourcemanager.informaticadatamanagement.InformaticaDataManagementManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.organizationName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "organizations");
        this.serverlessRuntimeName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "serverlessRuntimes");
    }

    public InformaticaServerlessRuntimeResource refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getServerlessRuntimes()
            .getWithResponse(resourceGroupName, organizationName, serverlessRuntimeName, Context.NONE)
            .getValue();
        return this;
    }

    public InformaticaServerlessRuntimeResource refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getServerlessRuntimes()
            .getWithResponse(resourceGroupName, organizationName, serverlessRuntimeName, context)
            .getValue();
        return this;
    }

    public Response<CheckDependenciesResponse> checkDependenciesWithResponse(Context context) {
        return serviceManager.serverlessRuntimes()
            .checkDependenciesWithResponse(resourceGroupName, organizationName, serverlessRuntimeName, context);
    }

    public CheckDependenciesResponse checkDependencies() {
        return serviceManager.serverlessRuntimes()
            .checkDependencies(resourceGroupName, organizationName, serverlessRuntimeName);
    }

    public Response<Void> startFailedServerlessRuntimeWithResponse(Context context) {
        return serviceManager.serverlessRuntimes()
            .startFailedServerlessRuntimeWithResponse(resourceGroupName, organizationName, serverlessRuntimeName,
                context);
    }

    public void startFailedServerlessRuntime() {
        serviceManager.serverlessRuntimes()
            .startFailedServerlessRuntime(resourceGroupName, organizationName, serverlessRuntimeName);
    }

    public Response<InformaticaServerlessRuntimeResource> serverlessResourceByIdWithResponse(Context context) {
        return serviceManager.serverlessRuntimes()
            .serverlessResourceByIdWithResponse(resourceGroupName, organizationName, serverlessRuntimeName, context);
    }

    public InformaticaServerlessRuntimeResource serverlessResourceById() {
        return serviceManager.serverlessRuntimes()
            .serverlessResourceById(resourceGroupName, organizationName, serverlessRuntimeName);
    }

    public InformaticaServerlessRuntimeResourceImpl withProperties(InformaticaServerlessRuntimeProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public InformaticaServerlessRuntimeResourceImpl withProperties(ServerlessRuntimePropertiesCustomUpdate properties) {
        this.updateProperties.withProperties(properties);
        return this;
    }
}
