// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.largeinstance.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.HttpHeaders;
import com.azure.core.http.HttpRequest;
import com.azure.core.http.HttpResponse;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.resourcemanager.largeinstance.LargeInstanceManager;
import com.azure.resourcemanager.largeinstance.models.OperationStatusResult;
import java.nio.ByteBuffer;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.mockito.ArgumentCaptor;
import org.mockito.Mockito;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

public final class AzureLargeInstancesShutdownMockTests {
    @Test
    public void testShutdown() throws Exception {
        HttpClient httpClient = Mockito.mock(HttpClient.class);
        HttpResponse httpResponse = Mockito.mock(HttpResponse.class);
        ArgumentCaptor<HttpRequest> httpRequest = ArgumentCaptor.forClass(HttpRequest.class);

        String responseStr
            = "{\"id\":\"sfwxosowzxc\",\"resourceId\":\"i\",\"name\":\"ooxdjebwpuc\",\"status\":\"wfvovbv\",\"percentComplete\":46.67336,\"startTime\":\"2021-02-05T03:56:40Z\",\"endTime\":\"2021-12-04T00:10:18Z\",\"operations\":[{\"id\":\"ce\",\"resourceId\":\"jgjrwjueiotwm\",\"name\":\"ytdxwit\",\"status\":\"nrjawgqwg\",\"percentComplete\":8.610553,\"startTime\":\"2020-12-23T06:19:26Z\",\"endTime\":\"2021-10-14T20:39:54Z\",\"operations\":[{\"id\":\"py\",\"resourceId\":\"klwndnhjdauwhv\",\"name\":\"wzbtdhxu\",\"status\":\"znbmpowuwprzq\",\"percentComplete\":66.45964,\"startTime\":\"2021-02-01T23:11:32Z\",\"endTime\":\"2021-02-19T06:27:55Z\",\"operations\":[{\"status\":\"mkh\"}]},{\"id\":\"bbcswsrtjri\",\"resourceId\":\"rbpbewtghfgblcg\",\"name\":\"zvlvqhjkbegib\",\"status\":\"nmxiebwwaloayqc\",\"percentComplete\":28.272938,\"startTime\":\"2021-06-14T10:56:53Z\",\"endTime\":\"2021-07-21T21:53:41Z\",\"operations\":[{\"status\":\"wyzmhtxon\"},{\"status\":\"mtsavjcbpwxqp\"}]}]},{\"id\":\"ftguv\",\"resourceId\":\"uhprwmdyvxqt\",\"name\":\"riwwroy\",\"status\":\"bexrmcq\",\"percentComplete\":83.30763,\"startTime\":\"2021-12-03T23:18:18Z\",\"endTime\":\"2021-02-26T18:00:32Z\",\"operations\":[{\"id\":\"mefqsgzvahapjyzh\",\"resourceId\":\"gqzcjr\",\"name\":\"djzlmwlx\",\"status\":\"vu\",\"percentComplete\":84.37218,\"startTime\":\"2021-02-21T21:24:09Z\",\"endTime\":\"2021-10-22T04:54:45Z\",\"operations\":[{\"status\":\"vzunluthnnprnxi\"},{\"status\":\"eilpjzuaejxdu\"},{\"status\":\"tskzbbtdzumveek\"}]}]},{\"id\":\"zuhkfpbsjyof\",\"resourceId\":\"luu\",\"name\":\"ttouwaboekqvkel\",\"status\":\"smv\",\"percentComplete\":95.455124,\"startTime\":\"2021-08-14T03:50:42Z\",\"endTime\":\"2021-09-20T16:59Z\",\"operations\":[{\"id\":\"caalnjixisxyaw\",\"resourceId\":\"yaqcslyjpkiidz\",\"name\":\"xznelixhnrztf\",\"status\":\"lhbnxkna\",\"percentComplete\":97.00945,\"startTime\":\"2021-05-26T22:03:53Z\",\"endTime\":\"2021-02-01T13:45:43Z\",\"operations\":[{\"status\":\"tpnapnyiropuhpig\"},{\"status\":\"pgylg\"},{\"status\":\"git\"},{\"status\":\"medjvcslynqwwncw\"}]},{\"id\":\"xgk\",\"resourceId\":\"mgucna\",\"name\":\"t\",\"status\":\"oellwp\",\"percentComplete\":5.1333904,\"startTime\":\"2021-10-30T20:36:32Z\",\"endTime\":\"2020-12-31T02:22:45Z\",\"operations\":[{\"status\":\"uaceopzfqrhhu\"}]}]},{\"id\":\"pcqeqx\",\"resourceId\":\"z\",\"name\":\"hzxct\",\"status\":\"bgbkdmoizpost\",\"percentComplete\":44.89905,\"startTime\":\"2021-03-12T03:59:06Z\",\"endTime\":\"2021-02-28T09:22:03Z\",\"operations\":[{\"id\":\"fqjhhkxbpvjymj\",\"resourceId\":\"xjyngudivk\",\"name\":\"swbxqz\",\"status\":\"szjfauvjfdxxivet\",\"percentComplete\":71.23314,\"startTime\":\"2021-04-09T14:12:32Z\",\"endTime\":\"2021-10-28T02:56:06Z\",\"operations\":[{\"status\":\"qmcbxvwvxyslqbhs\"},{\"status\":\"xoblytkbl\"},{\"status\":\"pe\"},{\"status\":\"wwfbkrvrnsvshq\"}]},{\"id\":\"xc\",\"resourceId\":\"bfovasrruvwbhsq\",\"name\":\"ubcgjbirxb\",\"status\":\"ybsrfbjfdtwss\",\"percentComplete\":67.97699,\"startTime\":\"2021-03-22T01:55:17Z\",\"endTime\":\"2021-01-31T07:10:37Z\",\"operations\":[{\"status\":\"exilzznfqqnvwpmq\"},{\"status\":\"aruoujmkcjhwqyt\"},{\"status\":\"r\"},{\"status\":\"bnw\"}]},{\"id\":\"gdrjervnaenqpe\",\"resourceId\":\"ndoygmifthnzdnd\",\"name\":\"gnayqigynduh\",\"status\":\"vhqlkthumaqo\",\"percentComplete\":30.626493,\"startTime\":\"2021-05-30T14:02:28Z\",\"endTime\":\"2021-04-25T18:04:33Z\",\"operations\":[{\"status\":\"r\"},{\"status\":\"gccymvaolpssl\"},{\"status\":\"lfmmdnbbglzpswi\"}]},{\"id\":\"cwyhzdxssa\",\"resourceId\":\"zmnvdfznudaod\",\"name\":\"zbn\",\"status\":\"blylpstdbh\",\"percentComplete\":76.3956,\"startTime\":\"2021-08-01T18:00:19Z\",\"endTime\":\"2021-01-07T21:40:15Z\",\"operations\":[{\"status\":\"erscdntne\"}]}]}]}";

        Mockito.when(httpResponse.getStatusCode()).thenReturn(200);
        Mockito.when(httpResponse.getHeaders()).thenReturn(new HttpHeaders());
        Mockito.when(httpResponse.getBody())
            .thenReturn(Flux.just(ByteBuffer.wrap(responseStr.getBytes(StandardCharsets.UTF_8))));
        Mockito.when(httpResponse.getBodyAsByteArray())
            .thenReturn(Mono.just(responseStr.getBytes(StandardCharsets.UTF_8)));
        Mockito.when(httpClient.send(httpRequest.capture(), Mockito.any())).thenReturn(Mono.defer(() -> {
            Mockito.when(httpResponse.getRequest()).thenReturn(httpRequest.getValue());
            return Mono.just(httpResponse);
        }));

        LargeInstanceManager manager = LargeInstanceManager.configure().withHttpClient(httpClient).authenticate(
            tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
            new AzureProfile("", "", AzureEnvironment.AZURE));

        OperationStatusResult response
            = manager.azureLargeInstances().shutdown("beldawkzbaliourq", "akauha", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("sfwxosowzxc", response.id());
        Assertions.assertEquals("ooxdjebwpuc", response.name());
        Assertions.assertEquals("wfvovbv", response.status());
        Assertions.assertEquals(46.67336F, response.percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-05T03:56:40Z"), response.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-04T00:10:18Z"), response.endTime());
        Assertions.assertEquals("ce", response.operations().get(0).id());
        Assertions.assertEquals("ytdxwit", response.operations().get(0).name());
        Assertions.assertEquals("nrjawgqwg", response.operations().get(0).status());
        Assertions.assertEquals(8.610553F, response.operations().get(0).percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-23T06:19:26Z"), response.operations().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-14T20:39:54Z"), response.operations().get(0).endTime());
        Assertions.assertEquals("py", response.operations().get(0).operations().get(0).id());
        Assertions.assertEquals("wzbtdhxu", response.operations().get(0).operations().get(0).name());
        Assertions.assertEquals("znbmpowuwprzq", response.operations().get(0).operations().get(0).status());
        Assertions.assertEquals(66.45964F, response.operations().get(0).operations().get(0).percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-01T23:11:32Z"),
            response.operations().get(0).operations().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-19T06:27:55Z"),
            response.operations().get(0).operations().get(0).endTime());
        Assertions.assertEquals("mkh", response.operations().get(0).operations().get(0).operations().get(0).status());
    }
}
