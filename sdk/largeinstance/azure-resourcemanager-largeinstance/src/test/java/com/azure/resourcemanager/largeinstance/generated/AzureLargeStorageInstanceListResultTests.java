// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.largeinstance.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.largeinstance.fluent.models.AzureLargeStorageInstanceInner;
import com.azure.resourcemanager.largeinstance.models.AzureLargeInstanceHardwareTypeNamesEnum;
import com.azure.resourcemanager.largeinstance.models.AzureLargeStorageInstanceListResult;
import com.azure.resourcemanager.largeinstance.models.AzureLargeStorageInstanceProperties;
import com.azure.resourcemanager.largeinstance.models.StorageBillingProperties;
import com.azure.resourcemanager.largeinstance.models.StorageProperties;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AzureLargeStorageInstanceListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureLargeStorageInstanceListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"azureLargeStorageInstanceUniqueIdentifier\":\"qulngsntnbybkzgc\",\"storageProperties\":{\"provisioningState\":\"Succeeded\",\"offeringType\":\"xxwr\",\"storageType\":\"douskcqvkocrcjdk\",\"generation\":\"nh\",\"hardwareType\":\"HPE\",\"workloadType\":\"biksq\",\"storageBillingProperties\":{\"billingMode\":\"ssainqpjwnzll\",\"sku\":\"mppeebvmgxs\"}}},\"location\":\"kyqduujit\",\"tags\":{\"rwpdappdsbdkvwrw\":\"zdzevndh\",\"eltmrldhugjzzdat\":\"feusnhut\"},\"id\":\"xhocdgeablgphuti\",\"name\":\"ndv\",\"type\":\"aozwyiftyhxhu\"},{\"properties\":{\"azureLargeStorageInstanceUniqueIdentifier\":\"ftyxolniw\",\"storageProperties\":{\"provisioningState\":\"Canceled\",\"offeringType\":\"jfkgiawxk\",\"storageType\":\"ypl\",\"generation\":\"kbasyypn\",\"hardwareType\":\"SDFLEX\",\"workloadType\":\"gcbacphejkot\",\"storageBillingProperties\":{\"billingMode\":\"gou\",\"sku\":\"ndlik\"}}},\"location\":\"qkgfgibma\",\"tags\":{\"tbciqfouflmm\":\"keqsrxybzqqedq\",\"lougpbkw\":\"kzsmodm\"},\"id\":\"mutduqktaps\",\"name\":\"wgcu\",\"type\":\"rtumkdosvq\"},{\"properties\":{\"azureLargeStorageInstanceUniqueIdentifier\":\"mdgbbjfdd\",\"storageProperties\":{\"provisioningState\":\"Creating\",\"offeringType\":\"ex\",\"storageType\":\"bhtqqrolfpfpsa\",\"generation\":\"bquxigjy\",\"hardwareType\":\"SDFLEX\",\"workloadType\":\"aoyfhrtxilnerkuj\",\"storageBillingProperties\":{\"billingMode\":\"l\",\"sku\":\"uvfqawrlyxwj\"}}},\"location\":\"prbnwbxgjvtbv\",\"tags\":{\"jq\":\"szdnr\",\"uitnwuiz\":\"uhmuouqfprwzwbn\"},\"id\":\"a\",\"name\":\"x\",\"type\":\"fizuckyf\"},{\"properties\":{\"azureLargeStorageInstanceUniqueIdentifier\":\"fidfvzw\",\"storageProperties\":{\"provisioningState\":\"Updating\",\"offeringType\":\"ymwisdkft\",\"storageType\":\"xmnteiwaop\",\"generation\":\"mijcmmxdcufufs\",\"hardwareType\":\"HPE\",\"workloadType\":\"zidnsezcxtbzsgfy\",\"storageBillingProperties\":{\"billingMode\":\"newmdwzjeiachbo\",\"sku\":\"flnrosfqpteehzz\"}}},\"location\":\"pyqr\",\"tags\":{\"hc\":\"inpvswjdkirsoodq\"},\"id\":\"mnoh\",\"name\":\"t\",\"type\":\"kwh\"}],\"nextLink\":\"oifiyipjxsqwpgr\"}")
            .toObject(AzureLargeStorageInstanceListResult.class);
        Assertions.assertEquals("kyqduujit", model.value().get(0).location());
        Assertions.assertEquals("zdzevndh", model.value().get(0).tags().get("rwpdappdsbdkvwrw"));
        Assertions.assertEquals("qulngsntnbybkzgc",
            model.value().get(0).properties().azureLargeStorageInstanceUniqueIdentifier());
        Assertions.assertEquals("xxwr", model.value().get(0).properties().storageProperties().offeringType());
        Assertions.assertEquals("douskcqvkocrcjdk",
            model.value().get(0).properties().storageProperties().storageType());
        Assertions.assertEquals("nh", model.value().get(0).properties().storageProperties().generation());
        Assertions.assertEquals(AzureLargeInstanceHardwareTypeNamesEnum.HPE,
            model.value().get(0).properties().storageProperties().hardwareType());
        Assertions.assertEquals("biksq", model.value().get(0).properties().storageProperties().workloadType());
        Assertions.assertEquals("ssainqpjwnzll",
            model.value().get(0).properties().storageProperties().storageBillingProperties().billingMode());
        Assertions.assertEquals("mppeebvmgxs",
            model.value().get(0).properties().storageProperties().storageBillingProperties().sku());
        Assertions.assertEquals("oifiyipjxsqwpgr", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureLargeStorageInstanceListResult model = new AzureLargeStorageInstanceListResult()
            .withValue(Arrays.asList(
                new AzureLargeStorageInstanceInner().withLocation("kyqduujit")
                    .withTags(mapOf("rwpdappdsbdkvwrw", "zdzevndh", "eltmrldhugjzzdat", "feusnhut"))
                    .withProperties(new AzureLargeStorageInstanceProperties()
                        .withAzureLargeStorageInstanceUniqueIdentifier("qulngsntnbybkzgc")
                        .withStorageProperties(new StorageProperties().withOfferingType("xxwr")
                            .withStorageType("douskcqvkocrcjdk").withGeneration("nh")
                            .withHardwareType(AzureLargeInstanceHardwareTypeNamesEnum.HPE).withWorkloadType("biksq")
                            .withStorageBillingProperties(new StorageBillingProperties()
                                .withBillingMode("ssainqpjwnzll").withSku("mppeebvmgxs")))),
                new AzureLargeStorageInstanceInner().withLocation("qkgfgibma")
                    .withTags(mapOf("tbciqfouflmm", "keqsrxybzqqedq", "lougpbkw", "kzsmodm"))
                    .withProperties(new AzureLargeStorageInstanceProperties()
                        .withAzureLargeStorageInstanceUniqueIdentifier("ftyxolniw")
                        .withStorageProperties(new StorageProperties().withOfferingType("jfkgiawxk")
                            .withStorageType("ypl").withGeneration("kbasyypn")
                            .withHardwareType(AzureLargeInstanceHardwareTypeNamesEnum.SDFLEX)
                            .withWorkloadType("gcbacphejkot").withStorageBillingProperties(
                                new StorageBillingProperties().withBillingMode("gou").withSku("ndlik")))),
                new AzureLargeStorageInstanceInner().withLocation("prbnwbxgjvtbv")
                    .withTags(mapOf("jq", "szdnr", "uitnwuiz", "uhmuouqfprwzwbn"))
                    .withProperties(new AzureLargeStorageInstanceProperties()
                        .withAzureLargeStorageInstanceUniqueIdentifier("mdgbbjfdd")
                        .withStorageProperties(new StorageProperties().withOfferingType("ex")
                            .withStorageType("bhtqqrolfpfpsa").withGeneration("bquxigjy")
                            .withHardwareType(AzureLargeInstanceHardwareTypeNamesEnum.SDFLEX)
                            .withWorkloadType("aoyfhrtxilnerkuj").withStorageBillingProperties(
                                new StorageBillingProperties().withBillingMode("l").withSku("uvfqawrlyxwj")))),
                new AzureLargeStorageInstanceInner().withLocation("pyqr").withTags(mapOf("hc", "inpvswjdkirsoodq"))
                    .withProperties(new AzureLargeStorageInstanceProperties()
                        .withAzureLargeStorageInstanceUniqueIdentifier("fidfvzw")
                        .withStorageProperties(new StorageProperties().withOfferingType("ymwisdkft")
                            .withStorageType("xmnteiwaop").withGeneration("mijcmmxdcufufs")
                            .withHardwareType(AzureLargeInstanceHardwareTypeNamesEnum.HPE)
                            .withWorkloadType("zidnsezcxtbzsgfy")
                            .withStorageBillingProperties(new StorageBillingProperties()
                                .withBillingMode("newmdwzjeiachbo").withSku("flnrosfqpteehzz"))))))
            .withNextLink("oifiyipjxsqwpgr");
        model = BinaryData.fromObject(model).toObject(AzureLargeStorageInstanceListResult.class);
        Assertions.assertEquals("kyqduujit", model.value().get(0).location());
        Assertions.assertEquals("zdzevndh", model.value().get(0).tags().get("rwpdappdsbdkvwrw"));
        Assertions.assertEquals("qulngsntnbybkzgc",
            model.value().get(0).properties().azureLargeStorageInstanceUniqueIdentifier());
        Assertions.assertEquals("xxwr", model.value().get(0).properties().storageProperties().offeringType());
        Assertions.assertEquals("douskcqvkocrcjdk",
            model.value().get(0).properties().storageProperties().storageType());
        Assertions.assertEquals("nh", model.value().get(0).properties().storageProperties().generation());
        Assertions.assertEquals(AzureLargeInstanceHardwareTypeNamesEnum.HPE,
            model.value().get(0).properties().storageProperties().hardwareType());
        Assertions.assertEquals("biksq", model.value().get(0).properties().storageProperties().workloadType());
        Assertions.assertEquals("ssainqpjwnzll",
            model.value().get(0).properties().storageProperties().storageBillingProperties().billingMode());
        Assertions.assertEquals("mppeebvmgxs",
            model.value().get(0).properties().storageProperties().storageBillingProperties().sku());
        Assertions.assertEquals("oifiyipjxsqwpgr", model.nextLink());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
