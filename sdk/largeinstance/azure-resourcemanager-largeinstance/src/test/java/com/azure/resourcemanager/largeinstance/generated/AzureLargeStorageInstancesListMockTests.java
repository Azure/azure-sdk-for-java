// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.largeinstance.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.largeinstance.LargeInstanceManager;
import com.azure.resourcemanager.largeinstance.models.AzureLargeInstanceHardwareTypeNamesEnum;
import com.azure.resourcemanager.largeinstance.models.AzureLargeStorageInstance;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AzureLargeStorageInstancesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"azureLargeStorageInstanceUniqueIdentifier\":\"kn\",\"storageProperties\":{\"provisioningState\":\"Succeeded\",\"offeringType\":\"svlxotogtwrup\",\"storageType\":\"xvnmicykvceov\",\"generation\":\"lo\",\"hardwareType\":\"Cisco_UCS\",\"workloadType\":\"yfjfcnjbkcn\",\"storageBillingProperties\":{\"billingMode\":\"bttk\",\"sku\":\"ywpnvjt\"}}},\"location\":\"nermcl\",\"tags\":{\"rpabg\":\"phoxus\",\"xywpmueefjzwfqkq\":\"epsbjtazqu\"},\"id\":\"jidsuyonobglaoc\",\"name\":\"xtccmg\",\"type\":\"udxytlmoyrx\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        LargeInstanceManager manager = LargeInstanceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<AzureLargeStorageInstance> response
            = manager.azureLargeStorageInstances().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("nermcl", response.iterator().next().location());
        Assertions.assertEquals("phoxus", response.iterator().next().tags().get("rpabg"));
        Assertions.assertEquals("kn",
            response.iterator().next().properties().azureLargeStorageInstanceUniqueIdentifier());
        Assertions.assertEquals("svlxotogtwrup",
            response.iterator().next().properties().storageProperties().offeringType());
        Assertions.assertEquals("xvnmicykvceov",
            response.iterator().next().properties().storageProperties().storageType());
        Assertions.assertEquals("lo", response.iterator().next().properties().storageProperties().generation());
        Assertions.assertEquals(AzureLargeInstanceHardwareTypeNamesEnum.CISCO_UCS,
            response.iterator().next().properties().storageProperties().hardwareType());
        Assertions.assertEquals("yfjfcnjbkcn",
            response.iterator().next().properties().storageProperties().workloadType());
        Assertions.assertEquals("bttk",
            response.iterator().next().properties().storageProperties().storageBillingProperties().billingMode());
        Assertions.assertEquals("ywpnvjt",
            response.iterator().next().properties().storageProperties().storageBillingProperties().sku());
    }
}
