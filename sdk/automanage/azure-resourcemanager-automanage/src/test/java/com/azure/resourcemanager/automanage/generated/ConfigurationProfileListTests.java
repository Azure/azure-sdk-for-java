// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automanage.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automanage.fluent.models.ConfigurationProfileInner;
import com.azure.resourcemanager.automanage.models.ConfigurationProfileList;
import com.azure.resourcemanager.automanage.models.ConfigurationProfileProperties;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ConfigurationProfileListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ConfigurationProfileList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"configuration\":\"datakxwczbyscnpqxuhi\"},\"location\":\"qniwbybrkxvdumj\",\"tags\":{\"gaudcc\":\"fwvuk\",\"kryhtnapczwlokj\":\"nhsjcnyej\",\"jnchgej\":\"emkkvnipjox\"},\"id\":\"podmailzydehojwy\",\"name\":\"huxinpmqnj\",\"type\":\"qwixjspro\"},{\"properties\":{\"configuration\":\"dataputegjvwmfd\"},\"location\":\"scmdvpjhulsuu\",\"tags\":{\"pslwejdpvw\":\"jozkrwfndiod\",\"akl\":\"yoqpsoaccta\",\"fdosyg\":\"lahbcryff\"},\"id\":\"xpaojakhmsbz\",\"name\":\"hcrzevd\",\"type\":\"hlxaolthqtr\"},{\"properties\":{\"configuration\":\"databpf\"},\"location\":\"s\",\"tags\":{\"wzo\":\"gvfcj\",\"np\":\"xjtfelluwfzit\",\"lxofpdvhpfxxypin\":\"qfpjk\"},\"id\":\"nmayhuybb\",\"name\":\"podepoo\",\"type\":\"inuvamiheogn\"}]}")
            .toObject(ConfigurationProfileList.class);
        Assertions.assertEquals("qniwbybrkxvdumj", model.value().get(0).location());
        Assertions.assertEquals("fwvuk", model.value().get(0).tags().get("gaudcc"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ConfigurationProfileList model = new ConfigurationProfileList().withValue(Arrays.asList(
            new ConfigurationProfileInner().withLocation("qniwbybrkxvdumj")
                .withTags(mapOf("gaudcc", "fwvuk", "kryhtnapczwlokj", "nhsjcnyej", "jnchgej", "emkkvnipjox"))
                .withProperties(new ConfigurationProfileProperties().withConfiguration("datakxwczbyscnpqxuhi")),
            new ConfigurationProfileInner().withLocation("scmdvpjhulsuu")
                .withTags(mapOf("pslwejdpvw", "jozkrwfndiod", "akl", "yoqpsoaccta", "fdosyg", "lahbcryff"))
                .withProperties(new ConfigurationProfileProperties().withConfiguration("dataputegjvwmfd")),
            new ConfigurationProfileInner().withLocation("s")
                .withTags(mapOf("wzo", "gvfcj", "np", "xjtfelluwfzit", "lxofpdvhpfxxypin", "qfpjk"))
                .withProperties(new ConfigurationProfileProperties().withConfiguration("databpf"))));
        model = BinaryData.fromObject(model).toObject(ConfigurationProfileList.class);
        Assertions.assertEquals("qniwbybrkxvdumj", model.value().get(0).location());
        Assertions.assertEquals("fwvuk", model.value().get(0).tags().get("gaudcc"));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
