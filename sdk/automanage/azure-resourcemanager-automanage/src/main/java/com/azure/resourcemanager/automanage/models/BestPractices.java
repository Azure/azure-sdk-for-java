// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automanage.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of BestPractices. */
public interface BestPractices {
    /**
     * Get information about a Automanage best practice.
     *
     * @param bestPracticeName The Automanage best practice name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about a Automanage best practice.
     */
    BestPractice get(String bestPracticeName);

    /**
     * Get information about a Automanage best practice.
     *
     * @param bestPracticeName The Automanage best practice name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about a Automanage best practice along with {@link Response}.
     */
    Response<BestPractice> getWithResponse(String bestPracticeName, Context context);

    /**
     * Retrieve a list of Automanage best practices.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of the list best practice operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BestPractice> listByTenant();

    /**
     * Retrieve a list of Automanage best practices.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of the list best practice operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BestPractice> listByTenant(Context context);
}
