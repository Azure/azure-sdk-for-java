// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automanage.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of ConfigurationProfiles. */
public interface ConfigurationProfiles {
    /**
     * Get information about a configuration profile.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configurationProfileName The configuration profile name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about a configuration profile.
     */
    ConfigurationProfile getByResourceGroup(String resourceGroupName, String configurationProfileName);

    /**
     * Get information about a configuration profile.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configurationProfileName The configuration profile name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about a configuration profile along with {@link Response}.
     */
    Response<ConfigurationProfile> getByResourceGroupWithResponse(
        String resourceGroupName, String configurationProfileName, Context context);

    /**
     * Delete a configuration profile.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configurationProfileName Name of the configuration profile.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String configurationProfileName);

    /**
     * Delete a configuration profile.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configurationProfileName Name of the configuration profile.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteWithResponse(String resourceGroupName, String configurationProfileName, Context context);

    /**
     * Retrieve a list of configuration profile within a given resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of the list configuration profile operation as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<ConfigurationProfile> listByResourceGroup(String resourceGroupName);

    /**
     * Retrieve a list of configuration profile within a given resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of the list configuration profile operation as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<ConfigurationProfile> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Retrieve a list of configuration profile within a subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of the list configuration profile operation as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<ConfigurationProfile> list();

    /**
     * Retrieve a list of configuration profile within a subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of the list configuration profile operation as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<ConfigurationProfile> list(Context context);

    /**
     * Get information about a configuration profile.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about a configuration profile along with {@link Response}.
     */
    ConfigurationProfile getById(String id);

    /**
     * Get information about a configuration profile.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about a configuration profile along with {@link Response}.
     */
    Response<ConfigurationProfile> getByIdWithResponse(String id, Context context);

    /**
     * Delete a configuration profile.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a configuration profile.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new ConfigurationProfile resource.
     *
     * @param name resource name.
     * @return the first stage of the new ConfigurationProfile definition.
     */
    ConfigurationProfile.DefinitionStages.Blank define(String name);
}
