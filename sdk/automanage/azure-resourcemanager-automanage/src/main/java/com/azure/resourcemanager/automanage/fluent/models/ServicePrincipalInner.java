// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automanage.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The Service Principal Id for the subscription. */
@Fluent
public final class ServicePrincipalInner extends ProxyResource {
    /*
     * The Service Principal properties for the subscription
     */
    @JsonProperty(value = "properties")
    private ServicePrincipalProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Get the innerProperties property: The Service Principal properties for the subscription.
     *
     * @return the innerProperties value.
     */
    private ServicePrincipalProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the servicePrincipalId property: The Service Principal Id for the subscription.
     *
     * @return the servicePrincipalId value.
     */
    public String servicePrincipalId() {
        return this.innerProperties() == null ? null : this.innerProperties().servicePrincipalId();
    }

    /**
     * Get the authorizationSet property: Returns the contributor RBAC Role exist or not for the Service Principal Id.
     *
     * @return the authorizationSet value.
     */
    public Boolean authorizationSet() {
        return this.innerProperties() == null ? null : this.innerProperties().authorizationSet();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
