// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.trustedsigning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.trustedsigning.models.AccountSku;
import com.azure.resourcemanager.trustedsigning.models.CodeSigningAccountPatch;
import com.azure.resourcemanager.trustedsigning.models.SkuName;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class CodeSigningAccountPatchTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CodeSigningAccountPatch model = BinaryData.fromString(
            "{\"tags\":{\"o\":\"gejspodmailzyde\",\"wixjsprozvcp\":\"wyahuxinpmqnja\",\"atscmd\":\"tegjvwmf\"},\"properties\":{\"sku\":{\"name\":\"Premium\"}}}")
            .toObject(CodeSigningAccountPatch.class);
        Assertions.assertEquals("gejspodmailzyde", model.tags().get("o"));
        Assertions.assertEquals(SkuName.PREMIUM, model.sku().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CodeSigningAccountPatch model = new CodeSigningAccountPatch()
            .withTags(mapOf("o", "gejspodmailzyde", "wixjsprozvcp", "wyahuxinpmqnja", "atscmd", "tegjvwmf"))
            .withSku(new AccountSku().withName(SkuName.PREMIUM));
        model = BinaryData.fromObject(model).toObject(CodeSigningAccountPatch.class);
        Assertions.assertEquals("gejspodmailzyde", model.tags().get("o"));
        Assertions.assertEquals(SkuName.PREMIUM, model.sku().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
