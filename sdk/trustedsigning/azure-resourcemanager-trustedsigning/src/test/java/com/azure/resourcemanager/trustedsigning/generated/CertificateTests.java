// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.trustedsigning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.trustedsigning.models.Certificate;
import com.azure.resourcemanager.trustedsigning.models.CertificateStatus;
import com.azure.resourcemanager.trustedsigning.models.RevocationStatus;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class CertificateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Certificate model = BinaryData.fromString(
            "{\"serialNumber\":\"wpdappdsbdkv\",\"subjectName\":\"wjfeusnhutjel\",\"thumbprint\":\"rl\",\"createdDate\":\"ugjzzdatqxhocdge\",\"expiryDate\":\"lgphu\",\"status\":\"Active\",\"revocation\":{\"requestedAt\":\"2021-11-02T18:15:21Z\",\"effectiveAt\":\"2020-12-26T15:55:24Z\",\"reason\":\"zwyiftyhxhur\",\"remarks\":\"ftyxolniw\",\"status\":\"Succeeded\",\"failureReason\":\"kjfkg\"}}")
            .toObject(Certificate.class);
        Assertions.assertEquals("wpdappdsbdkv", model.serialNumber());
        Assertions.assertEquals("wjfeusnhutjel", model.subjectName());
        Assertions.assertEquals("rl", model.thumbprint());
        Assertions.assertEquals("ugjzzdatqxhocdge", model.createdDate());
        Assertions.assertEquals("lgphu", model.expiryDate());
        Assertions.assertEquals(CertificateStatus.ACTIVE, model.status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-02T18:15:21Z"), model.requestedAt());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-26T15:55:24Z"), model.effectiveAt());
        Assertions.assertEquals("zwyiftyhxhur", model.reason());
        Assertions.assertEquals("ftyxolniw", model.remarks());
        Assertions.assertEquals(RevocationStatus.SUCCEEDED, model.statusRevocationStatus());
        Assertions.assertEquals("kjfkg", model.failureReason());
    }
}
