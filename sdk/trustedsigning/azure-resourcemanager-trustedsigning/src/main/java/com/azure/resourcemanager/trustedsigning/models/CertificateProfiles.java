// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.trustedsigning.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of CertificateProfiles.
 */
public interface CertificateProfiles {
    /**
     * Get details of a certificate profile.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName Trusted Signing account name.
     * @param profileName Certificate profile name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details of a certificate profile along with {@link Response}.
     */
    Response<CertificateProfile> getWithResponse(String resourceGroupName, String accountName, String profileName,
        Context context);

    /**
     * Get details of a certificate profile.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName Trusted Signing account name.
     * @param profileName Certificate profile name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details of a certificate profile.
     */
    CertificateProfile get(String resourceGroupName, String accountName, String profileName);

    /**
     * Delete a certificate profile.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName Trusted Signing account name.
     * @param profileName Certificate profile name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String accountName, String profileName);

    /**
     * Delete a certificate profile.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName Trusted Signing account name.
     * @param profileName Certificate profile name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String accountName, String profileName, Context context);

    /**
     * List certificate profiles under a trusted signing account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName Trusted Signing account name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a CertificateProfile list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<CertificateProfile> listByCodeSigningAccount(String resourceGroupName, String accountName);

    /**
     * List certificate profiles under a trusted signing account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName Trusted Signing account name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a CertificateProfile list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<CertificateProfile> listByCodeSigningAccount(String resourceGroupName, String accountName,
        Context context);

    /**
     * Revoke a certificate under a certificate profile.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName Trusted Signing account name.
     * @param profileName Certificate profile name.
     * @param body Parameters to revoke the certificate profile.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> revokeCertificateWithResponse(String resourceGroupName, String accountName, String profileName,
        RevokeCertificate body, Context context);

    /**
     * Revoke a certificate under a certificate profile.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName Trusted Signing account name.
     * @param profileName Certificate profile name.
     * @param body Parameters to revoke the certificate profile.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void revokeCertificate(String resourceGroupName, String accountName, String profileName, RevokeCertificate body);

    /**
     * Get details of a certificate profile.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details of a certificate profile along with {@link Response}.
     */
    CertificateProfile getById(String id);

    /**
     * Get details of a certificate profile.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details of a certificate profile along with {@link Response}.
     */
    Response<CertificateProfile> getByIdWithResponse(String id, Context context);

    /**
     * Delete a certificate profile.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a certificate profile.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new CertificateProfile resource.
     * 
     * @param name resource name.
     * @return the first stage of the new CertificateProfile definition.
     */
    CertificateProfile.DefinitionStages.Blank define(String name);
}
