// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.mysqlflexibleserver.models.AdvancedThreatProtectionState;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Properties of Advanced Threat Protection that can be updated.
 */
@Fluent
public final class AdvancedThreatProtectionUpdateProperties {
    /*
     * Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.
     */
    @JsonProperty(value = "state", required = true)
    private AdvancedThreatProtectionState state;

    /**
     * Creates an instance of AdvancedThreatProtectionUpdateProperties class.
     */
    public AdvancedThreatProtectionUpdateProperties() {
    }

    /**
     * Get the state property: Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled
     * or a state has not been applied yet on the specific database or server.
     * 
     * @return the state value.
     */
    public AdvancedThreatProtectionState state() {
        return this.state;
    }

    /**
     * Set the state property: Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled
     * or a state has not been applied yet on the specific database or server.
     * 
     * @param state the state value to set.
     * @return the AdvancedThreatProtectionUpdateProperties object itself.
     */
    public AdvancedThreatProtectionUpdateProperties withState(AdvancedThreatProtectionState state) {
        this.state = state;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (state() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property state in model AdvancedThreatProtectionUpdateProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(AdvancedThreatProtectionUpdateProperties.class);
}
