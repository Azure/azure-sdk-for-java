// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.mysqlflexibleserver.fluent.models.AdvancedThreatProtectionInner;
import com.azure.resourcemanager.mysqlflexibleserver.models.AdvancedThreatProtectionForUpdate;
import com.azure.resourcemanager.mysqlflexibleserver.models.AdvancedThreatProtectionName;

/**
 * An instance of this class provides access to all the operations defined in AdvancedThreatProtectionSettingsClient.
 */
public interface AdvancedThreatProtectionSettingsClient {
    /**
     * Get a server's Advanced Threat Protection state.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverName The name of the server.
     * @param advancedThreatProtectionName The name of the Advanced Threat Protection state.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a server's Advanced Threat Protection state along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AdvancedThreatProtectionInner> getWithResponse(String resourceGroupName, String serverName,
        AdvancedThreatProtectionName advancedThreatProtectionName, Context context);

    /**
     * Get a server's Advanced Threat Protection state.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverName The name of the server.
     * @param advancedThreatProtectionName The name of the Advanced Threat Protection state.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a server's Advanced Threat Protection state.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AdvancedThreatProtectionInner get(String resourceGroupName, String serverName,
        AdvancedThreatProtectionName advancedThreatProtectionName);

    /**
     * Updates a server's Advanced Threat Protection state.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverName The name of the server.
     * @param advancedThreatProtectionName The name of the Advanced Threat Protection state.
     * @param parameters The server's Advanced Threat Protection body to update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a server's Advanced Threat Protection.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AdvancedThreatProtectionInner>, AdvancedThreatProtectionInner> beginUpdate(
        String resourceGroupName, String serverName, AdvancedThreatProtectionName advancedThreatProtectionName,
        AdvancedThreatProtectionForUpdate parameters);

    /**
     * Updates a server's Advanced Threat Protection state.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverName The name of the server.
     * @param advancedThreatProtectionName The name of the Advanced Threat Protection state.
     * @param parameters The server's Advanced Threat Protection body to update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a server's Advanced Threat Protection.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AdvancedThreatProtectionInner>, AdvancedThreatProtectionInner> beginUpdate(
        String resourceGroupName, String serverName, AdvancedThreatProtectionName advancedThreatProtectionName,
        AdvancedThreatProtectionForUpdate parameters, Context context);

    /**
     * Updates a server's Advanced Threat Protection state.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverName The name of the server.
     * @param advancedThreatProtectionName The name of the Advanced Threat Protection state.
     * @param parameters The server's Advanced Threat Protection body to update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a server's Advanced Threat Protection.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AdvancedThreatProtectionInner update(String resourceGroupName, String serverName,
        AdvancedThreatProtectionName advancedThreatProtectionName, AdvancedThreatProtectionForUpdate parameters);

    /**
     * Updates a server's Advanced Threat Protection state.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverName The name of the server.
     * @param advancedThreatProtectionName The name of the Advanced Threat Protection state.
     * @param parameters The server's Advanced Threat Protection body to update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a server's Advanced Threat Protection.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AdvancedThreatProtectionInner update(String resourceGroupName, String serverName,
        AdvancedThreatProtectionName advancedThreatProtectionName, AdvancedThreatProtectionForUpdate parameters,
        Context context);

    /**
     * Updates a server's Advanced Threat Protection state.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverName The name of the server.
     * @param advancedThreatProtectionName The name of the Advanced Threat Protection state.
     * @param parameters The server's Advanced Threat Protection body to update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a server's Advanced Threat Protection.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AdvancedThreatProtectionInner>, AdvancedThreatProtectionInner> beginUpdatePut(
        String resourceGroupName, String serverName, AdvancedThreatProtectionName advancedThreatProtectionName,
        AdvancedThreatProtectionInner parameters);

    /**
     * Updates a server's Advanced Threat Protection state.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverName The name of the server.
     * @param advancedThreatProtectionName The name of the Advanced Threat Protection state.
     * @param parameters The server's Advanced Threat Protection body to update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a server's Advanced Threat Protection.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AdvancedThreatProtectionInner>, AdvancedThreatProtectionInner> beginUpdatePut(
        String resourceGroupName, String serverName, AdvancedThreatProtectionName advancedThreatProtectionName,
        AdvancedThreatProtectionInner parameters, Context context);

    /**
     * Updates a server's Advanced Threat Protection state.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverName The name of the server.
     * @param advancedThreatProtectionName The name of the Advanced Threat Protection state.
     * @param parameters The server's Advanced Threat Protection body to update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a server's Advanced Threat Protection.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AdvancedThreatProtectionInner updatePut(String resourceGroupName, String serverName,
        AdvancedThreatProtectionName advancedThreatProtectionName, AdvancedThreatProtectionInner parameters);

    /**
     * Updates a server's Advanced Threat Protection state.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverName The name of the server.
     * @param advancedThreatProtectionName The name of the Advanced Threat Protection state.
     * @param parameters The server's Advanced Threat Protection body to update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a server's Advanced Threat Protection.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AdvancedThreatProtectionInner updatePut(String resourceGroupName, String serverName,
        AdvancedThreatProtectionName advancedThreatProtectionName, AdvancedThreatProtectionInner parameters,
        Context context);

    /**
     * Gets a list of server's Advanced Threat Protection states.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverName The name of the server.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of server's Advanced Threat Protection states as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AdvancedThreatProtectionInner> list(String resourceGroupName, String serverName);

    /**
     * Gets a list of server's Advanced Threat Protection states.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverName The name of the server.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of server's Advanced Threat Protection states as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AdvancedThreatProtectionInner> list(String resourceGroupName, String serverName, Context context);
}
