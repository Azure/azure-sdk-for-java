// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.mysqlflexibleserver.models.AdministratorType;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The properties of an administrator. */
@Fluent
public final class AdministratorProperties {
    /*
     * Type of the sever administrator.
     */
    @JsonProperty(value = "administratorType")
    private AdministratorType administratorType;

    /*
     * Login name of the server administrator.
     */
    @JsonProperty(value = "login")
    private String login;

    /*
     * SID (object ID) of the server administrator.
     */
    @JsonProperty(value = "sid")
    private String sid;

    /*
     * Tenant ID of the administrator.
     */
    @JsonProperty(value = "tenantId")
    private String tenantId;

    /*
     * The resource id of the identity used for AAD Authentication.
     */
    @JsonProperty(value = "identityResourceId")
    private String identityResourceId;

    /** Creates an instance of AdministratorProperties class. */
    public AdministratorProperties() {
    }

    /**
     * Get the administratorType property: Type of the sever administrator.
     *
     * @return the administratorType value.
     */
    public AdministratorType administratorType() {
        return this.administratorType;
    }

    /**
     * Set the administratorType property: Type of the sever administrator.
     *
     * @param administratorType the administratorType value to set.
     * @return the AdministratorProperties object itself.
     */
    public AdministratorProperties withAdministratorType(AdministratorType administratorType) {
        this.administratorType = administratorType;
        return this;
    }

    /**
     * Get the login property: Login name of the server administrator.
     *
     * @return the login value.
     */
    public String login() {
        return this.login;
    }

    /**
     * Set the login property: Login name of the server administrator.
     *
     * @param login the login value to set.
     * @return the AdministratorProperties object itself.
     */
    public AdministratorProperties withLogin(String login) {
        this.login = login;
        return this;
    }

    /**
     * Get the sid property: SID (object ID) of the server administrator.
     *
     * @return the sid value.
     */
    public String sid() {
        return this.sid;
    }

    /**
     * Set the sid property: SID (object ID) of the server administrator.
     *
     * @param sid the sid value to set.
     * @return the AdministratorProperties object itself.
     */
    public AdministratorProperties withSid(String sid) {
        this.sid = sid;
        return this;
    }

    /**
     * Get the tenantId property: Tenant ID of the administrator.
     *
     * @return the tenantId value.
     */
    public String tenantId() {
        return this.tenantId;
    }

    /**
     * Set the tenantId property: Tenant ID of the administrator.
     *
     * @param tenantId the tenantId value to set.
     * @return the AdministratorProperties object itself.
     */
    public AdministratorProperties withTenantId(String tenantId) {
        this.tenantId = tenantId;
        return this;
    }

    /**
     * Get the identityResourceId property: The resource id of the identity used for AAD Authentication.
     *
     * @return the identityResourceId value.
     */
    public String identityResourceId() {
        return this.identityResourceId;
    }

    /**
     * Set the identityResourceId property: The resource id of the identity used for AAD Authentication.
     *
     * @param identityResourceId the identityResourceId value to set.
     * @return the AdministratorProperties object itself.
     */
    public AdministratorProperties withIdentityResourceId(String identityResourceId) {
        this.identityResourceId = identityResourceId;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
