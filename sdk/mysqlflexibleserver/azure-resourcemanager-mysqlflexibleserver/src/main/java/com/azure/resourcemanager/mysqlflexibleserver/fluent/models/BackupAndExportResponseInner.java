// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.core.management.exception.ManagementError;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.mysqlflexibleserver.models.OperationStatus;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * Represents BackupAndExportAPI Response.
 */
@Immutable
public final class BackupAndExportResponseInner extends ProxyResource {
    /*
     * The resource-specific properties for this resource.
     */
    private BackupAndExportResponseProperties innerProperties;

    /*
     * The error object.
     */
    private ManagementError error;

    /*
     * The name of the backup and export response.
     */
    private String name;

    /*
     * The operation status
     */
    private OperationStatus status;

    /*
     * Start time
     */
    private OffsetDateTime startTime;

    /*
     * End time
     */
    private OffsetDateTime endTime;

    /*
     * Operation progress (0-100).
     */
    private Double percentComplete;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    private SystemData systemData;

    /*
     * The type of the resource.
     */
    private String type;

    /*
     * Fully qualified resource Id for the resource.
     */
    private String id;

    /**
     * Creates an instance of BackupAndExportResponseInner class.
     */
    private BackupAndExportResponseInner() {
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     * 
     * @return the innerProperties value.
     */
    private BackupAndExportResponseProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the error property: The error object.
     * 
     * @return the error value.
     */
    public ManagementError error() {
        return this.error;
    }

    /**
     * Get the name property: The name of the backup and export response.
     * 
     * @return the name value.
     */
    @Override
    public String name() {
        return this.name;
    }

    /**
     * Get the status property: The operation status.
     * 
     * @return the status value.
     */
    public OperationStatus status() {
        return this.status;
    }

    /**
     * Get the startTime property: Start time.
     * 
     * @return the startTime value.
     */
    public OffsetDateTime startTime() {
        return this.startTime;
    }

    /**
     * Get the endTime property: End time.
     * 
     * @return the endTime value.
     */
    public OffsetDateTime endTime() {
        return this.endTime;
    }

    /**
     * Get the percentComplete property: Operation progress (0-100).
     * 
     * @return the percentComplete value.
     */
    public Double percentComplete() {
        return this.percentComplete;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the type property: The type of the resource.
     * 
     * @return the type value.
     */
    @Override
    public String type() {
        return this.type;
    }

    /**
     * Get the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    @Override
    public String id() {
        return this.id;
    }

    /**
     * Get the datasourceSizeInBytes property: Size of datasource in bytes.
     * 
     * @return the datasourceSizeInBytes value.
     */
    public Long datasourceSizeInBytes() {
        return this.innerProperties() == null ? null : this.innerProperties().datasourceSizeInBytes();
    }

    /**
     * Get the dataTransferredInBytes property: Data transferred in bytes.
     * 
     * @return the dataTransferredInBytes value.
     */
    public Long dataTransferredInBytes() {
        return this.innerProperties() == null ? null : this.innerProperties().dataTransferredInBytes();
    }

    /**
     * Get the backupMetadata property: Metadata related to backup to be stored for restoring resource in key-value
     * pairs.
     * 
     * @return the backupMetadata value.
     */
    public String backupMetadata() {
        return this.innerProperties() == null ? null : this.innerProperties().backupMetadata();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.innerProperties);
        jsonWriter.writeJsonField("error", this.error);
        jsonWriter.writeStringField("status", this.status == null ? null : this.status.toString());
        jsonWriter.writeStringField("startTime",
            this.startTime == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.startTime));
        jsonWriter.writeStringField("endTime",
            this.endTime == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.endTime));
        jsonWriter.writeNumberField("percentComplete", this.percentComplete);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BackupAndExportResponseInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of BackupAndExportResponseInner if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the BackupAndExportResponseInner.
     */
    public static BackupAndExportResponseInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BackupAndExportResponseInner deserializedBackupAndExportResponseInner = new BackupAndExportResponseInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedBackupAndExportResponseInner.id = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedBackupAndExportResponseInner.type = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedBackupAndExportResponseInner.name = reader.getString();
                } else if ("properties".equals(fieldName)) {
                    deserializedBackupAndExportResponseInner.innerProperties
                        = BackupAndExportResponseProperties.fromJson(reader);
                } else if ("error".equals(fieldName)) {
                    deserializedBackupAndExportResponseInner.error = ManagementError.fromJson(reader);
                } else if ("status".equals(fieldName)) {
                    deserializedBackupAndExportResponseInner.status = OperationStatus.fromString(reader.getString());
                } else if ("startTime".equals(fieldName)) {
                    deserializedBackupAndExportResponseInner.startTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("endTime".equals(fieldName)) {
                    deserializedBackupAndExportResponseInner.endTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("percentComplete".equals(fieldName)) {
                    deserializedBackupAndExportResponseInner.percentComplete
                        = reader.getNullable(JsonReader::getDouble);
                } else if ("systemData".equals(fieldName)) {
                    deserializedBackupAndExportResponseInner.systemData = SystemData.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedBackupAndExportResponseInner;
        });
    }
}
