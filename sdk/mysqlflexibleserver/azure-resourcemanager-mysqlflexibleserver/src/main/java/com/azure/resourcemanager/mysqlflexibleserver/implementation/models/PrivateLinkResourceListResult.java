// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.implementation.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.mysqlflexibleserver.fluent.models.PrivateLinkResourceInner;
import java.io.IOException;
import java.util.List;

/**
 * A list of private link resources for versions before v6.
 * 
 * This model represents the standard `PrivateLinkResourceListResult` envelope for versions v3, v4, and v5. It has been
 * deprecated for v6 and beyond.
 * 
 * Note: This is only intended for use with versions before v6. Do not use this if you are already on
 * CommonTypes.Version.v6 or beyond.
 * 
 * If you are migrating to v6 or above, use `PrivateLinkResourceListResult` directly.
 */
@Immutable
public final class PrivateLinkResourceListResult implements JsonSerializable<PrivateLinkResourceListResult> {
    /*
     * Array of private link resources
     */
    private List<PrivateLinkResourceInner> value;

    /**
     * Creates an instance of PrivateLinkResourceListResult class.
     */
    private PrivateLinkResourceListResult() {
    }

    /**
     * Get the value property: Array of private link resources.
     * 
     * @return the value value.
     */
    public List<PrivateLinkResourceInner> value() {
        return this.value;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("value", this.value, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PrivateLinkResourceListResult from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of PrivateLinkResourceListResult if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the PrivateLinkResourceListResult.
     */
    public static PrivateLinkResourceListResult fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PrivateLinkResourceListResult deserializedPrivateLinkResourceListResult
                = new PrivateLinkResourceListResult();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("value".equals(fieldName)) {
                    List<PrivateLinkResourceInner> value
                        = reader.readArray(reader1 -> PrivateLinkResourceInner.fromJson(reader1));
                    deserializedPrivateLinkResourceListResult.value = value;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPrivateLinkResourceListResult;
        });
    }
}
