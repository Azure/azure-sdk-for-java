// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * ImportFromStorage Response Properties.
 */
@Fluent
public final class ImportFromStorageResponseType extends OperationProgressResponseType {
    /*
     * Identifies the type of source operation
     */
    private ObjectType objectType = ObjectType.IMPORT_FROM_STORAGE_RESPONSE;

    /*
     * The estimated time of operation completion.
     */
    private OffsetDateTime estimatedCompletionTime;

    /**
     * Creates an instance of ImportFromStorageResponseType class.
     */
    public ImportFromStorageResponseType() {
    }

    /**
     * Get the objectType property: Identifies the type of source operation.
     * 
     * @return the objectType value.
     */
    @Override
    public ObjectType objectType() {
        return this.objectType;
    }

    /**
     * Get the estimatedCompletionTime property: The estimated time of operation completion.
     * 
     * @return the estimatedCompletionTime value.
     */
    public OffsetDateTime estimatedCompletionTime() {
        return this.estimatedCompletionTime;
    }

    /**
     * Set the estimatedCompletionTime property: The estimated time of operation completion.
     * 
     * @param estimatedCompletionTime the estimatedCompletionTime value to set.
     * @return the ImportFromStorageResponseType object itself.
     */
    public ImportFromStorageResponseType withEstimatedCompletionTime(OffsetDateTime estimatedCompletionTime) {
        this.estimatedCompletionTime = estimatedCompletionTime;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("objectType", this.objectType == null ? null : this.objectType.toString());
        jsonWriter.writeStringField("estimatedCompletionTime",
            this.estimatedCompletionTime == null
                ? null
                : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.estimatedCompletionTime));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ImportFromStorageResponseType from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ImportFromStorageResponseType if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ImportFromStorageResponseType.
     */
    public static ImportFromStorageResponseType fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ImportFromStorageResponseType deserializedImportFromStorageResponseType
                = new ImportFromStorageResponseType();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("objectType".equals(fieldName)) {
                    deserializedImportFromStorageResponseType.objectType = ObjectType.fromString(reader.getString());
                } else if ("estimatedCompletionTime".equals(fieldName)) {
                    deserializedImportFromStorageResponseType.estimatedCompletionTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedImportFromStorageResponseType;
        });
    }
}
