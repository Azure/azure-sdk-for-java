// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * High availability validation properties of a server.
 */
@Fluent
public final class HighAvailabilityValidationEstimationInner
    implements JsonSerializable<HighAvailabilityValidationEstimationInner> {
    /*
     * Estimated seconds of downtime for the deployment.
     */
    private Integer estimatedDowntime;

    /*
     * Scheduled Availability zone of the standby server.
     */
    private String scheduledStandbyAvailabilityZone;

    /*
     * Expected Availability zone of the standby server.
     */
    private String expectedStandbyAvailabilityZone;

    /**
     * Creates an instance of HighAvailabilityValidationEstimationInner class.
     */
    public HighAvailabilityValidationEstimationInner() {
    }

    /**
     * Get the estimatedDowntime property: Estimated seconds of downtime for the deployment.
     * 
     * @return the estimatedDowntime value.
     */
    public Integer estimatedDowntime() {
        return this.estimatedDowntime;
    }

    /**
     * Get the scheduledStandbyAvailabilityZone property: Scheduled Availability zone of the standby server.
     * 
     * @return the scheduledStandbyAvailabilityZone value.
     */
    public String scheduledStandbyAvailabilityZone() {
        return this.scheduledStandbyAvailabilityZone;
    }

    /**
     * Get the expectedStandbyAvailabilityZone property: Expected Availability zone of the standby server.
     * 
     * @return the expectedStandbyAvailabilityZone value.
     */
    public String expectedStandbyAvailabilityZone() {
        return this.expectedStandbyAvailabilityZone;
    }

    /**
     * Set the expectedStandbyAvailabilityZone property: Expected Availability zone of the standby server.
     * 
     * @param expectedStandbyAvailabilityZone the expectedStandbyAvailabilityZone value to set.
     * @return the HighAvailabilityValidationEstimationInner object itself.
     */
    public HighAvailabilityValidationEstimationInner
        withExpectedStandbyAvailabilityZone(String expectedStandbyAvailabilityZone) {
        this.expectedStandbyAvailabilityZone = expectedStandbyAvailabilityZone;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("expectedStandbyAvailabilityZone", this.expectedStandbyAvailabilityZone);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of HighAvailabilityValidationEstimationInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of HighAvailabilityValidationEstimationInner if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the HighAvailabilityValidationEstimationInner.
     */
    public static HighAvailabilityValidationEstimationInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            HighAvailabilityValidationEstimationInner deserializedHighAvailabilityValidationEstimationInner
                = new HighAvailabilityValidationEstimationInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("estimatedDowntime".equals(fieldName)) {
                    deserializedHighAvailabilityValidationEstimationInner.estimatedDowntime
                        = reader.getNullable(JsonReader::getInt);
                } else if ("scheduledStandbyAvailabilityZone".equals(fieldName)) {
                    deserializedHighAvailabilityValidationEstimationInner.scheduledStandbyAvailabilityZone
                        = reader.getString();
                } else if ("expectedStandbyAvailabilityZone".equals(fieldName)) {
                    deserializedHighAvailabilityValidationEstimationInner.expectedStandbyAvailabilityZone
                        = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedHighAvailabilityValidationEstimationInner;
        });
    }
}
