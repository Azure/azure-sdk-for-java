// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * ValidateBackup Response Properties.
 */
@Immutable
public final class ValidateBackupResponseProperties implements JsonSerializable<ValidateBackupResponseProperties> {
    /*
     * Estimated no of storage containers required for resource data to be backed up.
     */
    private Integer numberOfContainers;

    /**
     * Creates an instance of ValidateBackupResponseProperties class.
     */
    private ValidateBackupResponseProperties() {
    }

    /**
     * Get the numberOfContainers property: Estimated no of storage containers required for resource data to be backed
     * up.
     * 
     * @return the numberOfContainers value.
     */
    public Integer numberOfContainers() {
        return this.numberOfContainers;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("numberOfContainers", this.numberOfContainers);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ValidateBackupResponseProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ValidateBackupResponseProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ValidateBackupResponseProperties.
     */
    public static ValidateBackupResponseProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ValidateBackupResponseProperties deserializedValidateBackupResponseProperties
                = new ValidateBackupResponseProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("numberOfContainers".equals(fieldName)) {
                    deserializedValidateBackupResponseProperties.numberOfContainers
                        = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedValidateBackupResponseProperties;
        });
    }
}
