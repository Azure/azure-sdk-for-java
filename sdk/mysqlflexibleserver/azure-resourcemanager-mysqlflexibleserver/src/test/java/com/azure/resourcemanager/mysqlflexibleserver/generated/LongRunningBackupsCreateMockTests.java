// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mysqlflexibleserver.MySqlManager;
import com.azure.resourcemanager.mysqlflexibleserver.models.BackupType;
import com.azure.resourcemanager.mysqlflexibleserver.models.ServerBackupV2;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class LongRunningBackupsCreateMockTests {
    @Test
    public void testCreate() throws Exception {
        String responseStr
            = "{\"properties\":{\"backupNameV2\":\"yhgk\",\"backupType\":\"FULL\",\"completedTime\":\"2021-07-25T09:50:13Z\",\"source\":\"owzfttsttkt\",\"provisioningState\":\"Succeeded\"},\"id\":\"qactxtgzukxitmmq\",\"name\":\"gqqqxh\",\"type\":\"n\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MySqlManager manager = MySqlManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ServerBackupV2 response = manager.longRunningBackups()
            .define("smsks")
            .withExistingFlexibleServer("oqytibyowbblgy", "vutpthjoxo")
            .withBackupNameV2("mlqoljx")
            .withBackupType(BackupType.FULL)
            .withCompletedTime(OffsetDateTime.parse("2021-09-22T22:00:27Z"))
            .withSource("xsffgcviz")
            .create();

        Assertions.assertEquals("yhgk", response.backupNameV2());
        Assertions.assertEquals(BackupType.FULL, response.backupType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-25T09:50:13Z"), response.completedTime());
        Assertions.assertEquals("owzfttsttkt", response.source());
    }
}
