// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mysqlflexibleserver.fluent.models.BackupAndExportResponseInner;
import com.azure.resourcemanager.mysqlflexibleserver.models.OperationStatus;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class BackupAndExportResponseInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackupAndExportResponseInner model = BinaryData.fromString(
            "{\"status\":\"InProgress\",\"startTime\":\"2021-02-19T06:09:33Z\",\"endTime\":\"2021-01-02T14:29:41Z\",\"percentComplete\":74.66286399423657,\"properties\":{\"datasourceSizeInBytes\":3668022483866930425,\"dataTransferredInBytes\":4913566338802076766,\"backupMetadata\":\"akl\"},\"id\":\"hbcryffdfdosyge\",\"name\":\"paojakhmsbzjh\",\"type\":\"rzevdphlxaol\"}")
            .toObject(BackupAndExportResponseInner.class);
        Assertions.assertEquals(OperationStatus.IN_PROGRESS, model.status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-19T06:09:33Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-02T14:29:41Z"), model.endTime());
        Assertions.assertEquals(74.66286399423657D, model.percentComplete());
        Assertions.assertEquals(3668022483866930425L, model.datasourceSizeInBytes());
        Assertions.assertEquals(4913566338802076766L, model.dataTransferredInBytes());
        Assertions.assertEquals("akl", model.backupMetadata());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackupAndExportResponseInner model = new BackupAndExportResponseInner().withStatus(OperationStatus.IN_PROGRESS)
            .withStartTime(OffsetDateTime.parse("2021-02-19T06:09:33Z"))
            .withEndTime(OffsetDateTime.parse("2021-01-02T14:29:41Z"))
            .withPercentComplete(74.66286399423657D)
            .withDatasourceSizeInBytes(3668022483866930425L)
            .withDataTransferredInBytes(4913566338802076766L)
            .withBackupMetadata("akl");
        model = BinaryData.fromObject(model).toObject(BackupAndExportResponseInner.class);
        Assertions.assertEquals(OperationStatus.IN_PROGRESS, model.status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-19T06:09:33Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-02T14:29:41Z"), model.endTime());
        Assertions.assertEquals(74.66286399423657D, model.percentComplete());
        Assertions.assertEquals(3668022483866930425L, model.datasourceSizeInBytes());
        Assertions.assertEquals(4913566338802076766L, model.dataTransferredInBytes());
        Assertions.assertEquals("akl", model.backupMetadata());
    }
}
