// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mysqlflexibleserver.fluent.models.ConfigurationProperties;
import com.azure.resourcemanager.mysqlflexibleserver.models.ConfigurationSource;
import org.junit.jupiter.api.Assertions;

public final class ConfigurationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ConfigurationProperties model = BinaryData.fromString(
            "{\"value\":\"gou\",\"currentValue\":\"ndlik\",\"description\":\"qkgfgibma\",\"documentationLink\":\"akeqs\",\"defaultValue\":\"yb\",\"dataType\":\"qedqytbciqfoufl\",\"allowedValues\":\"nkzsmodmglou\",\"source\":\"system-default\",\"isReadOnly\":\"True\",\"isConfigPendingRestart\":\"False\",\"isDynamicConfig\":\"False\"}")
            .toObject(ConfigurationProperties.class);
        Assertions.assertEquals("gou", model.value());
        Assertions.assertEquals("ndlik", model.currentValue());
        Assertions.assertEquals(ConfigurationSource.SYSTEM_DEFAULT, model.source());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ConfigurationProperties model = new ConfigurationProperties().withValue("gou")
            .withCurrentValue("ndlik")
            .withSource(ConfigurationSource.SYSTEM_DEFAULT);
        model = BinaryData.fromObject(model).toObject(ConfigurationProperties.class);
        Assertions.assertEquals("gou", model.value());
        Assertions.assertEquals("ndlik", model.currentValue());
        Assertions.assertEquals(ConfigurationSource.SYSTEM_DEFAULT, model.source());
    }
}
