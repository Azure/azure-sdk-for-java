// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mysqlflexibleserver.fluent.models.ServerBackupV2Inner;
import com.azure.resourcemanager.mysqlflexibleserver.models.BackupType;
import com.azure.resourcemanager.mysqlflexibleserver.models.ServerBackupV2ListResult;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ServerBackupV2ListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServerBackupV2ListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"backupNameV2\":\"nmayhuybb\",\"backupType\":\"FULL\",\"completedTime\":\"2021-04-30T05:44:17Z\",\"source\":\"ooginuvamih\",\"provisioningState\":\"Creating\"},\"id\":\"arxzxtheot\",\"name\":\"si\",\"type\":\"yevc\"},{\"properties\":{\"backupNameV2\":\"ihnhun\",\"backupType\":\"FULL\",\"completedTime\":\"2021-09-21T17:58:39Z\",\"source\":\"nfygxgispemvtz\",\"provisioningState\":\"Canceled\"},\"id\":\"ubljofxqe\",\"name\":\"fjaeq\",\"type\":\"hqjbasvmsmj\"}],\"nextLink\":\"lngsntnbybkzgcwr\"}")
            .toObject(ServerBackupV2ListResult.class);
        Assertions.assertEquals("nmayhuybb", model.value().get(0).backupNameV2());
        Assertions.assertEquals(BackupType.FULL, model.value().get(0).backupType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-30T05:44:17Z"), model.value().get(0).completedTime());
        Assertions.assertEquals("ooginuvamih", model.value().get(0).source());
        Assertions.assertEquals("lngsntnbybkzgcwr", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServerBackupV2ListResult model = new ServerBackupV2ListResult().withValue(Arrays.asList(
            new ServerBackupV2Inner().withBackupNameV2("nmayhuybb")
                .withBackupType(BackupType.FULL)
                .withCompletedTime(OffsetDateTime.parse("2021-04-30T05:44:17Z"))
                .withSource("ooginuvamih"),
            new ServerBackupV2Inner().withBackupNameV2("ihnhun")
                .withBackupType(BackupType.FULL)
                .withCompletedTime(OffsetDateTime.parse("2021-09-21T17:58:39Z"))
                .withSource("nfygxgispemvtz")))
            .withNextLink("lngsntnbybkzgcwr");
        model = BinaryData.fromObject(model).toObject(ServerBackupV2ListResult.class);
        Assertions.assertEquals("nmayhuybb", model.value().get(0).backupNameV2());
        Assertions.assertEquals(BackupType.FULL, model.value().get(0).backupType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-30T05:44:17Z"), model.value().get(0).completedTime());
        Assertions.assertEquals("ooginuvamih", model.value().get(0).source());
        Assertions.assertEquals("lngsntnbybkzgcwr", model.nextLink());
    }
}
