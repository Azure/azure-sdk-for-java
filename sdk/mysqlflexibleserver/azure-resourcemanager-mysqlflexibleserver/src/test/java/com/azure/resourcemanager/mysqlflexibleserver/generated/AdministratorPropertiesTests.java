// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mysqlflexibleserver.fluent.models.AdministratorProperties;
import com.azure.resourcemanager.mysqlflexibleserver.models.AdministratorType;
import org.junit.jupiter.api.Assertions;

public final class AdministratorPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AdministratorProperties model = BinaryData.fromString(
            "{\"administratorType\":\"ActiveDirectory\",\"login\":\"xj\",\"sid\":\"r\",\"tenantId\":\"vcputegj\",\"identityResourceId\":\"mfdatscmdvpj\"}")
            .toObject(AdministratorProperties.class);
        Assertions.assertEquals(AdministratorType.ACTIVE_DIRECTORY, model.administratorType());
        Assertions.assertEquals("xj", model.login());
        Assertions.assertEquals("r", model.sid());
        Assertions.assertEquals("vcputegj", model.tenantId());
        Assertions.assertEquals("mfdatscmdvpj", model.identityResourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AdministratorProperties model
            = new AdministratorProperties().withAdministratorType(AdministratorType.ACTIVE_DIRECTORY)
                .withLogin("xj")
                .withSid("r")
                .withTenantId("vcputegj")
                .withIdentityResourceId("mfdatscmdvpj");
        model = BinaryData.fromObject(model).toObject(AdministratorProperties.class);
        Assertions.assertEquals(AdministratorType.ACTIVE_DIRECTORY, model.administratorType());
        Assertions.assertEquals("xj", model.login());
        Assertions.assertEquals("r", model.sid());
        Assertions.assertEquals("vcputegj", model.tenantId());
        Assertions.assertEquals("mfdatscmdvpj", model.identityResourceId());
    }
}
