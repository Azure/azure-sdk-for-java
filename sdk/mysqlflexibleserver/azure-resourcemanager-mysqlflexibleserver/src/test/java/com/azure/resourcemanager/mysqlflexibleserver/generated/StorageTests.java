// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mysqlflexibleserver.models.EnableStatusEnum;
import com.azure.resourcemanager.mysqlflexibleserver.models.Storage;
import com.azure.resourcemanager.mysqlflexibleserver.models.StorageRedundancyEnum;
import org.junit.jupiter.api.Assertions;

public final class StorageTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Storage model = BinaryData.fromString(
            "{\"storageSizeGB\":1700892403,\"iops\":968287955,\"autoGrow\":\"Enabled\",\"logOnDisk\":\"Disabled\",\"storageSku\":\"dsbdkvwrwjf\",\"autoIoScaling\":\"Enabled\",\"storageRedundancy\":\"LocalRedundancy\"}")
            .toObject(Storage.class);
        Assertions.assertEquals(1700892403, model.storageSizeGB());
        Assertions.assertEquals(968287955, model.iops());
        Assertions.assertEquals(EnableStatusEnum.ENABLED, model.autoGrow());
        Assertions.assertEquals(EnableStatusEnum.DISABLED, model.logOnDisk());
        Assertions.assertEquals(EnableStatusEnum.ENABLED, model.autoIoScaling());
        Assertions.assertEquals(StorageRedundancyEnum.LOCAL_REDUNDANCY, model.storageRedundancy());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Storage model = new Storage().withStorageSizeGB(1700892403)
            .withIops(968287955)
            .withAutoGrow(EnableStatusEnum.ENABLED)
            .withLogOnDisk(EnableStatusEnum.DISABLED)
            .withAutoIoScaling(EnableStatusEnum.ENABLED)
            .withStorageRedundancy(StorageRedundancyEnum.LOCAL_REDUNDANCY);
        model = BinaryData.fromObject(model).toObject(Storage.class);
        Assertions.assertEquals(1700892403, model.storageSizeGB());
        Assertions.assertEquals(968287955, model.iops());
        Assertions.assertEquals(EnableStatusEnum.ENABLED, model.autoGrow());
        Assertions.assertEquals(EnableStatusEnum.DISABLED, model.logOnDisk());
        Assertions.assertEquals(EnableStatusEnum.ENABLED, model.autoIoScaling());
        Assertions.assertEquals(StorageRedundancyEnum.LOCAL_REDUNDANCY, model.storageRedundancy());
    }
}
