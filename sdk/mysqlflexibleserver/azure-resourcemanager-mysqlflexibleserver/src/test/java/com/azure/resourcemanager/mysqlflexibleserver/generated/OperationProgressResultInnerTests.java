// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mysqlflexibleserver.fluent.models.OperationProgressResultInner;
import com.azure.resourcemanager.mysqlflexibleserver.models.OperationProgressResponseType;
import com.azure.resourcemanager.mysqlflexibleserver.models.OperationStatusResult;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OperationProgressResultInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationProgressResultInner model = BinaryData.fromString(
            "{\"properties\":{\"objectType\":\"OperationProgressResponseType\"},\"id\":\"iiojnal\",\"resourceId\":\"fk\",\"name\":\"vsexsowuelu\",\"status\":\"hhahhxvrhmzkwpjg\",\"percentComplete\":69.94035,\"startTime\":\"2021-02-08T16:54:53Z\",\"endTime\":\"2021-03-26T20:29:02Z\",\"operations\":[{\"id\":\"sxhqxujx\",\"resourceId\":\"ndxdigrjguufzdm\",\"name\":\"qtfihwhbotzinga\",\"status\":\"vppho\",\"percentComplete\":41.892742,\"startTime\":\"2021-10-18T15:07:25Z\",\"endTime\":\"2021-11-21T07:49:51Z\",\"operations\":[{\"id\":\"mvdk\",\"resourceId\":\"ynwcvtbv\",\"name\":\"yhmtnvyqiat\",\"status\":\"zwpcnpwzcjaesg\",\"percentComplete\":56.94007,\"startTime\":\"2021-07-14T16:40:38Z\",\"endTime\":\"2021-03-29T04:52:48Z\",\"operations\":[{\"status\":\"uq\"}]},{\"id\":\"ygz\",\"resourceId\":\"dnkfx\",\"name\":\"emdwzrmuhapfc\",\"status\":\"dpsqx\",\"percentComplete\":52.910114,\"startTime\":\"2021-06-15T01:28:22Z\",\"endTime\":\"2021-04-21T12:11:06Z\",\"operations\":[{\"status\":\"gc\"},{\"status\":\"elvezrypq\"},{\"status\":\"mfe\"},{\"status\":\"kerqwkyh\"}]},{\"id\":\"opgxedkowepb\",\"resourceId\":\"cr\",\"name\":\"bwccsnjvcdwxlpqe\",\"status\":\"ftnkhtj\",\"percentComplete\":1.9628167,\"startTime\":\"2021-09-20T22:34:13Z\",\"endTime\":\"2021-09-11T08:24:22Z\",\"operations\":[{\"status\":\"tmtdhtmdvypgik\"},{\"status\":\"gszywk\"},{\"status\":\"irryuzhlh\"}]},{\"id\":\"qrvqq\",\"resourceId\":\"t\",\"name\":\"nrvgoupmfiibfgg\",\"status\":\"ioolvrwxkvtkkgll\",\"percentComplete\":57.97699,\"startTime\":\"2021-10-01T00:49:04Z\",\"endTime\":\"2021-07-24T13:52:35Z\",\"operations\":[{\"status\":\"vblm\"},{\"status\":\"vkzuhbxvvyhgso\"},{\"status\":\"byrqufeg\"}]}]}]}")
            .toObject(OperationProgressResultInner.class);
        Assertions.assertEquals("iiojnal", model.id());
        Assertions.assertEquals("vsexsowuelu", model.name());
        Assertions.assertEquals("hhahhxvrhmzkwpjg", model.status());
        Assertions.assertEquals(69.94035F, model.percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-08T16:54:53Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-26T20:29:02Z"), model.endTime());
        Assertions.assertEquals("sxhqxujx", model.operations().get(0).id());
        Assertions.assertEquals("qtfihwhbotzinga", model.operations().get(0).name());
        Assertions.assertEquals("vppho", model.operations().get(0).status());
        Assertions.assertEquals(41.892742F, model.operations().get(0).percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-18T15:07:25Z"), model.operations().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-21T07:49:51Z"), model.operations().get(0).endTime());
        Assertions.assertEquals("mvdk", model.operations().get(0).operations().get(0).id());
        Assertions.assertEquals("yhmtnvyqiat", model.operations().get(0).operations().get(0).name());
        Assertions.assertEquals("zwpcnpwzcjaesg", model.operations().get(0).operations().get(0).status());
        Assertions.assertEquals(56.94007F, model.operations().get(0).operations().get(0).percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-14T16:40:38Z"),
            model.operations().get(0).operations().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-29T04:52:48Z"),
            model.operations().get(0).operations().get(0).endTime());
        Assertions.assertEquals("uq", model.operations().get(0).operations().get(0).operations().get(0).status());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationProgressResultInner model = new OperationProgressResultInner().withId("iiojnal")
            .withName("vsexsowuelu")
            .withStatus("hhahhxvrhmzkwpjg")
            .withPercentComplete(69.94035F)
            .withStartTime(OffsetDateTime.parse("2021-02-08T16:54:53Z"))
            .withEndTime(OffsetDateTime.parse("2021-03-26T20:29:02Z"))
            .withOperations(Arrays.asList(new OperationStatusResult().withId("sxhqxujx")
                .withName("qtfihwhbotzinga")
                .withStatus("vppho")
                .withPercentComplete(41.892742F)
                .withStartTime(OffsetDateTime.parse("2021-10-18T15:07:25Z"))
                .withEndTime(OffsetDateTime.parse("2021-11-21T07:49:51Z"))
                .withOperations(Arrays.asList(
                    new OperationStatusResult().withId("mvdk")
                        .withName("yhmtnvyqiat")
                        .withStatus("zwpcnpwzcjaesg")
                        .withPercentComplete(56.94007F)
                        .withStartTime(OffsetDateTime.parse("2021-07-14T16:40:38Z"))
                        .withEndTime(OffsetDateTime.parse("2021-03-29T04:52:48Z"))
                        .withOperations(Arrays.asList(new OperationStatusResult().withStatus("uq"))),
                    new OperationStatusResult().withId("ygz")
                        .withName("emdwzrmuhapfc")
                        .withStatus("dpsqx")
                        .withPercentComplete(52.910114F)
                        .withStartTime(OffsetDateTime.parse("2021-06-15T01:28:22Z"))
                        .withEndTime(OffsetDateTime.parse("2021-04-21T12:11:06Z"))
                        .withOperations(Arrays.asList(new OperationStatusResult().withStatus("gc"),
                            new OperationStatusResult().withStatus("elvezrypq"),
                            new OperationStatusResult().withStatus("mfe"),
                            new OperationStatusResult().withStatus("kerqwkyh"))),
                    new OperationStatusResult().withId("opgxedkowepb")
                        .withName("bwccsnjvcdwxlpqe")
                        .withStatus("ftnkhtj")
                        .withPercentComplete(1.9628167F)
                        .withStartTime(OffsetDateTime.parse("2021-09-20T22:34:13Z"))
                        .withEndTime(OffsetDateTime.parse("2021-09-11T08:24:22Z"))
                        .withOperations(Arrays.asList(new OperationStatusResult().withStatus("tmtdhtmdvypgik"),
                            new OperationStatusResult().withStatus("gszywk"),
                            new OperationStatusResult().withStatus("irryuzhlh"))),
                    new OperationStatusResult().withId("qrvqq")
                        .withName("nrvgoupmfiibfgg")
                        .withStatus("ioolvrwxkvtkkgll")
                        .withPercentComplete(57.97699F)
                        .withStartTime(OffsetDateTime.parse("2021-10-01T00:49:04Z"))
                        .withEndTime(OffsetDateTime.parse("2021-07-24T13:52:35Z"))
                        .withOperations(Arrays.asList(new OperationStatusResult().withStatus("vblm"),
                            new OperationStatusResult().withStatus("vkzuhbxvvyhgso"),
                            new OperationStatusResult().withStatus("byrqufeg")))))))
            .withProperties(new OperationProgressResponseType());
        model = BinaryData.fromObject(model).toObject(OperationProgressResultInner.class);
        Assertions.assertEquals("iiojnal", model.id());
        Assertions.assertEquals("vsexsowuelu", model.name());
        Assertions.assertEquals("hhahhxvrhmzkwpjg", model.status());
        Assertions.assertEquals(69.94035F, model.percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-08T16:54:53Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-26T20:29:02Z"), model.endTime());
        Assertions.assertEquals("sxhqxujx", model.operations().get(0).id());
        Assertions.assertEquals("qtfihwhbotzinga", model.operations().get(0).name());
        Assertions.assertEquals("vppho", model.operations().get(0).status());
        Assertions.assertEquals(41.892742F, model.operations().get(0).percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-18T15:07:25Z"), model.operations().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-21T07:49:51Z"), model.operations().get(0).endTime());
        Assertions.assertEquals("mvdk", model.operations().get(0).operations().get(0).id());
        Assertions.assertEquals("yhmtnvyqiat", model.operations().get(0).operations().get(0).name());
        Assertions.assertEquals("zwpcnpwzcjaesg", model.operations().get(0).operations().get(0).status());
        Assertions.assertEquals(56.94007F, model.operations().get(0).operations().get(0).percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-14T16:40:38Z"),
            model.operations().get(0).operations().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-29T04:52:48Z"),
            model.operations().get(0).operations().get(0).endTime());
        Assertions.assertEquals("uq", model.operations().get(0).operations().get(0).operations().get(0).status());
    }
}
