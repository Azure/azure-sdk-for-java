// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mysqlflexibleserver.MySqlManager;
import com.azure.resourcemanager.mysqlflexibleserver.models.BackupType;
import com.azure.resourcemanager.mysqlflexibleserver.models.ServerBackupV2;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class LongRunningBackupsOperationsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"backupNameV2\":\"opidkqqfkuv\",\"backupType\":\"FULL\",\"completedTime\":\"2021-01-30T21:59:46Z\",\"source\":\"ligovibrxkpm\",\"provisioningState\":\"Succeeded\"},\"id\":\"uruocbgo\",\"name\":\"rb\",\"type\":\"eoybfhjxakvvjgs\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MySqlManager manager = MySqlManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ServerBackupV2 response = manager.longRunningBackupsOperations()
            .getWithResponse("rxcpjuisavo", "qdzfvazivjlfrqtt", "ajlkatnw", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("opidkqqfkuv", response.backupNameV2());
        Assertions.assertEquals(BackupType.FULL, response.backupType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-30T21:59:46Z"), response.completedTime());
        Assertions.assertEquals("ligovibrxkpm", response.source());
    }
}
