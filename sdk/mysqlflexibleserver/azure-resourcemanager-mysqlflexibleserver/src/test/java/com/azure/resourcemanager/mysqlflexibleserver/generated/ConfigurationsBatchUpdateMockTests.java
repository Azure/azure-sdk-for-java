// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mysqlflexibleserver.MySqlManager;
import com.azure.resourcemanager.mysqlflexibleserver.models.ConfigurationForBatchUpdate;
import com.azure.resourcemanager.mysqlflexibleserver.models.ConfigurationListForBatchUpdate;
import com.azure.resourcemanager.mysqlflexibleserver.models.ConfigurationListResult;
import com.azure.resourcemanager.mysqlflexibleserver.models.ConfigurationSource;
import com.azure.resourcemanager.mysqlflexibleserver.models.ResetAllToDefault;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ConfigurationsBatchUpdateMockTests {
    @Test
    public void testBatchUpdate() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"value\":\"lx\",\"currentValue\":\"ilozapeewchpxlk\",\"description\":\"kuziycsle\",\"documentationLink\":\"f\",\"defaultValue\":\"tcktyhjtqedcgzu\",\"dataType\":\"mmrqz\",\"allowedValues\":\"rjvpglydzgkrvqee\",\"source\":\"system-default\",\"isReadOnly\":\"True\",\"isConfigPendingRestart\":\"False\",\"isDynamicConfig\":\"True\"},\"id\":\"wytpzdmovz\",\"name\":\"fvaawzqa\",\"type\":\"f\"},{\"properties\":{\"value\":\"ur\",\"currentValue\":\"laecxndticok\",\"description\":\"zmlqtmldgxo\",\"documentationLink\":\"irclnpk\",\"defaultValue\":\"ayzri\",\"dataType\":\"hya\",\"allowedValues\":\"vjlboxqvk\",\"source\":\"system-default\",\"isReadOnly\":\"True\",\"isConfigPendingRestart\":\"True\",\"isDynamicConfig\":\"False\"},\"id\":\"hdwdi\",\"name\":\"umbnraauzzp\",\"type\":\"jazysdzhezwwvaiq\"}],\"nextLink\":\"vv\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MySqlManager manager = MySqlManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ConfigurationListResult response
            = manager.configurations()
                .batchUpdate("cib", "fmo", new ConfigurationListForBatchUpdate().withValue(Arrays.asList(
                    new ConfigurationForBatchUpdate().withName("kjpvdwxf").withValue("ivwzjbhyzs").withSource("rkambt"),
                    new ConfigurationForBatchUpdate().withName("egv").withValue("uqeqv").withSource("spastjbkkdmf")))
                    .withResetAllToDefault(ResetAllToDefault.TRUE), com.azure.core.util.Context.NONE);

        Assertions.assertEquals("lx", response.value().get(0).value());
        Assertions.assertEquals("ilozapeewchpxlk", response.value().get(0).currentValue());
        Assertions.assertEquals(ConfigurationSource.SYSTEM_DEFAULT, response.value().get(0).source());
        Assertions.assertEquals("vv", response.nextLink());
    }
}
