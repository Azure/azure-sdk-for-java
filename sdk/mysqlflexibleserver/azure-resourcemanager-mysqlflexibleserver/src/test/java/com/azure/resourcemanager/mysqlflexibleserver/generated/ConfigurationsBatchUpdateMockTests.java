// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mysqlflexibleserver.MySqlManager;
import com.azure.resourcemanager.mysqlflexibleserver.models.ConfigurationForBatchUpdate;
import com.azure.resourcemanager.mysqlflexibleserver.models.ConfigurationListForBatchUpdate;
import com.azure.resourcemanager.mysqlflexibleserver.models.ConfigurationListResult;
import com.azure.resourcemanager.mysqlflexibleserver.models.ConfigurationSource;
import com.azure.resourcemanager.mysqlflexibleserver.models.ResetAllToDefault;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ConfigurationsBatchUpdateMockTests {
    @Test
    public void testBatchUpdate() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"value\":\"jbdhqxvc\",\"currentValue\":\"frpdsofbshrns\",\"description\":\"uswdv\",\"documentationLink\":\"ybycnunvj\",\"defaultValue\":\"tkfa\",\"dataType\":\"opqgikyzirtxdyux\",\"allowedValues\":\"jntpsewgioilqu\",\"source\":\"system-default\",\"isReadOnly\":\"False\",\"isConfigPendingRestart\":\"True\",\"isDynamicConfig\":\"False\"},\"id\":\"ox\",\"name\":\"rgguf\",\"type\":\"yaomtb\"}],\"nextLink\":\"havgrvk\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MySqlManager manager = MySqlManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ConfigurationListResult response = manager.configurations()
            .batchUpdate("fdlwg", "ytsbwtovv", new ConfigurationListForBatchUpdate()
                .withValue(Arrays.asList(
                    new ConfigurationForBatchUpdate().withName("inqfiufxqknpirgn")
                        .withValue("twqmsniffcdmqnr")
                        .withSource("lpijnkrxfrd"),
                    new ConfigurationForBatchUpdate().withName("c").withValue("izzronasxiftozqy").withSource("f"),
                    new ConfigurationForBatchUpdate().withName("esgogc").withValue("nnxk").withSource("gnyhmossxkkg")))
                .withResetAllToDefault(ResetAllToDefault.FALSE), com.azure.core.util.Context.NONE);

        Assertions.assertEquals("jbdhqxvc", response.value().get(0).value());
        Assertions.assertEquals("frpdsofbshrns", response.value().get(0).currentValue());
        Assertions.assertEquals(ConfigurationSource.SYSTEM_DEFAULT, response.value().get(0).source());
        Assertions.assertEquals("havgrvk", response.nextLink());
    }
}
