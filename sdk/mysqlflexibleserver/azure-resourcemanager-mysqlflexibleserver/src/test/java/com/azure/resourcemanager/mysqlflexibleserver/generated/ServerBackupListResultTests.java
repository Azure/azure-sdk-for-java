// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mysqlflexibleserver.fluent.models.ServerBackupInner;
import com.azure.resourcemanager.mysqlflexibleserver.models.ServerBackupListResult;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ServerBackupListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServerBackupListResult model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"backupType\":\"ufpo\",\"completedTime\":\"2021-04-30T22:33:15Z\",\"source\":\"zhwlrxy\"},\"id\":\"soqijg\",\"name\":\"dmbpazlobcufpdz\",\"type\":\"rbt\"},{\"properties\":{\"backupType\":\"jnqglhqgnu\",\"completedTime\":\"2021-07-08T13:35:12Z\",\"source\":\"jywif\"},\"id\":\"esaagdfm\",\"name\":\"lzl\",\"type\":\"j\"}],\"nextLink\":\"ifkwmrvktsizntoc\"}")
                .toObject(ServerBackupListResult.class);
        Assertions.assertEquals("ufpo", model.value().get(0).backupType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-30T22:33:15Z"), model.value().get(0).completedTime());
        Assertions.assertEquals("zhwlrxy", model.value().get(0).source());
        Assertions.assertEquals("ifkwmrvktsizntoc", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServerBackupListResult model =
            new ServerBackupListResult()
                .withValue(
                    Arrays
                        .asList(
                            new ServerBackupInner()
                                .withBackupType("ufpo")
                                .withCompletedTime(OffsetDateTime.parse("2021-04-30T22:33:15Z"))
                                .withSource("zhwlrxy"),
                            new ServerBackupInner()
                                .withBackupType("jnqglhqgnu")
                                .withCompletedTime(OffsetDateTime.parse("2021-07-08T13:35:12Z"))
                                .withSource("jywif")))
                .withNextLink("ifkwmrvktsizntoc");
        model = BinaryData.fromObject(model).toObject(ServerBackupListResult.class);
        Assertions.assertEquals("ufpo", model.value().get(0).backupType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-30T22:33:15Z"), model.value().get(0).completedTime());
        Assertions.assertEquals("zhwlrxy", model.value().get(0).source());
        Assertions.assertEquals("ifkwmrvktsizntoc", model.nextLink());
    }
}
