// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mysqlflexibleserver.fluent.models.ServerBackupV2Inner;
import com.azure.resourcemanager.mysqlflexibleserver.models.BackupType;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class ServerBackupV2InnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServerBackupV2Inner model = BinaryData.fromString(
            "{\"properties\":{\"backupNameV2\":\"f\",\"backupType\":\"FULL\",\"completedTime\":\"2021-07-27T02:51:06Z\",\"source\":\"xxjtfe\",\"provisioningState\":\"Canceled\"},\"id\":\"fziton\",\"name\":\"eqfpj\",\"type\":\"jlxofpdvhpfxxyp\"}")
            .toObject(ServerBackupV2Inner.class);
        Assertions.assertEquals("f", model.backupNameV2());
        Assertions.assertEquals(BackupType.FULL, model.backupType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-27T02:51:06Z"), model.completedTime());
        Assertions.assertEquals("xxjtfe", model.source());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServerBackupV2Inner model = new ServerBackupV2Inner().withBackupNameV2("f")
            .withBackupType(BackupType.FULL)
            .withCompletedTime(OffsetDateTime.parse("2021-07-27T02:51:06Z"))
            .withSource("xxjtfe");
        model = BinaryData.fromObject(model).toObject(ServerBackupV2Inner.class);
        Assertions.assertEquals("f", model.backupNameV2());
        Assertions.assertEquals(BackupType.FULL, model.backupType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-27T02:51:06Z"), model.completedTime());
        Assertions.assertEquals("xxjtfe", model.source());
    }
}
