// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mysqlflexibleserver.fluent.models.MaintenanceInner;
import com.azure.resourcemanager.mysqlflexibleserver.models.MaintenanceListResult;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MaintenanceListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MaintenanceListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"maintenanceType\":\"RoutineMaintenance\",\"maintenanceState\":\"Canceled\",\"maintenanceStartTime\":\"2021-02-05T08:12:45Z\",\"maintenanceEndTime\":\"2021-09-11T06:06:10Z\",\"maintenanceExecutionStartTime\":\"2021-06-22T14:25:15Z\",\"maintenanceExecutionEndTime\":\"2021-05-05T23:09:26Z\",\"maintenanceAvailableScheduleMinTime\":\"2021-04-18T12:38:21Z\",\"maintenanceAvailableScheduleMaxTime\":\"2021-07-14T22:05:57Z\",\"maintenanceTitle\":\"wgioilqukry\",\"maintenanceDescription\":\"tqmieox\",\"provisioningState\":\"Deleting\"},\"id\":\"ufhyaomtbgh\",\"name\":\"avgrvkffovjz\",\"type\":\"pjbi\"},{\"properties\":{\"maintenanceType\":\"MinorVersionUpgrade\",\"maintenanceState\":\"Completed\",\"maintenanceStartTime\":\"2021-07-15T10:24:31Z\",\"maintenanceEndTime\":\"2021-08-27T14:48:10Z\",\"maintenanceExecutionStartTime\":\"2021-05-24T08:40:21Z\",\"maintenanceExecutionEndTime\":\"2021-09-05T08:14:57Z\",\"maintenanceAvailableScheduleMinTime\":\"2021-01-01T04:04:42Z\",\"maintenanceAvailableScheduleMaxTime\":\"2021-05-30T07:45:57Z\",\"maintenanceTitle\":\"nbkfezzxscy\",\"maintenanceDescription\":\"zdgiruj\",\"provisioningState\":\"Deleting\"},\"id\":\"mvzzbtdcqvp\",\"name\":\"iyujviylwdshfs\",\"type\":\"n\"},{\"properties\":{\"maintenanceType\":\"RoutineMaintenance\",\"maintenanceState\":\"InPreparation\",\"maintenanceStartTime\":\"2021-02-17T11:04:17Z\",\"maintenanceEndTime\":\"2021-04-26T20:36:36Z\",\"maintenanceExecutionStartTime\":\"2020-12-31T10:27:06Z\",\"maintenanceExecutionEndTime\":\"2020-12-23T00:32:06Z\",\"maintenanceAvailableScheduleMinTime\":\"2021-06-20T15:38:21Z\",\"maintenanceAvailableScheduleMaxTime\":\"2021-04-12T13:12:30Z\",\"maintenanceTitle\":\"cotmr\",\"maintenanceDescription\":\"irctymoxoftpipiw\",\"provisioningState\":\"Succeeded\"},\"id\":\"hxacpqjlihhyu\",\"name\":\"pskasdvlmfwdg\",\"type\":\"x\"},{\"properties\":{\"maintenanceType\":\"MinorVersionUpgrade\",\"maintenanceState\":\"Completed\",\"maintenanceStartTime\":\"2021-04-02T21:01:47Z\",\"maintenanceEndTime\":\"2021-12-09T14:22:52Z\",\"maintenanceExecutionStartTime\":\"2021-07-04T20:55:26Z\",\"maintenanceExecutionEndTime\":\"2021-11-11T05:22:52Z\",\"maintenanceAvailableScheduleMinTime\":\"2021-11-06T01:04:21Z\",\"maintenanceAvailableScheduleMaxTime\":\"2021-02-07T18:03:01Z\",\"maintenanceTitle\":\"i\",\"maintenanceDescription\":\"nhn\",\"provisioningState\":\"Deleting\"},\"id\":\"fq\",\"name\":\"zgxmr\",\"type\":\"ublwpcesutrg\"}],\"nextLink\":\"pauutpw\"}")
            .toObject(MaintenanceListResult.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-05T08:12:45Z"),
            model.value().get(0).maintenanceStartTime());
        Assertions.assertEquals("pauutpw", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MaintenanceListResult model = new MaintenanceListResult()
            .withValue(Arrays.asList(
                new MaintenanceInner().withMaintenanceStartTime(OffsetDateTime.parse("2021-02-05T08:12:45Z")),
                new MaintenanceInner().withMaintenanceStartTime(OffsetDateTime.parse("2021-07-15T10:24:31Z")),
                new MaintenanceInner().withMaintenanceStartTime(OffsetDateTime.parse("2021-02-17T11:04:17Z")),
                new MaintenanceInner().withMaintenanceStartTime(OffsetDateTime.parse("2021-04-02T21:01:47Z"))))
            .withNextLink("pauutpw");
        model = BinaryData.fromObject(model).toObject(MaintenanceListResult.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-05T08:12:45Z"),
            model.value().get(0).maintenanceStartTime());
        Assertions.assertEquals("pauutpw", model.nextLink());
    }
}
