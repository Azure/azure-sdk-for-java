// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mysqlflexibleserver.fluent.models.LogFileInner;
import com.azure.resourcemanager.mysqlflexibleserver.models.LogFileListResult;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class LogFileListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LogFileListResult model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"sizeInKB\":5974596582216601991,\"createdTime\":\"2021-09-17T10:09:05Z\",\"type\":\"cffcyddglmj\",\"lastModifiedTime\":\"2021-01-08T20:29:39Z\",\"url\":\"kw\"},\"id\":\"eicxmqciwqvhkhi\",\"name\":\"uigdtopbobjog\",\"type\":\"m\"},{\"properties\":{\"sizeInKB\":152177309895982741,\"createdTime\":\"2021-08-13T08:15:28Z\",\"type\":\"rzayv\",\"lastModifiedTime\":\"2021-03-05T03:10:15Z\",\"url\":\"vdfgiotk\"},\"id\":\"utqxlngx\",\"name\":\"efgugnxk\",\"type\":\"xdqmidtthzrvqdra\"}],\"nextLink\":\"jybige\"}")
                .toObject(LogFileListResult.class);
        Assertions.assertEquals(5974596582216601991L, model.value().get(0).sizeInKB());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-17T10:09:05Z"), model.value().get(0).createdTime());
        Assertions.assertEquals("cffcyddglmj", model.value().get(0).typePropertiesType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-08T20:29:39Z"), model.value().get(0).lastModifiedTime());
        Assertions.assertEquals("kw", model.value().get(0).url());
        Assertions.assertEquals("jybige", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LogFileListResult model =
            new LogFileListResult()
                .withValue(
                    Arrays
                        .asList(
                            new LogFileInner()
                                .withSizeInKB(5974596582216601991L)
                                .withCreatedTime(OffsetDateTime.parse("2021-09-17T10:09:05Z"))
                                .withTypePropertiesType("cffcyddglmj")
                                .withLastModifiedTime(OffsetDateTime.parse("2021-01-08T20:29:39Z"))
                                .withUrl("kw"),
                            new LogFileInner()
                                .withSizeInKB(152177309895982741L)
                                .withCreatedTime(OffsetDateTime.parse("2021-08-13T08:15:28Z"))
                                .withTypePropertiesType("rzayv")
                                .withLastModifiedTime(OffsetDateTime.parse("2021-03-05T03:10:15Z"))
                                .withUrl("vdfgiotk")))
                .withNextLink("jybige");
        model = BinaryData.fromObject(model).toObject(LogFileListResult.class);
        Assertions.assertEquals(5974596582216601991L, model.value().get(0).sizeInKB());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-17T10:09:05Z"), model.value().get(0).createdTime());
        Assertions.assertEquals("cffcyddglmj", model.value().get(0).typePropertiesType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-08T20:29:39Z"), model.value().get(0).lastModifiedTime());
        Assertions.assertEquals("kw", model.value().get(0).url());
        Assertions.assertEquals("jybige", model.nextLink());
    }
}
