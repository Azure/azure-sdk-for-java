// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mysqlflexibleserver.fluent.models.LogFileInner;
import com.azure.resourcemanager.mysqlflexibleserver.models.LogFileListResult;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class LogFileListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LogFileListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"sizeInKB\":6694189583402716643,\"createdTime\":\"2021-10-04T01:34:07Z\",\"type\":\"fbishcbkha\",\"lastModifiedTime\":\"2021-05-05T10:08:59Z\",\"url\":\"eamdp\"},\"id\":\"g\",\"name\":\"lpbuxwgipwhonowk\",\"type\":\"shwankixzbinje\"},{\"properties\":{\"sizeInKB\":4664442885020763143,\"createdTime\":\"2020-12-26T19:40:41Z\",\"type\":\"nuzo\",\"lastModifiedTime\":\"2021-06-23T23:25:19Z\",\"url\":\"yqzrnkcqvyxlw\"},\"id\":\"lsicohoqqnwv\",\"name\":\"ryavwhheunmmqh\",\"type\":\"yxzk\"},{\"properties\":{\"sizeInKB\":5868571403319109352,\"createdTime\":\"2021-03-20T11:43:44Z\",\"type\":\"lyaxuc\",\"lastModifiedTime\":\"2021-08-29T22:44:57Z\",\"url\":\"szfkbe\"},\"id\":\"ewrmjmwvvjektc\",\"name\":\"senhwlrs\",\"type\":\"frzpwvlqdqgb\"},{\"properties\":{\"sizeInKB\":5657063864250371746,\"createdTime\":\"2021-05-04T00:16:05Z\",\"type\":\"etcktvfcivfsnk\",\"lastModifiedTime\":\"2021-12-09T18:50:38Z\",\"url\":\"tqhjfbebrjcx\"},\"id\":\"fuwutttxf\",\"name\":\"jrbirphxepcyv\",\"type\":\"hfnljkyq\"}],\"nextLink\":\"vuujq\"}")
            .toObject(LogFileListResult.class);
        Assertions.assertEquals(6694189583402716643L, model.value().get(0).sizeInKB());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-04T01:34:07Z"), model.value().get(0).createdTime());
        Assertions.assertEquals("fbishcbkha", model.value().get(0).typePropertiesType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-05T10:08:59Z"), model.value().get(0).lastModifiedTime());
        Assertions.assertEquals("eamdp", model.value().get(0).url());
        Assertions.assertEquals("vuujq", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LogFileListResult model = new LogFileListResult().withValue(Arrays.asList(
            new LogFileInner().withSizeInKB(6694189583402716643L)
                .withCreatedTime(OffsetDateTime.parse("2021-10-04T01:34:07Z"))
                .withTypePropertiesType("fbishcbkha")
                .withLastModifiedTime(OffsetDateTime.parse("2021-05-05T10:08:59Z"))
                .withUrl("eamdp"),
            new LogFileInner().withSizeInKB(4664442885020763143L)
                .withCreatedTime(OffsetDateTime.parse("2020-12-26T19:40:41Z"))
                .withTypePropertiesType("nuzo")
                .withLastModifiedTime(OffsetDateTime.parse("2021-06-23T23:25:19Z"))
                .withUrl("yqzrnkcqvyxlw"),
            new LogFileInner().withSizeInKB(5868571403319109352L)
                .withCreatedTime(OffsetDateTime.parse("2021-03-20T11:43:44Z"))
                .withTypePropertiesType("lyaxuc")
                .withLastModifiedTime(OffsetDateTime.parse("2021-08-29T22:44:57Z"))
                .withUrl("szfkbe"),
            new LogFileInner().withSizeInKB(5657063864250371746L)
                .withCreatedTime(OffsetDateTime.parse("2021-05-04T00:16:05Z"))
                .withTypePropertiesType("etcktvfcivfsnk")
                .withLastModifiedTime(OffsetDateTime.parse("2021-12-09T18:50:38Z"))
                .withUrl("tqhjfbebrjcx")))
            .withNextLink("vuujq");
        model = BinaryData.fromObject(model).toObject(LogFileListResult.class);
        Assertions.assertEquals(6694189583402716643L, model.value().get(0).sizeInKB());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-04T01:34:07Z"), model.value().get(0).createdTime());
        Assertions.assertEquals("fbishcbkha", model.value().get(0).typePropertiesType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-05T10:08:59Z"), model.value().get(0).lastModifiedTime());
        Assertions.assertEquals("eamdp", model.value().get(0).url());
        Assertions.assertEquals("vuujq", model.nextLink());
    }
}
