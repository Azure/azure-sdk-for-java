// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mysqlflexibleserver.MySqlManager;
import com.azure.resourcemanager.mysqlflexibleserver.models.AdministratorName;
import com.azure.resourcemanager.mysqlflexibleserver.models.AdministratorType;
import com.azure.resourcemanager.mysqlflexibleserver.models.AzureADAdministrator;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AzureADAdministratorsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"administratorType\":\"ActiveDirectory\",\"login\":\"kslircizjxvydfc\",\"sid\":\"cvlhv\",\"tenantId\":\"dyftumrtwna\",\"identityResourceId\":\"slbi\"},\"id\":\"ojgcyzt\",\"name\":\"fmznba\",\"type\":\"qphchqnrnrpxehuw\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MySqlManager manager = MySqlManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        AzureADAdministrator response = manager.azureADAdministrators()
            .getWithResponse("qg", "zpnfqntcypsxj", AdministratorName.ACTIVE_DIRECTORY,
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(AdministratorType.ACTIVE_DIRECTORY, response.administratorType());
        Assertions.assertEquals("kslircizjxvydfc", response.login());
        Assertions.assertEquals("cvlhv", response.sid());
        Assertions.assertEquals("dyftumrtwna", response.tenantId());
        Assertions.assertEquals("slbi", response.identityResourceId());
    }
}
