// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mysqlflexibleserver.fluent.models.AzureADAdministratorInner;
import com.azure.resourcemanager.mysqlflexibleserver.models.AdministratorType;
import org.junit.jupiter.api.Assertions;

public final class AzureADAdministratorInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureADAdministratorInner model = BinaryData.fromString(
            "{\"properties\":{\"administratorType\":\"ActiveDirectory\",\"login\":\"ccsnhsjc\",\"sid\":\"ejhkry\",\"tenantId\":\"napczwlokjy\",\"identityResourceId\":\"kkvnipjox\"},\"id\":\"nchgej\",\"name\":\"podmailzydehojwy\",\"type\":\"huxinpmqnj\"}")
            .toObject(AzureADAdministratorInner.class);
        Assertions.assertEquals(AdministratorType.ACTIVE_DIRECTORY, model.administratorType());
        Assertions.assertEquals("ccsnhsjc", model.login());
        Assertions.assertEquals("ejhkry", model.sid());
        Assertions.assertEquals("napczwlokjy", model.tenantId());
        Assertions.assertEquals("kkvnipjox", model.identityResourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureADAdministratorInner model
            = new AzureADAdministratorInner().withAdministratorType(AdministratorType.ACTIVE_DIRECTORY)
                .withLogin("ccsnhsjc")
                .withSid("ejhkry")
                .withTenantId("napczwlokjy")
                .withIdentityResourceId("kkvnipjox");
        model = BinaryData.fromObject(model).toObject(AzureADAdministratorInner.class);
        Assertions.assertEquals(AdministratorType.ACTIVE_DIRECTORY, model.administratorType());
        Assertions.assertEquals("ccsnhsjc", model.login());
        Assertions.assertEquals("ejhkry", model.sid());
        Assertions.assertEquals("napczwlokjy", model.tenantId());
        Assertions.assertEquals("kkvnipjox", model.identityResourceId());
    }
}
