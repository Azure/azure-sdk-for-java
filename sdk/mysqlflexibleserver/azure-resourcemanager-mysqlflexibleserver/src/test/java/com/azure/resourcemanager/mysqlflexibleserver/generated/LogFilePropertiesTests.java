// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mysqlflexibleserver.fluent.models.LogFileProperties;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class LogFilePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LogFileProperties model = BinaryData.fromString(
            "{\"sizeInKB\":4653478630911450001,\"createdTime\":\"2021-06-15T22:18:20Z\",\"type\":\"ebfqkkrbm\",\"lastModifiedTime\":\"2021-12-04T19:14:26Z\",\"url\":\"riwflzlfb\"}")
            .toObject(LogFileProperties.class);
        Assertions.assertEquals(4653478630911450001L, model.sizeInKB());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-15T22:18:20Z"), model.createdTime());
        Assertions.assertEquals("ebfqkkrbm", model.type());
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-04T19:14:26Z"), model.lastModifiedTime());
        Assertions.assertEquals("riwflzlfb", model.url());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LogFileProperties model = new LogFileProperties().withSizeInKB(4653478630911450001L)
            .withCreatedTime(OffsetDateTime.parse("2021-06-15T22:18:20Z"))
            .withType("ebfqkkrbm")
            .withLastModifiedTime(OffsetDateTime.parse("2021-12-04T19:14:26Z"))
            .withUrl("riwflzlfb");
        model = BinaryData.fromObject(model).toObject(LogFileProperties.class);
        Assertions.assertEquals(4653478630911450001L, model.sizeInKB());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-15T22:18:20Z"), model.createdTime());
        Assertions.assertEquals("ebfqkkrbm", model.type());
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-04T19:14:26Z"), model.lastModifiedTime());
        Assertions.assertEquals("riwflzlfb", model.url());
    }
}
