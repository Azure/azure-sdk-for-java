// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mysqlflexibleserver.fluent.models.LogFileProperties;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class LogFilePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LogFileProperties model =
            BinaryData
                .fromString(
                    "{\"sizeInKB\":6844004088185237478,\"createdTime\":\"2021-02-17T22:01:44Z\",\"type\":\"ivkwlzuvccfwnfnb\",\"lastModifiedTime\":\"2021-04-04T07:21:26Z\",\"url\":\"onlebxetqgtzxdpn\"}")
                .toObject(LogFileProperties.class);
        Assertions.assertEquals(6844004088185237478L, model.sizeInKB());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-17T22:01:44Z"), model.createdTime());
        Assertions.assertEquals("ivkwlzuvccfwnfnb", model.type());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-04T07:21:26Z"), model.lastModifiedTime());
        Assertions.assertEquals("onlebxetqgtzxdpn", model.url());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LogFileProperties model =
            new LogFileProperties()
                .withSizeInKB(6844004088185237478L)
                .withCreatedTime(OffsetDateTime.parse("2021-02-17T22:01:44Z"))
                .withType("ivkwlzuvccfwnfnb")
                .withLastModifiedTime(OffsetDateTime.parse("2021-04-04T07:21:26Z"))
                .withUrl("onlebxetqgtzxdpn");
        model = BinaryData.fromObject(model).toObject(LogFileProperties.class);
        Assertions.assertEquals(6844004088185237478L, model.sizeInKB());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-17T22:01:44Z"), model.createdTime());
        Assertions.assertEquals("ivkwlzuvccfwnfnb", model.type());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-04T07:21:26Z"), model.lastModifiedTime());
        Assertions.assertEquals("onlebxetqgtzxdpn", model.url());
    }
}
