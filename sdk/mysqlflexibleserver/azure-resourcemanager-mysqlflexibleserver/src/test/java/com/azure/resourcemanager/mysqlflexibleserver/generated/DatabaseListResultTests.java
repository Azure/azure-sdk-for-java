// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mysqlflexibleserver.fluent.models.DatabaseInner;
import com.azure.resourcemanager.mysqlflexibleserver.models.DatabaseListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DatabaseListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DatabaseListResult model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"charset\":\"eebvmgxsab\",\"collation\":\"qduujitcjczdz\"},\"id\":\"ndhkrw\",\"name\":\"d\",\"type\":\"ppdsbdkvwrwj\"},{\"properties\":{\"charset\":\"snhu\",\"collation\":\"eltmrldhugjzzdat\"},\"id\":\"hocdgeab\",\"name\":\"gphuticndvka\",\"type\":\"zwyiftyhxhur\"},{\"properties\":{\"charset\":\"tyxolniwpwc\",\"collation\":\"jfkgiawxk\"},\"id\":\"ypl\",\"name\":\"ckbasyypndd\",\"type\":\"sgcbac\"}],\"nextLink\":\"ejk\"}")
                .toObject(DatabaseListResult.class);
        Assertions.assertEquals("eebvmgxsab", model.value().get(0).charset());
        Assertions.assertEquals("qduujitcjczdz", model.value().get(0).collation());
        Assertions.assertEquals("ejk", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DatabaseListResult model =
            new DatabaseListResult()
                .withValue(
                    Arrays
                        .asList(
                            new DatabaseInner().withCharset("eebvmgxsab").withCollation("qduujitcjczdz"),
                            new DatabaseInner().withCharset("snhu").withCollation("eltmrldhugjzzdat"),
                            new DatabaseInner().withCharset("tyxolniwpwc").withCollation("jfkgiawxk")))
                .withNextLink("ejk");
        model = BinaryData.fromObject(model).toObject(DatabaseListResult.class);
        Assertions.assertEquals("eebvmgxsab", model.value().get(0).charset());
        Assertions.assertEquals("qduujitcjczdz", model.value().get(0).collation());
        Assertions.assertEquals("ejk", model.nextLink());
    }
}
