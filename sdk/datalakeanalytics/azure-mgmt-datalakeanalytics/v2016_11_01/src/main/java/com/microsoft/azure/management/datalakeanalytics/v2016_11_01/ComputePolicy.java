/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datalakeanalytics.v2016_11_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.datalakeanalytics.v2016_11_01.implementation.ComputePolicyInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.datalakeanalytics.v2016_11_01.implementation.DataLakeAnalyticsManager;
import java.util.UUID;

/**
 * Type representing ComputePolicy.
 */
public interface ComputePolicy extends HasInner<ComputePolicyInner>, Indexable, Refreshable<ComputePolicy>, Updatable<ComputePolicy.Update>, HasManager<DataLakeAnalyticsManager> {
    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the maxDegreeOfParallelismPerJob value.
     */
    Integer maxDegreeOfParallelismPerJob();

    /**
     * @return the minPriorityPerJob value.
     */
    Integer minPriorityPerJob();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the objectId value.
     */
    UUID objectId();

    /**
     * @return the objectType value.
     */
    AADObjectType objectType();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the ComputePolicy definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithAccount, DefinitionStages.WithObjectId, DefinitionStages.WithObjectType, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of ComputePolicy definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a ComputePolicy definition.
         */
        interface Blank extends WithAccount {
        }

        /**
         * The stage of the computepolicy definition allowing to specify Account.
         */
        interface WithAccount {
           /**
            * Specifies resourceGroupName, accountName.
            * @param resourceGroupName The name of the Azure resource group
            * @param accountName The name of the Data Lake Analytics account
            * @return the next definition stage
            */
            WithObjectId withExistingAccount(String resourceGroupName, String accountName);
        }

        /**
         * The stage of the computepolicy definition allowing to specify ObjectId.
         */
        interface WithObjectId {
           /**
            * Specifies objectId.
            * @param objectId The AAD object identifier for the entity to create a policy for
            * @return the next definition stage
            */
            WithObjectType withObjectId(UUID objectId);
        }

        /**
         * The stage of the computepolicy definition allowing to specify ObjectType.
         */
        interface WithObjectType {
           /**
            * Specifies objectType.
            * @param objectType The type of AAD object the object identifier refers to. Possible values include: 'User', 'Group', 'ServicePrincipal'
            * @return the next definition stage
            */
            WithCreate withObjectType(AADObjectType objectType);
        }

        /**
         * The stage of the computepolicy definition allowing to specify MaxDegreeOfParallelismPerJob.
         */
        interface WithMaxDegreeOfParallelismPerJob {
            /**
             * Specifies maxDegreeOfParallelismPerJob.
             * @param maxDegreeOfParallelismPerJob The maximum degree of parallelism per job this user can use to submit jobs. This property, the min priority per job property, or both must be passed
             * @return the next definition stage
             */
            WithCreate withMaxDegreeOfParallelismPerJob(Integer maxDegreeOfParallelismPerJob);
        }

        /**
         * The stage of the computepolicy definition allowing to specify MinPriorityPerJob.
         */
        interface WithMinPriorityPerJob {
            /**
             * Specifies minPriorityPerJob.
             * @param minPriorityPerJob The minimum priority per job this user can use to submit jobs. This property, the max degree of parallelism per job property, or both must be passed
             * @return the next definition stage
             */
            WithCreate withMinPriorityPerJob(Integer minPriorityPerJob);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<ComputePolicy>, DefinitionStages.WithMaxDegreeOfParallelismPerJob, DefinitionStages.WithMinPriorityPerJob {
        }
    }
    /**
     * The template for a ComputePolicy update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<ComputePolicy>, UpdateStages.WithMaxDegreeOfParallelismPerJob, UpdateStages.WithMinPriorityPerJob, UpdateStages.WithObjectId, UpdateStages.WithObjectType {
    }

    /**
     * Grouping of ComputePolicy update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the computepolicy update allowing to specify MaxDegreeOfParallelismPerJob.
         */
        interface WithMaxDegreeOfParallelismPerJob {
            /**
             * Specifies maxDegreeOfParallelismPerJob.
             * @param maxDegreeOfParallelismPerJob The maximum degree of parallelism per job this user can use to submit jobs. This property, the min priority per job property, or both must be passed
             * @return the next update stage
             */
            Update withMaxDegreeOfParallelismPerJob(Integer maxDegreeOfParallelismPerJob);
        }

        /**
         * The stage of the computepolicy update allowing to specify MinPriorityPerJob.
         */
        interface WithMinPriorityPerJob {
            /**
             * Specifies minPriorityPerJob.
             * @param minPriorityPerJob The minimum priority per job this user can use to submit jobs. This property, the max degree of parallelism per job property, or both must be passed
             * @return the next update stage
             */
            Update withMinPriorityPerJob(Integer minPriorityPerJob);
        }

        /**
         * The stage of the computepolicy update allowing to specify ObjectId.
         */
        interface WithObjectId {
            /**
             * Specifies objectId.
             * @param objectId The AAD object identifier for the entity to create a policy for
             * @return the next update stage
             */
            Update withObjectId(UUID objectId);
        }

        /**
         * The stage of the computepolicy update allowing to specify ObjectType.
         */
        interface WithObjectType {
            /**
             * Specifies objectType.
             * @param objectType The type of AAD object the object identifier refers to. Possible values include: 'User', 'Group', 'ServicePrincipal'
             * @return the next update stage
             */
            Update withObjectType(AADObjectType objectType);
        }

    }
}
