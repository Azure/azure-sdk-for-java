// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datalakeanalytics.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.datalakeanalytics.models.SubscriptionState;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.UUID;

/** Subscription-level properties and limits for Data Lake Analytics. */
@Immutable
public final class CapabilityInformationInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(CapabilityInformationInner.class);

    /*
     * The subscription credentials that uniquely identifies the subscription.
     */
    @JsonProperty(value = "subscriptionId", access = JsonProperty.Access.WRITE_ONLY)
    private UUID subscriptionId;

    /*
     * The subscription state.
     */
    @JsonProperty(value = "state", access = JsonProperty.Access.WRITE_ONLY)
    private SubscriptionState state;

    /*
     * The maximum supported number of accounts under this subscription.
     */
    @JsonProperty(value = "maxAccountCount", access = JsonProperty.Access.WRITE_ONLY)
    private Integer maxAccountCount;

    /*
     * The current number of accounts under this subscription.
     */
    @JsonProperty(value = "accountCount", access = JsonProperty.Access.WRITE_ONLY)
    private Integer accountCount;

    /*
     * The Boolean value of true or false to indicate the maintenance state.
     */
    @JsonProperty(value = "migrationState", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean migrationState;

    /**
     * Get the subscriptionId property: The subscription credentials that uniquely identifies the subscription.
     *
     * @return the subscriptionId value.
     */
    public UUID subscriptionId() {
        return this.subscriptionId;
    }

    /**
     * Get the state property: The subscription state.
     *
     * @return the state value.
     */
    public SubscriptionState state() {
        return this.state;
    }

    /**
     * Get the maxAccountCount property: The maximum supported number of accounts under this subscription.
     *
     * @return the maxAccountCount value.
     */
    public Integer maxAccountCount() {
        return this.maxAccountCount;
    }

    /**
     * Get the accountCount property: The current number of accounts under this subscription.
     *
     * @return the accountCount value.
     */
    public Integer accountCount() {
        return this.accountCount;
    }

    /**
     * Get the migrationState property: The Boolean value of true or false to indicate the maintenance state.
     *
     * @return the migrationState value.
     */
    public Boolean migrationState() {
        return this.migrationState;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
