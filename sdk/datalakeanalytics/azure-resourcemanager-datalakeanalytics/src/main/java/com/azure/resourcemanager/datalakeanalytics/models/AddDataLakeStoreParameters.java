// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datalakeanalytics.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.datalakeanalytics.fluent.models.AddDataLakeStoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The parameters used to add a new Data Lake Store account. */
@Fluent
public final class AddDataLakeStoreParameters {
    /*
     * The Data Lake Store account properties to use when adding a new Data Lake Store account.
     */
    @JsonProperty(value = "properties")
    private AddDataLakeStoreProperties innerProperties;

    /** Creates an instance of AddDataLakeStoreParameters class. */
    public AddDataLakeStoreParameters() {
    }

    /**
     * Get the innerProperties property: The Data Lake Store account properties to use when adding a new Data Lake Store
     * account.
     *
     * @return the innerProperties value.
     */
    private AddDataLakeStoreProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the suffix property: The optional suffix for the Data Lake Store account.
     *
     * @return the suffix value.
     */
    public String suffix() {
        return this.innerProperties() == null ? null : this.innerProperties().suffix();
    }

    /**
     * Set the suffix property: The optional suffix for the Data Lake Store account.
     *
     * @param suffix the suffix value to set.
     * @return the AddDataLakeStoreParameters object itself.
     */
    public AddDataLakeStoreParameters withSuffix(String suffix) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AddDataLakeStoreProperties();
        }
        this.innerProperties().withSuffix(suffix);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
