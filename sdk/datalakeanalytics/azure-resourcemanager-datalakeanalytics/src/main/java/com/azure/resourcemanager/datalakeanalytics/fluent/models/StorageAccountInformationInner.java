// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datalakeanalytics.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.SubResource;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Azure Storage account information.
 */
@Fluent
public final class StorageAccountInformationInner extends SubResource {
    /*
     * The Azure Storage account properties.
     */
    private StorageAccountInformationProperties innerProperties;

    /*
     * The resource name.
     */
    private String name;

    /*
     * The resource type.
     */
    private String type;

    /**
     * Creates an instance of StorageAccountInformationInner class.
     */
    public StorageAccountInformationInner() {
    }

    /**
     * Get the innerProperties property: The Azure Storage account properties.
     * 
     * @return the innerProperties value.
     */
    private StorageAccountInformationProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the name property: The resource name.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the type property: The resource type.
     * 
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StorageAccountInformationInner withId(String id) {
        super.withId(id);
        return this;
    }

    /**
     * Get the suffix property: The optional suffix for the storage account.
     * 
     * @return the suffix value.
     */
    public String suffix() {
        return this.innerProperties() == null ? null : this.innerProperties().suffix();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("id", id());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of StorageAccountInformationInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of StorageAccountInformationInner if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the StorageAccountInformationInner.
     */
    public static StorageAccountInformationInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            StorageAccountInformationInner deserializedStorageAccountInformationInner
                = new StorageAccountInformationInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedStorageAccountInformationInner.withId(reader.getString());
                } else if ("properties".equals(fieldName)) {
                    deserializedStorageAccountInformationInner.innerProperties
                        = StorageAccountInformationProperties.fromJson(reader);
                } else if ("name".equals(fieldName)) {
                    deserializedStorageAccountInformationInner.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedStorageAccountInformationInner.type = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedStorageAccountInformationInner;
        });
    }
}
