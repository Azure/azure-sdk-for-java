// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datalakeanalytics.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The Azure Storage account properties to use when updating an Azure Storage account.
 */
@Fluent
public final class UpdateStorageAccountProperties implements JsonSerializable<UpdateStorageAccountProperties> {
    /*
     * The updated access key associated with this Azure Storage account that will be used to connect to it.
     */
    private String accessKey;

    /*
     * The optional suffix for the storage account.
     */
    private String suffix;

    /**
     * Creates an instance of UpdateStorageAccountProperties class.
     */
    public UpdateStorageAccountProperties() {
    }

    /**
     * Get the accessKey property: The updated access key associated with this Azure Storage account that will be used
     * to connect to it.
     * 
     * @return the accessKey value.
     */
    public String accessKey() {
        return this.accessKey;
    }

    /**
     * Set the accessKey property: The updated access key associated with this Azure Storage account that will be used
     * to connect to it.
     * 
     * @param accessKey the accessKey value to set.
     * @return the UpdateStorageAccountProperties object itself.
     */
    public UpdateStorageAccountProperties withAccessKey(String accessKey) {
        this.accessKey = accessKey;
        return this;
    }

    /**
     * Get the suffix property: The optional suffix for the storage account.
     * 
     * @return the suffix value.
     */
    public String suffix() {
        return this.suffix;
    }

    /**
     * Set the suffix property: The optional suffix for the storage account.
     * 
     * @param suffix the suffix value to set.
     * @return the UpdateStorageAccountProperties object itself.
     */
    public UpdateStorageAccountProperties withSuffix(String suffix) {
        this.suffix = suffix;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("accessKey", this.accessKey);
        jsonWriter.writeStringField("suffix", this.suffix);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of UpdateStorageAccountProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of UpdateStorageAccountProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the UpdateStorageAccountProperties.
     */
    public static UpdateStorageAccountProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            UpdateStorageAccountProperties deserializedUpdateStorageAccountProperties
                = new UpdateStorageAccountProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("accessKey".equals(fieldName)) {
                    deserializedUpdateStorageAccountProperties.accessKey = reader.getString();
                } else if ("suffix".equals(fieldName)) {
                    deserializedUpdateStorageAccountProperties.suffix = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedUpdateStorageAccountProperties;
        });
    }
}
