// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datalakeanalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datalakeanalytics.models.AadObjectType;
import com.azure.resourcemanager.datalakeanalytics.models.UpdateComputePolicyParameters;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class UpdateComputePolicyParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UpdateComputePolicyParameters model = BinaryData.fromString(
            "{\"properties\":{\"objectId\":\"c5a11a74-9eb1-4bae-a48c-158b03973a90\",\"objectType\":\"ServicePrincipal\",\"maxDegreeOfParallelismPerJob\":2024670267,\"minPriorityPerJob\":2047177811}}")
            .toObject(UpdateComputePolicyParameters.class);
        Assertions.assertEquals(UUID.fromString("c5a11a74-9eb1-4bae-a48c-158b03973a90"), model.objectId());
        Assertions.assertEquals(AadObjectType.SERVICE_PRINCIPAL, model.objectType());
        Assertions.assertEquals(2024670267, model.maxDegreeOfParallelismPerJob());
        Assertions.assertEquals(2047177811, model.minPriorityPerJob());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UpdateComputePolicyParameters model
            = new UpdateComputePolicyParameters().withObjectId(UUID.fromString("c5a11a74-9eb1-4bae-a48c-158b03973a90"))
                .withObjectType(AadObjectType.SERVICE_PRINCIPAL)
                .withMaxDegreeOfParallelismPerJob(2024670267)
                .withMinPriorityPerJob(2047177811);
        model = BinaryData.fromObject(model).toObject(UpdateComputePolicyParameters.class);
        Assertions.assertEquals(UUID.fromString("c5a11a74-9eb1-4bae-a48c-158b03973a90"), model.objectId());
        Assertions.assertEquals(AadObjectType.SERVICE_PRINCIPAL, model.objectType());
        Assertions.assertEquals(2024670267, model.maxDegreeOfParallelismPerJob());
        Assertions.assertEquals(2047177811, model.minPriorityPerJob());
    }
}
