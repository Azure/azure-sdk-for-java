// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datalakeanalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datalakeanalytics.models.AadObjectType;
import com.azure.resourcemanager.datalakeanalytics.models.CreateComputePolicyWithAccountParameters;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class CreateComputePolicyWithAccountParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CreateComputePolicyWithAccountParameters model = BinaryData.fromString(
            "{\"name\":\"usivye\",\"properties\":{\"objectId\":\"2bc146ee-a90e-4197-8b64-eb06e89cf3be\",\"objectType\":\"ServicePrincipal\",\"maxDegreeOfParallelismPerJob\":1323562973,\"minPriorityPerJob\":1522291140}}")
            .toObject(CreateComputePolicyWithAccountParameters.class);
        Assertions.assertEquals("usivye", model.name());
        Assertions.assertEquals(UUID.fromString("2bc146ee-a90e-4197-8b64-eb06e89cf3be"), model.objectId());
        Assertions.assertEquals(AadObjectType.SERVICE_PRINCIPAL, model.objectType());
        Assertions.assertEquals(1323562973, model.maxDegreeOfParallelismPerJob());
        Assertions.assertEquals(1522291140, model.minPriorityPerJob());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CreateComputePolicyWithAccountParameters model
            = new CreateComputePolicyWithAccountParameters().withName("usivye")
                .withObjectId(UUID.fromString("2bc146ee-a90e-4197-8b64-eb06e89cf3be"))
                .withObjectType(AadObjectType.SERVICE_PRINCIPAL)
                .withMaxDegreeOfParallelismPerJob(1323562973)
                .withMinPriorityPerJob(1522291140);
        model = BinaryData.fromObject(model).toObject(CreateComputePolicyWithAccountParameters.class);
        Assertions.assertEquals("usivye", model.name());
        Assertions.assertEquals(UUID.fromString("2bc146ee-a90e-4197-8b64-eb06e89cf3be"), model.objectId());
        Assertions.assertEquals(AadObjectType.SERVICE_PRINCIPAL, model.objectType());
        Assertions.assertEquals(1323562973, model.maxDegreeOfParallelismPerJob());
        Assertions.assertEquals(1522291140, model.minPriorityPerJob());
    }
}
