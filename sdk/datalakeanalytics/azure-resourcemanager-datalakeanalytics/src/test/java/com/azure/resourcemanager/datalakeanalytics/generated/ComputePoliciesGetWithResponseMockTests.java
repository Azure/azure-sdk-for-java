// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datalakeanalytics.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.datalakeanalytics.DataLakeAnalyticsManager;
import com.azure.resourcemanager.datalakeanalytics.models.ComputePolicy;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ComputePoliciesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"objectId\":\"fd2b2093-672a-47f4-8500-8aba8a0ec8c6\",\"objectType\":\"User\",\"maxDegreeOfParallelismPerJob\":2099315083,\"minPriorityPerJob\":1402038644},\"name\":\"vydypatdoo\",\"type\":\"jkniodko\",\"id\":\"bw\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DataLakeAnalyticsManager manager = DataLakeAnalyticsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ComputePolicy response = manager.computePolicies()
            .getWithResponse("oaxoruzfgsqu", "fxrxxle", "tramxjez", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("bw", response.id());
    }
}
