// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.appplatform.generated.fluent.BuildServiceAgentPoolsClient;
import com.azure.resourcemanager.appplatform.generated.fluent.models.BuildServiceAgentPoolResourceInner;
import com.azure.resourcemanager.appplatform.generated.models.BuildServiceAgentPoolResource;
import com.azure.resourcemanager.appplatform.generated.models.BuildServiceAgentPools;

public final class BuildServiceAgentPoolsImpl implements BuildServiceAgentPools {
    private static final ClientLogger LOGGER = new ClientLogger(BuildServiceAgentPoolsImpl.class);

    private final BuildServiceAgentPoolsClient innerClient;

    private final com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager;

    public BuildServiceAgentPoolsImpl(
        BuildServiceAgentPoolsClient innerClient,
        com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<BuildServiceAgentPoolResource> list(
        String resourceGroupName, String serviceName, String buildServiceName) {
        PagedIterable<BuildServiceAgentPoolResourceInner> inner =
            this.serviceClient().list(resourceGroupName, serviceName, buildServiceName);
        return Utils.mapPage(inner, inner1 -> new BuildServiceAgentPoolResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<BuildServiceAgentPoolResource> list(
        String resourceGroupName, String serviceName, String buildServiceName, Context context) {
        PagedIterable<BuildServiceAgentPoolResourceInner> inner =
            this.serviceClient().list(resourceGroupName, serviceName, buildServiceName, context);
        return Utils.mapPage(inner, inner1 -> new BuildServiceAgentPoolResourceImpl(inner1, this.manager()));
    }

    public BuildServiceAgentPoolResource get(
        String resourceGroupName, String serviceName, String buildServiceName, String agentPoolName) {
        BuildServiceAgentPoolResourceInner inner =
            this.serviceClient().get(resourceGroupName, serviceName, buildServiceName, agentPoolName);
        if (inner != null) {
            return new BuildServiceAgentPoolResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<BuildServiceAgentPoolResource> getWithResponse(
        String resourceGroupName, String serviceName, String buildServiceName, String agentPoolName, Context context) {
        Response<BuildServiceAgentPoolResourceInner> inner =
            this
                .serviceClient()
                .getWithResponse(resourceGroupName, serviceName, buildServiceName, agentPoolName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new BuildServiceAgentPoolResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public BuildServiceAgentPoolResource updatePut(
        String resourceGroupName,
        String serviceName,
        String buildServiceName,
        String agentPoolName,
        BuildServiceAgentPoolResourceInner agentPoolResource) {
        BuildServiceAgentPoolResourceInner inner =
            this
                .serviceClient()
                .updatePut(resourceGroupName, serviceName, buildServiceName, agentPoolName, agentPoolResource);
        if (inner != null) {
            return new BuildServiceAgentPoolResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public BuildServiceAgentPoolResource updatePut(
        String resourceGroupName,
        String serviceName,
        String buildServiceName,
        String agentPoolName,
        BuildServiceAgentPoolResourceInner agentPoolResource,
        Context context) {
        BuildServiceAgentPoolResourceInner inner =
            this
                .serviceClient()
                .updatePut(resourceGroupName, serviceName, buildServiceName, agentPoolName, agentPoolResource, context);
        if (inner != null) {
            return new BuildServiceAgentPoolResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private BuildServiceAgentPoolsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.appplatform.generated.AppPlatformManager manager() {
        return this.serviceManager;
    }
}
