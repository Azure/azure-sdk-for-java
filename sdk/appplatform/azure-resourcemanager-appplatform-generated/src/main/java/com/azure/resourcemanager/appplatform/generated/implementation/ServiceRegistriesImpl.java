// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.appplatform.generated.fluent.ServiceRegistriesClient;
import com.azure.resourcemanager.appplatform.generated.fluent.models.ServiceRegistryResourceInner;
import com.azure.resourcemanager.appplatform.generated.models.ServiceRegistries;
import com.azure.resourcemanager.appplatform.generated.models.ServiceRegistryResource;

public final class ServiceRegistriesImpl implements ServiceRegistries {
    private static final ClientLogger LOGGER = new ClientLogger(ServiceRegistriesImpl.class);

    private final ServiceRegistriesClient innerClient;

    private final com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager;

    public ServiceRegistriesImpl(
        ServiceRegistriesClient innerClient,
        com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public ServiceRegistryResource get(String resourceGroupName, String serviceName, String serviceRegistryName) {
        ServiceRegistryResourceInner inner =
            this.serviceClient().get(resourceGroupName, serviceName, serviceRegistryName);
        if (inner != null) {
            return new ServiceRegistryResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<ServiceRegistryResource> getWithResponse(
        String resourceGroupName, String serviceName, String serviceRegistryName, Context context) {
        Response<ServiceRegistryResourceInner> inner =
            this.serviceClient().getWithResponse(resourceGroupName, serviceName, serviceRegistryName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new ServiceRegistryResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ServiceRegistryResource createOrUpdate(
        String resourceGroupName, String serviceName, String serviceRegistryName) {
        ServiceRegistryResourceInner inner =
            this.serviceClient().createOrUpdate(resourceGroupName, serviceName, serviceRegistryName);
        if (inner != null) {
            return new ServiceRegistryResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public ServiceRegistryResource createOrUpdate(
        String resourceGroupName, String serviceName, String serviceRegistryName, Context context) {
        ServiceRegistryResourceInner inner =
            this.serviceClient().createOrUpdate(resourceGroupName, serviceName, serviceRegistryName, context);
        if (inner != null) {
            return new ServiceRegistryResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public void delete(String resourceGroupName, String serviceName, String serviceRegistryName) {
        this.serviceClient().delete(resourceGroupName, serviceName, serviceRegistryName);
    }

    public void delete(String resourceGroupName, String serviceName, String serviceRegistryName, Context context) {
        this.serviceClient().delete(resourceGroupName, serviceName, serviceRegistryName, context);
    }

    public PagedIterable<ServiceRegistryResource> list(String resourceGroupName, String serviceName) {
        PagedIterable<ServiceRegistryResourceInner> inner = this.serviceClient().list(resourceGroupName, serviceName);
        return Utils.mapPage(inner, inner1 -> new ServiceRegistryResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<ServiceRegistryResource> list(String resourceGroupName, String serviceName, Context context) {
        PagedIterable<ServiceRegistryResourceInner> inner =
            this.serviceClient().list(resourceGroupName, serviceName, context);
        return Utils.mapPage(inner, inner1 -> new ServiceRegistryResourceImpl(inner1, this.manager()));
    }

    private ServiceRegistriesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.appplatform.generated.AppPlatformManager manager() {
        return this.serviceManager;
    }
}
