// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.disconnectedoperations.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.disconnectedoperations.fluent.models.DisconnectedOperationDeploymentManifestInner;
import com.azure.resourcemanager.disconnectedoperations.fluent.models.DisconnectedOperationInner;
import com.azure.resourcemanager.disconnectedoperations.models.DisconnectedOperationUpdate;

/**
 * An instance of this class provides access to all the operations defined in DisconnectedOperationsClient.
 */
public interface DisconnectedOperationsClient {
    /**
     * Get a DisconnectedOperation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a DisconnectedOperation along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DisconnectedOperationInner> getByResourceGroupWithResponse(String resourceGroupName, String name,
        Context context);

    /**
     * Get a DisconnectedOperation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a DisconnectedOperation.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DisconnectedOperationInner getByResourceGroup(String resourceGroupName, String name);

    /**
     * Create a DisconnectedOperation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of disconnected operation resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DisconnectedOperationInner>, DisconnectedOperationInner>
        beginCreateOrUpdate(String resourceGroupName, String name, DisconnectedOperationInner resource);

    /**
     * Create a DisconnectedOperation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the resource.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of disconnected operation resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DisconnectedOperationInner>, DisconnectedOperationInner> beginCreateOrUpdate(
        String resourceGroupName, String name, DisconnectedOperationInner resource, Context context);

    /**
     * Create a DisconnectedOperation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return disconnected operation resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DisconnectedOperationInner createOrUpdate(String resourceGroupName, String name,
        DisconnectedOperationInner resource);

    /**
     * Create a DisconnectedOperation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the resource.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return disconnected operation resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DisconnectedOperationInner createOrUpdate(String resourceGroupName, String name,
        DisconnectedOperationInner resource, Context context);

    /**
     * Update a DisconnectedOperation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the resource.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return disconnected operation resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DisconnectedOperationInner> updateWithResponse(String resourceGroupName, String name,
        DisconnectedOperationUpdate properties, Context context);

    /**
     * Update a DisconnectedOperation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the resource.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return disconnected operation resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DisconnectedOperationInner update(String resourceGroupName, String name, DisconnectedOperationUpdate properties);

    /**
     * Delete a DisconnectedOperation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String name);

    /**
     * Delete a DisconnectedOperation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String name, Context context);

    /**
     * Delete a DisconnectedOperation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String name);

    /**
     * Delete a DisconnectedOperation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String name, Context context);

    /**
     * List DisconnectedOperation resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DisconnectedOperation list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DisconnectedOperationInner> listByResourceGroup(String resourceGroupName);

    /**
     * List DisconnectedOperation resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DisconnectedOperation list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DisconnectedOperationInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * List DisconnectedOperation resources by subscription ID.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DisconnectedOperation list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DisconnectedOperationInner> list();

    /**
     * List DisconnectedOperation resources by subscription ID.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DisconnectedOperation list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DisconnectedOperationInner> list(Context context);

    /**
     * get deployment manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return deployment manifest along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DisconnectedOperationDeploymentManifestInner> listDeploymentManifestWithResponse(String resourceGroupName,
        String name, Context context);

    /**
     * get deployment manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return deployment manifest.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DisconnectedOperationDeploymentManifestInner listDeploymentManifest(String resourceGroupName, String name);
}
