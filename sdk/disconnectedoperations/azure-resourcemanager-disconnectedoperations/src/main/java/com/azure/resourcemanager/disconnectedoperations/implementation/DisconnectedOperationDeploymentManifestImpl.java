// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.disconnectedoperations.implementation;

import com.azure.resourcemanager.disconnectedoperations.fluent.models.DisconnectedOperationDeploymentManifestInner;
import com.azure.resourcemanager.disconnectedoperations.models.BillingModel;
import com.azure.resourcemanager.disconnectedoperations.models.ConnectionIntent;
import com.azure.resourcemanager.disconnectedoperations.models.DisconnectedOperationDeploymentManifest;

public final class DisconnectedOperationDeploymentManifestImpl implements DisconnectedOperationDeploymentManifest {
    private DisconnectedOperationDeploymentManifestInner innerObject;

    private final com.azure.resourcemanager.disconnectedoperations.DisconnectedOperationsManager serviceManager;

    DisconnectedOperationDeploymentManifestImpl(DisconnectedOperationDeploymentManifestInner innerObject,
        com.azure.resourcemanager.disconnectedoperations.DisconnectedOperationsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String resourceId() {
        return this.innerModel().resourceId();
    }

    public String resourceName() {
        return this.innerModel().resourceName();
    }

    public String stampId() {
        return this.innerModel().stampId();
    }

    public String location() {
        return this.innerModel().location();
    }

    public BillingModel billingModel() {
        return this.innerModel().billingModel();
    }

    public ConnectionIntent connectionIntent() {
        return this.innerModel().connectionIntent();
    }

    public String cloud() {
        return this.innerModel().cloud();
    }

    public DisconnectedOperationDeploymentManifestInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.disconnectedoperations.DisconnectedOperationsManager manager() {
        return this.serviceManager;
    }
}
