// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.disconnectedoperations.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of Images.
 */
public interface Images {
    /**
     * List by disconnected operation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Image list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Image> listByDisconnectedOperation(String resourceGroupName, String name);

    /**
     * List by disconnected operation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the resource.
     * @param filter Filter the result list using the given expression.
     * @param top The number of result items to return.
     * @param skip The number of result items to skip.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Image list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Image> listByDisconnectedOperation(String resourceGroupName, String name, String filter, Integer top,
        Integer skip, Context context);

    /**
     * Get the resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the resource.
     * @param imageName The name of the Image.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the resource along with {@link Response}.
     */
    Response<Image> getWithResponse(String resourceGroupName, String name, String imageName, Context context);

    /**
     * Get the resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the resource.
     * @param imageName The name of the Image.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the resource.
     */
    Image get(String resourceGroupName, String name, String imageName);

    /**
     * Get the URI to download the image.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the resource.
     * @param imageName The name of the Image.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the URI to download the image along with {@link Response}.
     */
    Response<ImageDownloadResult> listDownloadUriWithResponse(String resourceGroupName, String name, String imageName,
        Context context);

    /**
     * Get the URI to download the image.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the resource.
     * @param imageName The name of the Image.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the URI to download the image.
     */
    ImageDownloadResult listDownloadUri(String resourceGroupName, String name, String imageName);
}
