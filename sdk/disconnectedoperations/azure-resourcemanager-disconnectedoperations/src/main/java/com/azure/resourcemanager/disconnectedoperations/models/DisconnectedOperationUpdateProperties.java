// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.disconnectedoperations.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The updatable properties of the DisconnectedOperation.
 */
@Fluent
public final class DisconnectedOperationUpdateProperties
    implements JsonSerializable<DisconnectedOperationUpdateProperties> {
    /*
     * The connection intent
     */
    private ConnectionIntent connectionIntent;

    /*
     * The registration intent
     */
    private RegistrationStatus registrationStatus;

    /*
     * The device version
     */
    private String deviceVersion;

    /**
     * Creates an instance of DisconnectedOperationUpdateProperties class.
     */
    public DisconnectedOperationUpdateProperties() {
    }

    /**
     * Get the connectionIntent property: The connection intent.
     * 
     * @return the connectionIntent value.
     */
    public ConnectionIntent connectionIntent() {
        return this.connectionIntent;
    }

    /**
     * Set the connectionIntent property: The connection intent.
     * 
     * @param connectionIntent the connectionIntent value to set.
     * @return the DisconnectedOperationUpdateProperties object itself.
     */
    public DisconnectedOperationUpdateProperties withConnectionIntent(ConnectionIntent connectionIntent) {
        this.connectionIntent = connectionIntent;
        return this;
    }

    /**
     * Get the registrationStatus property: The registration intent.
     * 
     * @return the registrationStatus value.
     */
    public RegistrationStatus registrationStatus() {
        return this.registrationStatus;
    }

    /**
     * Set the registrationStatus property: The registration intent.
     * 
     * @param registrationStatus the registrationStatus value to set.
     * @return the DisconnectedOperationUpdateProperties object itself.
     */
    public DisconnectedOperationUpdateProperties withRegistrationStatus(RegistrationStatus registrationStatus) {
        this.registrationStatus = registrationStatus;
        return this;
    }

    /**
     * Get the deviceVersion property: The device version.
     * 
     * @return the deviceVersion value.
     */
    public String deviceVersion() {
        return this.deviceVersion;
    }

    /**
     * Set the deviceVersion property: The device version.
     * 
     * @param deviceVersion the deviceVersion value to set.
     * @return the DisconnectedOperationUpdateProperties object itself.
     */
    public DisconnectedOperationUpdateProperties withDeviceVersion(String deviceVersion) {
        this.deviceVersion = deviceVersion;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("connectionIntent",
            this.connectionIntent == null ? null : this.connectionIntent.toString());
        jsonWriter.writeStringField("registrationStatus",
            this.registrationStatus == null ? null : this.registrationStatus.toString());
        jsonWriter.writeStringField("deviceVersion", this.deviceVersion);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DisconnectedOperationUpdateProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DisconnectedOperationUpdateProperties if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the DisconnectedOperationUpdateProperties.
     */
    public static DisconnectedOperationUpdateProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DisconnectedOperationUpdateProperties deserializedDisconnectedOperationUpdateProperties
                = new DisconnectedOperationUpdateProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("connectionIntent".equals(fieldName)) {
                    deserializedDisconnectedOperationUpdateProperties.connectionIntent
                        = ConnectionIntent.fromString(reader.getString());
                } else if ("registrationStatus".equals(fieldName)) {
                    deserializedDisconnectedOperationUpdateProperties.registrationStatus
                        = RegistrationStatus.fromString(reader.getString());
                } else if ("deviceVersion".equals(fieldName)) {
                    deserializedDisconnectedOperationUpdateProperties.deviceVersion = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDisconnectedOperationUpdateProperties;
        });
    }
}
