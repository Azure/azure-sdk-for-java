// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.disconnectedoperations.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.disconnectedoperations.DisconnectedOperationsManager;
import com.azure.resourcemanager.disconnectedoperations.models.Artifact;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ArtifactsListByParentMockTests {
    @Test
    public void testListByParent() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Succeeded\",\"artifactOrder\":1264549438,\"title\":\"jnpg\",\"description\":\"cftadeh\",\"size\":7028050140215699790},\"id\":\"fsoppusuesnzw\",\"name\":\"ej\",\"type\":\"avo\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DisconnectedOperationsManager manager = DisconnectedOperationsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Artifact> response
            = manager.artifacts().listByParent("hb", "xhejjzzvdud", "wdslfhotwmcy", com.azure.core.util.Context.NONE);

    }
}
