// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.disconnectedoperations.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.disconnectedoperations.DisconnectedOperationsManager;
import com.azure.resourcemanager.disconnectedoperations.models.ArtifactDownloadResult;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ArtifactsListDownloadUriWithResponseMockTests {
    @Test
    public void testListDownloadUriWithResponse() throws Exception {
        String responseStr
            = "{\"provisioningState\":\"Failed\",\"artifactOrder\":1096221203,\"title\":\"yyvxyqjpkcattpn\",\"description\":\"jcrcczsqpjhvmda\",\"size\":8436976750184221107,\"downloadLink\":\"sounqecanoaeu\",\"linkExpiry\":\"2021-10-06T07:30:47Z\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DisconnectedOperationsManager manager = DisconnectedOperationsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ArtifactDownloadResult response = manager.artifacts()
            .listDownloadUriWithResponse("ectehf", "qsc", "eypvhezrkg", "hcjrefovgmk", com.azure.core.util.Context.NONE)
            .getValue();

    }
}
