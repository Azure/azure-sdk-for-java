// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appconfiguration.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appconfiguration.models.MetricDimension;
import com.azure.resourcemanager.appconfiguration.models.MetricSpecification;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MetricSpecificationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MetricSpecification model = BinaryData.fromString(
            "{\"name\":\"fkbey\",\"displayName\":\"wrmjmwvvjektc\",\"displayDescription\":\"enhwlrs\",\"unit\":\"rzpwvlqdqgbiq\",\"aggregationType\":\"ihkaetcktvfc\",\"internalMetricName\":\"fsnkymuctq\",\"dimensions\":[{\"name\":\"ebrjcxe\",\"displayName\":\"uwutttxfvjrbi\",\"internalName\":\"hxepcyvahfnlj\"},{\"name\":\"qxj\",\"displayName\":\"ujqgidok\",\"internalName\":\"ljyoxgvcltb\"},{\"name\":\"ncghkje\",\"displayName\":\"zhbijhtxfv\",\"internalName\":\"bfs\"}],\"fillGapWithZero\":true}")
            .toObject(MetricSpecification.class);
        Assertions.assertEquals("fkbey", model.name());
        Assertions.assertEquals("wrmjmwvvjektc", model.displayName());
        Assertions.assertEquals("enhwlrs", model.displayDescription());
        Assertions.assertEquals("rzpwvlqdqgbiq", model.unit());
        Assertions.assertEquals("ihkaetcktvfc", model.aggregationType());
        Assertions.assertEquals("fsnkymuctq", model.internalMetricName());
        Assertions.assertEquals("ebrjcxe", model.dimensions().get(0).name());
        Assertions.assertEquals("uwutttxfvjrbi", model.dimensions().get(0).displayName());
        Assertions.assertEquals("hxepcyvahfnlj", model.dimensions().get(0).internalName());
        Assertions.assertEquals(true, model.fillGapWithZero());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MetricSpecification model = new MetricSpecification().withName("fkbey")
            .withDisplayName("wrmjmwvvjektc")
            .withDisplayDescription("enhwlrs")
            .withUnit("rzpwvlqdqgbiq")
            .withAggregationType("ihkaetcktvfc")
            .withInternalMetricName("fsnkymuctq")
            .withDimensions(Arrays.asList(
                new MetricDimension().withName("ebrjcxe")
                    .withDisplayName("uwutttxfvjrbi")
                    .withInternalName("hxepcyvahfnlj"),
                new MetricDimension().withName("qxj").withDisplayName("ujqgidok").withInternalName("ljyoxgvcltb"),
                new MetricDimension().withName("ncghkje").withDisplayName("zhbijhtxfv").withInternalName("bfs")))
            .withFillGapWithZero(true);
        model = BinaryData.fromObject(model).toObject(MetricSpecification.class);
        Assertions.assertEquals("fkbey", model.name());
        Assertions.assertEquals("wrmjmwvvjektc", model.displayName());
        Assertions.assertEquals("enhwlrs", model.displayDescription());
        Assertions.assertEquals("rzpwvlqdqgbiq", model.unit());
        Assertions.assertEquals("ihkaetcktvfc", model.aggregationType());
        Assertions.assertEquals("fsnkymuctq", model.internalMetricName());
        Assertions.assertEquals("ebrjcxe", model.dimensions().get(0).name());
        Assertions.assertEquals("uwutttxfvjrbi", model.dimensions().get(0).displayName());
        Assertions.assertEquals("hxepcyvahfnlj", model.dimensions().get(0).internalName());
        Assertions.assertEquals(true, model.fillGapWithZero());
    }
}
