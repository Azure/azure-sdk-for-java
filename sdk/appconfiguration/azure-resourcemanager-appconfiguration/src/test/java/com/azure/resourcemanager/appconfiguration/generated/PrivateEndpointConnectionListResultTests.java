// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appconfiguration.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appconfiguration.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.appconfiguration.models.ConnectionStatus;
import com.azure.resourcemanager.appconfiguration.models.PrivateEndpoint;
import com.azure.resourcemanager.appconfiguration.models.PrivateEndpointConnectionListResult;
import com.azure.resourcemanager.appconfiguration.models.PrivateLinkServiceConnectionState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningState\":\"Canceled\",\"privateEndpoint\":{\"id\":\"ahmgkbrp\"},\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"ibnuqqkpik\",\"actionsRequired\":\"None\"}},\"id\":\"gvtqagnbuynh\",\"name\":\"jggmebfsiarbu\",\"type\":\"rcvpnazzmhjrunmp\"},{\"properties\":{\"provisioningState\":\"Succeeded\",\"privateEndpoint\":{\"id\":\"rbnlankxmyskp\"},\"privateLinkServiceConnectionState\":{\"status\":\"Rejected\",\"description\":\"btkcxywnytnrsyn\",\"actionsRequired\":\"Recreate\"}},\"id\":\"dybyxczfclhaa\",\"name\":\"dbabp\",\"type\":\"lwrq\"},{\"properties\":{\"provisioningState\":\"Failed\",\"privateEndpoint\":{\"id\":\"hsucoc\"},\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"azt\",\"actionsRequired\":\"None\"}},\"id\":\"wwrq\",\"name\":\"uedck\",\"type\":\"ywbiexzfeyueax\"},{\"properties\":{\"provisioningState\":\"Updating\",\"privateEndpoint\":{\"id\":\"bhqwalmuzyoxa\"},\"privateLinkServiceConnectionState\":{\"status\":\"Rejected\",\"description\":\"zjancuxr\",\"actionsRequired\":\"Recreate\"}},\"id\":\"bavxbniwdjswzt\",\"name\":\"dbpgnxytxhp\",\"type\":\"xbzpfzab\"}],\"nextLink\":\"cuh\"}")
            .toObject(PrivateEndpointConnectionListResult.class);
        Assertions.assertEquals("ahmgkbrp", model.value().get(0).privateEndpoint().id());
        Assertions.assertEquals(ConnectionStatus.APPROVED,
            model.value().get(0).privateLinkServiceConnectionState().status());
        Assertions.assertEquals("ibnuqqkpik", model.value().get(0).privateLinkServiceConnectionState().description());
        Assertions.assertEquals("cuh", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionListResult model = new PrivateEndpointConnectionListResult().withValue(Arrays.asList(
            new PrivateEndpointConnectionInner().withPrivateEndpoint(new PrivateEndpoint().withId("ahmgkbrp"))
                .withPrivateLinkServiceConnectionState(
                    new PrivateLinkServiceConnectionState().withStatus(ConnectionStatus.APPROVED)
                        .withDescription("ibnuqqkpik")),
            new PrivateEndpointConnectionInner().withPrivateEndpoint(new PrivateEndpoint().withId("rbnlankxmyskp"))
                .withPrivateLinkServiceConnectionState(
                    new PrivateLinkServiceConnectionState().withStatus(ConnectionStatus.REJECTED)
                        .withDescription("btkcxywnytnrsyn")),
            new PrivateEndpointConnectionInner().withPrivateEndpoint(new PrivateEndpoint().withId("hsucoc"))
                .withPrivateLinkServiceConnectionState(
                    new PrivateLinkServiceConnectionState().withStatus(ConnectionStatus.APPROVED)
                        .withDescription("azt")),
            new PrivateEndpointConnectionInner().withPrivateEndpoint(new PrivateEndpoint().withId("bhqwalmuzyoxa"))
                .withPrivateLinkServiceConnectionState(
                    new PrivateLinkServiceConnectionState().withStatus(ConnectionStatus.REJECTED)
                        .withDescription("zjancuxr"))))
            .withNextLink("cuh");
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionListResult.class);
        Assertions.assertEquals("ahmgkbrp", model.value().get(0).privateEndpoint().id());
        Assertions.assertEquals(ConnectionStatus.APPROVED,
            model.value().get(0).privateLinkServiceConnectionState().status());
        Assertions.assertEquals("ibnuqqkpik", model.value().get(0).privateLinkServiceConnectionState().description());
        Assertions.assertEquals("cuh", model.nextLink());
    }
}
