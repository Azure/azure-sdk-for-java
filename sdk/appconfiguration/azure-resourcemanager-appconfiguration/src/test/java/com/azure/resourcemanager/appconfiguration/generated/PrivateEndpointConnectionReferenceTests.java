// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appconfiguration.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.appconfiguration.models.ConnectionStatus;
import com.azure.resourcemanager.appconfiguration.models.PrivateEndpoint;
import com.azure.resourcemanager.appconfiguration.models.PrivateEndpointConnectionReference;
import com.azure.resourcemanager.appconfiguration.models.PrivateLinkServiceConnectionState;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionReferenceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionReference model = BinaryData.fromString(
            "{\"id\":\"fwvuk\",\"name\":\"audccsnhs\",\"type\":\"nyejhkryhtnap\",\"properties\":{\"provisioningState\":\"Creating\",\"privateEndpoint\":{\"id\":\"jye\"},\"privateLinkServiceConnectionState\":{\"status\":\"Rejected\",\"description\":\"ni\",\"actionsRequired\":\"Recreate\"}}}")
            .toObject(PrivateEndpointConnectionReference.class);
        Assertions.assertEquals("jye", model.privateEndpoint().id());
        Assertions.assertEquals(ConnectionStatus.REJECTED, model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("ni", model.privateLinkServiceConnectionState().description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionReference model = new PrivateEndpointConnectionReference()
            .withPrivateEndpoint(new PrivateEndpoint().withId("jye"))
            .withPrivateLinkServiceConnectionState(
                new PrivateLinkServiceConnectionState().withStatus(ConnectionStatus.REJECTED).withDescription("ni"));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionReference.class);
        Assertions.assertEquals("jye", model.privateEndpoint().id());
        Assertions.assertEquals(ConnectionStatus.REJECTED, model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("ni", model.privateLinkServiceConnectionState().description());
    }
}
