/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.appconfiguration.v2020_06_01.implementation;

import org.joda.time.DateTime;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The result of a request to retrieve a key-value from the specified
 * configuration store.
 */
public class KeyValueInner {
    /**
     * The primary identifier of a key-value.
     * The key is used in unison with the label to uniquely identify a
     * key-value.
     */
    @JsonProperty(value = "key", access = JsonProperty.Access.WRITE_ONLY)
    private String key;

    /**
     * A value used to group key-values.
     * The label is used in unison with the key to uniquely identify a
     * key-value.
     */
    @JsonProperty(value = "label", access = JsonProperty.Access.WRITE_ONLY)
    private String label;

    /**
     * The value of the key-value.
     */
    @JsonProperty(value = "value", access = JsonProperty.Access.WRITE_ONLY)
    private String value;

    /**
     * The content type of the key-value's value.
     * Providing a proper content-type can enable transformations of values
     * when they are retrieved by applications.
     */
    @JsonProperty(value = "contentType", access = JsonProperty.Access.WRITE_ONLY)
    private String contentType;

    /**
     * An ETag indicating the state of a key-value within a configuration
     * store.
     */
    @JsonProperty(value = "eTag", access = JsonProperty.Access.WRITE_ONLY)
    private String eTag;

    /**
     * The last time a modifying operation was performed on the given
     * key-value.
     */
    @JsonProperty(value = "lastModified", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime lastModified;

    /**
     * A value indicating whether the key-value is locked.
     * A locked key-value may not be modified until it is unlocked.
     */
    @JsonProperty(value = "locked", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean locked;

    /**
     * A dictionary of tags that can help identify what a key-value may be
     * applicable for.
     */
    @JsonProperty(value = "tags", access = JsonProperty.Access.WRITE_ONLY)
    private Map<String, String> tags;

    /**
     * Get the primary identifier of a key-value.
     The key is used in unison with the label to uniquely identify a key-value.
     *
     * @return the key value
     */
    public String key() {
        return this.key;
    }

    /**
     * Get a value used to group key-values.
     The label is used in unison with the key to uniquely identify a key-value.
     *
     * @return the label value
     */
    public String label() {
        return this.label;
    }

    /**
     * Get the value of the key-value.
     *
     * @return the value value
     */
    public String value() {
        return this.value;
    }

    /**
     * Get the content type of the key-value's value.
     Providing a proper content-type can enable transformations of values when they are retrieved by applications.
     *
     * @return the contentType value
     */
    public String contentType() {
        return this.contentType;
    }

    /**
     * Get an ETag indicating the state of a key-value within a configuration store.
     *
     * @return the eTag value
     */
    public String eTag() {
        return this.eTag;
    }

    /**
     * Get the last time a modifying operation was performed on the given key-value.
     *
     * @return the lastModified value
     */
    public DateTime lastModified() {
        return this.lastModified;
    }

    /**
     * Get a value indicating whether the key-value is locked.
     A locked key-value may not be modified until it is unlocked.
     *
     * @return the locked value
     */
    public Boolean locked() {
        return this.locked;
    }

    /**
     * Get a dictionary of tags that can help identify what a key-value may be applicable for.
     *
     * @return the tags value
     */
    public Map<String, String> tags() {
        return this.tags;
    }

}
