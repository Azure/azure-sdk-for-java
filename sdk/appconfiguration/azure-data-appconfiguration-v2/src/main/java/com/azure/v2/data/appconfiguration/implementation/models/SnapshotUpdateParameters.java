// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.v2.data.appconfiguration.implementation.models;

import com.azure.v2.data.appconfiguration.models.ConfigurationSnapshotStatus;
import io.clientcore.core.annotations.Metadata;
import io.clientcore.core.annotations.MetadataProperties;
import io.clientcore.core.serialization.json.JsonReader;
import io.clientcore.core.serialization.json.JsonSerializable;
import io.clientcore.core.serialization.json.JsonToken;
import io.clientcore.core.serialization.json.JsonWriter;
import java.io.IOException;

/**
 * Parameters used to update a snapshot.
 */
@Metadata(properties = { MetadataProperties.FLUENT })
public final class SnapshotUpdateParameters implements JsonSerializable<SnapshotUpdateParameters> {
    /*
     * The desired status of the snapshot.
     */
    @Metadata(properties = { MetadataProperties.GENERATED })
    private ConfigurationSnapshotStatus status;

    /**
     * Creates an instance of SnapshotUpdateParameters class.
     */
    @Metadata(properties = { MetadataProperties.GENERATED })
    public SnapshotUpdateParameters() {
    }

    /**
     * Get the status property: The desired status of the snapshot.
     * 
     * @return the status value.
     */
    @Metadata(properties = { MetadataProperties.GENERATED })
    public ConfigurationSnapshotStatus getStatus() {
        return this.status;
    }

    /**
     * Set the status property: The desired status of the snapshot.
     * 
     * @param status the status value to set.
     * @return the SnapshotUpdateParameters object itself.
     */
    @Metadata(properties = { MetadataProperties.GENERATED })
    public SnapshotUpdateParameters setStatus(ConfigurationSnapshotStatus status) {
        this.status = status;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(properties = { MetadataProperties.GENERATED })
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("status", this.status == null ? null : this.status.getValue());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SnapshotUpdateParameters from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SnapshotUpdateParameters if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SnapshotUpdateParameters.
     */
    @Metadata(properties = { MetadataProperties.GENERATED })
    public static SnapshotUpdateParameters fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SnapshotUpdateParameters deserializedSnapshotUpdateParameters = new SnapshotUpdateParameters();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("status".equals(fieldName)) {
                    deserializedSnapshotUpdateParameters.status
                        = ConfigurationSnapshotStatus.fromValue(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSnapshotUpdateParameters;
        });
    }
}
