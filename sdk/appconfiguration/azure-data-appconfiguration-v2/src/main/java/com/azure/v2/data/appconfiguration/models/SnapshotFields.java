// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.v2.data.appconfiguration.models;

import io.clientcore.core.utils.ExpandableEnum;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Map;
import java.util.Objects;
import java.util.concurrent.ConcurrentHashMap;
import java.util.function.Function;

/**
 * Defines values for SnapshotFields.
 */
public final class SnapshotFields implements ExpandableEnum<String> {
    private static final Map<String, SnapshotFields> VALUES = new ConcurrentHashMap<>();

    private static final Function<String, SnapshotFields> NEW_INSTANCE = SnapshotFields::new;

    /**
     * Static value name for SnapshotFields.
     */
    public static final SnapshotFields NAME = fromValue("name");

    /**
     * Static value status for SnapshotFields.
     */
    public static final SnapshotFields STATUS = fromValue("status");

    /**
     * Static value filters for SnapshotFields.
     */
    public static final SnapshotFields FILTERS = fromValue("filters");

    /**
     * Static value composition_type for SnapshotFields.
     */
    public static final SnapshotFields COMPOSITION_TYPE = fromValue("composition_type");

    /**
     * Static value created for SnapshotFields.
     */
    public static final SnapshotFields CREATED = fromValue("created");

    /**
     * Static value expires for SnapshotFields.
     */
    public static final SnapshotFields EXPIRES = fromValue("expires");

    /**
     * Static value retention_period for SnapshotFields.
     */
    public static final SnapshotFields RETENTION_PERIOD = fromValue("retention_period");

    /**
     * Static value size for SnapshotFields.
     */
    public static final SnapshotFields SIZE = fromValue("size");

    /**
     * Static value items_count for SnapshotFields.
     */
    public static final SnapshotFields ITEMS_COUNT = fromValue("items_count");

    /**
     * Static value tags for SnapshotFields.
     */
    public static final SnapshotFields TAGS = fromValue("tags");

    /**
     * Static value etag for SnapshotFields.
     */
    public static final SnapshotFields ETAG = fromValue("etag");

    private final String value;

    private SnapshotFields(String value) {
        this.value = value;
    }

    /**
     * Creates or finds a SnapshotFields.
     * 
     * @param value a value to look for.
     * @return the corresponding SnapshotFields.
     * @throws IllegalArgumentException if value is null.
     */
    public static SnapshotFields fromValue(String value) {
        if (value == null) {
            throw new IllegalArgumentException("'value' cannot be null.");
        }
        return VALUES.computeIfAbsent(value, NEW_INSTANCE);
    }

    /**
     * Gets known SnapshotFields values.
     * 
     * @return Known SnapshotFields values.
     */
    public static Collection<SnapshotFields> values() {
        return new ArrayList<>(VALUES.values());
    }

    /**
     * Gets the value of the SnapshotFields instance.
     * 
     * @return the value of the SnapshotFields instance.
     */
    @Override
    public String getValue() {
        return this.value;
    }

    @Override
    public String toString() {
        return Objects.toString(this.value);
    }

    @Override
    public boolean equals(Object obj) {
        return this == obj;
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(this.value);
    }
}
