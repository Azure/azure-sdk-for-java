// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.data.appconfiguration.generated;

import com.azure.core.http.MatchConditions;
import com.azure.data.appconfiguration.models.CompositionType;
import com.azure.data.appconfiguration.models.KeyValueFilter;
import com.azure.data.appconfiguration.models.Snapshot;
import com.azure.data.appconfiguration.models.SnapshotStatus;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class GetsASingleKeyValueSnapshotUsingIfMatchHeaderTests extends AzureAppConfigurationClientTestBase {
    @Test
    @Disabled
    public void testGetsASingleKeyValueSnapshotUsingIfMatchHeaderTests() {
        // method invocation
        Snapshot response = azureAppConfigurationClient.getSnapshot("Prod-2022-08-01", null, null, null,
            new MatchConditions().setIfMatch("\"4f6dd610dd5e4deebc7fbaef685fb903\""));

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "name"
        Assertions.assertEquals("Prod-2022-08-01", response.getName());
        // verify property "status"
        Assertions.assertEquals(SnapshotStatus.READY, response.getStatus());
        // verify property "filters"
        List<KeyValueFilter> responseFilters = response.getFilters();
        KeyValueFilter responseFiltersFirstItem = responseFilters.iterator().next();
        Assertions.assertNotNull(responseFiltersFirstItem);
        Assertions.assertEquals("app1/*", responseFiltersFirstItem.getKey());
        Assertions.assertEquals("Production", responseFiltersFirstItem.getLabel());
        // verify property "compositionType"
        Assertions.assertEquals(CompositionType.fromString("all"), response.getCompositionType());
        // verify property "created"
        Assertions.assertNotNull(response.getCreated());
        // verify property "retentionPeriod"
        Assertions.assertEquals(2592000L, response.getRetentionPeriod());
        // verify property "size"
        Assertions.assertEquals(100000L, response.getSize());
        // verify property "itemsCount"
        Assertions.assertEquals(71L, response.getItemsCount());
        // verify property "tags"
        Assertions.assertNotNull(response.getTags());
        // verify property "etag"
        Assertions.assertEquals("4f6dd610dd5e4deebc7fbaef685fb903", response.getEtag());
    }
}
