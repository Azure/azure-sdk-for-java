// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.data.appconfiguration.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Enables filtering of key-values. Syntax reference:
 * https://aka.ms/azconfig/docs/restapisnapshots.
 */
@Fluent
public final class KeyValueFilter implements JsonSerializable<KeyValueFilter> {
    /*
     * Filters key-values by their key field.
     */
    @Generated
    private final String key;

    /*
     * Filters key-values by their label field.
     */
    @Generated
    private String label;

    /*
     * Filters key-values by their tags field.
     */
    @Generated
    private List<String> tags;

    /**
     * Creates an instance of KeyValueFilter class.
     * 
     * @param key the key value to set.
     */
    @Generated
    public KeyValueFilter(String key) {
        this.key = key;
    }

    /**
     * Get the key property: Filters key-values by their key field.
     * 
     * @return the key value.
     */
    @Generated
    public String getKey() {
        return this.key;
    }

    /**
     * Get the label property: Filters key-values by their label field.
     * 
     * @return the label value.
     */
    @Generated
    public String getLabel() {
        return this.label;
    }

    /**
     * Set the label property: Filters key-values by their label field.
     * 
     * @param label the label value to set.
     * @return the KeyValueFilter object itself.
     */
    @Generated
    public KeyValueFilter setLabel(String label) {
        this.label = label;
        return this;
    }

    /**
     * Get the tags property: Filters key-values by their tags field.
     * 
     * @return the tags value.
     */
    @Generated
    public List<String> getTags() {
        return this.tags;
    }

    /**
     * Set the tags property: Filters key-values by their tags field.
     * 
     * @param tags the tags value to set.
     * @return the KeyValueFilter object itself.
     */
    @Generated
    public KeyValueFilter setTags(List<String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("key", this.key);
        jsonWriter.writeStringField("label", this.label);
        jsonWriter.writeArrayField("tags", this.tags, (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of KeyValueFilter from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of KeyValueFilter if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the KeyValueFilter.
     */
    @Generated
    public static KeyValueFilter fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String key = null;
            String label = null;
            List<String> tags = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("key".equals(fieldName)) {
                    key = reader.getString();
                } else if ("label".equals(fieldName)) {
                    label = reader.getString();
                } else if ("tags".equals(fieldName)) {
                    tags = reader.readArray(reader1 -> reader1.getString());
                } else {
                    reader.skipChildren();
                }
            }
            KeyValueFilter deserializedKeyValueFilter = new KeyValueFilter(key);
            deserializedKeyValueFilter.label = label;
            deserializedKeyValueFilter.tags = tags;

            return deserializedKeyValueFilter;
        });
    }
}
