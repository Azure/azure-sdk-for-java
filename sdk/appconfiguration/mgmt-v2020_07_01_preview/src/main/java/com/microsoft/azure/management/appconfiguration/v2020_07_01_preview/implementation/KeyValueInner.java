/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.appconfiguration.v2020_07_01_preview.implementation;

import org.joda.time.DateTime;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.ProxyResource;

/**
 * The key-value resource along with all resource properties.
 */
@JsonFlatten
public class KeyValueInner extends ProxyResource {
    /**
     * The primary identifier of a key-value.
     * The key is used in unison with the label to uniquely identify a
     * key-value.
     */
    @JsonProperty(value = "properties.key", access = JsonProperty.Access.WRITE_ONLY)
    private String key;

    /**
     * A value used to group key-values.
     * The label is used in unison with the key to uniquely identify a
     * key-value.
     */
    @JsonProperty(value = "properties.label", access = JsonProperty.Access.WRITE_ONLY)
    private String label;

    /**
     * The value of the key-value.
     */
    @JsonProperty(value = "properties.value")
    private String value;

    /**
     * The content type of the key-value's value.
     * Providing a proper content-type can enable transformations of values
     * when they are retrieved by applications.
     */
    @JsonProperty(value = "properties.contentType")
    private String contentType;

    /**
     * An ETag indicating the state of a key-value within a configuration
     * store.
     */
    @JsonProperty(value = "properties.eTag", access = JsonProperty.Access.WRITE_ONLY)
    private String eTag;

    /**
     * The last time a modifying operation was performed on the given
     * key-value.
     */
    @JsonProperty(value = "properties.lastModified", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime lastModified;

    /**
     * A value indicating whether the key-value is locked.
     * A locked key-value may not be modified until it is unlocked.
     */
    @JsonProperty(value = "properties.locked", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean locked;

    /**
     * A dictionary of tags that can help identify what a key-value may be
     * applicable for.
     */
    @JsonProperty(value = "properties.tags")
    private Map<String, String> tags;

    /**
     * Get the primary identifier of a key-value.
     The key is used in unison with the label to uniquely identify a key-value.
     *
     * @return the key value
     */
    public String key() {
        return this.key;
    }

    /**
     * Get a value used to group key-values.
     The label is used in unison with the key to uniquely identify a key-value.
     *
     * @return the label value
     */
    public String label() {
        return this.label;
    }

    /**
     * Get the value of the key-value.
     *
     * @return the value value
     */
    public String value() {
        return this.value;
    }

    /**
     * Set the value of the key-value.
     *
     * @param value the value value to set
     * @return the KeyValueInner object itself.
     */
    public KeyValueInner withValue(String value) {
        this.value = value;
        return this;
    }

    /**
     * Get the content type of the key-value's value.
     Providing a proper content-type can enable transformations of values when they are retrieved by applications.
     *
     * @return the contentType value
     */
    public String contentType() {
        return this.contentType;
    }

    /**
     * Set the content type of the key-value's value.
     Providing a proper content-type can enable transformations of values when they are retrieved by applications.
     *
     * @param contentType the contentType value to set
     * @return the KeyValueInner object itself.
     */
    public KeyValueInner withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }

    /**
     * Get an ETag indicating the state of a key-value within a configuration store.
     *
     * @return the eTag value
     */
    public String eTag() {
        return this.eTag;
    }

    /**
     * Get the last time a modifying operation was performed on the given key-value.
     *
     * @return the lastModified value
     */
    public DateTime lastModified() {
        return this.lastModified;
    }

    /**
     * Get a value indicating whether the key-value is locked.
     A locked key-value may not be modified until it is unlocked.
     *
     * @return the locked value
     */
    public Boolean locked() {
        return this.locked;
    }

    /**
     * Get a dictionary of tags that can help identify what a key-value may be applicable for.
     *
     * @return the tags value
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set a dictionary of tags that can help identify what a key-value may be applicable for.
     *
     * @param tags the tags value to set
     * @return the KeyValueInner object itself.
     */
    public KeyValueInner withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

}
