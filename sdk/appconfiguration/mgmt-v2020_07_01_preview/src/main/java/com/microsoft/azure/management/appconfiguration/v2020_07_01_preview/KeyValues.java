/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.appconfiguration.v2020_07_01_preview;

import com.microsoft.azure.arm.collection.SupportsCreating;
import rx.Completable;
import rx.Observable;
import com.microsoft.azure.management.appconfiguration.v2020_07_01_preview.implementation.KeyValuesInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing KeyValues.
 */
public interface KeyValues extends SupportsCreating<KeyValue.DefinitionStages.Blank>, HasInner<KeyValuesInner> {
    /**
     * Gets the properties of the specified key-value.
     *
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param configStoreName The name of the configuration store.
     * @param keyValueName Identifier of key and label combination. Key and label are joined by $ character. Label is optional.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<KeyValue> getAsync(String resourceGroupName, String configStoreName, String keyValueName);

    /**
     * Lists the key-values for a given configuration store.
     *
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param configStoreName The name of the configuration store.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<KeyValue> listByConfigurationStoreAsync(final String resourceGroupName, final String configStoreName);

    /**
     * Deletes a key-value.
     *
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param configStoreName The name of the configuration store.
     * @param keyValueName Identifier of key and label combination. Key and label are joined by $ character. Label is optional.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteAsync(String resourceGroupName, String configStoreName, String keyValueName);

}
