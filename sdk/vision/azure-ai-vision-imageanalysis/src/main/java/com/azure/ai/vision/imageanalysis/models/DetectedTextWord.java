// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.vision.imageanalysis.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * A word object consisting of a contiguous sequence of characters. For non-space delimited languages,
 * such as Chinese, Japanese, and Korean, each character is represented as its own word.
 */
@Immutable
public final class DetectedTextWord {

    /*
     * Text content of the word.
     */
    @Generated
    @JsonProperty(value = "text")
    private String text;

    /*
     * A bounding polygon around the word. At the moment only quadrilaterals are supported (represented by 4 image
     * points).
     */
    @Generated
    @JsonProperty(value = "boundingPolygon")
    private List<ImagePoint> boundingPolygon;

    /*
     * The level of confidence that the word was detected. Confidence scores span the range of 0.0 to 1.0 (inclusive),
     * with higher values indicating a higher confidence of detection.
     */
    @Generated
    @JsonProperty(value = "confidence")
    private double confidence;

    /**
     * Creates an instance of DetectedTextWord class.
     *
     * @param text the text value to set.
     * @param boundingPolygon the boundingPolygon value to set.
     * @param confidence the confidence value to set.
     */
    @Generated
    @JsonCreator
    private DetectedTextWord(@JsonProperty(value = "text") String text,
        @JsonProperty(value = "boundingPolygon") List<ImagePoint> boundingPolygon,
        @JsonProperty(value = "confidence") double confidence) {
        this.text = text;
        this.boundingPolygon = boundingPolygon;
        this.confidence = confidence;
    }

    /**
     * Get the text property: Text content of the word.
     *
     * @return the text value.
     */
    @Generated
    public String getText() {
        return this.text;
    }

    /**
     * Get the boundingPolygon property: A bounding polygon around the word. At the moment only quadrilaterals are
     * supported (represented by 4 image points).
     *
     * @return the boundingPolygon value.
     */
    @Generated
    public List<ImagePoint> getBoundingPolygon() {
        return this.boundingPolygon;
    }

    /**
     * Get the confidence property: The level of confidence that the word was detected. Confidence scores span the
     * range of 0.0 to 1.0 (inclusive), with higher values indicating a higher confidence of detection.
     *
     * @return the confidence value.
     */
    @Generated
    public double getConfidence() {
        return this.confidence;
    }
}
