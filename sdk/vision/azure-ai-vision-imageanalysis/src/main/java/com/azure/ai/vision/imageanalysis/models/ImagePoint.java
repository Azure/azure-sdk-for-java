// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.vision.imageanalysis.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Represents the coordinates of a single pixel in the image.
 */
@Immutable
public final class ImagePoint {

    /*
     * The horizontal x-coordinate of this point, in pixels. Zero values corresponds to the left-most pixels in the
     * image.
     */
    @Generated
    @JsonProperty(value = "x")
    private int x;

    /*
     * The vertical y-coordinate of this point, in pixels. Zero values corresponds to the top-most pixels in the image.
     */
    @Generated
    @JsonProperty(value = "y")
    private int y;

    /**
     * Creates an instance of ImagePoint class.
     *
     * @param x the x value to set.
     * @param y the y value to set.
     */
    @Generated
    @JsonCreator
    private ImagePoint(@JsonProperty(value = "x") int x, @JsonProperty(value = "y") int y) {
        this.x = x;
        this.y = y;
    }

    /**
     * Get the x property: The horizontal x-coordinate of this point, in pixels. Zero values corresponds to the
     * left-most pixels in the image.
     *
     * @return the x value.
     */
    @Generated
    public int getX() {
        return this.x;
    }

    /**
     * Get the y property: The vertical y-coordinate of this point, in pixels. Zero values corresponds to the top-most
     * pixels in the image.
     *
     * @return the y value.
     */
    @Generated
    public int getY() {
        return this.y;
    }

    /**
     * Returns a compact string containing the image point values in a style suitable for printing.
     *
     * @return A string containing the image point values.
     */
    public String toString() {
        return "(x=" + this.getX() + ", y=" + this.getY() + ")";
    }
}
