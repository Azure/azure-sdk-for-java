/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datamigration.v2018_07_15_preview;

import org.joda.time.DateTime;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Information of backup set.
 */
public class BackupSetInfo {
    /**
     * Id for the set of backup files.
     */
    @JsonProperty(value = "backupSetId")
    private String backupSetId;

    /**
     * First log sequence number of the backup file.
     */
    @JsonProperty(value = "firstLsn")
    private String firstLsn;

    /**
     * Last log sequence number of the backup file.
     */
    @JsonProperty(value = "lastLsn")
    private String lastLsn;

    /**
     * Last modified time of the backup file in share location.
     */
    @JsonProperty(value = "lastModifiedTime")
    private DateTime lastModifiedTime;

    /**
     * Enum of the different backup types. Possible values include: 'Database',
     * 'TransactionLog', 'File', 'DifferentialDatabase', 'DifferentialFile',
     * 'Partial', 'DifferentialPartial'.
     */
    @JsonProperty(value = "backupType")
    private BackupType backupType;

    /**
     * List of files in the backup set.
     */
    @JsonProperty(value = "listOfBackupFiles")
    private List<BackupFileInfo> listOfBackupFiles;

    /**
     * Name of the database to which the backup set belongs.
     */
    @JsonProperty(value = "databaseName")
    private String databaseName;

    /**
     * Date and time that the backup operation began.
     */
    @JsonProperty(value = "backupStartDate")
    private DateTime backupStartDate;

    /**
     * Date and time that the backup operation finished.
     */
    @JsonProperty(value = "backupFinishedDate")
    private DateTime backupFinishedDate;

    /**
     * Whether the backup set is restored or not.
     */
    @JsonProperty(value = "isBackupRestored")
    private Boolean isBackupRestored;

    /**
     * Get id for the set of backup files.
     *
     * @return the backupSetId value
     */
    public String backupSetId() {
        return this.backupSetId;
    }

    /**
     * Set id for the set of backup files.
     *
     * @param backupSetId the backupSetId value to set
     * @return the BackupSetInfo object itself.
     */
    public BackupSetInfo withBackupSetId(String backupSetId) {
        this.backupSetId = backupSetId;
        return this;
    }

    /**
     * Get first log sequence number of the backup file.
     *
     * @return the firstLsn value
     */
    public String firstLsn() {
        return this.firstLsn;
    }

    /**
     * Set first log sequence number of the backup file.
     *
     * @param firstLsn the firstLsn value to set
     * @return the BackupSetInfo object itself.
     */
    public BackupSetInfo withFirstLsn(String firstLsn) {
        this.firstLsn = firstLsn;
        return this;
    }

    /**
     * Get last log sequence number of the backup file.
     *
     * @return the lastLsn value
     */
    public String lastLsn() {
        return this.lastLsn;
    }

    /**
     * Set last log sequence number of the backup file.
     *
     * @param lastLsn the lastLsn value to set
     * @return the BackupSetInfo object itself.
     */
    public BackupSetInfo withLastLsn(String lastLsn) {
        this.lastLsn = lastLsn;
        return this;
    }

    /**
     * Get last modified time of the backup file in share location.
     *
     * @return the lastModifiedTime value
     */
    public DateTime lastModifiedTime() {
        return this.lastModifiedTime;
    }

    /**
     * Set last modified time of the backup file in share location.
     *
     * @param lastModifiedTime the lastModifiedTime value to set
     * @return the BackupSetInfo object itself.
     */
    public BackupSetInfo withLastModifiedTime(DateTime lastModifiedTime) {
        this.lastModifiedTime = lastModifiedTime;
        return this;
    }

    /**
     * Get enum of the different backup types. Possible values include: 'Database', 'TransactionLog', 'File', 'DifferentialDatabase', 'DifferentialFile', 'Partial', 'DifferentialPartial'.
     *
     * @return the backupType value
     */
    public BackupType backupType() {
        return this.backupType;
    }

    /**
     * Set enum of the different backup types. Possible values include: 'Database', 'TransactionLog', 'File', 'DifferentialDatabase', 'DifferentialFile', 'Partial', 'DifferentialPartial'.
     *
     * @param backupType the backupType value to set
     * @return the BackupSetInfo object itself.
     */
    public BackupSetInfo withBackupType(BackupType backupType) {
        this.backupType = backupType;
        return this;
    }

    /**
     * Get list of files in the backup set.
     *
     * @return the listOfBackupFiles value
     */
    public List<BackupFileInfo> listOfBackupFiles() {
        return this.listOfBackupFiles;
    }

    /**
     * Set list of files in the backup set.
     *
     * @param listOfBackupFiles the listOfBackupFiles value to set
     * @return the BackupSetInfo object itself.
     */
    public BackupSetInfo withListOfBackupFiles(List<BackupFileInfo> listOfBackupFiles) {
        this.listOfBackupFiles = listOfBackupFiles;
        return this;
    }

    /**
     * Get name of the database to which the backup set belongs.
     *
     * @return the databaseName value
     */
    public String databaseName() {
        return this.databaseName;
    }

    /**
     * Set name of the database to which the backup set belongs.
     *
     * @param databaseName the databaseName value to set
     * @return the BackupSetInfo object itself.
     */
    public BackupSetInfo withDatabaseName(String databaseName) {
        this.databaseName = databaseName;
        return this;
    }

    /**
     * Get date and time that the backup operation began.
     *
     * @return the backupStartDate value
     */
    public DateTime backupStartDate() {
        return this.backupStartDate;
    }

    /**
     * Set date and time that the backup operation began.
     *
     * @param backupStartDate the backupStartDate value to set
     * @return the BackupSetInfo object itself.
     */
    public BackupSetInfo withBackupStartDate(DateTime backupStartDate) {
        this.backupStartDate = backupStartDate;
        return this;
    }

    /**
     * Get date and time that the backup operation finished.
     *
     * @return the backupFinishedDate value
     */
    public DateTime backupFinishedDate() {
        return this.backupFinishedDate;
    }

    /**
     * Set date and time that the backup operation finished.
     *
     * @param backupFinishedDate the backupFinishedDate value to set
     * @return the BackupSetInfo object itself.
     */
    public BackupSetInfo withBackupFinishedDate(DateTime backupFinishedDate) {
        this.backupFinishedDate = backupFinishedDate;
        return this;
    }

    /**
     * Get whether the backup set is restored or not.
     *
     * @return the isBackupRestored value
     */
    public Boolean isBackupRestored() {
        return this.isBackupRestored;
    }

    /**
     * Set whether the backup set is restored or not.
     *
     * @param isBackupRestored the isBackupRestored value to set
     * @return the BackupSetInfo object itself.
     */
    public BackupSetInfo withIsBackupRestored(Boolean isBackupRestored) {
        this.isBackupRestored = isBackupRestored;
        return this;
    }

}
