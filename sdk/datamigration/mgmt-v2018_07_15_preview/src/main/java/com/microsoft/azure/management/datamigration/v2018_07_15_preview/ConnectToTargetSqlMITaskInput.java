/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datamigration.v2018_07_15_preview;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Input for the task that validates connection to Azure SQL Database Managed
 * Instance.
 */
public class ConnectToTargetSqlMITaskInput {
    /**
     * Connection information for target SQL Server.
     */
    @JsonProperty(value = "targetConnectionInfo", required = true)
    private SqlConnectionInfo targetConnectionInfo;

    /**
     * Flag for whether to collect logins from target SQL MI server.
     */
    @JsonProperty(value = "collectLogins")
    private Boolean collectLogins;

    /**
     * Flag for whether to collect agent jobs from target SQL MI server.
     */
    @JsonProperty(value = "collectAgentJobs")
    private Boolean collectAgentJobs;

    /**
     * Flag for whether to validate SSIS catalog is reachable on the target SQL
     * MI server.
     */
    @JsonProperty(value = "validateSsisCatalogOnly")
    private Boolean validateSsisCatalogOnly;

    /**
     * Get connection information for target SQL Server.
     *
     * @return the targetConnectionInfo value
     */
    public SqlConnectionInfo targetConnectionInfo() {
        return this.targetConnectionInfo;
    }

    /**
     * Set connection information for target SQL Server.
     *
     * @param targetConnectionInfo the targetConnectionInfo value to set
     * @return the ConnectToTargetSqlMITaskInput object itself.
     */
    public ConnectToTargetSqlMITaskInput withTargetConnectionInfo(SqlConnectionInfo targetConnectionInfo) {
        this.targetConnectionInfo = targetConnectionInfo;
        return this;
    }

    /**
     * Get flag for whether to collect logins from target SQL MI server.
     *
     * @return the collectLogins value
     */
    public Boolean collectLogins() {
        return this.collectLogins;
    }

    /**
     * Set flag for whether to collect logins from target SQL MI server.
     *
     * @param collectLogins the collectLogins value to set
     * @return the ConnectToTargetSqlMITaskInput object itself.
     */
    public ConnectToTargetSqlMITaskInput withCollectLogins(Boolean collectLogins) {
        this.collectLogins = collectLogins;
        return this;
    }

    /**
     * Get flag for whether to collect agent jobs from target SQL MI server.
     *
     * @return the collectAgentJobs value
     */
    public Boolean collectAgentJobs() {
        return this.collectAgentJobs;
    }

    /**
     * Set flag for whether to collect agent jobs from target SQL MI server.
     *
     * @param collectAgentJobs the collectAgentJobs value to set
     * @return the ConnectToTargetSqlMITaskInput object itself.
     */
    public ConnectToTargetSqlMITaskInput withCollectAgentJobs(Boolean collectAgentJobs) {
        this.collectAgentJobs = collectAgentJobs;
        return this;
    }

    /**
     * Get flag for whether to validate SSIS catalog is reachable on the target SQL MI server.
     *
     * @return the validateSsisCatalogOnly value
     */
    public Boolean validateSsisCatalogOnly() {
        return this.validateSsisCatalogOnly;
    }

    /**
     * Set flag for whether to validate SSIS catalog is reachable on the target SQL MI server.
     *
     * @param validateSsisCatalogOnly the validateSsisCatalogOnly value to set
     * @return the ConnectToTargetSqlMITaskInput object itself.
     */
    public ConnectToTargetSqlMITaskInput withValidateSsisCatalogOnly(Boolean validateSsisCatalogOnly) {
        this.validateSsisCatalogOnly = validateSsisCatalogOnly;
        return this;
    }

}
