/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datamigration.v2018_03_31_preview.implementation;

import com.microsoft.azure.management.datamigration.v2018_03_31_preview.NameCheckFailureReason;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Indicates whether a proposed resource name is available.
 */
public class NameAvailabilityResponseInner {
    /**
     * If true, the name is valid and available. If false, 'reason' describes
     * why not.
     */
    @JsonProperty(value = "nameAvailable")
    private Boolean nameAvailable;

    /**
     * The reason why the name is not available, if nameAvailable is false.
     * Possible values include: 'AlreadyExists', 'Invalid'.
     */
    @JsonProperty(value = "reason")
    private NameCheckFailureReason reason;

    /**
     * The localized reason why the name is not available, if nameAvailable is
     * false.
     */
    @JsonProperty(value = "message")
    private String message;

    /**
     * Get if true, the name is valid and available. If false, 'reason' describes why not.
     *
     * @return the nameAvailable value
     */
    public Boolean nameAvailable() {
        return this.nameAvailable;
    }

    /**
     * Set if true, the name is valid and available. If false, 'reason' describes why not.
     *
     * @param nameAvailable the nameAvailable value to set
     * @return the NameAvailabilityResponseInner object itself.
     */
    public NameAvailabilityResponseInner withNameAvailable(Boolean nameAvailable) {
        this.nameAvailable = nameAvailable;
        return this;
    }

    /**
     * Get the reason why the name is not available, if nameAvailable is false. Possible values include: 'AlreadyExists', 'Invalid'.
     *
     * @return the reason value
     */
    public NameCheckFailureReason reason() {
        return this.reason;
    }

    /**
     * Set the reason why the name is not available, if nameAvailable is false. Possible values include: 'AlreadyExists', 'Invalid'.
     *
     * @param reason the reason value to set
     * @return the NameAvailabilityResponseInner object itself.
     */
    public NameAvailabilityResponseInner withReason(NameCheckFailureReason reason) {
        this.reason = reason;
        return this;
    }

    /**
     * Get the localized reason why the name is not available, if nameAvailable is false.
     *
     * @return the message value
     */
    public String message() {
        return this.message;
    }

    /**
     * Set the localized reason why the name is not available, if nameAvailable is false.
     *
     * @param message the message value to set
     * @return the NameAvailabilityResponseInner object itself.
     */
    public NameAvailabilityResponseInner withMessage(String message) {
        this.message = message;
        return this;
    }

}
