// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.datamigration.fluent.models.DatabaseMigrationSqlDbInner;
import com.azure.resourcemanager.datamigration.models.DatabaseMigrationPropertiesSqlDb;
import com.azure.resourcemanager.datamigration.models.DatabaseMigrationSqlDb;
import com.azure.resourcemanager.datamigration.models.MigrationOperationInput;
import java.util.UUID;

public final class DatabaseMigrationSqlDbImpl
    implements DatabaseMigrationSqlDb, DatabaseMigrationSqlDb.Definition, DatabaseMigrationSqlDb.Update {
    private DatabaseMigrationSqlDbInner innerObject;

    private final com.azure.resourcemanager.datamigration.DataMigrationManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public DatabaseMigrationPropertiesSqlDb properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public DatabaseMigrationSqlDbInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.datamigration.DataMigrationManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String sqlDbInstanceName;

    private String targetDbName;

    public DatabaseMigrationSqlDbImpl withExistingServer(String resourceGroupName, String sqlDbInstanceName) {
        this.resourceGroupName = resourceGroupName;
        this.sqlDbInstanceName = sqlDbInstanceName;
        return this;
    }

    public DatabaseMigrationSqlDb create() {
        this.innerObject = serviceManager.serviceClient()
            .getDatabaseMigrationsSqlDbs()
            .createOrUpdate(resourceGroupName, sqlDbInstanceName, targetDbName, this.innerModel(), Context.NONE);
        return this;
    }

    public DatabaseMigrationSqlDb create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getDatabaseMigrationsSqlDbs()
            .createOrUpdate(resourceGroupName, sqlDbInstanceName, targetDbName, this.innerModel(), context);
        return this;
    }

    DatabaseMigrationSqlDbImpl(String name,
        com.azure.resourcemanager.datamigration.DataMigrationManager serviceManager) {
        this.innerObject = new DatabaseMigrationSqlDbInner();
        this.serviceManager = serviceManager;
        this.targetDbName = name;
    }

    public DatabaseMigrationSqlDbImpl update() {
        return this;
    }

    public DatabaseMigrationSqlDb apply() {
        this.innerObject = serviceManager.serviceClient()
            .getDatabaseMigrationsSqlDbs()
            .createOrUpdate(resourceGroupName, sqlDbInstanceName, targetDbName, this.innerModel(), Context.NONE);
        return this;
    }

    public DatabaseMigrationSqlDb apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getDatabaseMigrationsSqlDbs()
            .createOrUpdate(resourceGroupName, sqlDbInstanceName, targetDbName, this.innerModel(), context);
        return this;
    }

    DatabaseMigrationSqlDbImpl(DatabaseMigrationSqlDbInner innerObject,
        com.azure.resourcemanager.datamigration.DataMigrationManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.sqlDbInstanceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "servers");
        this.targetDbName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "databaseMigrations");
    }

    public DatabaseMigrationSqlDb refresh() {
        UUID localMigrationOperationId = null;
        String localExpand = null;
        this.innerObject = serviceManager.serviceClient()
            .getDatabaseMigrationsSqlDbs()
            .getWithResponse(resourceGroupName, sqlDbInstanceName, targetDbName, localMigrationOperationId, localExpand,
                Context.NONE)
            .getValue();
        return this;
    }

    public DatabaseMigrationSqlDb refresh(Context context) {
        UUID localMigrationOperationId = null;
        String localExpand = null;
        this.innerObject = serviceManager.serviceClient()
            .getDatabaseMigrationsSqlDbs()
            .getWithResponse(resourceGroupName, sqlDbInstanceName, targetDbName, localMigrationOperationId, localExpand,
                context)
            .getValue();
        return this;
    }

    public void cancel(MigrationOperationInput parameters) {
        serviceManager.databaseMigrationsSqlDbs()
            .cancel(resourceGroupName, sqlDbInstanceName, targetDbName, parameters);
    }

    public void cancel(MigrationOperationInput parameters, Context context) {
        serviceManager.databaseMigrationsSqlDbs()
            .cancel(resourceGroupName, sqlDbInstanceName, targetDbName, parameters, context);
    }

    public DatabaseMigrationSqlDb retry(MigrationOperationInput migrationOperationInput) {
        return serviceManager.databaseMigrationsSqlDbs()
            .retry(resourceGroupName, sqlDbInstanceName, targetDbName, migrationOperationInput);
    }

    public DatabaseMigrationSqlDb retry(MigrationOperationInput migrationOperationInput, Context context) {
        return serviceManager.databaseMigrationsSqlDbs()
            .retry(resourceGroupName, sqlDbInstanceName, targetDbName, migrationOperationInput, context);
    }

    public DatabaseMigrationSqlDbImpl withProperties(DatabaseMigrationPropertiesSqlDb properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
