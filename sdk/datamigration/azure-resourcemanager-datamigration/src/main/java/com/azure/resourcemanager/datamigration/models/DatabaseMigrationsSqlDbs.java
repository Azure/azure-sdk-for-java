// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import java.util.UUID;

/** Resource collection API of DatabaseMigrationsSqlDbs. */
public interface DatabaseMigrationsSqlDbs {
    /**
     * Retrieve the Database Migration resource.
     *
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this value from
     *     the Azure Resource Manager API or the portal.
     * @param sqlDbInstanceName The sqlDbInstanceName parameter.
     * @param targetDbName The name of the target database.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return database Migration Resource for SQL Database.
     */
    DatabaseMigrationSqlDb get(String resourceGroupName, String sqlDbInstanceName, String targetDbName);

    /**
     * Retrieve the Database Migration resource.
     *
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this value from
     *     the Azure Resource Manager API or the portal.
     * @param sqlDbInstanceName The sqlDbInstanceName parameter.
     * @param targetDbName The name of the target database.
     * @param migrationOperationId Optional migration operation ID. If this is provided, then details of migration
     *     operation for that ID are retrieved. If not provided (default), then details related to most recent or
     *     current operation are retrieved.
     * @param expand Complete migration details be included in the response.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return database Migration Resource for SQL Database along with {@link Response}.
     */
    Response<DatabaseMigrationSqlDb> getWithResponse(
        String resourceGroupName,
        String sqlDbInstanceName,
        String targetDbName,
        UUID migrationOperationId,
        String expand,
        Context context);

    /**
     * Delete Database Migration resource.
     *
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this value from
     *     the Azure Resource Manager API or the portal.
     * @param sqlDbInstanceName The sqlDbInstanceName parameter.
     * @param targetDbName The name of the target database.
     * @param force Optional force delete boolean. If this is provided as true, migration will be deleted even if
     *     active.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String sqlDbInstanceName, String targetDbName, Boolean force);

    /**
     * Delete Database Migration resource.
     *
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this value from
     *     the Azure Resource Manager API or the portal.
     * @param sqlDbInstanceName The sqlDbInstanceName parameter.
     * @param targetDbName The name of the target database.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String sqlDbInstanceName, String targetDbName);

    /**
     * Delete Database Migration resource.
     *
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this value from
     *     the Azure Resource Manager API or the portal.
     * @param sqlDbInstanceName The sqlDbInstanceName parameter.
     * @param targetDbName The name of the target database.
     * @param force Optional force delete boolean. If this is provided as true, migration will be deleted even if
     *     active.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(
        String resourceGroupName, String sqlDbInstanceName, String targetDbName, Boolean force, Context context);

    /**
     * Stop on going migration for the database.
     *
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this value from
     *     the Azure Resource Manager API or the portal.
     * @param sqlDbInstanceName The sqlDbInstanceName parameter.
     * @param targetDbName The name of the target database.
     * @param parameters Required migration operation ID for which cancel will be initiated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void cancel(
        String resourceGroupName, String sqlDbInstanceName, String targetDbName, MigrationOperationInput parameters);

    /**
     * Stop on going migration for the database.
     *
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this value from
     *     the Azure Resource Manager API or the portal.
     * @param sqlDbInstanceName The sqlDbInstanceName parameter.
     * @param targetDbName The name of the target database.
     * @param parameters Required migration operation ID for which cancel will be initiated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void cancel(
        String resourceGroupName,
        String sqlDbInstanceName,
        String targetDbName,
        MigrationOperationInput parameters,
        Context context);

    /**
     * Retrieve the Database Migration resource.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return database Migration Resource for SQL Database along with {@link Response}.
     */
    DatabaseMigrationSqlDb getById(String id);

    /**
     * Retrieve the Database Migration resource.
     *
     * @param id the resource ID.
     * @param migrationOperationId Optional migration operation ID. If this is provided, then details of migration
     *     operation for that ID are retrieved. If not provided (default), then details related to most recent or
     *     current operation are retrieved.
     * @param expand Complete migration details be included in the response.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return database Migration Resource for SQL Database along with {@link Response}.
     */
    Response<DatabaseMigrationSqlDb> getByIdWithResponse(
        String id, UUID migrationOperationId, String expand, Context context);

    /**
     * Delete Database Migration resource.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete Database Migration resource.
     *
     * @param id the resource ID.
     * @param force Optional force delete boolean. If this is provided as true, migration will be deleted even if
     *     active.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Boolean force, Context context);

    /**
     * Begins definition for a new DatabaseMigrationSqlDb resource.
     *
     * @param name resource name.
     * @return the first stage of the new DatabaseMigrationSqlDb definition.
     */
    DatabaseMigrationSqlDb.DefinitionStages.Blank define(String name);
}
