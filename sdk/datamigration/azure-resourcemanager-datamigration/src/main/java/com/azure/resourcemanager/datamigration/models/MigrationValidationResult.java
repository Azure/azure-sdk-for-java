// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Migration Validation Result. */
@Fluent
public final class MigrationValidationResult {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(MigrationValidationResult.class);

    /*
     * Migration validation result identifier
     */
    @JsonProperty(value = "id", access = JsonProperty.Access.WRITE_ONLY)
    private String id;

    /*
     * Migration Identifier
     */
    @JsonProperty(value = "migrationId", access = JsonProperty.Access.WRITE_ONLY)
    private String migrationId;

    /*
     * Validation summary results for each database
     */
    @JsonProperty(value = "summaryResults")
    private Map<String, MigrationValidationDatabaseSummaryResult> summaryResults;

    /*
     * Current status of validation at the migration level. Status from the
     * database validation result status will be aggregated here.
     */
    @JsonProperty(value = "status", access = JsonProperty.Access.WRITE_ONLY)
    private ValidationStatus status;

    /**
     * Get the id property: Migration validation result identifier.
     *
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the migrationId property: Migration Identifier.
     *
     * @return the migrationId value.
     */
    public String migrationId() {
        return this.migrationId;
    }

    /**
     * Get the summaryResults property: Validation summary results for each database.
     *
     * @return the summaryResults value.
     */
    public Map<String, MigrationValidationDatabaseSummaryResult> summaryResults() {
        return this.summaryResults;
    }

    /**
     * Set the summaryResults property: Validation summary results for each database.
     *
     * @param summaryResults the summaryResults value to set.
     * @return the MigrationValidationResult object itself.
     */
    public MigrationValidationResult withSummaryResults(
        Map<String, MigrationValidationDatabaseSummaryResult> summaryResults) {
        this.summaryResults = summaryResults;
        return this;
    }

    /**
     * Get the status property: Current status of validation at the migration level. Status from the database validation
     * result status will be aggregated here.
     *
     * @return the status value.
     */
    public ValidationStatus status() {
        return this.status;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (summaryResults() != null) {
            summaryResults()
                .values()
                .forEach(
                    e -> {
                        if (e != null) {
                            e.validate();
                        }
                    });
        }
    }
}
