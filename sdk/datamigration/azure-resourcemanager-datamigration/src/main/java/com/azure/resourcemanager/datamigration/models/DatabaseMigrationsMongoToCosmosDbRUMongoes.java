// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of DatabaseMigrationsMongoToCosmosDbRUMongoes.
 */
public interface DatabaseMigrationsMongoToCosmosDbRUMongoes {
    /**
     * Get Database Migration resource.
     * 
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this value from
     * the Azure Resource Manager API or the portal.
     * @param targetResourceName The name of the target resource/account.
     * @param migrationName Name of the migration.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return database Migration resource along with {@link Response}.
     */
    Response<DatabaseMigrationCosmosDbMongo> getWithResponse(String resourceGroupName, String targetResourceName,
        String migrationName, Context context);

    /**
     * Get Database Migration resource.
     * 
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this value from
     * the Azure Resource Manager API or the portal.
     * @param targetResourceName The name of the target resource/account.
     * @param migrationName Name of the migration.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return database Migration resource.
     */
    DatabaseMigrationCosmosDbMongo get(String resourceGroupName, String targetResourceName, String migrationName);

    /**
     * Delete Database Migration resource.
     * 
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this value from
     * the Azure Resource Manager API or the portal.
     * @param targetResourceName The name of the target resource/account.
     * @param migrationName Name of the migration.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String targetResourceName, String migrationName);

    /**
     * Delete Database Migration resource.
     * 
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this value from
     * the Azure Resource Manager API or the portal.
     * @param targetResourceName The name of the target resource/account.
     * @param migrationName Name of the migration.
     * @param force Optional force delete boolean. If this is provided as true, migration will be deleted even if
     * active.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String targetResourceName, String migrationName, Boolean force,
        Context context);

    /**
     * Get Database Migration resources for the scope.
     * 
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this value from
     * the Azure Resource Manager API or the portal.
     * @param targetResourceName The name of the target resource/account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return database Migration resources for the scope as paginated response with {@link PagedIterable}.
     */
    PagedIterable<DatabaseMigrationCosmosDbMongo> getForScope(String resourceGroupName, String targetResourceName);

    /**
     * Get Database Migration resources for the scope.
     * 
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this value from
     * the Azure Resource Manager API or the portal.
     * @param targetResourceName The name of the target resource/account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return database Migration resources for the scope as paginated response with {@link PagedIterable}.
     */
    PagedIterable<DatabaseMigrationCosmosDbMongo> getForScope(String resourceGroupName, String targetResourceName,
        Context context);

    /**
     * Get Database Migration resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return database Migration resource along with {@link Response}.
     */
    DatabaseMigrationCosmosDbMongo getById(String id);

    /**
     * Get Database Migration resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return database Migration resource along with {@link Response}.
     */
    Response<DatabaseMigrationCosmosDbMongo> getByIdWithResponse(String id, Context context);

    /**
     * Delete Database Migration resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete Database Migration resource.
     * 
     * @param id the resource ID.
     * @param force Optional force delete boolean. If this is provided as true, migration will be deleted even if
     * active.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Boolean force, Context context);

    /**
     * Begins definition for a new DatabaseMigrationCosmosDbMongo resource.
     * 
     * @param name resource name.
     * @return the first stage of the new DatabaseMigrationCosmosDbMongo definition.
     */
    DatabaseMigrationCosmosDbMongo.DefinitionStages.Blank define(String name);
}
