// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Database input for migrate schema Sql Server to Azure SQL Server scenario. */
@Fluent
public final class MigrateSchemaSqlServerSqlDbDatabaseInput {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(MigrateSchemaSqlServerSqlDbDatabaseInput.class);

    /*
     * Name of source database
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * Name of target database
     */
    @JsonProperty(value = "targetDatabaseName")
    private String targetDatabaseName;

    /*
     * Database schema migration settings
     */
    @JsonProperty(value = "schemaSetting")
    private SchemaMigrationSetting schemaSetting;

    /**
     * Get the name property: Name of source database.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Name of source database.
     *
     * @param name the name value to set.
     * @return the MigrateSchemaSqlServerSqlDbDatabaseInput object itself.
     */
    public MigrateSchemaSqlServerSqlDbDatabaseInput withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the targetDatabaseName property: Name of target database.
     *
     * @return the targetDatabaseName value.
     */
    public String targetDatabaseName() {
        return this.targetDatabaseName;
    }

    /**
     * Set the targetDatabaseName property: Name of target database.
     *
     * @param targetDatabaseName the targetDatabaseName value to set.
     * @return the MigrateSchemaSqlServerSqlDbDatabaseInput object itself.
     */
    public MigrateSchemaSqlServerSqlDbDatabaseInput withTargetDatabaseName(String targetDatabaseName) {
        this.targetDatabaseName = targetDatabaseName;
        return this;
    }

    /**
     * Get the schemaSetting property: Database schema migration settings.
     *
     * @return the schemaSetting value.
     */
    public SchemaMigrationSetting schemaSetting() {
        return this.schemaSetting;
    }

    /**
     * Set the schemaSetting property: Database schema migration settings.
     *
     * @param schemaSetting the schemaSetting value to set.
     * @return the MigrateSchemaSqlServerSqlDbDatabaseInput object itself.
     */
    public MigrateSchemaSqlServerSqlDbDatabaseInput withSchemaSetting(SchemaMigrationSetting schemaSetting) {
        this.schemaSetting = schemaSetting;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (schemaSetting() != null) {
            schemaSetting().validate();
        }
    }
}
