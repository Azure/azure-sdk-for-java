// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Input for the task that validates connection to Azure Database for PostgreSQL and target server requirements for
 * Oracle source.
 */
@Fluent
public final class ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput
    implements JsonSerializable<ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput> {
    /*
     * Connection information for target Azure Database for PostgreSQL server
     */
    private PostgreSqlConnectionInfo targetConnectionInfo;

    /**
     * Creates an instance of ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput class.
     */
    public ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput() {
    }

    /**
     * Get the targetConnectionInfo property: Connection information for target Azure Database for PostgreSQL server.
     * 
     * @return the targetConnectionInfo value.
     */
    public PostgreSqlConnectionInfo targetConnectionInfo() {
        return this.targetConnectionInfo;
    }

    /**
     * Set the targetConnectionInfo property: Connection information for target Azure Database for PostgreSQL server.
     * 
     * @param targetConnectionInfo the targetConnectionInfo value to set.
     * @return the ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput object itself.
     */
    public ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput
        withTargetConnectionInfo(PostgreSqlConnectionInfo targetConnectionInfo) {
        this.targetConnectionInfo = targetConnectionInfo;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (targetConnectionInfo() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property targetConnectionInfo in model ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput"));
        } else {
            targetConnectionInfo().validate();
        }
    }

    private static final ClientLogger LOGGER
        = new ClientLogger(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("targetConnectionInfo", this.targetConnectionInfo);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput if the JsonReader was pointing to
     * an instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput.
     */
    public static ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput deserializedConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput
                = new ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("targetConnectionInfo".equals(fieldName)) {
                    deserializedConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput.targetConnectionInfo
                        = PostgreSqlConnectionInfo.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput;
        });
    }
}
