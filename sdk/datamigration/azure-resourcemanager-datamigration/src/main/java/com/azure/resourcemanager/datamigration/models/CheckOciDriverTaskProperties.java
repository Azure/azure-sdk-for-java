// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;
import java.util.Map;

/** Properties for the task that checks for OCI drivers. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "taskType")
@JsonTypeName("Service.Check.OCI")
@Fluent
public final class CheckOciDriverTaskProperties extends ProjectTaskProperties {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(CheckOciDriverTaskProperties.class);

    /*
     * Input for the service task to check for OCI drivers.
     */
    @JsonProperty(value = "input")
    private CheckOciDriverTaskInput input;

    /*
     * Task output. This is ignored if submitted.
     */
    @JsonProperty(value = "output", access = JsonProperty.Access.WRITE_ONLY)
    private List<CheckOciDriverTaskOutput> output;

    /**
     * Get the input property: Input for the service task to check for OCI drivers.
     *
     * @return the input value.
     */
    public CheckOciDriverTaskInput input() {
        return this.input;
    }

    /**
     * Set the input property: Input for the service task to check for OCI drivers.
     *
     * @param input the input value to set.
     * @return the CheckOciDriverTaskProperties object itself.
     */
    public CheckOciDriverTaskProperties withInput(CheckOciDriverTaskInput input) {
        this.input = input;
        return this;
    }

    /**
     * Get the output property: Task output. This is ignored if submitted.
     *
     * @return the output value.
     */
    public List<CheckOciDriverTaskOutput> output() {
        return this.output;
    }

    /** {@inheritDoc} */
    @Override
    public CheckOciDriverTaskProperties withClientData(Map<String, String> clientData) {
        super.withClientData(clientData);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (input() != null) {
            input().validate();
        }
        if (output() != null) {
            output().forEach(e -> e.validate());
        }
    }
}
