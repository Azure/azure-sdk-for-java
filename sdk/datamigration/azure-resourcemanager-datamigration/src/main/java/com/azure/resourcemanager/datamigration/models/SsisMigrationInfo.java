// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** SSIS migration info with SSIS store type, overwrite policy. */
@Fluent
public final class SsisMigrationInfo {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(SsisMigrationInfo.class);

    /*
     * The SSIS store type of source, only SSIS catalog is supported now in DMS
     */
    @JsonProperty(value = "ssisStoreType")
    private SsisStoreType ssisStoreType;

    /*
     * The overwrite option for the SSIS project migration
     */
    @JsonProperty(value = "projectOverwriteOption")
    private SsisMigrationOverwriteOption projectOverwriteOption;

    /*
     * The overwrite option for the SSIS environment migration
     */
    @JsonProperty(value = "environmentOverwriteOption")
    private SsisMigrationOverwriteOption environmentOverwriteOption;

    /**
     * Get the ssisStoreType property: The SSIS store type of source, only SSIS catalog is supported now in DMS.
     *
     * @return the ssisStoreType value.
     */
    public SsisStoreType ssisStoreType() {
        return this.ssisStoreType;
    }

    /**
     * Set the ssisStoreType property: The SSIS store type of source, only SSIS catalog is supported now in DMS.
     *
     * @param ssisStoreType the ssisStoreType value to set.
     * @return the SsisMigrationInfo object itself.
     */
    public SsisMigrationInfo withSsisStoreType(SsisStoreType ssisStoreType) {
        this.ssisStoreType = ssisStoreType;
        return this;
    }

    /**
     * Get the projectOverwriteOption property: The overwrite option for the SSIS project migration.
     *
     * @return the projectOverwriteOption value.
     */
    public SsisMigrationOverwriteOption projectOverwriteOption() {
        return this.projectOverwriteOption;
    }

    /**
     * Set the projectOverwriteOption property: The overwrite option for the SSIS project migration.
     *
     * @param projectOverwriteOption the projectOverwriteOption value to set.
     * @return the SsisMigrationInfo object itself.
     */
    public SsisMigrationInfo withProjectOverwriteOption(SsisMigrationOverwriteOption projectOverwriteOption) {
        this.projectOverwriteOption = projectOverwriteOption;
        return this;
    }

    /**
     * Get the environmentOverwriteOption property: The overwrite option for the SSIS environment migration.
     *
     * @return the environmentOverwriteOption value.
     */
    public SsisMigrationOverwriteOption environmentOverwriteOption() {
        return this.environmentOverwriteOption;
    }

    /**
     * Set the environmentOverwriteOption property: The overwrite option for the SSIS environment migration.
     *
     * @param environmentOverwriteOption the environmentOverwriteOption value to set.
     * @return the SsisMigrationInfo object itself.
     */
    public SsisMigrationInfo withEnvironmentOverwriteOption(SsisMigrationOverwriteOption environmentOverwriteOption) {
        this.environmentOverwriteOption = environmentOverwriteOption;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
