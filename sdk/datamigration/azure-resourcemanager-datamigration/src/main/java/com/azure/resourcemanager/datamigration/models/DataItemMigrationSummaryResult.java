// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * Basic summary of a data item migration.
 */
@Immutable
public class DataItemMigrationSummaryResult implements JsonSerializable<DataItemMigrationSummaryResult> {
    /*
     * Name of the item
     */
    private String name;

    /*
     * Migration start time
     */
    private OffsetDateTime startedOn;

    /*
     * Migration end time
     */
    private OffsetDateTime endedOn;

    /*
     * Current state of migration
     */
    private MigrationState state;

    /*
     * Status message
     */
    private String statusMessage;

    /*
     * Number of items
     */
    private Long itemsCount;

    /*
     * Number of successfully completed items
     */
    private Long itemsCompletedCount;

    /*
     * Wildcard string prefix to use for querying all errors of the item
     */
    private String errorPrefix;

    /*
     * Wildcard string prefix to use for querying all sub-tem results of the item
     */
    private String resultPrefix;

    /**
     * Creates an instance of DataItemMigrationSummaryResult class.
     */
    public DataItemMigrationSummaryResult() {
    }

    /**
     * Get the name property: Name of the item.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Name of the item.
     * 
     * @param name the name value to set.
     * @return the DataItemMigrationSummaryResult object itself.
     */
    DataItemMigrationSummaryResult withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the startedOn property: Migration start time.
     * 
     * @return the startedOn value.
     */
    public OffsetDateTime startedOn() {
        return this.startedOn;
    }

    /**
     * Set the startedOn property: Migration start time.
     * 
     * @param startedOn the startedOn value to set.
     * @return the DataItemMigrationSummaryResult object itself.
     */
    DataItemMigrationSummaryResult withStartedOn(OffsetDateTime startedOn) {
        this.startedOn = startedOn;
        return this;
    }

    /**
     * Get the endedOn property: Migration end time.
     * 
     * @return the endedOn value.
     */
    public OffsetDateTime endedOn() {
        return this.endedOn;
    }

    /**
     * Set the endedOn property: Migration end time.
     * 
     * @param endedOn the endedOn value to set.
     * @return the DataItemMigrationSummaryResult object itself.
     */
    DataItemMigrationSummaryResult withEndedOn(OffsetDateTime endedOn) {
        this.endedOn = endedOn;
        return this;
    }

    /**
     * Get the state property: Current state of migration.
     * 
     * @return the state value.
     */
    public MigrationState state() {
        return this.state;
    }

    /**
     * Set the state property: Current state of migration.
     * 
     * @param state the state value to set.
     * @return the DataItemMigrationSummaryResult object itself.
     */
    DataItemMigrationSummaryResult withState(MigrationState state) {
        this.state = state;
        return this;
    }

    /**
     * Get the statusMessage property: Status message.
     * 
     * @return the statusMessage value.
     */
    public String statusMessage() {
        return this.statusMessage;
    }

    /**
     * Set the statusMessage property: Status message.
     * 
     * @param statusMessage the statusMessage value to set.
     * @return the DataItemMigrationSummaryResult object itself.
     */
    DataItemMigrationSummaryResult withStatusMessage(String statusMessage) {
        this.statusMessage = statusMessage;
        return this;
    }

    /**
     * Get the itemsCount property: Number of items.
     * 
     * @return the itemsCount value.
     */
    public Long itemsCount() {
        return this.itemsCount;
    }

    /**
     * Set the itemsCount property: Number of items.
     * 
     * @param itemsCount the itemsCount value to set.
     * @return the DataItemMigrationSummaryResult object itself.
     */
    DataItemMigrationSummaryResult withItemsCount(Long itemsCount) {
        this.itemsCount = itemsCount;
        return this;
    }

    /**
     * Get the itemsCompletedCount property: Number of successfully completed items.
     * 
     * @return the itemsCompletedCount value.
     */
    public Long itemsCompletedCount() {
        return this.itemsCompletedCount;
    }

    /**
     * Set the itemsCompletedCount property: Number of successfully completed items.
     * 
     * @param itemsCompletedCount the itemsCompletedCount value to set.
     * @return the DataItemMigrationSummaryResult object itself.
     */
    DataItemMigrationSummaryResult withItemsCompletedCount(Long itemsCompletedCount) {
        this.itemsCompletedCount = itemsCompletedCount;
        return this;
    }

    /**
     * Get the errorPrefix property: Wildcard string prefix to use for querying all errors of the item.
     * 
     * @return the errorPrefix value.
     */
    public String errorPrefix() {
        return this.errorPrefix;
    }

    /**
     * Set the errorPrefix property: Wildcard string prefix to use for querying all errors of the item.
     * 
     * @param errorPrefix the errorPrefix value to set.
     * @return the DataItemMigrationSummaryResult object itself.
     */
    DataItemMigrationSummaryResult withErrorPrefix(String errorPrefix) {
        this.errorPrefix = errorPrefix;
        return this;
    }

    /**
     * Get the resultPrefix property: Wildcard string prefix to use for querying all sub-tem results of the item.
     * 
     * @return the resultPrefix value.
     */
    public String resultPrefix() {
        return this.resultPrefix;
    }

    /**
     * Set the resultPrefix property: Wildcard string prefix to use for querying all sub-tem results of the item.
     * 
     * @param resultPrefix the resultPrefix value to set.
     * @return the DataItemMigrationSummaryResult object itself.
     */
    DataItemMigrationSummaryResult withResultPrefix(String resultPrefix) {
        this.resultPrefix = resultPrefix;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DataItemMigrationSummaryResult from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DataItemMigrationSummaryResult if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the DataItemMigrationSummaryResult.
     */
    public static DataItemMigrationSummaryResult fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DataItemMigrationSummaryResult deserializedDataItemMigrationSummaryResult
                = new DataItemMigrationSummaryResult();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedDataItemMigrationSummaryResult.name = reader.getString();
                } else if ("startedOn".equals(fieldName)) {
                    deserializedDataItemMigrationSummaryResult.startedOn = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("endedOn".equals(fieldName)) {
                    deserializedDataItemMigrationSummaryResult.endedOn = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("state".equals(fieldName)) {
                    deserializedDataItemMigrationSummaryResult.state = MigrationState.fromString(reader.getString());
                } else if ("statusMessage".equals(fieldName)) {
                    deserializedDataItemMigrationSummaryResult.statusMessage = reader.getString();
                } else if ("itemsCount".equals(fieldName)) {
                    deserializedDataItemMigrationSummaryResult.itemsCount = reader.getNullable(JsonReader::getLong);
                } else if ("itemsCompletedCount".equals(fieldName)) {
                    deserializedDataItemMigrationSummaryResult.itemsCompletedCount
                        = reader.getNullable(JsonReader::getLong);
                } else if ("errorPrefix".equals(fieldName)) {
                    deserializedDataItemMigrationSummaryResult.errorPrefix = reader.getString();
                } else if ("resultPrefix".equals(fieldName)) {
                    deserializedDataItemMigrationSummaryResult.resultPrefix = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDataItemMigrationSummaryResult;
        });
    }
}
