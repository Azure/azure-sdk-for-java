// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** Describes a connection to a MongoDB data source. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type")
@JsonTypeName("MongoDbConnectionInfo")
@Fluent
public final class MongoDbConnectionInfo extends ConnectionInfo {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(MongoDbConnectionInfo.class);

    /*
     * A MongoDB connection string or blob container URL. The user name and
     * password can be specified here or in the userName and password
     * properties
     */
    @JsonProperty(value = "connectionString", required = true)
    private String connectionString;

    /**
     * Get the connectionString property: A MongoDB connection string or blob container URL. The user name and password
     * can be specified here or in the userName and password properties.
     *
     * @return the connectionString value.
     */
    public String connectionString() {
        return this.connectionString;
    }

    /**
     * Set the connectionString property: A MongoDB connection string or blob container URL. The user name and password
     * can be specified here or in the userName and password properties.
     *
     * @param connectionString the connectionString value to set.
     * @return the MongoDbConnectionInfo object itself.
     */
    public MongoDbConnectionInfo withConnectionString(String connectionString) {
        this.connectionString = connectionString;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public MongoDbConnectionInfo withUsername(String username) {
        super.withUsername(username);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public MongoDbConnectionInfo withPassword(String password) {
        super.withPassword(password);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (connectionString() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property connectionString in model MongoDbConnectionInfo"));
        }
    }
}
