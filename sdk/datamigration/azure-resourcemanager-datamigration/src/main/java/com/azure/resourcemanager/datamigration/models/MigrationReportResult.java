// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Migration validation report result, contains the url for downloading the generated report.
 */
@Immutable
public final class MigrationReportResult implements JsonSerializable<MigrationReportResult> {
    /*
     * Migration validation result identifier
     */
    private String id;

    /*
     * The url of the report.
     */
    private String reportUrl;

    /**
     * Creates an instance of MigrationReportResult class.
     */
    public MigrationReportResult() {
    }

    /**
     * Get the id property: Migration validation result identifier.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the reportUrl property: The url of the report.
     * 
     * @return the reportUrl value.
     */
    public String reportUrl() {
        return this.reportUrl;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MigrationReportResult from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MigrationReportResult if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the MigrationReportResult.
     */
    public static MigrationReportResult fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MigrationReportResult deserializedMigrationReportResult = new MigrationReportResult();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedMigrationReportResult.id = reader.getString();
                } else if ("reportUrl".equals(fieldName)) {
                    deserializedMigrationReportResult.reportUrl = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMigrationReportResult;
        });
    }
}
