// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** Information for connecting to Oracle server. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type")
@JsonTypeName("OracleConnectionInfo")
@Fluent
public final class OracleConnectionInfo extends ConnectionInfo {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(OracleConnectionInfo.class);

    /*
     * EZConnect or TNSName connection string.
     */
    @JsonProperty(value = "dataSource", required = true)
    private String dataSource;

    /**
     * Get the dataSource property: EZConnect or TNSName connection string.
     *
     * @return the dataSource value.
     */
    public String dataSource() {
        return this.dataSource;
    }

    /**
     * Set the dataSource property: EZConnect or TNSName connection string.
     *
     * @param dataSource the dataSource value to set.
     * @return the OracleConnectionInfo object itself.
     */
    public OracleConnectionInfo withDataSource(String dataSource) {
        this.dataSource = dataSource;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public OracleConnectionInfo withUsername(String username) {
        super.withUsername(username);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public OracleConnectionInfo withPassword(String password) {
        super.withPassword(password);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (dataSource() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property dataSource in model OracleConnectionInfo"));
        }
    }
}
