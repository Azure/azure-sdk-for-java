// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Input for the task that gets the list of tables contained within a provided list of Oracle schemas. */
@Fluent
public final class GetUserTablesOracleTaskInput {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(GetUserTablesOracleTaskInput.class);

    /*
     * Information for connecting to Oracle source
     */
    @JsonProperty(value = "connectionInfo", required = true)
    private OracleConnectionInfo connectionInfo;

    /*
     * List of Oracle schemas for which to collect tables
     */
    @JsonProperty(value = "selectedSchemas", required = true)
    private List<String> selectedSchemas;

    /**
     * Get the connectionInfo property: Information for connecting to Oracle source.
     *
     * @return the connectionInfo value.
     */
    public OracleConnectionInfo connectionInfo() {
        return this.connectionInfo;
    }

    /**
     * Set the connectionInfo property: Information for connecting to Oracle source.
     *
     * @param connectionInfo the connectionInfo value to set.
     * @return the GetUserTablesOracleTaskInput object itself.
     */
    public GetUserTablesOracleTaskInput withConnectionInfo(OracleConnectionInfo connectionInfo) {
        this.connectionInfo = connectionInfo;
        return this;
    }

    /**
     * Get the selectedSchemas property: List of Oracle schemas for which to collect tables.
     *
     * @return the selectedSchemas value.
     */
    public List<String> selectedSchemas() {
        return this.selectedSchemas;
    }

    /**
     * Set the selectedSchemas property: List of Oracle schemas for which to collect tables.
     *
     * @param selectedSchemas the selectedSchemas value to set.
     * @return the GetUserTablesOracleTaskInput object itself.
     */
    public GetUserTablesOracleTaskInput withSelectedSchemas(List<String> selectedSchemas) {
        this.selectedSchemas = selectedSchemas;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (connectionInfo() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property connectionInfo in model GetUserTablesOracleTaskInput"));
        } else {
            connectionInfo().validate();
        }
        if (selectedSchemas() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property selectedSchemas in model GetUserTablesOracleTaskInput"));
        }
    }
}
