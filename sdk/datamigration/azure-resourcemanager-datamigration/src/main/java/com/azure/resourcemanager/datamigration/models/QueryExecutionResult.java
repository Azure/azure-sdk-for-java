// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Describes query analysis results for execution in source and target.
 */
@Immutable
public final class QueryExecutionResult implements JsonSerializable<QueryExecutionResult> {
    /*
     * Query text retrieved from the source server
     */
    private String queryText;

    /*
     * Total no. of statements in the batch
     */
    private Long statementsInBatch;

    /*
     * Query analysis result from the source
     */
    private ExecutionStatistics sourceResult;

    /*
     * Query analysis result from the target
     */
    private ExecutionStatistics targetResult;

    /**
     * Creates an instance of QueryExecutionResult class.
     */
    public QueryExecutionResult() {
    }

    /**
     * Get the queryText property: Query text retrieved from the source server.
     * 
     * @return the queryText value.
     */
    public String queryText() {
        return this.queryText;
    }

    /**
     * Get the statementsInBatch property: Total no. of statements in the batch.
     * 
     * @return the statementsInBatch value.
     */
    public Long statementsInBatch() {
        return this.statementsInBatch;
    }

    /**
     * Get the sourceResult property: Query analysis result from the source.
     * 
     * @return the sourceResult value.
     */
    public ExecutionStatistics sourceResult() {
        return this.sourceResult;
    }

    /**
     * Get the targetResult property: Query analysis result from the target.
     * 
     * @return the targetResult value.
     */
    public ExecutionStatistics targetResult() {
        return this.targetResult;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (sourceResult() != null) {
            sourceResult().validate();
        }
        if (targetResult() != null) {
            targetResult().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of QueryExecutionResult from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of QueryExecutionResult if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the QueryExecutionResult.
     */
    public static QueryExecutionResult fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            QueryExecutionResult deserializedQueryExecutionResult = new QueryExecutionResult();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("queryText".equals(fieldName)) {
                    deserializedQueryExecutionResult.queryText = reader.getString();
                } else if ("statementsInBatch".equals(fieldName)) {
                    deserializedQueryExecutionResult.statementsInBatch = reader.getNullable(JsonReader::getLong);
                } else if ("sourceResult".equals(fieldName)) {
                    deserializedQueryExecutionResult.sourceResult = ExecutionStatistics.fromJson(reader);
                } else if ("targetResult".equals(fieldName)) {
                    deserializedQueryExecutionResult.targetResult = ExecutionStatistics.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedQueryExecutionResult;
        });
    }
}
