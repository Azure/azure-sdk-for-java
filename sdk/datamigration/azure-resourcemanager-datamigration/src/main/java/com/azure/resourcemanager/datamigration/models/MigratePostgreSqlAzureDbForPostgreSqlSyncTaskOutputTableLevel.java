// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * The MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel model.
 */
@Immutable
public final class MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel
    extends MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput {
    /*
     * Result type
     */
    private String resultType = "TableLevelOutput";

    /*
     * Name of the table
     */
    private String tableName;

    /*
     * Name of the database
     */
    private String databaseName;

    /*
     * Number of applied inserts
     */
    private Long cdcInsertCounter;

    /*
     * Number of applied updates
     */
    private Long cdcUpdateCounter;

    /*
     * Number of applied deletes
     */
    private Long cdcDeleteCounter;

    /*
     * Estimate to finish full load
     */
    private OffsetDateTime fullLoadEstFinishTime;

    /*
     * Full load start time
     */
    private OffsetDateTime fullLoadStartedOn;

    /*
     * Full load end time
     */
    private OffsetDateTime fullLoadEndedOn;

    /*
     * Number of rows applied in full load
     */
    private Long fullLoadTotalRows;

    /*
     * Current state of the table migration
     */
    private SyncTableMigrationState state;

    /*
     * Total number of applied changes
     */
    private Long totalChangesApplied;

    /*
     * Number of data errors occurred
     */
    private Long dataErrorsCounter;

    /*
     * Last modified time on target
     */
    private OffsetDateTime lastModifiedTime;

    /*
     * Result identifier
     */
    private String id;

    /**
     * Creates an instance of MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel class.
     */
    public MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel() {
    }

    /**
     * Get the resultType property: Result type.
     * 
     * @return the resultType value.
     */
    @Override
    public String resultType() {
        return this.resultType;
    }

    /**
     * Get the tableName property: Name of the table.
     * 
     * @return the tableName value.
     */
    public String tableName() {
        return this.tableName;
    }

    /**
     * Get the databaseName property: Name of the database.
     * 
     * @return the databaseName value.
     */
    public String databaseName() {
        return this.databaseName;
    }

    /**
     * Get the cdcInsertCounter property: Number of applied inserts.
     * 
     * @return the cdcInsertCounter value.
     */
    public Long cdcInsertCounter() {
        return this.cdcInsertCounter;
    }

    /**
     * Get the cdcUpdateCounter property: Number of applied updates.
     * 
     * @return the cdcUpdateCounter value.
     */
    public Long cdcUpdateCounter() {
        return this.cdcUpdateCounter;
    }

    /**
     * Get the cdcDeleteCounter property: Number of applied deletes.
     * 
     * @return the cdcDeleteCounter value.
     */
    public Long cdcDeleteCounter() {
        return this.cdcDeleteCounter;
    }

    /**
     * Get the fullLoadEstFinishTime property: Estimate to finish full load.
     * 
     * @return the fullLoadEstFinishTime value.
     */
    public OffsetDateTime fullLoadEstFinishTime() {
        return this.fullLoadEstFinishTime;
    }

    /**
     * Get the fullLoadStartedOn property: Full load start time.
     * 
     * @return the fullLoadStartedOn value.
     */
    public OffsetDateTime fullLoadStartedOn() {
        return this.fullLoadStartedOn;
    }

    /**
     * Get the fullLoadEndedOn property: Full load end time.
     * 
     * @return the fullLoadEndedOn value.
     */
    public OffsetDateTime fullLoadEndedOn() {
        return this.fullLoadEndedOn;
    }

    /**
     * Get the fullLoadTotalRows property: Number of rows applied in full load.
     * 
     * @return the fullLoadTotalRows value.
     */
    public Long fullLoadTotalRows() {
        return this.fullLoadTotalRows;
    }

    /**
     * Get the state property: Current state of the table migration.
     * 
     * @return the state value.
     */
    public SyncTableMigrationState state() {
        return this.state;
    }

    /**
     * Get the totalChangesApplied property: Total number of applied changes.
     * 
     * @return the totalChangesApplied value.
     */
    public Long totalChangesApplied() {
        return this.totalChangesApplied;
    }

    /**
     * Get the dataErrorsCounter property: Number of data errors occurred.
     * 
     * @return the dataErrorsCounter value.
     */
    public Long dataErrorsCounter() {
        return this.dataErrorsCounter;
    }

    /**
     * Get the lastModifiedTime property: Last modified time on target.
     * 
     * @return the lastModifiedTime value.
     */
    public OffsetDateTime lastModifiedTime() {
        return this.lastModifiedTime;
    }

    /**
     * Get the id property: Result identifier.
     * 
     * @return the id value.
     */
    @Override
    public String id() {
        return this.id;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("resultType", this.resultType);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel if the JsonReader was
     * pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the
     * MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel.
     */
    public static MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel deserializedMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel
                = new MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel.id = reader.getString();
                } else if ("resultType".equals(fieldName)) {
                    deserializedMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel.resultType
                        = reader.getString();
                } else if ("tableName".equals(fieldName)) {
                    deserializedMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel.tableName
                        = reader.getString();
                } else if ("databaseName".equals(fieldName)) {
                    deserializedMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel.databaseName
                        = reader.getString();
                } else if ("cdcInsertCounter".equals(fieldName)) {
                    deserializedMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel.cdcInsertCounter
                        = reader.getNullable(JsonReader::getLong);
                } else if ("cdcUpdateCounter".equals(fieldName)) {
                    deserializedMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel.cdcUpdateCounter
                        = reader.getNullable(JsonReader::getLong);
                } else if ("cdcDeleteCounter".equals(fieldName)) {
                    deserializedMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel.cdcDeleteCounter
                        = reader.getNullable(JsonReader::getLong);
                } else if ("fullLoadEstFinishTime".equals(fieldName)) {
                    deserializedMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel.fullLoadEstFinishTime
                        = reader
                            .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("fullLoadStartedOn".equals(fieldName)) {
                    deserializedMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel.fullLoadStartedOn = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("fullLoadEndedOn".equals(fieldName)) {
                    deserializedMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel.fullLoadEndedOn = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("fullLoadTotalRows".equals(fieldName)) {
                    deserializedMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel.fullLoadTotalRows
                        = reader.getNullable(JsonReader::getLong);
                } else if ("state".equals(fieldName)) {
                    deserializedMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel.state
                        = SyncTableMigrationState.fromString(reader.getString());
                } else if ("totalChangesApplied".equals(fieldName)) {
                    deserializedMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel.totalChangesApplied
                        = reader.getNullable(JsonReader::getLong);
                } else if ("dataErrorsCounter".equals(fieldName)) {
                    deserializedMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel.dataErrorsCounter
                        = reader.getNullable(JsonReader::getLong);
                } else if ("lastModifiedTime".equals(fieldName)) {
                    deserializedMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel.lastModifiedTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel;
        });
    }
}
