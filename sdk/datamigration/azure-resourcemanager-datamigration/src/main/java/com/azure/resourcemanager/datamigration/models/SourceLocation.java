// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Source Location details of backups. */
@Fluent
public final class SourceLocation {
    /*
     * Source File share.
     */
    @JsonProperty(value = "fileShare")
    private SqlFileShare fileShare;

    /*
     * Source Azure Blob.
     */
    @JsonProperty(value = "azureBlob")
    private AzureBlob azureBlob;

    /*
     * Backup storage Type.
     */
    @JsonProperty(value = "fileStorageType", access = JsonProperty.Access.WRITE_ONLY)
    private String fileStorageType;

    /**
     * Get the fileShare property: Source File share.
     *
     * @return the fileShare value.
     */
    public SqlFileShare fileShare() {
        return this.fileShare;
    }

    /**
     * Set the fileShare property: Source File share.
     *
     * @param fileShare the fileShare value to set.
     * @return the SourceLocation object itself.
     */
    public SourceLocation withFileShare(SqlFileShare fileShare) {
        this.fileShare = fileShare;
        return this;
    }

    /**
     * Get the azureBlob property: Source Azure Blob.
     *
     * @return the azureBlob value.
     */
    public AzureBlob azureBlob() {
        return this.azureBlob;
    }

    /**
     * Set the azureBlob property: Source Azure Blob.
     *
     * @param azureBlob the azureBlob value to set.
     * @return the SourceLocation object itself.
     */
    public SourceLocation withAzureBlob(AzureBlob azureBlob) {
        this.azureBlob = azureBlob;
        return this;
    }

    /**
     * Get the fileStorageType property: Backup storage Type.
     *
     * @return the fileStorageType value.
     */
    public String fileStorageType() {
        return this.fileStorageType;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (fileShare() != null) {
            fileShare().validate();
        }
        if (azureBlob() != null) {
            azureBlob().validate();
        }
    }
}
