// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;
import java.util.Map;

/** Properties for the task that migrates MySQL databases to Azure Database for MySQL for offline migrations. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "taskType")
@JsonTypeName("Migrate.MySql.AzureDbForMySql")
@Fluent
public final class MigrateMySqlAzureDbForMySqlOfflineTaskProperties extends ProjectTaskProperties {
    /*
     * Task input
     */
    @JsonProperty(value = "input")
    private MigrateMySqlAzureDbForMySqlOfflineTaskInput input;

    /*
     * Task output. This is ignored if submitted.
     */
    @JsonProperty(value = "output", access = JsonProperty.Access.WRITE_ONLY)
    private List<MigrateMySqlAzureDbForMySqlOfflineTaskOutput> output;

    /*
     * whether the task can be cloned or not
     */
    @JsonProperty(value = "isCloneable")
    private Boolean isCloneable;

    /*
     * Task id
     */
    @JsonProperty(value = "taskId")
    private String taskId;

    /**
     * Get the input property: Task input.
     *
     * @return the input value.
     */
    public MigrateMySqlAzureDbForMySqlOfflineTaskInput input() {
        return this.input;
    }

    /**
     * Set the input property: Task input.
     *
     * @param input the input value to set.
     * @return the MigrateMySqlAzureDbForMySqlOfflineTaskProperties object itself.
     */
    public MigrateMySqlAzureDbForMySqlOfflineTaskProperties withInput(
        MigrateMySqlAzureDbForMySqlOfflineTaskInput input) {
        this.input = input;
        return this;
    }

    /**
     * Get the output property: Task output. This is ignored if submitted.
     *
     * @return the output value.
     */
    public List<MigrateMySqlAzureDbForMySqlOfflineTaskOutput> output() {
        return this.output;
    }

    /**
     * Get the isCloneable property: whether the task can be cloned or not.
     *
     * @return the isCloneable value.
     */
    public Boolean isCloneable() {
        return this.isCloneable;
    }

    /**
     * Set the isCloneable property: whether the task can be cloned or not.
     *
     * @param isCloneable the isCloneable value to set.
     * @return the MigrateMySqlAzureDbForMySqlOfflineTaskProperties object itself.
     */
    public MigrateMySqlAzureDbForMySqlOfflineTaskProperties withIsCloneable(Boolean isCloneable) {
        this.isCloneable = isCloneable;
        return this;
    }

    /**
     * Get the taskId property: Task id.
     *
     * @return the taskId value.
     */
    public String taskId() {
        return this.taskId;
    }

    /**
     * Set the taskId property: Task id.
     *
     * @param taskId the taskId value to set.
     * @return the MigrateMySqlAzureDbForMySqlOfflineTaskProperties object itself.
     */
    public MigrateMySqlAzureDbForMySqlOfflineTaskProperties withTaskId(String taskId) {
        this.taskId = taskId;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public MigrateMySqlAzureDbForMySqlOfflineTaskProperties withClientData(Map<String, String> clientData) {
        super.withClientData(clientData);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (input() != null) {
            input().validate();
        }
        if (output() != null) {
            output().forEach(e -> e.validate());
        }
    }
}
