// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.generated;

import com.azure.resourcemanager.datamigration.fluent.models.DatabaseMigrationCosmosDbMongoInner;
import com.azure.resourcemanager.datamigration.models.DatabaseMigrationPropertiesCosmosDbMongo;
import com.azure.resourcemanager.datamigration.models.MongoConnectionInformation;
import com.azure.resourcemanager.datamigration.models.MongoMigrationCollection;
import java.util.Arrays;

/**
 * Samples for DatabaseMigrationsMongoToCosmosDbvCoreMongo Create.
 */
public final class DatabaseMigrationsMongoToCosmosDbvCoreMongoCreateSamples {
    /*
     * x-ms-original-file:
     * specification/datamigration/resource-manager/Microsoft.DataMigration/stable/2025-06-30/examples/
     * CosmosDbMongoCreateOrUpdateDatabaseMigrationMIN.json
     */
    /**
     * Sample code: Create Mongo to CosmosDb Mongo(vCore) Database Migration resource with Minimum parameters.
     * 
     * @param manager Entry point to DataMigrationManager.
     */
    public static void createMongoToCosmosDbMongoVCoreDatabaseMigrationResourceWithMinimumParameters(
        com.azure.resourcemanager.datamigration.DataMigrationManager manager) {
        manager.databaseMigrationsMongoToCosmosDbvCoreMongoes()
            .create("testrg", "targetCosmosDbClusterName", "migrationRequest", new DatabaseMigrationCosmosDbMongoInner()
                .withProperties(new DatabaseMigrationPropertiesCosmosDbMongo().withScope(
                    "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.DocumentDB/mongoClusters/targetCosmosDbClusterName")
                    .withMigrationService(
                        "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.DataMigration/MigrationServices/testMigrationService")
                    .withSourceMongoConnection(new MongoConnectionInformation().withHost("abc.mongodb.com")
                        .withPort(88)
                        .withUsername("abc")
                        .withPassword("fakeTokenPlaceholder")
                        .withUseSsl(true))
                    .withTargetMongoConnection(new MongoConnectionInformation().withConnectionString("placeholder"))
                    .withCollectionList(Arrays.asList(
                        new MongoMigrationCollection().withSourceDatabase("sourceDb1")
                            .withSourceCollection("sourceCol1")
                            .withTargetDatabase("targetDb1")
                            .withTargetCollection("targetCol1"),
                        new MongoMigrationCollection().withSourceDatabase("sourceDb2")
                            .withSourceCollection("sourceCol2")))),
                com.azure.core.util.Context.NONE);
    }

    /*
     * x-ms-original-file:
     * specification/datamigration/resource-manager/Microsoft.DataMigration/stable/2025-06-30/examples/
     * CosmosDbMongoCreateOrUpdateDatabaseMigrationMAX.json
     */
    /**
     * Sample code: Create Mongo to CosmosDb Mongo(vCore) Database Migration resource with Maximum parameters.
     * 
     * @param manager Entry point to DataMigrationManager.
     */
    public static void createMongoToCosmosDbMongoVCoreDatabaseMigrationResourceWithMaximumParameters(
        com.azure.resourcemanager.datamigration.DataMigrationManager manager) {
        manager.databaseMigrationsMongoToCosmosDbvCoreMongoes()
            .create("testrg", "targetCosmosDbClusterName", "migrationRequest", new DatabaseMigrationCosmosDbMongoInner()
                .withProperties(new DatabaseMigrationPropertiesCosmosDbMongo().withScope(
                    "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.DocumentDB/mongoClusters/targetCosmosDbClusterName")
                    .withMigrationService(
                        "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.DataMigration/MigrationServices/testMigrationService")
                    .withSourceMongoConnection(new MongoConnectionInformation().withHost("abc.mongodb.com")
                        .withPort(88)
                        .withUsername("abc")
                        .withPassword("fakeTokenPlaceholder")
                        .withUseSsl(true))
                    .withTargetMongoConnection(
                        new MongoConnectionInformation().withHost("xyz.mongocluster.cosmos.azure.com")
                            .withPort(10255)
                            .withUsername("def")
                            .withPassword("fakeTokenPlaceholder")
                            .withUseSsl(true))
                    .withCollectionList(Arrays.asList(
                        new MongoMigrationCollection().withSourceDatabase("sourceDb1")
                            .withSourceCollection("sourceCol1")
                            .withTargetDatabase("targetDb1")
                            .withTargetCollection("targetCol1"),
                        new MongoMigrationCollection().withSourceDatabase("sourceDb2")
                            .withSourceCollection("sourceCol2")
                            .withTargetDatabase("sourceDb2")
                            .withTargetCollection("sourceCol2")))),
                com.azure.core.util.Context.NONE);
    }
}
