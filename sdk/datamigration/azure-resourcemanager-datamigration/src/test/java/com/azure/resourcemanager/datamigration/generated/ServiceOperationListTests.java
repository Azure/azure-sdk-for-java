// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datamigration.fluent.models.ServiceOperationInner;
import com.azure.resourcemanager.datamigration.models.ServiceOperationDisplay;
import com.azure.resourcemanager.datamigration.models.ServiceOperationList;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ServiceOperationListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServiceOperationList model = BinaryData.fromString(
            "{\"value\":[{\"name\":\"zuhtymwisdkfthwx\",\"display\":{\"provider\":\"eiwaopvkmi\",\"resource\":\"mmxdcu\",\"operation\":\"fsrpymzidnse\",\"description\":\"xtbzsgfyccsne\"}},{\"name\":\"dwzjeiach\",\"display\":{\"provider\":\"sflnrosfqp\",\"resource\":\"ehzzvypyqrim\",\"operation\":\"npvswjdkirso\",\"description\":\"qxhcrmn\"}},{\"name\":\"jtckwhdso\",\"display\":{\"provider\":\"yip\",\"resource\":\"sqwpgrjb\",\"operation\":\"orcjxvsnby\",\"description\":\"abnmocpcyshu\"}}],\"nextLink\":\"afbljjgpbtoqcjmk\"}")
            .toObject(ServiceOperationList.class);
        Assertions.assertEquals("zuhtymwisdkfthwx", model.value().get(0).name());
        Assertions.assertEquals("eiwaopvkmi", model.value().get(0).display().provider());
        Assertions.assertEquals("mmxdcu", model.value().get(0).display().resource());
        Assertions.assertEquals("fsrpymzidnse", model.value().get(0).display().operation());
        Assertions.assertEquals("xtbzsgfyccsne", model.value().get(0).display().description());
        Assertions.assertEquals("afbljjgpbtoqcjmk", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServiceOperationList model = new ServiceOperationList().withValue(Arrays.asList(
            new ServiceOperationInner().withName("zuhtymwisdkfthwx")
                .withDisplay(new ServiceOperationDisplay().withProvider("eiwaopvkmi")
                    .withResource("mmxdcu")
                    .withOperation("fsrpymzidnse")
                    .withDescription("xtbzsgfyccsne")),
            new ServiceOperationInner().withName("dwzjeiach")
                .withDisplay(new ServiceOperationDisplay().withProvider("sflnrosfqp")
                    .withResource("ehzzvypyqrim")
                    .withOperation("npvswjdkirso")
                    .withDescription("qxhcrmn")),
            new ServiceOperationInner().withName("jtckwhdso")
                .withDisplay(new ServiceOperationDisplay().withProvider("yip")
                    .withResource("sqwpgrjb")
                    .withOperation("orcjxvsnby")
                    .withDescription("abnmocpcyshu"))))
            .withNextLink("afbljjgpbtoqcjmk");
        model = BinaryData.fromObject(model).toObject(ServiceOperationList.class);
        Assertions.assertEquals("zuhtymwisdkfthwx", model.value().get(0).name());
        Assertions.assertEquals("eiwaopvkmi", model.value().get(0).display().provider());
        Assertions.assertEquals("mmxdcu", model.value().get(0).display().resource());
        Assertions.assertEquals("fsrpymzidnse", model.value().get(0).display().operation());
        Assertions.assertEquals("xtbzsgfyccsne", model.value().get(0).display().description());
        Assertions.assertEquals("afbljjgpbtoqcjmk", model.nextLink());
    }
}
