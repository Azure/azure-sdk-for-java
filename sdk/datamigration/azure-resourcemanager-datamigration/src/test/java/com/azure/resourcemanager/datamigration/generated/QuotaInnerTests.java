// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datamigration.fluent.models.QuotaInner;
import com.azure.resourcemanager.datamigration.models.QuotaName;
import org.junit.jupiter.api.Assertions;

public final class QuotaInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        QuotaInner model = BinaryData.fromString(
            "{\"currentValue\":23.838375294716663,\"id\":\"ktgplcr\",\"limit\":92.1802823901617,\"name\":{\"localizedValue\":\"noigbrnjwmwk\",\"value\":\"bsazejjoqka\"},\"unit\":\"hsxttaugzxnf\"}")
            .toObject(QuotaInner.class);
        Assertions.assertEquals(23.838375294716663D, model.currentValue());
        Assertions.assertEquals("ktgplcr", model.id());
        Assertions.assertEquals(92.1802823901617D, model.limit());
        Assertions.assertEquals("noigbrnjwmwk", model.name().localizedValue());
        Assertions.assertEquals("bsazejjoqka", model.name().value());
        Assertions.assertEquals("hsxttaugzxnf", model.unit());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        QuotaInner model = new QuotaInner().withCurrentValue(23.838375294716663D)
            .withId("ktgplcr")
            .withLimit(92.1802823901617D)
            .withName(new QuotaName().withLocalizedValue("noigbrnjwmwk").withValue("bsazejjoqka"))
            .withUnit("hsxttaugzxnf");
        model = BinaryData.fromObject(model).toObject(QuotaInner.class);
        Assertions.assertEquals(23.838375294716663D, model.currentValue());
        Assertions.assertEquals("ktgplcr", model.id());
        Assertions.assertEquals(92.1802823901617D, model.limit());
        Assertions.assertEquals("noigbrnjwmwk", model.name().localizedValue());
        Assertions.assertEquals("bsazejjoqka", model.name().value());
        Assertions.assertEquals("hsxttaugzxnf", model.unit());
    }
}
