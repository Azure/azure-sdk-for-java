// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datamigration.models.MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput model = BinaryData.fromString(
            "{\"name\":\"toego\",\"targetDatabaseName\":\"wbw\",\"migrationSetting\":{\"cmrvexzt\":\"z\",\"gsfraoyzkoow\":\"bt\",\"aldsy\":\"lmnguxaw\"},\"sourceSetting\":{\"ykutwpf\":\"imerqfobwyznk\",\"sd\":\"pagmhrskdsnf\",\"wpusdsttwvogv\":\"akgtdlmkkzevdlh\",\"qqmoaku\":\"bejdcn\"},\"targetSetting\":{\"enuuzkopbm\":\"jzrwrdgrtw\"}}")
            .toObject(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput.class);
        Assertions.assertEquals("toego", model.name());
        Assertions.assertEquals("wbw", model.targetDatabaseName());
        Assertions.assertEquals("z", model.migrationSetting().get("cmrvexzt"));
        Assertions.assertEquals("imerqfobwyznk", model.sourceSetting().get("ykutwpf"));
        Assertions.assertEquals("jzrwrdgrtw", model.targetSetting().get("enuuzkopbm"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput model
            = new MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput().withName("toego")
                .withTargetDatabaseName("wbw")
                .withMigrationSetting(mapOf("cmrvexzt", "z", "gsfraoyzkoow", "bt", "aldsy", "lmnguxaw"))
                .withSourceSetting(mapOf("ykutwpf", "imerqfobwyznk", "sd", "pagmhrskdsnf", "wpusdsttwvogv",
                    "akgtdlmkkzevdlh", "qqmoaku", "bejdcn"))
                .withTargetSetting(mapOf("enuuzkopbm", "jzrwrdgrtw"));
        model = BinaryData.fromObject(model).toObject(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput.class);
        Assertions.assertEquals("toego", model.name());
        Assertions.assertEquals("wbw", model.targetDatabaseName());
        Assertions.assertEquals("z", model.migrationSetting().get("cmrvexzt"));
        Assertions.assertEquals("imerqfobwyznk", model.sourceSetting().get("ykutwpf"));
        Assertions.assertEquals("jzrwrdgrtw", model.targetSetting().get("enuuzkopbm"));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
