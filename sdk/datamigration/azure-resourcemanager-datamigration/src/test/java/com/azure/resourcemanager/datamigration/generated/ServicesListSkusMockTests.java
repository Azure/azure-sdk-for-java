// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.datamigration.DataMigrationManager;
import com.azure.resourcemanager.datamigration.models.AvailableServiceSku;
import com.azure.resourcemanager.datamigration.models.ServiceScalability;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ServicesListSkusMockTests {
    @Test
    public void testListSkus() throws Exception {
        String responseStr
            = "{\"value\":[{\"resourceType\":\"aklwzlwee\",\"sku\":{\"name\":\"ejzltka\",\"family\":\"fjsxscbduxapg\",\"size\":\"qebmvrdjomlnwsb\",\"tier\":\"dls\"},\"capacity\":{\"minimum\":273265714,\"maximum\":1977635745,\"default\":1430405428,\"scaleType\":\"automatic\"}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DataMigrationManager manager = DataMigrationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<AvailableServiceSku> response
            = manager.services().listSkus("wrqkza", "bun", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("aklwzlwee", response.iterator().next().resourceType());
        Assertions.assertEquals("ejzltka", response.iterator().next().sku().name());
        Assertions.assertEquals("fjsxscbduxapg", response.iterator().next().sku().family());
        Assertions.assertEquals("qebmvrdjomlnwsb", response.iterator().next().sku().size());
        Assertions.assertEquals("dls", response.iterator().next().sku().tier());
        Assertions.assertEquals(273265714, response.iterator().next().capacity().minimum());
        Assertions.assertEquals(1977635745, response.iterator().next().capacity().maximum());
        Assertions.assertEquals(1430405428, response.iterator().next().capacity().defaultProperty());
        Assertions.assertEquals(ServiceScalability.AUTOMATIC, response.iterator().next().capacity().scaleType());
    }
}
