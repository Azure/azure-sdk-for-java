// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.datamigration.DataMigrationManager;
import com.azure.resourcemanager.datamigration.models.AvailableServiceSku;
import com.azure.resourcemanager.datamigration.models.ServiceScalability;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ServicesListSkusMockTests {
    @Test
    public void testListSkus() throws Exception {
        String responseStr
            = "{\"value\":[{\"resourceType\":\"w\",\"sku\":{\"name\":\"xakglhpsesrfg\",\"family\":\"qiy\",\"size\":\"xcgdhyhgoqgso\",\"tier\":\"yxyj\"},\"capacity\":{\"minimum\":155163271,\"maximum\":1433558834,\"default\":1326571601,\"scaleType\":\"automatic\"}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DataMigrationManager manager = DataMigrationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<AvailableServiceSku> response
            = manager.services().listSkus("laumydmhweqjf", "xydgtokvqbvwg", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("w", response.iterator().next().resourceType());
        Assertions.assertEquals("xakglhpsesrfg", response.iterator().next().sku().name());
        Assertions.assertEquals("qiy", response.iterator().next().sku().family());
        Assertions.assertEquals("xcgdhyhgoqgso", response.iterator().next().sku().size());
        Assertions.assertEquals("yxyj", response.iterator().next().sku().tier());
        Assertions.assertEquals(155163271, response.iterator().next().capacity().minimum());
        Assertions.assertEquals(1433558834, response.iterator().next().capacity().maximum());
        Assertions.assertEquals(1326571601, response.iterator().next().capacity().defaultProperty());
        Assertions.assertEquals(ServiceScalability.AUTOMATIC, response.iterator().next().capacity().scaleType());
    }
}
