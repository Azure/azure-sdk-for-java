// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datamigration.models.SchemaComparisonValidationResult;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SchemaComparisonValidationResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SchemaComparisonValidationResult model = BinaryData.fromString(
            "{\"schemaDifferences\":{\"objectName\":\"foj\",\"objectType\":\"StoredProcedures\",\"updateAction\":\"ChangedOnTarget\"},\"validationErrors\":{\"text\":\"lcplc\",\"severity\":\"Warning\"},\"sourceDatabaseObjectCount\":{\"lhzdsqtzb\":2890962376533436249,\"nowc\":2978941899472695406,\"gmvecactxmw\":4272824792965282046,\"yowc\":8777916003567598395},\"targetDatabaseObjectCount\":{\"ekqvgqouwif\":3485830042406616316,\"j\":4207965579372127021,\"vqikfxcvhrfsphu\":6985401659827260093}}")
            .toObject(SchemaComparisonValidationResult.class);
        Assertions.assertEquals(2890962376533436249L, model.sourceDatabaseObjectCount().get("lhzdsqtzb"));
        Assertions.assertEquals(3485830042406616316L, model.targetDatabaseObjectCount().get("ekqvgqouwif"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SchemaComparisonValidationResult model = new SchemaComparisonValidationResult()
            .withSourceDatabaseObjectCount(mapOf("lhzdsqtzb", 2890962376533436249L, "nowc", 2978941899472695406L,
                "gmvecactxmw", 4272824792965282046L, "yowc", 8777916003567598395L))
            .withTargetDatabaseObjectCount(mapOf("ekqvgqouwif", 3485830042406616316L, "j", 4207965579372127021L,
                "vqikfxcvhrfsphu", 6985401659827260093L));
        model = BinaryData.fromObject(model).toObject(SchemaComparisonValidationResult.class);
        Assertions.assertEquals(2890962376533436249L, model.sourceDatabaseObjectCount().get("lhzdsqtzb"));
        Assertions.assertEquals(3485830042406616316L, model.targetDatabaseObjectCount().get("ekqvgqouwif"));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
