// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.datamigration.DataMigrationManager;
import com.azure.resourcemanager.datamigration.models.ProjectFile;
import com.azure.resourcemanager.datamigration.models.ProjectFileProperties;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FilesCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"etag\":\"dxmdses\",\"properties\":{\"extension\":\"jbjp\",\"filePath\":\"ktlpdibfmthieat\",\"lastModified\":\"2021-05-04T21:31:30Z\",\"mediaType\":\"nminzqplgtki\",\"size\":5372315143065587930},\"systemData\":{\"createdBy\":\"srzfffjilz\",\"createdByType\":\"ManagedIdentity\",\"createdAt\":\"2021-12-07T23:55:41Z\",\"lastModifiedBy\":\"gkensckhbmcarmo\",\"lastModifiedByType\":\"ManagedIdentity\",\"lastModifiedAt\":\"2021-09-01T04:44:35Z\"},\"id\":\"wykuqdnd\",\"name\":\"lykhkg\",\"type\":\"apvd\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DataMigrationManager manager = DataMigrationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ProjectFile response = manager.files()
            .define("fopxf")
            .withExistingProject("zwhpjlwyxedz", "mxrfomckew", "my")
            .withEtag("tpdyzoutxfptof")
            .withProperties(new ProjectFileProperties().withExtension("uywezygvadg")
                .withFilePath("qwvkgjpytpmpv")
                .withMediaType("e"))
            .create();

        Assertions.assertEquals("dxmdses", response.etag());
        Assertions.assertEquals("jbjp", response.properties().extension());
        Assertions.assertEquals("ktlpdibfmthieat", response.properties().filePath());
        Assertions.assertEquals("nminzqplgtki", response.properties().mediaType());
    }
}
