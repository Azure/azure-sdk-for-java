// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.datamigration.DataMigrationManager;
import com.azure.resourcemanager.datamigration.models.ProjectFile;
import com.azure.resourcemanager.datamigration.models.ProjectFileProperties;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FilesCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"etag\":\"jnhj\",\"properties\":{\"extension\":\"llbsupubdxc\",\"filePath\":\"lhzwh\",\"lastModified\":\"2021-03-30T00:05:16Z\",\"mediaType\":\"bosjjfd\",\"size\":7595063653187632662},\"systemData\":{\"createdBy\":\"fyaytvsly\",\"createdByType\":\"ManagedIdentity\",\"createdAt\":\"2021-10-20T02:04:01Z\",\"lastModifiedBy\":\"arlcjiwgsxfaiocw\",\"lastModifiedByType\":\"Key\",\"lastModifiedAt\":\"2021-03-06T07:41:25Z\"},\"id\":\"gnfg\",\"name\":\"zxbarcbpae\",\"type\":\"zqsym\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DataMigrationManager manager = DataMigrationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ProjectFile response = manager.files()
            .define("p")
            .withExistingProject("nwqsttewu", "cysje", "fjxflpditfno")
            .withEtag("uxlvrhprrvbwonl")
            .withProperties(
                new ProjectFileProperties().withExtension("lvtlrvbst").withFilePath("uy").withMediaType("nttlnrjd"))
            .create();

        Assertions.assertEquals("jnhj", response.etag());
        Assertions.assertEquals("llbsupubdxc", response.properties().extension());
        Assertions.assertEquals("lhzwh", response.properties().filePath());
        Assertions.assertEquals("bosjjfd", response.properties().mediaType());
    }
}
