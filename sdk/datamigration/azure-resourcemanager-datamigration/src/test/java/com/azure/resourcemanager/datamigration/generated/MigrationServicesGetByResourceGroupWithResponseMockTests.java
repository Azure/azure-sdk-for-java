// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.datamigration.DataMigrationManager;
import com.azure.resourcemanager.datamigration.models.MigrationService;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MigrationServicesGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Updating\",\"integrationRuntimeState\":\"jxx\"},\"location\":\"e\",\"tags\":{\"cdq\":\"uqloiwyayyzivrmi\",\"bfi\":\"hchwhrktjleif\",\"wlyeyz\":\"lhxfnsmycj\",\"zbuw\":\"udsqcmhnx\"},\"id\":\"dmac\",\"name\":\"bkvnrpbjrmvg\",\"type\":\"qplehmumkzdllczd\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DataMigrationManager manager = DataMigrationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        MigrationService response = manager.migrationServices()
            .getByResourceGroupWithResponse("urxf", "zqjim", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("e", response.location());
        Assertions.assertEquals("uqloiwyayyzivrmi", response.tags().get("cdq"));
    }
}
