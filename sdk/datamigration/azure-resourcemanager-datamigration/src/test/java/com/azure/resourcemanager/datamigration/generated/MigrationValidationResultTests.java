// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datamigration.models.MigrationValidationDatabaseSummaryResult;
import com.azure.resourcemanager.datamigration.models.MigrationValidationResult;
import java.util.HashMap;
import java.util.Map;

public final class MigrationValidationResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MigrationValidationResult model = BinaryData.fromString(
            "{\"id\":\"kranblwphqlkcc\",\"migrationId\":\"gygqwah\",\"summaryResults\":{\"efjokn\":{\"id\":\"wgniipr\",\"migrationId\":\"vawuwzdufypivlsb\",\"sourceDatabaseName\":\"pmcubkmifoxxkub\",\"targetDatabaseName\":\"havpmhbrbqgvg\",\"startedOn\":\"2021-03-12T02:37:11Z\",\"endedOn\":\"2021-11-25T13:45:13Z\",\"status\":\"Stopped\"},\"bvnuile\":{\"id\":\"qyzqedikdfrdb\",\"migrationId\":\"mrjgeihfqlggwfi\",\"sourceDatabaseName\":\"cxmjpbyephmg\",\"targetDatabaseName\":\"ljvrcmyfqipgxhnp\",\"startedOn\":\"2021-03-15T22:12:36Z\",\"endedOn\":\"2021-02-05T16:45:52Z\",\"status\":\"NotStarted\"},\"dsxjwuivedw\":{\"id\":\"aswlp\",\"migrationId\":\"gm\",\"sourceDatabaseName\":\"fjlrxwtoauk\",\"targetDatabaseName\":\"kvci\",\"startedOn\":\"2021-05-06T09:08:56Z\",\"endedOn\":\"2021-08-16T23:18:30Z\",\"status\":\"NotStarted\"},\"new\":{\"id\":\"yeew\",\"migrationId\":\"iqbps\",\"sourceDatabaseName\":\"omguamlj\",\"targetDatabaseName\":\"rgmsplzga\",\"startedOn\":\"2021-02-13T02:42:05Z\",\"endedOn\":\"2021-02-02T09:58:56Z\",\"status\":\"Failed\"}},\"status\":\"NotStarted\"}")
            .toObject(MigrationValidationResult.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MigrationValidationResult model = new MigrationValidationResult()
            .withSummaryResults(mapOf("efjokn", new MigrationValidationDatabaseSummaryResult(), "bvnuile",
                new MigrationValidationDatabaseSummaryResult(), "dsxjwuivedw",
                new MigrationValidationDatabaseSummaryResult(), "new", new MigrationValidationDatabaseSummaryResult()));
        model = BinaryData.fromObject(model).toObject(MigrationValidationResult.class);
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
