// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datamigration.fluent.models.AvailableServiceSkuInner;
import com.azure.resourcemanager.datamigration.models.AvailableServiceSkuCapacity;
import com.azure.resourcemanager.datamigration.models.AvailableServiceSkuSku;
import com.azure.resourcemanager.datamigration.models.ServiceScalability;
import org.junit.jupiter.api.Assertions;

public final class AvailableServiceSkuInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AvailableServiceSkuInner model = BinaryData.fromString(
            "{\"resourceType\":\"b\",\"sku\":{\"name\":\"msmjqulngsntn\",\"family\":\"bkzgcwrwclx\",\"size\":\"rljdouskcqv\",\"tier\":\"cr\"},\"capacity\":{\"minimum\":747491790,\"maximum\":1343054120,\"default\":1034535063,\"scaleType\":\"none\"}}")
            .toObject(AvailableServiceSkuInner.class);
        Assertions.assertEquals("b", model.resourceType());
        Assertions.assertEquals("msmjqulngsntn", model.sku().name());
        Assertions.assertEquals("bkzgcwrwclx", model.sku().family());
        Assertions.assertEquals("rljdouskcqv", model.sku().size());
        Assertions.assertEquals("cr", model.sku().tier());
        Assertions.assertEquals(747491790, model.capacity().minimum());
        Assertions.assertEquals(1343054120, model.capacity().maximum());
        Assertions.assertEquals(1034535063, model.capacity().defaultProperty());
        Assertions.assertEquals(ServiceScalability.NONE, model.capacity().scaleType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AvailableServiceSkuInner model = new AvailableServiceSkuInner().withResourceType("b")
            .withSku(new AvailableServiceSkuSku().withName("msmjqulngsntn")
                .withFamily("bkzgcwrwclx")
                .withSize("rljdouskcqv")
                .withTier("cr"))
            .withCapacity(new AvailableServiceSkuCapacity().withMinimum(747491790)
                .withMaximum(1343054120)
                .withDefaultProperty(1034535063)
                .withScaleType(ServiceScalability.NONE));
        model = BinaryData.fromObject(model).toObject(AvailableServiceSkuInner.class);
        Assertions.assertEquals("b", model.resourceType());
        Assertions.assertEquals("msmjqulngsntn", model.sku().name());
        Assertions.assertEquals("bkzgcwrwclx", model.sku().family());
        Assertions.assertEquals("rljdouskcqv", model.sku().size());
        Assertions.assertEquals("cr", model.sku().tier());
        Assertions.assertEquals(747491790, model.capacity().minimum());
        Assertions.assertEquals(1343054120, model.capacity().maximum());
        Assertions.assertEquals(1034535063, model.capacity().defaultProperty());
        Assertions.assertEquals(ServiceScalability.NONE, model.capacity().scaleType());
    }
}
