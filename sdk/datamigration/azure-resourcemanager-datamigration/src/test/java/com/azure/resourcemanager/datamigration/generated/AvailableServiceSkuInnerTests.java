// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datamigration.fluent.models.AvailableServiceSkuInner;
import com.azure.resourcemanager.datamigration.models.AvailableServiceSkuCapacity;
import com.azure.resourcemanager.datamigration.models.AvailableServiceSkuSku;
import com.azure.resourcemanager.datamigration.models.ServiceScalability;
import org.junit.jupiter.api.Assertions;

public final class AvailableServiceSkuInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AvailableServiceSkuInner model = BinaryData.fromString(
            "{\"resourceType\":\"jnalghf\",\"sku\":{\"name\":\"vsexsowuelu\",\"family\":\"hahhxvrhmzkwpj\",\"size\":\"wspughftqsxhqx\",\"tier\":\"xukndxdigr\"},\"capacity\":{\"minimum\":2060980520,\"maximum\":200260047,\"default\":1779713214,\"scaleType\":\"none\"}}")
            .toObject(AvailableServiceSkuInner.class);
        Assertions.assertEquals("jnalghf", model.resourceType());
        Assertions.assertEquals("vsexsowuelu", model.sku().name());
        Assertions.assertEquals("hahhxvrhmzkwpj", model.sku().family());
        Assertions.assertEquals("wspughftqsxhqx", model.sku().size());
        Assertions.assertEquals("xukndxdigr", model.sku().tier());
        Assertions.assertEquals(2060980520, model.capacity().minimum());
        Assertions.assertEquals(200260047, model.capacity().maximum());
        Assertions.assertEquals(1779713214, model.capacity().defaultProperty());
        Assertions.assertEquals(ServiceScalability.NONE, model.capacity().scaleType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AvailableServiceSkuInner model = new AvailableServiceSkuInner().withResourceType("jnalghf")
            .withSku(new AvailableServiceSkuSku().withName("vsexsowuelu")
                .withFamily("hahhxvrhmzkwpj")
                .withSize("wspughftqsxhqx")
                .withTier("xukndxdigr"))
            .withCapacity(new AvailableServiceSkuCapacity().withMinimum(2060980520)
                .withMaximum(200260047)
                .withDefaultProperty(1779713214)
                .withScaleType(ServiceScalability.NONE));
        model = BinaryData.fromObject(model).toObject(AvailableServiceSkuInner.class);
        Assertions.assertEquals("jnalghf", model.resourceType());
        Assertions.assertEquals("vsexsowuelu", model.sku().name());
        Assertions.assertEquals("hahhxvrhmzkwpj", model.sku().family());
        Assertions.assertEquals("wspughftqsxhqx", model.sku().size());
        Assertions.assertEquals("xukndxdigr", model.sku().tier());
        Assertions.assertEquals(2060980520, model.capacity().minimum());
        Assertions.assertEquals(200260047, model.capacity().maximum());
        Assertions.assertEquals(1779713214, model.capacity().defaultProperty());
        Assertions.assertEquals(ServiceScalability.NONE, model.capacity().scaleType());
    }
}
