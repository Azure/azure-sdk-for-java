// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datamigration.fluent.models.AvailableServiceSkuInner;
import com.azure.resourcemanager.datamigration.models.AvailableServiceSkuCapacity;
import com.azure.resourcemanager.datamigration.models.AvailableServiceSkuSku;
import com.azure.resourcemanager.datamigration.models.ServiceScalability;
import org.junit.jupiter.api.Assertions;

public final class AvailableServiceSkuInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AvailableServiceSkuInner model = BinaryData.fromString(
            "{\"resourceType\":\"fcqdpsq\",\"sku\":{\"name\":\"psvuoymgc\",\"family\":\"lvez\",\"size\":\"pqlmfe\",\"tier\":\"erqwkyhkobopg\"},\"capacity\":{\"minimum\":222452990,\"maximum\":540686876,\"default\":1472948449,\"scaleType\":\"automatic\"}}")
            .toObject(AvailableServiceSkuInner.class);
        Assertions.assertEquals("fcqdpsq", model.resourceType());
        Assertions.assertEquals("psvuoymgc", model.sku().name());
        Assertions.assertEquals("lvez", model.sku().family());
        Assertions.assertEquals("pqlmfe", model.sku().size());
        Assertions.assertEquals("erqwkyhkobopg", model.sku().tier());
        Assertions.assertEquals(222452990, model.capacity().minimum());
        Assertions.assertEquals(540686876, model.capacity().maximum());
        Assertions.assertEquals(1472948449, model.capacity().defaultProperty());
        Assertions.assertEquals(ServiceScalability.AUTOMATIC, model.capacity().scaleType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AvailableServiceSkuInner model = new AvailableServiceSkuInner().withResourceType("fcqdpsq")
            .withSku(new AvailableServiceSkuSku().withName("psvuoymgc")
                .withFamily("lvez")
                .withSize("pqlmfe")
                .withTier("erqwkyhkobopg"))
            .withCapacity(new AvailableServiceSkuCapacity().withMinimum(222452990)
                .withMaximum(540686876)
                .withDefaultProperty(1472948449)
                .withScaleType(ServiceScalability.AUTOMATIC));
        model = BinaryData.fromObject(model).toObject(AvailableServiceSkuInner.class);
        Assertions.assertEquals("fcqdpsq", model.resourceType());
        Assertions.assertEquals("psvuoymgc", model.sku().name());
        Assertions.assertEquals("lvez", model.sku().family());
        Assertions.assertEquals("pqlmfe", model.sku().size());
        Assertions.assertEquals("erqwkyhkobopg", model.sku().tier());
        Assertions.assertEquals(222452990, model.capacity().minimum());
        Assertions.assertEquals(540686876, model.capacity().maximum());
        Assertions.assertEquals(1472948449, model.capacity().defaultProperty());
        Assertions.assertEquals(ServiceScalability.AUTOMATIC, model.capacity().scaleType());
    }
}
