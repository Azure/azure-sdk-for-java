// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datamigration.models.MigrateMySqlAzureDbForMySqlSyncDatabaseInput;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class MigrateMySqlAzureDbForMySqlSyncDatabaseInputTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MigrateMySqlAzureDbForMySqlSyncDatabaseInput model = BinaryData.fromString(
            "{\"name\":\"cciuqgbdbutau\",\"targetDatabaseName\":\"btkuwhh\",\"migrationSetting\":{\"joxafnndlpi\":\"k\",\"kpw\":\"hkoymkcdyhbp\",\"jxywsuws\":\"reqnovvqfov\",\"aeneqnzarrwl\":\"rsndsytgadgvra\"},\"sourceSetting\":{\"bjibwwiftohq\":\"ijfqkacewiipfp\",\"plsaknynfsynljph\":\"vpuvks\"},\"targetSetting\":{\"eosjswsr\":\"xodlqiyntorzih\",\"qioxi\":\"slyzrpzbchckqq\",\"wyhqmibzyhwits\":\"suiizynkedyat\",\"wznm\":\"ypyynpcdpumnzg\"}}")
            .toObject(MigrateMySqlAzureDbForMySqlSyncDatabaseInput.class);
        Assertions.assertEquals("cciuqgbdbutau", model.name());
        Assertions.assertEquals("btkuwhh", model.targetDatabaseName());
        Assertions.assertEquals("k", model.migrationSetting().get("joxafnndlpi"));
        Assertions.assertEquals("ijfqkacewiipfp", model.sourceSetting().get("bjibwwiftohq"));
        Assertions.assertEquals("xodlqiyntorzih", model.targetSetting().get("eosjswsr"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MigrateMySqlAzureDbForMySqlSyncDatabaseInput model
            = new MigrateMySqlAzureDbForMySqlSyncDatabaseInput().withName("cciuqgbdbutau")
                .withTargetDatabaseName("btkuwhh")
                .withMigrationSetting(mapOf("joxafnndlpi", "k", "kpw", "hkoymkcdyhbp", "jxywsuws", "reqnovvqfov",
                    "aeneqnzarrwl", "rsndsytgadgvra"))
                .withSourceSetting(mapOf("bjibwwiftohq", "ijfqkacewiipfp", "plsaknynfsynljph", "vpuvks"))
                .withTargetSetting(mapOf("eosjswsr", "xodlqiyntorzih", "qioxi", "slyzrpzbchckqq", "wyhqmibzyhwits",
                    "suiizynkedyat", "wznm", "ypyynpcdpumnzg"));
        model = BinaryData.fromObject(model).toObject(MigrateMySqlAzureDbForMySqlSyncDatabaseInput.class);
        Assertions.assertEquals("cciuqgbdbutau", model.name());
        Assertions.assertEquals("btkuwhh", model.targetDatabaseName());
        Assertions.assertEquals("k", model.migrationSetting().get("joxafnndlpi"));
        Assertions.assertEquals("ijfqkacewiipfp", model.sourceSetting().get("bjibwwiftohq"));
        Assertions.assertEquals("xodlqiyntorzih", model.targetSetting().get("eosjswsr"));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
