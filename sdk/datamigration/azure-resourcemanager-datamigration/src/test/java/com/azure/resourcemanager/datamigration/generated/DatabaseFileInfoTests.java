// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datamigration.models.DatabaseFileInfo;
import com.azure.resourcemanager.datamigration.models.DatabaseFileType;
import org.junit.jupiter.api.Assertions;

public final class DatabaseFileInfoTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DatabaseFileInfo model = BinaryData.fromString(
            "{\"databaseName\":\"xvd\",\"id\":\"fwafqrouda\",\"logicalName\":\"avehhrvkbunzo\",\"physicalFullName\":\"dhcxgkmoy\",\"restoreFullName\":\"dyuib\",\"fileType\":\"NotSupported\",\"sizeMB\":64.25693275498575}")
            .toObject(DatabaseFileInfo.class);
        Assertions.assertEquals("xvd", model.databaseName());
        Assertions.assertEquals("fwafqrouda", model.id());
        Assertions.assertEquals("avehhrvkbunzo", model.logicalName());
        Assertions.assertEquals("dhcxgkmoy", model.physicalFullName());
        Assertions.assertEquals("dyuib", model.restoreFullName());
        Assertions.assertEquals(DatabaseFileType.NOT_SUPPORTED, model.fileType());
        Assertions.assertEquals(64.25693275498575D, model.sizeMB());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DatabaseFileInfo model = new DatabaseFileInfo().withDatabaseName("xvd")
            .withId("fwafqrouda")
            .withLogicalName("avehhrvkbunzo")
            .withPhysicalFullName("dhcxgkmoy")
            .withRestoreFullName("dyuib")
            .withFileType(DatabaseFileType.NOT_SUPPORTED)
            .withSizeMB(64.25693275498575D);
        model = BinaryData.fromObject(model).toObject(DatabaseFileInfo.class);
        Assertions.assertEquals("xvd", model.databaseName());
        Assertions.assertEquals("fwafqrouda", model.id());
        Assertions.assertEquals("avehhrvkbunzo", model.logicalName());
        Assertions.assertEquals("dhcxgkmoy", model.physicalFullName());
        Assertions.assertEquals("dyuib", model.restoreFullName());
        Assertions.assertEquals(DatabaseFileType.NOT_SUPPORTED, model.fileType());
        Assertions.assertEquals(64.25693275498575D, model.sizeMB());
    }
}
