// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datamigration.models.DatabaseFileInfo;
import com.azure.resourcemanager.datamigration.models.DatabaseFileType;
import org.junit.jupiter.api.Assertions;

public final class DatabaseFileInfoTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DatabaseFileInfo model = BinaryData.fromString(
            "{\"databaseName\":\"ldawkzbaliourqha\",\"id\":\"uhashsfwx\",\"logicalName\":\"owzxcu\",\"physicalFullName\":\"cjooxdjebwpucwwf\",\"restoreFullName\":\"vbvmeu\",\"fileType\":\"Fulltext\",\"sizeMB\":18.24537793289579}")
            .toObject(DatabaseFileInfo.class);
        Assertions.assertEquals("ldawkzbaliourqha", model.databaseName());
        Assertions.assertEquals("uhashsfwx", model.id());
        Assertions.assertEquals("owzxcu", model.logicalName());
        Assertions.assertEquals("cjooxdjebwpucwwf", model.physicalFullName());
        Assertions.assertEquals("vbvmeu", model.restoreFullName());
        Assertions.assertEquals(DatabaseFileType.FULLTEXT, model.fileType());
        Assertions.assertEquals(18.24537793289579D, model.sizeMB());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DatabaseFileInfo model = new DatabaseFileInfo().withDatabaseName("ldawkzbaliourqha")
            .withId("uhashsfwx")
            .withLogicalName("owzxcu")
            .withPhysicalFullName("cjooxdjebwpucwwf")
            .withRestoreFullName("vbvmeu")
            .withFileType(DatabaseFileType.FULLTEXT)
            .withSizeMB(18.24537793289579D);
        model = BinaryData.fromObject(model).toObject(DatabaseFileInfo.class);
        Assertions.assertEquals("ldawkzbaliourqha", model.databaseName());
        Assertions.assertEquals("uhashsfwx", model.id());
        Assertions.assertEquals("owzxcu", model.logicalName());
        Assertions.assertEquals("cjooxdjebwpucwwf", model.physicalFullName());
        Assertions.assertEquals("vbvmeu", model.restoreFullName());
        Assertions.assertEquals(DatabaseFileType.FULLTEXT, model.fileType());
        Assertions.assertEquals(18.24537793289579D, model.sizeMB());
    }
}
