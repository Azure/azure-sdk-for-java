// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datamigration.models.MigrateSqlServerSqlDbSyncDatabaseInput;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class MigrateSqlServerSqlDbSyncDatabaseInputTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MigrateSqlServerSqlDbSyncDatabaseInput model = BinaryData.fromString(
            "{\"id\":\"wgbdvibidmhmwffp\",\"name\":\"muvapc\",\"targetDatabaseName\":\"crrvweyo\",\"schemaName\":\"yyukphaimmo\",\"tableMap\":{\"apyyrmfsvbpavbo\":\"qboshbra\",\"gahxkumasjcaa\":\"fppdbwnu\",\"ehqepvufhbzehe\":\"fdmmcpug\",\"qnbldxe\":\"hoqhnl\"},\"migrationSetting\":{\"oucs\":\"gschorimkrsrr\"},\"sourceSetting\":{\"aabeolhbhlvbmxuq\":\"dpuviyf\",\"owlkjxnqpv\":\"bsxtkcudfbsfarfs\"},\"targetSetting\":{\"saoafcluqvox\":\"stmhqykizmd\",\"gwe\":\"ycjimryvwgcwwpbm\",\"efoh\":\"ydsx\",\"mtkhlowkxxpvbr\":\"cbvopwndyqleallk\"}}")
            .toObject(MigrateSqlServerSqlDbSyncDatabaseInput.class);
        Assertions.assertEquals("wgbdvibidmhmwffp", model.id());
        Assertions.assertEquals("muvapc", model.name());
        Assertions.assertEquals("crrvweyo", model.targetDatabaseName());
        Assertions.assertEquals("yyukphaimmo", model.schemaName());
        Assertions.assertEquals("qboshbra", model.tableMap().get("apyyrmfsvbpavbo"));
        Assertions.assertEquals("gschorimkrsrr", model.migrationSetting().get("oucs"));
        Assertions.assertEquals("dpuviyf", model.sourceSetting().get("aabeolhbhlvbmxuq"));
        Assertions.assertEquals("stmhqykizmd", model.targetSetting().get("saoafcluqvox"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MigrateSqlServerSqlDbSyncDatabaseInput model
            = new MigrateSqlServerSqlDbSyncDatabaseInput().withId("wgbdvibidmhmwffp")
                .withName("muvapc")
                .withTargetDatabaseName("crrvweyo")
                .withSchemaName("yyukphaimmo")
                .withTableMap(mapOf("apyyrmfsvbpavbo", "qboshbra", "gahxkumasjcaa", "fppdbwnu", "ehqepvufhbzehe",
                    "fdmmcpug", "qnbldxe", "hoqhnl"))
                .withMigrationSetting(mapOf("oucs", "gschorimkrsrr"))
                .withSourceSetting(mapOf("aabeolhbhlvbmxuq", "dpuviyf", "owlkjxnqpv", "bsxtkcudfbsfarfs"))
                .withTargetSetting(mapOf("saoafcluqvox", "stmhqykizmd", "gwe", "ycjimryvwgcwwpbm", "efoh", "ydsx",
                    "mtkhlowkxxpvbr", "cbvopwndyqleallk"));
        model = BinaryData.fromObject(model).toObject(MigrateSqlServerSqlDbSyncDatabaseInput.class);
        Assertions.assertEquals("wgbdvibidmhmwffp", model.id());
        Assertions.assertEquals("muvapc", model.name());
        Assertions.assertEquals("crrvweyo", model.targetDatabaseName());
        Assertions.assertEquals("yyukphaimmo", model.schemaName());
        Assertions.assertEquals("qboshbra", model.tableMap().get("apyyrmfsvbpavbo"));
        Assertions.assertEquals("gschorimkrsrr", model.migrationSetting().get("oucs"));
        Assertions.assertEquals("dpuviyf", model.sourceSetting().get("aabeolhbhlvbmxuq"));
        Assertions.assertEquals("stmhqykizmd", model.targetSetting().get("saoafcluqvox"));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
