// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datamigration.fluent.models.AvailableServiceSkuInner;
import com.azure.resourcemanager.datamigration.models.AvailableServiceSkuCapacity;
import com.azure.resourcemanager.datamigration.models.AvailableServiceSkuSku;
import com.azure.resourcemanager.datamigration.models.ServiceScalability;
import com.azure.resourcemanager.datamigration.models.ServiceSkuList;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ServiceSkuListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServiceSkuList model = BinaryData.fromString(
            "{\"value\":[{\"resourceType\":\"bkpodepooginuv\",\"sku\":{\"name\":\"heognarxzxtheo\",\"family\":\"si\",\"size\":\"evcciqihnhun\",\"tier\":\"wjzrnfygxgisp\"},\"capacity\":{\"minimum\":234245718,\"maximum\":1938175770,\"default\":1277339929,\"scaleType\":\"none\"}}],\"nextLink\":\"ljofxqeofjaeqjh\"}")
            .toObject(ServiceSkuList.class);
        Assertions.assertEquals("bkpodepooginuv", model.value().get(0).resourceType());
        Assertions.assertEquals("heognarxzxtheo", model.value().get(0).sku().name());
        Assertions.assertEquals("si", model.value().get(0).sku().family());
        Assertions.assertEquals("evcciqihnhun", model.value().get(0).sku().size());
        Assertions.assertEquals("wjzrnfygxgisp", model.value().get(0).sku().tier());
        Assertions.assertEquals(234245718, model.value().get(0).capacity().minimum());
        Assertions.assertEquals(1938175770, model.value().get(0).capacity().maximum());
        Assertions.assertEquals(1277339929, model.value().get(0).capacity().defaultProperty());
        Assertions.assertEquals(ServiceScalability.NONE, model.value().get(0).capacity().scaleType());
        Assertions.assertEquals("ljofxqeofjaeqjh", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServiceSkuList model = new ServiceSkuList()
            .withValue(Arrays.asList(new AvailableServiceSkuInner().withResourceType("bkpodepooginuv")
                .withSku(new AvailableServiceSkuSku().withName("heognarxzxtheo")
                    .withFamily("si")
                    .withSize("evcciqihnhun")
                    .withTier("wjzrnfygxgisp"))
                .withCapacity(new AvailableServiceSkuCapacity().withMinimum(234245718)
                    .withMaximum(1938175770)
                    .withDefaultProperty(1277339929)
                    .withScaleType(ServiceScalability.NONE))))
            .withNextLink("ljofxqeofjaeqjh");
        model = BinaryData.fromObject(model).toObject(ServiceSkuList.class);
        Assertions.assertEquals("bkpodepooginuv", model.value().get(0).resourceType());
        Assertions.assertEquals("heognarxzxtheo", model.value().get(0).sku().name());
        Assertions.assertEquals("si", model.value().get(0).sku().family());
        Assertions.assertEquals("evcciqihnhun", model.value().get(0).sku().size());
        Assertions.assertEquals("wjzrnfygxgisp", model.value().get(0).sku().tier());
        Assertions.assertEquals(234245718, model.value().get(0).capacity().minimum());
        Assertions.assertEquals(1938175770, model.value().get(0).capacity().maximum());
        Assertions.assertEquals(1277339929, model.value().get(0).capacity().defaultProperty());
        Assertions.assertEquals(ServiceScalability.NONE, model.value().get(0).capacity().scaleType());
        Assertions.assertEquals("ljofxqeofjaeqjh", model.nextLink());
    }
}
