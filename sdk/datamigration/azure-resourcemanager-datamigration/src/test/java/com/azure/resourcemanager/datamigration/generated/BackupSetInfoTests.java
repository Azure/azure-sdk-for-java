// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datamigration.models.BackupFileInfo;
import com.azure.resourcemanager.datamigration.models.BackupFileStatus;
import com.azure.resourcemanager.datamigration.models.BackupSetInfo;
import com.azure.resourcemanager.datamigration.models.BackupType;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BackupSetInfoTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackupSetInfo model = BinaryData.fromString(
            "{\"backupSetId\":\"nhxmsi\",\"firstLsn\":\"omi\",\"lastLsn\":\"xggdufi\",\"lastModifiedTime\":\"2021-01-17T17:19:37Z\",\"backupType\":\"DifferentialFile\",\"listOfBackupFiles\":[{\"fileLocation\":\"ofjchvcyyysf\",\"familySequenceNumber\":1377717439,\"status\":\"Restoring\"},{\"fileLocation\":\"biipuip\",\"familySequenceNumber\":1675022105,\"status\":\"Restored\"},{\"fileLocation\":\"acjekni\",\"familySequenceNumber\":1720447469,\"status\":\"Uploaded\"}],\"databaseName\":\"impevf\",\"backupStartDate\":\"2021-01-08T13:16:44Z\",\"backupFinishedDate\":\"2021-10-07T22:04:33Z\",\"isBackupRestored\":true}")
            .toObject(BackupSetInfo.class);
        Assertions.assertEquals("nhxmsi", model.backupSetId());
        Assertions.assertEquals("omi", model.firstLsn());
        Assertions.assertEquals("xggdufi", model.lastLsn());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-17T17:19:37Z"), model.lastModifiedTime());
        Assertions.assertEquals(BackupType.DIFFERENTIAL_FILE, model.backupType());
        Assertions.assertEquals("ofjchvcyyysf", model.listOfBackupFiles().get(0).fileLocation());
        Assertions.assertEquals(1377717439, model.listOfBackupFiles().get(0).familySequenceNumber());
        Assertions.assertEquals(BackupFileStatus.RESTORING, model.listOfBackupFiles().get(0).status());
        Assertions.assertEquals("impevf", model.databaseName());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-08T13:16:44Z"), model.backupStartDate());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-07T22:04:33Z"), model.backupFinishedDate());
        Assertions.assertTrue(model.isBackupRestored());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackupSetInfo model = new BackupSetInfo().withBackupSetId("nhxmsi")
            .withFirstLsn("omi")
            .withLastLsn("xggdufi")
            .withLastModifiedTime(OffsetDateTime.parse("2021-01-17T17:19:37Z"))
            .withBackupType(BackupType.DIFFERENTIAL_FILE)
            .withListOfBackupFiles(Arrays.asList(
                new BackupFileInfo().withFileLocation("ofjchvcyyysf")
                    .withFamilySequenceNumber(1377717439)
                    .withStatus(BackupFileStatus.RESTORING),
                new BackupFileInfo().withFileLocation("biipuip")
                    .withFamilySequenceNumber(1675022105)
                    .withStatus(BackupFileStatus.RESTORED),
                new BackupFileInfo().withFileLocation("acjekni")
                    .withFamilySequenceNumber(1720447469)
                    .withStatus(BackupFileStatus.UPLOADED)))
            .withDatabaseName("impevf")
            .withBackupStartDate(OffsetDateTime.parse("2021-01-08T13:16:44Z"))
            .withBackupFinishedDate(OffsetDateTime.parse("2021-10-07T22:04:33Z"))
            .withIsBackupRestored(true);
        model = BinaryData.fromObject(model).toObject(BackupSetInfo.class);
        Assertions.assertEquals("nhxmsi", model.backupSetId());
        Assertions.assertEquals("omi", model.firstLsn());
        Assertions.assertEquals("xggdufi", model.lastLsn());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-17T17:19:37Z"), model.lastModifiedTime());
        Assertions.assertEquals(BackupType.DIFFERENTIAL_FILE, model.backupType());
        Assertions.assertEquals("ofjchvcyyysf", model.listOfBackupFiles().get(0).fileLocation());
        Assertions.assertEquals(1377717439, model.listOfBackupFiles().get(0).familySequenceNumber());
        Assertions.assertEquals(BackupFileStatus.RESTORING, model.listOfBackupFiles().get(0).status());
        Assertions.assertEquals("impevf", model.databaseName());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-08T13:16:44Z"), model.backupStartDate());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-07T22:04:33Z"), model.backupFinishedDate());
        Assertions.assertTrue(model.isBackupRestored());
    }
}
