/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.labservices.v2018_10_15;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.labservices.v2018_10_15.implementation.GalleryImageInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.labservices.v2018_10_15.implementation.LabServicesManager;
import java.util.Map;
import org.joda.time.DateTime;

/**
 * Type representing GalleryImage.
 */
public interface GalleryImage extends HasInner<GalleryImageInner>, Indexable, Refreshable<GalleryImage>, Updatable<GalleryImage.Update>, HasManager<LabServicesManager> {
    /**
     * @return the author value.
     */
    String author();

    /**
     * @return the createdDate value.
     */
    DateTime createdDate();

    /**
     * @return the description value.
     */
    String description();

    /**
     * @return the icon value.
     */
    String icon();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the imageReference value.
     */
    GalleryImageReference imageReference();

    /**
     * @return the isEnabled value.
     */
    Boolean isEnabled();

    /**
     * @return the isOverride value.
     */
    Boolean isOverride();

    /**
     * @return the isPlanAuthorized value.
     */
    Boolean isPlanAuthorized();

    /**
     * @return the latestOperationResult value.
     */
    LatestOperationResult latestOperationResult();

    /**
     * @return the location value.
     */
    String location();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the planId value.
     */
    String planId();

    /**
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * @return the type value.
     */
    String type();

    /**
     * @return the uniqueIdentifier value.
     */
    String uniqueIdentifier();

    /**
     * The entirety of the GalleryImage definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLabaccount, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of GalleryImage definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a GalleryImage definition.
         */
        interface Blank extends WithLabaccount {
        }

        /**
         * The stage of the galleryimage definition allowing to specify Labaccount.
         */
        interface WithLabaccount {
           /**
            * Specifies resourceGroupName, labAccountName.
            * @param resourceGroupName The name of the resource group
            * @param labAccountName The name of the lab Account
            * @return the next definition stage
            */
            WithCreate withExistingLabaccount(String resourceGroupName, String labAccountName);
        }

        /**
         * The stage of the galleryimage definition allowing to specify IsEnabled.
         */
        interface WithIsEnabled {
            /**
             * Specifies isEnabled.
             * @param isEnabled Indicates whether this gallery image is enabled
             * @return the next definition stage
             */
            WithCreate withIsEnabled(Boolean isEnabled);
        }

        /**
         * The stage of the galleryimage definition allowing to specify IsOverride.
         */
        interface WithIsOverride {
            /**
             * Specifies isOverride.
             * @param isOverride Indicates whether this gallery has been overridden for this lab account
             * @return the next definition stage
             */
            WithCreate withIsOverride(Boolean isOverride);
        }

        /**
         * The stage of the galleryimage definition allowing to specify IsPlanAuthorized.
         */
        interface WithIsPlanAuthorized {
            /**
             * Specifies isPlanAuthorized.
             * @param isPlanAuthorized Indicates if the plan has been authorized for programmatic deployment
             * @return the next definition stage
             */
            WithCreate withIsPlanAuthorized(Boolean isPlanAuthorized);
        }

        /**
         * The stage of the galleryimage definition allowing to specify Location.
         */
        interface WithLocation {
            /**
             * Specifies location.
             * @param location The location of the resource
             * @return the next definition stage
             */
            WithCreate withLocation(String location);
        }

        /**
         * The stage of the galleryimage definition allowing to specify ProvisioningState.
         */
        interface WithProvisioningState {
            /**
             * Specifies provisioningState.
             * @param provisioningState The provisioning status of the resource
             * @return the next definition stage
             */
            WithCreate withProvisioningState(String provisioningState);
        }

        /**
         * The stage of the galleryimage definition allowing to specify Tags.
         */
        interface WithTags {
            /**
             * Specifies tags.
             * @param tags The tags of the resource
             * @return the next definition stage
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the galleryimage definition allowing to specify UniqueIdentifier.
         */
        interface WithUniqueIdentifier {
            /**
             * Specifies uniqueIdentifier.
             * @param uniqueIdentifier The unique immutable identifier of a resource (Guid)
             * @return the next definition stage
             */
            WithCreate withUniqueIdentifier(String uniqueIdentifier);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<GalleryImage>, DefinitionStages.WithIsEnabled, DefinitionStages.WithIsOverride, DefinitionStages.WithIsPlanAuthorized, DefinitionStages.WithLocation, DefinitionStages.WithProvisioningState, DefinitionStages.WithTags, DefinitionStages.WithUniqueIdentifier {
        }
    }
    /**
     * The template for a GalleryImage update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<GalleryImage>, UpdateStages.WithIsEnabled, UpdateStages.WithIsOverride, UpdateStages.WithIsPlanAuthorized, UpdateStages.WithLocation, UpdateStages.WithProvisioningState, UpdateStages.WithTags, UpdateStages.WithUniqueIdentifier {
    }

    /**
     * Grouping of GalleryImage update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the galleryimage update allowing to specify IsEnabled.
         */
        interface WithIsEnabled {
            /**
             * Specifies isEnabled.
             * @param isEnabled Indicates whether this gallery image is enabled
             * @return the next update stage
             */
            Update withIsEnabled(Boolean isEnabled);
        }

        /**
         * The stage of the galleryimage update allowing to specify IsOverride.
         */
        interface WithIsOverride {
            /**
             * Specifies isOverride.
             * @param isOverride Indicates whether this gallery has been overridden for this lab account
             * @return the next update stage
             */
            Update withIsOverride(Boolean isOverride);
        }

        /**
         * The stage of the galleryimage update allowing to specify IsPlanAuthorized.
         */
        interface WithIsPlanAuthorized {
            /**
             * Specifies isPlanAuthorized.
             * @param isPlanAuthorized Indicates if the plan has been authorized for programmatic deployment
             * @return the next update stage
             */
            Update withIsPlanAuthorized(Boolean isPlanAuthorized);
        }

        /**
         * The stage of the galleryimage update allowing to specify Location.
         */
        interface WithLocation {
            /**
             * Specifies location.
             * @param location The location of the resource
             * @return the next update stage
             */
            Update withLocation(String location);
        }

        /**
         * The stage of the galleryimage update allowing to specify ProvisioningState.
         */
        interface WithProvisioningState {
            /**
             * Specifies provisioningState.
             * @param provisioningState The provisioning status of the resource
             * @return the next update stage
             */
            Update withProvisioningState(String provisioningState);
        }

        /**
         * The stage of the galleryimage update allowing to specify Tags.
         */
        interface WithTags {
            /**
             * Specifies tags.
             * @param tags The tags of the resource
             * @return the next update stage
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the galleryimage update allowing to specify UniqueIdentifier.
         */
        interface WithUniqueIdentifier {
            /**
             * Specifies uniqueIdentifier.
             * @param uniqueIdentifier The unique immutable identifier of a resource (Guid)
             * @return the next update stage
             */
            Update withUniqueIdentifier(String uniqueIdentifier);
        }

    }
}
