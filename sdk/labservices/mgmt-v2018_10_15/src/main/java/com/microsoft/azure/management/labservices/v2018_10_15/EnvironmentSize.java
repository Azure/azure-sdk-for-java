/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.labservices.v2018_10_15;

import java.util.List;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Represents a size category supported by this Lab Account (small, medium or
 * large).
 */
public class EnvironmentSize {
    /**
     * The size category. Possible values include: 'Basic', 'Standard',
     * 'Performance'.
     */
    @JsonProperty(value = "name")
    private ManagedLabVmSize name;

    /**
     * Represents a set of compute sizes that can serve this given size type.
     */
    @JsonProperty(value = "vmSizes")
    private List<SizeInfo> vmSizes;

    /**
     * The pay-as-you-go dollar price per hour this size will cost. It does not
     * include discounts and may not reflect the actual price the size will
     * cost. This is the maximum price of all prices within this tier.
     */
    @JsonProperty(value = "maxPrice", access = JsonProperty.Access.WRITE_ONLY)
    private BigDecimal maxPrice;

    /**
     * The number of cores a VM of this size has. This is the minimum number of
     * cores within this tier.
     */
    @JsonProperty(value = "minNumberOfCores", access = JsonProperty.Access.WRITE_ONLY)
    private Integer minNumberOfCores;

    /**
     * The amount of memory available (in GB). This is the minimum amount of
     * memory within this tier.
     */
    @JsonProperty(value = "minMemory", access = JsonProperty.Access.WRITE_ONLY)
    private Double minMemory;

    /**
     * Get the size category. Possible values include: 'Basic', 'Standard', 'Performance'.
     *
     * @return the name value
     */
    public ManagedLabVmSize name() {
        return this.name;
    }

    /**
     * Set the size category. Possible values include: 'Basic', 'Standard', 'Performance'.
     *
     * @param name the name value to set
     * @return the EnvironmentSize object itself.
     */
    public EnvironmentSize withName(ManagedLabVmSize name) {
        this.name = name;
        return this;
    }

    /**
     * Get represents a set of compute sizes that can serve this given size type.
     *
     * @return the vmSizes value
     */
    public List<SizeInfo> vmSizes() {
        return this.vmSizes;
    }

    /**
     * Set represents a set of compute sizes that can serve this given size type.
     *
     * @param vmSizes the vmSizes value to set
     * @return the EnvironmentSize object itself.
     */
    public EnvironmentSize withVmSizes(List<SizeInfo> vmSizes) {
        this.vmSizes = vmSizes;
        return this;
    }

    /**
     * Get the pay-as-you-go dollar price per hour this size will cost. It does not include discounts and may not reflect the actual price the size will cost. This is the maximum price of all prices within this tier.
     *
     * @return the maxPrice value
     */
    public BigDecimal maxPrice() {
        return this.maxPrice;
    }

    /**
     * Get the number of cores a VM of this size has. This is the minimum number of cores within this tier.
     *
     * @return the minNumberOfCores value
     */
    public Integer minNumberOfCores() {
        return this.minNumberOfCores;
    }

    /**
     * Get the amount of memory available (in GB). This is the minimum amount of memory within this tier.
     *
     * @return the minMemory value
     */
    public Double minMemory() {
        return this.minMemory;
    }

}
