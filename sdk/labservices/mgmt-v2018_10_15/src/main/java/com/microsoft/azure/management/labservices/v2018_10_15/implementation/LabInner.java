/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.labservices.v2018_10_15.implementation;

import org.joda.time.Period;
import com.microsoft.azure.management.labservices.v2018_10_15.LabUserAccessMode;
import org.joda.time.DateTime;
import com.microsoft.azure.management.labservices.v2018_10_15.LatestOperationResult;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.rest.SkipParentValidation;
import com.microsoft.azure.Resource;

/**
 * Represents a lab.
 */
@JsonFlatten
@SkipParentValidation
public class LabInner extends Resource {
    /**
     * Maximum number of users allowed in the lab.
     */
    @JsonProperty(value = "properties.maxUsersInLab")
    private Integer maxUsersInLab;

    /**
     * Maximum value MaxUsersInLab can be set to, as specified by the service.
     */
    @JsonProperty(value = "properties.userQuota", access = JsonProperty.Access.WRITE_ONLY)
    private Integer userQuota;

    /**
     * Invitation code that users can use to join a lab.
     */
    @JsonProperty(value = "properties.invitationCode", access = JsonProperty.Access.WRITE_ONLY)
    private String invitationCode;

    /**
     * Object id of the user that created the lab.
     */
    @JsonProperty(value = "properties.createdByObjectId", access = JsonProperty.Access.WRITE_ONLY)
    private String createdByObjectId;

    /**
     * Maximum duration a user can use an environment for in the lab.
     */
    @JsonProperty(value = "properties.usageQuota")
    private Period usageQuota;

    /**
     * Lab user access mode (open to all vs. restricted to those listed on the
     * lab). Possible values include: 'Restricted', 'Open'.
     */
    @JsonProperty(value = "properties.userAccessMode")
    private LabUserAccessMode userAccessMode;

    /**
     * Lab creator name.
     */
    @JsonProperty(value = "properties.createdByUserPrincipalName", access = JsonProperty.Access.WRITE_ONLY)
    private String createdByUserPrincipalName;

    /**
     * Creation date for the lab.
     */
    @JsonProperty(value = "properties.createdDate", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime createdDate;

    /**
     * The provisioning status of the resource.
     */
    @JsonProperty(value = "properties.provisioningState")
    private String provisioningState;

    /**
     * The unique immutable identifier of a resource (Guid).
     */
    @JsonProperty(value = "properties.uniqueIdentifier")
    private String uniqueIdentifier;

    /**
     * The details of the latest operation. ex: status, error.
     */
    @JsonProperty(value = "properties.latestOperationResult", access = JsonProperty.Access.WRITE_ONLY)
    private LatestOperationResult latestOperationResult;

    /**
     * Get maximum number of users allowed in the lab.
     *
     * @return the maxUsersInLab value
     */
    public Integer maxUsersInLab() {
        return this.maxUsersInLab;
    }

    /**
     * Set maximum number of users allowed in the lab.
     *
     * @param maxUsersInLab the maxUsersInLab value to set
     * @return the LabInner object itself.
     */
    public LabInner withMaxUsersInLab(Integer maxUsersInLab) {
        this.maxUsersInLab = maxUsersInLab;
        return this;
    }

    /**
     * Get maximum value MaxUsersInLab can be set to, as specified by the service.
     *
     * @return the userQuota value
     */
    public Integer userQuota() {
        return this.userQuota;
    }

    /**
     * Get invitation code that users can use to join a lab.
     *
     * @return the invitationCode value
     */
    public String invitationCode() {
        return this.invitationCode;
    }

    /**
     * Get object id of the user that created the lab.
     *
     * @return the createdByObjectId value
     */
    public String createdByObjectId() {
        return this.createdByObjectId;
    }

    /**
     * Get maximum duration a user can use an environment for in the lab.
     *
     * @return the usageQuota value
     */
    public Period usageQuota() {
        return this.usageQuota;
    }

    /**
     * Set maximum duration a user can use an environment for in the lab.
     *
     * @param usageQuota the usageQuota value to set
     * @return the LabInner object itself.
     */
    public LabInner withUsageQuota(Period usageQuota) {
        this.usageQuota = usageQuota;
        return this;
    }

    /**
     * Get lab user access mode (open to all vs. restricted to those listed on the lab). Possible values include: 'Restricted', 'Open'.
     *
     * @return the userAccessMode value
     */
    public LabUserAccessMode userAccessMode() {
        return this.userAccessMode;
    }

    /**
     * Set lab user access mode (open to all vs. restricted to those listed on the lab). Possible values include: 'Restricted', 'Open'.
     *
     * @param userAccessMode the userAccessMode value to set
     * @return the LabInner object itself.
     */
    public LabInner withUserAccessMode(LabUserAccessMode userAccessMode) {
        this.userAccessMode = userAccessMode;
        return this;
    }

    /**
     * Get lab creator name.
     *
     * @return the createdByUserPrincipalName value
     */
    public String createdByUserPrincipalName() {
        return this.createdByUserPrincipalName;
    }

    /**
     * Get creation date for the lab.
     *
     * @return the createdDate value
     */
    public DateTime createdDate() {
        return this.createdDate;
    }

    /**
     * Get the provisioning status of the resource.
     *
     * @return the provisioningState value
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set the provisioning status of the resource.
     *
     * @param provisioningState the provisioningState value to set
     * @return the LabInner object itself.
     */
    public LabInner withProvisioningState(String provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Get the unique immutable identifier of a resource (Guid).
     *
     * @return the uniqueIdentifier value
     */
    public String uniqueIdentifier() {
        return this.uniqueIdentifier;
    }

    /**
     * Set the unique immutable identifier of a resource (Guid).
     *
     * @param uniqueIdentifier the uniqueIdentifier value to set
     * @return the LabInner object itself.
     */
    public LabInner withUniqueIdentifier(String uniqueIdentifier) {
        this.uniqueIdentifier = uniqueIdentifier;
        return this;
    }

    /**
     * Get the details of the latest operation. ex: status, error.
     *
     * @return the latestOperationResult value
     */
    public LatestOperationResult latestOperationResult() {
        return this.latestOperationResult;
    }

}
