/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.labservices.v2018_10_15;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.labservices.v2018_10_15.implementation.EnvironmentInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.labservices.v2018_10_15.implementation.LabServicesManager;
import java.util.Map;
import org.joda.time.Period;
import org.joda.time.DateTime;

/**
 * Type representing Environment.
 */
public interface Environment extends HasInner<EnvironmentInner>, Indexable, Refreshable<Environment>, Updatable<Environment.Update>, HasManager<LabServicesManager> {
    /**
     * @return the claimedByUserName value.
     */
    String claimedByUserName();

    /**
     * @return the claimedByUserObjectId value.
     */
    String claimedByUserObjectId();

    /**
     * @return the claimedByUserPrincipalId value.
     */
    String claimedByUserPrincipalId();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the isClaimed value.
     */
    Boolean isClaimed();

    /**
     * @return the lastKnownPowerState value.
     */
    String lastKnownPowerState();

    /**
     * @return the latestOperationResult value.
     */
    LatestOperationResult latestOperationResult();

    /**
     * @return the location value.
     */
    String location();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the networkInterface value.
     */
    NetworkInterface networkInterface();

    /**
     * @return the passwordLastReset value.
     */
    DateTime passwordLastReset();

    /**
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * @return the resourceSets value.
     */
    ResourceSet resourceSets();

    /**
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * @return the totalUsage value.
     */
    Period totalUsage();

    /**
     * @return the type value.
     */
    String type();

    /**
     * @return the uniqueIdentifier value.
     */
    String uniqueIdentifier();

    /**
     * The entirety of the Environment definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithEnvironmentsetting, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of Environment definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a Environment definition.
         */
        interface Blank extends WithEnvironmentsetting {
        }

        /**
         * The stage of the environment definition allowing to specify Environmentsetting.
         */
        interface WithEnvironmentsetting {
           /**
            * Specifies resourceGroupName, labAccountName, labName, environmentSettingName.
            * @param resourceGroupName The name of the resource group
            * @param labAccountName The name of the lab Account
            * @param labName The name of the lab
            * @param environmentSettingName The name of the environment Setting
            * @return the next definition stage
            */
            WithCreate withExistingEnvironmentsetting(String resourceGroupName, String labAccountName, String labName, String environmentSettingName);
        }

        /**
         * The stage of the environment definition allowing to specify Location.
         */
        interface WithLocation {
            /**
             * Specifies location.
             * @param location The location of the resource
             * @return the next definition stage
             */
            WithCreate withLocation(String location);
        }

        /**
         * The stage of the environment definition allowing to specify ProvisioningState.
         */
        interface WithProvisioningState {
            /**
             * Specifies provisioningState.
             * @param provisioningState The provisioning status of the resource
             * @return the next definition stage
             */
            WithCreate withProvisioningState(String provisioningState);
        }

        /**
         * The stage of the environment definition allowing to specify ResourceSets.
         */
        interface WithResourceSets {
            /**
             * Specifies resourceSets.
             * @param resourceSets The set of a VM and the setting id it was created for
             * @return the next definition stage
             */
            WithCreate withResourceSets(ResourceSet resourceSets);
        }

        /**
         * The stage of the environment definition allowing to specify Tags.
         */
        interface WithTags {
            /**
             * Specifies tags.
             * @param tags The tags of the resource
             * @return the next definition stage
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the environment definition allowing to specify UniqueIdentifier.
         */
        interface WithUniqueIdentifier {
            /**
             * Specifies uniqueIdentifier.
             * @param uniqueIdentifier The unique immutable identifier of a resource (Guid)
             * @return the next definition stage
             */
            WithCreate withUniqueIdentifier(String uniqueIdentifier);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<Environment>, DefinitionStages.WithLocation, DefinitionStages.WithProvisioningState, DefinitionStages.WithResourceSets, DefinitionStages.WithTags, DefinitionStages.WithUniqueIdentifier {
        }
    }
    /**
     * The template for a Environment update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<Environment>, UpdateStages.WithLocation, UpdateStages.WithProvisioningState, UpdateStages.WithResourceSets, UpdateStages.WithTags, UpdateStages.WithUniqueIdentifier {
    }

    /**
     * Grouping of Environment update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the environment update allowing to specify Location.
         */
        interface WithLocation {
            /**
             * Specifies location.
             * @param location The location of the resource
             * @return the next update stage
             */
            Update withLocation(String location);
        }

        /**
         * The stage of the environment update allowing to specify ProvisioningState.
         */
        interface WithProvisioningState {
            /**
             * Specifies provisioningState.
             * @param provisioningState The provisioning status of the resource
             * @return the next update stage
             */
            Update withProvisioningState(String provisioningState);
        }

        /**
         * The stage of the environment update allowing to specify ResourceSets.
         */
        interface WithResourceSets {
            /**
             * Specifies resourceSets.
             * @param resourceSets The set of a VM and the setting id it was created for
             * @return the next update stage
             */
            Update withResourceSets(ResourceSetFragment resourceSets);
        }

        /**
         * The stage of the environment update allowing to specify Tags.
         */
        interface WithTags {
            /**
             * Specifies tags.
             * @param tags The tags of the resource
             * @return the next update stage
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the environment update allowing to specify UniqueIdentifier.
         */
        interface WithUniqueIdentifier {
            /**
             * Specifies uniqueIdentifier.
             * @param uniqueIdentifier The unique immutable identifier of a resource (Guid)
             * @return the next update stage
             */
            Update withUniqueIdentifier(String uniqueIdentifier);
        }

    }
}
