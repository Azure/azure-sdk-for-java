/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.labservices.v2018_10_15;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.labservices.v2018_10_15.implementation.EnvironmentSettingInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.labservices.v2018_10_15.implementation.LabServicesManager;
import java.util.Map;
import org.joda.time.DateTime;

/**
 * Type representing EnvironmentSetting.
 */
public interface EnvironmentSetting extends HasInner<EnvironmentSettingInner>, Indexable, Refreshable<EnvironmentSetting>, Updatable<EnvironmentSetting.Update>, HasManager<LabServicesManager> {
    /**
     * @return the configurationState value.
     */
    ConfigurationState configurationState();

    /**
     * @return the description value.
     */
    String description();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the lastChanged value.
     */
    DateTime lastChanged();

    /**
     * @return the lastPublished value.
     */
    DateTime lastPublished();

    /**
     * @return the latestOperationResult value.
     */
    LatestOperationResult latestOperationResult();

    /**
     * @return the location value.
     */
    String location();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * @return the publishingState value.
     */
    PublishingState publishingState();

    /**
     * @return the resourceSettings value.
     */
    ResourceSettings resourceSettings();

    /**
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * @return the title value.
     */
    String title();

    /**
     * @return the type value.
     */
    String type();

    /**
     * @return the uniqueIdentifier value.
     */
    String uniqueIdentifier();

    /**
     * The entirety of the EnvironmentSetting definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLab, DefinitionStages.WithResourceSettings, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of EnvironmentSetting definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a EnvironmentSetting definition.
         */
        interface Blank extends WithLab {
        }

        /**
         * The stage of the environmentsetting definition allowing to specify Lab.
         */
        interface WithLab {
           /**
            * Specifies resourceGroupName, labAccountName, labName.
            * @param resourceGroupName The name of the resource group
            * @param labAccountName The name of the lab Account
            * @param labName The name of the lab
            * @return the next definition stage
            */
            WithResourceSettings withExistingLab(String resourceGroupName, String labAccountName, String labName);
        }

        /**
         * The stage of the environmentsetting definition allowing to specify ResourceSettings.
         */
        interface WithResourceSettings {
           /**
            * Specifies resourceSettings.
            * @param resourceSettings The resource specific settings
            * @return the next definition stage
            */
            WithCreate withResourceSettings(ResourceSettings resourceSettings);
        }

        /**
         * The stage of the environmentsetting definition allowing to specify ConfigurationState.
         */
        interface WithConfigurationState {
            /**
             * Specifies configurationState.
             * @param configurationState Describes the user's progress in configuring their environment setting. Possible values include: 'NotApplicable', 'Completed'
             * @return the next definition stage
             */
            WithCreate withConfigurationState(ConfigurationState configurationState);
        }

        /**
         * The stage of the environmentsetting definition allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             * @param description Describes the environment and its resource settings
             * @return the next definition stage
             */
            WithCreate withDescription(String description);
        }

        /**
         * The stage of the environmentsetting definition allowing to specify Location.
         */
        interface WithLocation {
            /**
             * Specifies location.
             * @param location The location of the resource
             * @return the next definition stage
             */
            WithCreate withLocation(String location);
        }

        /**
         * The stage of the environmentsetting definition allowing to specify ProvisioningState.
         */
        interface WithProvisioningState {
            /**
             * Specifies provisioningState.
             * @param provisioningState The provisioning status of the resource
             * @return the next definition stage
             */
            WithCreate withProvisioningState(String provisioningState);
        }

        /**
         * The stage of the environmentsetting definition allowing to specify Tags.
         */
        interface WithTags {
            /**
             * Specifies tags.
             * @param tags The tags of the resource
             * @return the next definition stage
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the environmentsetting definition allowing to specify Title.
         */
        interface WithTitle {
            /**
             * Specifies title.
             * @param title Brief title describing the environment and its resource settings
             * @return the next definition stage
             */
            WithCreate withTitle(String title);
        }

        /**
         * The stage of the environmentsetting definition allowing to specify UniqueIdentifier.
         */
        interface WithUniqueIdentifier {
            /**
             * Specifies uniqueIdentifier.
             * @param uniqueIdentifier The unique immutable identifier of a resource (Guid)
             * @return the next definition stage
             */
            WithCreate withUniqueIdentifier(String uniqueIdentifier);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<EnvironmentSetting>, DefinitionStages.WithConfigurationState, DefinitionStages.WithDescription, DefinitionStages.WithLocation, DefinitionStages.WithProvisioningState, DefinitionStages.WithTags, DefinitionStages.WithTitle, DefinitionStages.WithUniqueIdentifier {
        }
    }
    /**
     * The template for a EnvironmentSetting update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<EnvironmentSetting>, UpdateStages.WithConfigurationState, UpdateStages.WithDescription, UpdateStages.WithLocation, UpdateStages.WithProvisioningState, UpdateStages.WithResourceSettings, UpdateStages.WithTags, UpdateStages.WithTitle, UpdateStages.WithUniqueIdentifier {
    }

    /**
     * Grouping of EnvironmentSetting update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the environmentsetting update allowing to specify ConfigurationState.
         */
        interface WithConfigurationState {
            /**
             * Specifies configurationState.
             * @param configurationState Describes the user's progress in configuring their environment setting. Possible values include: 'NotApplicable', 'Completed'
             * @return the next update stage
             */
            Update withConfigurationState(ConfigurationState configurationState);
        }

        /**
         * The stage of the environmentsetting update allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             * @param description Describes the environment and its resource settings
             * @return the next update stage
             */
            Update withDescription(String description);
        }

        /**
         * The stage of the environmentsetting update allowing to specify Location.
         */
        interface WithLocation {
            /**
             * Specifies location.
             * @param location The location of the resource
             * @return the next update stage
             */
            Update withLocation(String location);
        }

        /**
         * The stage of the environmentsetting update allowing to specify ProvisioningState.
         */
        interface WithProvisioningState {
            /**
             * Specifies provisioningState.
             * @param provisioningState The provisioning status of the resource
             * @return the next update stage
             */
            Update withProvisioningState(String provisioningState);
        }

        /**
         * The stage of the environmentsetting update allowing to specify ResourceSettings.
         */
        interface WithResourceSettings {
            /**
             * Specifies resourceSettings.
             * @param resourceSettings The resource specific settings
             * @return the next update stage
             */
            Update withResourceSettings(ResourceSettingsFragment resourceSettings);
        }

        /**
         * The stage of the environmentsetting update allowing to specify Tags.
         */
        interface WithTags {
            /**
             * Specifies tags.
             * @param tags The tags of the resource
             * @return the next update stage
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the environmentsetting update allowing to specify Title.
         */
        interface WithTitle {
            /**
             * Specifies title.
             * @param title Brief title describing the environment and its resource settings
             * @return the next update stage
             */
            Update withTitle(String title);
        }

        /**
         * The stage of the environmentsetting update allowing to specify UniqueIdentifier.
         */
        interface WithUniqueIdentifier {
            /**
             * Specifies uniqueIdentifier.
             * @param uniqueIdentifier The unique immutable identifier of a resource (Guid)
             * @return the next update stage
             */
            Update withUniqueIdentifier(String uniqueIdentifier);
        }

    }
}
