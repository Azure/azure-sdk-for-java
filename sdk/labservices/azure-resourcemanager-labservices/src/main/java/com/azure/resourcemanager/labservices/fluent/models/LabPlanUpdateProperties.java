// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.labservices.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.labservices.models.AutoShutdownProfile;
import com.azure.resourcemanager.labservices.models.ConnectionProfile;
import com.azure.resourcemanager.labservices.models.LabPlanNetworkProfile;
import com.azure.resourcemanager.labservices.models.SupportInfo;
import java.io.IOException;
import java.util.List;

/**
 * Lab plan resource properties for updates.
 */
@Fluent
public class LabPlanUpdateProperties implements JsonSerializable<LabPlanUpdateProperties> {
    /*
     * The default lab connection profile. This can be changed on a lab resource and only provides a default profile.
     */
    private ConnectionProfile defaultConnectionProfile;

    /*
     * The default lab shutdown profile. This can be changed on a lab resource and only provides a default profile.
     */
    private AutoShutdownProfile defaultAutoShutdownProfile;

    /*
     * The lab plan network profile. To enforce lab network policies they must be defined here and cannot be changed
     * when there are existing labs associated with this lab plan.
     */
    private LabPlanNetworkProfile defaultNetworkProfile;

    /*
     * The allowed regions for the lab creator to use when creating labs using this lab plan.
     */
    private List<String> allowedRegions;

    /*
     * Resource ID of the Shared Image Gallery attached to this lab plan. When saving a lab template virtual machine
     * image it will be persisted in this gallery. Shared images from the gallery can be made available to use when
     * creating new labs.
     */
    private String sharedGalleryId;

    /*
     * Support contact information and instructions for users of the lab plan. This information is displayed to lab
     * owners and virtual machine users for all labs in the lab plan.
     */
    private SupportInfo supportInfo;

    /*
     * Base Url of the lms instance this lab plan can link lab rosters against.
     */
    private String linkedLmsInstance;

    /**
     * Creates an instance of LabPlanUpdateProperties class.
     */
    public LabPlanUpdateProperties() {
    }

    /**
     * Get the defaultConnectionProfile property: The default lab connection profile. This can be changed on a lab
     * resource and only provides a default profile.
     * 
     * @return the defaultConnectionProfile value.
     */
    public ConnectionProfile defaultConnectionProfile() {
        return this.defaultConnectionProfile;
    }

    /**
     * Set the defaultConnectionProfile property: The default lab connection profile. This can be changed on a lab
     * resource and only provides a default profile.
     * 
     * @param defaultConnectionProfile the defaultConnectionProfile value to set.
     * @return the LabPlanUpdateProperties object itself.
     */
    public LabPlanUpdateProperties withDefaultConnectionProfile(ConnectionProfile defaultConnectionProfile) {
        this.defaultConnectionProfile = defaultConnectionProfile;
        return this;
    }

    /**
     * Get the defaultAutoShutdownProfile property: The default lab shutdown profile. This can be changed on a lab
     * resource and only provides a default profile.
     * 
     * @return the defaultAutoShutdownProfile value.
     */
    public AutoShutdownProfile defaultAutoShutdownProfile() {
        return this.defaultAutoShutdownProfile;
    }

    /**
     * Set the defaultAutoShutdownProfile property: The default lab shutdown profile. This can be changed on a lab
     * resource and only provides a default profile.
     * 
     * @param defaultAutoShutdownProfile the defaultAutoShutdownProfile value to set.
     * @return the LabPlanUpdateProperties object itself.
     */
    public LabPlanUpdateProperties withDefaultAutoShutdownProfile(AutoShutdownProfile defaultAutoShutdownProfile) {
        this.defaultAutoShutdownProfile = defaultAutoShutdownProfile;
        return this;
    }

    /**
     * Get the defaultNetworkProfile property: The lab plan network profile. To enforce lab network policies they must
     * be defined here and cannot be changed when there are existing labs associated with this lab plan.
     * 
     * @return the defaultNetworkProfile value.
     */
    public LabPlanNetworkProfile defaultNetworkProfile() {
        return this.defaultNetworkProfile;
    }

    /**
     * Set the defaultNetworkProfile property: The lab plan network profile. To enforce lab network policies they must
     * be defined here and cannot be changed when there are existing labs associated with this lab plan.
     * 
     * @param defaultNetworkProfile the defaultNetworkProfile value to set.
     * @return the LabPlanUpdateProperties object itself.
     */
    public LabPlanUpdateProperties withDefaultNetworkProfile(LabPlanNetworkProfile defaultNetworkProfile) {
        this.defaultNetworkProfile = defaultNetworkProfile;
        return this;
    }

    /**
     * Get the allowedRegions property: The allowed regions for the lab creator to use when creating labs using this lab
     * plan.
     * 
     * @return the allowedRegions value.
     */
    public List<String> allowedRegions() {
        return this.allowedRegions;
    }

    /**
     * Set the allowedRegions property: The allowed regions for the lab creator to use when creating labs using this lab
     * plan.
     * 
     * @param allowedRegions the allowedRegions value to set.
     * @return the LabPlanUpdateProperties object itself.
     */
    public LabPlanUpdateProperties withAllowedRegions(List<String> allowedRegions) {
        this.allowedRegions = allowedRegions;
        return this;
    }

    /**
     * Get the sharedGalleryId property: Resource ID of the Shared Image Gallery attached to this lab plan. When saving
     * a lab template virtual machine image it will be persisted in this gallery. Shared images from the gallery can be
     * made available to use when creating new labs.
     * 
     * @return the sharedGalleryId value.
     */
    public String sharedGalleryId() {
        return this.sharedGalleryId;
    }

    /**
     * Set the sharedGalleryId property: Resource ID of the Shared Image Gallery attached to this lab plan. When saving
     * a lab template virtual machine image it will be persisted in this gallery. Shared images from the gallery can be
     * made available to use when creating new labs.
     * 
     * @param sharedGalleryId the sharedGalleryId value to set.
     * @return the LabPlanUpdateProperties object itself.
     */
    public LabPlanUpdateProperties withSharedGalleryId(String sharedGalleryId) {
        this.sharedGalleryId = sharedGalleryId;
        return this;
    }

    /**
     * Get the supportInfo property: Support contact information and instructions for users of the lab plan. This
     * information is displayed to lab owners and virtual machine users for all labs in the lab plan.
     * 
     * @return the supportInfo value.
     */
    public SupportInfo supportInfo() {
        return this.supportInfo;
    }

    /**
     * Set the supportInfo property: Support contact information and instructions for users of the lab plan. This
     * information is displayed to lab owners and virtual machine users for all labs in the lab plan.
     * 
     * @param supportInfo the supportInfo value to set.
     * @return the LabPlanUpdateProperties object itself.
     */
    public LabPlanUpdateProperties withSupportInfo(SupportInfo supportInfo) {
        this.supportInfo = supportInfo;
        return this;
    }

    /**
     * Get the linkedLmsInstance property: Base Url of the lms instance this lab plan can link lab rosters against.
     * 
     * @return the linkedLmsInstance value.
     */
    public String linkedLmsInstance() {
        return this.linkedLmsInstance;
    }

    /**
     * Set the linkedLmsInstance property: Base Url of the lms instance this lab plan can link lab rosters against.
     * 
     * @param linkedLmsInstance the linkedLmsInstance value to set.
     * @return the LabPlanUpdateProperties object itself.
     */
    public LabPlanUpdateProperties withLinkedLmsInstance(String linkedLmsInstance) {
        this.linkedLmsInstance = linkedLmsInstance;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (defaultConnectionProfile() != null) {
            defaultConnectionProfile().validate();
        }
        if (defaultAutoShutdownProfile() != null) {
            defaultAutoShutdownProfile().validate();
        }
        if (defaultNetworkProfile() != null) {
            defaultNetworkProfile().validate();
        }
        if (supportInfo() != null) {
            supportInfo().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("defaultConnectionProfile", this.defaultConnectionProfile);
        jsonWriter.writeJsonField("defaultAutoShutdownProfile", this.defaultAutoShutdownProfile);
        jsonWriter.writeJsonField("defaultNetworkProfile", this.defaultNetworkProfile);
        jsonWriter.writeArrayField("allowedRegions", this.allowedRegions,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("sharedGalleryId", this.sharedGalleryId);
        jsonWriter.writeJsonField("supportInfo", this.supportInfo);
        jsonWriter.writeStringField("linkedLmsInstance", this.linkedLmsInstance);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of LabPlanUpdateProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of LabPlanUpdateProperties if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the LabPlanUpdateProperties.
     */
    public static LabPlanUpdateProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            LabPlanUpdateProperties deserializedLabPlanUpdateProperties = new LabPlanUpdateProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("defaultConnectionProfile".equals(fieldName)) {
                    deserializedLabPlanUpdateProperties.defaultConnectionProfile = ConnectionProfile.fromJson(reader);
                } else if ("defaultAutoShutdownProfile".equals(fieldName)) {
                    deserializedLabPlanUpdateProperties.defaultAutoShutdownProfile
                        = AutoShutdownProfile.fromJson(reader);
                } else if ("defaultNetworkProfile".equals(fieldName)) {
                    deserializedLabPlanUpdateProperties.defaultNetworkProfile = LabPlanNetworkProfile.fromJson(reader);
                } else if ("allowedRegions".equals(fieldName)) {
                    List<String> allowedRegions = reader.readArray(reader1 -> reader1.getString());
                    deserializedLabPlanUpdateProperties.allowedRegions = allowedRegions;
                } else if ("sharedGalleryId".equals(fieldName)) {
                    deserializedLabPlanUpdateProperties.sharedGalleryId = reader.getString();
                } else if ("supportInfo".equals(fieldName)) {
                    deserializedLabPlanUpdateProperties.supportInfo = SupportInfo.fromJson(reader);
                } else if ("linkedLmsInstance".equals(fieldName)) {
                    deserializedLabPlanUpdateProperties.linkedLmsInstance = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedLabPlanUpdateProperties;
        });
    }
}
