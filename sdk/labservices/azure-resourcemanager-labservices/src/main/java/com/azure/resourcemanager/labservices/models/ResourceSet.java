// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.labservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Represents a VM and the setting Id it was created for. */
@Fluent
public final class ResourceSet {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ResourceSet.class);

    /*
     * VM resource Id for the environment
     */
    @JsonProperty(value = "vmResourceId")
    private String vmResourceId;

    /*
     * resourceSettingId for the environment
     */
    @JsonProperty(value = "resourceSettingId")
    private String resourceSettingId;

    /**
     * Get the vmResourceId property: VM resource Id for the environment.
     *
     * @return the vmResourceId value.
     */
    public String vmResourceId() {
        return this.vmResourceId;
    }

    /**
     * Set the vmResourceId property: VM resource Id for the environment.
     *
     * @param vmResourceId the vmResourceId value to set.
     * @return the ResourceSet object itself.
     */
    public ResourceSet withVmResourceId(String vmResourceId) {
        this.vmResourceId = vmResourceId;
        return this;
    }

    /**
     * Get the resourceSettingId property: resourceSettingId for the environment.
     *
     * @return the resourceSettingId value.
     */
    public String resourceSettingId() {
        return this.resourceSettingId;
    }

    /**
     * Set the resourceSettingId property: resourceSettingId for the environment.
     *
     * @param resourceSettingId the resourceSettingId value to set.
     * @return the ResourceSet object itself.
     */
    public ResourceSet withResourceSettingId(String resourceSettingId) {
        this.resourceSettingId = resourceSettingId;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
