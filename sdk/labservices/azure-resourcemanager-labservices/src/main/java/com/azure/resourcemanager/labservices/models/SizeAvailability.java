// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.labservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Represents the size information. */
@Fluent
public final class SizeAvailability {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(SizeAvailability.class);

    /*
     * The category of the size (Basic, Standard, Performance).
     */
    @JsonProperty(value = "sizeCategory")
    private ManagedLabVmSize sizeCategory;

    /*
     * Whether or not this size category is available
     */
    @JsonProperty(value = "isAvailable")
    private Boolean isAvailable;

    /**
     * Get the sizeCategory property: The category of the size (Basic, Standard, Performance).
     *
     * @return the sizeCategory value.
     */
    public ManagedLabVmSize sizeCategory() {
        return this.sizeCategory;
    }

    /**
     * Set the sizeCategory property: The category of the size (Basic, Standard, Performance).
     *
     * @param sizeCategory the sizeCategory value to set.
     * @return the SizeAvailability object itself.
     */
    public SizeAvailability withSizeCategory(ManagedLabVmSize sizeCategory) {
        this.sizeCategory = sizeCategory;
        return this;
    }

    /**
     * Get the isAvailable property: Whether or not this size category is available.
     *
     * @return the isAvailable value.
     */
    public Boolean isAvailable() {
        return this.isAvailable;
    }

    /**
     * Set the isAvailable property: Whether or not this size category is available.
     *
     * @param isAvailable the isAvailable value to set.
     * @return the SizeAvailability object itself.
     */
    public SizeAvailability withIsAvailable(Boolean isAvailable) {
        this.isAvailable = isAvailable;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
