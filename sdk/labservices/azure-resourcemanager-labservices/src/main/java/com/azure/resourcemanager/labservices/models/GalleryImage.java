// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.labservices.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.labservices.fluent.models.GalleryImageInner;
import java.time.OffsetDateTime;
import java.util.Map;

/** An immutable client-side representation of GalleryImage. */
public interface GalleryImage {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the author property: The author of the gallery image.
     *
     * @return the author value.
     */
    String author();

    /**
     * Gets the createdDate property: The creation date of the gallery image.
     *
     * @return the createdDate value.
     */
    OffsetDateTime createdDate();

    /**
     * Gets the description property: The description of the gallery image.
     *
     * @return the description value.
     */
    String description();

    /**
     * Gets the imageReference property: The image reference of the gallery image.
     *
     * @return the imageReference value.
     */
    GalleryImageReference imageReference();

    /**
     * Gets the icon property: The icon of the gallery image.
     *
     * @return the icon value.
     */
    String icon();

    /**
     * Gets the isEnabled property: Indicates whether this gallery image is enabled.
     *
     * @return the isEnabled value.
     */
    Boolean isEnabled();

    /**
     * Gets the isOverride property: Indicates whether this gallery has been overridden for this lab account.
     *
     * @return the isOverride value.
     */
    Boolean isOverride();

    /**
     * Gets the planId property: The third party plan that applies to this image.
     *
     * @return the planId value.
     */
    String planId();

    /**
     * Gets the isPlanAuthorized property: Indicates if the plan has been authorized for programmatic deployment.
     *
     * @return the isPlanAuthorized value.
     */
    Boolean isPlanAuthorized();

    /**
     * Gets the provisioningState property: The provisioning status of the resource.
     *
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the uniqueIdentifier property: The unique immutable identifier of a resource (Guid).
     *
     * @return the uniqueIdentifier value.
     */
    String uniqueIdentifier();

    /**
     * Gets the latestOperationResult property: The details of the latest operation. ex: status, error.
     *
     * @return the latestOperationResult value.
     */
    LatestOperationResult latestOperationResult();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.labservices.fluent.models.GalleryImageInner object.
     *
     * @return the inner object.
     */
    GalleryImageInner innerModel();

    /** The entirety of the GalleryImage definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithParentResource,
            DefinitionStages.WithCreate {
    }
    /** The GalleryImage definition stages. */
    interface DefinitionStages {
        /** The first stage of the GalleryImage definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the GalleryImage definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(String location);
        }
        /** The stage of the GalleryImage definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, labAccountName.
             *
             * @param resourceGroupName The name of the resource group.
             * @param labAccountName The name of the lab Account.
             * @return the next definition stage.
             */
            WithCreate withExistingLabaccount(String resourceGroupName, String labAccountName);
        }
        /**
         * The stage of the GalleryImage definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithIsEnabled,
                DefinitionStages.WithIsOverride,
                DefinitionStages.WithIsPlanAuthorized,
                DefinitionStages.WithProvisioningState,
                DefinitionStages.WithUniqueIdentifier {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            GalleryImage create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            GalleryImage create(Context context);
        }
        /** The stage of the GalleryImage definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the GalleryImage definition allowing to specify isEnabled. */
        interface WithIsEnabled {
            /**
             * Specifies the isEnabled property: Indicates whether this gallery image is enabled..
             *
             * @param isEnabled Indicates whether this gallery image is enabled.
             * @return the next definition stage.
             */
            WithCreate withIsEnabled(Boolean isEnabled);
        }
        /** The stage of the GalleryImage definition allowing to specify isOverride. */
        interface WithIsOverride {
            /**
             * Specifies the isOverride property: Indicates whether this gallery has been overridden for this lab
             * account.
             *
             * @param isOverride Indicates whether this gallery has been overridden for this lab account.
             * @return the next definition stage.
             */
            WithCreate withIsOverride(Boolean isOverride);
        }
        /** The stage of the GalleryImage definition allowing to specify isPlanAuthorized. */
        interface WithIsPlanAuthorized {
            /**
             * Specifies the isPlanAuthorized property: Indicates if the plan has been authorized for programmatic
             * deployment..
             *
             * @param isPlanAuthorized Indicates if the plan has been authorized for programmatic deployment.
             * @return the next definition stage.
             */
            WithCreate withIsPlanAuthorized(Boolean isPlanAuthorized);
        }
        /** The stage of the GalleryImage definition allowing to specify provisioningState. */
        interface WithProvisioningState {
            /**
             * Specifies the provisioningState property: The provisioning status of the resource..
             *
             * @param provisioningState The provisioning status of the resource.
             * @return the next definition stage.
             */
            WithCreate withProvisioningState(String provisioningState);
        }
        /** The stage of the GalleryImage definition allowing to specify uniqueIdentifier. */
        interface WithUniqueIdentifier {
            /**
             * Specifies the uniqueIdentifier property: The unique immutable identifier of a resource (Guid)..
             *
             * @param uniqueIdentifier The unique immutable identifier of a resource (Guid).
             * @return the next definition stage.
             */
            WithCreate withUniqueIdentifier(String uniqueIdentifier);
        }
    }
    /**
     * Begins update for the GalleryImage resource.
     *
     * @return the stage of resource update.
     */
    GalleryImage.Update update();

    /** The template for GalleryImage update. */
    interface Update
        extends UpdateStages.WithTags,
            UpdateStages.WithIsEnabled,
            UpdateStages.WithIsOverride,
            UpdateStages.WithIsPlanAuthorized,
            UpdateStages.WithProvisioningState,
            UpdateStages.WithUniqueIdentifier {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        GalleryImage apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        GalleryImage apply(Context context);
    }
    /** The GalleryImage update stages. */
    interface UpdateStages {
        /** The stage of the GalleryImage update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the GalleryImage update allowing to specify isEnabled. */
        interface WithIsEnabled {
            /**
             * Specifies the isEnabled property: Indicates whether this gallery image is enabled..
             *
             * @param isEnabled Indicates whether this gallery image is enabled.
             * @return the next definition stage.
             */
            Update withIsEnabled(Boolean isEnabled);
        }
        /** The stage of the GalleryImage update allowing to specify isOverride. */
        interface WithIsOverride {
            /**
             * Specifies the isOverride property: Indicates whether this gallery has been overridden for this lab
             * account.
             *
             * @param isOverride Indicates whether this gallery has been overridden for this lab account.
             * @return the next definition stage.
             */
            Update withIsOverride(Boolean isOverride);
        }
        /** The stage of the GalleryImage update allowing to specify isPlanAuthorized. */
        interface WithIsPlanAuthorized {
            /**
             * Specifies the isPlanAuthorized property: Indicates if the plan has been authorized for programmatic
             * deployment..
             *
             * @param isPlanAuthorized Indicates if the plan has been authorized for programmatic deployment.
             * @return the next definition stage.
             */
            Update withIsPlanAuthorized(Boolean isPlanAuthorized);
        }
        /** The stage of the GalleryImage update allowing to specify provisioningState. */
        interface WithProvisioningState {
            /**
             * Specifies the provisioningState property: The provisioning status of the resource..
             *
             * @param provisioningState The provisioning status of the resource.
             * @return the next definition stage.
             */
            Update withProvisioningState(String provisioningState);
        }
        /** The stage of the GalleryImage update allowing to specify uniqueIdentifier. */
        interface WithUniqueIdentifier {
            /**
             * Specifies the uniqueIdentifier property: The unique immutable identifier of a resource (Guid)..
             *
             * @param uniqueIdentifier The unique immutable identifier of a resource (Guid).
             * @return the next definition stage.
             */
            Update withUniqueIdentifier(String uniqueIdentifier);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    GalleryImage refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    GalleryImage refresh(Context context);
}
