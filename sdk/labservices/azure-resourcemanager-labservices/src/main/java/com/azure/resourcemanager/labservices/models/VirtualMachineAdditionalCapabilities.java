// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.labservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The additional capabilities for a lab VM.
 */
@Fluent
public final class VirtualMachineAdditionalCapabilities
    implements JsonSerializable<VirtualMachineAdditionalCapabilities> {
    /*
     * Flag to pre-install dedicated GPU drivers.
     */
    private EnableState installGpuDrivers;

    /**
     * Creates an instance of VirtualMachineAdditionalCapabilities class.
     */
    public VirtualMachineAdditionalCapabilities() {
    }

    /**
     * Get the installGpuDrivers property: Flag to pre-install dedicated GPU drivers.
     * 
     * @return the installGpuDrivers value.
     */
    public EnableState installGpuDrivers() {
        return this.installGpuDrivers;
    }

    /**
     * Set the installGpuDrivers property: Flag to pre-install dedicated GPU drivers.
     * 
     * @param installGpuDrivers the installGpuDrivers value to set.
     * @return the VirtualMachineAdditionalCapabilities object itself.
     */
    public VirtualMachineAdditionalCapabilities withInstallGpuDrivers(EnableState installGpuDrivers) {
        this.installGpuDrivers = installGpuDrivers;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("installGpuDrivers",
            this.installGpuDrivers == null ? null : this.installGpuDrivers.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VirtualMachineAdditionalCapabilities from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VirtualMachineAdditionalCapabilities if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the VirtualMachineAdditionalCapabilities.
     */
    public static VirtualMachineAdditionalCapabilities fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            VirtualMachineAdditionalCapabilities deserializedVirtualMachineAdditionalCapabilities
                = new VirtualMachineAdditionalCapabilities();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("installGpuDrivers".equals(fieldName)) {
                    deserializedVirtualMachineAdditionalCapabilities.installGpuDrivers
                        = EnableState.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVirtualMachineAdditionalCapabilities;
        });
    }
}
