// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.labservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Credentials for a user on a lab VM. */
@Fluent
public final class Credentials {
    /*
     * The username to use when signing in to lab VMs.
     */
    @JsonProperty(value = "username", required = true)
    private String username;

    /*
     * The password for the user. This is required for the TemplateVM createOption.
     */
    @JsonProperty(value = "password")
    private String password;

    /**
     * Get the username property: The username to use when signing in to lab VMs.
     *
     * @return the username value.
     */
    public String username() {
        return this.username;
    }

    /**
     * Set the username property: The username to use when signing in to lab VMs.
     *
     * @param username the username value to set.
     * @return the Credentials object itself.
     */
    public Credentials withUsername(String username) {
        this.username = username;
        return this;
    }

    /**
     * Get the password property: The password for the user. This is required for the TemplateVM createOption.
     *
     * @return the password value.
     */
    public String password() {
        return this.password;
    }

    /**
     * Set the password property: The password for the user. This is required for the TemplateVM createOption.
     *
     * @param password the password value to set.
     * @return the Credentials object itself.
     */
    public Credentials withPassword(String password) {
        this.password = password;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (username() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property username in model Credentials"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(Credentials.class);
}
