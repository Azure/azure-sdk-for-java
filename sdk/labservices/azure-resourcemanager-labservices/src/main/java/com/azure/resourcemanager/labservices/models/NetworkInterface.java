// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.labservices.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Network details of the environment. */
@Immutable
public final class NetworkInterface {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(NetworkInterface.class);

    /*
     * PrivateIp address of the Compute VM
     */
    @JsonProperty(value = "privateIpAddress", access = JsonProperty.Access.WRITE_ONLY)
    private String privateIpAddress;

    /*
     * Connection information for Linux
     */
    @JsonProperty(value = "sshAuthority", access = JsonProperty.Access.WRITE_ONLY)
    private String sshAuthority;

    /*
     * Connection information for Windows
     */
    @JsonProperty(value = "rdpAuthority", access = JsonProperty.Access.WRITE_ONLY)
    private String rdpAuthority;

    /*
     * Username of the VM
     */
    @JsonProperty(value = "username", access = JsonProperty.Access.WRITE_ONLY)
    private String username;

    /**
     * Get the privateIpAddress property: PrivateIp address of the Compute VM.
     *
     * @return the privateIpAddress value.
     */
    public String privateIpAddress() {
        return this.privateIpAddress;
    }

    /**
     * Get the sshAuthority property: Connection information for Linux.
     *
     * @return the sshAuthority value.
     */
    public String sshAuthority() {
        return this.sshAuthority;
    }

    /**
     * Get the rdpAuthority property: Connection information for Windows.
     *
     * @return the rdpAuthority value.
     */
    public String rdpAuthority() {
        return this.rdpAuthority;
    }

    /**
     * Get the username property: Username of the VM.
     *
     * @return the username value.
     */
    public String username() {
        return this.username;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
