// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.labservices.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of Images. */
public interface Images {
    /**
     * Gets all images.
     *
     * <p>Gets all images from galleries attached to a lab plan.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labPlanName The name of the lab plan that uniquely identifies it within containing resource group. Used in
     *     resource URIs and in UI.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all images from galleries attached to a lab plan as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Image> listByLabPlan(String resourceGroupName, String labPlanName);

    /**
     * Gets all images.
     *
     * <p>Gets all images from galleries attached to a lab plan.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labPlanName The name of the lab plan that uniquely identifies it within containing resource group. Used in
     *     resource URIs and in UI.
     * @param filter The filter to apply to the operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all images from galleries attached to a lab plan as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Image> listByLabPlan(String resourceGroupName, String labPlanName, String filter, Context context);

    /**
     * Gets an image.
     *
     * <p>Gets an image resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labPlanName The name of the lab plan that uniquely identifies it within containing resource group. Used in
     *     resource URIs and in UI.
     * @param imageName The image name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an image resource.
     */
    Image get(String resourceGroupName, String labPlanName, String imageName);

    /**
     * Gets an image.
     *
     * <p>Gets an image resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labPlanName The name of the lab plan that uniquely identifies it within containing resource group. Used in
     *     resource URIs and in UI.
     * @param imageName The image name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an image resource along with {@link Response}.
     */
    Response<Image> getWithResponse(String resourceGroupName, String labPlanName, String imageName, Context context);

    /**
     * Gets an image.
     *
     * <p>Gets an image resource.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an image resource along with {@link Response}.
     */
    Image getById(String id);

    /**
     * Gets an image.
     *
     * <p>Gets an image resource.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an image resource along with {@link Response}.
     */
    Response<Image> getByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new Image resource.
     *
     * @param name resource name.
     * @return the first stage of the new Image definition.
     */
    Image.DefinitionStages.Blank define(String name);
}
