// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.labservices.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.labservices.fluent.GalleryImagesClient;
import com.azure.resourcemanager.labservices.fluent.models.GalleryImageInner;
import com.azure.resourcemanager.labservices.models.GalleryImage;
import com.azure.resourcemanager.labservices.models.GalleryImages;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class GalleryImagesImpl implements GalleryImages {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(GalleryImagesImpl.class);

    private final GalleryImagesClient innerClient;

    private final com.azure.resourcemanager.labservices.ManagedLabsManager serviceManager;

    public GalleryImagesImpl(
        GalleryImagesClient innerClient, com.azure.resourcemanager.labservices.ManagedLabsManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<GalleryImage> list(String resourceGroupName, String labAccountName) {
        PagedIterable<GalleryImageInner> inner = this.serviceClient().list(resourceGroupName, labAccountName);
        return Utils.mapPage(inner, inner1 -> new GalleryImageImpl(inner1, this.manager()));
    }

    public PagedIterable<GalleryImage> list(
        String resourceGroupName,
        String labAccountName,
        String expand,
        String filter,
        Integer top,
        String orderby,
        Context context) {
        PagedIterable<GalleryImageInner> inner =
            this.serviceClient().list(resourceGroupName, labAccountName, expand, filter, top, orderby, context);
        return Utils.mapPage(inner, inner1 -> new GalleryImageImpl(inner1, this.manager()));
    }

    public GalleryImage get(String resourceGroupName, String labAccountName, String galleryImageName) {
        GalleryImageInner inner = this.serviceClient().get(resourceGroupName, labAccountName, galleryImageName);
        if (inner != null) {
            return new GalleryImageImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<GalleryImage> getWithResponse(
        String resourceGroupName, String labAccountName, String galleryImageName, String expand, Context context) {
        Response<GalleryImageInner> inner =
            this.serviceClient().getWithResponse(resourceGroupName, labAccountName, galleryImageName, expand, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new GalleryImageImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public void delete(String resourceGroupName, String labAccountName, String galleryImageName) {
        this.serviceClient().delete(resourceGroupName, labAccountName, galleryImageName);
    }

    public Response<Void> deleteWithResponse(
        String resourceGroupName, String labAccountName, String galleryImageName, Context context) {
        return this.serviceClient().deleteWithResponse(resourceGroupName, labAccountName, galleryImageName, context);
    }

    public GalleryImage getById(String id) {
        String resourceGroupName = Utils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String
                            .format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String labAccountName = Utils.getValueFromIdByName(id, "labaccounts");
        if (labAccountName == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String.format("The resource ID '%s' is not valid. Missing path segment 'labaccounts'.", id)));
        }
        String galleryImageName = Utils.getValueFromIdByName(id, "galleryimages");
        if (galleryImageName == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String.format("The resource ID '%s' is not valid. Missing path segment 'galleryimages'.", id)));
        }
        String localExpand = null;
        return this
            .getWithResponse(resourceGroupName, labAccountName, galleryImageName, localExpand, Context.NONE)
            .getValue();
    }

    public Response<GalleryImage> getByIdWithResponse(String id, String expand, Context context) {
        String resourceGroupName = Utils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String
                            .format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String labAccountName = Utils.getValueFromIdByName(id, "labaccounts");
        if (labAccountName == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String.format("The resource ID '%s' is not valid. Missing path segment 'labaccounts'.", id)));
        }
        String galleryImageName = Utils.getValueFromIdByName(id, "galleryimages");
        if (galleryImageName == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String.format("The resource ID '%s' is not valid. Missing path segment 'galleryimages'.", id)));
        }
        return this.getWithResponse(resourceGroupName, labAccountName, galleryImageName, expand, context);
    }

    public void deleteById(String id) {
        String resourceGroupName = Utils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String
                            .format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String labAccountName = Utils.getValueFromIdByName(id, "labaccounts");
        if (labAccountName == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String.format("The resource ID '%s' is not valid. Missing path segment 'labaccounts'.", id)));
        }
        String galleryImageName = Utils.getValueFromIdByName(id, "galleryimages");
        if (galleryImageName == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String.format("The resource ID '%s' is not valid. Missing path segment 'galleryimages'.", id)));
        }
        this.deleteWithResponse(resourceGroupName, labAccountName, galleryImageName, Context.NONE).getValue();
    }

    public Response<Void> deleteByIdWithResponse(String id, Context context) {
        String resourceGroupName = Utils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String
                            .format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String labAccountName = Utils.getValueFromIdByName(id, "labaccounts");
        if (labAccountName == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String.format("The resource ID '%s' is not valid. Missing path segment 'labaccounts'.", id)));
        }
        String galleryImageName = Utils.getValueFromIdByName(id, "galleryimages");
        if (galleryImageName == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String.format("The resource ID '%s' is not valid. Missing path segment 'galleryimages'.", id)));
        }
        return this.deleteWithResponse(resourceGroupName, labAccountName, galleryImageName, context);
    }

    private GalleryImagesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.labservices.ManagedLabsManager manager() {
        return this.serviceManager;
    }

    public GalleryImageImpl define(String name) {
        return new GalleryImageImpl(name, this.manager());
    }
}
