// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.labservices.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.Duration;
import java.time.OffsetDateTime;

/** This represents the details about a User's environment and its state. */
@Immutable
public final class EnvironmentDetails {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(EnvironmentDetails.class);

    /*
     * Name of the Environment
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /*
     * Description of the Environment
     */
    @JsonProperty(value = "description", access = JsonProperty.Access.WRITE_ONLY)
    private String description;

    /*
     * Resource Id of the environment
     */
    @JsonProperty(value = "id", access = JsonProperty.Access.WRITE_ONLY)
    private String id;

    /*
     * The provisioning state of the environment. This also includes LabIsFull
     * and NotYetProvisioned status.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private String provisioningState;

    /*
     * Details of backing DTL virtual machine with compute and network details.
     */
    @JsonProperty(value = "virtualMachineDetails", access = JsonProperty.Access.WRITE_ONLY)
    private VirtualMachineDetails virtualMachineDetails;

    /*
     * The details of the latest operation. ex: status, error
     */
    @JsonProperty(value = "latestOperationResult", access = JsonProperty.Access.WRITE_ONLY)
    private LatestOperationResult latestOperationResult;

    /*
     * Publishing state of the environment setting Possible values are
     * Creating, Created, Failed
     */
    @JsonProperty(value = "environmentState", access = JsonProperty.Access.WRITE_ONLY)
    private String environmentState;

    /*
     * How long the environment has been used by a lab user
     */
    @JsonProperty(value = "totalUsage", access = JsonProperty.Access.WRITE_ONLY)
    private Duration totalUsage;

    /*
     * When the password was last reset on the environment.
     */
    @JsonProperty(value = "passwordLastReset", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime passwordLastReset;

    /**
     * Get the name property: Name of the Environment.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the description property: Description of the Environment.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Get the id property: Resource Id of the environment.
     *
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the provisioningState property: The provisioning state of the environment. This also includes LabIsFull and
     * NotYetProvisioned status.
     *
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the virtualMachineDetails property: Details of backing DTL virtual machine with compute and network details.
     *
     * @return the virtualMachineDetails value.
     */
    public VirtualMachineDetails virtualMachineDetails() {
        return this.virtualMachineDetails;
    }

    /**
     * Get the latestOperationResult property: The details of the latest operation. ex: status, error.
     *
     * @return the latestOperationResult value.
     */
    public LatestOperationResult latestOperationResult() {
        return this.latestOperationResult;
    }

    /**
     * Get the environmentState property: Publishing state of the environment setting Possible values are Creating,
     * Created, Failed.
     *
     * @return the environmentState value.
     */
    public String environmentState() {
        return this.environmentState;
    }

    /**
     * Get the totalUsage property: How long the environment has been used by a lab user.
     *
     * @return the totalUsage value.
     */
    public Duration totalUsage() {
        return this.totalUsage;
    }

    /**
     * Get the passwordLastReset property: When the password was last reset on the environment.
     *
     * @return the passwordLastReset value.
     */
    public OffsetDateTime passwordLastReset() {
        return this.passwordLastReset;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (virtualMachineDetails() != null) {
            virtualMachineDetails().validate();
        }
        if (latestOperationResult() != null) {
            latestOperationResult().validate();
        }
    }
}
