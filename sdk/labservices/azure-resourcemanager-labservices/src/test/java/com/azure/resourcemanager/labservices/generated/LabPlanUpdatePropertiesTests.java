// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.labservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.labservices.fluent.models.LabPlanUpdateProperties;
import com.azure.resourcemanager.labservices.models.AutoShutdownProfile;
import com.azure.resourcemanager.labservices.models.ConnectionProfile;
import com.azure.resourcemanager.labservices.models.ConnectionType;
import com.azure.resourcemanager.labservices.models.EnableState;
import com.azure.resourcemanager.labservices.models.LabPlanNetworkProfile;
import com.azure.resourcemanager.labservices.models.ShutdownOnIdleMode;
import com.azure.resourcemanager.labservices.models.SupportInfo;
import java.time.Duration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class LabPlanUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LabPlanUpdateProperties model = BinaryData.fromString(
            "{\"defaultConnectionProfile\":{\"webSshAccess\":\"Private\",\"webRdpAccess\":\"Private\",\"clientSshAccess\":\"None\",\"clientRdpAccess\":\"Public\"},\"defaultAutoShutdownProfile\":{\"shutdownOnDisconnect\":\"Disabled\",\"shutdownWhenNotConnected\":\"Disabled\",\"shutdownOnIdle\":\"None\",\"disconnectDelay\":\"PT73H56M30S\",\"noConnectDelay\":\"PT147H18M37S\",\"idleDelay\":\"PT97H2M3S\"},\"defaultNetworkProfile\":{\"subnetId\":\"mkqsleyyv\"},\"allowedRegions\":[\"jpkcattpng\",\"cr\",\"czsqpjhvm\",\"ajvnysounqe\"],\"sharedGalleryId\":\"noae\",\"supportInfo\":{\"url\":\"hy\",\"email\":\"trpmo\",\"phone\":\"mcmatuokthfuiu\",\"instructions\":\"dsfcpkvxodpuoz\"},\"linkedLmsInstance\":\"zydagfuaxbezyiuo\"}")
            .toObject(LabPlanUpdateProperties.class);
        Assertions.assertEquals(ConnectionType.PRIVATE, model.defaultConnectionProfile().webSshAccess());
        Assertions.assertEquals(ConnectionType.PRIVATE, model.defaultConnectionProfile().webRdpAccess());
        Assertions.assertEquals(ConnectionType.NONE, model.defaultConnectionProfile().clientSshAccess());
        Assertions.assertEquals(ConnectionType.PUBLIC, model.defaultConnectionProfile().clientRdpAccess());
        Assertions.assertEquals(EnableState.DISABLED, model.defaultAutoShutdownProfile().shutdownOnDisconnect());
        Assertions.assertEquals(EnableState.DISABLED, model.defaultAutoShutdownProfile().shutdownWhenNotConnected());
        Assertions.assertEquals(ShutdownOnIdleMode.NONE, model.defaultAutoShutdownProfile().shutdownOnIdle());
        Assertions.assertEquals(Duration.parse("PT73H56M30S"), model.defaultAutoShutdownProfile().disconnectDelay());
        Assertions.assertEquals(Duration.parse("PT147H18M37S"), model.defaultAutoShutdownProfile().noConnectDelay());
        Assertions.assertEquals(Duration.parse("PT97H2M3S"), model.defaultAutoShutdownProfile().idleDelay());
        Assertions.assertEquals("mkqsleyyv", model.defaultNetworkProfile().subnetId());
        Assertions.assertEquals("jpkcattpng", model.allowedRegions().get(0));
        Assertions.assertEquals("noae", model.sharedGalleryId());
        Assertions.assertEquals("hy", model.supportInfo().url());
        Assertions.assertEquals("trpmo", model.supportInfo().email());
        Assertions.assertEquals("mcmatuokthfuiu", model.supportInfo().phone());
        Assertions.assertEquals("dsfcpkvxodpuoz", model.supportInfo().instructions());
        Assertions.assertEquals("zydagfuaxbezyiuo", model.linkedLmsInstance());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LabPlanUpdateProperties model = new LabPlanUpdateProperties()
            .withDefaultConnectionProfile(new ConnectionProfile().withWebSshAccess(ConnectionType.PRIVATE)
                .withWebRdpAccess(ConnectionType.PRIVATE)
                .withClientSshAccess(ConnectionType.NONE)
                .withClientRdpAccess(ConnectionType.PUBLIC))
            .withDefaultAutoShutdownProfile(new AutoShutdownProfile().withShutdownOnDisconnect(EnableState.DISABLED)
                .withShutdownWhenNotConnected(EnableState.DISABLED)
                .withShutdownOnIdle(ShutdownOnIdleMode.NONE)
                .withDisconnectDelay(Duration.parse("PT73H56M30S"))
                .withNoConnectDelay(Duration.parse("PT147H18M37S"))
                .withIdleDelay(Duration.parse("PT97H2M3S")))
            .withDefaultNetworkProfile(new LabPlanNetworkProfile().withSubnetId("mkqsleyyv"))
            .withAllowedRegions(Arrays.asList("jpkcattpng", "cr", "czsqpjhvm", "ajvnysounqe"))
            .withSharedGalleryId("noae")
            .withSupportInfo(new SupportInfo().withUrl("hy")
                .withEmail("trpmo")
                .withPhone("mcmatuokthfuiu")
                .withInstructions("dsfcpkvxodpuoz"))
            .withLinkedLmsInstance("zydagfuaxbezyiuo");
        model = BinaryData.fromObject(model).toObject(LabPlanUpdateProperties.class);
        Assertions.assertEquals(ConnectionType.PRIVATE, model.defaultConnectionProfile().webSshAccess());
        Assertions.assertEquals(ConnectionType.PRIVATE, model.defaultConnectionProfile().webRdpAccess());
        Assertions.assertEquals(ConnectionType.NONE, model.defaultConnectionProfile().clientSshAccess());
        Assertions.assertEquals(ConnectionType.PUBLIC, model.defaultConnectionProfile().clientRdpAccess());
        Assertions.assertEquals(EnableState.DISABLED, model.defaultAutoShutdownProfile().shutdownOnDisconnect());
        Assertions.assertEquals(EnableState.DISABLED, model.defaultAutoShutdownProfile().shutdownWhenNotConnected());
        Assertions.assertEquals(ShutdownOnIdleMode.NONE, model.defaultAutoShutdownProfile().shutdownOnIdle());
        Assertions.assertEquals(Duration.parse("PT73H56M30S"), model.defaultAutoShutdownProfile().disconnectDelay());
        Assertions.assertEquals(Duration.parse("PT147H18M37S"), model.defaultAutoShutdownProfile().noConnectDelay());
        Assertions.assertEquals(Duration.parse("PT97H2M3S"), model.defaultAutoShutdownProfile().idleDelay());
        Assertions.assertEquals("mkqsleyyv", model.defaultNetworkProfile().subnetId());
        Assertions.assertEquals("jpkcattpng", model.allowedRegions().get(0));
        Assertions.assertEquals("noae", model.sharedGalleryId());
        Assertions.assertEquals("hy", model.supportInfo().url());
        Assertions.assertEquals("trpmo", model.supportInfo().email());
        Assertions.assertEquals("mcmatuokthfuiu", model.supportInfo().phone());
        Assertions.assertEquals("dsfcpkvxodpuoz", model.supportInfo().instructions());
        Assertions.assertEquals("zydagfuaxbezyiuo", model.linkedLmsInstance());
    }
}
