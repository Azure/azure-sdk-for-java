// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.labservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.labservices.models.RecurrenceFrequency;
import com.azure.resourcemanager.labservices.models.RecurrencePattern;
import com.azure.resourcemanager.labservices.models.WeekDay;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RecurrencePatternTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RecurrencePattern model = BinaryData.fromString(
            "{\"frequency\":\"Weekly\",\"weekDays\":[\"Friday\",\"Tuesday\",\"Monday\"],\"interval\":1412085565,\"expirationDate\":\"2021-05-26T18:03:20Z\"}")
            .toObject(RecurrencePattern.class);
        Assertions.assertEquals(RecurrenceFrequency.WEEKLY, model.frequency());
        Assertions.assertEquals(WeekDay.FRIDAY, model.weekDays().get(0));
        Assertions.assertEquals(1412085565, model.interval());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-26T18:03:20Z"), model.expirationDate());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RecurrencePattern model = new RecurrencePattern().withFrequency(RecurrenceFrequency.WEEKLY)
            .withWeekDays(Arrays.asList(WeekDay.FRIDAY, WeekDay.TUESDAY, WeekDay.MONDAY))
            .withInterval(1412085565)
            .withExpirationDate(OffsetDateTime.parse("2021-05-26T18:03:20Z"));
        model = BinaryData.fromObject(model).toObject(RecurrencePattern.class);
        Assertions.assertEquals(RecurrenceFrequency.WEEKLY, model.frequency());
        Assertions.assertEquals(WeekDay.FRIDAY, model.weekDays().get(0));
        Assertions.assertEquals(1412085565, model.interval());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-26T18:03:20Z"), model.expirationDate());
    }
}
