// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.labservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.labservices.models.AutoShutdownProfile;
import com.azure.resourcemanager.labservices.models.ConnectionProfile;
import com.azure.resourcemanager.labservices.models.ConnectionType;
import com.azure.resourcemanager.labservices.models.EnableState;
import com.azure.resourcemanager.labservices.models.Identity;
import com.azure.resourcemanager.labservices.models.LabPlanNetworkProfile;
import com.azure.resourcemanager.labservices.models.LabPlanUpdate;
import com.azure.resourcemanager.labservices.models.ResourceIdentityType;
import com.azure.resourcemanager.labservices.models.ShutdownOnIdleMode;
import com.azure.resourcemanager.labservices.models.SupportInfo;
import java.time.Duration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class LabPlanUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LabPlanUpdate model = BinaryData.fromString(
            "{\"properties\":{\"defaultConnectionProfile\":{\"webSshAccess\":\"Private\",\"webRdpAccess\":\"None\",\"clientSshAccess\":\"Public\",\"clientRdpAccess\":\"Private\"},\"defaultAutoShutdownProfile\":{\"shutdownOnDisconnect\":\"Disabled\",\"shutdownWhenNotConnected\":\"Disabled\",\"shutdownOnIdle\":\"UserAbsence\",\"disconnectDelay\":\"PT64H48M3S\",\"noConnectDelay\":\"PT91H47M48S\",\"idleDelay\":\"PT20H31M54S\"},\"defaultNetworkProfile\":{\"subnetId\":\"pkwlhz\"},\"allowedRegions\":[\"pxjmflbvvnchr\",\"cciw\"],\"sharedGalleryId\":\"juqk\",\"supportInfo\":{\"url\":\"ajiwkuo\",\"email\":\"skghsauuimj\",\"phone\":\"xieduugidyjrr\",\"instructions\":\"y\"},\"linkedLmsInstance\":\"svexcsonpclhoco\"},\"identity\":{\"principalId\":\"kevle\",\"tenantId\":\"zfbuhf\",\"type\":\"SystemAssigned\"},\"tags\":[\"k\"]}")
            .toObject(LabPlanUpdate.class);
        Assertions.assertEquals("k", model.tags().get(0));
        Assertions.assertEquals(ResourceIdentityType.SYSTEM_ASSIGNED, model.identity().type());
        Assertions.assertEquals(ConnectionType.PRIVATE, model.defaultConnectionProfile().webSshAccess());
        Assertions.assertEquals(ConnectionType.NONE, model.defaultConnectionProfile().webRdpAccess());
        Assertions.assertEquals(ConnectionType.PUBLIC, model.defaultConnectionProfile().clientSshAccess());
        Assertions.assertEquals(ConnectionType.PRIVATE, model.defaultConnectionProfile().clientRdpAccess());
        Assertions.assertEquals(EnableState.DISABLED, model.defaultAutoShutdownProfile().shutdownOnDisconnect());
        Assertions.assertEquals(EnableState.DISABLED, model.defaultAutoShutdownProfile().shutdownWhenNotConnected());
        Assertions.assertEquals(ShutdownOnIdleMode.USER_ABSENCE, model.defaultAutoShutdownProfile().shutdownOnIdle());
        Assertions.assertEquals(Duration.parse("PT64H48M3S"), model.defaultAutoShutdownProfile().disconnectDelay());
        Assertions.assertEquals(Duration.parse("PT91H47M48S"), model.defaultAutoShutdownProfile().noConnectDelay());
        Assertions.assertEquals(Duration.parse("PT20H31M54S"), model.defaultAutoShutdownProfile().idleDelay());
        Assertions.assertEquals("pkwlhz", model.defaultNetworkProfile().subnetId());
        Assertions.assertEquals("pxjmflbvvnchr", model.allowedRegions().get(0));
        Assertions.assertEquals("juqk", model.sharedGalleryId());
        Assertions.assertEquals("ajiwkuo", model.supportInfo().url());
        Assertions.assertEquals("skghsauuimj", model.supportInfo().email());
        Assertions.assertEquals("xieduugidyjrr", model.supportInfo().phone());
        Assertions.assertEquals("y", model.supportInfo().instructions());
        Assertions.assertEquals("svexcsonpclhoco", model.linkedLmsInstance());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LabPlanUpdate model = new LabPlanUpdate().withTags(Arrays.asList("k"))
            .withIdentity(new Identity().withType(ResourceIdentityType.SYSTEM_ASSIGNED))
            .withDefaultConnectionProfile(new ConnectionProfile().withWebSshAccess(ConnectionType.PRIVATE)
                .withWebRdpAccess(ConnectionType.NONE)
                .withClientSshAccess(ConnectionType.PUBLIC)
                .withClientRdpAccess(ConnectionType.PRIVATE))
            .withDefaultAutoShutdownProfile(new AutoShutdownProfile().withShutdownOnDisconnect(EnableState.DISABLED)
                .withShutdownWhenNotConnected(EnableState.DISABLED)
                .withShutdownOnIdle(ShutdownOnIdleMode.USER_ABSENCE)
                .withDisconnectDelay(Duration.parse("PT64H48M3S"))
                .withNoConnectDelay(Duration.parse("PT91H47M48S"))
                .withIdleDelay(Duration.parse("PT20H31M54S")))
            .withDefaultNetworkProfile(new LabPlanNetworkProfile().withSubnetId("pkwlhz"))
            .withAllowedRegions(Arrays.asList("pxjmflbvvnchr", "cciw"))
            .withSharedGalleryId("juqk")
            .withSupportInfo(new SupportInfo().withUrl("ajiwkuo")
                .withEmail("skghsauuimj")
                .withPhone("xieduugidyjrr")
                .withInstructions("y"))
            .withLinkedLmsInstance("svexcsonpclhoco");
        model = BinaryData.fromObject(model).toObject(LabPlanUpdate.class);
        Assertions.assertEquals("k", model.tags().get(0));
        Assertions.assertEquals(ResourceIdentityType.SYSTEM_ASSIGNED, model.identity().type());
        Assertions.assertEquals(ConnectionType.PRIVATE, model.defaultConnectionProfile().webSshAccess());
        Assertions.assertEquals(ConnectionType.NONE, model.defaultConnectionProfile().webRdpAccess());
        Assertions.assertEquals(ConnectionType.PUBLIC, model.defaultConnectionProfile().clientSshAccess());
        Assertions.assertEquals(ConnectionType.PRIVATE, model.defaultConnectionProfile().clientRdpAccess());
        Assertions.assertEquals(EnableState.DISABLED, model.defaultAutoShutdownProfile().shutdownOnDisconnect());
        Assertions.assertEquals(EnableState.DISABLED, model.defaultAutoShutdownProfile().shutdownWhenNotConnected());
        Assertions.assertEquals(ShutdownOnIdleMode.USER_ABSENCE, model.defaultAutoShutdownProfile().shutdownOnIdle());
        Assertions.assertEquals(Duration.parse("PT64H48M3S"), model.defaultAutoShutdownProfile().disconnectDelay());
        Assertions.assertEquals(Duration.parse("PT91H47M48S"), model.defaultAutoShutdownProfile().noConnectDelay());
        Assertions.assertEquals(Duration.parse("PT20H31M54S"), model.defaultAutoShutdownProfile().idleDelay());
        Assertions.assertEquals("pkwlhz", model.defaultNetworkProfile().subnetId());
        Assertions.assertEquals("pxjmflbvvnchr", model.allowedRegions().get(0));
        Assertions.assertEquals("juqk", model.sharedGalleryId());
        Assertions.assertEquals("ajiwkuo", model.supportInfo().url());
        Assertions.assertEquals("skghsauuimj", model.supportInfo().email());
        Assertions.assertEquals("xieduugidyjrr", model.supportInfo().phone());
        Assertions.assertEquals("y", model.supportInfo().instructions());
        Assertions.assertEquals("svexcsonpclhoco", model.linkedLmsInstance());
    }
}
