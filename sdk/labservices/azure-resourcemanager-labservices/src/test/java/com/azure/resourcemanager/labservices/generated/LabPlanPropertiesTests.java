// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.labservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.labservices.fluent.models.LabPlanProperties;
import com.azure.resourcemanager.labservices.models.AutoShutdownProfile;
import com.azure.resourcemanager.labservices.models.ConnectionProfile;
import com.azure.resourcemanager.labservices.models.ConnectionType;
import com.azure.resourcemanager.labservices.models.EnableState;
import com.azure.resourcemanager.labservices.models.LabPlanNetworkProfile;
import com.azure.resourcemanager.labservices.models.ShutdownOnIdleMode;
import com.azure.resourcemanager.labservices.models.SupportInfo;
import java.time.Duration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class LabPlanPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LabPlanProperties model = BinaryData.fromString(
            "{\"provisioningState\":\"Deleting\",\"defaultConnectionProfile\":{\"webSshAccess\":\"Public\",\"webRdpAccess\":\"None\",\"clientSshAccess\":\"Public\",\"clientRdpAccess\":\"Public\"},\"defaultAutoShutdownProfile\":{\"shutdownOnDisconnect\":\"Disabled\",\"shutdownWhenNotConnected\":\"Disabled\",\"shutdownOnIdle\":\"None\",\"disconnectDelay\":\"PT208H44M21S\",\"noConnectDelay\":\"PT228H48M39S\",\"idleDelay\":\"PT226H25M8S\"},\"defaultNetworkProfile\":{\"subnetId\":\"ppusuesnzwdejba\"},\"allowedRegions\":[\"xzdmohctb\",\"vudwx\",\"ndnvo\",\"gujjugwdkcglh\"],\"sharedGalleryId\":\"azjdyggd\",\"supportInfo\":{\"url\":\"xhbkuofq\",\"email\":\"yk\",\"phone\":\"enevfyexfwhybci\",\"instructions\":\"yvdcsitynnaa\"},\"linkedLmsInstance\":\"ectehf\"}")
            .toObject(LabPlanProperties.class);
        Assertions.assertEquals(ConnectionType.PUBLIC, model.defaultConnectionProfile().webSshAccess());
        Assertions.assertEquals(ConnectionType.NONE, model.defaultConnectionProfile().webRdpAccess());
        Assertions.assertEquals(ConnectionType.PUBLIC, model.defaultConnectionProfile().clientSshAccess());
        Assertions.assertEquals(ConnectionType.PUBLIC, model.defaultConnectionProfile().clientRdpAccess());
        Assertions.assertEquals(EnableState.DISABLED, model.defaultAutoShutdownProfile().shutdownOnDisconnect());
        Assertions.assertEquals(EnableState.DISABLED, model.defaultAutoShutdownProfile().shutdownWhenNotConnected());
        Assertions.assertEquals(ShutdownOnIdleMode.NONE, model.defaultAutoShutdownProfile().shutdownOnIdle());
        Assertions.assertEquals(Duration.parse("PT208H44M21S"), model.defaultAutoShutdownProfile().disconnectDelay());
        Assertions.assertEquals(Duration.parse("PT228H48M39S"), model.defaultAutoShutdownProfile().noConnectDelay());
        Assertions.assertEquals(Duration.parse("PT226H25M8S"), model.defaultAutoShutdownProfile().idleDelay());
        Assertions.assertEquals("ppusuesnzwdejba", model.defaultNetworkProfile().subnetId());
        Assertions.assertEquals("xzdmohctb", model.allowedRegions().get(0));
        Assertions.assertEquals("azjdyggd", model.sharedGalleryId());
        Assertions.assertEquals("xhbkuofq", model.supportInfo().url());
        Assertions.assertEquals("yk", model.supportInfo().email());
        Assertions.assertEquals("enevfyexfwhybci", model.supportInfo().phone());
        Assertions.assertEquals("yvdcsitynnaa", model.supportInfo().instructions());
        Assertions.assertEquals("ectehf", model.linkedLmsInstance());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LabPlanProperties model = new LabPlanProperties()
            .withDefaultConnectionProfile(new ConnectionProfile().withWebSshAccess(ConnectionType.PUBLIC)
                .withWebRdpAccess(ConnectionType.NONE)
                .withClientSshAccess(ConnectionType.PUBLIC)
                .withClientRdpAccess(ConnectionType.PUBLIC))
            .withDefaultAutoShutdownProfile(new AutoShutdownProfile().withShutdownOnDisconnect(EnableState.DISABLED)
                .withShutdownWhenNotConnected(EnableState.DISABLED)
                .withShutdownOnIdle(ShutdownOnIdleMode.NONE)
                .withDisconnectDelay(Duration.parse("PT208H44M21S"))
                .withNoConnectDelay(Duration.parse("PT228H48M39S"))
                .withIdleDelay(Duration.parse("PT226H25M8S")))
            .withDefaultNetworkProfile(new LabPlanNetworkProfile().withSubnetId("ppusuesnzwdejba"))
            .withAllowedRegions(Arrays.asList("xzdmohctb", "vudwx", "ndnvo", "gujjugwdkcglh"))
            .withSharedGalleryId("azjdyggd")
            .withSupportInfo(new SupportInfo().withUrl("xhbkuofq")
                .withEmail("yk")
                .withPhone("enevfyexfwhybci")
                .withInstructions("yvdcsitynnaa"))
            .withLinkedLmsInstance("ectehf");
        model = BinaryData.fromObject(model).toObject(LabPlanProperties.class);
        Assertions.assertEquals(ConnectionType.PUBLIC, model.defaultConnectionProfile().webSshAccess());
        Assertions.assertEquals(ConnectionType.NONE, model.defaultConnectionProfile().webRdpAccess());
        Assertions.assertEquals(ConnectionType.PUBLIC, model.defaultConnectionProfile().clientSshAccess());
        Assertions.assertEquals(ConnectionType.PUBLIC, model.defaultConnectionProfile().clientRdpAccess());
        Assertions.assertEquals(EnableState.DISABLED, model.defaultAutoShutdownProfile().shutdownOnDisconnect());
        Assertions.assertEquals(EnableState.DISABLED, model.defaultAutoShutdownProfile().shutdownWhenNotConnected());
        Assertions.assertEquals(ShutdownOnIdleMode.NONE, model.defaultAutoShutdownProfile().shutdownOnIdle());
        Assertions.assertEquals(Duration.parse("PT208H44M21S"), model.defaultAutoShutdownProfile().disconnectDelay());
        Assertions.assertEquals(Duration.parse("PT228H48M39S"), model.defaultAutoShutdownProfile().noConnectDelay());
        Assertions.assertEquals(Duration.parse("PT226H25M8S"), model.defaultAutoShutdownProfile().idleDelay());
        Assertions.assertEquals("ppusuesnzwdejba", model.defaultNetworkProfile().subnetId());
        Assertions.assertEquals("xzdmohctb", model.allowedRegions().get(0));
        Assertions.assertEquals("azjdyggd", model.sharedGalleryId());
        Assertions.assertEquals("xhbkuofq", model.supportInfo().url());
        Assertions.assertEquals("yk", model.supportInfo().email());
        Assertions.assertEquals("enevfyexfwhybci", model.supportInfo().phone());
        Assertions.assertEquals("yvdcsitynnaa", model.supportInfo().instructions());
        Assertions.assertEquals("ectehf", model.linkedLmsInstance());
    }
}
