// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.labservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.labservices.LabServicesManager;
import com.azure.resourcemanager.labservices.models.EnableState;
import com.azure.resourcemanager.labservices.models.Image;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ImagesCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Succeeded\",\"displayName\":\"wrft\",\"description\":\"iby\",\"iconUrl\":\"dl\",\"author\":\"shfwpracstwity\",\"osType\":\"Linux\",\"plan\":\"xccedcpnmdyodn\",\"termsStatus\":\"Disabled\",\"offer\":\"tjc\",\"publisher\":\"hlt\",\"sku\":\"gcxn\",\"version\":\"vwxqibyqunyo\",\"sharedGalleryId\":\"wlmdjrkv\",\"availableRegions\":[\"vfvpdbodaciz\",\"j\",\"lhkrribdeibqipqk\"],\"osState\":\"Generalized\",\"enabledState\":\"Disabled\"},\"id\":\"dzwmkrefajpj\",\"name\":\"rwkq\",\"type\":\"yhgbijtjivfx\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        LabServicesManager manager = LabServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Image response = manager.images()
            .define("zqhof")
            .withExistingLabPlan("efozbhdms", "l")
            .withAvailableRegions(Arrays.asList("ncsdtclusiyp", "sfgytguslfead", "ygqukyhejh"))
            .withEnabledState(EnableState.DISABLED)
            .create();

        Assertions.assertEquals("vfvpdbodaciz", response.availableRegions().get(0));
        Assertions.assertEquals(EnableState.DISABLED, response.enabledState());
    }
}
