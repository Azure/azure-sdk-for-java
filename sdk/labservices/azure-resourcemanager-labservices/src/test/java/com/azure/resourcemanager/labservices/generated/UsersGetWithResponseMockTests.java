// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.labservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.labservices.LabServicesManager;
import com.azure.resourcemanager.labservices.models.User;
import java.nio.charset.StandardCharsets;
import java.time.Duration;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class UsersGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Locked\",\"displayName\":\"stmjlxrri\",\"email\":\"ozapeew\",\"registrationState\":\"NotRegistered\",\"invitationState\":\"Failed\",\"invitationSent\":\"2021-10-07T14:08:42Z\",\"totalUsage\":\"PT229H57M14S\",\"additionalUsageQuota\":\"PT130H26M58S\"},\"id\":\"iycslevuf\",\"name\":\"ztcktyh\",\"type\":\"tqedcgzulwm\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        LabServicesManager manager = LabServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        User response = manager.users()
            .getWithResponse("mbtrnegvmnvu", "eqvldspast", "bkkd", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ozapeew", response.email());
        Assertions.assertEquals(Duration.parse("PT130H26M58S"), response.additionalUsageQuota());
    }
}
