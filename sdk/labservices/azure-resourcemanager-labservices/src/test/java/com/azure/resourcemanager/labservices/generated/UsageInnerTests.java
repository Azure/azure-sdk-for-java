// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.labservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.labservices.fluent.models.UsageInner;
import com.azure.resourcemanager.labservices.models.UsageName;
import com.azure.resourcemanager.labservices.models.UsageUnit;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UsageInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UsageInner model = BinaryData.fromString(
            "{\"currentValue\":7850386713816708447,\"limit\":3070743576677662051,\"unit\":\"Count\",\"name\":{\"localizedValue\":\"brh\",\"skuInstances\":[\"sdqrhzoymibmrq\",\"ibahwflus\",\"dtmhrkwofyyvoqa\",\"piexpbtgiw\"],\"value\":\"oenwashr\"},\"id\":\"tkcnqxwb\"}")
            .toObject(UsageInner.class);
        Assertions.assertEquals(7850386713816708447L, model.currentValue());
        Assertions.assertEquals(3070743576677662051L, model.limit());
        Assertions.assertEquals(UsageUnit.COUNT, model.unit());
        Assertions.assertEquals("brh", model.name().localizedValue());
        Assertions.assertEquals("sdqrhzoymibmrq", model.name().skuInstances().get(0));
        Assertions.assertEquals("oenwashr", model.name().value());
        Assertions.assertEquals("tkcnqxwb", model.id());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UsageInner model = new UsageInner().withCurrentValue(7850386713816708447L)
            .withLimit(3070743576677662051L)
            .withUnit(UsageUnit.COUNT)
            .withName(new UsageName().withLocalizedValue("brh")
                .withSkuInstances(Arrays.asList("sdqrhzoymibmrq", "ibahwflus", "dtmhrkwofyyvoqa", "piexpbtgiw"))
                .withValue("oenwashr"))
            .withId("tkcnqxwb");
        model = BinaryData.fromObject(model).toObject(UsageInner.class);
        Assertions.assertEquals(7850386713816708447L, model.currentValue());
        Assertions.assertEquals(3070743576677662051L, model.limit());
        Assertions.assertEquals(UsageUnit.COUNT, model.unit());
        Assertions.assertEquals("brh", model.name().localizedValue());
        Assertions.assertEquals("sdqrhzoymibmrq", model.name().skuInstances().get(0));
        Assertions.assertEquals("oenwashr", model.name().value());
        Assertions.assertEquals("tkcnqxwb", model.id());
    }
}
