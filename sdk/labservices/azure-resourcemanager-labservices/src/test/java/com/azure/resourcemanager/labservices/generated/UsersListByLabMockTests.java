// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.labservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.labservices.LabServicesManager;
import com.azure.resourcemanager.labservices.models.User;
import java.nio.charset.StandardCharsets;
import java.time.Duration;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class UsersListByLabMockTests {
    @Test
    public void testListByLab() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Succeeded\",\"displayName\":\"qzhv\",\"email\":\"cib\",\"registrationState\":\"Registered\",\"invitationState\":\"Failed\",\"invitationSent\":\"2021-08-08T19:27:36Z\",\"totalUsage\":\"PT236H7M33S\",\"additionalUsageQuota\":\"PT212H47M13S\"},\"id\":\"vdwxfzwi\",\"name\":\"vwzjbhyz\",\"type\":\"xjrk\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        LabServicesManager manager = LabServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<User> response
            = manager.users().listByLab("pgogtqxepny", "b", "uajlyj", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("cib", response.iterator().next().email());
        Assertions.assertEquals(Duration.parse("PT212H47M13S"), response.iterator().next().additionalUsageQuota());
    }
}
