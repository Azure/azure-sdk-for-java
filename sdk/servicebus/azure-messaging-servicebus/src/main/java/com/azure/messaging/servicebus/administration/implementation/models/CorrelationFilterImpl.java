// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.messaging.servicebus.administration.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.xml.XmlReader;
import com.azure.xml.XmlSerializable;
import com.azure.xml.XmlToken;
import com.azure.xml.XmlWriter;

import javax.xml.namespace.QName;
import javax.xml.stream.XMLStreamException;
import java.util.ArrayList;
import java.util.List;

/** The CorrelationFilter model. */
@Fluent
public final class CorrelationFilterImpl extends RuleFilterImpl {
    /*
     * The type property.
     */
    private static final String TYPE = "CorrelationFilter";

    /*
     * The correlationId property.
     */
    private String correlationId;

    /*
     * The messageId property.
     */
    private String messageId;

    /*
     * The to property.
     */
    private String to;

    /*
     * The replyTo property.
     */
    private String replyTo;

    /*
     * The label property.
     */
    private String label;

    /*
     * The sessionId property.
     */
    private String sessionId;

    /*
     * The replyToSessionId property.
     */
    private String replyToSessionId;

    /*
     * The contentType property.
     */
    private String contentType;

    static final class PropertiesWrapper implements XmlSerializable<PropertiesWrapper> {
        private final List<KeyValueImpl> items;

        private PropertiesWrapper(List<KeyValueImpl> items) {
            this.items = items;
        }

        @Override
        public XmlWriter toXml(XmlWriter xmlWriter) throws XMLStreamException {
            return toXml(xmlWriter, null);
        }

        @Override
        public XmlWriter toXml(XmlWriter xmlWriter, String rootElementName) throws XMLStreamException {
            rootElementName = CoreUtils.isNullOrEmpty(rootElementName) ? "Properties" : rootElementName;
            xmlWriter.writeStartElement(
                    "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect", rootElementName);
            if (items != null) {
                for (KeyValueImpl element : items) {
                    xmlWriter.writeXml(element, "KeyValueOfstringanyType");
                }
            }
            return xmlWriter.writeEndElement();
        }

        public static PropertiesWrapper fromXml(XmlReader xmlReader) throws XMLStreamException {
            return fromXml(xmlReader, null);
        }

        public static PropertiesWrapper fromXml(XmlReader xmlReader, String rootElementName) throws XMLStreamException {
            rootElementName = CoreUtils.isNullOrEmpty(rootElementName) ? "Properties" : rootElementName;
            return xmlReader.readObject(
                    "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect",
                    rootElementName,
                    reader -> {
                        List<KeyValueImpl> items = null;

                        while (reader.nextElement() != XmlToken.END_ELEMENT) {
                            String elementName = reader.getElementName().getLocalPart();

                            if ("KeyValueOfstringanyType".equals(elementName)) {
                                if (items == null) {
                                    items = new ArrayList<>();
                                }

                                items.add(KeyValueImpl.fromXml(reader));
                            } else {
                                reader.nextElement();
                            }
                        }
                        return new PropertiesWrapper(items);
                    });
        }
    }

    /*
     * The properties property.
     */
    private PropertiesWrapper properties;

    /** Creates an instance of CorrelationFilter class. */
    public CorrelationFilterImpl() {}

    /**
     * Get the correlationId property: The correlationId property.
     *
     * @return the correlationId value.
     */
    public String getCorrelationId() {
        return this.correlationId;
    }

    /**
     * Set the correlationId property: The correlationId property.
     *
     * @param correlationId the correlationId value to set.
     * @return the CorrelationFilter object itself.
     */
    public CorrelationFilterImpl setCorrelationId(String correlationId) {
        this.correlationId = correlationId;
        return this;
    }

    /**
     * Get the messageId property: The messageId property.
     *
     * @return the messageId value.
     */
    public String getMessageId() {
        return this.messageId;
    }

    /**
     * Set the messageId property: The messageId property.
     *
     * @param messageId the messageId value to set.
     * @return the CorrelationFilter object itself.
     */
    public CorrelationFilterImpl setMessageId(String messageId) {
        this.messageId = messageId;
        return this;
    }

    /**
     * Get the to property: The to property.
     *
     * @return the to value.
     */
    public String getTo() {
        return this.to;
    }

    /**
     * Set the to property: The to property.
     *
     * @param to the to value to set.
     * @return the CorrelationFilter object itself.
     */
    public CorrelationFilterImpl setTo(String to) {
        this.to = to;
        return this;
    }

    /**
     * Get the replyTo property: The replyTo property.
     *
     * @return the replyTo value.
     */
    public String getReplyTo() {
        return this.replyTo;
    }

    /**
     * Set the replyTo property: The replyTo property.
     *
     * @param replyTo the replyTo value to set.
     * @return the CorrelationFilter object itself.
     */
    public CorrelationFilterImpl setReplyTo(String replyTo) {
        this.replyTo = replyTo;
        return this;
    }

    /**
     * Get the label property: The label property.
     *
     * @return the label value.
     */
    public String getLabel() {
        return this.label;
    }

    /**
     * Set the label property: The label property.
     *
     * @param label the label value to set.
     * @return the CorrelationFilter object itself.
     */
    public CorrelationFilterImpl setLabel(String label) {
        this.label = label;
        return this;
    }

    /**
     * Get the sessionId property: The sessionId property.
     *
     * @return the sessionId value.
     */
    public String getSessionId() {
        return this.sessionId;
    }

    /**
     * Set the sessionId property: The sessionId property.
     *
     * @param sessionId the sessionId value to set.
     * @return the CorrelationFilter object itself.
     */
    public CorrelationFilterImpl setSessionId(String sessionId) {
        this.sessionId = sessionId;
        return this;
    }

    /**
     * Get the replyToSessionId property: The replyToSessionId property.
     *
     * @return the replyToSessionId value.
     */
    public String getReplyToSessionId() {
        return this.replyToSessionId;
    }

    /**
     * Set the replyToSessionId property: The replyToSessionId property.
     *
     * @param replyToSessionId the replyToSessionId value to set.
     * @return the CorrelationFilter object itself.
     */
    public CorrelationFilterImpl setReplyToSessionId(String replyToSessionId) {
        this.replyToSessionId = replyToSessionId;
        return this;
    }

    /**
     * Get the contentType property: The contentType property.
     *
     * @return the contentType value.
     */
    public String getContentType() {
        return this.contentType;
    }

    /**
     * Set the contentType property: The contentType property.
     *
     * @param contentType the contentType value to set.
     * @return the CorrelationFilter object itself.
     */
    public CorrelationFilterImpl setContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }

    /**
     * Get the properties property: The properties property.
     *
     * @return the properties value.
     */
    public List<KeyValueImpl> getProperties() {
        if (this.properties == null) {
            this.properties = new PropertiesWrapper(new ArrayList<KeyValueImpl>());
        }
        return this.properties.items;
    }

    /**
     * Set the properties property: The properties property.
     *
     * @param properties the properties value to set.
     * @return the CorrelationFilter object itself.
     */
    public CorrelationFilterImpl setProperties(List<KeyValueImpl> properties) {
        this.properties = new PropertiesWrapper(properties);
        return this;
    }

    @Override
    public XmlWriter toXml(XmlWriter xmlWriter) throws XMLStreamException {
        return toXml(xmlWriter, null);
    }

    @Override
    public XmlWriter toXml(XmlWriter xmlWriter, String rootElementName) throws XMLStreamException {
        rootElementName = CoreUtils.isNullOrEmpty(rootElementName) ? "Filter" : rootElementName;
        xmlWriter.writeStartElement(rootElementName);
        xmlWriter.writeNamespace("http://schemas.microsoft.com/netservices/2010/10/servicebus/connect");
        xmlWriter.writeNamespace("xsi", "http://www.w3.org/2001/XMLSchema-instance");
        xmlWriter.writeStringAttribute("http://www.w3.org/2001/XMLSchema-instance", "type", TYPE);
        xmlWriter.writeStringElement(
                "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect",
                "CorrelationId",
                this.correlationId);
        xmlWriter.writeStringElement(
                "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect", "MessageId", this.messageId);
        xmlWriter.writeStringElement(
                "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect", "To", this.to);
        xmlWriter.writeStringElement(
                "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect", "ReplyTo", this.replyTo);
        xmlWriter.writeStringElement(
                "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect", "Label", this.label);
        xmlWriter.writeStringElement(
                "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect", "SessionId", this.sessionId);
        xmlWriter.writeStringElement(
                "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect",
                "ReplyToSessionId",
                this.replyToSessionId);
        xmlWriter.writeStringElement(
                "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect", "ContentType", this.contentType);
        xmlWriter.writeXml(this.properties);
        return xmlWriter.writeEndElement();
    }

    /**
     * Reads an instance of CorrelationFilter from the XmlReader.
     *
     * @param xmlReader The XmlReader being read.
     * @return An instance of CorrelationFilter if the XmlReader was pointing to an instance of it, or null if it was
     *     pointing to XML null.
     * @throws IllegalStateException If the deserialized XML object was missing the polymorphic discriminator.
     */
    public static CorrelationFilterImpl fromXml(XmlReader xmlReader) throws XMLStreamException {
        return fromXml(xmlReader, null);
    }

    /**
     * Reads an instance of CorrelationFilter from the XmlReader.
     *
     * @param xmlReader The XmlReader being read.
     * @return An instance of CorrelationFilter if the XmlReader was pointing to an instance of it, or null if it was
     *     pointing to XML null.
     * @throws IllegalStateException If the deserialized XML object was missing the polymorphic discriminator.
     */
    public static CorrelationFilterImpl fromXml(XmlReader xmlReader, String rootElementName) throws XMLStreamException {
        String finalRootElementName = CoreUtils.isNullOrEmpty(rootElementName) ? "Filter" : rootElementName;
        return xmlReader.readObject(
                "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect",
                finalRootElementName,
                reader -> {
                    String type = reader.getStringAttribute("http://www.w3.org/2001/XMLSchema-instance", "type");
                    if (!"CorrelationFilter".equals(type)) {
                        throw new IllegalStateException(
                                "'type' was expected to be non-null and equal to 'CorrelationFilter'. The found 'type' was '"
                                        + type
                                        + "'.");
                    }
                    String correlationId = null;
                    String messageId = null;
                    String to = null;
                    String replyTo = null;
                    String label = null;
                    String sessionId = null;
                    String replyToSessionId = null;
                    String contentType = null;
                    PropertiesWrapper properties = null;
                    while (reader.nextElement() != XmlToken.END_ELEMENT) {
                        QName elementName = reader.getElementName();

                        if ("CorrelationId".equals(elementName.getLocalPart())
                                && "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
                                        .equals(elementName.getNamespaceURI())) {
                            correlationId = reader.getStringElement();
                        } else if ("MessageId".equals(elementName.getLocalPart())
                                && "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
                                        .equals(elementName.getNamespaceURI())) {
                            messageId = reader.getStringElement();
                        } else if ("To".equals(elementName.getLocalPart())
                                && "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
                                        .equals(elementName.getNamespaceURI())) {
                            to = reader.getStringElement();
                        } else if ("ReplyTo".equals(elementName.getLocalPart())
                                && "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
                                        .equals(elementName.getNamespaceURI())) {
                            replyTo = reader.getStringElement();
                        } else if ("Label".equals(elementName.getLocalPart())
                                && "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
                                        .equals(elementName.getNamespaceURI())) {
                            label = reader.getStringElement();
                        } else if ("SessionId".equals(elementName.getLocalPart())
                                && "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
                                        .equals(elementName.getNamespaceURI())) {
                            sessionId = reader.getStringElement();
                        } else if ("ReplyToSessionId".equals(elementName.getLocalPart())
                                && "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
                                        .equals(elementName.getNamespaceURI())) {
                            replyToSessionId = reader.getStringElement();
                        } else if ("ContentType".equals(elementName.getLocalPart())
                                && "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
                                        .equals(elementName.getNamespaceURI())) {
                            contentType = reader.getStringElement();
                        } else if ("Properties".equals(elementName.getLocalPart())
                                && "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
                                        .equals(elementName.getNamespaceURI())) {
                            properties = PropertiesWrapper.fromXml(reader);
                        } else {
                            reader.skipElement();
                        }
                    }
                    CorrelationFilterImpl deserializedCorrelationFilter = new CorrelationFilterImpl();
                    deserializedCorrelationFilter.correlationId = correlationId;
                    deserializedCorrelationFilter.messageId = messageId;
                    deserializedCorrelationFilter.to = to;
                    deserializedCorrelationFilter.replyTo = replyTo;
                    deserializedCorrelationFilter.label = label;
                    deserializedCorrelationFilter.sessionId = sessionId;
                    deserializedCorrelationFilter.replyToSessionId = replyToSessionId;
                    deserializedCorrelationFilter.contentType = contentType;
                    deserializedCorrelationFilter.properties = properties;

                    return deserializedCorrelationFilter;
                });
    }
}
