// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.messaging.servicebus.administration.implementation.models;

import com.azure.core.annotation.Immutable;
import com.azure.xml.XmlReader;
import com.azure.xml.XmlSerializable;
import com.azure.xml.XmlWriter;
import javax.xml.stream.XMLStreamException;

/** The RuleAction model. */
@Immutable
public class RuleActionImpl implements XmlSerializable<RuleActionImpl> {
    /** Creates an instance of RuleAction class. */
    public RuleActionImpl() {}

    @Override
    public XmlWriter toXml(XmlWriter xmlWriter) throws XMLStreamException {
        xmlWriter.writeStartElement("Action");
        xmlWriter.writeNamespace("http://schemas.microsoft.com/netservices/2010/10/servicebus/connect");
        xmlWriter.writeStringAttribute("http://www.w3.org/2001/XMLSchema-instance", "type", "RuleAction");
        return xmlWriter.writeEndElement();
    }

    /**
     * Reads an instance of RuleAction from the XmlReader.
     *
     * @param xmlReader The XmlReader being read.
     * @return An instance of RuleAction if the XmlReader was pointing to an instance of it, or null if it was pointing
     *     to XML null.
     * @throws IllegalStateException If the deserialized XML object was missing the polymorphic discriminator.
     */
    public static RuleActionImpl fromXml(XmlReader xmlReader) throws XMLStreamException {
        return xmlReader.readObject(
                "Action",
                "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect",
                reader -> {
                    // Get the XML discriminator attribute.
                    String discriminatorValue =
                            reader.getStringAttribute("http://www.w3.org/2001/XMLSchema-instance", "type");
                    // Use the discriminator value to determine which subtype should be deserialized.
                    if ("SqlRuleAction".equals(discriminatorValue)) {
                        return SqlRuleActionImpl.fromXml(reader);
                    } else if ("EmptyRuleAction".equals(discriminatorValue)) {
                        return EmptyRuleActionImpl.fromXml(reader);
                    } else {
                        throw new IllegalStateException(
                                "Discriminator field 'type' didn't match one of the expected values 'SqlRuleAction', or 'EmptyRuleAction'. It was: '"
                                        + discriminatorValue
                                        + "'.");
                    }
                });
    }
}
