// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.messaging.servicebus.administration.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.xml.XmlReader;
import com.azure.xml.XmlSerializable;
import com.azure.xml.XmlToken;
import com.azure.xml.XmlWriter;
import javax.xml.namespace.QName;
import javax.xml.stream.XMLStreamException;

/** The author that created this resource. */
@Fluent
public final class ResponseAuthorImpl implements XmlSerializable<ResponseAuthorImpl> {
    /*
     * The Service Bus namespace
     */
    private String name;

    /** Creates an instance of ResponseAuthor class. */
    public ResponseAuthorImpl() {}

    /**
     * Get the name property: The Service Bus namespace.
     *
     * @return the name value.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Set the name property: The Service Bus namespace.
     *
     * @param name the name value to set.
     * @return the ResponseAuthor object itself.
     */
    public ResponseAuthorImpl setName(String name) {
        this.name = name;
        return this;
    }

    @Override
    public XmlWriter toXml(XmlWriter xmlWriter) throws XMLStreamException {
        xmlWriter.writeStartElement("author");
        xmlWriter.writeNamespace("http://www.w3.org/2005/Atom");
        xmlWriter.writeStringElement("http://www.w3.org/2005/Atom", "name", this.name);
        return xmlWriter.writeEndElement();
    }

    /**
     * Reads an instance of ResponseAuthor from the XmlReader.
     *
     * @param xmlReader The XmlReader being read.
     * @return An instance of ResponseAuthor if the XmlReader was pointing to an instance of it, or null if it was
     *     pointing to XML null.
     */
    public static ResponseAuthorImpl fromXml(XmlReader xmlReader) throws XMLStreamException {
        return xmlReader.readObject(
                "author",
                "http://www.w3.org/2005/Atom",
                reader -> {
                    String name = null;
                    while (reader.nextElement() != XmlToken.END_ELEMENT) {
                        QName elementName = reader.getElementName();

                        if ("name".equals(elementName.getLocalPart())
                                && "http://www.w3.org/2005/Atom".equals(elementName.getNamespaceURI())) {
                            name = reader.getStringElement();
                        } else {
                            reader.skipElement();
                        }
                    }
                    ResponseAuthorImpl deserializedResponseAuthor = new ResponseAuthorImpl();
                    deserializedResponseAuthor.name = name;

                    return deserializedResponseAuthor;
                });
    }
}
