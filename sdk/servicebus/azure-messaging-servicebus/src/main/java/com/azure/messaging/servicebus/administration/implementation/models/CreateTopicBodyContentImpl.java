// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.messaging.servicebus.administration.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.xml.XmlReader;
import com.azure.xml.XmlSerializable;
import com.azure.xml.XmlToken;
import com.azure.xml.XmlWriter;
import javax.xml.namespace.QName;
import javax.xml.stream.XMLStreamException;

/** TopicDescription for the new topic. */
@Fluent
public final class CreateTopicBodyContentImpl implements XmlSerializable<CreateTopicBodyContentImpl> {
    /*
     * MIME type of content.
     */
    private String type;

    /*
     * Topic information to create.
     */
    private TopicDescriptionImpl topicDescription;

    /** Creates an instance of CreateTopicBodyContent class. */
    public CreateTopicBodyContentImpl() {}

    /**
     * Get the type property: MIME type of content.
     *
     * @return the type value.
     */
    public String getType() {
        return this.type;
    }

    /**
     * Set the type property: MIME type of content.
     *
     * @param type the type value to set.
     * @return the CreateTopicBodyContent object itself.
     */
    public CreateTopicBodyContentImpl setType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Get the topicDescription property: Topic information to create.
     *
     * @return the topicDescription value.
     */
    public TopicDescriptionImpl getTopicDescription() {
        return this.topicDescription;
    }

    /**
     * Set the topicDescription property: Topic information to create.
     *
     * @param topicDescription the topicDescription value to set.
     * @return the CreateTopicBodyContent object itself.
     */
    public CreateTopicBodyContentImpl setTopicDescription(TopicDescriptionImpl topicDescription) {
        this.topicDescription = topicDescription;
        return this;
    }

    @Override
    public XmlWriter toXml(XmlWriter xmlWriter) throws XMLStreamException {
        xmlWriter.writeStartElement("CreateTopicBodyContent");
        xmlWriter.writeNamespace("http://www.w3.org/2005/Atom");
        xmlWriter.writeStringAttribute("type", this.type);
        xmlWriter.writeXml(this.topicDescription);
        return xmlWriter.writeEndElement();
    }

    /**
     * Reads an instance of CreateTopicBodyContent from the XmlReader.
     *
     * @param xmlReader The XmlReader being read.
     * @return An instance of CreateTopicBodyContent if the XmlReader was pointing to an instance of it, or null if it
     *     was pointing to XML null.
     */
    public static CreateTopicBodyContentImpl fromXml(XmlReader xmlReader) throws XMLStreamException {
        return xmlReader.readObject(
                "CreateTopicBodyContent",
                "http://www.w3.org/2005/Atom",
                reader -> {
                    String type = reader.getStringAttribute(null, "type");
                    TopicDescriptionImpl topicDescription = null;
                    while (reader.nextElement() != XmlToken.END_ELEMENT) {
                        QName elementName = reader.getElementName();

                        if ("TopicDescription".equals(elementName.getLocalPart())
                                && "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
                                        .equals(elementName.getNamespaceURI())) {
                            topicDescription = TopicDescriptionImpl.fromXml(reader);
                        } else {
                            reader.skipElement();
                        }
                    }
                    CreateTopicBodyContentImpl deserializedCreateTopicBodyContent = new CreateTopicBodyContentImpl();
                    deserializedCreateTopicBodyContent.type = type;
                    deserializedCreateTopicBodyContent.topicDescription = topicDescription;

                    return deserializedCreateTopicBodyContent;
                });
    }
}
