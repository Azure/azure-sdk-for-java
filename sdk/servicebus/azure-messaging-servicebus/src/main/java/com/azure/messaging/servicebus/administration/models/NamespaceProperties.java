// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.messaging.servicebus.administration.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.xml.XmlReader;
import com.azure.xml.XmlSerializable;
import com.azure.xml.XmlToken;
import com.azure.xml.XmlWriter;
import java.time.OffsetDateTime;
import java.util.Objects;
import javax.xml.namespace.QName;
import javax.xml.stream.XMLStreamException;

/** The metadata related to a Service Bus namespace. */
@Fluent
public final class NamespaceProperties implements XmlSerializable<NamespaceProperties> {
    /*
     * Alias for the geo-disaster recovery Service Bus namespace.
     */
    private String alias;

    /*
     * The exact time the namespace was created.
     */
    private OffsetDateTime createdTime;

    /*
     * The SKU for the messaging entity.
     */
    private MessagingSku messagingSku;

    /*
     * The number of messaging units allocated to the namespace.
     */
    private Integer messagingUnits;

    /*
     * The exact time the namespace was last modified.
     */
    private OffsetDateTime modifiedTime;

    /*
     * Name of the namespace
     */
    private String name;

    /*
     * The type of entities the namespace can contain.
     */
    private NamespaceType namespaceType;

    /** Creates an instance of NamespaceProperties class. */
    public NamespaceProperties() {}

    /**
     * Get the alias property: Alias for the geo-disaster recovery Service Bus namespace.
     *
     * @return the alias value.
     */
    public String getAlias() {
        return this.alias;
    }

    /**
     * Set the alias property: Alias for the geo-disaster recovery Service Bus namespace.
     *
     * @param alias the alias value to set.
     * @return the NamespaceProperties object itself.
     */
    public NamespaceProperties setAlias(String alias) {
        this.alias = alias;
        return this;
    }

    /**
     * Get the createdTime property: The exact time the namespace was created.
     *
     * @return the createdTime value.
     */
    public OffsetDateTime getCreatedTime() {
        return this.createdTime;
    }

    /**
     * Set the createdTime property: The exact time the namespace was created.
     *
     * @param createdTime the createdTime value to set.
     * @return the NamespaceProperties object itself.
     */
    NamespaceProperties setCreatedTime(OffsetDateTime createdTime) {
        this.createdTime = createdTime;
        return this;
    }

    /**
     * Get the messagingSku property: The SKU for the messaging entity.
     *
     * @return the messagingSku value.
     */
    public MessagingSku getMessagingSku() {
        return this.messagingSku;
    }

    /**
     * Set the messagingSku property: The SKU for the messaging entity.
     *
     * @param messagingSku the messagingSku value to set.
     * @return the NamespaceProperties object itself.
     */
    public NamespaceProperties setMessagingSku(MessagingSku messagingSku) {
        this.messagingSku = messagingSku;
        return this;
    }

    /**
     * Get the messagingUnits property: The number of messaging units allocated to the namespace.
     *
     * @return the messagingUnits value.
     */
    public Integer getMessagingUnits() {
        return this.messagingUnits;
    }

    /**
     * Set the messagingUnits property: The number of messaging units allocated to the namespace.
     *
     * @param messagingUnits the messagingUnits value to set.
     * @return the NamespaceProperties object itself.
     */
    public NamespaceProperties setMessagingUnits(Integer messagingUnits) {
        this.messagingUnits = messagingUnits;
        return this;
    }

    /**
     * Get the modifiedTime property: The exact time the namespace was last modified.
     *
     * @return the modifiedTime value.
     */
    public OffsetDateTime getModifiedTime() {
        return this.modifiedTime;
    }

    /**
     * Set the modifiedTime property: The exact time the namespace was last modified.
     *
     * @param modifiedTime the modifiedTime value to set.
     * @return the NamespaceProperties object itself.
     */
    public NamespaceProperties setModifiedTime(OffsetDateTime modifiedTime) {
        this.modifiedTime = modifiedTime;
        return this;
    }

    /**
     * Get the name property: Name of the namespace.
     *
     * @return the name value.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Set the name property: Name of the namespace.
     *
     * @param name the name value to set.
     * @return the NamespaceProperties object itself.
     */
    public NamespaceProperties setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the namespaceType property: The type of entities the namespace can contain.
     *
     * @return the namespaceType value.
     */
    public NamespaceType getNamespaceType() {
        return this.namespaceType;
    }

    /**
     * Set the namespaceType property: The type of entities the namespace can contain.
     *
     * @param namespaceType the namespaceType value to set.
     * @return the NamespaceProperties object itself.
     */
    public NamespaceProperties setNamespaceType(NamespaceType namespaceType) {
        this.namespaceType = namespaceType;
        return this;
    }

    @Override
    public XmlWriter toXml(XmlWriter xmlWriter) throws XMLStreamException {
        return toXml(xmlWriter, null);
    }

    @Override
    public XmlWriter toXml(XmlWriter xmlWriter, String rootElementName) throws XMLStreamException {
        rootElementName = CoreUtils.isNullOrEmpty(rootElementName) ? "NamespaceInfo" : rootElementName;
        xmlWriter.writeStartElement(rootElementName);
        xmlWriter.writeNamespace("http://schemas.microsoft.com/netservices/2010/10/servicebus/connect");
        xmlWriter.writeStringElement(
                "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect", "Alias", this.alias);
        xmlWriter.writeStringElement(
                "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect",
                "CreatedTime",
                Objects.toString(this.createdTime, null));
        xmlWriter.writeStringElement(
                "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect",
                "MessagingSKU",
                Objects.toString(this.messagingSku, null));
        xmlWriter.writeNumberElement(
                "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect",
                "MessagingUnits",
                this.messagingUnits);
        xmlWriter.writeStringElement(
                "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect",
                "ModifiedTime",
                Objects.toString(this.modifiedTime, null));
        xmlWriter.writeStringElement(
                "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect", "Name", this.name);
        xmlWriter.writeStringElement(
                "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect",
                "NamespaceType",
                Objects.toString(this.namespaceType, null));
        return xmlWriter.writeEndElement();
    }

    /**
     * Reads an instance of NamespaceProperties from the XmlReader.
     *
     * @param xmlReader The XmlReader being read.
     * @return An instance of NamespaceProperties if the XmlReader was pointing to an instance of it, or null if it was
     *     pointing to XML null.
     */
    public static NamespaceProperties fromXml(XmlReader xmlReader) throws XMLStreamException {
        return fromXml(xmlReader, null);
    }

    /**
     * Reads an instance of NamespaceProperties from the XmlReader.
     *
     * @param xmlReader The XmlReader being read.
     * @return An instance of NamespaceProperties if the XmlReader was pointing to an instance of it, or null if it was
     *     pointing to XML null.
     */
    public static NamespaceProperties fromXml(XmlReader xmlReader, String rootElementName) throws XMLStreamException {
        String finalRootElementName = CoreUtils.isNullOrEmpty(rootElementName) ? "NamespaceInfo" : rootElementName;
        return xmlReader.readObject(
                "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect",
                finalRootElementName,
                reader -> {
                    String alias = null;
                    OffsetDateTime createdTime = null;
                    MessagingSku messagingSku = null;
                    Integer messagingUnits = null;
                    OffsetDateTime modifiedTime = null;
                    String name = null;
                    NamespaceType namespaceType = null;
                    while (reader.nextElement() != XmlToken.END_ELEMENT) {
                        QName elementName = reader.getElementName();

                        if ("Alias".equals(elementName.getLocalPart())
                                && "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
                                        .equals(elementName.getNamespaceURI())) {
                            alias = reader.getStringElement();
                        } else if ("CreatedTime".equals(elementName.getLocalPart())
                                && "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
                                        .equals(elementName.getNamespaceURI())) {
                            createdTime = reader.getNullableElement(OffsetDateTime::parse);
                        } else if ("MessagingSKU".equals(elementName.getLocalPart())
                                && "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
                                        .equals(elementName.getNamespaceURI())) {
                            messagingSku = reader.getNullableElement(MessagingSku::fromString);
                        } else if ("MessagingUnits".equals(elementName.getLocalPart())
                                && "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
                                        .equals(elementName.getNamespaceURI())) {
                            messagingUnits = reader.getNullableElement(Integer::parseInt);
                        } else if ("ModifiedTime".equals(elementName.getLocalPart())
                                && "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
                                        .equals(elementName.getNamespaceURI())) {
                            modifiedTime = reader.getNullableElement(OffsetDateTime::parse);
                        } else if ("Name".equals(elementName.getLocalPart())
                                && "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
                                        .equals(elementName.getNamespaceURI())) {
                            name = reader.getStringElement();
                        } else if ("NamespaceType".equals(elementName.getLocalPart())
                                && "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
                                        .equals(elementName.getNamespaceURI())) {
                            namespaceType = reader.getNullableElement(NamespaceType::fromString);
                        } else {
                            reader.skipElement();
                        }
                    }
                    NamespaceProperties deserializedNamespaceProperties = new NamespaceProperties();
                    deserializedNamespaceProperties.alias = alias;
                    deserializedNamespaceProperties.createdTime = createdTime;
                    deserializedNamespaceProperties.messagingSku = messagingSku;
                    deserializedNamespaceProperties.messagingUnits = messagingUnits;
                    deserializedNamespaceProperties.modifiedTime = modifiedTime;
                    deserializedNamespaceProperties.name = name;
                    deserializedNamespaceProperties.namespaceType = namespaceType;

                    return deserializedNamespaceProperties;
                });
    }
}
