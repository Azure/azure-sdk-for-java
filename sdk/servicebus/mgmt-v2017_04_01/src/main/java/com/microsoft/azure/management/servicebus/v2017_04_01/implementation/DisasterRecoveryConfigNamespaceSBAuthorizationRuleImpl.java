/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.servicebus.v2017_04_01.implementation;

import com.microsoft.azure.management.servicebus.v2017_04_01.DisasterRecoveryConfigNamespaceSBAuthorizationRule;
import com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl;
import rx.Observable;
import java.util.List;
import com.microsoft.azure.management.servicebus.v2017_04_01.AccessRights;

class DisasterRecoveryConfigNamespaceSBAuthorizationRuleImpl extends IndexableRefreshableWrapperImpl<DisasterRecoveryConfigNamespaceSBAuthorizationRule, SBAuthorizationRuleInner> implements DisasterRecoveryConfigNamespaceSBAuthorizationRule {
    private final ServiceBusManager manager;
    private String resourceGroupName;
    private String namespaceName;
    private String alias;
    private String authorizationRuleName;

    DisasterRecoveryConfigNamespaceSBAuthorizationRuleImpl(SBAuthorizationRuleInner inner,  ServiceBusManager manager) {
        super(null, inner);
        this.manager = manager;
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.namespaceName = IdParsingUtils.getValueFromIdByName(inner.id(), "namespaces");
        this.alias = IdParsingUtils.getValueFromIdByName(inner.id(), "disasterRecoveryConfigs");
        this.authorizationRuleName = IdParsingUtils.getValueFromIdByName(inner.id(), "AuthorizationRules");
    }

    @Override
    public ServiceBusManager manager() {
        return this.manager;
    }

    @Override
    protected Observable<SBAuthorizationRuleInner> getInnerAsync() {
        DisasterRecoveryConfigsInner client = this.manager().inner().disasterRecoveryConfigs();
        return client.getAuthorizationRuleAsync(this.resourceGroupName, this.namespaceName, this.alias, this.authorizationRuleName);
    }



    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public List<AccessRights> rights() {
        return this.inner().rights();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

}
