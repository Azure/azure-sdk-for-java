// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicebus.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.servicebus.generated.fluent.models.RuleInner;

/** An immutable client-side representation of Rule. */
public interface Rule {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the action property: Represents the filter actions which are allowed for the transformation of a message
     * that have been matched by a filter expression.
     *
     * @return the action value.
     */
    Action action();

    /**
     * Gets the filterType property: Filter type that is evaluated against a BrokeredMessage.
     *
     * @return the filterType value.
     */
    FilterType filterType();

    /**
     * Gets the sqlFilter property: Properties of sqlFilter.
     *
     * @return the sqlFilter value.
     */
    SqlFilter sqlFilter();

    /**
     * Gets the correlationFilter property: Properties of correlationFilter.
     *
     * @return the correlationFilter value.
     */
    CorrelationFilter correlationFilter();

    /**
     * Gets the inner com.azure.resourcemanager.servicebus.generated.fluent.models.RuleInner object.
     *
     * @return the inner object.
     */
    RuleInner innerModel();

    /** The entirety of the Rule definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithResourceGroup, DefinitionStages.WithCreate {
    }
    /** The Rule definition stages. */
    interface DefinitionStages {
        /** The first stage of the Rule definition. */
        interface Blank extends WithResourceGroup {
        }
        /** The stage of the Rule definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName, namespaceName, topicName, subscriptionName.
             *
             * @param resourceGroupName Name of the Resource group within the Azure subscription.
             * @param namespaceName The namespace name.
             * @param topicName The topic name.
             * @param subscriptionName The subscription name.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(
                String resourceGroupName, String namespaceName, String topicName, String subscriptionName);
        }
        /**
         * The stage of the Rule definition which contains all the minimum required properties for the resource to be
         * created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithAction,
                DefinitionStages.WithFilterType,
                DefinitionStages.WithSqlFilter,
                DefinitionStages.WithCorrelationFilter {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            Rule create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Rule create(Context context);
        }
        /** The stage of the Rule definition allowing to specify action. */
        interface WithAction {
            /**
             * Specifies the action property: Represents the filter actions which are allowed for the transformation of
             * a message that have been matched by a filter expression..
             *
             * @param action Represents the filter actions which are allowed for the transformation of a message that
             *     have been matched by a filter expression.
             * @return the next definition stage.
             */
            WithCreate withAction(Action action);
        }
        /** The stage of the Rule definition allowing to specify filterType. */
        interface WithFilterType {
            /**
             * Specifies the filterType property: Filter type that is evaluated against a BrokeredMessage..
             *
             * @param filterType Filter type that is evaluated against a BrokeredMessage.
             * @return the next definition stage.
             */
            WithCreate withFilterType(FilterType filterType);
        }
        /** The stage of the Rule definition allowing to specify sqlFilter. */
        interface WithSqlFilter {
            /**
             * Specifies the sqlFilter property: Properties of sqlFilter.
             *
             * @param sqlFilter Properties of sqlFilter.
             * @return the next definition stage.
             */
            WithCreate withSqlFilter(SqlFilter sqlFilter);
        }
        /** The stage of the Rule definition allowing to specify correlationFilter. */
        interface WithCorrelationFilter {
            /**
             * Specifies the correlationFilter property: Properties of correlationFilter.
             *
             * @param correlationFilter Properties of correlationFilter.
             * @return the next definition stage.
             */
            WithCreate withCorrelationFilter(CorrelationFilter correlationFilter);
        }
    }
    /**
     * Begins update for the Rule resource.
     *
     * @return the stage of resource update.
     */
    Rule.Update update();

    /** The template for Rule update. */
    interface Update
        extends UpdateStages.WithAction,
            UpdateStages.WithFilterType,
            UpdateStages.WithSqlFilter,
            UpdateStages.WithCorrelationFilter {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        Rule apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Rule apply(Context context);
    }
    /** The Rule update stages. */
    interface UpdateStages {
        /** The stage of the Rule update allowing to specify action. */
        interface WithAction {
            /**
             * Specifies the action property: Represents the filter actions which are allowed for the transformation of
             * a message that have been matched by a filter expression..
             *
             * @param action Represents the filter actions which are allowed for the transformation of a message that
             *     have been matched by a filter expression.
             * @return the next definition stage.
             */
            Update withAction(Action action);
        }
        /** The stage of the Rule update allowing to specify filterType. */
        interface WithFilterType {
            /**
             * Specifies the filterType property: Filter type that is evaluated against a BrokeredMessage..
             *
             * @param filterType Filter type that is evaluated against a BrokeredMessage.
             * @return the next definition stage.
             */
            Update withFilterType(FilterType filterType);
        }
        /** The stage of the Rule update allowing to specify sqlFilter. */
        interface WithSqlFilter {
            /**
             * Specifies the sqlFilter property: Properties of sqlFilter.
             *
             * @param sqlFilter Properties of sqlFilter.
             * @return the next definition stage.
             */
            Update withSqlFilter(SqlFilter sqlFilter);
        }
        /** The stage of the Rule update allowing to specify correlationFilter. */
        interface WithCorrelationFilter {
            /**
             * Specifies the correlationFilter property: Properties of correlationFilter.
             *
             * @param correlationFilter Properties of correlationFilter.
             * @return the next definition stage.
             */
            Update withCorrelationFilter(CorrelationFilter correlationFilter);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    Rule refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Rule refresh(Context context);
}
