// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicebus.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.servicebus.generated.ServiceBusManager;
import com.azure.resourcemanager.servicebus.generated.fluent.models.SBAuthorizationRuleInner;
import com.azure.resourcemanager.servicebus.generated.models.AccessRights;
import com.azure.resourcemanager.servicebus.generated.models.SBAuthorizationRule;
import java.util.Collections;
import java.util.List;

public final class SBAuthorizationRuleImpl
    implements SBAuthorizationRule, SBAuthorizationRule.Definition, SBAuthorizationRule.Update {
    private SBAuthorizationRuleInner innerObject;

    private final ServiceBusManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public List<AccessRights> rights() {
        List<AccessRights> inner = this.innerModel().rights();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public SBAuthorizationRuleInner innerModel() {
        return this.innerObject;
    }

    private ServiceBusManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String namespaceName;

    private String authorizationRuleName;

    public SBAuthorizationRuleImpl withExistingNamespace(String resourceGroupName, String namespaceName) {
        this.resourceGroupName = resourceGroupName;
        this.namespaceName = namespaceName;
        return this;
    }

    public SBAuthorizationRule create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getNamespaces()
                .createOrUpdateAuthorizationRuleWithResponse(
                    resourceGroupName, namespaceName, authorizationRuleName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public SBAuthorizationRule create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getNamespaces()
                .createOrUpdateAuthorizationRuleWithResponse(
                    resourceGroupName, namespaceName, authorizationRuleName, this.innerModel(), context)
                .getValue();
        return this;
    }

    public SBAuthorizationRuleImpl(String name, ServiceBusManager serviceManager) {
        this.innerObject = new SBAuthorizationRuleInner();
        this.serviceManager = serviceManager;
        this.authorizationRuleName = name;
    }

    public SBAuthorizationRuleImpl update() {
        return this;
    }

    public SBAuthorizationRule apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getNamespaces()
                .createOrUpdateAuthorizationRuleWithResponse(
                    resourceGroupName, namespaceName, authorizationRuleName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public SBAuthorizationRule apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getNamespaces()
                .createOrUpdateAuthorizationRuleWithResponse(
                    resourceGroupName, namespaceName, authorizationRuleName, this.innerModel(), context)
                .getValue();
        return this;
    }

    public SBAuthorizationRuleImpl(SBAuthorizationRuleInner innerObject, ServiceBusManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.namespaceName = Utils.getValueFromIdByName(innerObject.id(), "namespaces");
        this.authorizationRuleName = Utils.getValueFromIdByName(innerObject.id(), "AuthorizationRules");
    }

    public SBAuthorizationRule refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getNamespaces()
                .getAuthorizationRuleWithResponse(resourceGroupName, namespaceName, authorizationRuleName, Context.NONE)
                .getValue();
        return this;
    }

    public SBAuthorizationRule refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getNamespaces()
                .getAuthorizationRuleWithResponse(resourceGroupName, namespaceName, authorizationRuleName, context)
                .getValue();
        return this;
    }

    public SBAuthorizationRuleImpl withRights(List<AccessRights> rights) {
        this.innerModel().withRights(rights);
        return this;
    }
}
