// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.windowsiot.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.windowsiot.fluent.models.DeviceServiceInner;
import com.azure.resourcemanager.windowsiot.fluent.models.DeviceServiceNameAvailabilityInfoInner;
import com.azure.resourcemanager.windowsiot.models.DeviceServiceCheckNameAvailabilityParameters;

/** An instance of this class provides access to all the operations defined in ServicesClient. */
public interface ServicesClient {
    /**
     * Get the non-security related metadata of a Windows IoT Device Service.
     *
     * @param resourceGroupName The name of the resource group that contains the Windows IoT Device Service.
     * @param deviceName The name of the Windows IoT Device Service.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the non-security related metadata of a Windows IoT Device Service.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DeviceServiceInner getByResourceGroup(String resourceGroupName, String deviceName);

    /**
     * Get the non-security related metadata of a Windows IoT Device Service.
     *
     * @param resourceGroupName The name of the resource group that contains the Windows IoT Device Service.
     * @param deviceName The name of the Windows IoT Device Service.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the non-security related metadata of a Windows IoT Device Service.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DeviceServiceInner> getByResourceGroupWithResponse(
        String resourceGroupName, String deviceName, Context context);

    /**
     * Create or update the metadata of a Windows IoT Device Service. The usual pattern to modify a property is to
     * retrieve the Windows IoT Device Service metadata and security metadata, and then combine them with the modified
     * values in a new body to update the Windows IoT Device Service.
     *
     * @param resourceGroupName The name of the resource group that contains the Windows IoT Device Service.
     * @param deviceName The name of the Windows IoT Device Service.
     * @param deviceService The Windows IoT Device Service metadata and security metadata.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the description of the Windows IoT Device Service.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DeviceServiceInner createOrUpdate(String resourceGroupName, String deviceName, DeviceServiceInner deviceService);

    /**
     * Create or update the metadata of a Windows IoT Device Service. The usual pattern to modify a property is to
     * retrieve the Windows IoT Device Service metadata and security metadata, and then combine them with the modified
     * values in a new body to update the Windows IoT Device Service.
     *
     * @param resourceGroupName The name of the resource group that contains the Windows IoT Device Service.
     * @param deviceName The name of the Windows IoT Device Service.
     * @param deviceService The Windows IoT Device Service metadata and security metadata.
     * @param ifMatch ETag of the Windows IoT Device Service. Do not specify for creating a new Windows IoT Device
     *     Service. Required to update an existing Windows IoT Device Service.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the description of the Windows IoT Device Service.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DeviceServiceInner> createOrUpdateWithResponse(
        String resourceGroupName, String deviceName, DeviceServiceInner deviceService, String ifMatch, Context context);

    /**
     * Updates the metadata of a Windows IoT Device Service. The usual pattern to modify a property is to retrieve the
     * Windows IoT Device Service metadata and security metadata, and then combine them with the modified values in a
     * new body to update the Windows IoT Device Service.
     *
     * @param resourceGroupName The name of the resource group that contains the Windows IoT Device Service.
     * @param deviceName The name of the Windows IoT Device Service.
     * @param deviceService The Windows IoT Device Service metadata and security metadata.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the description of the Windows IoT Device Service.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DeviceServiceInner update(String resourceGroupName, String deviceName, DeviceServiceInner deviceService);

    /**
     * Updates the metadata of a Windows IoT Device Service. The usual pattern to modify a property is to retrieve the
     * Windows IoT Device Service metadata and security metadata, and then combine them with the modified values in a
     * new body to update the Windows IoT Device Service.
     *
     * @param resourceGroupName The name of the resource group that contains the Windows IoT Device Service.
     * @param deviceName The name of the Windows IoT Device Service.
     * @param deviceService The Windows IoT Device Service metadata and security metadata.
     * @param ifMatch ETag of the Windows IoT Device Service. Do not specify for creating a brand new Windows IoT Device
     *     Service. Required to update an existing Windows IoT Device Service.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the description of the Windows IoT Device Service.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DeviceServiceInner> updateWithResponse(
        String resourceGroupName, String deviceName, DeviceServiceInner deviceService, String ifMatch, Context context);

    /**
     * Delete a Windows IoT Device Service.
     *
     * @param resourceGroupName The name of the resource group that contains the Windows IoT Device Service.
     * @param deviceName The name of the Windows IoT Device Service.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the description of the Windows IoT Device Service.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DeviceServiceInner delete(String resourceGroupName, String deviceName);

    /**
     * Delete a Windows IoT Device Service.
     *
     * @param resourceGroupName The name of the resource group that contains the Windows IoT Device Service.
     * @param deviceName The name of the Windows IoT Device Service.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the description of the Windows IoT Device Service.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DeviceServiceInner> deleteWithResponse(String resourceGroupName, String deviceName, Context context);

    /**
     * Get all the IoT hubs in a resource group.
     *
     * @param resourceGroupName The name of the resource group that contains the Windows IoT Device Service.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all the IoT hubs in a resource group.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DeviceServiceInner> listByResourceGroup(String resourceGroupName);

    /**
     * Get all the IoT hubs in a resource group.
     *
     * @param resourceGroupName The name of the resource group that contains the Windows IoT Device Service.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all the IoT hubs in a resource group.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DeviceServiceInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Get all the IoT hubs in a subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all the IoT hubs in a subscription.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DeviceServiceInner> list();

    /**
     * Get all the IoT hubs in a subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all the IoT hubs in a subscription.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DeviceServiceInner> list(Context context);

    /**
     * Check if a Windows IoT Device Service name is available.
     *
     * @param deviceServiceCheckNameAvailabilityParameters Set the name parameter in the
     *     DeviceServiceCheckNameAvailabilityParameters structure to the name of the Windows IoT Device Service to
     *     check.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the properties indicating whether a given Windows IoT Device Service name is available.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DeviceServiceNameAvailabilityInfoInner checkDeviceServiceNameAvailability(
        DeviceServiceCheckNameAvailabilityParameters deviceServiceCheckNameAvailabilityParameters);

    /**
     * Check if a Windows IoT Device Service name is available.
     *
     * @param deviceServiceCheckNameAvailabilityParameters Set the name parameter in the
     *     DeviceServiceCheckNameAvailabilityParameters structure to the name of the Windows IoT Device Service to
     *     check.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the properties indicating whether a given Windows IoT Device Service name is available.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DeviceServiceNameAvailabilityInfoInner> checkDeviceServiceNameAvailabilityWithResponse(
        DeviceServiceCheckNameAvailabilityParameters deviceServiceCheckNameAvailabilityParameters, Context context);
}
