type: specs.openrewrite.org/v1beta/recipe
name: com.azure.openrewrite.migrateToVNext
displayName: Migrate from azure-core to azure-core-v2
description: This recipe migrates the azure sdk libraries from azure-core to azure-core-v2 and clientcore libraries.
recipeList:
  # SDK-specific recipes
  - com.azure.openrewrite.core.CoreMigrationRecipes
  #- com.azure.openrewrite.storage.StorageMigrationRecipes
  - com.azure.openrewrite.recipes.migrateAzureCoreLibraries

  # - com.azure.openrewrite.recipes.migrateAzureStorageLibraries
  #- com.azure.openrewrite.recipes.migrateAzureAILibraries

  # run this recipe after migration recipes
  #- com.azure.openrewrite.recipes.defaultRecipes

  # Ignore module-info.java for now until OpenRewrite implements support for it
  # Recipe to migrate com.azure.core requirements in module-info.java to com.azure.core.v2
  #- org.openrewrite.text.FindAndReplace:
  #    regex: true
  #    find: 'requires\s+(transitive\s+)?com\.azure\.core(?!\.v2)'
  #    replace: 'requires $1com.azure.core.v2'
  #    filePattern: '**/module-info.java'

---

# --------------------------------------------------------------------
# Migration Recipes for Azure Core Libraries
# --------------------------------------------------------------------
# TODO: Move these to src/main/java/com/azure/openrewrite/core/CoreMigrationRecipes.java (jairmyree)
type: specs.openrewrite.org/v1beta/recipe
name: com.azure.openrewrite.recipes.migrateAzureCoreLibrariesTmpChange
displayName: Migrate from azure-core to azure-core-v2
description: This recipe migrates the azure sdk libraries from azure-core to azure-core-v2 and clientcore libraries.
recipeList:
  # Before: import com.azure.core.http.HttpHeaderName;
  # After: import io.clientcore.core.http.models.HttpHeaderName;
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.http.HttpHeaderName
      newFullyQualifiedTypeName: io.clientcore.core.http.models.HttpHeaderName

  # Before: import com.azure.core.util.logging.ClientLogger;
  # After: import io.clientcore.core.util.ClientLogger;
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.util.logging.ClientLogger
      newFullyQualifiedTypeName: io.clientcore.core.util.ClientLogger


  # Before: import com.azure.core.util.CoreUtils;
  # After: import com.azure.core.v2.util.CoreUtils;
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.util.CoreUtils
      newFullyQualifiedTypeName: com.azure.core.v2.util.CoreUtils


  # Before: import com.azure.core.http.policy.KeyCredentialPolicy;
  # After: import io.clientcore.core.http.pipeline.KeyCredentialPolicy;
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.http.policy.KeyCredentialPolicy
      newFullyQualifiedTypeName: io.clientcore.core.http.pipeline.KeyCredentialPolicy


  # Before: import com.azure.core.credential.KeyCredential;
  # After: import io.clientcore.core.credential.KeyCredential;
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.credential.KeyCredential
      newFullyQualifiedTypeName: io.clientcore.core.credential.KeyCredential


  # Before: import com.azure.core.client.traits.KeyCredentialTrait;
  # After: import io.clientcore.core.models.traits.KeyCredentialTrait;
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.client.traits.KeyCredentialTrait
      newFullyQualifiedTypeName: io.clientcore.core.models.traits.KeyCredentialTrait

  # TODO: Look to remove this (jairmyree)
  # NOTE:
  #    A copy of the client-core jar file must be in the resources\classpath
  #    directory to reliably parse from clientcore library


  # Before: import com.azure.core.http.HttpClient;
  # After: import io.clientcore.core.http.client.HttpClient;
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.http.HttpClient
      newFullyQualifiedTypeName: io.clientcore.core.http.client.HttpClient
      ignoreDefinition: false

  # Before: import com.azure.core.http.HttpPipeline;
  # After: import io.clientcore.core.http.pipeline.HttpPipeline;
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.http.HttpPipeline
      newFullyQualifiedTypeName: io.clientcore.core.http.pipeline.HttpPipeline
      ignoreDefinition: false

  # Before: import com.azure.core.http.policy.HttpPipelinePolicy;
  # After: import io.clientcore.core.http.pipeline.HttpPipelinePolicy;
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.http.policy.HttpPipelinePolicy
      newFullyQualifiedTypeName: io.clientcore.core.http.pipeline.HttpPipelinePolicy
      ignoreDefinition: false

  # TODO: Look to remove this (jairmyree)
  # Recipes that update all instances of azure-core exceptions where

  # Before: import com.azure.core.exception.ClientAuthenticationException;
  # After: import com.azure.core.v2.exception.ClientAuthenticationException;
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.exception.ClientAuthenticationException
      newFullyQualifiedTypeName: com.azure.core.v2.exception.ClientAuthenticationException

  # Before: import com.azure.core.exception.ResourceModifiedException;
  # After: import com.azure.core.v2.exception.ResourceModifiedException;
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.exception.ResourceModifiedException
      newFullyQualifiedTypeName: com.azure.core.v2.exception.ResourceModifiedException
  # Before: import com.azure.core.exception.ResourceNotFoundException;
  # After: import com.azure.core.v2.exception.ResourceNotFoundException;
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.exception.ResourceNotFoundException
      newFullyQualifiedTypeName: com.azure.core.v2.exception.ResourceNotFoundException

  # Before: import com.azure.core.exception.HttpResponseException;
  # After: import io.clientcore.core.http.exception.HttpResponseException;
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.exception.HttpResponseException
      newFullyQualifiedTypeName: io.clientcore.core.http.exception.HttpResponseException
  # End azure-core-exception change type Recipes

  # Before: import com.azure.core.util.Configuration;
  # After: import io.clientcore.core.util.configuration.Configuration;
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.util.Configuration
      newFullyQualifiedTypeName: io.clientcore.core.util.configuration.Configuration

  # Before: import com.azure.core.credential.AzureSasCredential;
  # After: import io.clientcore.core.credential.KeyCredential;
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.credential.AzureSasCredential
      newFullyQualifiedTypeName: io.clientcore.core.credential.KeyCredential


  # azure-core v2 BinaryData.toObject throws an IOException. This recipe encloses all calls in
  # a try-catch block.
  # Before:
  # List<TranslatedTextItem> result = binaryDataResponse.getValue().toObject( /* Any Args */);
  # After:
  # List<TranslatedTextItem> result = null;
  # try {
  #     result = binaryDataResponse.getValue().toObject( /* Any Args */);
  # } catch (IOException e) {
  #     e.printStackTrace();
  # }
  #
  # NOTE: Tests are failing, so I'm disabling this recipe for now.
  # WARNING: This recipe MUST be run before com.azure.openrewrite.TypeReferenceRecipe.
  #- com.azure.openrewrite.AddTryCatchToMethodCallRecipe:
  #    methodPattern: com.azure.core.util.BinaryData toObject(..)
  #    catchTemplateString: catch (IOException e) { e.printStackTrace(); }
  #    fullyQualifiedExceptionName: java.io.IOException
  #    excludeOwner: true

  # azure-core v2 TextTranslationClient.translate throws an IOException. This recipe encloses all calls in
  # a try-catch block.
  # Before:
  # List<TranslatedTextItem> result = textTranslationClient.translate( /* Any Args */);
  # After:
  # List<TranslatedTextItem> result = null;
  # try {
  #     result = textTranslationClient.translate( /* Any Args */);
  # } catch (IOException e) {
  #     throw new RuntimeException(e);
  # }
  # NOTE: Tests are failing, so I'm disabling this recipe for now.
  #- com.azure.openrewrite.AddTryCatchToMethodCallRecipe:
  #    methodPattern: com.azure.ai.translation.text.TextTranslationClient translate(..)
  #    catchTemplateString: catch (IOException e) { throw new RuntimeException(e); }
  #    fullyQualifiedExceptionName: java.io.IOException
  #    excludeOwner: true

  # TODO: Check these imperative recipes for bugs (jairmyree)
  #- com.azure.openrewrite.core.ResponseRecipe
  #- com.azure.openrewrite.core.ContextRecipe
  #- com.azure.openrewrite.core.RetryOptionsConstructorRecipe
  #- com.azure.openrewrite.TypeReferenceRecipe
  #- com.azure.openrewrite.core.HttpLogOptionsRecipe
  #- com.azure.openrewrite.RemoveFixedDelayRecipe

---
type: specs.openrewrite.org/v1beta/recipe
name: com.azure.openrewrite.recipes.migrateAzureAILibraries
displayName: Migrate azure translation libraries to next-gen libraries
description: This recipe migrates the azure translation libraries to the next-gen libraries.
recipeList:
  # Rename methods
  # Alternatively, can target HttpTrait directly

  # Before: textTranslationClient.retryOptions(new RetryOptions())
  # After: textTranslationClient.httpRetryOptions(new RetryOptions())
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.azure.ai.translation.text.TextTranslationClientBuilder retryOptions(..)
      newMethodName: httpRetryOptions
      matchOverrides: true

  # Before:
  # textTranslationClient.pipeline(pipeline)
  # After:
  # textTranslationClient.httpPipeline(pipeline)
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.azure.ai.translation.text.TextTranslationClientBuilder pipeline(..)
      newMethodName: httpPipeline
      matchOverrides: true

  # Before:
  # textTranslationClient.addPolicy(customPolicy)
  # After:
  # textTranslationClient.addHttpPipelinePolicy(customPolicy)
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.azure.ai.translation.text.TextTranslationClientBuilder addPolicy(..)
      newMethodName: addHttpPipelinePolicy
      matchOverrides: true
---
# Default Recipes to run after migration recipes
type: specs.openrewrite.org/v1beta/recipe
name: com.azure.openrewrite.recipes.defaultRecipes
displayName: Migrate to next-gen Storage libraries
description: This recipe migrates the azure sdk storage libraries to the next-gen libraries.
recipeList:
  # Recipe to re-order imports to match standard conventions
  - org.openrewrite.java.OrderImports
---
