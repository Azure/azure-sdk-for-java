// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.arizeaiobservabilityeval.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.arizeaiobservabilityeval.models.MarketplaceDetails;
import com.azure.resourcemanager.arizeaiobservabilityeval.models.OfferDetails;
import com.azure.resourcemanager.arizeaiobservabilityeval.models.OrganizationProperties;
import com.azure.resourcemanager.arizeaiobservabilityeval.models.PartnerProperties;
import com.azure.resourcemanager.arizeaiobservabilityeval.models.SingleSignOnPropertiesV2;
import com.azure.resourcemanager.arizeaiobservabilityeval.models.SingleSignOnStates;
import com.azure.resourcemanager.arizeaiobservabilityeval.models.SingleSignOnType;
import com.azure.resourcemanager.arizeaiobservabilityeval.models.UserDetails;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OrganizationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OrganizationProperties model = BinaryData.fromString(
            "{\"marketplace\":{\"subscriptionId\":\"felluwfzitonpe\",\"subscriptionStatus\":\"Suspended\",\"offerDetails\":{\"publisherId\":\"jkjlxofpdvhpfx\",\"offerId\":\"ypininm\",\"planId\":\"yhuybbkpod\",\"planName\":\"ooginuvamih\",\"termUnit\":\"gnarxzxtheo\",\"termId\":\"si\"}},\"user\":{\"firstName\":\"evcciqihnhun\",\"lastName\":\"wjzrnfygxgisp\",\"emailAddress\":\"vtz\",\"upn\":\"ufubl\",\"phoneNumber\":\"fxqeof\"},\"provisioningState\":\"Failed\",\"partnerProperties\":{\"description\":\"qjhqjbas\"},\"singleSignOnProperties\":{\"type\":\"OpenId\",\"state\":\"Initial\",\"enterpriseAppId\":\"ulngsntn\",\"url\":\"bkzgcwrwclx\",\"aadDomains\":[\"ljdousk\",\"qvkoc\",\"cjdkwtnhxbnjbi\"]}}")
            .toObject(OrganizationProperties.class);
        Assertions.assertEquals("felluwfzitonpe", model.marketplace().subscriptionId());
        Assertions.assertEquals("jkjlxofpdvhpfx", model.marketplace().offerDetails().publisherId());
        Assertions.assertEquals("ypininm", model.marketplace().offerDetails().offerId());
        Assertions.assertEquals("yhuybbkpod", model.marketplace().offerDetails().planId());
        Assertions.assertEquals("ooginuvamih", model.marketplace().offerDetails().planName());
        Assertions.assertEquals("gnarxzxtheo", model.marketplace().offerDetails().termUnit());
        Assertions.assertEquals("si", model.marketplace().offerDetails().termId());
        Assertions.assertEquals("evcciqihnhun", model.user().firstName());
        Assertions.assertEquals("wjzrnfygxgisp", model.user().lastName());
        Assertions.assertEquals("vtz", model.user().emailAddress());
        Assertions.assertEquals("ufubl", model.user().upn());
        Assertions.assertEquals("fxqeof", model.user().phoneNumber());
        Assertions.assertEquals("qjhqjbas", model.partnerProperties().description());
        Assertions.assertEquals(SingleSignOnType.OPEN_ID, model.singleSignOnProperties().type());
        Assertions.assertEquals(SingleSignOnStates.INITIAL, model.singleSignOnProperties().state());
        Assertions.assertEquals("ulngsntn", model.singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("bkzgcwrwclx", model.singleSignOnProperties().url());
        Assertions.assertEquals("ljdousk", model.singleSignOnProperties().aadDomains().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OrganizationProperties model = new OrganizationProperties()
            .withMarketplace(new MarketplaceDetails().withSubscriptionId("felluwfzitonpe")
                .withOfferDetails(new OfferDetails().withPublisherId("jkjlxofpdvhpfx")
                    .withOfferId("ypininm")
                    .withPlanId("yhuybbkpod")
                    .withPlanName("ooginuvamih")
                    .withTermUnit("gnarxzxtheo")
                    .withTermId("si")))
            .withUser(new UserDetails().withFirstName("evcciqihnhun")
                .withLastName("wjzrnfygxgisp")
                .withEmailAddress("vtz")
                .withUpn("ufubl")
                .withPhoneNumber("fxqeof"))
            .withPartnerProperties(new PartnerProperties().withDescription("qjhqjbas"))
            .withSingleSignOnProperties(new SingleSignOnPropertiesV2().withType(SingleSignOnType.OPEN_ID)
                .withState(SingleSignOnStates.INITIAL)
                .withEnterpriseAppId("ulngsntn")
                .withUrl("bkzgcwrwclx")
                .withAadDomains(Arrays.asList("ljdousk", "qvkoc", "cjdkwtnhxbnjbi")));
        model = BinaryData.fromObject(model).toObject(OrganizationProperties.class);
        Assertions.assertEquals("felluwfzitonpe", model.marketplace().subscriptionId());
        Assertions.assertEquals("jkjlxofpdvhpfx", model.marketplace().offerDetails().publisherId());
        Assertions.assertEquals("ypininm", model.marketplace().offerDetails().offerId());
        Assertions.assertEquals("yhuybbkpod", model.marketplace().offerDetails().planId());
        Assertions.assertEquals("ooginuvamih", model.marketplace().offerDetails().planName());
        Assertions.assertEquals("gnarxzxtheo", model.marketplace().offerDetails().termUnit());
        Assertions.assertEquals("si", model.marketplace().offerDetails().termId());
        Assertions.assertEquals("evcciqihnhun", model.user().firstName());
        Assertions.assertEquals("wjzrnfygxgisp", model.user().lastName());
        Assertions.assertEquals("vtz", model.user().emailAddress());
        Assertions.assertEquals("ufubl", model.user().upn());
        Assertions.assertEquals("fxqeof", model.user().phoneNumber());
        Assertions.assertEquals("qjhqjbas", model.partnerProperties().description());
        Assertions.assertEquals(SingleSignOnType.OPEN_ID, model.singleSignOnProperties().type());
        Assertions.assertEquals(SingleSignOnStates.INITIAL, model.singleSignOnProperties().state());
        Assertions.assertEquals("ulngsntn", model.singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("bkzgcwrwclx", model.singleSignOnProperties().url());
        Assertions.assertEquals("ljdousk", model.singleSignOnProperties().aadDomains().get(0));
    }
}
