// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.weightsandbiases.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.weightsandbiases.models.SingleSignOnPropertiesV2;
import com.azure.resourcemanager.weightsandbiases.models.SingleSignOnStates;
import com.azure.resourcemanager.weightsandbiases.models.SingleSignOnType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SingleSignOnPropertiesV2Tests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SingleSignOnPropertiesV2 model = BinaryData.fromString(
            "{\"type\":\"Saml\",\"state\":\"Disable\",\"enterpriseAppId\":\"svqwhbmdgbbjfd\",\"url\":\"mbmbexppbh\",\"aadDomains\":[\"rolfpfp\",\"algbquxigjyjg\"]}")
            .toObject(SingleSignOnPropertiesV2.class);
        Assertions.assertEquals(SingleSignOnType.SAML, model.type());
        Assertions.assertEquals(SingleSignOnStates.DISABLE, model.state());
        Assertions.assertEquals("svqwhbmdgbbjfd", model.enterpriseAppId());
        Assertions.assertEquals("mbmbexppbh", model.url());
        Assertions.assertEquals("rolfpfp", model.aadDomains().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SingleSignOnPropertiesV2 model = new SingleSignOnPropertiesV2().withType(SingleSignOnType.SAML)
            .withState(SingleSignOnStates.DISABLE)
            .withEnterpriseAppId("svqwhbmdgbbjfd")
            .withUrl("mbmbexppbh")
            .withAadDomains(Arrays.asList("rolfpfp", "algbquxigjyjg"));
        model = BinaryData.fromObject(model).toObject(SingleSignOnPropertiesV2.class);
        Assertions.assertEquals(SingleSignOnType.SAML, model.type());
        Assertions.assertEquals(SingleSignOnStates.DISABLE, model.state());
        Assertions.assertEquals("svqwhbmdgbbjfd", model.enterpriseAppId());
        Assertions.assertEquals("mbmbexppbh", model.url());
        Assertions.assertEquals("rolfpfp", model.aadDomains().get(0));
    }
}
