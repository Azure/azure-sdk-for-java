// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.weightsandbiases.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.weightsandbiases.models.SingleSignOnPropertiesV2;
import com.azure.resourcemanager.weightsandbiases.models.SingleSignOnStates;
import com.azure.resourcemanager.weightsandbiases.models.SingleSignOnType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SingleSignOnPropertiesV2Tests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SingleSignOnPropertiesV2 model = BinaryData.fromString(
            "{\"type\":\"OpenId\",\"state\":\"Enable\",\"enterpriseAppId\":\"ulzndlikwyqk\",\"url\":\"gibma\",\"aadDomains\":[\"keqsrxybzqqedq\",\"tbciqfouflmm\"]}")
            .toObject(SingleSignOnPropertiesV2.class);
        Assertions.assertEquals(SingleSignOnType.OPEN_ID, model.type());
        Assertions.assertEquals(SingleSignOnStates.ENABLE, model.state());
        Assertions.assertEquals("ulzndlikwyqk", model.enterpriseAppId());
        Assertions.assertEquals("gibma", model.url());
        Assertions.assertEquals("keqsrxybzqqedq", model.aadDomains().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SingleSignOnPropertiesV2 model = new SingleSignOnPropertiesV2().withType(SingleSignOnType.OPEN_ID)
            .withState(SingleSignOnStates.ENABLE)
            .withEnterpriseAppId("ulzndlikwyqk")
            .withUrl("gibma")
            .withAadDomains(Arrays.asList("keqsrxybzqqedq", "tbciqfouflmm"));
        model = BinaryData.fromObject(model).toObject(SingleSignOnPropertiesV2.class);
        Assertions.assertEquals(SingleSignOnType.OPEN_ID, model.type());
        Assertions.assertEquals(SingleSignOnStates.ENABLE, model.state());
        Assertions.assertEquals("ulzndlikwyqk", model.enterpriseAppId());
        Assertions.assertEquals("gibma", model.url());
        Assertions.assertEquals("keqsrxybzqqedq", model.aadDomains().get(0));
    }
}
