// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.weightsandbiases.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.weightsandbiases.WeightsAndBiasesManager;
import com.azure.resourcemanager.weightsandbiases.models.InstanceResource;
import com.azure.resourcemanager.weightsandbiases.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.weightsandbiases.models.Region;
import com.azure.resourcemanager.weightsandbiases.models.SingleSignOnStates;
import com.azure.resourcemanager.weightsandbiases.models.SingleSignOnType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class InstancesGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"marketplace\":{\"subscriptionId\":\"evgbmqjq\",\"subscriptionStatus\":\"PendingFulfillmentStart\",\"offerDetails\":{\"publisherId\":\"y\",\"offerId\":\"mivkwlzuvcc\",\"planId\":\"wnfnbacf\",\"planName\":\"nlebxetqgtzxd\",\"termUnit\":\"qbqqwxr\",\"termId\":\"eallnwsubisnj\"}},\"user\":{\"firstName\":\"pmng\",\"lastName\":\"scxaq\",\"emailAddress\":\"ochcbonqvpkvl\",\"upn\":\"njeaseipheofloke\",\"phoneNumber\":\"ienjbdlwtgr\"},\"provisioningState\":\"Failed\",\"partnerProperties\":{\"region\":\"centralus\",\"subdomain\":\"pj\"},\"singleSignOnProperties\":{\"type\":\"OpenId\",\"state\":\"Enable\",\"enterpriseAppId\":\"zj\",\"url\":\"yegu\",\"aadDomains\":[\"b\"]}},\"identity\":{\"principalId\":\"e\",\"tenantId\":\"zzvdudgwds\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"cftadeh\":{\"principalId\":\"wmc\",\"clientId\":\"pwlbjnpg\"},\"ej\":{\"principalId\":\"ltyfsop\",\"clientId\":\"suesnzw\"}}},\"location\":\"vorxzdmohct\",\"tags\":{\"ugw\":\"udwxdndnvowguj\",\"dyggdtjixhbku\":\"kcglhslaz\"},\"id\":\"fqweykhmene\",\"name\":\"fyexfwhy\",\"type\":\"cibvyvdcsitynn\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        WeightsAndBiasesManager manager = WeightsAndBiasesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        InstanceResource response = manager.instances()
            .getByResourceGroupWithResponse("nc", "cpecfvmmcoofs", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("vorxzdmohct", response.location());
        Assertions.assertEquals("udwxdndnvowguj", response.tags().get("ugw"));
        Assertions.assertEquals("evgbmqjq", response.properties().marketplace().subscriptionId());
        Assertions.assertEquals("y", response.properties().marketplace().offerDetails().publisherId());
        Assertions.assertEquals("mivkwlzuvcc", response.properties().marketplace().offerDetails().offerId());
        Assertions.assertEquals("wnfnbacf", response.properties().marketplace().offerDetails().planId());
        Assertions.assertEquals("nlebxetqgtzxd", response.properties().marketplace().offerDetails().planName());
        Assertions.assertEquals("qbqqwxr", response.properties().marketplace().offerDetails().termUnit());
        Assertions.assertEquals("eallnwsubisnj", response.properties().marketplace().offerDetails().termId());
        Assertions.assertEquals("pmng", response.properties().user().firstName());
        Assertions.assertEquals("scxaq", response.properties().user().lastName());
        Assertions.assertEquals("ochcbonqvpkvl", response.properties().user().emailAddress());
        Assertions.assertEquals("njeaseipheofloke", response.properties().user().upn());
        Assertions.assertEquals("ienjbdlwtgr", response.properties().user().phoneNumber());
        Assertions.assertEquals(Region.CENTRALUS, response.properties().partnerProperties().region());
        Assertions.assertEquals("pj", response.properties().partnerProperties().subdomain());
        Assertions.assertEquals(SingleSignOnType.OPEN_ID, response.properties().singleSignOnProperties().type());
        Assertions.assertEquals(SingleSignOnStates.ENABLE, response.properties().singleSignOnProperties().state());
        Assertions.assertEquals("zj", response.properties().singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("yegu", response.properties().singleSignOnProperties().url());
        Assertions.assertEquals("b", response.properties().singleSignOnProperties().aadDomains().get(0));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED, response.identity().type());
    }
}
