// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.weightsandbiases.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.weightsandbiases.models.InstanceProperties;
import com.azure.resourcemanager.weightsandbiases.models.MarketplaceDetails;
import com.azure.resourcemanager.weightsandbiases.models.OfferDetails;
import com.azure.resourcemanager.weightsandbiases.models.PartnerProperties;
import com.azure.resourcemanager.weightsandbiases.models.Region;
import com.azure.resourcemanager.weightsandbiases.models.SingleSignOnPropertiesV2;
import com.azure.resourcemanager.weightsandbiases.models.SingleSignOnStates;
import com.azure.resourcemanager.weightsandbiases.models.SingleSignOnType;
import com.azure.resourcemanager.weightsandbiases.models.UserDetails;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class InstancePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InstanceProperties model = BinaryData.fromString(
            "{\"marketplace\":{\"subscriptionId\":\"hpf\",\"subscriptionStatus\":\"Subscribed\",\"offerDetails\":{\"publisherId\":\"pini\",\"offerId\":\"mayhuybbkpodepoo\",\"planId\":\"inuvamiheogn\",\"planName\":\"xzxtheo\",\"termUnit\":\"si\",\"termId\":\"evcciqihnhun\"}},\"user\":{\"firstName\":\"wjzrnfygxgisp\",\"lastName\":\"vtz\",\"emailAddress\":\"ufubl\",\"upn\":\"fxqeof\",\"phoneNumber\":\"e\"},\"provisioningState\":\"Canceled\",\"partnerProperties\":{\"region\":\"eastus\",\"subdomain\":\"b\"},\"singleSignOnProperties\":{\"type\":\"Saml\",\"state\":\"Initial\",\"enterpriseAppId\":\"jqul\",\"url\":\"sntnbybkzgcw\",\"aadDomains\":[\"lxxwrljdouskc\",\"vkocrcjdkwtn\",\"xbnjbiksq\"]}}")
            .toObject(InstanceProperties.class);
        Assertions.assertEquals("hpf", model.marketplace().subscriptionId());
        Assertions.assertEquals("pini", model.marketplace().offerDetails().publisherId());
        Assertions.assertEquals("mayhuybbkpodepoo", model.marketplace().offerDetails().offerId());
        Assertions.assertEquals("inuvamiheogn", model.marketplace().offerDetails().planId());
        Assertions.assertEquals("xzxtheo", model.marketplace().offerDetails().planName());
        Assertions.assertEquals("si", model.marketplace().offerDetails().termUnit());
        Assertions.assertEquals("evcciqihnhun", model.marketplace().offerDetails().termId());
        Assertions.assertEquals("wjzrnfygxgisp", model.user().firstName());
        Assertions.assertEquals("vtz", model.user().lastName());
        Assertions.assertEquals("ufubl", model.user().emailAddress());
        Assertions.assertEquals("fxqeof", model.user().upn());
        Assertions.assertEquals("e", model.user().phoneNumber());
        Assertions.assertEquals(Region.EASTUS, model.partnerProperties().region());
        Assertions.assertEquals("b", model.partnerProperties().subdomain());
        Assertions.assertEquals(SingleSignOnType.SAML, model.singleSignOnProperties().type());
        Assertions.assertEquals(SingleSignOnStates.INITIAL, model.singleSignOnProperties().state());
        Assertions.assertEquals("jqul", model.singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("sntnbybkzgcw", model.singleSignOnProperties().url());
        Assertions.assertEquals("lxxwrljdouskc", model.singleSignOnProperties().aadDomains().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InstanceProperties model = new InstanceProperties()
            .withMarketplace(new MarketplaceDetails().withSubscriptionId("hpf")
                .withOfferDetails(new OfferDetails().withPublisherId("pini")
                    .withOfferId("mayhuybbkpodepoo")
                    .withPlanId("inuvamiheogn")
                    .withPlanName("xzxtheo")
                    .withTermUnit("si")
                    .withTermId("evcciqihnhun")))
            .withUser(new UserDetails().withFirstName("wjzrnfygxgisp")
                .withLastName("vtz")
                .withEmailAddress("ufubl")
                .withUpn("fxqeof")
                .withPhoneNumber("e"))
            .withPartnerProperties(new PartnerProperties().withRegion(Region.EASTUS).withSubdomain("b"))
            .withSingleSignOnProperties(new SingleSignOnPropertiesV2().withType(SingleSignOnType.SAML)
                .withState(SingleSignOnStates.INITIAL)
                .withEnterpriseAppId("jqul")
                .withUrl("sntnbybkzgcw")
                .withAadDomains(Arrays.asList("lxxwrljdouskc", "vkocrcjdkwtn", "xbnjbiksq")));
        model = BinaryData.fromObject(model).toObject(InstanceProperties.class);
        Assertions.assertEquals("hpf", model.marketplace().subscriptionId());
        Assertions.assertEquals("pini", model.marketplace().offerDetails().publisherId());
        Assertions.assertEquals("mayhuybbkpodepoo", model.marketplace().offerDetails().offerId());
        Assertions.assertEquals("inuvamiheogn", model.marketplace().offerDetails().planId());
        Assertions.assertEquals("xzxtheo", model.marketplace().offerDetails().planName());
        Assertions.assertEquals("si", model.marketplace().offerDetails().termUnit());
        Assertions.assertEquals("evcciqihnhun", model.marketplace().offerDetails().termId());
        Assertions.assertEquals("wjzrnfygxgisp", model.user().firstName());
        Assertions.assertEquals("vtz", model.user().lastName());
        Assertions.assertEquals("ufubl", model.user().emailAddress());
        Assertions.assertEquals("fxqeof", model.user().upn());
        Assertions.assertEquals("e", model.user().phoneNumber());
        Assertions.assertEquals(Region.EASTUS, model.partnerProperties().region());
        Assertions.assertEquals("b", model.partnerProperties().subdomain());
        Assertions.assertEquals(SingleSignOnType.SAML, model.singleSignOnProperties().type());
        Assertions.assertEquals(SingleSignOnStates.INITIAL, model.singleSignOnProperties().state());
        Assertions.assertEquals("jqul", model.singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("sntnbybkzgcw", model.singleSignOnProperties().url());
        Assertions.assertEquals("lxxwrljdouskc", model.singleSignOnProperties().aadDomains().get(0));
    }
}
