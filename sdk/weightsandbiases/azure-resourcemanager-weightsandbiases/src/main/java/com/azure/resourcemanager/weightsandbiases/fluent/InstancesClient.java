// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.weightsandbiases.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.weightsandbiases.fluent.models.InstanceResourceInner;
import com.azure.resourcemanager.weightsandbiases.models.InstanceResourceUpdate;

/**
 * An instance of this class provides access to all the operations defined in InstancesClient.
 */
public interface InstancesClient {
    /**
     * Get a InstanceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instancename Name of the Instance resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a InstanceResource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<InstanceResourceInner> getByResourceGroupWithResponse(String resourceGroupName, String instancename,
        Context context);

    /**
     * Get a InstanceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instancename Name of the Instance resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a InstanceResource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    InstanceResourceInner getByResourceGroup(String resourceGroupName, String instancename);

    /**
     * Create a InstanceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instancename Name of the Instance resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of concrete tracked resource types can be created by aliasing this
     * type using a specific property type.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<InstanceResourceInner>, InstanceResourceInner> beginCreateOrUpdate(String resourceGroupName,
        String instancename, InstanceResourceInner resource);

    /**
     * Create a InstanceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instancename Name of the Instance resource.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of concrete tracked resource types can be created by aliasing this
     * type using a specific property type.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<InstanceResourceInner>, InstanceResourceInner> beginCreateOrUpdate(String resourceGroupName,
        String instancename, InstanceResourceInner resource, Context context);

    /**
     * Create a InstanceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instancename Name of the Instance resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return concrete tracked resource types can be created by aliasing this type using a specific property type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    InstanceResourceInner createOrUpdate(String resourceGroupName, String instancename, InstanceResourceInner resource);

    /**
     * Create a InstanceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instancename Name of the Instance resource.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return concrete tracked resource types can be created by aliasing this type using a specific property type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    InstanceResourceInner createOrUpdate(String resourceGroupName, String instancename, InstanceResourceInner resource,
        Context context);

    /**
     * Update a InstanceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instancename Name of the Instance resource.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return concrete tracked resource types can be created by aliasing this type using a specific property type along
     * with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<InstanceResourceInner> updateWithResponse(String resourceGroupName, String instancename,
        InstanceResourceUpdate properties, Context context);

    /**
     * Update a InstanceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instancename Name of the Instance resource.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return concrete tracked resource types can be created by aliasing this type using a specific property type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    InstanceResourceInner update(String resourceGroupName, String instancename, InstanceResourceUpdate properties);

    /**
     * Delete a InstanceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instancename Name of the Instance resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String instancename);

    /**
     * Delete a InstanceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instancename Name of the Instance resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String instancename, Context context);

    /**
     * Delete a InstanceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instancename Name of the Instance resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String instancename);

    /**
     * Delete a InstanceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instancename Name of the Instance resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String instancename, Context context);

    /**
     * List InstanceResource resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a InstanceResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<InstanceResourceInner> listByResourceGroup(String resourceGroupName);

    /**
     * List InstanceResource resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a InstanceResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<InstanceResourceInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * List InstanceResource resources by subscription ID.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a InstanceResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<InstanceResourceInner> list();

    /**
     * List InstanceResource resources by subscription ID.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a InstanceResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<InstanceResourceInner> list(Context context);
}
