/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.servicefabric.v2018_02_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.servicefabric.v2018_02_01.ClusterVersions;
import rx.Observable;
import rx.functions.Func1;
import com.microsoft.azure.management.servicefabric.v2018_02_01.ClusterCodeVersionsListResult;

class ClusterVersionsImpl extends WrapperImpl<ClusterVersionsInner> implements ClusterVersions {
    private final ServiceFabricManager manager;

    ClusterVersionsImpl(ServiceFabricManager manager) {
        super(manager.inner().clusterVersions());
        this.manager = manager;
    }

    public ServiceFabricManager manager() {
        return this.manager;
    }

    private ClusterCodeVersionsListResultImpl wrapModel(ClusterCodeVersionsListResultInner inner) {
        return  new ClusterCodeVersionsListResultImpl(inner, manager());
    }

    @Override
    public Observable<ClusterCodeVersionsListResult> getByEnvironmentAsync(String location, String environment, String clusterVersion) {
        ClusterVersionsInner client = this.inner();
        return client.getByEnvironmentAsync(location, environment, clusterVersion)
        .map(new Func1<ClusterCodeVersionsListResultInner, ClusterCodeVersionsListResult>() {
            @Override
            public ClusterCodeVersionsListResult call(ClusterCodeVersionsListResultInner inner) {
                return new ClusterCodeVersionsListResultImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<ClusterCodeVersionsListResult> listAsync(String location) {
        ClusterVersionsInner client = this.inner();
        return client.listAsync(location)
        .map(new Func1<ClusterCodeVersionsListResultInner, ClusterCodeVersionsListResult>() {
            @Override
            public ClusterCodeVersionsListResult call(ClusterCodeVersionsListResultInner inner) {
                return new ClusterCodeVersionsListResultImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<ClusterCodeVersionsListResult> listByEnvironmentAsync(String location, String environment) {
        ClusterVersionsInner client = this.inner();
        return client.listByEnvironmentAsync(location, environment)
        .map(new Func1<ClusterCodeVersionsListResultInner, ClusterCodeVersionsListResult>() {
            @Override
            public ClusterCodeVersionsListResult call(ClusterCodeVersionsListResultInner inner) {
                return new ClusterCodeVersionsListResultImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<ClusterCodeVersionsListResult> getAsync(String location, String clusterVersion) {
        ClusterVersionsInner client = this.inner();
        return client.getAsync(location, clusterVersion)
        .map(new Func1<ClusterCodeVersionsListResultInner, ClusterCodeVersionsListResult>() {
            @Override
            public ClusterCodeVersionsListResult call(ClusterCodeVersionsListResultInner inner) {
                return wrapModel(inner);
            }
       });
    }

}
