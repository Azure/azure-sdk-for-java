// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabric.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import java.util.List;

/** Resource collection API of ManagedClusterVersions. */
public interface ManagedClusterVersions {
    /**
     * Gets all available code versions for Service Fabric cluster resources by OS type.
     *
     * @param location The location for the cluster code versions. This is different from cluster location.
     * @param osType The operating system of the cluster.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all available code versions for Service Fabric cluster resources by OS type.
     */
    List<ManagedClusterVersionDetails> listByOS(String location, ManagedClusterVersionsOsType osType);

    /**
     * Gets all available code versions for Service Fabric cluster resources by OS type.
     *
     * @param location The location for the cluster code versions. This is different from cluster location.
     * @param osType The operating system of the cluster.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all available code versions for Service Fabric cluster resources by OS type.
     */
    Response<List<ManagedClusterVersionDetails>> listByOSWithResponse(
        String location, ManagedClusterVersionsOsType osType, Context context);
}
