// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabric.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * SingletonPartitionSchemeDescription.
 */
@Immutable
public final class SingletonPartitionSchemeDescription extends PartitionSchemeDescription {
    /*
     * Specifies how the service is partitioned.
     */
    private PartitionScheme partitionScheme = PartitionScheme.SINGLETON;

    /**
     * Creates an instance of SingletonPartitionSchemeDescription class.
     */
    public SingletonPartitionSchemeDescription() {
    }

    /**
     * Get the partitionScheme property: Specifies how the service is partitioned.
     * 
     * @return the partitionScheme value.
     */
    @Override
    public PartitionScheme partitionScheme() {
        return this.partitionScheme;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("partitionScheme",
            this.partitionScheme == null ? null : this.partitionScheme.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SingletonPartitionSchemeDescription from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SingletonPartitionSchemeDescription if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SingletonPartitionSchemeDescription.
     */
    public static SingletonPartitionSchemeDescription fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SingletonPartitionSchemeDescription deserializedSingletonPartitionSchemeDescription
                = new SingletonPartitionSchemeDescription();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("partitionScheme".equals(fieldName)) {
                    deserializedSingletonPartitionSchemeDescription.partitionScheme
                        = PartitionScheme.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSingletonPartitionSchemeDescription;
        });
    }
}
