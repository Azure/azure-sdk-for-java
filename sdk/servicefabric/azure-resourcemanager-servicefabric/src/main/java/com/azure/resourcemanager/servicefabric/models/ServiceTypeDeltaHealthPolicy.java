// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabric.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Represents the delta health policy used to evaluate the health of services belonging to a service type when upgrading
 * the cluster.
 */
@Fluent
public final class ServiceTypeDeltaHealthPolicy implements JsonSerializable<ServiceTypeDeltaHealthPolicy> {
    /*
     * The maximum allowed percentage of services health degradation allowed during cluster upgrades.
     * The delta is measured between the state of the services at the beginning of upgrade and the state of the services
     * at the time of the health evaluation.
     * The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster
     * is within tolerated limits.
     */
    private Integer maxPercentDeltaUnhealthyServices;

    /**
     * Creates an instance of ServiceTypeDeltaHealthPolicy class.
     */
    public ServiceTypeDeltaHealthPolicy() {
    }

    /**
     * Get the maxPercentDeltaUnhealthyServices property: The maximum allowed percentage of services health degradation
     * allowed during cluster upgrades.
     * The delta is measured between the state of the services at the beginning of upgrade and the state of the services
     * at the time of the health evaluation.
     * The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster
     * is within tolerated limits.
     * 
     * @return the maxPercentDeltaUnhealthyServices value.
     */
    public Integer maxPercentDeltaUnhealthyServices() {
        return this.maxPercentDeltaUnhealthyServices;
    }

    /**
     * Set the maxPercentDeltaUnhealthyServices property: The maximum allowed percentage of services health degradation
     * allowed during cluster upgrades.
     * The delta is measured between the state of the services at the beginning of upgrade and the state of the services
     * at the time of the health evaluation.
     * The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster
     * is within tolerated limits.
     * 
     * @param maxPercentDeltaUnhealthyServices the maxPercentDeltaUnhealthyServices value to set.
     * @return the ServiceTypeDeltaHealthPolicy object itself.
     */
    public ServiceTypeDeltaHealthPolicy withMaxPercentDeltaUnhealthyServices(Integer maxPercentDeltaUnhealthyServices) {
        this.maxPercentDeltaUnhealthyServices = maxPercentDeltaUnhealthyServices;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("maxPercentDeltaUnhealthyServices", this.maxPercentDeltaUnhealthyServices);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ServiceTypeDeltaHealthPolicy from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ServiceTypeDeltaHealthPolicy if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ServiceTypeDeltaHealthPolicy.
     */
    public static ServiceTypeDeltaHealthPolicy fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ServiceTypeDeltaHealthPolicy deserializedServiceTypeDeltaHealthPolicy = new ServiceTypeDeltaHealthPolicy();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("maxPercentDeltaUnhealthyServices".equals(fieldName)) {
                    deserializedServiceTypeDeltaHealthPolicy.maxPercentDeltaUnhealthyServices
                        = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedServiceTypeDeltaHealthPolicy;
        });
    }
}
