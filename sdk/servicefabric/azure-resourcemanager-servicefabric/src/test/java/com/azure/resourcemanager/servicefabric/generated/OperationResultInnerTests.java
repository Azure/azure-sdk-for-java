// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicefabric.fluent.models.OperationResultInner;
import com.azure.resourcemanager.servicefabric.models.AvailableOperationDisplay;
import org.junit.jupiter.api.Assertions;

public final class OperationResultInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationResultInner model = BinaryData.fromString(
            "{\"name\":\"eic\",\"isDataAction\":false,\"display\":{\"provider\":\"zao\",\"resource\":\"uhrhcffcyddgl\",\"operation\":\"t\",\"description\":\"qkwpyeicxmqc\"},\"origin\":\"q\",\"nextLink\":\"khixuigdtopbo\"}")
            .toObject(OperationResultInner.class);
        Assertions.assertEquals("eic", model.name());
        Assertions.assertEquals(false, model.isDataAction());
        Assertions.assertEquals("zao", model.display().provider());
        Assertions.assertEquals("uhrhcffcyddgl", model.display().resource());
        Assertions.assertEquals("t", model.display().operation());
        Assertions.assertEquals("qkwpyeicxmqc", model.display().description());
        Assertions.assertEquals("q", model.origin());
        Assertions.assertEquals("khixuigdtopbo", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationResultInner model = new OperationResultInner()
            .withName("eic").withIsDataAction(false).withDisplay(new AvailableOperationDisplay().withProvider("zao")
                .withResource("uhrhcffcyddgl").withOperation("t").withDescription("qkwpyeicxmqc"))
            .withOrigin("q").withNextLink("khixuigdtopbo");
        model = BinaryData.fromObject(model).toObject(OperationResultInner.class);
        Assertions.assertEquals("eic", model.name());
        Assertions.assertEquals(false, model.isDataAction());
        Assertions.assertEquals("zao", model.display().provider());
        Assertions.assertEquals("uhrhcffcyddgl", model.display().resource());
        Assertions.assertEquals("t", model.display().operation());
        Assertions.assertEquals("qkwpyeicxmqc", model.display().description());
        Assertions.assertEquals("q", model.origin());
        Assertions.assertEquals("khixuigdtopbo", model.nextLink());
    }
}
