// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicefabric.models.MoveCost;
import com.azure.resourcemanager.servicefabric.models.ServiceCorrelationDescription;
import com.azure.resourcemanager.servicefabric.models.ServiceCorrelationScheme;
import com.azure.resourcemanager.servicefabric.models.ServiceLoadMetricDescription;
import com.azure.resourcemanager.servicefabric.models.ServiceLoadMetricWeight;
import com.azure.resourcemanager.servicefabric.models.ServicePlacementPolicyDescription;
import com.azure.resourcemanager.servicefabric.models.ServiceResourcePropertiesBase;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ServiceResourcePropertiesBaseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServiceResourcePropertiesBase model = BinaryData.fromString(
            "{\"placementConstraints\":\"lfoakg\",\"correlationScheme\":[{\"scheme\":\"Affinity\",\"serviceName\":\"agaowpulpqblylsy\"},{\"scheme\":\"Invalid\",\"serviceName\":\"qjnsjervtia\"},{\"scheme\":\"AlignedAffinity\",\"serviceName\":\"sdszue\"}],\"serviceLoadMetrics\":[{\"name\":\"bzkfzbeyvpn\",\"weight\":\"High\",\"primaryDefaultLoad\":1110186498,\"secondaryDefaultLoad\":242850063,\"defaultLoad\":887231612},{\"name\":\"jxdxrbuukz\",\"weight\":\"Low\",\"primaryDefaultLoad\":553106392,\"secondaryDefaultLoad\":1827391658,\"defaultLoad\":460922562}],\"servicePlacementPolicies\":[{\"type\":\"ServicePlacementPolicyDescription\"}],\"defaultMoveCost\":\"High\"}")
            .toObject(ServiceResourcePropertiesBase.class);
        Assertions.assertEquals("lfoakg", model.placementConstraints());
        Assertions.assertEquals(ServiceCorrelationScheme.AFFINITY, model.correlationScheme().get(0).scheme());
        Assertions.assertEquals("agaowpulpqblylsy", model.correlationScheme().get(0).serviceName());
        Assertions.assertEquals("bzkfzbeyvpn", model.serviceLoadMetrics().get(0).name());
        Assertions.assertEquals(ServiceLoadMetricWeight.HIGH, model.serviceLoadMetrics().get(0).weight());
        Assertions.assertEquals(1110186498, model.serviceLoadMetrics().get(0).primaryDefaultLoad());
        Assertions.assertEquals(242850063, model.serviceLoadMetrics().get(0).secondaryDefaultLoad());
        Assertions.assertEquals(887231612, model.serviceLoadMetrics().get(0).defaultLoad());
        Assertions.assertEquals(MoveCost.HIGH, model.defaultMoveCost());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServiceResourcePropertiesBase model = new ServiceResourcePropertiesBase().withPlacementConstraints("lfoakg")
            .withCorrelationScheme(Arrays.asList(
                new ServiceCorrelationDescription().withScheme(ServiceCorrelationScheme.AFFINITY)
                    .withServiceName("agaowpulpqblylsy"),
                new ServiceCorrelationDescription().withScheme(ServiceCorrelationScheme.INVALID)
                    .withServiceName("qjnsjervtia"),
                new ServiceCorrelationDescription().withScheme(ServiceCorrelationScheme.ALIGNED_AFFINITY)
                    .withServiceName("sdszue")))
            .withServiceLoadMetrics(Arrays.asList(
                new ServiceLoadMetricDescription().withName("bzkfzbeyvpn").withWeight(ServiceLoadMetricWeight.HIGH)
                    .withPrimaryDefaultLoad(1110186498).withSecondaryDefaultLoad(242850063).withDefaultLoad(887231612),
                new ServiceLoadMetricDescription().withName("jxdxrbuukz").withWeight(ServiceLoadMetricWeight.LOW)
                    .withPrimaryDefaultLoad(553106392).withSecondaryDefaultLoad(1827391658).withDefaultLoad(460922562)))
            .withServicePlacementPolicies(Arrays.asList(new ServicePlacementPolicyDescription()))
            .withDefaultMoveCost(MoveCost.HIGH);
        model = BinaryData.fromObject(model).toObject(ServiceResourcePropertiesBase.class);
        Assertions.assertEquals("lfoakg", model.placementConstraints());
        Assertions.assertEquals(ServiceCorrelationScheme.AFFINITY, model.correlationScheme().get(0).scheme());
        Assertions.assertEquals("agaowpulpqblylsy", model.correlationScheme().get(0).serviceName());
        Assertions.assertEquals("bzkfzbeyvpn", model.serviceLoadMetrics().get(0).name());
        Assertions.assertEquals(ServiceLoadMetricWeight.HIGH, model.serviceLoadMetrics().get(0).weight());
        Assertions.assertEquals(1110186498, model.serviceLoadMetrics().get(0).primaryDefaultLoad());
        Assertions.assertEquals(242850063, model.serviceLoadMetrics().get(0).secondaryDefaultLoad());
        Assertions.assertEquals(887231612, model.serviceLoadMetrics().get(0).defaultLoad());
        Assertions.assertEquals(MoveCost.HIGH, model.defaultMoveCost());
    }
}
