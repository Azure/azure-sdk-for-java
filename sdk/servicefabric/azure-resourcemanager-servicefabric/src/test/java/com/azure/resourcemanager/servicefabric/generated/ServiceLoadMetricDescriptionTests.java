// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicefabric.models.ServiceLoadMetricDescription;
import com.azure.resourcemanager.servicefabric.models.ServiceLoadMetricWeight;
import org.junit.jupiter.api.Assertions;

public final class ServiceLoadMetricDescriptionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServiceLoadMetricDescription model = BinaryData.fromString(
            "{\"name\":\"yfzqwhxxbu\",\"weight\":\"Zero\",\"primaryDefaultLoad\":437954475,\"secondaryDefaultLoad\":776883338,\"defaultLoad\":1924816201}")
            .toObject(ServiceLoadMetricDescription.class);
        Assertions.assertEquals("yfzqwhxxbu", model.name());
        Assertions.assertEquals(ServiceLoadMetricWeight.ZERO, model.weight());
        Assertions.assertEquals(437954475, model.primaryDefaultLoad());
        Assertions.assertEquals(776883338, model.secondaryDefaultLoad());
        Assertions.assertEquals(1924816201, model.defaultLoad());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServiceLoadMetricDescription model
            = new ServiceLoadMetricDescription().withName("yfzqwhxxbu").withWeight(ServiceLoadMetricWeight.ZERO)
                .withPrimaryDefaultLoad(437954475).withSecondaryDefaultLoad(776883338).withDefaultLoad(1924816201);
        model = BinaryData.fromObject(model).toObject(ServiceLoadMetricDescription.class);
        Assertions.assertEquals("yfzqwhxxbu", model.name());
        Assertions.assertEquals(ServiceLoadMetricWeight.ZERO, model.weight());
        Assertions.assertEquals(437954475, model.primaryDefaultLoad());
        Assertions.assertEquals(776883338, model.secondaryDefaultLoad());
        Assertions.assertEquals(1924816201, model.defaultLoad());
    }
}
