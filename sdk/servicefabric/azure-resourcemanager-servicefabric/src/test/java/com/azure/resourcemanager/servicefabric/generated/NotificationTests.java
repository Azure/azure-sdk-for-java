// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicefabric.models.Notification;
import com.azure.resourcemanager.servicefabric.models.NotificationCategory;
import com.azure.resourcemanager.servicefabric.models.NotificationChannel;
import com.azure.resourcemanager.servicefabric.models.NotificationLevel;
import com.azure.resourcemanager.servicefabric.models.NotificationTarget;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NotificationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Notification model = BinaryData.fromString(
            "{\"isEnabled\":true,\"notificationCategory\":\"WaveProgress\",\"notificationLevel\":\"All\",\"notificationTargets\":[{\"notificationChannel\":\"EmailSubscription\",\"receivers\":[\"ejk\",\"tynqgoul\",\"ndlik\"]}]}")
            .toObject(Notification.class);
        Assertions.assertEquals(true, model.isEnabled());
        Assertions.assertEquals(NotificationCategory.WAVE_PROGRESS, model.notificationCategory());
        Assertions.assertEquals(NotificationLevel.ALL, model.notificationLevel());
        Assertions.assertEquals(NotificationChannel.EMAIL_SUBSCRIPTION,
            model.notificationTargets().get(0).notificationChannel());
        Assertions.assertEquals("ejk", model.notificationTargets().get(0).receivers().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Notification model
            = new Notification().withIsEnabled(true).withNotificationCategory(NotificationCategory.WAVE_PROGRESS)
                .withNotificationLevel(NotificationLevel.ALL)
                .withNotificationTargets(Arrays
                    .asList(new NotificationTarget().withNotificationChannel(NotificationChannel.EMAIL_SUBSCRIPTION)
                        .withReceivers(Arrays.asList("ejk", "tynqgoul", "ndlik"))));
        model = BinaryData.fromObject(model).toObject(Notification.class);
        Assertions.assertEquals(true, model.isEnabled());
        Assertions.assertEquals(NotificationCategory.WAVE_PROGRESS, model.notificationCategory());
        Assertions.assertEquals(NotificationLevel.ALL, model.notificationLevel());
        Assertions.assertEquals(NotificationChannel.EMAIL_SUBSCRIPTION,
            model.notificationTargets().get(0).notificationChannel());
        Assertions.assertEquals("ejk", model.notificationTargets().get(0).receivers().get(0));
    }
}
