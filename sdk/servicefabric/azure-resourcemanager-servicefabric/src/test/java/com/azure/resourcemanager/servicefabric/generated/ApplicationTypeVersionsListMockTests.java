// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabric.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.servicefabric.ServiceFabricManager;
import com.azure.resourcemanager.servicefabric.models.ApplicationTypeVersionResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ApplicationTypeVersionsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"qgaifmviklbydv\",\"appPackageUrl\":\"hbejdznxcvdsrhnj\",\"defaultParameterList\":{\"qfzgemjdftul\":\"lvtno\",\"tmczuomejwcwwqi\":\"ltducea\",\"vpkjpr\":\"knssxmojm\"}},\"location\":\"wcfzqljyxgt\",\"tags\":{\"hmkxmaehvbb\":\"eydbsd\"},\"etag\":\"ripltf\",\"id\":\"tbaxk\",\"name\":\"xywr\",\"type\":\"kpyklyhp\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ServiceFabricManager manager = ServiceFabricManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ApplicationTypeVersionResource> response = manager.applicationTypeVersions()
            .list("ojgcyzt", "fmznba", "qphchqnrnrpxehuw", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("wcfzqljyxgt", response.iterator().next().location());
        Assertions.assertEquals("eydbsd", response.iterator().next().tags().get("hmkxmaehvbb"));
        Assertions.assertEquals("hbejdznxcvdsrhnj", response.iterator().next().appPackageUrl());
    }
}
