/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.servicefabric.v2016_09_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.servicefabric.v2016_09_01.ClusterVersions;
import rx.Observable;
import rx.functions.Func1;
import com.microsoft.azure.Page;
import com.microsoft.azure.management.servicefabric.v2016_09_01.ClusterCodeVersionsResult;

class ClusterVersionsImpl extends WrapperImpl<ClusterVersionsInner> implements ClusterVersions {
    private final ServiceFabricManager manager;

    ClusterVersionsImpl(ServiceFabricManager manager) {
        super(manager.inner().clusterVersions());
        this.manager = manager;
    }

    public ServiceFabricManager manager() {
        return this.manager;
    }

    private ClusterCodeVersionsResultImpl wrapModel(ClusterCodeVersionsResultInner inner) {
        return  new ClusterCodeVersionsResultImpl(inner, manager());
    }

    @Override
    public Observable<ClusterCodeVersionsResult> listByEnvironmentAsync(final String location, final String environment) {
        ClusterVersionsInner client = this.inner();
        return client.listByEnvironmentAsync(location, environment)
        .flatMapIterable(new Func1<Page<ClusterCodeVersionsResultInner>, Iterable<ClusterCodeVersionsResultInner>>() {
            @Override
            public Iterable<ClusterCodeVersionsResultInner> call(Page<ClusterCodeVersionsResultInner> page) {
                return page.items();
            }
        })
        .map(new Func1<ClusterCodeVersionsResultInner, ClusterCodeVersionsResult>() {
            @Override
            public ClusterCodeVersionsResult call(ClusterCodeVersionsResultInner inner) {
                return new ClusterCodeVersionsResultImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<ClusterCodeVersionsResult> getAsync(String location, String environment, String clusterVersion) {
        ClusterVersionsInner client = this.inner();
        return client.getAsync(location, environment, clusterVersion)
        .map(new Func1<ClusterCodeVersionsResultInner, ClusterCodeVersionsResult>() {
            @Override
            public ClusterCodeVersionsResult call(ClusterCodeVersionsResultInner inner) {
                return new ClusterCodeVersionsResultImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<ClusterCodeVersionsResult> listByVersionAsync(final String location, final String clusterVersion) {
        ClusterVersionsInner client = this.inner();
        return client.listByVersionAsync(location, clusterVersion)
        .flatMapIterable(new Func1<Page<ClusterCodeVersionsResultInner>, Iterable<ClusterCodeVersionsResultInner>>() {
            @Override
            public Iterable<ClusterCodeVersionsResultInner> call(Page<ClusterCodeVersionsResultInner> page) {
                return page.items();
            }
        })
        .map(new Func1<ClusterCodeVersionsResultInner, ClusterCodeVersionsResult>() {
            @Override
            public ClusterCodeVersionsResult call(ClusterCodeVersionsResultInner inner) {
                return new ClusterCodeVersionsResultImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<ClusterCodeVersionsResult> listAsync(final String location) {
        ClusterVersionsInner client = this.inner();
        return client.listAsync(location)
        .flatMapIterable(new Func1<Page<ClusterCodeVersionsResultInner>, Iterable<ClusterCodeVersionsResultInner>>() {
            @Override
            public Iterable<ClusterCodeVersionsResultInner> call(Page<ClusterCodeVersionsResultInner> page) {
                return page.items();
            }
        })
        .map(new Func1<ClusterCodeVersionsResultInner, ClusterCodeVersionsResult>() {
            @Override
            public ClusterCodeVersionsResult call(ClusterCodeVersionsResultInner inner) {
                return wrapModel(inner);
            }
        });
    }

}
