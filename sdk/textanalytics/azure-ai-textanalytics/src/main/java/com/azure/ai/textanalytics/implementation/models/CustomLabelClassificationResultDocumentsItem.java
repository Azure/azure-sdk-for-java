// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.textanalytics.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The CustomLabelClassificationResultDocumentsItem model.
 */
@Fluent
public final class CustomLabelClassificationResultDocumentsItem extends ClassificationDocumentResult {
    /**
     * Creates an instance of CustomLabelClassificationResultDocumentsItem class.
     */
    public CustomLabelClassificationResultDocumentsItem() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomLabelClassificationResultDocumentsItem setClassProperty(List<ClassificationResult> classProperty) {
        super.setClassProperty(classProperty);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomLabelClassificationResultDocumentsItem setId(String id) {
        super.setId(id);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomLabelClassificationResultDocumentsItem setWarnings(List<DocumentWarning> warnings) {
        super.setWarnings(warnings);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomLabelClassificationResultDocumentsItem setStatistics(DocumentStatistics statistics) {
        super.setStatistics(statistics);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("id", getId());
        jsonWriter.writeArrayField("warnings", getWarnings(), (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("class", getClassProperty(), (writer, element) -> writer.writeJson(element));
        jsonWriter.writeJsonField("statistics", getStatistics());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CustomLabelClassificationResultDocumentsItem from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CustomLabelClassificationResultDocumentsItem if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CustomLabelClassificationResultDocumentsItem.
     */
    public static CustomLabelClassificationResultDocumentsItem fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CustomLabelClassificationResultDocumentsItem deserializedCustomLabelClassificationResultDocumentsItem
                = new CustomLabelClassificationResultDocumentsItem();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedCustomLabelClassificationResultDocumentsItem.setId(reader.getString());
                } else if ("warnings".equals(fieldName)) {
                    List<DocumentWarning> warnings = reader.readArray(reader1 -> DocumentWarning.fromJson(reader1));
                    deserializedCustomLabelClassificationResultDocumentsItem.setWarnings(warnings);
                } else if ("class".equals(fieldName)) {
                    List<ClassificationResult> classProperty
                        = reader.readArray(reader1 -> ClassificationResult.fromJson(reader1));
                    deserializedCustomLabelClassificationResultDocumentsItem.setClassProperty(classProperty);
                } else if ("statistics".equals(fieldName)) {
                    deserializedCustomLabelClassificationResultDocumentsItem
                        .setStatistics(DocumentStatistics.fromJson(reader));
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCustomLabelClassificationResultDocumentsItem;
        });
    }
}
