// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.textanalytics.implementation.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** represents the resolution of numeric intervals. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "resolutionKind")
@JsonTypeName("NumericRangeResolution")
@Fluent
public final class NumericRangeResolution extends BaseResolution {
    /*
     * The kind of range that the resolution object represents.
     */
    @JsonProperty(value = "rangeKind", required = true)
    private RangeKind rangeKind;

    /*
     * The beginning value of  the interval.
     */
    @JsonProperty(value = "minimum", required = true)
    private double minimum;

    /*
     * The ending value of the interval.
     */
    @JsonProperty(value = "maximum", required = true)
    private double maximum;

    /** Creates an instance of NumericRangeResolution class. */
    public NumericRangeResolution() {}

    /**
     * Get the rangeKind property: The kind of range that the resolution object represents.
     *
     * @return the rangeKind value.
     */
    public RangeKind getRangeKind() {
        return this.rangeKind;
    }

    /**
     * Set the rangeKind property: The kind of range that the resolution object represents.
     *
     * @param rangeKind the rangeKind value to set.
     * @return the NumericRangeResolution object itself.
     */
    public NumericRangeResolution setRangeKind(RangeKind rangeKind) {
        this.rangeKind = rangeKind;
        return this;
    }

    /**
     * Get the minimum property: The beginning value of the interval.
     *
     * @return the minimum value.
     */
    public double getMinimum() {
        return this.minimum;
    }

    /**
     * Set the minimum property: The beginning value of the interval.
     *
     * @param minimum the minimum value to set.
     * @return the NumericRangeResolution object itself.
     */
    public NumericRangeResolution setMinimum(double minimum) {
        this.minimum = minimum;
        return this;
    }

    /**
     * Get the maximum property: The ending value of the interval.
     *
     * @return the maximum value.
     */
    public double getMaximum() {
        return this.maximum;
    }

    /**
     * Set the maximum property: The ending value of the interval.
     *
     * @param maximum the maximum value to set.
     * @return the NumericRangeResolution object itself.
     */
    public NumericRangeResolution setMaximum(double maximum) {
        this.maximum = maximum;
        return this;
    }
}
