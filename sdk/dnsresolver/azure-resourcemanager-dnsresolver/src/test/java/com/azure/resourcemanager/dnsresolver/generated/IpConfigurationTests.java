// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dnsresolver.generated;

import com.azure.core.management.SubResource;
import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dnsresolver.models.IpAllocationMethod;
import com.azure.resourcemanager.dnsresolver.models.IpConfiguration;
import org.junit.jupiter.api.Assertions;

public final class IpConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IpConfiguration model = BinaryData.fromString(
            "{\"subnet\":{\"id\":\"nchgej\"},\"privateIpAddress\":\"odmailzyd\",\"privateIpAllocationMethod\":\"Static\"}")
            .toObject(IpConfiguration.class);
        Assertions.assertEquals("nchgej", model.subnet().id());
        Assertions.assertEquals("odmailzyd", model.privateIpAddress());
        Assertions.assertEquals(IpAllocationMethod.STATIC, model.privateIpAllocationMethod());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IpConfiguration model = new IpConfiguration().withSubnet(new SubResource().withId("nchgej"))
            .withPrivateIpAddress("odmailzyd")
            .withPrivateIpAllocationMethod(IpAllocationMethod.STATIC);
        model = BinaryData.fromObject(model).toObject(IpConfiguration.class);
        Assertions.assertEquals("nchgej", model.subnet().id());
        Assertions.assertEquals("odmailzyd", model.privateIpAddress());
        Assertions.assertEquals(IpAllocationMethod.STATIC, model.privateIpAllocationMethod());
    }
}
