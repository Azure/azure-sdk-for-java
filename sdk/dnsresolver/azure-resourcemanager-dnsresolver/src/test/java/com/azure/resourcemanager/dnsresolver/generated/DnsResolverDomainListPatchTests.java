// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dnsresolver.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dnsresolver.models.DnsResolverDomainListPatch;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class DnsResolverDomainListPatchTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DnsResolverDomainListPatch model = BinaryData.fromString(
            "{\"properties\":{\"domains\":[\"cyjmoadsuvarmy\",\"dmjsjqb\",\"hhyxxrw\",\"yc\"]},\"tags\":{\"xkgymareqnajxqu\":\"hp\",\"ddg\":\"jhkycub\",\"pxacqqudfn\":\"sofwqmzqalkrmnji\"}}")
            .toObject(DnsResolverDomainListPatch.class);
        Assertions.assertEquals("hp", model.tags().get("xkgymareqnajxqu"));
        Assertions.assertEquals("cyjmoadsuvarmy", model.domains().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DnsResolverDomainListPatch model = new DnsResolverDomainListPatch()
            .withTags(mapOf("xkgymareqnajxqu", "hp", "ddg", "jhkycub", "pxacqqudfn", "sofwqmzqalkrmnji"))
            .withDomains(Arrays.asList("cyjmoadsuvarmy", "dmjsjqb", "hhyxxrw", "yc"));
        model = BinaryData.fromObject(model).toObject(DnsResolverDomainListPatch.class);
        Assertions.assertEquals("hp", model.tags().get("xkgymareqnajxqu"));
        Assertions.assertEquals("cyjmoadsuvarmy", model.domains().get(0));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
