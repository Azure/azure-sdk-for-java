// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dnsresolver.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.dnsresolver.DnsResolverManager;
import com.azure.resourcemanager.dnsresolver.models.DnsResolverDomainList;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DnsResolverDomainListsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"etag\":\"utlwxezwzhok\",\"properties\":{\"domains\":[\"hh\",\"qlgehg\"],\"domainsUrl\":\"ipifhpfeoajvg\",\"provisioningState\":\"Succeeded\",\"resourceGuid\":\"jcsheafid\"},\"location\":\"ugsresmkssjhoi\",\"tags\":{\"fwegprhptillu\":\"f\",\"hm\":\"biqtgdq\",\"lllibph\":\"wsldrizetpwbr\",\"a\":\"qzmiza\"},\"id\":\"ankjpdnjzh\",\"name\":\"joylh\",\"type\":\"lmuoyxprimrsopte\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DnsResolverManager manager = DnsResolverManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<DnsResolverDomainList> response = manager.dnsResolverDomainLists()
            .listByResourceGroup("gtgkylkdghr", 810731058, com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ugsresmkssjhoi", response.iterator().next().location());
        Assertions.assertEquals("f", response.iterator().next().tags().get("fwegprhptillu"));
        Assertions.assertEquals("hh", response.iterator().next().domains().get(0));
    }
}
