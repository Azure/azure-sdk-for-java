// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dnsresolver.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.dnsresolver.DnsResolverManager;
import com.azure.resourcemanager.dnsresolver.models.DnsResolverPolicyVirtualNetworkLink;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DnsResolverPolicyVirtualNetworkLinksGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"virtualNetwork\":{\"id\":\"rjdqnsdfzp\"},\"provisioningState\":\"Deleting\"},\"etag\":\"kylkdghrj\",\"location\":\"utlwxezwzhok\",\"tags\":{\"ehgpp\":\"nhhtql\",\"csheafidltugsr\":\"pifhpfeoajvgcxtx\",\"h\":\"smkss\",\"egprhptil\":\"iftxfkf\"},\"id\":\"ucb\",\"name\":\"qtgdqohmcwsl\",\"type\":\"riz\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DnsResolverManager manager = DnsResolverManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        DnsResolverPolicyVirtualNetworkLink response = manager.dnsResolverPolicyVirtualNetworkLinks()
            .getWithResponse("knfnwmbtmvpdv", "dhttzaefedxihchr", "hk", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("utlwxezwzhok", response.location());
        Assertions.assertEquals("nhhtql", response.tags().get("ehgpp"));
        Assertions.assertEquals("rjdqnsdfzp", response.virtualNetwork().id());
    }
}
