// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dnsresolver.generated;

import com.azure.core.management.SubResource;
import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dnsresolver.models.ActionType;
import com.azure.resourcemanager.dnsresolver.models.DnsSecurityRuleAction;
import com.azure.resourcemanager.dnsresolver.models.DnsSecurityRulePatch;
import com.azure.resourcemanager.dnsresolver.models.DnsSecurityRuleState;
import com.azure.resourcemanager.dnsresolver.models.ManagedDomainList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class DnsSecurityRulePatchTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DnsSecurityRulePatch model = BinaryData.fromString(
            "{\"properties\":{\"action\":{\"actionType\":\"Block\"},\"dnsResolverDomainLists\":[{\"id\":\"mifthnzdnd\"}],\"managedDomainLists\":[\"AzureDnsThreatIntel\",\"AzureDnsThreatIntel\",\"AzureDnsThreatIntel\"],\"dnsSecurityRuleState\":\"Disabled\",\"priority\":1584904008},\"tags\":{\"thuma\":\"uhavhql\",\"vaolpsslqlf\":\"olbgycduiertgccy\",\"mcwyhzdxssadb\":\"mdnbbglzpswiy\"}}")
            .toObject(DnsSecurityRulePatch.class);
        Assertions.assertEquals("uhavhql", model.tags().get("thuma"));
        Assertions.assertEquals(ActionType.BLOCK, model.action().actionType());
        Assertions.assertEquals("mifthnzdnd", model.dnsResolverDomainLists().get(0).id());
        Assertions.assertEquals(ManagedDomainList.AZURE_DNS_THREAT_INTEL, model.managedDomainLists().get(0));
        Assertions.assertEquals(DnsSecurityRuleState.DISABLED, model.dnsSecurityRuleState());
        Assertions.assertEquals(1584904008, model.priority());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DnsSecurityRulePatch model = new DnsSecurityRulePatch()
            .withTags(mapOf("thuma", "uhavhql", "vaolpsslqlf", "olbgycduiertgccy", "mcwyhzdxssadb", "mdnbbglzpswiy"))
            .withAction(new DnsSecurityRuleAction().withActionType(ActionType.BLOCK))
            .withDnsResolverDomainLists(Arrays.asList(new SubResource().withId("mifthnzdnd")))
            .withManagedDomainLists(Arrays.asList(ManagedDomainList.AZURE_DNS_THREAT_INTEL,
                ManagedDomainList.AZURE_DNS_THREAT_INTEL, ManagedDomainList.AZURE_DNS_THREAT_INTEL))
            .withDnsSecurityRuleState(DnsSecurityRuleState.DISABLED)
            .withPriority(1584904008);
        model = BinaryData.fromObject(model).toObject(DnsSecurityRulePatch.class);
        Assertions.assertEquals("uhavhql", model.tags().get("thuma"));
        Assertions.assertEquals(ActionType.BLOCK, model.action().actionType());
        Assertions.assertEquals("mifthnzdnd", model.dnsResolverDomainLists().get(0).id());
        Assertions.assertEquals(ManagedDomainList.AZURE_DNS_THREAT_INTEL, model.managedDomainLists().get(0));
        Assertions.assertEquals(DnsSecurityRuleState.DISABLED, model.dnsSecurityRuleState());
        Assertions.assertEquals(1584904008, model.priority());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
