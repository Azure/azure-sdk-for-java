// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dnsresolver.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.dnsresolver.DnsResolverManager;
import com.azure.resourcemanager.dnsresolver.models.ForwardingRule;
import com.azure.resourcemanager.dnsresolver.models.ForwardingRuleState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ForwardingRulesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"etag\":\"x\",\"properties\":{\"domainName\":\"tczheydbsdshmkx\",\"targetDnsServers\":[{\"ipAddress\":\"ehvbbxurip\",\"port\":1041302406},{\"ipAddress\":\"n\",\"port\":895803414},{\"ipAddress\":\"axkgx\",\"port\":338199100}],\"metadata\":{\"dlgzibthostgkt\":\"pyklyhpluodpvru\",\"vh\":\"tvdxeclzedqb\"},\"forwardingRuleState\":\"Enabled\",\"provisioningState\":\"Updating\"},\"id\":\"dqkdlwwqfbu\",\"name\":\"lkxt\",\"type\":\"qjfsmlmbtxhw\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DnsResolverManager manager = DnsResolverManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ForwardingRule response = manager.forwardingRules()
            .getWithResponse("jpr", "kwcf", "ql", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("tczheydbsdshmkx", response.domainName());
        Assertions.assertEquals("ehvbbxurip", response.targetDnsServers().get(0).ipAddress());
        Assertions.assertEquals(1041302406, response.targetDnsServers().get(0).port());
        Assertions.assertEquals("pyklyhpluodpvru", response.metadata().get("dlgzibthostgkt"));
        Assertions.assertEquals(ForwardingRuleState.ENABLED, response.forwardingRuleState());
    }
}
