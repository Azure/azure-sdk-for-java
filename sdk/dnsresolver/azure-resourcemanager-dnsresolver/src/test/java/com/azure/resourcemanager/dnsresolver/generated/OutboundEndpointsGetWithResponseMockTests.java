// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dnsresolver.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.dnsresolver.DnsResolverManager;
import com.azure.resourcemanager.dnsresolver.models.OutboundEndpoint;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OutboundEndpointsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"etag\":\"vdrhvoo\",\"properties\":{\"subnet\":{\"id\":\"otbobzdopcj\"},\"provisioningState\":\"Updating\",\"resourceGuid\":\"dldwmgxc\"},\"location\":\"slpmutwuo\",\"tags\":{\"qsluicp\":\"pkhjwni\",\"modfvuefywsbpfvm\":\"ggkzzlvmbmpa\"},\"id\":\"yhrfouyftaakcpw\",\"name\":\"yzvqt\",\"type\":\"nubexk\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DnsResolverManager manager = DnsResolverManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        OutboundEndpoint response = manager.outboundEndpoints()
            .getWithResponse("wdmhdlxyjrxs", "gafcnihgwqapnedg", "bcvkcvqvpkeq", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("slpmutwuo", response.location());
        Assertions.assertEquals("pkhjwni", response.tags().get("qsluicp"));
        Assertions.assertEquals("otbobzdopcj", response.subnet().id());
    }
}
