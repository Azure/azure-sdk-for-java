// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dnsresolver.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.dnsresolver.DnsResolverManager;
import com.azure.resourcemanager.dnsresolver.models.VirtualNetworkLink;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class VirtualNetworkLinksGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"virtualNetwork\":{\"id\":\"btrnegvm\"},\"metadata\":{\"qvldspastjbkkd\":\"q\",\"apeewchpxlkt\":\"flvestmjlxrrilo\"},\"provisioningState\":\"Creating\"},\"etag\":\"iycslevuf\",\"id\":\"tcktyhjtqedcgzu\",\"name\":\"wmmrq\",\"type\":\"zrrjvpgly\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DnsResolverManager manager = DnsResolverManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        VirtualNetworkLink response = manager.virtualNetworkLinks()
            .getWithResponse("xfzwi", "vwzjbhyz", "xjrk", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("btrnegvm", response.virtualNetwork().id());
        Assertions.assertEquals("q", response.metadata().get("qvldspastjbkkd"));
    }
}
