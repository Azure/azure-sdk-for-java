// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dnsresolver.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.dnsresolver.fluent.models.ForwardingRuleInner;
import com.azure.resourcemanager.dnsresolver.models.ForwardingRulePatch;

/** An instance of this class provides access to all the operations defined in ForwardingRulesClient. */
public interface ForwardingRulesClient {
    /**
     * Creates or updates a forwarding rule in a DNS forwarding ruleset.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsForwardingRulesetName The name of the DNS forwarding ruleset.
     * @param forwardingRuleName The name of the forwarding rule.
     * @param parameters Parameters supplied to the CreateOrUpdate operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a forwarding rule within a DNS forwarding ruleset.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ForwardingRuleInner createOrUpdate(
        String resourceGroupName,
        String dnsForwardingRulesetName,
        String forwardingRuleName,
        ForwardingRuleInner parameters);

    /**
     * Creates or updates a forwarding rule in a DNS forwarding ruleset.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsForwardingRulesetName The name of the DNS forwarding ruleset.
     * @param forwardingRuleName The name of the forwarding rule.
     * @param parameters Parameters supplied to the CreateOrUpdate operation.
     * @param ifMatch ETag of the resource. Omit this value to always overwrite the current resource. Specify the
     *     last-seen ETag value to prevent accidentally overwriting any concurrent changes.
     * @param ifNoneMatch Set to '*' to allow a new resource to be created, but to prevent updating an existing
     *     resource. Other values will be ignored.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a forwarding rule within a DNS forwarding ruleset along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ForwardingRuleInner> createOrUpdateWithResponse(
        String resourceGroupName,
        String dnsForwardingRulesetName,
        String forwardingRuleName,
        ForwardingRuleInner parameters,
        String ifMatch,
        String ifNoneMatch,
        Context context);

    /**
     * Updates a forwarding rule in a DNS forwarding ruleset.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsForwardingRulesetName The name of the DNS forwarding ruleset.
     * @param forwardingRuleName The name of the forwarding rule.
     * @param parameters Parameters supplied to the Update operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a forwarding rule within a DNS forwarding ruleset.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ForwardingRuleInner update(
        String resourceGroupName,
        String dnsForwardingRulesetName,
        String forwardingRuleName,
        ForwardingRulePatch parameters);

    /**
     * Updates a forwarding rule in a DNS forwarding ruleset.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsForwardingRulesetName The name of the DNS forwarding ruleset.
     * @param forwardingRuleName The name of the forwarding rule.
     * @param parameters Parameters supplied to the Update operation.
     * @param ifMatch ETag of the resource. Omit this value to always overwrite the current resource. Specify the
     *     last-seen ETag value to prevent accidentally overwriting any concurrent changes.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a forwarding rule within a DNS forwarding ruleset along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ForwardingRuleInner> updateWithResponse(
        String resourceGroupName,
        String dnsForwardingRulesetName,
        String forwardingRuleName,
        ForwardingRulePatch parameters,
        String ifMatch,
        Context context);

    /**
     * Deletes a forwarding rule in a DNS forwarding ruleset. WARNING: This operation cannot be undone.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsForwardingRulesetName The name of the DNS forwarding ruleset.
     * @param forwardingRuleName The name of the forwarding rule.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String dnsForwardingRulesetName, String forwardingRuleName);

    /**
     * Deletes a forwarding rule in a DNS forwarding ruleset. WARNING: This operation cannot be undone.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsForwardingRulesetName The name of the DNS forwarding ruleset.
     * @param forwardingRuleName The name of the forwarding rule.
     * @param ifMatch ETag of the resource. Omit this value to always overwrite the current resource. Specify the
     *     last-seen ETag value to prevent accidentally overwriting any concurrent changes.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(
        String resourceGroupName,
        String dnsForwardingRulesetName,
        String forwardingRuleName,
        String ifMatch,
        Context context);

    /**
     * Gets properties of a forwarding rule in a DNS forwarding ruleset.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsForwardingRulesetName The name of the DNS forwarding ruleset.
     * @param forwardingRuleName The name of the forwarding rule.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of a forwarding rule in a DNS forwarding ruleset.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ForwardingRuleInner get(String resourceGroupName, String dnsForwardingRulesetName, String forwardingRuleName);

    /**
     * Gets properties of a forwarding rule in a DNS forwarding ruleset.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsForwardingRulesetName The name of the DNS forwarding ruleset.
     * @param forwardingRuleName The name of the forwarding rule.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of a forwarding rule in a DNS forwarding ruleset along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ForwardingRuleInner> getWithResponse(
        String resourceGroupName, String dnsForwardingRulesetName, String forwardingRuleName, Context context);

    /**
     * Lists forwarding rules in a DNS forwarding ruleset.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsForwardingRulesetName The name of the DNS forwarding ruleset.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response to an enumeration operation on forwarding rules within a DNS forwarding ruleset as paginated
     *     response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ForwardingRuleInner> list(String resourceGroupName, String dnsForwardingRulesetName);

    /**
     * Lists forwarding rules in a DNS forwarding ruleset.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsForwardingRulesetName The name of the DNS forwarding ruleset.
     * @param top The maximum number of results to return. If not specified, returns up to 100 results.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response to an enumeration operation on forwarding rules within a DNS forwarding ruleset as paginated
     *     response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ForwardingRuleInner> list(
        String resourceGroupName, String dnsForwardingRulesetName, Integer top, Context context);
}
