// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dnsresolver.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.SubResource;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/** Describes a DNS forwarding ruleset PATCH operation. */
@Fluent
public final class DnsForwardingRulesetPatch {
    /*
     * The reference to the DNS resolver outbound endpoints that are used to route DNS queries matching the forwarding
     * rules in the ruleset to the target DNS servers.
     */
    @JsonProperty(value = "dnsResolverOutboundEndpoints")
    private List<SubResource> dnsResolverOutboundEndpoints;

    /*
     * Tags for DNS Resolver.
     */
    @JsonProperty(value = "tags")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tags;

    /**
     * Get the dnsResolverOutboundEndpoints property: The reference to the DNS resolver outbound endpoints that are used
     * to route DNS queries matching the forwarding rules in the ruleset to the target DNS servers.
     *
     * @return the dnsResolverOutboundEndpoints value.
     */
    public List<SubResource> dnsResolverOutboundEndpoints() {
        return this.dnsResolverOutboundEndpoints;
    }

    /**
     * Set the dnsResolverOutboundEndpoints property: The reference to the DNS resolver outbound endpoints that are used
     * to route DNS queries matching the forwarding rules in the ruleset to the target DNS servers.
     *
     * @param dnsResolverOutboundEndpoints the dnsResolverOutboundEndpoints value to set.
     * @return the DnsForwardingRulesetPatch object itself.
     */
    public DnsForwardingRulesetPatch withDnsResolverOutboundEndpoints(List<SubResource> dnsResolverOutboundEndpoints) {
        this.dnsResolverOutboundEndpoints = dnsResolverOutboundEndpoints;
        return this;
    }

    /**
     * Get the tags property: Tags for DNS Resolver.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Tags for DNS Resolver.
     *
     * @param tags the tags value to set.
     * @return the DnsForwardingRulesetPatch object itself.
     */
    public DnsForwardingRulesetPatch withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
