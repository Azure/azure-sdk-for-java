// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerorchestratorruntime.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.containerorchestratorruntime.ContainerOrchestratorRuntimeManager;
import com.azure.resourcemanager.containerorchestratorruntime.models.AdvertiseMode;
import com.azure.resourcemanager.containerorchestratorruntime.models.LoadBalancer;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class LoadBalancersGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"addresses\":[\"jrrfbyaosve\"],\"serviceSelector\":{\"hocohslkev\":\"onpc\",\"hfmvfaxkffe\":\"eggzfb\",\"sbbzo\":\"ithlvmezyvshxm\"},\"advertiseMode\":\"ARP\",\"bgpPeers\":[\"rxwburv\",\"xxjnspydptk\"],\"provisioningState\":\"Updating\"},\"id\":\"ou\",\"name\":\"nvudwtiukb\",\"type\":\"dng\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerOrchestratorRuntimeManager manager = ContainerOrchestratorRuntimeManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        LoadBalancer response = manager.loadBalancers()
            .getWithResponse("ofoskghs", "uuimjmvxieduug", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("jrrfbyaosve", response.properties().addresses().get(0));
        Assertions.assertEquals("onpc", response.properties().serviceSelector().get("hocohslkev"));
        Assertions.assertEquals(AdvertiseMode.ARP, response.properties().advertiseMode());
        Assertions.assertEquals("rxwburv", response.properties().bgpPeers().get(0));
    }
}
