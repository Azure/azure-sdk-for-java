// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerorchestratorruntime.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.containerorchestratorruntime.fluent.models.LoadBalancerInner;
import com.azure.resourcemanager.containerorchestratorruntime.models.LoadBalancer;
import com.azure.resourcemanager.containerorchestratorruntime.models.LoadBalancerProperties;

public final class LoadBalancerImpl implements LoadBalancer, LoadBalancer.Definition, LoadBalancer.Update {
    private LoadBalancerInner innerObject;

    private final com.azure.resourcemanager.containerorchestratorruntime.ContainerOrchestratorRuntimeManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public LoadBalancerProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public LoadBalancerInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.containerorchestratorruntime.ContainerOrchestratorRuntimeManager manager() {
        return this.serviceManager;
    }

    private String resourceUri;

    private String loadBalancerName;

    public LoadBalancerImpl withExistingResourceUri(String resourceUri) {
        this.resourceUri = resourceUri;
        return this;
    }

    public LoadBalancer create() {
        this.innerObject = serviceManager.serviceClient()
            .getLoadBalancers()
            .createOrUpdate(resourceUri, loadBalancerName, this.innerModel(), Context.NONE);
        return this;
    }

    public LoadBalancer create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getLoadBalancers()
            .createOrUpdate(resourceUri, loadBalancerName, this.innerModel(), context);
        return this;
    }

    LoadBalancerImpl(String name,
        com.azure.resourcemanager.containerorchestratorruntime.ContainerOrchestratorRuntimeManager serviceManager) {
        this.innerObject = new LoadBalancerInner();
        this.serviceManager = serviceManager;
        this.loadBalancerName = name;
    }

    public LoadBalancerImpl update() {
        return this;
    }

    public LoadBalancer apply() {
        this.innerObject = serviceManager.serviceClient()
            .getLoadBalancers()
            .createOrUpdate(resourceUri, loadBalancerName, this.innerModel(), Context.NONE);
        return this;
    }

    public LoadBalancer apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getLoadBalancers()
            .createOrUpdate(resourceUri, loadBalancerName, this.innerModel(), context);
        return this;
    }

    LoadBalancerImpl(LoadBalancerInner innerObject,
        com.azure.resourcemanager.containerorchestratorruntime.ContainerOrchestratorRuntimeManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceUri = ResourceManagerUtils.getValueFromIdByParameterName(innerObject.id(),
            "/{resourceUri}/providers/Microsoft.KubernetesRuntime/loadBalancers/{loadBalancerName}", "resourceUri");
        this.loadBalancerName = ResourceManagerUtils.getValueFromIdByParameterName(innerObject.id(),
            "/{resourceUri}/providers/Microsoft.KubernetesRuntime/loadBalancers/{loadBalancerName}",
            "loadBalancerName");
    }

    public LoadBalancer refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getLoadBalancers()
            .getWithResponse(resourceUri, loadBalancerName, Context.NONE)
            .getValue();
        return this;
    }

    public LoadBalancer refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getLoadBalancers()
            .getWithResponse(resourceUri, loadBalancerName, context)
            .getValue();
        return this;
    }

    public LoadBalancerImpl withProperties(LoadBalancerProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
