// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerorchestratorruntime.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of BgpPeers.
 */
public interface BgpPeers {
    /**
     * Get a BgpPeer.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param bgpPeerName The name of the BgpPeer.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a BgpPeer along with {@link Response}.
     */
    Response<BgpPeer> getWithResponse(String resourceUri, String bgpPeerName, Context context);

    /**
     * Get a BgpPeer.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param bgpPeerName The name of the BgpPeer.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a BgpPeer.
     */
    BgpPeer get(String resourceUri, String bgpPeerName);

    /**
     * Delete a BgpPeer.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param bgpPeerName The name of the BgpPeer.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByResourceGroupWithResponse(String resourceUri, String bgpPeerName, Context context);

    /**
     * Delete a BgpPeer.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param bgpPeerName The name of the BgpPeer.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceUri, String bgpPeerName);

    /**
     * List BgpPeer resources by parent.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a BgpPeer list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BgpPeer> list(String resourceUri);

    /**
     * List BgpPeer resources by parent.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a BgpPeer list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<BgpPeer> list(String resourceUri, Context context);

    /**
     * Get a BgpPeer.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a BgpPeer along with {@link Response}.
     */
    BgpPeer getById(String id);

    /**
     * Get a BgpPeer.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a BgpPeer along with {@link Response}.
     */
    Response<BgpPeer> getByIdWithResponse(String id, Context context);

    /**
     * Delete a BgpPeer.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a BgpPeer.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new BgpPeer resource.
     * 
     * @param name resource name.
     * @return the first stage of the new BgpPeer definition.
     */
    BgpPeer.DefinitionStages.Blank define(String name);
}
