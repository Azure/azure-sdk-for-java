// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerorchestratorruntime.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.containerorchestratorruntime.fluent.models.StorageClassResourceInner;
import com.azure.resourcemanager.containerorchestratorruntime.models.StorageClassResourceUpdate;

/**
 * An instance of this class provides access to all the operations defined in StorageClassClient.
 */
public interface StorageClassClient {
    /**
     * Get a StorageClassResource.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param storageClassName The name of the the storage class.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a StorageClassResource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<StorageClassResourceInner> getWithResponse(String resourceUri, String storageClassName, Context context);

    /**
     * Get a StorageClassResource.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param storageClassName The name of the the storage class.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a StorageClassResource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    StorageClassResourceInner get(String resourceUri, String storageClassName);

    /**
     * Create a StorageClassResource.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param storageClassName The name of the the storage class.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a StorageClass resource for an Arc connected cluster
     * (Microsoft.Kubernetes/connectedClusters).
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<StorageClassResourceInner>, StorageClassResourceInner> beginCreateOrUpdate(String resourceUri,
        String storageClassName, StorageClassResourceInner resource);

    /**
     * Create a StorageClassResource.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param storageClassName The name of the the storage class.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a StorageClass resource for an Arc connected cluster
     * (Microsoft.Kubernetes/connectedClusters).
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<StorageClassResourceInner>, StorageClassResourceInner> beginCreateOrUpdate(String resourceUri,
        String storageClassName, StorageClassResourceInner resource, Context context);

    /**
     * Create a StorageClassResource.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param storageClassName The name of the the storage class.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a StorageClass resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters).
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    StorageClassResourceInner createOrUpdate(String resourceUri, String storageClassName,
        StorageClassResourceInner resource);

    /**
     * Create a StorageClassResource.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param storageClassName The name of the the storage class.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a StorageClass resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters).
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    StorageClassResourceInner createOrUpdate(String resourceUri, String storageClassName,
        StorageClassResourceInner resource, Context context);

    /**
     * Update a StorageClassResource.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param storageClassName The name of the the storage class.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a StorageClass resource for an Arc connected cluster
     * (Microsoft.Kubernetes/connectedClusters).
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<StorageClassResourceInner>, StorageClassResourceInner> beginUpdate(String resourceUri,
        String storageClassName, StorageClassResourceUpdate properties);

    /**
     * Update a StorageClassResource.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param storageClassName The name of the the storage class.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a StorageClass resource for an Arc connected cluster
     * (Microsoft.Kubernetes/connectedClusters).
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<StorageClassResourceInner>, StorageClassResourceInner> beginUpdate(String resourceUri,
        String storageClassName, StorageClassResourceUpdate properties, Context context);

    /**
     * Update a StorageClassResource.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param storageClassName The name of the the storage class.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a StorageClass resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters).
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    StorageClassResourceInner update(String resourceUri, String storageClassName,
        StorageClassResourceUpdate properties);

    /**
     * Update a StorageClassResource.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param storageClassName The name of the the storage class.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a StorageClass resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters).
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    StorageClassResourceInner update(String resourceUri, String storageClassName, StorageClassResourceUpdate properties,
        Context context);

    /**
     * Delete a StorageClassResource.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param storageClassName The name of the the storage class.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceUri, String storageClassName);

    /**
     * Delete a StorageClassResource.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param storageClassName The name of the the storage class.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceUri, String storageClassName, Context context);

    /**
     * Delete a StorageClassResource.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param storageClassName The name of the the storage class.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceUri, String storageClassName);

    /**
     * Delete a StorageClassResource.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param storageClassName The name of the the storage class.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceUri, String storageClassName, Context context);

    /**
     * List StorageClassResource resources by parent.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a StorageClassResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<StorageClassResourceInner> list(String resourceUri);

    /**
     * List StorageClassResource resources by parent.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a StorageClassResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<StorageClassResourceInner> list(String resourceUri, Context context);
}
