// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerorchestratorruntime.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.containerorchestratorruntime.fluent.models.BgpPeerInner;

/**
 * An instance of this class provides access to all the operations defined in BgpPeersClient.
 */
public interface BgpPeersClient {
    /**
     * Get a BgpPeer.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param bgpPeerName The name of the BgpPeer.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a BgpPeer along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<BgpPeerInner> getWithResponse(String resourceUri, String bgpPeerName, Context context);

    /**
     * Get a BgpPeer.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param bgpPeerName The name of the BgpPeer.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a BgpPeer.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    BgpPeerInner get(String resourceUri, String bgpPeerName);

    /**
     * Create a BgpPeer.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param bgpPeerName The name of the BgpPeer.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a BgpPeer resource for an Arc connected cluster
     * (Microsoft.Kubernetes/connectedClusters).
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<BgpPeerInner>, BgpPeerInner> beginCreateOrUpdate(String resourceUri, String bgpPeerName,
        BgpPeerInner resource);

    /**
     * Create a BgpPeer.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param bgpPeerName The name of the BgpPeer.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a BgpPeer resource for an Arc connected cluster
     * (Microsoft.Kubernetes/connectedClusters).
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<BgpPeerInner>, BgpPeerInner> beginCreateOrUpdate(String resourceUri, String bgpPeerName,
        BgpPeerInner resource, Context context);

    /**
     * Create a BgpPeer.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param bgpPeerName The name of the BgpPeer.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a BgpPeer resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters).
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    BgpPeerInner createOrUpdate(String resourceUri, String bgpPeerName, BgpPeerInner resource);

    /**
     * Create a BgpPeer.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param bgpPeerName The name of the BgpPeer.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a BgpPeer resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters).
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    BgpPeerInner createOrUpdate(String resourceUri, String bgpPeerName, BgpPeerInner resource, Context context);

    /**
     * Delete a BgpPeer.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param bgpPeerName The name of the BgpPeer.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceUri, String bgpPeerName, Context context);

    /**
     * Delete a BgpPeer.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param bgpPeerName The name of the BgpPeer.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceUri, String bgpPeerName);

    /**
     * List BgpPeer resources by parent.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a BgpPeer list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<BgpPeerInner> list(String resourceUri);

    /**
     * List BgpPeer resources by parent.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a BgpPeer list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<BgpPeerInner> list(String resourceUri, Context context);
}
