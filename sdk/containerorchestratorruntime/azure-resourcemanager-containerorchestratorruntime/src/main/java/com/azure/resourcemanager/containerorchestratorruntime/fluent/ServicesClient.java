// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerorchestratorruntime.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.containerorchestratorruntime.fluent.models.ServiceResourceInner;

/**
 * An instance of this class provides access to all the operations defined in ServicesClient.
 */
public interface ServicesClient {
    /**
     * Get a ServiceResource.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param serviceName The name of the the service.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ServiceResource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ServiceResourceInner> getWithResponse(String resourceUri, String serviceName, Context context);

    /**
     * Get a ServiceResource.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param serviceName The name of the the service.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ServiceResource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ServiceResourceInner get(String resourceUri, String serviceName);

    /**
     * Create a ServiceResource.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param serviceName The name of the the service.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Service resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters) along with
     * {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ServiceResourceInner> createOrUpdateWithResponse(String resourceUri, String serviceName,
        ServiceResourceInner resource, Context context);

    /**
     * Create a ServiceResource.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param serviceName The name of the the service.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Service resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters).
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ServiceResourceInner createOrUpdate(String resourceUri, String serviceName, ServiceResourceInner resource);

    /**
     * Delete a ServiceResource.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param serviceName The name of the the service.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceUri, String serviceName, Context context);

    /**
     * Delete a ServiceResource.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param serviceName The name of the the service.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceUri, String serviceName);

    /**
     * List ServiceResource resources by parent.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a ServiceResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ServiceResourceInner> list(String resourceUri);

    /**
     * List ServiceResource resources by parent.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a ServiceResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ServiceResourceInner> list(String resourceUri, Context context);
}
