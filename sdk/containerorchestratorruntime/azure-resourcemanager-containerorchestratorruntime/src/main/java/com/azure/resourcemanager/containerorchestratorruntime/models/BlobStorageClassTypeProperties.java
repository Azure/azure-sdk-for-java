// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerorchestratorruntime.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The properties of Blob StorageClass.
 */
@Fluent
public final class BlobStorageClassTypeProperties extends StorageClassTypeProperties {
    /*
     * Type of the storage class.
     */
    private SCType type = SCType.BLOB;

    /*
     * Azure Storage Account Name
     */
    private String azureStorageAccountName;

    /*
     * Azure Storage Account Key
     */
    private String azureStorageAccountKey;

    /**
     * Creates an instance of BlobStorageClassTypeProperties class.
     */
    public BlobStorageClassTypeProperties() {
    }

    /**
     * Get the type property: Type of the storage class.
     * 
     * @return the type value.
     */
    @Override
    public SCType type() {
        return this.type;
    }

    /**
     * Get the azureStorageAccountName property: Azure Storage Account Name.
     * 
     * @return the azureStorageAccountName value.
     */
    public String azureStorageAccountName() {
        return this.azureStorageAccountName;
    }

    /**
     * Set the azureStorageAccountName property: Azure Storage Account Name.
     * 
     * @param azureStorageAccountName the azureStorageAccountName value to set.
     * @return the BlobStorageClassTypeProperties object itself.
     */
    public BlobStorageClassTypeProperties withAzureStorageAccountName(String azureStorageAccountName) {
        this.azureStorageAccountName = azureStorageAccountName;
        return this;
    }

    /**
     * Get the azureStorageAccountKey property: Azure Storage Account Key.
     * 
     * @return the azureStorageAccountKey value.
     */
    public String azureStorageAccountKey() {
        return this.azureStorageAccountKey;
    }

    /**
     * Set the azureStorageAccountKey property: Azure Storage Account Key.
     * 
     * @param azureStorageAccountKey the azureStorageAccountKey value to set.
     * @return the BlobStorageClassTypeProperties object itself.
     */
    public BlobStorageClassTypeProperties withAzureStorageAccountKey(String azureStorageAccountKey) {
        this.azureStorageAccountKey = azureStorageAccountKey;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("azureStorageAccountName", this.azureStorageAccountName);
        jsonWriter.writeStringField("azureStorageAccountKey", this.azureStorageAccountKey);
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BlobStorageClassTypeProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of BlobStorageClassTypeProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the BlobStorageClassTypeProperties.
     */
    public static BlobStorageClassTypeProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BlobStorageClassTypeProperties deserializedBlobStorageClassTypeProperties
                = new BlobStorageClassTypeProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("azureStorageAccountName".equals(fieldName)) {
                    deserializedBlobStorageClassTypeProperties.azureStorageAccountName = reader.getString();
                } else if ("azureStorageAccountKey".equals(fieldName)) {
                    deserializedBlobStorageClassTypeProperties.azureStorageAccountKey = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedBlobStorageClassTypeProperties.type = SCType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedBlobStorageClassTypeProperties;
        });
    }
}
