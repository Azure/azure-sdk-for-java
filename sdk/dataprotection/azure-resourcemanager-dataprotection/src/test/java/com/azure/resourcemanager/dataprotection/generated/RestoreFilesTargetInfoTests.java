// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.RecoveryOption;
import com.azure.resourcemanager.dataprotection.models.RestoreFilesTargetInfo;
import com.azure.resourcemanager.dataprotection.models.RestoreTargetLocationType;
import com.azure.resourcemanager.dataprotection.models.TargetDetails;
import org.junit.jupiter.api.Assertions;

public final class RestoreFilesTargetInfoTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RestoreFilesTargetInfo model = BinaryData.fromString(
            "{\"objectType\":\"RestoreFilesTargetInfo\",\"targetDetails\":{\"filePrefix\":\"j\",\"restoreTargetLocationType\":\"AzureFiles\",\"url\":\"ccybvp\",\"targetResourceArmId\":\"akkud\"},\"recoveryOption\":\"FailIfExists\",\"restoreLocation\":\"gwjplmag\"}")
            .toObject(RestoreFilesTargetInfo.class);
        Assertions.assertEquals(RecoveryOption.FAIL_IF_EXISTS, model.recoveryOption());
        Assertions.assertEquals("gwjplmag", model.restoreLocation());
        Assertions.assertEquals("j", model.targetDetails().filePrefix());
        Assertions.assertEquals(RestoreTargetLocationType.AZURE_FILES,
            model.targetDetails().restoreTargetLocationType());
        Assertions.assertEquals("ccybvp", model.targetDetails().url());
        Assertions.assertEquals("akkud", model.targetDetails().targetResourceArmId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RestoreFilesTargetInfo model = new RestoreFilesTargetInfo().withRecoveryOption(RecoveryOption.FAIL_IF_EXISTS)
            .withRestoreLocation("gwjplmag")
            .withTargetDetails(new TargetDetails().withFilePrefix("j")
                .withRestoreTargetLocationType(RestoreTargetLocationType.AZURE_FILES)
                .withUrl("ccybvp")
                .withTargetResourceArmId("akkud"));
        model = BinaryData.fromObject(model).toObject(RestoreFilesTargetInfo.class);
        Assertions.assertEquals(RecoveryOption.FAIL_IF_EXISTS, model.recoveryOption());
        Assertions.assertEquals("gwjplmag", model.restoreLocation());
        Assertions.assertEquals("j", model.targetDetails().filePrefix());
        Assertions.assertEquals(RestoreTargetLocationType.AZURE_FILES,
            model.targetDetails().restoreTargetLocationType());
        Assertions.assertEquals("ccybvp", model.targetDetails().url());
        Assertions.assertEquals("akkud", model.targetDetails().targetResourceArmId());
    }
}
