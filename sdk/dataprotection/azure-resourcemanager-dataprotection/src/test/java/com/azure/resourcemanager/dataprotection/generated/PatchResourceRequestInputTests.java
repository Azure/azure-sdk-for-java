// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.DppIdentityDetails;
import com.azure.resourcemanager.dataprotection.models.FeatureSettings;
import com.azure.resourcemanager.dataprotection.models.MonitoringSettings;
import com.azure.resourcemanager.dataprotection.models.PatchBackupVaultInput;
import com.azure.resourcemanager.dataprotection.models.PatchResourceRequestInput;
import com.azure.resourcemanager.dataprotection.models.SecuritySettings;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class PatchResourceRequestInputTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PatchResourceRequestInput model =
            BinaryData
                .fromString(
                    "{\"identity\":{\"principalId\":\"pbkwtmu\",\"tenantId\":\"uqktap\",\"type\":\"wgcu\"},\"properties\":{\"monitoringSettings\":{},\"securitySettings\":{},\"featureSettings\":{}},\"tags\":{\"bbjfddgmbmbexp\":\"whbmd\"}}")
                .toObject(PatchResourceRequestInput.class);
        Assertions.assertEquals("wgcu", model.identity().type());
        Assertions.assertEquals("whbmd", model.tags().get("bbjfddgmbmbexp"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PatchResourceRequestInput model =
            new PatchResourceRequestInput()
                .withIdentity(new DppIdentityDetails().withType("wgcu"))
                .withProperties(
                    new PatchBackupVaultInput()
                        .withMonitoringSettings(new MonitoringSettings())
                        .withSecuritySettings(new SecuritySettings())
                        .withFeatureSettings(new FeatureSettings()))
                .withTags(mapOf("bbjfddgmbmbexp", "whbmd"));
        model = BinaryData.fromObject(model).toObject(PatchResourceRequestInput.class);
        Assertions.assertEquals("wgcu", model.identity().type());
        Assertions.assertEquals("whbmd", model.tags().get("bbjfddgmbmbexp"));
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
