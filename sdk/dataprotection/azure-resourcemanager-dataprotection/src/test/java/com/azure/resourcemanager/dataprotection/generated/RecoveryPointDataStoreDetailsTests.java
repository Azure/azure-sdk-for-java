// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.RecoveryPointDataStoreDetails;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class RecoveryPointDataStoreDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RecoveryPointDataStoreDetails model = BinaryData.fromString(
            "{\"creationTime\":\"2021-07-13T15:08:06Z\",\"expiryTime\":\"2021-02-06T22:33:53Z\",\"id\":\"bopgxedkowepbqp\",\"metaData\":\"fkbw\",\"state\":\"snjvcdwxlpqekftn\",\"type\":\"tjsyin\",\"visible\":false,\"rehydrationExpiryTime\":\"2021-02-20T13:18:06Z\",\"rehydrationStatus\":\"COMPLETED\"}")
            .toObject(RecoveryPointDataStoreDetails.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-13T15:08:06Z"), model.creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-06T22:33:53Z"), model.expiryTime());
        Assertions.assertEquals("bopgxedkowepbqp", model.id());
        Assertions.assertEquals("fkbw", model.metadata());
        Assertions.assertEquals("snjvcdwxlpqekftn", model.state());
        Assertions.assertEquals("tjsyin", model.type());
        Assertions.assertEquals(false, model.visible());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RecoveryPointDataStoreDetails model
            = new RecoveryPointDataStoreDetails().withCreationTime(OffsetDateTime.parse("2021-07-13T15:08:06Z"))
                .withExpiryTime(OffsetDateTime.parse("2021-02-06T22:33:53Z")).withId("bopgxedkowepbqp")
                .withMetadata("fkbw").withState("snjvcdwxlpqekftn").withType("tjsyin").withVisible(false);
        model = BinaryData.fromObject(model).toObject(RecoveryPointDataStoreDetails.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-13T15:08:06Z"), model.creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-06T22:33:53Z"), model.expiryTime());
        Assertions.assertEquals("bopgxedkowepbqp", model.id());
        Assertions.assertEquals("fkbw", model.metadata());
        Assertions.assertEquals("snjvcdwxlpqekftn", model.state());
        Assertions.assertEquals("tjsyin", model.type());
        Assertions.assertEquals(false, model.visible());
    }
}
