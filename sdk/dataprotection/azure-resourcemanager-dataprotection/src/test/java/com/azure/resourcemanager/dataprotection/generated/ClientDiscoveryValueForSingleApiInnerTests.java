// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.fluent.models.ClientDiscoveryValueForSingleApiInner;
import com.azure.resourcemanager.dataprotection.models.ClientDiscoveryDisplay;
import com.azure.resourcemanager.dataprotection.models.ClientDiscoveryForLogSpecification;
import com.azure.resourcemanager.dataprotection.models.ClientDiscoveryForProperties;
import com.azure.resourcemanager.dataprotection.models.ClientDiscoveryForServiceSpecification;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ClientDiscoveryValueForSingleApiInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClientDiscoveryValueForSingleApiInner model = BinaryData.fromString(
            "{\"display\":{\"description\":\"gbquxigj\",\"operation\":\"gzjaoyfhrtxilne\",\"provider\":\"ujysvle\",\"resource\":\"vfqawrlyxwjkcpr\"},\"name\":\"wbxgjvt\",\"isDataAction\":false,\"origin\":\"sszdnru\",\"properties\":{\"serviceSpecification\":{\"logSpecifications\":[{\"blobDuration\":\"uouq\",\"displayName\":\"rwzwbng\",\"name\":\"tnwu\"},{\"blobDuration\":\"gazxuf\",\"displayName\":\"uckyf\",\"name\":\"rfidfvzwdz\"},{\"blobDuration\":\"tymw\",\"displayName\":\"dkfthwxmnt\",\"name\":\"waopvkmijcmmxd\"},{\"blobDuration\":\"fufsrpymzi\",\"displayName\":\"sezcxtb\",\"name\":\"gfycc\"}]}}}")
            .toObject(ClientDiscoveryValueForSingleApiInner.class);
        Assertions.assertEquals("gbquxigj", model.display().description());
        Assertions.assertEquals("gzjaoyfhrtxilne", model.display().operation());
        Assertions.assertEquals("ujysvle", model.display().provider());
        Assertions.assertEquals("vfqawrlyxwjkcpr", model.display().resource());
        Assertions.assertEquals("wbxgjvt", model.name());
        Assertions.assertFalse(model.isDataAction());
        Assertions.assertEquals("sszdnru", model.origin());
        Assertions.assertEquals("uouq",
            model.properties().serviceSpecification().logSpecifications().get(0).blobDuration());
        Assertions.assertEquals("rwzwbng",
            model.properties().serviceSpecification().logSpecifications().get(0).displayName());
        Assertions.assertEquals("tnwu", model.properties().serviceSpecification().logSpecifications().get(0).name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClientDiscoveryValueForSingleApiInner model = new ClientDiscoveryValueForSingleApiInner()
            .withDisplay(new ClientDiscoveryDisplay().withDescription("gbquxigj")
                .withOperation("gzjaoyfhrtxilne")
                .withProvider("ujysvle")
                .withResource("vfqawrlyxwjkcpr"))
            .withName("wbxgjvt")
            .withIsDataAction(false)
            .withOrigin("sszdnru")
            .withProperties(new ClientDiscoveryForProperties().withServiceSpecification(
                new ClientDiscoveryForServiceSpecification().withLogSpecifications(Arrays.asList(
                    new ClientDiscoveryForLogSpecification().withBlobDuration("uouq")
                        .withDisplayName("rwzwbng")
                        .withName("tnwu"),
                    new ClientDiscoveryForLogSpecification().withBlobDuration("gazxuf")
                        .withDisplayName("uckyf")
                        .withName("rfidfvzwdz"),
                    new ClientDiscoveryForLogSpecification().withBlobDuration("tymw")
                        .withDisplayName("dkfthwxmnt")
                        .withName("waopvkmijcmmxd"),
                    new ClientDiscoveryForLogSpecification().withBlobDuration("fufsrpymzi")
                        .withDisplayName("sezcxtb")
                        .withName("gfycc")))));
        model = BinaryData.fromObject(model).toObject(ClientDiscoveryValueForSingleApiInner.class);
        Assertions.assertEquals("gbquxigj", model.display().description());
        Assertions.assertEquals("gzjaoyfhrtxilne", model.display().operation());
        Assertions.assertEquals("ujysvle", model.display().provider());
        Assertions.assertEquals("vfqawrlyxwjkcpr", model.display().resource());
        Assertions.assertEquals("wbxgjvt", model.name());
        Assertions.assertFalse(model.isDataAction());
        Assertions.assertEquals("sszdnru", model.origin());
        Assertions.assertEquals("uouq",
            model.properties().serviceSpecification().logSpecifications().get(0).blobDuration());
        Assertions.assertEquals("rwzwbng",
            model.properties().serviceSpecification().logSpecifications().get(0).displayName());
        Assertions.assertEquals("tnwu", model.properties().serviceSpecification().logSpecifications().get(0).name());
    }
}
