// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.dataprotection.DataProtectionManager;
import com.azure.resourcemanager.dataprotection.models.ResourceGuardOperationDetail;
import com.azure.resourcemanager.dataprotection.models.ResourceGuardProxyBase;
import com.azure.resourcemanager.dataprotection.models.ResourceGuardProxyBaseResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DppResourceGuardProxiesCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"resourceGuardResourceId\":\"ondcbrw\",\"resourceGuardOperationDetails\":[{\"vaultCriticalOperation\":\"qejo\",\"defaultResourceRequest\":\"vyrrleaesinuq\"},{\"vaultCriticalOperation\":\"jqo\",\"defaultResourceRequest\":\"pihehce\"},{\"vaultCriticalOperation\":\"bmrqbrjbbmp\",\"defaultResourceRequest\":\"lvykfrex\"},{\"vaultCriticalOperation\":\"s\",\"defaultResourceRequest\":\"wjksghudgzhxo\"}],\"lastUpdatedTime\":\"ggsvoujkxibdaf\",\"description\":\"kmdyomkxfbvfbh\"},\"id\":\"i\",\"name\":\"hpwpgddeimawzovg\",\"type\":\"kumuikjcjca\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DataProtectionManager manager = DataProtectionManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ResourceGuardProxyBaseResource response = manager.dppResourceGuardProxies()
            .define("hlaiwd")
            .withExistingBackupVault("cnzqtpjhmqr", "v")
            .withProperties(new ResourceGuardProxyBase().withResourceGuardResourceId("mlzzhzdtxetlgyd")
                .withResourceGuardOperationDetails(Arrays.asList(
                    new ResourceGuardOperationDetail().withVaultCriticalOperation("lnnpx")
                        .withDefaultResourceRequest("afiqgeaarbgjekg"),
                    new ResourceGuardOperationDetail().withVaultCriticalOperation("lbyulidwcwvmze")
                        .withDefaultResourceRequest("o"),
                    new ResourceGuardOperationDetail().withVaultCriticalOperation("hj")
                        .withDefaultResourceRequest("wgdnqzbr"),
                    new ResourceGuardOperationDetail().withVaultCriticalOperation("spzhzmtksjc")
                        .withDefaultResourceRequest("digsxcdgl")))
                .withLastUpdatedTime("lkeuac")
                .withDescription("omflrytswfp"))
            .create();

        Assertions.assertEquals("ondcbrw", response.properties().resourceGuardResourceId());
        Assertions.assertEquals("qejo",
            response.properties().resourceGuardOperationDetails().get(0).vaultCriticalOperation());
        Assertions.assertEquals("vyrrleaesinuq",
            response.properties().resourceGuardOperationDetails().get(0).defaultResourceRequest());
        Assertions.assertEquals("ggsvoujkxibdaf", response.properties().lastUpdatedTime());
        Assertions.assertEquals("kmdyomkxfbvfbh", response.properties().description());
    }
}
