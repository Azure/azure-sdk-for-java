// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.fluent.models.ResourceGuardResourceInner;
import com.azure.resourcemanager.dataprotection.models.ResourceGuard;
import com.azure.resourcemanager.dataprotection.models.ResourceGuardResourceList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ResourceGuardResourceListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ResourceGuardResourceList model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"provisioningState\":\"Failed\",\"allowAutoApprovals\":false,\"resourceGuardOperations\":[{\"vaultCriticalOperation\":\"qqu\",\"requestResourceType\":\"ik\"},{\"vaultCriticalOperation\":\"ggxkallatmelwuip\",\"requestResourceType\":\"cjzkzivgvvcna\"},{\"vaultCriticalOperation\":\"hyrnxxmu\",\"requestResourceType\":\"dndrdvstkwqqtche\"}],\"vaultCriticalOperationExclusionList\":[\"fmtdaaygdvwvgp\",\"ohgwxrtfudxepxg\",\"qagvrvm\"],\"description\":\"k\"},\"eTag\":\"ghimdblx\",\"location\":\"imfnjhfjx\",\"tags\":{\"foqreyfkzik\":\"zk\",\"wczelpci\":\"jawneaiv\",\"abfatkl\":\"elsfeaen\"},\"id\":\"dxbjhwuaanozj\",\"name\":\"sphyoulpjrvxa\",\"type\":\"l\"},{\"properties\":{\"provisioningState\":\"Succeeded\",\"allowAutoApprovals\":true,\"resourceGuardOperations\":[{\"vaultCriticalOperation\":\"tx\",\"requestResourceType\":\"cskfcktqumiekk\"},{\"vaultCriticalOperation\":\"zikhl\",\"requestResourceType\":\"jhdgqggebdunyga\"},{\"vaultCriticalOperation\":\"idb\",\"requestResourceType\":\"atpxl\"},{\"vaultCriticalOperation\":\"xcyjmoadsuvarmy\",\"requestResourceType\":\"mjsjqb\"}],\"vaultCriticalOperationExclusionList\":[\"yxxrwlycoduh\",\"kxkgymareqna\",\"xqugjhkycubedd\",\"ssofwqmzqa\"],\"description\":\"rmnjijpx\"},\"eTag\":\"q\",\"location\":\"dfnbyxbaaabjyv\",\"tags\":{\"nevfdnw\":\"fimrzrtuzqogse\",\"euzsoi\":\"wmewzsyy\",\"thzvaytdwkqbrqu\":\"judpfrxt\",\"xiilivpdtiirqt\":\"paxh\"},\"id\":\"qoaxoruzfgs\",\"name\":\"uyfxrxxleptramxj\",\"type\":\"zwl\"},{\"properties\":{\"provisioningState\":\"Unknown\",\"allowAutoApprovals\":false,\"resourceGuardOperations\":[{\"vaultCriticalOperation\":\"y\",\"requestResourceType\":\"patdooaojkniodko\"},{\"vaultCriticalOperation\":\"bw\",\"requestResourceType\":\"jhemms\"},{\"vaultCriticalOperation\":\"dkcrodt\",\"requestResourceType\":\"nfwjlfltkacjvefk\"}],\"vaultCriticalOperationExclusionList\":[\"oakggkfpag\",\"owpulpq\"],\"description\":\"ylsyxkqjnsje\"},\"eTag\":\"tiagx\",\"location\":\"sz\",\"tags\":{\"icvi\":\"psbzkfzbeyvpn\",\"jjxd\":\"v\",\"ztzp\":\"rbuukzclewyhmlwp\"},\"id\":\"fn\",\"name\":\"ckw\",\"type\":\"fz\"}],\"nextLink\":\"hxx\"}")
                .toObject(ResourceGuardResourceList.class);
        Assertions.assertEquals("hxx", model.nextLink());
        Assertions.assertEquals("imfnjhfjx", model.value().get(0).location());
        Assertions.assertEquals("zk", model.value().get(0).tags().get("foqreyfkzik"));
        Assertions.assertEquals("ghimdblx", model.value().get(0).etag());
        Assertions
            .assertEquals(
                "fmtdaaygdvwvgp", model.value().get(0).properties().vaultCriticalOperationExclusionList().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ResourceGuardResourceList model =
            new ResourceGuardResourceList()
                .withNextLink("hxx")
                .withValue(
                    Arrays
                        .asList(
                            new ResourceGuardResourceInner()
                                .withLocation("imfnjhfjx")
                                .withTags(mapOf("foqreyfkzik", "zk", "wczelpci", "jawneaiv", "abfatkl", "elsfeaen"))
                                .withEtag("ghimdblx")
                                .withProperties(
                                    new ResourceGuard()
                                        .withVaultCriticalOperationExclusionList(
                                            Arrays.asList("fmtdaaygdvwvgp", "ohgwxrtfudxepxg", "qagvrvm"))),
                            new ResourceGuardResourceInner()
                                .withLocation("dfnbyxbaaabjyv")
                                .withTags(
                                    mapOf(
                                        "nevfdnw",
                                        "fimrzrtuzqogse",
                                        "euzsoi",
                                        "wmewzsyy",
                                        "thzvaytdwkqbrqu",
                                        "judpfrxt",
                                        "xiilivpdtiirqt",
                                        "paxh"))
                                .withEtag("q")
                                .withProperties(
                                    new ResourceGuard()
                                        .withVaultCriticalOperationExclusionList(
                                            Arrays
                                                .asList(
                                                    "yxxrwlycoduh", "kxkgymareqna", "xqugjhkycubedd", "ssofwqmzqa"))),
                            new ResourceGuardResourceInner()
                                .withLocation("sz")
                                .withTags(mapOf("icvi", "psbzkfzbeyvpn", "jjxd", "v", "ztzp", "rbuukzclewyhmlwp"))
                                .withEtag("tiagx")
                                .withProperties(
                                    new ResourceGuard()
                                        .withVaultCriticalOperationExclusionList(
                                            Arrays.asList("oakggkfpag", "owpulpq")))));
        model = BinaryData.fromObject(model).toObject(ResourceGuardResourceList.class);
        Assertions.assertEquals("hxx", model.nextLink());
        Assertions.assertEquals("imfnjhfjx", model.value().get(0).location());
        Assertions.assertEquals("zk", model.value().get(0).tags().get("foqreyfkzik"));
        Assertions.assertEquals("ghimdblx", model.value().get(0).etag());
        Assertions
            .assertEquals(
                "fmtdaaygdvwvgp", model.value().get(0).properties().vaultCriticalOperationExclusionList().get(0));
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
