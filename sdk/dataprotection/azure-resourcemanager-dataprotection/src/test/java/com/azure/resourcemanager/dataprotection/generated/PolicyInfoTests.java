// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.BackupDatasourceParameters;
import com.azure.resourcemanager.dataprotection.models.DataStoreParameters;
import com.azure.resourcemanager.dataprotection.models.DataStoreTypes;
import com.azure.resourcemanager.dataprotection.models.PolicyInfo;
import com.azure.resourcemanager.dataprotection.models.PolicyParameters;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PolicyInfoTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PolicyInfo model = BinaryData.fromString(
            "{\"policyId\":\"xxjnspydptk\",\"policyVersion\":\"nkoukn\",\"policyParameters\":{\"dataStoreParametersList\":[{\"objectType\":\"DataStoreParameters\",\"dataStoreType\":\"OperationalStore\"},{\"objectType\":\"DataStoreParameters\",\"dataStoreType\":\"OperationalStore\"},{\"objectType\":\"DataStoreParameters\",\"dataStoreType\":\"OperationalStore\"}],\"backupDatasourceParametersList\":[{\"objectType\":\"BackupDatasourceParameters\"},{\"objectType\":\"BackupDatasourceParameters\"},{\"objectType\":\"BackupDatasourceParameters\"}]}}")
            .toObject(PolicyInfo.class);
        Assertions.assertEquals("xxjnspydptk", model.policyId());
        Assertions.assertEquals(DataStoreTypes.OPERATIONAL_STORE,
            model.policyParameters().dataStoreParametersList().get(0).dataStoreType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PolicyInfo model = new PolicyInfo().withPolicyId("xxjnspydptk")
            .withPolicyParameters(new PolicyParameters()
                .withDataStoreParametersList(
                    Arrays.asList(new DataStoreParameters().withDataStoreType(DataStoreTypes.OPERATIONAL_STORE),
                        new DataStoreParameters().withDataStoreType(DataStoreTypes.OPERATIONAL_STORE),
                        new DataStoreParameters().withDataStoreType(DataStoreTypes.OPERATIONAL_STORE)))
                .withBackupDatasourceParametersList(Arrays.asList(new BackupDatasourceParameters(),
                    new BackupDatasourceParameters(), new BackupDatasourceParameters())));
        model = BinaryData.fromObject(model).toObject(PolicyInfo.class);
        Assertions.assertEquals("xxjnspydptk", model.policyId());
        Assertions.assertEquals(DataStoreTypes.OPERATIONAL_STORE,
            model.policyParameters().dataStoreParametersList().get(0).dataStoreType());
    }
}
