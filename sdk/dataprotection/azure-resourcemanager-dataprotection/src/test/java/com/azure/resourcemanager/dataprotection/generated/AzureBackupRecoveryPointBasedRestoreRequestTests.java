// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.AzureBackupRecoveryPointBasedRestoreRequest;
import com.azure.resourcemanager.dataprotection.models.RecoveryOption;
import com.azure.resourcemanager.dataprotection.models.RestoreTargetInfoBase;
import com.azure.resourcemanager.dataprotection.models.SourceDataStoreType;
import org.junit.jupiter.api.Assertions;

public final class AzureBackupRecoveryPointBasedRestoreRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureBackupRecoveryPointBasedRestoreRequest model =
            BinaryData
                .fromString(
                    "{\"objectType\":\"AzureBackupRecoveryPointBasedRestoreRequest\",\"recoveryPointId\":\"ykutwpf\",\"restoreTargetInfo\":{\"objectType\":\"RestoreTargetInfoBase\",\"recoveryOption\":\"FailIfExists\",\"restoreLocation\":\"gmhrskdsnfdsdoak\"},\"sourceDataStoreType\":\"OperationalStore\",\"sourceResourceId\":\"lmkk\"}")
                .toObject(AzureBackupRecoveryPointBasedRestoreRequest.class);
        Assertions.assertEquals(RecoveryOption.FAIL_IF_EXISTS, model.restoreTargetInfo().recoveryOption());
        Assertions.assertEquals("gmhrskdsnfdsdoak", model.restoreTargetInfo().restoreLocation());
        Assertions.assertEquals(SourceDataStoreType.OPERATIONAL_STORE, model.sourceDataStoreType());
        Assertions.assertEquals("lmkk", model.sourceResourceId());
        Assertions.assertEquals("ykutwpf", model.recoveryPointId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureBackupRecoveryPointBasedRestoreRequest model =
            new AzureBackupRecoveryPointBasedRestoreRequest()
                .withRestoreTargetInfo(
                    new RestoreTargetInfoBase()
                        .withRecoveryOption(RecoveryOption.FAIL_IF_EXISTS)
                        .withRestoreLocation("gmhrskdsnfdsdoak"))
                .withSourceDataStoreType(SourceDataStoreType.OPERATIONAL_STORE)
                .withSourceResourceId("lmkk")
                .withRecoveryPointId("ykutwpf");
        model = BinaryData.fromObject(model).toObject(AzureBackupRecoveryPointBasedRestoreRequest.class);
        Assertions.assertEquals(RecoveryOption.FAIL_IF_EXISTS, model.restoreTargetInfo().recoveryOption());
        Assertions.assertEquals("gmhrskdsnfdsdoak", model.restoreTargetInfo().restoreLocation());
        Assertions.assertEquals(SourceDataStoreType.OPERATIONAL_STORE, model.sourceDataStoreType());
        Assertions.assertEquals("lmkk", model.sourceResourceId());
        Assertions.assertEquals("ykutwpf", model.recoveryPointId());
    }
}
