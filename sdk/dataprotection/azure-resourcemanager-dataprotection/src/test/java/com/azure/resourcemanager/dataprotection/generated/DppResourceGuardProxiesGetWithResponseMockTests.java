// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.dataprotection.DataProtectionManager;
import com.azure.resourcemanager.dataprotection.models.ResourceGuardProxyBaseResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DppResourceGuardProxiesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"resourceGuardResourceId\":\"cbfrm\",\"resourceGuardOperationDetails\":[{\"vaultCriticalOperation\":\"hsqqgvriibakcl\",\"defaultResourceRequest\":\"jfrnxousxauzlwv\"}],\"lastUpdatedTime\":\"mwohqfzizvuxmmkj\",\"description\":\"thnwpzte\"},\"id\":\"vmribiat\",\"name\":\"gplucfotangcfhny\",\"type\":\"zcugswvxwlmzqw\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DataProtectionManager manager = DataProtectionManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ResourceGuardProxyBaseResource response = manager.dppResourceGuardProxies()
            .getWithResponse("tglxx", "ljfp", "picrmnzhrgmqgjsx", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("cbfrm", response.properties().resourceGuardResourceId());
        Assertions.assertEquals("hsqqgvriibakcl",
            response.properties().resourceGuardOperationDetails().get(0).vaultCriticalOperation());
        Assertions.assertEquals("jfrnxousxauzlwv",
            response.properties().resourceGuardOperationDetails().get(0).defaultResourceRequest());
        Assertions.assertEquals("mwohqfzizvuxmmkj", response.properties().lastUpdatedTime());
        Assertions.assertEquals("thnwpzte", response.properties().description());
    }
}
