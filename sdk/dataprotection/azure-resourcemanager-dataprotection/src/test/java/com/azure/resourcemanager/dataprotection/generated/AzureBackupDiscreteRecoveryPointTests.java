// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.AzureBackupDiscreteRecoveryPoint;
import com.azure.resourcemanager.dataprotection.models.RecoveryPointCompletionState;
import com.azure.resourcemanager.dataprotection.models.RecoveryPointDataStoreDetails;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzureBackupDiscreteRecoveryPointTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureBackupDiscreteRecoveryPoint model = BinaryData.fromString(
            "{\"objectType\":\"AzureBackupDiscreteRecoveryPoint\",\"friendlyName\":\"ygz\",\"recoveryPointDataStoresDetails\":[{\"creationTime\":\"2021-05-24T16:37:21Z\",\"expiryTime\":\"2021-10-30T00:31:15Z\",\"id\":\"semdwzrmu\",\"metaData\":\"pfcqdp\",\"state\":\"xqv\",\"type\":\"vuoy\",\"visible\":false,\"rehydrationExpiryTime\":\"2021-10-29T23:35:36Z\",\"rehydrationStatus\":\"CREATE_IN_PROGRESS\"},{\"creationTime\":\"2021-03-24T08:25:14Z\",\"expiryTime\":\"2021-02-10T11:31:27Z\",\"id\":\"qlmfeoker\",\"metaData\":\"kyhkobopg\",\"state\":\"dkow\",\"type\":\"bqpc\",\"visible\":false,\"rehydrationExpiryTime\":\"2021-11-07T10:36:37Z\",\"rehydrationStatus\":\"CREATE_IN_PROGRESS\"}],\"recoveryPointTime\":\"2021-10-14T17:11:50Z\",\"policyName\":\"jvcdwxlpqekf\",\"policyVersion\":\"khtj\",\"recoveryPointId\":\"i\",\"recoveryPointType\":\"wfqatmtd\",\"retentionTagName\":\"mdvy\",\"retentionTagVersion\":\"ikdgszywkbir\",\"expiryTime\":\"2021-03-20T05:32:50Z\",\"recoveryPointState\":\"Partial\"}")
            .toObject(AzureBackupDiscreteRecoveryPoint.class);
        Assertions.assertEquals("ygz", model.friendlyName());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-24T16:37:21Z"),
            model.recoveryPointDataStoresDetails().get(0).creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-30T00:31:15Z"),
            model.recoveryPointDataStoresDetails().get(0).expiryTime());
        Assertions.assertEquals("semdwzrmu", model.recoveryPointDataStoresDetails().get(0).id());
        Assertions.assertEquals("pfcqdp", model.recoveryPointDataStoresDetails().get(0).metadata());
        Assertions.assertEquals("xqv", model.recoveryPointDataStoresDetails().get(0).state());
        Assertions.assertEquals("vuoy", model.recoveryPointDataStoresDetails().get(0).type());
        Assertions.assertFalse(model.recoveryPointDataStoresDetails().get(0).visible());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-14T17:11:50Z"), model.recoveryPointTime());
        Assertions.assertEquals("jvcdwxlpqekf", model.policyName());
        Assertions.assertEquals("khtj", model.policyVersion());
        Assertions.assertEquals("i", model.recoveryPointId());
        Assertions.assertEquals("wfqatmtd", model.recoveryPointType());
        Assertions.assertEquals("mdvy", model.retentionTagName());
        Assertions.assertEquals("ikdgszywkbir", model.retentionTagVersion());
        Assertions.assertEquals(RecoveryPointCompletionState.PARTIAL, model.recoveryPointState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureBackupDiscreteRecoveryPoint model = new AzureBackupDiscreteRecoveryPoint().withFriendlyName("ygz")
            .withRecoveryPointDataStoresDetails(Arrays.asList(
                new RecoveryPointDataStoreDetails().withCreationTime(OffsetDateTime.parse("2021-05-24T16:37:21Z"))
                    .withExpiryTime(OffsetDateTime.parse("2021-10-30T00:31:15Z"))
                    .withId("semdwzrmu")
                    .withMetadata("pfcqdp")
                    .withState("xqv")
                    .withType("vuoy")
                    .withVisible(false),
                new RecoveryPointDataStoreDetails().withCreationTime(OffsetDateTime.parse("2021-03-24T08:25:14Z"))
                    .withExpiryTime(OffsetDateTime.parse("2021-02-10T11:31:27Z"))
                    .withId("qlmfeoker")
                    .withMetadata("kyhkobopg")
                    .withState("dkow")
                    .withType("bqpc")
                    .withVisible(false)))
            .withRecoveryPointTime(OffsetDateTime.parse("2021-10-14T17:11:50Z"))
            .withPolicyName("jvcdwxlpqekf")
            .withPolicyVersion("khtj")
            .withRecoveryPointId("i")
            .withRecoveryPointType("wfqatmtd")
            .withRetentionTagName("mdvy")
            .withRetentionTagVersion("ikdgszywkbir")
            .withRecoveryPointState(RecoveryPointCompletionState.PARTIAL);
        model = BinaryData.fromObject(model).toObject(AzureBackupDiscreteRecoveryPoint.class);
        Assertions.assertEquals("ygz", model.friendlyName());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-24T16:37:21Z"),
            model.recoveryPointDataStoresDetails().get(0).creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-30T00:31:15Z"),
            model.recoveryPointDataStoresDetails().get(0).expiryTime());
        Assertions.assertEquals("semdwzrmu", model.recoveryPointDataStoresDetails().get(0).id());
        Assertions.assertEquals("pfcqdp", model.recoveryPointDataStoresDetails().get(0).metadata());
        Assertions.assertEquals("xqv", model.recoveryPointDataStoresDetails().get(0).state());
        Assertions.assertEquals("vuoy", model.recoveryPointDataStoresDetails().get(0).type());
        Assertions.assertFalse(model.recoveryPointDataStoresDetails().get(0).visible());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-14T17:11:50Z"), model.recoveryPointTime());
        Assertions.assertEquals("jvcdwxlpqekf", model.policyName());
        Assertions.assertEquals("khtj", model.policyVersion());
        Assertions.assertEquals("i", model.recoveryPointId());
        Assertions.assertEquals("wfqatmtd", model.recoveryPointType());
        Assertions.assertEquals("mdvy", model.retentionTagName());
        Assertions.assertEquals("ikdgszywkbir", model.retentionTagVersion());
        Assertions.assertEquals(RecoveryPointCompletionState.PARTIAL, model.recoveryPointState());
    }
}
