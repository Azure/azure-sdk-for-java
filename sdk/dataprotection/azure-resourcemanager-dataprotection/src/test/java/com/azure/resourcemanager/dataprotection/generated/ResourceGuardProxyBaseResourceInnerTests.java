// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.fluent.models.ResourceGuardProxyBaseResourceInner;
import com.azure.resourcemanager.dataprotection.models.ResourceGuardOperationDetail;
import com.azure.resourcemanager.dataprotection.models.ResourceGuardProxyBase;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ResourceGuardProxyBaseResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ResourceGuardProxyBaseResourceInner model = BinaryData.fromString(
            "{\"properties\":{\"resourceGuardResourceId\":\"wnujhemmsbvdk\",\"resourceGuardOperationDetails\":[{\"vaultCriticalOperation\":\"tjinf\",\"defaultResourceRequest\":\"lfltka\"},{\"vaultCriticalOperation\":\"vefkdlfoakggk\",\"defaultResourceRequest\":\"agaowpulpqblylsy\"}],\"lastUpdatedTime\":\"qjnsjervtia\",\"description\":\"sdszue\"},\"id\":\"sbzkf\",\"name\":\"beyvpnqicvinvkjj\",\"type\":\"dxrbuukzcle\"}")
            .toObject(ResourceGuardProxyBaseResourceInner.class);
        Assertions.assertEquals("wnujhemmsbvdk", model.properties().resourceGuardResourceId());
        Assertions.assertEquals("tjinf",
            model.properties().resourceGuardOperationDetails().get(0).vaultCriticalOperation());
        Assertions.assertEquals("lfltka",
            model.properties().resourceGuardOperationDetails().get(0).defaultResourceRequest());
        Assertions.assertEquals("qjnsjervtia", model.properties().lastUpdatedTime());
        Assertions.assertEquals("sdszue", model.properties().description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ResourceGuardProxyBaseResourceInner model = new ResourceGuardProxyBaseResourceInner()
            .withProperties(new ResourceGuardProxyBase().withResourceGuardResourceId("wnujhemmsbvdk")
                .withResourceGuardOperationDetails(Arrays.asList(
                    new ResourceGuardOperationDetail().withVaultCriticalOperation("tjinf")
                        .withDefaultResourceRequest("lfltka"),
                    new ResourceGuardOperationDetail().withVaultCriticalOperation("vefkdlfoakggk")
                        .withDefaultResourceRequest("agaowpulpqblylsy")))
                .withLastUpdatedTime("qjnsjervtia")
                .withDescription("sdszue"));
        model = BinaryData.fromObject(model).toObject(ResourceGuardProxyBaseResourceInner.class);
        Assertions.assertEquals("wnujhemmsbvdk", model.properties().resourceGuardResourceId());
        Assertions.assertEquals("tjinf",
            model.properties().resourceGuardOperationDetails().get(0).vaultCriticalOperation());
        Assertions.assertEquals("lfltka",
            model.properties().resourceGuardOperationDetails().get(0).defaultResourceRequest());
        Assertions.assertEquals("qjnsjervtia", model.properties().lastUpdatedTime());
        Assertions.assertEquals("sdszue", model.properties().description());
    }
}
