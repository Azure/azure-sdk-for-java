// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.AzureBackupRestoreRequest;
import com.azure.resourcemanager.dataprotection.models.IdentityDetails;
import com.azure.resourcemanager.dataprotection.models.RecoveryOption;
import com.azure.resourcemanager.dataprotection.models.RestoreTargetInfoBase;
import com.azure.resourcemanager.dataprotection.models.SourceDataStoreType;
import org.junit.jupiter.api.Assertions;

public final class AzureBackupRestoreRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureBackupRestoreRequest model = BinaryData.fromString(
            "{\"objectType\":\"AzureBackupRestoreRequest\",\"restoreTargetInfo\":{\"objectType\":\"RestoreTargetInfoBase\",\"recoveryOption\":\"FailIfExists\",\"restoreLocation\":\"bwwaloa\"},\"sourceDataStoreType\":\"ArchiveStore\",\"sourceResourceId\":\"gwrtzju\",\"identityDetails\":{\"useSystemAssignedIdentity\":false,\"userAssignedIdentityArmUrl\":\"mhtxongmtsavjcb\"}}")
            .toObject(AzureBackupRestoreRequest.class);
        Assertions.assertEquals(RecoveryOption.FAIL_IF_EXISTS, model.restoreTargetInfo().recoveryOption());
        Assertions.assertEquals("bwwaloa", model.restoreTargetInfo().restoreLocation());
        Assertions.assertEquals(SourceDataStoreType.ARCHIVE_STORE, model.sourceDataStoreType());
        Assertions.assertEquals("gwrtzju", model.sourceResourceId());
        Assertions.assertEquals(false, model.identityDetails().useSystemAssignedIdentity());
        Assertions.assertEquals("mhtxongmtsavjcb", model.identityDetails().userAssignedIdentityArmUrl());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureBackupRestoreRequest model = new AzureBackupRestoreRequest()
            .withRestoreTargetInfo(new RestoreTargetInfoBase().withRecoveryOption(RecoveryOption.FAIL_IF_EXISTS)
                .withRestoreLocation("bwwaloa"))
            .withSourceDataStoreType(SourceDataStoreType.ARCHIVE_STORE).withSourceResourceId("gwrtzju")
            .withIdentityDetails(new IdentityDetails().withUseSystemAssignedIdentity(false)
                .withUserAssignedIdentityArmUrl("mhtxongmtsavjcb"));
        model = BinaryData.fromObject(model).toObject(AzureBackupRestoreRequest.class);
        Assertions.assertEquals(RecoveryOption.FAIL_IF_EXISTS, model.restoreTargetInfo().recoveryOption());
        Assertions.assertEquals("bwwaloa", model.restoreTargetInfo().restoreLocation());
        Assertions.assertEquals(SourceDataStoreType.ARCHIVE_STORE, model.sourceDataStoreType());
        Assertions.assertEquals("gwrtzju", model.sourceResourceId());
        Assertions.assertEquals(false, model.identityDetails().useSystemAssignedIdentity());
        Assertions.assertEquals("mhtxongmtsavjcb", model.identityDetails().userAssignedIdentityArmUrl());
    }
}
