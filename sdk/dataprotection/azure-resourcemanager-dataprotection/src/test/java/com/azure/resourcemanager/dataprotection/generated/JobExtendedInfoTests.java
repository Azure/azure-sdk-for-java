// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.JobExtendedInfo;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class JobExtendedInfoTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        JobExtendedInfo model =
            BinaryData
                .fromString(
                    "{\"additionalDetails\":{\"hhuao\":\"zfq\",\"ahzxctobgbk\":\"ppcqeqxolz\",\"mgrcfbu\":\"moizpos\",\"mjh\":\"rmfqjhhkxbpvj\"},\"backupInstanceState\":\"j\",\"dataTransferredInBytes\":87.30772584972803,\"recoveryDestination\":\"ivkrtsw\",\"sourceRecoverPoint\":{\"recoveryPointID\":\"zvszj\",\"recoveryPointTime\":\"2021-04-01T03:47:56Z\"},\"subTasks\":[{\"additionalDetails\":{\"cqaqtdoqmcbx\":\"xxivetv\",\"bhsfxob\":\"wvxysl\"},\"taskId\":168100762,\"taskName\":\"tkblmpewww\",\"taskProgress\":\"krvrns\",\"taskStatus\":\"shqjohxcrsbf\"}],\"targetRecoverPoint\":{\"recoveryPointID\":\"srruvwbhsqfsubcg\",\"recoveryPointTime\":\"2021-02-04T22:06:27Z\"}}")
                .toObject(JobExtendedInfo.class);
        Assertions.assertEquals("zfq", model.additionalDetails().get("hhuao"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        JobExtendedInfo model =
            new JobExtendedInfo()
                .withAdditionalDetails(
                    mapOf("hhuao", "zfq", "ahzxctobgbk", "ppcqeqxolz", "mgrcfbu", "moizpos", "mjh", "rmfqjhhkxbpvj"));
        model = BinaryData.fromObject(model).toObject(JobExtendedInfo.class);
        Assertions.assertEquals("zfq", model.additionalDetails().get("hhuao"));
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
