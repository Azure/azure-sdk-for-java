// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.ResourceGuardOperationDetail;
import com.azure.resourcemanager.dataprotection.models.ResourceGuardProxyBase;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ResourceGuardProxyBaseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ResourceGuardProxyBase model = BinaryData.fromString(
            "{\"resourceGuardResourceId\":\"hmlwpaztzpo\",\"resourceGuardOperationDetails\":[{\"vaultCriticalOperation\":\"kwyfzqwhxxbuyqax\",\"defaultResourceRequest\":\"eqz\"},{\"vaultCriticalOperation\":\"priolx\",\"defaultResourceRequest\":\"jaltolmnc\"},{\"vaultCriticalOperation\":\"obqwcsdbnwdcfh\",\"defaultResourceRequest\":\"qdpfuvglsbjjca\"},{\"vaultCriticalOperation\":\"xbvtvudu\",\"defaultResourceRequest\":\"cormr\"}],\"lastUpdatedTime\":\"qtvcofudflvkgj\",\"description\":\"gdknnqv\"}")
            .toObject(ResourceGuardProxyBase.class);
        Assertions.assertEquals("hmlwpaztzpo", model.resourceGuardResourceId());
        Assertions.assertEquals("kwyfzqwhxxbuyqax",
            model.resourceGuardOperationDetails().get(0).vaultCriticalOperation());
        Assertions.assertEquals("eqz", model.resourceGuardOperationDetails().get(0).defaultResourceRequest());
        Assertions.assertEquals("qtvcofudflvkgj", model.lastUpdatedTime());
        Assertions.assertEquals("gdknnqv", model.description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ResourceGuardProxyBase model = new ResourceGuardProxyBase().withResourceGuardResourceId("hmlwpaztzpo")
            .withResourceGuardOperationDetails(Arrays.asList(
                new ResourceGuardOperationDetail().withVaultCriticalOperation("kwyfzqwhxxbuyqax")
                    .withDefaultResourceRequest("eqz"),
                new ResourceGuardOperationDetail().withVaultCriticalOperation("priolx")
                    .withDefaultResourceRequest("jaltolmnc"),
                new ResourceGuardOperationDetail().withVaultCriticalOperation("obqwcsdbnwdcfh")
                    .withDefaultResourceRequest("qdpfuvglsbjjca"),
                new ResourceGuardOperationDetail().withVaultCriticalOperation("xbvtvudu")
                    .withDefaultResourceRequest("cormr")))
            .withLastUpdatedTime("qtvcofudflvkgj")
            .withDescription("gdknnqv");
        model = BinaryData.fromObject(model).toObject(ResourceGuardProxyBase.class);
        Assertions.assertEquals("hmlwpaztzpo", model.resourceGuardResourceId());
        Assertions.assertEquals("kwyfzqwhxxbuyqax",
            model.resourceGuardOperationDetails().get(0).vaultCriticalOperation());
        Assertions.assertEquals("eqz", model.resourceGuardOperationDetails().get(0).defaultResourceRequest());
        Assertions.assertEquals("qtvcofudflvkgj", model.lastUpdatedTime());
        Assertions.assertEquals("gdknnqv", model.description());
    }
}
