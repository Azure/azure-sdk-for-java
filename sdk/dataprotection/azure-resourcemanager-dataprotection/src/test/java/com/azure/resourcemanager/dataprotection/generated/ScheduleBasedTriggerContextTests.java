// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.BackupCriteria;
import com.azure.resourcemanager.dataprotection.models.BackupSchedule;
import com.azure.resourcemanager.dataprotection.models.RetentionTag;
import com.azure.resourcemanager.dataprotection.models.ScheduleBasedTriggerContext;
import com.azure.resourcemanager.dataprotection.models.TaggingCriteria;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ScheduleBasedTriggerContextTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScheduleBasedTriggerContext model = BinaryData.fromString(
            "{\"objectType\":\"ScheduleBasedTriggerContext\",\"schedule\":{\"repeatingTimeIntervals\":[\"iekkezz\",\"khly\",\"jhdgqggebdunyga\",\"qidbqfatpxllrxcy\"],\"timeZone\":\"oadsuvar\"},\"taggingCriteria\":[{\"criteria\":[{\"objectType\":\"BackupCriteria\"},{\"objectType\":\"BackupCriteria\"}],\"isDefault\":false,\"taggingPriority\":2242730821569758279,\"tagInfo\":{\"eTag\":\"q\",\"id\":\"hhyxxrw\",\"tagName\":\"yc\"}},{\"criteria\":[{\"objectType\":\"BackupCriteria\"},{\"objectType\":\"BackupCriteria\"},{\"objectType\":\"BackupCriteria\"}],\"isDefault\":false,\"taggingPriority\":609111947256097194,\"tagInfo\":{\"eTag\":\"kgymareqnajxqug\",\"id\":\"ky\",\"tagName\":\"ubeddg\"}},{\"criteria\":[{\"objectType\":\"BackupCriteria\"}],\"isDefault\":true,\"taggingPriority\":2507936832402771228,\"tagInfo\":{\"eTag\":\"zqalkrmnjijpx\",\"id\":\"q\",\"tagName\":\"udfnbyxba\"}}]}")
            .toObject(ScheduleBasedTriggerContext.class);
        Assertions.assertEquals("iekkezz", model.schedule().repeatingTimeIntervals().get(0));
        Assertions.assertEquals("oadsuvar", model.schedule().timeZone());
        Assertions.assertFalse(model.taggingCriteria().get(0).isDefault());
        Assertions.assertEquals(2242730821569758279L, model.taggingCriteria().get(0).taggingPriority());
        Assertions.assertEquals("yc", model.taggingCriteria().get(0).tagInfo().tagName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScheduleBasedTriggerContext model = new ScheduleBasedTriggerContext()
            .withSchedule(new BackupSchedule()
                .withRepeatingTimeIntervals(Arrays.asList("iekkezz", "khly", "jhdgqggebdunyga", "qidbqfatpxllrxcy"))
                .withTimeZone("oadsuvar"))
            .withTaggingCriteria(Arrays.asList(
                new TaggingCriteria().withCriteria(Arrays.asList(new BackupCriteria(), new BackupCriteria()))
                    .withIsDefault(false)
                    .withTaggingPriority(2242730821569758279L)
                    .withTagInfo(new RetentionTag().withTagName("yc")),
                new TaggingCriteria()
                    .withCriteria(Arrays.asList(new BackupCriteria(), new BackupCriteria(), new BackupCriteria()))
                    .withIsDefault(false)
                    .withTaggingPriority(609111947256097194L)
                    .withTagInfo(new RetentionTag().withTagName("ubeddg")),
                new TaggingCriteria().withCriteria(Arrays.asList(new BackupCriteria()))
                    .withIsDefault(true)
                    .withTaggingPriority(2507936832402771228L)
                    .withTagInfo(new RetentionTag().withTagName("udfnbyxba"))));
        model = BinaryData.fromObject(model).toObject(ScheduleBasedTriggerContext.class);
        Assertions.assertEquals("iekkezz", model.schedule().repeatingTimeIntervals().get(0));
        Assertions.assertEquals("oadsuvar", model.schedule().timeZone());
        Assertions.assertFalse(model.taggingCriteria().get(0).isDefault());
        Assertions.assertEquals(2242730821569758279L, model.taggingCriteria().get(0).taggingPriority());
        Assertions.assertEquals("yc", model.taggingCriteria().get(0).tagInfo().tagName());
    }
}
