// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.BackupCriteria;
import com.azure.resourcemanager.dataprotection.models.BackupSchedule;
import com.azure.resourcemanager.dataprotection.models.RetentionTag;
import com.azure.resourcemanager.dataprotection.models.ScheduleBasedTriggerContext;
import com.azure.resourcemanager.dataprotection.models.TaggingCriteria;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ScheduleBasedTriggerContextTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScheduleBasedTriggerContext model =
            BinaryData
                .fromString(
                    "{\"objectType\":\"ScheduleBasedTriggerContext\",\"schedule\":{\"repeatingTimeIntervals\":[\"n\",\"ntfpmvmemfnc\",\"dwvvba\",\"xlllchp\"],\"timeZone\":\"bzevwrd\"},\"taggingCriteria\":[{\"criteria\":[{\"objectType\":\"BackupCriteria\"}],\"isDefault\":true,\"taggingPriority\":4132850753130690201,\"tagInfo\":{\"eTag\":\"jcswsmys\",\"id\":\"luqypfcvlerch\",\"tagName\":\"qbmfpjbabwidf\"}}]}")
                .toObject(ScheduleBasedTriggerContext.class);
        Assertions.assertEquals("n", model.schedule().repeatingTimeIntervals().get(0));
        Assertions.assertEquals("bzevwrd", model.schedule().timeZone());
        Assertions.assertEquals(true, model.taggingCriteria().get(0).isDefault());
        Assertions.assertEquals(4132850753130690201L, model.taggingCriteria().get(0).taggingPriority());
        Assertions.assertEquals("qbmfpjbabwidf", model.taggingCriteria().get(0).tagInfo().tagName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScheduleBasedTriggerContext model =
            new ScheduleBasedTriggerContext()
                .withSchedule(
                    new BackupSchedule()
                        .withRepeatingTimeIntervals(Arrays.asList("n", "ntfpmvmemfnc", "dwvvba", "xlllchp"))
                        .withTimeZone("bzevwrd"))
                .withTaggingCriteria(
                    Arrays
                        .asList(
                            new TaggingCriteria()
                                .withCriteria(Arrays.asList(new BackupCriteria()))
                                .withIsDefault(true)
                                .withTaggingPriority(4132850753130690201L)
                                .withTagInfo(new RetentionTag().withTagName("qbmfpjbabwidf"))));
        model = BinaryData.fromObject(model).toObject(ScheduleBasedTriggerContext.class);
        Assertions.assertEquals("n", model.schedule().repeatingTimeIntervals().get(0));
        Assertions.assertEquals("bzevwrd", model.schedule().timeZone());
        Assertions.assertEquals(true, model.taggingCriteria().get(0).isDefault());
        Assertions.assertEquals(4132850753130690201L, model.taggingCriteria().get(0).taggingPriority());
        Assertions.assertEquals("qbmfpjbabwidf", model.taggingCriteria().get(0).tagInfo().tagName());
    }
}
