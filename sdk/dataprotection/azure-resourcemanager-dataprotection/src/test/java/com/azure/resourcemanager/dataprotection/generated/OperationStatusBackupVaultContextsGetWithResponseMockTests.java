// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.dataprotection.DataProtectionManager;
import com.azure.resourcemanager.dataprotection.models.OperationResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OperationStatusBackupVaultContextsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"endTime\":\"2021-09-21T01:20:37Z\",\"id\":\"stmjlxrri\",\"name\":\"zapeewchpx\",\"properties\":{\"objectType\":\"OperationExtendedInfo\"},\"startTime\":\"2021-02-02T07:23:35Z\",\"status\":\"uziycsl\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DataProtectionManager manager = DataProtectionManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        OperationResource response = manager.operationStatusBackupVaultContexts()
            .getWithResponse("jrkambtrnegvmnv", "q", "qvldspastjbkkd", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(OffsetDateTime.parse("2021-09-21T01:20:37Z"), response.endTime());
        Assertions.assertEquals("stmjlxrri", response.id());
        Assertions.assertEquals("zapeewchpx", response.name());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-02T07:23:35Z"), response.startTime());
        Assertions.assertEquals("uziycsl", response.status());
    }
}
