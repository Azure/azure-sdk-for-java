// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.BaseResourceProperties;
import com.azure.resourcemanager.dataprotection.models.Datasource;
import org.junit.jupiter.api.Assertions;

public final class DatasourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Datasource model = BinaryData.fromString(
            "{\"datasourceType\":\"m\",\"objectType\":\"yvshxmz\",\"resourceID\":\"bbzoggig\",\"resourceLocation\":\"wburvjxxjnspydpt\",\"resourceName\":\"enkouknvudw\",\"resourceType\":\"ukbldngkpo\",\"resourceUri\":\"pazyxoegukg\",\"resourceProperties\":{\"objectType\":\"BaseResourceProperties\"}}")
            .toObject(Datasource.class);
        Assertions.assertEquals("m", model.datasourceType());
        Assertions.assertEquals("yvshxmz", model.objectType());
        Assertions.assertEquals("bbzoggig", model.resourceId());
        Assertions.assertEquals("wburvjxxjnspydpt", model.resourceLocation());
        Assertions.assertEquals("enkouknvudw", model.resourceName());
        Assertions.assertEquals("ukbldngkpo", model.resourceType());
        Assertions.assertEquals("pazyxoegukg", model.resourceUri());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Datasource model = new Datasource().withDatasourceType("m")
            .withObjectType("yvshxmz")
            .withResourceId("bbzoggig")
            .withResourceLocation("wburvjxxjnspydpt")
            .withResourceName("enkouknvudw")
            .withResourceType("ukbldngkpo")
            .withResourceUri("pazyxoegukg")
            .withResourceProperties(new BaseResourceProperties());
        model = BinaryData.fromObject(model).toObject(Datasource.class);
        Assertions.assertEquals("m", model.datasourceType());
        Assertions.assertEquals("yvshxmz", model.objectType());
        Assertions.assertEquals("bbzoggig", model.resourceId());
        Assertions.assertEquals("wburvjxxjnspydpt", model.resourceLocation());
        Assertions.assertEquals("enkouknvudw", model.resourceName());
        Assertions.assertEquals("ukbldngkpo", model.resourceType());
        Assertions.assertEquals("pazyxoegukg", model.resourceUri());
    }
}
