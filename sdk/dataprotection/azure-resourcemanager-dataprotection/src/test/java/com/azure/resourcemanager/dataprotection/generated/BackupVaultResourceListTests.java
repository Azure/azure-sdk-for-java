// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.fluent.models.BackupVaultResourceInner;
import com.azure.resourcemanager.dataprotection.models.AlertsState;
import com.azure.resourcemanager.dataprotection.models.AzureMonitorAlertSettings;
import com.azure.resourcemanager.dataprotection.models.BackupVault;
import com.azure.resourcemanager.dataprotection.models.BackupVaultResourceList;
import com.azure.resourcemanager.dataprotection.models.CrossRegionRestoreSettings;
import com.azure.resourcemanager.dataprotection.models.CrossRegionRestoreState;
import com.azure.resourcemanager.dataprotection.models.CrossSubscriptionRestoreSettings;
import com.azure.resourcemanager.dataprotection.models.CrossSubscriptionRestoreState;
import com.azure.resourcemanager.dataprotection.models.DppIdentityDetails;
import com.azure.resourcemanager.dataprotection.models.FeatureSettings;
import com.azure.resourcemanager.dataprotection.models.ImmutabilitySettings;
import com.azure.resourcemanager.dataprotection.models.ImmutabilityState;
import com.azure.resourcemanager.dataprotection.models.MonitoringSettings;
import com.azure.resourcemanager.dataprotection.models.SecuritySettings;
import com.azure.resourcemanager.dataprotection.models.SoftDeleteSettings;
import com.azure.resourcemanager.dataprotection.models.SoftDeleteState;
import com.azure.resourcemanager.dataprotection.models.StorageSetting;
import com.azure.resourcemanager.dataprotection.models.StorageSettingStoreTypes;
import com.azure.resourcemanager.dataprotection.models.StorageSettingTypes;
import com.azure.resourcemanager.dataprotection.models.UserAssignedIdentity;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class BackupVaultResourceListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackupVaultResourceList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"monitoringSettings\":{\"azureMonitorAlertSettings\":{\"alertsForAllJobFailures\":\"Disabled\"}},\"provisioningState\":\"Updating\",\"resourceMoveState\":\"InProgress\",\"resourceMoveDetails\":{\"operationId\":\"czmehmtzopbsp\",\"startTimeUtc\":\"upi\",\"completionTimeUtc\":\"sybbejhph\",\"sourceResourcePath\":\"cmsxaobhdxbm\",\"targetResourcePath\":\"ioq\"},\"securitySettings\":{\"softDeleteSettings\":{\"state\":\"On\",\"retentionDurationInDays\":12.53974621306525},\"immutabilitySettings\":{\"state\":\"Locked\"}},\"storageSettings\":[{\"datastoreType\":\"ArchiveStore\",\"type\":\"ZoneRedundant\"}],\"isVaultProtectedByResourceGuard\":false,\"featureSettings\":{\"crossSubscriptionRestoreSettings\":{\"state\":\"Enabled\"},\"crossRegionRestoreSettings\":{\"state\":\"Disabled\"}},\"secureScore\":\"Maximum\",\"replicatedRegions\":[\"gkdmb\",\"azlobcufpdznrbt\",\"qqjnqgl\",\"qgn\"]},\"identity\":{\"principalId\":\"oo\",\"tenantId\":\"wifsq\",\"type\":\"aagdfmg\",\"userAssignedIdentities\":{\"xrifkwmrvkts\":{\"principalId\":\"a1aa89a3-173a-42b0-a3cc-7d0d5c000f74\",\"clientId\":\"e5c618ef-9e20-4b55-bc2d-b50b49499bf0\"},\"to\":{\"principalId\":\"e5ff057b-4a87-4ad2-832b-ae62947d0d7b\",\"clientId\":\"ad727f81-1147-432e-b0cf-dabe3d5f1cbb\"}}},\"eTag\":\"pa\",\"location\":\"ajpsquc\",\"tags\":{\"kfo\":\"yf\"},\"id\":\"knygjofjddeq\",\"name\":\"rd\",\"type\":\"upewnwreitjzy\"},{\"properties\":{\"monitoringSettings\":{\"azureMonitorAlertSettings\":{\"alertsForAllJobFailures\":\"Disabled\"}},\"provisioningState\":\"Updating\",\"resourceMoveState\":\"CommitTimedout\",\"resourceMoveDetails\":{\"operationId\":\"qhsmyurkdtml\",\"startTimeUtc\":\"ekuksjtx\",\"completionTimeUtc\":\"cdm\",\"sourceResourcePath\":\"rcryuanzwuxzdxta\",\"targetResourcePath\":\"lhmwhfpmrqobm\"},\"securitySettings\":{\"softDeleteSettings\":{\"state\":\"AlwaysOn\",\"retentionDurationInDays\":30.42594303603623},\"immutabilitySettings\":{\"state\":\"Unlocked\"}},\"storageSettings\":[{\"datastoreType\":\"OperationalStore\",\"type\":\"ZoneRedundant\"}],\"isVaultProtectedByResourceGuard\":true,\"featureSettings\":{\"crossSubscriptionRestoreSettings\":{\"state\":\"PermanentlyDisabled\"},\"crossRegionRestoreSettings\":{\"state\":\"Enabled\"}},\"secureScore\":\"Maximum\",\"replicatedRegions\":[\"zufcyzkohdbi\",\"anufhfcbjysag\",\"th\",\"qhabifpikxwcz\"]},\"identity\":{\"principalId\":\"cnpqxuhivyqniwby\",\"tenantId\":\"k\",\"type\":\"dumjgrtfwvuk\",\"userAssignedIdentities\":{\"ccsnhsjc\":{\"principalId\":\"727ef6b3-8fd1-46cc-b12c-2a919464b1fc\",\"clientId\":\"b4eb04da-6baa-4bee-9fa1-bcd91d034b64\"},\"j\":{\"principalId\":\"92f2b1f6-ea2c-4a6c-b2fc-a8a438fed8b6\",\"clientId\":\"891b4820-12ff-451c-8c0b-18f11e841ba3\"},\"yhtnapczwlokjye\":{\"principalId\":\"2beb9fe5-759e-40b4-970b-7922a14a1d15\",\"clientId\":\"e1f4b987-5041-41fa-a933-5019a6d1ae46\"}}},\"eTag\":\"kvnipjoxz\",\"location\":\"chgejspodm\",\"tags\":{\"o\":\"zyde\",\"wixjsprozvcp\":\"wyahuxinpmqnja\",\"atscmd\":\"tegjvwmf\",\"zkrwfn\":\"pjhulsuuvmkj\"},\"id\":\"iodjp\",\"name\":\"lwejdpv\",\"type\":\"ryo\"},{\"properties\":{\"monitoringSettings\":{\"azureMonitorAlertSettings\":{\"alertsForAllJobFailures\":\"Disabled\"}},\"provisioningState\":\"Unknown\",\"resourceMoveState\":\"MoveSucceeded\",\"resourceMoveDetails\":{\"operationId\":\"kljla\",\"startTimeUtc\":\"cr\",\"completionTimeUtc\":\"fdfdosygexpa\",\"sourceResourcePath\":\"akhmsbzjhcrz\",\"targetResourcePath\":\"dphlxaolt\"},\"securitySettings\":{\"softDeleteSettings\":{\"state\":\"AlwaysOn\",\"retentionDurationInDays\":14.134109255164462},\"immutabilitySettings\":{\"state\":\"Locked\"}},\"storageSettings\":[{\"datastoreType\":\"ArchiveStore\",\"type\":\"ZoneRedundant\"},{\"datastoreType\":\"ArchiveStore\",\"type\":\"ZoneRedundant\"},{\"datastoreType\":\"VaultStore\",\"type\":\"GeoRedundant\"},{\"datastoreType\":\"ArchiveStore\",\"type\":\"LocallyRedundant\"}],\"isVaultProtectedByResourceGuard\":true,\"featureSettings\":{\"crossSubscriptionRestoreSettings\":{\"state\":\"Enabled\"},\"crossRegionRestoreSettings\":{\"state\":\"Enabled\"}},\"secureScore\":\"None\",\"replicatedRegions\":[\"peqfpjkjl\"]},\"identity\":{\"principalId\":\"pdvhpfxxypin\",\"tenantId\":\"mayhuybbkpodepoo\",\"type\":\"nuvamiheogna\",\"userAssignedIdentities\":{\"heotusiv\":{\"principalId\":\"ff8d496e-e0be-4cc2-945e-2da5e8a2185a\",\"clientId\":\"badfae9f-2032-4a6a-b6f3-dc2dc5852355\"},\"cciqihnhungbwjz\":{\"principalId\":\"35215f2c-8509-41f5-ab03-6db77e0a474f\",\"clientId\":\"4e7807e3-1481-4ffa-b221-ec3b262a6033\"},\"ygxgispemvtz\":{\"principalId\":\"7514fbac-8275-4b23-88d5-2c9fc3dc7eee\",\"clientId\":\"ac774599-dae4-40cb-bd80-5fd86beab258\"},\"fublj\":{\"principalId\":\"5d647a59-5746-4e6a-a33a-034c90807a11\",\"clientId\":\"6bd9a189-2322-4b23-acf5-13efdf4ab67e\"}}},\"eTag\":\"xqeofjaeqjhqjba\",\"location\":\"msmjqulngsntn\",\"tags\":{\"xwrljdouskcqvkoc\":\"kzgcwrwcl\",\"sqrglssainq\":\"cjdkwtnhxbnjbi\",\"eebvmgxsab\":\"jwnzlljfmp\"},\"id\":\"yqduujit\",\"name\":\"jczdzevndh\",\"type\":\"rwpdappdsbdkvwrw\"}],\"nextLink\":\"eusnhutj\"}")
            .toObject(BackupVaultResourceList.class);
        Assertions.assertEquals("eusnhutj", model.nextLink());
        Assertions.assertEquals("ajpsquc", model.value().get(0).location());
        Assertions.assertEquals("yf", model.value().get(0).tags().get("kfo"));
        Assertions.assertEquals("pa", model.value().get(0).etag());
        Assertions.assertEquals("aagdfmg", model.value().get(0).identity().type());
        Assertions.assertEquals(AlertsState.DISABLED, model.value().get(0).properties().monitoringSettings()
            .azureMonitorAlertSettings().alertsForAllJobFailures());
        Assertions.assertEquals(SoftDeleteState.ON,
            model.value().get(0).properties().securitySettings().softDeleteSettings().state());
        Assertions.assertEquals(12.53974621306525D,
            model.value().get(0).properties().securitySettings().softDeleteSettings().retentionDurationInDays());
        Assertions.assertEquals(ImmutabilityState.LOCKED,
            model.value().get(0).properties().securitySettings().immutabilitySettings().state());
        Assertions.assertEquals(StorageSettingStoreTypes.ARCHIVE_STORE,
            model.value().get(0).properties().storageSettings().get(0).datastoreType());
        Assertions.assertEquals(StorageSettingTypes.ZONE_REDUNDANT,
            model.value().get(0).properties().storageSettings().get(0).type());
        Assertions.assertEquals(CrossSubscriptionRestoreState.ENABLED,
            model.value().get(0).properties().featureSettings().crossSubscriptionRestoreSettings().state());
        Assertions.assertEquals(CrossRegionRestoreState.DISABLED,
            model.value().get(0).properties().featureSettings().crossRegionRestoreSettings().state());
        Assertions.assertEquals("gkdmb", model.value().get(0).properties().replicatedRegions().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackupVaultResourceList model = new BackupVaultResourceList().withNextLink("eusnhutj").withValue(Arrays.asList(
            new BackupVaultResourceInner().withLocation("ajpsquc").withTags(mapOf("kfo", "yf")).withEtag("pa")
                .withIdentity(new DppIdentityDetails().withType("aagdfmg").withUserAssignedIdentities(
                    mapOf("xrifkwmrvkts", new UserAssignedIdentity(), "to", new UserAssignedIdentity())))
                .withProperties(new BackupVault()
                    .withMonitoringSettings(new MonitoringSettings().withAzureMonitorAlertSettings(
                        new AzureMonitorAlertSettings().withAlertsForAllJobFailures(AlertsState.DISABLED)))
                    .withSecuritySettings(new SecuritySettings()
                        .withSoftDeleteSettings(new SoftDeleteSettings().withState(SoftDeleteState.ON)
                            .withRetentionDurationInDays(12.53974621306525D))
                        .withImmutabilitySettings(new ImmutabilitySettings().withState(ImmutabilityState.LOCKED)))
                    .withStorageSettings(
                        Arrays.asList(new StorageSetting().withDatastoreType(StorageSettingStoreTypes.ARCHIVE_STORE)
                            .withType(StorageSettingTypes.ZONE_REDUNDANT)))
                    .withFeatureSettings(new FeatureSettings()
                        .withCrossSubscriptionRestoreSettings(
                            new CrossSubscriptionRestoreSettings().withState(CrossSubscriptionRestoreState.ENABLED))
                        .withCrossRegionRestoreSettings(
                            new CrossRegionRestoreSettings().withState(CrossRegionRestoreState.DISABLED)))
                    .withReplicatedRegions(Arrays.asList("gkdmb", "azlobcufpdznrbt", "qqjnqgl", "qgn"))),
            new BackupVaultResourceInner().withLocation("chgejspodm")
                .withTags(mapOf("o", "zyde", "wixjsprozvcp", "wyahuxinpmqnja", "atscmd", "tegjvwmf", "zkrwfn",
                    "pjhulsuuvmkj"))
                .withEtag("kvnipjoxz")
                .withIdentity(new DppIdentityDetails().withType("dumjgrtfwvuk")
                    .withUserAssignedIdentities(mapOf("ccsnhsjc", new UserAssignedIdentity(), "j",
                        new UserAssignedIdentity(), "yhtnapczwlokjye", new UserAssignedIdentity())))
                .withProperties(new BackupVault()
                    .withMonitoringSettings(new MonitoringSettings().withAzureMonitorAlertSettings(
                        new AzureMonitorAlertSettings().withAlertsForAllJobFailures(AlertsState.DISABLED)))
                    .withSecuritySettings(new SecuritySettings()
                        .withSoftDeleteSettings(new SoftDeleteSettings().withState(SoftDeleteState.ALWAYS_ON)
                            .withRetentionDurationInDays(30.42594303603623D))
                        .withImmutabilitySettings(new ImmutabilitySettings().withState(ImmutabilityState.UNLOCKED)))
                    .withStorageSettings(
                        Arrays.asList(new StorageSetting().withDatastoreType(StorageSettingStoreTypes.OPERATIONAL_STORE)
                            .withType(StorageSettingTypes.ZONE_REDUNDANT)))
                    .withFeatureSettings(new FeatureSettings()
                        .withCrossSubscriptionRestoreSettings(new CrossSubscriptionRestoreSettings()
                            .withState(CrossSubscriptionRestoreState.PERMANENTLY_DISABLED))
                        .withCrossRegionRestoreSettings(
                            new CrossRegionRestoreSettings().withState(CrossRegionRestoreState.ENABLED)))
                    .withReplicatedRegions(Arrays.asList("zufcyzkohdbi", "anufhfcbjysag", "th", "qhabifpikxwcz"))),
            new BackupVaultResourceInner().withLocation("msmjqulngsntn")
                .withTags(
                    mapOf("xwrljdouskcqvkoc", "kzgcwrwcl", "sqrglssainq", "cjdkwtnhxbnjbi", "eebvmgxsab", "jwnzlljfmp"))
                .withEtag("xqeofjaeqjhqjba")
                .withIdentity(new DppIdentityDetails().withType("nuvamiheogna").withUserAssignedIdentities(
                    mapOf("heotusiv", new UserAssignedIdentity(), "cciqihnhungbwjz", new UserAssignedIdentity(),
                        "ygxgispemvtz", new UserAssignedIdentity(), "fublj", new UserAssignedIdentity())))
                .withProperties(new BackupVault()
                    .withMonitoringSettings(new MonitoringSettings().withAzureMonitorAlertSettings(
                        new AzureMonitorAlertSettings().withAlertsForAllJobFailures(AlertsState.DISABLED)))
                    .withSecuritySettings(new SecuritySettings()
                        .withSoftDeleteSettings(new SoftDeleteSettings().withState(SoftDeleteState.ALWAYS_ON)
                            .withRetentionDurationInDays(14.134109255164462D))
                        .withImmutabilitySettings(new ImmutabilitySettings().withState(ImmutabilityState.LOCKED)))
                    .withStorageSettings(Arrays.asList(
                        new StorageSetting().withDatastoreType(StorageSettingStoreTypes.ARCHIVE_STORE)
                            .withType(StorageSettingTypes.ZONE_REDUNDANT),
                        new StorageSetting().withDatastoreType(StorageSettingStoreTypes.ARCHIVE_STORE)
                            .withType(StorageSettingTypes.ZONE_REDUNDANT),
                        new StorageSetting().withDatastoreType(StorageSettingStoreTypes.VAULT_STORE)
                            .withType(StorageSettingTypes.GEO_REDUNDANT),
                        new StorageSetting().withDatastoreType(StorageSettingStoreTypes.ARCHIVE_STORE)
                            .withType(StorageSettingTypes.LOCALLY_REDUNDANT)))
                    .withFeatureSettings(new FeatureSettings()
                        .withCrossSubscriptionRestoreSettings(
                            new CrossSubscriptionRestoreSettings().withState(CrossSubscriptionRestoreState.ENABLED))
                        .withCrossRegionRestoreSettings(
                            new CrossRegionRestoreSettings().withState(CrossRegionRestoreState.ENABLED)))
                    .withReplicatedRegions(Arrays.asList("peqfpjkjl")))));
        model = BinaryData.fromObject(model).toObject(BackupVaultResourceList.class);
        Assertions.assertEquals("eusnhutj", model.nextLink());
        Assertions.assertEquals("ajpsquc", model.value().get(0).location());
        Assertions.assertEquals("yf", model.value().get(0).tags().get("kfo"));
        Assertions.assertEquals("pa", model.value().get(0).etag());
        Assertions.assertEquals("aagdfmg", model.value().get(0).identity().type());
        Assertions.assertEquals(AlertsState.DISABLED, model.value().get(0).properties().monitoringSettings()
            .azureMonitorAlertSettings().alertsForAllJobFailures());
        Assertions.assertEquals(SoftDeleteState.ON,
            model.value().get(0).properties().securitySettings().softDeleteSettings().state());
        Assertions.assertEquals(12.53974621306525D,
            model.value().get(0).properties().securitySettings().softDeleteSettings().retentionDurationInDays());
        Assertions.assertEquals(ImmutabilityState.LOCKED,
            model.value().get(0).properties().securitySettings().immutabilitySettings().state());
        Assertions.assertEquals(StorageSettingStoreTypes.ARCHIVE_STORE,
            model.value().get(0).properties().storageSettings().get(0).datastoreType());
        Assertions.assertEquals(StorageSettingTypes.ZONE_REDUNDANT,
            model.value().get(0).properties().storageSettings().get(0).type());
        Assertions.assertEquals(CrossSubscriptionRestoreState.ENABLED,
            model.value().get(0).properties().featureSettings().crossSubscriptionRestoreSettings().state());
        Assertions.assertEquals(CrossRegionRestoreState.DISABLED,
            model.value().get(0).properties().featureSettings().crossRegionRestoreSettings().state());
        Assertions.assertEquals("gkdmb", model.value().get(0).properties().replicatedRegions().get(0));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
