// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.BaseResourceProperties;
import com.azure.resourcemanager.dataprotection.models.DatasourceSet;
import org.junit.jupiter.api.Assertions;

public final class DatasourceSetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DatasourceSet model = BinaryData.fromString(
            "{\"datasourceType\":\"kevle\",\"objectType\":\"zfbuhf\",\"resourceID\":\"vfaxkffeiith\",\"resourceLocation\":\"m\",\"resourceName\":\"yvshxmz\",\"resourceType\":\"bzoggigrx\",\"resourceUri\":\"ur\",\"resourceProperties\":{\"objectType\":\"BaseResourceProperties\"}}")
            .toObject(DatasourceSet.class);
        Assertions.assertEquals("kevle", model.datasourceType());
        Assertions.assertEquals("zfbuhf", model.objectType());
        Assertions.assertEquals("vfaxkffeiith", model.resourceId());
        Assertions.assertEquals("m", model.resourceLocation());
        Assertions.assertEquals("yvshxmz", model.resourceName());
        Assertions.assertEquals("bzoggigrx", model.resourceType());
        Assertions.assertEquals("ur", model.resourceUri());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DatasourceSet model = new DatasourceSet().withDatasourceType("kevle")
            .withObjectType("zfbuhf")
            .withResourceId("vfaxkffeiith")
            .withResourceLocation("m")
            .withResourceName("yvshxmz")
            .withResourceType("bzoggigrx")
            .withResourceUri("ur")
            .withResourceProperties(new BaseResourceProperties());
        model = BinaryData.fromObject(model).toObject(DatasourceSet.class);
        Assertions.assertEquals("kevle", model.datasourceType());
        Assertions.assertEquals("zfbuhf", model.objectType());
        Assertions.assertEquals("vfaxkffeiith", model.resourceId());
        Assertions.assertEquals("m", model.resourceLocation());
        Assertions.assertEquals("yvshxmz", model.resourceName());
        Assertions.assertEquals("bzoggigrx", model.resourceType());
        Assertions.assertEquals("ur", model.resourceUri());
    }
}
