// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.BaseResourceProperties;
import com.azure.resourcemanager.dataprotection.models.DatasourceSet;
import org.junit.jupiter.api.Assertions;

public final class DatasourceSetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DatasourceSet model =
            BinaryData
                .fromString(
                    "{\"datasourceType\":\"lwzbhvgyugu\",\"objectType\":\"vmkfssxqu\",\"resourceID\":\"kfplgmgsxnk\",\"resourceLocation\":\"kde\",\"resourceName\":\"pvlopwiyighxpkd\",\"resourceType\":\"baiuebbaumny\",\"resourceUri\":\"ped\",\"resourceProperties\":{\"objectType\":\"BaseResourceProperties\"}}")
                .toObject(DatasourceSet.class);
        Assertions.assertEquals("lwzbhvgyugu", model.datasourceType());
        Assertions.assertEquals("vmkfssxqu", model.objectType());
        Assertions.assertEquals("kfplgmgsxnk", model.resourceId());
        Assertions.assertEquals("kde", model.resourceLocation());
        Assertions.assertEquals("pvlopwiyighxpkd", model.resourceName());
        Assertions.assertEquals("baiuebbaumny", model.resourceType());
        Assertions.assertEquals("ped", model.resourceUri());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DatasourceSet model =
            new DatasourceSet()
                .withDatasourceType("lwzbhvgyugu")
                .withObjectType("vmkfssxqu")
                .withResourceId("kfplgmgsxnk")
                .withResourceLocation("kde")
                .withResourceName("pvlopwiyighxpkd")
                .withResourceType("baiuebbaumny")
                .withResourceUri("ped")
                .withResourceProperties(new BaseResourceProperties());
        model = BinaryData.fromObject(model).toObject(DatasourceSet.class);
        Assertions.assertEquals("lwzbhvgyugu", model.datasourceType());
        Assertions.assertEquals("vmkfssxqu", model.objectType());
        Assertions.assertEquals("kfplgmgsxnk", model.resourceId());
        Assertions.assertEquals("kde", model.resourceLocation());
        Assertions.assertEquals("pvlopwiyighxpkd", model.resourceName());
        Assertions.assertEquals("baiuebbaumny", model.resourceType());
        Assertions.assertEquals("ped", model.resourceUri());
    }
}
