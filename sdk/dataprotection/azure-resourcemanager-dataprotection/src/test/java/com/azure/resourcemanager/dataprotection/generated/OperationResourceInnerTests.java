// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.fluent.models.OperationResourceInner;
import com.azure.resourcemanager.dataprotection.models.OperationExtendedInfo;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class OperationResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationResourceInner model = BinaryData.fromString(
            "{\"endTime\":\"2021-04-08T16:53:01Z\",\"id\":\"kcqvkocrc\",\"name\":\"kwt\",\"properties\":{\"objectType\":\"OperationExtendedInfo\"},\"startTime\":\"2021-08-17T00:59:03Z\",\"status\":\"jbiksqrglssai\"}")
            .toObject(OperationResourceInner.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-08T16:53:01Z"), model.endTime());
        Assertions.assertEquals("kcqvkocrc", model.id());
        Assertions.assertEquals("kwt", model.name());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-17T00:59:03Z"), model.startTime());
        Assertions.assertEquals("jbiksqrglssai", model.status());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationResourceInner model
            = new OperationResourceInner().withEndTime(OffsetDateTime.parse("2021-04-08T16:53:01Z"))
                .withId("kcqvkocrc")
                .withName("kwt")
                .withProperties(new OperationExtendedInfo())
                .withStartTime(OffsetDateTime.parse("2021-08-17T00:59:03Z"))
                .withStatus("jbiksqrglssai");
        model = BinaryData.fromObject(model).toObject(OperationResourceInner.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-08T16:53:01Z"), model.endTime());
        Assertions.assertEquals("kcqvkocrc", model.id());
        Assertions.assertEquals("kwt", model.name());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-17T00:59:03Z"), model.startTime());
        Assertions.assertEquals("jbiksqrglssai", model.status());
    }
}
