// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.fluent.models.ClientDiscoveryValueForSingleApiInner;
import com.azure.resourcemanager.dataprotection.models.ClientDiscoveryDisplay;
import com.azure.resourcemanager.dataprotection.models.ClientDiscoveryForLogSpecification;
import com.azure.resourcemanager.dataprotection.models.ClientDiscoveryForProperties;
import com.azure.resourcemanager.dataprotection.models.ClientDiscoveryForServiceSpecification;
import com.azure.resourcemanager.dataprotection.models.ClientDiscoveryResponse;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ClientDiscoveryResponseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClientDiscoveryResponse model = BinaryData.fromString(
            "{\"nextLink\":\"syyp\",\"value\":[{\"display\":{\"description\":\"gcbacphejkot\",\"operation\":\"qgoulznd\",\"provider\":\"kwy\",\"resource\":\"gfgibm\"},\"name\":\"gakeqsr\",\"isDataAction\":true,\"origin\":\"qqedqytbciqfou\",\"properties\":{\"serviceSpecification\":{\"logSpecifications\":[{},{},{}]}}},{\"display\":{\"description\":\"smodmgloug\",\"operation\":\"kwtmutduqktapspw\",\"provider\":\"uertumk\",\"resource\":\"svqwhbmdgbbjfd\"},\"name\":\"mbmbexppbh\",\"isDataAction\":false,\"origin\":\"ol\",\"properties\":{\"serviceSpecification\":{\"logSpecifications\":[{}]}}}]}")
            .toObject(ClientDiscoveryResponse.class);
        Assertions.assertEquals("syyp", model.nextLink());
        Assertions.assertEquals("gcbacphejkot", model.value().get(0).display().description());
        Assertions.assertEquals("qgoulznd", model.value().get(0).display().operation());
        Assertions.assertEquals("kwy", model.value().get(0).display().provider());
        Assertions.assertEquals("gfgibm", model.value().get(0).display().resource());
        Assertions.assertEquals("gakeqsr", model.value().get(0).name());
        Assertions.assertTrue(model.value().get(0).isDataAction());
        Assertions.assertEquals("qqedqytbciqfou", model.value().get(0).origin());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClientDiscoveryResponse model = new ClientDiscoveryResponse().withNextLink("syyp")
            .withValue(Arrays.asList(
                new ClientDiscoveryValueForSingleApiInner()
                    .withDisplay(new ClientDiscoveryDisplay().withDescription("gcbacphejkot")
                        .withOperation("qgoulznd")
                        .withProvider("kwy")
                        .withResource("gfgibm"))
                    .withName("gakeqsr")
                    .withIsDataAction(true)
                    .withOrigin("qqedqytbciqfou")
                    .withProperties(new ClientDiscoveryForProperties()
                        .withServiceSpecification(new ClientDiscoveryForServiceSpecification()
                            .withLogSpecifications(Arrays.asList(new ClientDiscoveryForLogSpecification(),
                                new ClientDiscoveryForLogSpecification(), new ClientDiscoveryForLogSpecification())))),
                new ClientDiscoveryValueForSingleApiInner()
                    .withDisplay(new ClientDiscoveryDisplay().withDescription("smodmgloug")
                        .withOperation("kwtmutduqktapspw")
                        .withProvider("uertumk")
                        .withResource("svqwhbmdgbbjfd"))
                    .withName("mbmbexppbh")
                    .withIsDataAction(false)
                    .withOrigin("ol")
                    .withProperties(new ClientDiscoveryForProperties()
                        .withServiceSpecification(new ClientDiscoveryForServiceSpecification()
                            .withLogSpecifications(Arrays.asList(new ClientDiscoveryForLogSpecification()))))));
        model = BinaryData.fromObject(model).toObject(ClientDiscoveryResponse.class);
        Assertions.assertEquals("syyp", model.nextLink());
        Assertions.assertEquals("gcbacphejkot", model.value().get(0).display().description());
        Assertions.assertEquals("qgoulznd", model.value().get(0).display().operation());
        Assertions.assertEquals("kwy", model.value().get(0).display().provider());
        Assertions.assertEquals("gfgibm", model.value().get(0).display().resource());
        Assertions.assertEquals("gakeqsr", model.value().get(0).name());
        Assertions.assertTrue(model.value().get(0).isDataAction());
        Assertions.assertEquals("qqedqytbciqfou", model.value().get(0).origin());
    }
}
