// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.fluent.models.ClientDiscoveryValueForSingleApiInner;
import com.azure.resourcemanager.dataprotection.models.ClientDiscoveryDisplay;
import com.azure.resourcemanager.dataprotection.models.ClientDiscoveryForLogSpecification;
import com.azure.resourcemanager.dataprotection.models.ClientDiscoveryForProperties;
import com.azure.resourcemanager.dataprotection.models.ClientDiscoveryForServiceSpecification;
import com.azure.resourcemanager.dataprotection.models.ClientDiscoveryResponse;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ClientDiscoveryResponseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClientDiscoveryResponse model = BinaryData.fromString(
            "{\"nextLink\":\"ypl\",\"value\":[{\"display\":{\"description\":\"syyp\",\"operation\":\"dhsgcba\",\"provider\":\"hejkotynqgou\",\"resource\":\"ndlik\"},\"name\":\"qkgfgibma\",\"isDataAction\":false,\"origin\":\"eqsrxybzqqedqyt\",\"properties\":{\"serviceSpecification\":{\"logSpecifications\":[{},{},{},{}]}}},{\"display\":{\"description\":\"flmmnk\",\"operation\":\"modmglougpb\",\"provider\":\"tmut\",\"resource\":\"qktapspwgcuert\"},\"name\":\"kdosvqw\",\"isDataAction\":true,\"origin\":\"gbbjfddgmbmbe\",\"properties\":{\"serviceSpecification\":{\"logSpecifications\":[{},{},{}]}}}]}")
            .toObject(ClientDiscoveryResponse.class);
        Assertions.assertEquals("ypl", model.nextLink());
        Assertions.assertEquals("syyp", model.value().get(0).display().description());
        Assertions.assertEquals("dhsgcba", model.value().get(0).display().operation());
        Assertions.assertEquals("hejkotynqgou", model.value().get(0).display().provider());
        Assertions.assertEquals("ndlik", model.value().get(0).display().resource());
        Assertions.assertEquals("qkgfgibma", model.value().get(0).name());
        Assertions.assertEquals(false, model.value().get(0).isDataAction());
        Assertions.assertEquals("eqsrxybzqqedqyt", model.value().get(0).origin());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClientDiscoveryResponse model = new ClientDiscoveryResponse().withNextLink("ypl")
            .withValue(Arrays.asList(
                new ClientDiscoveryValueForSingleApiInner()
                    .withDisplay(new ClientDiscoveryDisplay().withDescription("syyp")
                        .withOperation("dhsgcba")
                        .withProvider("hejkotynqgou")
                        .withResource("ndlik"))
                    .withName("qkgfgibma")
                    .withIsDataAction(false)
                    .withOrigin("eqsrxybzqqedqyt")
                    .withProperties(new ClientDiscoveryForProperties().withServiceSpecification(
                        new ClientDiscoveryForServiceSpecification().withLogSpecifications(Arrays.asList(
                            new ClientDiscoveryForLogSpecification(), new ClientDiscoveryForLogSpecification(),
                            new ClientDiscoveryForLogSpecification(), new ClientDiscoveryForLogSpecification())))),
                new ClientDiscoveryValueForSingleApiInner()
                    .withDisplay(new ClientDiscoveryDisplay().withDescription("flmmnk")
                        .withOperation("modmglougpb")
                        .withProvider("tmut")
                        .withResource("qktapspwgcuert"))
                    .withName("kdosvqw")
                    .withIsDataAction(true)
                    .withOrigin("gbbjfddgmbmbe")
                    .withProperties(new ClientDiscoveryForProperties().withServiceSpecification(
                        new ClientDiscoveryForServiceSpecification().withLogSpecifications(Arrays.asList(
                            new ClientDiscoveryForLogSpecification(), new ClientDiscoveryForLogSpecification(),
                            new ClientDiscoveryForLogSpecification()))))));
        model = BinaryData.fromObject(model).toObject(ClientDiscoveryResponse.class);
        Assertions.assertEquals("ypl", model.nextLink());
        Assertions.assertEquals("syyp", model.value().get(0).display().description());
        Assertions.assertEquals("dhsgcba", model.value().get(0).display().operation());
        Assertions.assertEquals("hejkotynqgou", model.value().get(0).display().provider());
        Assertions.assertEquals("ndlik", model.value().get(0).display().resource());
        Assertions.assertEquals("qkgfgibma", model.value().get(0).name());
        Assertions.assertEquals(false, model.value().get(0).isDataAction());
        Assertions.assertEquals("eqsrxybzqqedqyt", model.value().get(0).origin());
    }
}
