// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.AzureRetentionRule;
import com.azure.resourcemanager.dataprotection.models.CopyOption;
import com.azure.resourcemanager.dataprotection.models.DataStoreInfoBase;
import com.azure.resourcemanager.dataprotection.models.DataStoreTypes;
import com.azure.resourcemanager.dataprotection.models.DeleteOption;
import com.azure.resourcemanager.dataprotection.models.SourceLifeCycle;
import com.azure.resourcemanager.dataprotection.models.TargetCopySetting;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzureRetentionRuleTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureRetentionRule model =
            BinaryData
                .fromString(
                    "{\"objectType\":\"AzureRetentionRule\",\"isDefault\":false,\"lifecycles\":[{\"deleteAfter\":{\"objectType\":\"DeleteOption\",\"duration\":\"sdvlmfwdgzxulucv\"},\"sourceDataStore\":{\"dataStoreType\":\"ArchiveStore\",\"objectType\":\"mrsreuzvxurisjnh\"},\"targetDataStoreCopySettings\":[{\"copyAfter\":{\"objectType\":\"CopyOption\"},\"dataStore\":{\"dataStoreType\":\"ArchiveStore\",\"objectType\":\"ifqjz\"}},{\"copyAfter\":{\"objectType\":\"CopyOption\"},\"dataStore\":{\"dataStoreType\":\"OperationalStore\",\"objectType\":\"mrhublwpc\"}}]},{\"deleteAfter\":{\"objectType\":\"DeleteOption\",\"duration\":\"sutrgjup\"},\"sourceDataStore\":{\"dataStoreType\":\"ArchiveStore\",\"objectType\":\"utpwoqhihejqgw\"},\"targetDataStoreCopySettings\":[{\"copyAfter\":{\"objectType\":\"CopyOption\"},\"dataStore\":{\"dataStoreType\":\"VaultStore\",\"objectType\":\"qntcypsxjvfoimwk\"}}]}],\"name\":\"lirc\"}")
                .toObject(AzureRetentionRule.class);
        Assertions.assertEquals("lirc", model.name());
        Assertions.assertEquals(false, model.isDefault());
        Assertions.assertEquals("sdvlmfwdgzxulucv", model.lifecycles().get(0).deleteAfter().duration());
        Assertions
            .assertEquals(DataStoreTypes.ARCHIVE_STORE, model.lifecycles().get(0).sourceDataStore().dataStoreType());
        Assertions.assertEquals("mrsreuzvxurisjnh", model.lifecycles().get(0).sourceDataStore().objectType());
        Assertions
            .assertEquals(
                DataStoreTypes.ARCHIVE_STORE,
                model.lifecycles().get(0).targetDataStoreCopySettings().get(0).dataStore().dataStoreType());
        Assertions
            .assertEquals(
                "ifqjz", model.lifecycles().get(0).targetDataStoreCopySettings().get(0).dataStore().objectType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureRetentionRule model =
            new AzureRetentionRule()
                .withName("lirc")
                .withIsDefault(false)
                .withLifecycles(
                    Arrays
                        .asList(
                            new SourceLifeCycle()
                                .withDeleteAfter(new DeleteOption().withDuration("sdvlmfwdgzxulucv"))
                                .withSourceDataStore(
                                    new DataStoreInfoBase()
                                        .withDataStoreType(DataStoreTypes.ARCHIVE_STORE)
                                        .withObjectType("mrsreuzvxurisjnh"))
                                .withTargetDataStoreCopySettings(
                                    Arrays
                                        .asList(
                                            new TargetCopySetting()
                                                .withCopyAfter(new CopyOption())
                                                .withDataStore(
                                                    new DataStoreInfoBase()
                                                        .withDataStoreType(DataStoreTypes.ARCHIVE_STORE)
                                                        .withObjectType("ifqjz")),
                                            new TargetCopySetting()
                                                .withCopyAfter(new CopyOption())
                                                .withDataStore(
                                                    new DataStoreInfoBase()
                                                        .withDataStoreType(DataStoreTypes.OPERATIONAL_STORE)
                                                        .withObjectType("mrhublwpc")))),
                            new SourceLifeCycle()
                                .withDeleteAfter(new DeleteOption().withDuration("sutrgjup"))
                                .withSourceDataStore(
                                    new DataStoreInfoBase()
                                        .withDataStoreType(DataStoreTypes.ARCHIVE_STORE)
                                        .withObjectType("utpwoqhihejqgw"))
                                .withTargetDataStoreCopySettings(
                                    Arrays
                                        .asList(
                                            new TargetCopySetting()
                                                .withCopyAfter(new CopyOption())
                                                .withDataStore(
                                                    new DataStoreInfoBase()
                                                        .withDataStoreType(DataStoreTypes.VAULT_STORE)
                                                        .withObjectType("qntcypsxjvfoimwk"))))));
        model = BinaryData.fromObject(model).toObject(AzureRetentionRule.class);
        Assertions.assertEquals("lirc", model.name());
        Assertions.assertEquals(false, model.isDefault());
        Assertions.assertEquals("sdvlmfwdgzxulucv", model.lifecycles().get(0).deleteAfter().duration());
        Assertions
            .assertEquals(DataStoreTypes.ARCHIVE_STORE, model.lifecycles().get(0).sourceDataStore().dataStoreType());
        Assertions.assertEquals("mrsreuzvxurisjnh", model.lifecycles().get(0).sourceDataStore().objectType());
        Assertions
            .assertEquals(
                DataStoreTypes.ARCHIVE_STORE,
                model.lifecycles().get(0).targetDataStoreCopySettings().get(0).dataStore().dataStoreType());
        Assertions
            .assertEquals(
                "ifqjz", model.lifecycles().get(0).targetDataStoreCopySettings().get(0).dataStore().objectType());
    }
}
