// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.AzureRetentionRule;
import com.azure.resourcemanager.dataprotection.models.CopyOption;
import com.azure.resourcemanager.dataprotection.models.DataStoreInfoBase;
import com.azure.resourcemanager.dataprotection.models.DataStoreTypes;
import com.azure.resourcemanager.dataprotection.models.DeleteOption;
import com.azure.resourcemanager.dataprotection.models.SourceLifeCycle;
import com.azure.resourcemanager.dataprotection.models.TargetCopySetting;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzureRetentionRuleTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureRetentionRule model = BinaryData.fromString(
            "{\"objectType\":\"AzureRetentionRule\",\"isDefault\":false,\"lifecycles\":[{\"deleteAfter\":{\"objectType\":\"DeleteOption\",\"duration\":\"tdqoaxoruzfgsq\"},\"sourceDataStore\":{\"dataStoreType\":\"ArchiveStore\",\"objectType\":\"fxrxxle\"},\"targetDataStoreCopySettings\":[{\"copyAfter\":{\"objectType\":\"CopyOption\"},\"dataStore\":{\"dataStoreType\":\"VaultStore\",\"objectType\":\"mxjezwlw\"}},{\"copyAfter\":{\"objectType\":\"CopyOption\"},\"dataStore\":{\"dataStoreType\":\"OperationalStore\",\"objectType\":\"xuqlcvydypat\"}},{\"copyAfter\":{\"objectType\":\"CopyOption\"},\"dataStore\":{\"dataStoreType\":\"OperationalStore\",\"objectType\":\"oa\"}}]}],\"name\":\"jkniodko\"}")
            .toObject(AzureRetentionRule.class);
        Assertions.assertEquals("jkniodko", model.name());
        Assertions.assertFalse(model.isDefault());
        Assertions.assertEquals("tdqoaxoruzfgsq", model.lifecycles().get(0).deleteAfter().duration());
        Assertions.assertEquals(DataStoreTypes.ARCHIVE_STORE,
            model.lifecycles().get(0).sourceDataStore().dataStoreType());
        Assertions.assertEquals("fxrxxle", model.lifecycles().get(0).sourceDataStore().objectType());
        Assertions.assertEquals(DataStoreTypes.VAULT_STORE,
            model.lifecycles().get(0).targetDataStoreCopySettings().get(0).dataStore().dataStoreType());
        Assertions.assertEquals("mxjezwlw",
            model.lifecycles().get(0).targetDataStoreCopySettings().get(0).dataStore().objectType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureRetentionRule model
            = new AzureRetentionRule().withName("jkniodko")
                .withIsDefault(false)
                .withLifecycles(Arrays.asList(new SourceLifeCycle()
                    .withDeleteAfter(new DeleteOption().withDuration("tdqoaxoruzfgsq"))
                    .withSourceDataStore(new DataStoreInfoBase().withDataStoreType(DataStoreTypes.ARCHIVE_STORE)
                        .withObjectType("fxrxxle"))
                    .withTargetDataStoreCopySettings(Arrays.asList(
                        new TargetCopySetting().withCopyAfter(new CopyOption())
                            .withDataStore(new DataStoreInfoBase().withDataStoreType(DataStoreTypes.VAULT_STORE)
                                .withObjectType("mxjezwlw")),
                        new TargetCopySetting().withCopyAfter(new CopyOption())
                            .withDataStore(new DataStoreInfoBase().withDataStoreType(DataStoreTypes.OPERATIONAL_STORE)
                                .withObjectType("xuqlcvydypat")),
                        new TargetCopySetting().withCopyAfter(new CopyOption())
                            .withDataStore(new DataStoreInfoBase().withDataStoreType(DataStoreTypes.OPERATIONAL_STORE)
                                .withObjectType("oa"))))));
        model = BinaryData.fromObject(model).toObject(AzureRetentionRule.class);
        Assertions.assertEquals("jkniodko", model.name());
        Assertions.assertFalse(model.isDefault());
        Assertions.assertEquals("tdqoaxoruzfgsq", model.lifecycles().get(0).deleteAfter().duration());
        Assertions.assertEquals(DataStoreTypes.ARCHIVE_STORE,
            model.lifecycles().get(0).sourceDataStore().dataStoreType());
        Assertions.assertEquals("fxrxxle", model.lifecycles().get(0).sourceDataStore().objectType());
        Assertions.assertEquals(DataStoreTypes.VAULT_STORE,
            model.lifecycles().get(0).targetDataStoreCopySettings().get(0).dataStore().dataStoreType());
        Assertions.assertEquals("mxjezwlw",
            model.lifecycles().get(0).targetDataStoreCopySettings().get(0).dataStore().objectType());
    }
}
