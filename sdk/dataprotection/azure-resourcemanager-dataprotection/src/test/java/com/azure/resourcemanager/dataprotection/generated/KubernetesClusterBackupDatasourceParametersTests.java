// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.AKSVolumeTypes;
import com.azure.resourcemanager.dataprotection.models.KubernetesClusterBackupDatasourceParameters;
import com.azure.resourcemanager.dataprotection.models.NamespacedNameResource;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class KubernetesClusterBackupDatasourceParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        KubernetesClusterBackupDatasourceParameters model = BinaryData.fromString(
            "{\"objectType\":\"KubernetesClusterBackupDatasourceParameters\",\"snapshotVolumes\":false,\"includedVolumeTypes\":[\"AzureFileShareSMB\",\"AzureFileShareSMB\",\"AzureDisk\"],\"includeClusterScopeResources\":true,\"includedNamespaces\":[\"cukjf\",\"giawx\",\"lryplwckbasyy\",\"nddhsgcbacph\"],\"excludedNamespaces\":[\"ot\"],\"includedResourceTypes\":[\"gou\",\"zndlikwy\"],\"excludedResourceTypes\":[\"fgibmadgakeq\",\"rxybz\"],\"labelSelectors\":[\"dqytbciqfouflmm\"],\"backupHookReferences\":[{\"name\":\"modmglougpb\",\"namespace\":\"tmut\"}]}")
            .toObject(KubernetesClusterBackupDatasourceParameters.class);
        Assertions.assertFalse(model.snapshotVolumes());
        Assertions.assertEquals(AKSVolumeTypes.AZURE_FILE_SHARE_SMB, model.includedVolumeTypes().get(0));
        Assertions.assertTrue(model.includeClusterScopeResources());
        Assertions.assertEquals("cukjf", model.includedNamespaces().get(0));
        Assertions.assertEquals("ot", model.excludedNamespaces().get(0));
        Assertions.assertEquals("gou", model.includedResourceTypes().get(0));
        Assertions.assertEquals("fgibmadgakeq", model.excludedResourceTypes().get(0));
        Assertions.assertEquals("dqytbciqfouflmm", model.labelSelectors().get(0));
        Assertions.assertEquals("modmglougpb", model.backupHookReferences().get(0).name());
        Assertions.assertEquals("tmut", model.backupHookReferences().get(0).namespace());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        KubernetesClusterBackupDatasourceParameters model
            = new KubernetesClusterBackupDatasourceParameters().withSnapshotVolumes(false)
                .withIncludedVolumeTypes(Arrays.asList(AKSVolumeTypes.AZURE_FILE_SHARE_SMB,
                    AKSVolumeTypes.AZURE_FILE_SHARE_SMB, AKSVolumeTypes.AZURE_DISK))
                .withIncludeClusterScopeResources(true)
                .withIncludedNamespaces(Arrays.asList("cukjf", "giawx", "lryplwckbasyy", "nddhsgcbacph"))
                .withExcludedNamespaces(Arrays.asList("ot"))
                .withIncludedResourceTypes(Arrays.asList("gou", "zndlikwy"))
                .withExcludedResourceTypes(Arrays.asList("fgibmadgakeq", "rxybz"))
                .withLabelSelectors(Arrays.asList("dqytbciqfouflmm"))
                .withBackupHookReferences(
                    Arrays.asList(new NamespacedNameResource().withName("modmglougpb").withNamespace("tmut")));
        model = BinaryData.fromObject(model).toObject(KubernetesClusterBackupDatasourceParameters.class);
        Assertions.assertFalse(model.snapshotVolumes());
        Assertions.assertEquals(AKSVolumeTypes.AZURE_FILE_SHARE_SMB, model.includedVolumeTypes().get(0));
        Assertions.assertTrue(model.includeClusterScopeResources());
        Assertions.assertEquals("cukjf", model.includedNamespaces().get(0));
        Assertions.assertEquals("ot", model.excludedNamespaces().get(0));
        Assertions.assertEquals("gou", model.includedResourceTypes().get(0));
        Assertions.assertEquals("fgibmadgakeq", model.excludedResourceTypes().get(0));
        Assertions.assertEquals("dqytbciqfouflmm", model.labelSelectors().get(0));
        Assertions.assertEquals("modmglougpb", model.backupHookReferences().get(0).name());
        Assertions.assertEquals("tmut", model.backupHookReferences().get(0).namespace());
    }
}
