// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.KubernetesClusterBackupDatasourceParameters;
import com.azure.resourcemanager.dataprotection.models.NamespacedNameResource;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class KubernetesClusterBackupDatasourceParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        KubernetesClusterBackupDatasourceParameters model =
            BinaryData
                .fromString(
                    "{\"objectType\":\"KubernetesClusterBackupDatasourceParameters\",\"snapshotVolumes\":true,\"includeClusterScopeResources\":false,\"includedNamespaces\":[\"jntpsewgioilqu\"],\"excludedNamespaces\":[\"dxtqmieoxo\",\"ggufhyaomtb\"],\"includedResourceTypes\":[\"avgrvkffovjz\",\"pjbi\"],\"excludedResourceTypes\":[\"mfxumvfcluyovw\",\"nbkfezzxscy\"],\"labelSelectors\":[\"dgirujbzbom\",\"zzbtdcqvpniyujvi\"],\"backupHookReferences\":[{\"name\":\"shfssnrbgyef\",\"namespace\":\"msgaoj\"}]}")
                .toObject(KubernetesClusterBackupDatasourceParameters.class);
        Assertions.assertEquals(true, model.snapshotVolumes());
        Assertions.assertEquals(false, model.includeClusterScopeResources());
        Assertions.assertEquals("jntpsewgioilqu", model.includedNamespaces().get(0));
        Assertions.assertEquals("dxtqmieoxo", model.excludedNamespaces().get(0));
        Assertions.assertEquals("avgrvkffovjz", model.includedResourceTypes().get(0));
        Assertions.assertEquals("mfxumvfcluyovw", model.excludedResourceTypes().get(0));
        Assertions.assertEquals("dgirujbzbom", model.labelSelectors().get(0));
        Assertions.assertEquals("shfssnrbgyef", model.backupHookReferences().get(0).name());
        Assertions.assertEquals("msgaoj", model.backupHookReferences().get(0).namespace());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        KubernetesClusterBackupDatasourceParameters model =
            new KubernetesClusterBackupDatasourceParameters()
                .withSnapshotVolumes(true)
                .withIncludeClusterScopeResources(false)
                .withIncludedNamespaces(Arrays.asList("jntpsewgioilqu"))
                .withExcludedNamespaces(Arrays.asList("dxtqmieoxo", "ggufhyaomtb"))
                .withIncludedResourceTypes(Arrays.asList("avgrvkffovjz", "pjbi"))
                .withExcludedResourceTypes(Arrays.asList("mfxumvfcluyovw", "nbkfezzxscy"))
                .withLabelSelectors(Arrays.asList("dgirujbzbom", "zzbtdcqvpniyujvi"))
                .withBackupHookReferences(
                    Arrays.asList(new NamespacedNameResource().withName("shfssnrbgyef").withNamespace("msgaoj")));
        model = BinaryData.fromObject(model).toObject(KubernetesClusterBackupDatasourceParameters.class);
        Assertions.assertEquals(true, model.snapshotVolumes());
        Assertions.assertEquals(false, model.includeClusterScopeResources());
        Assertions.assertEquals("jntpsewgioilqu", model.includedNamespaces().get(0));
        Assertions.assertEquals("dxtqmieoxo", model.excludedNamespaces().get(0));
        Assertions.assertEquals("avgrvkffovjz", model.includedResourceTypes().get(0));
        Assertions.assertEquals("mfxumvfcluyovw", model.excludedResourceTypes().get(0));
        Assertions.assertEquals("dgirujbzbom", model.labelSelectors().get(0));
        Assertions.assertEquals("shfssnrbgyef", model.backupHookReferences().get(0).name());
        Assertions.assertEquals("msgaoj", model.backupHookReferences().get(0).namespace());
    }
}
