// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.AzureBackupRestoreRequest;
import com.azure.resourcemanager.dataprotection.models.CrossRegionRestoreDetails;
import com.azure.resourcemanager.dataprotection.models.IdentityDetails;
import com.azure.resourcemanager.dataprotection.models.RecoveryOption;
import com.azure.resourcemanager.dataprotection.models.RestoreTargetInfoBase;
import com.azure.resourcemanager.dataprotection.models.SourceDataStoreType;
import com.azure.resourcemanager.dataprotection.models.ValidateCrossRegionRestoreRequestObject;
import org.junit.jupiter.api.Assertions;

public final class ValidateCrossRegionRestoreRequestObjectTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ValidateCrossRegionRestoreRequestObject model = BinaryData.fromString(
            "{\"restoreRequestObject\":{\"objectType\":\"AzureBackupRestoreRequest\",\"restoreTargetInfo\":{\"objectType\":\"RestoreTargetInfoBase\",\"recoveryOption\":\"FailIfExists\",\"restoreLocation\":\"oyq\"},\"sourceDataStoreType\":\"VaultStore\",\"sourceResourceId\":\"rmcqiby\",\"identityDetails\":{\"useSystemAssignedIdentity\":false,\"userAssignedIdentityArmUrl\":\"knme\"}},\"crossRegionRestoreDetails\":{\"sourceRegion\":\"qsgzvahapj\",\"sourceBackupInstanceId\":\"zhpvgqzcjrvxd\"}}")
            .toObject(ValidateCrossRegionRestoreRequestObject.class);
        Assertions.assertEquals(RecoveryOption.FAIL_IF_EXISTS,
            model.restoreRequestObject().restoreTargetInfo().recoveryOption());
        Assertions.assertEquals("oyq", model.restoreRequestObject().restoreTargetInfo().restoreLocation());
        Assertions.assertEquals(SourceDataStoreType.VAULT_STORE, model.restoreRequestObject().sourceDataStoreType());
        Assertions.assertEquals("rmcqiby", model.restoreRequestObject().sourceResourceId());
        Assertions.assertEquals(false, model.restoreRequestObject().identityDetails().useSystemAssignedIdentity());
        Assertions.assertEquals("knme", model.restoreRequestObject().identityDetails().userAssignedIdentityArmUrl());
        Assertions.assertEquals("qsgzvahapj", model.crossRegionRestoreDetails().sourceRegion());
        Assertions.assertEquals("zhpvgqzcjrvxd", model.crossRegionRestoreDetails().sourceBackupInstanceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ValidateCrossRegionRestoreRequestObject model = new ValidateCrossRegionRestoreRequestObject()
            .withRestoreRequestObject(new AzureBackupRestoreRequest()
                .withRestoreTargetInfo(new RestoreTargetInfoBase().withRecoveryOption(RecoveryOption.FAIL_IF_EXISTS)
                    .withRestoreLocation("oyq"))
                .withSourceDataStoreType(SourceDataStoreType.VAULT_STORE).withSourceResourceId("rmcqiby")
                .withIdentityDetails(
                    new IdentityDetails().withUseSystemAssignedIdentity(false).withUserAssignedIdentityArmUrl("knme")))
            .withCrossRegionRestoreDetails(new CrossRegionRestoreDetails().withSourceRegion("qsgzvahapj")
                .withSourceBackupInstanceId("zhpvgqzcjrvxd"));
        model = BinaryData.fromObject(model).toObject(ValidateCrossRegionRestoreRequestObject.class);
        Assertions.assertEquals(RecoveryOption.FAIL_IF_EXISTS,
            model.restoreRequestObject().restoreTargetInfo().recoveryOption());
        Assertions.assertEquals("oyq", model.restoreRequestObject().restoreTargetInfo().restoreLocation());
        Assertions.assertEquals(SourceDataStoreType.VAULT_STORE, model.restoreRequestObject().sourceDataStoreType());
        Assertions.assertEquals("rmcqiby", model.restoreRequestObject().sourceResourceId());
        Assertions.assertEquals(false, model.restoreRequestObject().identityDetails().useSystemAssignedIdentity());
        Assertions.assertEquals("knme", model.restoreRequestObject().identityDetails().userAssignedIdentityArmUrl());
        Assertions.assertEquals("qsgzvahapj", model.crossRegionRestoreDetails().sourceRegion());
        Assertions.assertEquals("zhpvgqzcjrvxd", model.crossRegionRestoreDetails().sourceBackupInstanceId());
    }
}
