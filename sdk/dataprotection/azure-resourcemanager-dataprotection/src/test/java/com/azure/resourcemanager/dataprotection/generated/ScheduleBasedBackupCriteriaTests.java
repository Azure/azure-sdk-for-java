// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.AbsoluteMarker;
import com.azure.resourcemanager.dataprotection.models.Day;
import com.azure.resourcemanager.dataprotection.models.DayOfWeek;
import com.azure.resourcemanager.dataprotection.models.Month;
import com.azure.resourcemanager.dataprotection.models.ScheduleBasedBackupCriteria;
import com.azure.resourcemanager.dataprotection.models.WeekNumber;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ScheduleBasedBackupCriteriaTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScheduleBasedBackupCriteria model = BinaryData.fromString(
            "{\"objectType\":\"ScheduleBasedBackupCriteria\",\"absoluteCriteria\":[\"FirstOfMonth\"],\"daysOfMonth\":[{\"date\":1491374594,\"isLast\":true},{\"date\":552907355,\"isLast\":true},{\"date\":1056443128,\"isLast\":false},{\"date\":603378925,\"isLast\":false}],\"daysOfTheWeek\":[\"Thursday\"],\"monthsOfYear\":[\"November\"],\"scheduleTimes\":[\"2021-07-16T02:04:17Z\"],\"weeksOfTheMonth\":[\"Fourth\",\"First\",\"First\",\"Third\"]}")
            .toObject(ScheduleBasedBackupCriteria.class);
        Assertions.assertEquals(AbsoluteMarker.FIRST_OF_MONTH, model.absoluteCriteria().get(0));
        Assertions.assertEquals(1491374594, model.daysOfMonth().get(0).date());
        Assertions.assertTrue(model.daysOfMonth().get(0).isLast());
        Assertions.assertEquals(DayOfWeek.THURSDAY, model.daysOfTheWeek().get(0));
        Assertions.assertEquals(Month.NOVEMBER, model.monthsOfYear().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-16T02:04:17Z"), model.scheduleTimes().get(0));
        Assertions.assertEquals(WeekNumber.FOURTH, model.weeksOfTheMonth().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScheduleBasedBackupCriteria model
            = new ScheduleBasedBackupCriteria().withAbsoluteCriteria(Arrays.asList(AbsoluteMarker.FIRST_OF_MONTH))
                .withDaysOfMonth(Arrays.asList(new Day().withDate(1491374594).withIsLast(true),
                    new Day().withDate(552907355).withIsLast(true), new Day().withDate(1056443128).withIsLast(false),
                    new Day().withDate(603378925).withIsLast(false)))
                .withDaysOfTheWeek(Arrays.asList(DayOfWeek.THURSDAY))
                .withMonthsOfYear(Arrays.asList(Month.NOVEMBER))
                .withScheduleTimes(Arrays.asList(OffsetDateTime.parse("2021-07-16T02:04:17Z")))
                .withWeeksOfTheMonth(
                    Arrays.asList(WeekNumber.FOURTH, WeekNumber.FIRST, WeekNumber.FIRST, WeekNumber.THIRD));
        model = BinaryData.fromObject(model).toObject(ScheduleBasedBackupCriteria.class);
        Assertions.assertEquals(AbsoluteMarker.FIRST_OF_MONTH, model.absoluteCriteria().get(0));
        Assertions.assertEquals(1491374594, model.daysOfMonth().get(0).date());
        Assertions.assertTrue(model.daysOfMonth().get(0).isLast());
        Assertions.assertEquals(DayOfWeek.THURSDAY, model.daysOfTheWeek().get(0));
        Assertions.assertEquals(Month.NOVEMBER, model.monthsOfYear().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-16T02:04:17Z"), model.scheduleTimes().get(0));
        Assertions.assertEquals(WeekNumber.FOURTH, model.weeksOfTheMonth().get(0));
    }
}
