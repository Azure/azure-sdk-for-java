// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.AbsoluteMarker;
import com.azure.resourcemanager.dataprotection.models.Day;
import com.azure.resourcemanager.dataprotection.models.DayOfWeek;
import com.azure.resourcemanager.dataprotection.models.Month;
import com.azure.resourcemanager.dataprotection.models.ScheduleBasedBackupCriteria;
import com.azure.resourcemanager.dataprotection.models.WeekNumber;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ScheduleBasedBackupCriteriaTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScheduleBasedBackupCriteria model =
            BinaryData
                .fromString(
                    "{\"objectType\":\"ScheduleBasedBackupCriteria\",\"absoluteCriteria\":[\"FirstOfYear\"],\"daysOfMonth\":[{\"date\":172770191,\"isLast\":true},{\"date\":863803765,\"isLast\":false},{\"date\":2107096986,\"isLast\":false}],\"daysOfTheWeek\":[\"Wednesday\",\"Wednesday\",\"Monday\",\"Tuesday\"],\"monthsOfYear\":[\"May\",\"June\"],\"scheduleTimes\":[\"2021-01-06T07:58:29Z\"],\"weeksOfTheMonth\":[\"Third\",\"Second\",\"First\"]}")
                .toObject(ScheduleBasedBackupCriteria.class);
        Assertions.assertEquals(AbsoluteMarker.FIRST_OF_YEAR, model.absoluteCriteria().get(0));
        Assertions.assertEquals(172770191, model.daysOfMonth().get(0).date());
        Assertions.assertEquals(true, model.daysOfMonth().get(0).isLast());
        Assertions.assertEquals(DayOfWeek.WEDNESDAY, model.daysOfTheWeek().get(0));
        Assertions.assertEquals(Month.MAY, model.monthsOfYear().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-06T07:58:29Z"), model.scheduleTimes().get(0));
        Assertions.assertEquals(WeekNumber.THIRD, model.weeksOfTheMonth().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScheduleBasedBackupCriteria model =
            new ScheduleBasedBackupCriteria()
                .withAbsoluteCriteria(Arrays.asList(AbsoluteMarker.FIRST_OF_YEAR))
                .withDaysOfMonth(
                    Arrays
                        .asList(
                            new Day().withDate(172770191).withIsLast(true),
                            new Day().withDate(863803765).withIsLast(false),
                            new Day().withDate(2107096986).withIsLast(false)))
                .withDaysOfTheWeek(
                    Arrays.asList(DayOfWeek.WEDNESDAY, DayOfWeek.WEDNESDAY, DayOfWeek.MONDAY, DayOfWeek.TUESDAY))
                .withMonthsOfYear(Arrays.asList(Month.MAY, Month.JUNE))
                .withScheduleTimes(Arrays.asList(OffsetDateTime.parse("2021-01-06T07:58:29Z")))
                .withWeeksOfTheMonth(Arrays.asList(WeekNumber.THIRD, WeekNumber.SECOND, WeekNumber.FIRST));
        model = BinaryData.fromObject(model).toObject(ScheduleBasedBackupCriteria.class);
        Assertions.assertEquals(AbsoluteMarker.FIRST_OF_YEAR, model.absoluteCriteria().get(0));
        Assertions.assertEquals(172770191, model.daysOfMonth().get(0).date());
        Assertions.assertEquals(true, model.daysOfMonth().get(0).isLast());
        Assertions.assertEquals(DayOfWeek.WEDNESDAY, model.daysOfTheWeek().get(0));
        Assertions.assertEquals(Month.MAY, model.monthsOfYear().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-06T07:58:29Z"), model.scheduleTimes().get(0));
        Assertions.assertEquals(WeekNumber.THIRD, model.weeksOfTheMonth().get(0));
    }
}
