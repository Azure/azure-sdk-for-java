// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.AbsoluteMarker;
import com.azure.resourcemanager.dataprotection.models.Day;
import com.azure.resourcemanager.dataprotection.models.DayOfWeek;
import com.azure.resourcemanager.dataprotection.models.Month;
import com.azure.resourcemanager.dataprotection.models.ScheduleBasedBackupCriteria;
import com.azure.resourcemanager.dataprotection.models.WeekNumber;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ScheduleBasedBackupCriteriaTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScheduleBasedBackupCriteria model = BinaryData.fromString(
            "{\"objectType\":\"ScheduleBasedBackupCriteria\",\"absoluteCriteria\":[\"AllBackup\"],\"daysOfMonth\":[{\"date\":2142430700,\"isLast\":true},{\"date\":639924781,\"isLast\":true},{\"date\":1644045294,\"isLast\":true}],\"daysOfTheWeek\":[\"Friday\"],\"monthsOfYear\":[\"August\"],\"scheduleTimes\":[\"2021-09-04T23:35:12Z\"],\"weeksOfTheMonth\":[\"First\",\"First\",\"Second\"]}")
            .toObject(ScheduleBasedBackupCriteria.class);
        Assertions.assertEquals(AbsoluteMarker.ALL_BACKUP, model.absoluteCriteria().get(0));
        Assertions.assertEquals(2142430700, model.daysOfMonth().get(0).date());
        Assertions.assertEquals(true, model.daysOfMonth().get(0).isLast());
        Assertions.assertEquals(DayOfWeek.FRIDAY, model.daysOfTheWeek().get(0));
        Assertions.assertEquals(Month.AUGUST, model.monthsOfYear().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-04T23:35:12Z"), model.scheduleTimes().get(0));
        Assertions.assertEquals(WeekNumber.FIRST, model.weeksOfTheMonth().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScheduleBasedBackupCriteria model
            = new ScheduleBasedBackupCriteria().withAbsoluteCriteria(Arrays.asList(AbsoluteMarker.ALL_BACKUP))
                .withDaysOfMonth(Arrays.asList(new Day().withDate(2142430700).withIsLast(true),
                    new Day().withDate(639924781).withIsLast(true), new Day().withDate(1644045294).withIsLast(true)))
                .withDaysOfTheWeek(Arrays.asList(DayOfWeek.FRIDAY)).withMonthsOfYear(Arrays.asList(Month.AUGUST))
                .withScheduleTimes(Arrays.asList(OffsetDateTime.parse("2021-09-04T23:35:12Z")))
                .withWeeksOfTheMonth(Arrays.asList(WeekNumber.FIRST, WeekNumber.FIRST, WeekNumber.SECOND));
        model = BinaryData.fromObject(model).toObject(ScheduleBasedBackupCriteria.class);
        Assertions.assertEquals(AbsoluteMarker.ALL_BACKUP, model.absoluteCriteria().get(0));
        Assertions.assertEquals(2142430700, model.daysOfMonth().get(0).date());
        Assertions.assertEquals(true, model.daysOfMonth().get(0).isLast());
        Assertions.assertEquals(DayOfWeek.FRIDAY, model.daysOfTheWeek().get(0));
        Assertions.assertEquals(Month.AUGUST, model.monthsOfYear().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-04T23:35:12Z"), model.scheduleTimes().get(0));
        Assertions.assertEquals(WeekNumber.FIRST, model.weeksOfTheMonth().get(0));
    }
}
