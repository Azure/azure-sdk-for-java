// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.AbsoluteMarker;
import com.azure.resourcemanager.dataprotection.models.Day;
import com.azure.resourcemanager.dataprotection.models.DayOfWeek;
import com.azure.resourcemanager.dataprotection.models.Month;
import com.azure.resourcemanager.dataprotection.models.ScheduleBasedBackupCriteria;
import com.azure.resourcemanager.dataprotection.models.WeekNumber;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ScheduleBasedBackupCriteriaTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScheduleBasedBackupCriteria model = BinaryData.fromString(
            "{\"objectType\":\"ScheduleBasedBackupCriteria\",\"absoluteCriteria\":[\"AllBackup\"],\"daysOfMonth\":[{\"date\":1119660278,\"isLast\":false}],\"daysOfTheWeek\":[\"Thursday\",\"Tuesday\",\"Wednesday\"],\"monthsOfYear\":[\"August\",\"December\",\"May\",\"June\"],\"scheduleTimes\":[\"2021-04-08T09:21:16Z\",\"2021-10-13T17:41:15Z\"],\"weeksOfTheMonth\":[\"First\",\"Third\"]}")
            .toObject(ScheduleBasedBackupCriteria.class);
        Assertions.assertEquals(AbsoluteMarker.ALL_BACKUP, model.absoluteCriteria().get(0));
        Assertions.assertEquals(1119660278, model.daysOfMonth().get(0).date());
        Assertions.assertFalse(model.daysOfMonth().get(0).isLast());
        Assertions.assertEquals(DayOfWeek.THURSDAY, model.daysOfTheWeek().get(0));
        Assertions.assertEquals(Month.AUGUST, model.monthsOfYear().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-08T09:21:16Z"), model.scheduleTimes().get(0));
        Assertions.assertEquals(WeekNumber.FIRST, model.weeksOfTheMonth().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScheduleBasedBackupCriteria model
            = new ScheduleBasedBackupCriteria().withAbsoluteCriteria(Arrays.asList(AbsoluteMarker.ALL_BACKUP))
                .withDaysOfMonth(Arrays.asList(new Day().withDate(1119660278).withIsLast(false)))
                .withDaysOfTheWeek(Arrays.asList(DayOfWeek.THURSDAY, DayOfWeek.TUESDAY, DayOfWeek.WEDNESDAY))
                .withMonthsOfYear(Arrays.asList(Month.AUGUST, Month.DECEMBER, Month.MAY, Month.JUNE))
                .withScheduleTimes(Arrays.asList(OffsetDateTime.parse("2021-04-08T09:21:16Z"),
                    OffsetDateTime.parse("2021-10-13T17:41:15Z")))
                .withWeeksOfTheMonth(Arrays.asList(WeekNumber.FIRST, WeekNumber.THIRD));
        model = BinaryData.fromObject(model).toObject(ScheduleBasedBackupCriteria.class);
        Assertions.assertEquals(AbsoluteMarker.ALL_BACKUP, model.absoluteCriteria().get(0));
        Assertions.assertEquals(1119660278, model.daysOfMonth().get(0).date());
        Assertions.assertFalse(model.daysOfMonth().get(0).isLast());
        Assertions.assertEquals(DayOfWeek.THURSDAY, model.daysOfTheWeek().get(0));
        Assertions.assertEquals(Month.AUGUST, model.monthsOfYear().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-08T09:21:16Z"), model.scheduleTimes().get(0));
        Assertions.assertEquals(WeekNumber.FIRST, model.weeksOfTheMonth().get(0));
    }
}
