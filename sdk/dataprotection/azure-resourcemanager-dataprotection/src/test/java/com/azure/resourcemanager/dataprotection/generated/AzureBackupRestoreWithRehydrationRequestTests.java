// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.AzureBackupRestoreWithRehydrationRequest;
import com.azure.resourcemanager.dataprotection.models.IdentityDetails;
import com.azure.resourcemanager.dataprotection.models.RecoveryOption;
import com.azure.resourcemanager.dataprotection.models.RehydrationPriority;
import com.azure.resourcemanager.dataprotection.models.RestoreTargetInfoBase;
import com.azure.resourcemanager.dataprotection.models.SourceDataStoreType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzureBackupRestoreWithRehydrationRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureBackupRestoreWithRehydrationRequest model = BinaryData.fromString(
            "{\"objectType\":\"AzureBackupRestoreWithRehydrationRequest\",\"rehydrationPriority\":\"Invalid\",\"rehydrationRetentionDuration\":\"qfhwyg\",\"recoveryPointId\":\"lvdnkfx\",\"restoreTargetInfo\":{\"objectType\":\"RestoreTargetInfoBase\",\"recoveryOption\":\"FailIfExists\",\"restoreLocation\":\"mdwzrmuhapfcqdps\"},\"sourceDataStoreType\":\"ArchiveStore\",\"sourceResourceId\":\"vpsvuoymgcce\",\"resourceGuardOperationRequests\":[\"zrypqlmfeokerqw\",\"yhko\"],\"identityDetails\":{\"useSystemAssignedIdentity\":false,\"userAssignedIdentityArmUrl\":\"edkowepbqpcrfk\"}}")
            .toObject(AzureBackupRestoreWithRehydrationRequest.class);
        Assertions.assertEquals(RecoveryOption.FAIL_IF_EXISTS, model.restoreTargetInfo().recoveryOption());
        Assertions.assertEquals("mdwzrmuhapfcqdps", model.restoreTargetInfo().restoreLocation());
        Assertions.assertEquals(SourceDataStoreType.ARCHIVE_STORE, model.sourceDataStoreType());
        Assertions.assertEquals("vpsvuoymgcce", model.sourceResourceId());
        Assertions.assertEquals("zrypqlmfeokerqw", model.resourceGuardOperationRequests().get(0));
        Assertions.assertEquals(false, model.identityDetails().useSystemAssignedIdentity());
        Assertions.assertEquals("edkowepbqpcrfk", model.identityDetails().userAssignedIdentityArmUrl());
        Assertions.assertEquals("lvdnkfx", model.recoveryPointId());
        Assertions.assertEquals(RehydrationPriority.INVALID, model.rehydrationPriority());
        Assertions.assertEquals("qfhwyg", model.rehydrationRetentionDuration());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureBackupRestoreWithRehydrationRequest model = new AzureBackupRestoreWithRehydrationRequest()
            .withRestoreTargetInfo(new RestoreTargetInfoBase().withRecoveryOption(RecoveryOption.FAIL_IF_EXISTS)
                .withRestoreLocation("mdwzrmuhapfcqdps"))
            .withSourceDataStoreType(SourceDataStoreType.ARCHIVE_STORE)
            .withSourceResourceId("vpsvuoymgcce")
            .withResourceGuardOperationRequests(Arrays.asList("zrypqlmfeokerqw", "yhko"))
            .withIdentityDetails(new IdentityDetails().withUseSystemAssignedIdentity(false)
                .withUserAssignedIdentityArmUrl("edkowepbqpcrfk"))
            .withRecoveryPointId("lvdnkfx")
            .withRehydrationPriority(RehydrationPriority.INVALID)
            .withRehydrationRetentionDuration("qfhwyg");
        model = BinaryData.fromObject(model).toObject(AzureBackupRestoreWithRehydrationRequest.class);
        Assertions.assertEquals(RecoveryOption.FAIL_IF_EXISTS, model.restoreTargetInfo().recoveryOption());
        Assertions.assertEquals("mdwzrmuhapfcqdps", model.restoreTargetInfo().restoreLocation());
        Assertions.assertEquals(SourceDataStoreType.ARCHIVE_STORE, model.sourceDataStoreType());
        Assertions.assertEquals("vpsvuoymgcce", model.sourceResourceId());
        Assertions.assertEquals("zrypqlmfeokerqw", model.resourceGuardOperationRequests().get(0));
        Assertions.assertEquals(false, model.identityDetails().useSystemAssignedIdentity());
        Assertions.assertEquals("edkowepbqpcrfk", model.identityDetails().userAssignedIdentityArmUrl());
        Assertions.assertEquals("lvdnkfx", model.recoveryPointId());
        Assertions.assertEquals(RehydrationPriority.INVALID, model.rehydrationPriority());
        Assertions.assertEquals("qfhwyg", model.rehydrationRetentionDuration());
    }
}
