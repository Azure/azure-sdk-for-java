// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.AzureBackupRestoreWithRehydrationRequest;
import com.azure.resourcemanager.dataprotection.models.IdentityDetails;
import com.azure.resourcemanager.dataprotection.models.RecoveryOption;
import com.azure.resourcemanager.dataprotection.models.RehydrationPriority;
import com.azure.resourcemanager.dataprotection.models.RestoreTargetInfoBase;
import com.azure.resourcemanager.dataprotection.models.SourceDataStoreType;
import org.junit.jupiter.api.Assertions;

public final class AzureBackupRestoreWithRehydrationRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureBackupRestoreWithRehydrationRequest model = BinaryData.fromString(
            "{\"objectType\":\"AzureBackupRestoreWithRehydrationRequest\",\"rehydrationPriority\":\"Invalid\",\"rehydrationRetentionDuration\":\"dscwxqupevzhf\",\"recoveryPointId\":\"totxhojujb\",\"restoreTargetInfo\":{\"objectType\":\"RestoreTargetInfoBase\",\"recoveryOption\":\"FailIfExists\",\"restoreLocation\":\"lmcuvhixb\"},\"sourceDataStoreType\":\"OperationalStore\",\"sourceResourceId\":\"fw\",\"identityDetails\":{\"useSystemAssignedIdentity\":false,\"userAssignedIdentityArmUrl\":\"ool\"}}")
            .toObject(AzureBackupRestoreWithRehydrationRequest.class);
        Assertions.assertEquals(RecoveryOption.FAIL_IF_EXISTS, model.restoreTargetInfo().recoveryOption());
        Assertions.assertEquals("lmcuvhixb", model.restoreTargetInfo().restoreLocation());
        Assertions.assertEquals(SourceDataStoreType.OPERATIONAL_STORE, model.sourceDataStoreType());
        Assertions.assertEquals("fw", model.sourceResourceId());
        Assertions.assertEquals(false, model.identityDetails().useSystemAssignedIdentity());
        Assertions.assertEquals("ool", model.identityDetails().userAssignedIdentityArmUrl());
        Assertions.assertEquals("totxhojujb", model.recoveryPointId());
        Assertions.assertEquals(RehydrationPriority.INVALID, model.rehydrationPriority());
        Assertions.assertEquals("dscwxqupevzhf", model.rehydrationRetentionDuration());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureBackupRestoreWithRehydrationRequest model = new AzureBackupRestoreWithRehydrationRequest()
            .withRestoreTargetInfo(new RestoreTargetInfoBase().withRecoveryOption(RecoveryOption.FAIL_IF_EXISTS)
                .withRestoreLocation("lmcuvhixb"))
            .withSourceDataStoreType(SourceDataStoreType.OPERATIONAL_STORE).withSourceResourceId("fw")
            .withIdentityDetails(
                new IdentityDetails().withUseSystemAssignedIdentity(false).withUserAssignedIdentityArmUrl("ool"))
            .withRecoveryPointId("totxhojujb").withRehydrationPriority(RehydrationPriority.INVALID)
            .withRehydrationRetentionDuration("dscwxqupevzhf");
        model = BinaryData.fromObject(model).toObject(AzureBackupRestoreWithRehydrationRequest.class);
        Assertions.assertEquals(RecoveryOption.FAIL_IF_EXISTS, model.restoreTargetInfo().recoveryOption());
        Assertions.assertEquals("lmcuvhixb", model.restoreTargetInfo().restoreLocation());
        Assertions.assertEquals(SourceDataStoreType.OPERATIONAL_STORE, model.sourceDataStoreType());
        Assertions.assertEquals("fw", model.sourceResourceId());
        Assertions.assertEquals(false, model.identityDetails().useSystemAssignedIdentity());
        Assertions.assertEquals("ool", model.identityDetails().userAssignedIdentityArmUrl());
        Assertions.assertEquals("totxhojujb", model.recoveryPointId());
        Assertions.assertEquals(RehydrationPriority.INVALID, model.rehydrationPriority());
        Assertions.assertEquals("dscwxqupevzhf", model.rehydrationRetentionDuration());
    }
}
