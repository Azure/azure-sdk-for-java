// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.AzureBackupRestoreWithRehydrationRequest;
import com.azure.resourcemanager.dataprotection.models.IdentityDetails;
import com.azure.resourcemanager.dataprotection.models.RecoveryOption;
import com.azure.resourcemanager.dataprotection.models.RehydrationPriority;
import com.azure.resourcemanager.dataprotection.models.RestoreTargetInfoBase;
import com.azure.resourcemanager.dataprotection.models.SourceDataStoreType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzureBackupRestoreWithRehydrationRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureBackupRestoreWithRehydrationRequest model = BinaryData.fromString(
            "{\"objectType\":\"AzureBackupRestoreWithRehydrationRequest\",\"rehydrationPriority\":\"Invalid\",\"rehydrationRetentionDuration\":\"ectehf\",\"recoveryPointId\":\"qsc\",\"restoreTargetInfo\":{\"objectType\":\"RestoreTargetInfoBase\",\"recoveryOption\":\"FailIfExists\",\"restoreLocation\":\"pvhez\"},\"sourceDataStoreType\":\"OperationalStore\",\"sourceResourceId\":\"q\",\"resourceGuardOperationRequests\":[\"refovgmkqsleyyvx\",\"qjpkcattpngjcrc\",\"zsqpjhvmdajvny\",\"ounqecano\"],\"identityDetails\":{\"useSystemAssignedIdentity\":false,\"userAssignedIdentityArmUrl\":\"hy\"}}")
            .toObject(AzureBackupRestoreWithRehydrationRequest.class);
        Assertions.assertEquals(RecoveryOption.FAIL_IF_EXISTS, model.restoreTargetInfo().recoveryOption());
        Assertions.assertEquals("pvhez", model.restoreTargetInfo().restoreLocation());
        Assertions.assertEquals(SourceDataStoreType.OPERATIONAL_STORE, model.sourceDataStoreType());
        Assertions.assertEquals("q", model.sourceResourceId());
        Assertions.assertEquals("refovgmkqsleyyvx", model.resourceGuardOperationRequests().get(0));
        Assertions.assertFalse(model.identityDetails().useSystemAssignedIdentity());
        Assertions.assertEquals("hy", model.identityDetails().userAssignedIdentityArmUrl());
        Assertions.assertEquals("qsc", model.recoveryPointId());
        Assertions.assertEquals(RehydrationPriority.INVALID, model.rehydrationPriority());
        Assertions.assertEquals("ectehf", model.rehydrationRetentionDuration());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureBackupRestoreWithRehydrationRequest model = new AzureBackupRestoreWithRehydrationRequest()
            .withRestoreTargetInfo(new RestoreTargetInfoBase().withRecoveryOption(RecoveryOption.FAIL_IF_EXISTS)
                .withRestoreLocation("pvhez"))
            .withSourceDataStoreType(SourceDataStoreType.OPERATIONAL_STORE)
            .withSourceResourceId("q")
            .withResourceGuardOperationRequests(
                Arrays.asList("refovgmkqsleyyvx", "qjpkcattpngjcrc", "zsqpjhvmdajvny", "ounqecano"))
            .withIdentityDetails(
                new IdentityDetails().withUseSystemAssignedIdentity(false).withUserAssignedIdentityArmUrl("hy"))
            .withRecoveryPointId("qsc")
            .withRehydrationPriority(RehydrationPriority.INVALID)
            .withRehydrationRetentionDuration("ectehf");
        model = BinaryData.fromObject(model).toObject(AzureBackupRestoreWithRehydrationRequest.class);
        Assertions.assertEquals(RecoveryOption.FAIL_IF_EXISTS, model.restoreTargetInfo().recoveryOption());
        Assertions.assertEquals("pvhez", model.restoreTargetInfo().restoreLocation());
        Assertions.assertEquals(SourceDataStoreType.OPERATIONAL_STORE, model.sourceDataStoreType());
        Assertions.assertEquals("q", model.sourceResourceId());
        Assertions.assertEquals("refovgmkqsleyyvx", model.resourceGuardOperationRequests().get(0));
        Assertions.assertFalse(model.identityDetails().useSystemAssignedIdentity());
        Assertions.assertEquals("hy", model.identityDetails().userAssignedIdentityArmUrl());
        Assertions.assertEquals("qsc", model.recoveryPointId());
        Assertions.assertEquals(RehydrationPriority.INVALID, model.rehydrationPriority());
        Assertions.assertEquals("ectehf", model.rehydrationRetentionDuration());
    }
}
