// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.AzureBackupRestoreRequest;
import com.azure.resourcemanager.dataprotection.models.CrossRegionRestoreDetails;
import com.azure.resourcemanager.dataprotection.models.CrossRegionRestoreRequestObject;
import com.azure.resourcemanager.dataprotection.models.IdentityDetails;
import com.azure.resourcemanager.dataprotection.models.RecoveryOption;
import com.azure.resourcemanager.dataprotection.models.RestoreTargetInfoBase;
import com.azure.resourcemanager.dataprotection.models.SourceDataStoreType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CrossRegionRestoreRequestObjectTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CrossRegionRestoreRequestObject model = BinaryData.fromString(
            "{\"restoreRequestObject\":{\"objectType\":\"AzureBackupRestoreRequest\",\"restoreTargetInfo\":{\"objectType\":\"RestoreTargetInfoBase\",\"recoveryOption\":\"FailIfExists\",\"restoreLocation\":\"kfrlhrxsbky\"},\"sourceDataStoreType\":\"OperationalStore\",\"sourceResourceId\":\"ca\",\"resourceGuardOperationRequests\":[\"bpzkafkuwbc\"],\"identityDetails\":{\"useSystemAssignedIdentity\":false,\"userAssignedIdentityArmUrl\":\"ehhseyvjusrts\"}},\"crossRegionRestoreDetails\":{\"sourceRegion\":\"hspkdeemao\",\"sourceBackupInstanceId\":\"mx\"}}")
            .toObject(CrossRegionRestoreRequestObject.class);
        Assertions.assertEquals(RecoveryOption.FAIL_IF_EXISTS,
            model.restoreRequestObject().restoreTargetInfo().recoveryOption());
        Assertions.assertEquals("kfrlhrxsbky", model.restoreRequestObject().restoreTargetInfo().restoreLocation());
        Assertions.assertEquals(SourceDataStoreType.OPERATIONAL_STORE,
            model.restoreRequestObject().sourceDataStoreType());
        Assertions.assertEquals("ca", model.restoreRequestObject().sourceResourceId());
        Assertions.assertEquals("bpzkafkuwbc", model.restoreRequestObject().resourceGuardOperationRequests().get(0));
        Assertions.assertFalse(model.restoreRequestObject().identityDetails().useSystemAssignedIdentity());
        Assertions.assertEquals("ehhseyvjusrts",
            model.restoreRequestObject().identityDetails().userAssignedIdentityArmUrl());
        Assertions.assertEquals("hspkdeemao", model.crossRegionRestoreDetails().sourceRegion());
        Assertions.assertEquals("mx", model.crossRegionRestoreDetails().sourceBackupInstanceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CrossRegionRestoreRequestObject model = new CrossRegionRestoreRequestObject()
            .withRestoreRequestObject(new AzureBackupRestoreRequest()
                .withRestoreTargetInfo(new RestoreTargetInfoBase().withRecoveryOption(RecoveryOption.FAIL_IF_EXISTS)
                    .withRestoreLocation("kfrlhrxsbky"))
                .withSourceDataStoreType(SourceDataStoreType.OPERATIONAL_STORE)
                .withSourceResourceId("ca")
                .withResourceGuardOperationRequests(Arrays.asList("bpzkafkuwbc"))
                .withIdentityDetails(new IdentityDetails().withUseSystemAssignedIdentity(false)
                    .withUserAssignedIdentityArmUrl("ehhseyvjusrts")))
            .withCrossRegionRestoreDetails(
                new CrossRegionRestoreDetails().withSourceRegion("hspkdeemao").withSourceBackupInstanceId("mx"));
        model = BinaryData.fromObject(model).toObject(CrossRegionRestoreRequestObject.class);
        Assertions.assertEquals(RecoveryOption.FAIL_IF_EXISTS,
            model.restoreRequestObject().restoreTargetInfo().recoveryOption());
        Assertions.assertEquals("kfrlhrxsbky", model.restoreRequestObject().restoreTargetInfo().restoreLocation());
        Assertions.assertEquals(SourceDataStoreType.OPERATIONAL_STORE,
            model.restoreRequestObject().sourceDataStoreType());
        Assertions.assertEquals("ca", model.restoreRequestObject().sourceResourceId());
        Assertions.assertEquals("bpzkafkuwbc", model.restoreRequestObject().resourceGuardOperationRequests().get(0));
        Assertions.assertFalse(model.restoreRequestObject().identityDetails().useSystemAssignedIdentity());
        Assertions.assertEquals("ehhseyvjusrts",
            model.restoreRequestObject().identityDetails().userAssignedIdentityArmUrl());
        Assertions.assertEquals("hspkdeemao", model.crossRegionRestoreDetails().sourceRegion());
        Assertions.assertEquals("mx", model.crossRegionRestoreDetails().sourceBackupInstanceId());
    }
}
