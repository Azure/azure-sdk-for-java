// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dataprotection.models.AzureBackupRestoreRequest;
import com.azure.resourcemanager.dataprotection.models.CrossRegionRestoreDetails;
import com.azure.resourcemanager.dataprotection.models.CrossRegionRestoreRequestObject;
import com.azure.resourcemanager.dataprotection.models.IdentityDetails;
import com.azure.resourcemanager.dataprotection.models.RecoveryOption;
import com.azure.resourcemanager.dataprotection.models.RestoreTargetInfoBase;
import com.azure.resourcemanager.dataprotection.models.SourceDataStoreType;
import org.junit.jupiter.api.Assertions;

public final class CrossRegionRestoreRequestObjectTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CrossRegionRestoreRequestObject model = BinaryData.fromString(
            "{\"restoreRequestObject\":{\"objectType\":\"AzureBackupRestoreRequest\",\"restoreTargetInfo\":{\"objectType\":\"RestoreTargetInfoBase\",\"recoveryOption\":\"FailIfExists\",\"restoreLocation\":\"fxobbcsws\"},\"sourceDataStoreType\":\"SnapshotStore\",\"sourceResourceId\":\"riplrbpbewtg\",\"identityDetails\":{\"useSystemAssignedIdentity\":false,\"userAssignedIdentityArmUrl\":\"c\"}},\"crossRegionRestoreDetails\":{\"sourceRegion\":\"wxzvlvqhjkb\",\"sourceBackupInstanceId\":\"gibtnm\"}}")
            .toObject(CrossRegionRestoreRequestObject.class);
        Assertions.assertEquals(RecoveryOption.FAIL_IF_EXISTS,
            model.restoreRequestObject().restoreTargetInfo().recoveryOption());
        Assertions.assertEquals("fxobbcsws", model.restoreRequestObject().restoreTargetInfo().restoreLocation());
        Assertions.assertEquals(SourceDataStoreType.SNAPSHOT_STORE, model.restoreRequestObject().sourceDataStoreType());
        Assertions.assertEquals("riplrbpbewtg", model.restoreRequestObject().sourceResourceId());
        Assertions.assertEquals(false, model.restoreRequestObject().identityDetails().useSystemAssignedIdentity());
        Assertions.assertEquals("c", model.restoreRequestObject().identityDetails().userAssignedIdentityArmUrl());
        Assertions.assertEquals("wxzvlvqhjkb", model.crossRegionRestoreDetails().sourceRegion());
        Assertions.assertEquals("gibtnm", model.crossRegionRestoreDetails().sourceBackupInstanceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CrossRegionRestoreRequestObject model = new CrossRegionRestoreRequestObject()
            .withRestoreRequestObject(new AzureBackupRestoreRequest()
                .withRestoreTargetInfo(new RestoreTargetInfoBase().withRecoveryOption(RecoveryOption.FAIL_IF_EXISTS)
                    .withRestoreLocation("fxobbcsws"))
                .withSourceDataStoreType(SourceDataStoreType.SNAPSHOT_STORE).withSourceResourceId("riplrbpbewtg")
                .withIdentityDetails(
                    new IdentityDetails().withUseSystemAssignedIdentity(false).withUserAssignedIdentityArmUrl("c")))
            .withCrossRegionRestoreDetails(
                new CrossRegionRestoreDetails().withSourceRegion("wxzvlvqhjkb").withSourceBackupInstanceId("gibtnm"));
        model = BinaryData.fromObject(model).toObject(CrossRegionRestoreRequestObject.class);
        Assertions.assertEquals(RecoveryOption.FAIL_IF_EXISTS,
            model.restoreRequestObject().restoreTargetInfo().recoveryOption());
        Assertions.assertEquals("fxobbcsws", model.restoreRequestObject().restoreTargetInfo().restoreLocation());
        Assertions.assertEquals(SourceDataStoreType.SNAPSHOT_STORE, model.restoreRequestObject().sourceDataStoreType());
        Assertions.assertEquals("riplrbpbewtg", model.restoreRequestObject().sourceResourceId());
        Assertions.assertEquals(false, model.restoreRequestObject().identityDetails().useSystemAssignedIdentity());
        Assertions.assertEquals("c", model.restoreRequestObject().identityDetails().userAssignedIdentityArmUrl());
        Assertions.assertEquals("wxzvlvqhjkb", model.crossRegionRestoreDetails().sourceRegion());
        Assertions.assertEquals("gibtnm", model.crossRegionRestoreDetails().sourceBackupInstanceId());
    }
}
