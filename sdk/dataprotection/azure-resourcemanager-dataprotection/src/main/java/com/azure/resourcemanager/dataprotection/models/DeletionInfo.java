// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Deletion Info. */
@Immutable
public final class DeletionInfo {
    /*
     * Specifies time of deletion
     */
    @JsonProperty(value = "deletionTime", access = JsonProperty.Access.WRITE_ONLY)
    private String deletionTime;

    /*
     * Specifies billing end date
     */
    @JsonProperty(value = "billingEndDate", access = JsonProperty.Access.WRITE_ONLY)
    private String billingEndDate;

    /*
     * Specifies purge time
     */
    @JsonProperty(value = "scheduledPurgeTime", access = JsonProperty.Access.WRITE_ONLY)
    private String scheduledPurgeTime;

    /*
     * Delete activity ID for troubleshooting purpose
     */
    @JsonProperty(value = "deleteActivityID", access = JsonProperty.Access.WRITE_ONLY)
    private String deleteActivityId;

    /** Creates an instance of DeletionInfo class. */
    public DeletionInfo() {
    }

    /**
     * Get the deletionTime property: Specifies time of deletion.
     *
     * @return the deletionTime value.
     */
    public String deletionTime() {
        return this.deletionTime;
    }

    /**
     * Get the billingEndDate property: Specifies billing end date.
     *
     * @return the billingEndDate value.
     */
    public String billingEndDate() {
        return this.billingEndDate;
    }

    /**
     * Get the scheduledPurgeTime property: Specifies purge time.
     *
     * @return the scheduledPurgeTime value.
     */
    public String scheduledPurgeTime() {
        return this.scheduledPurgeTime;
    }

    /**
     * Get the deleteActivityId property: Delete activity ID for troubleshooting purpose.
     *
     * @return the deleteActivityId value.
     */
    public String deleteActivityId() {
        return this.deleteActivityId;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
