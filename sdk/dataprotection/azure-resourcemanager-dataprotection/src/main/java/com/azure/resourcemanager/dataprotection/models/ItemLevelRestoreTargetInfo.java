// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;

/** Restore target info for Item level restore operation. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "objectType")
@JsonTypeName("ItemLevelRestoreTargetInfo")
@Fluent
public final class ItemLevelRestoreTargetInfo extends RestoreTargetInfoBase {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ItemLevelRestoreTargetInfo.class);

    /*
     * Restore Criteria
     */
    @JsonProperty(value = "restoreCriteria", required = true)
    private List<ItemLevelRestoreCriteria> restoreCriteria;

    /*
     * Information of target DS
     */
    @JsonProperty(value = "datasourceInfo", required = true)
    private Datasource datasourceInfo;

    /*
     * Information of target DS Set
     */
    @JsonProperty(value = "datasourceSetInfo")
    private DatasourceSet datasourceSetInfo;

    /**
     * Get the restoreCriteria property: Restore Criteria.
     *
     * @return the restoreCriteria value.
     */
    public List<ItemLevelRestoreCriteria> restoreCriteria() {
        return this.restoreCriteria;
    }

    /**
     * Set the restoreCriteria property: Restore Criteria.
     *
     * @param restoreCriteria the restoreCriteria value to set.
     * @return the ItemLevelRestoreTargetInfo object itself.
     */
    public ItemLevelRestoreTargetInfo withRestoreCriteria(List<ItemLevelRestoreCriteria> restoreCriteria) {
        this.restoreCriteria = restoreCriteria;
        return this;
    }

    /**
     * Get the datasourceInfo property: Information of target DS.
     *
     * @return the datasourceInfo value.
     */
    public Datasource datasourceInfo() {
        return this.datasourceInfo;
    }

    /**
     * Set the datasourceInfo property: Information of target DS.
     *
     * @param datasourceInfo the datasourceInfo value to set.
     * @return the ItemLevelRestoreTargetInfo object itself.
     */
    public ItemLevelRestoreTargetInfo withDatasourceInfo(Datasource datasourceInfo) {
        this.datasourceInfo = datasourceInfo;
        return this;
    }

    /**
     * Get the datasourceSetInfo property: Information of target DS Set.
     *
     * @return the datasourceSetInfo value.
     */
    public DatasourceSet datasourceSetInfo() {
        return this.datasourceSetInfo;
    }

    /**
     * Set the datasourceSetInfo property: Information of target DS Set.
     *
     * @param datasourceSetInfo the datasourceSetInfo value to set.
     * @return the ItemLevelRestoreTargetInfo object itself.
     */
    public ItemLevelRestoreTargetInfo withDatasourceSetInfo(DatasourceSet datasourceSetInfo) {
        this.datasourceSetInfo = datasourceSetInfo;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ItemLevelRestoreTargetInfo withRecoveryOption(RecoveryOption recoveryOption) {
        super.withRecoveryOption(recoveryOption);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ItemLevelRestoreTargetInfo withRestoreLocation(String restoreLocation) {
        super.withRestoreLocation(restoreLocation);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (restoreCriteria() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property restoreCriteria in model ItemLevelRestoreTargetInfo"));
        } else {
            restoreCriteria().forEach(e -> e.validate());
        }
        if (datasourceInfo() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property datasourceInfo in model ItemLevelRestoreTargetInfo"));
        } else {
            datasourceInfo().validate();
        }
        if (datasourceSetInfo() != null) {
            datasourceSetInfo().validate();
        }
    }
}
