// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * The RestoreJobRecoveryPointDetails model.
 */
@Fluent
public final class RestoreJobRecoveryPointDetails implements JsonSerializable<RestoreJobRecoveryPointDetails> {
    /*
     * The recoveryPointID property.
     */
    private String recoveryPointId;

    /*
     * The recoveryPointTime property.
     */
    private OffsetDateTime recoveryPointTime;

    /**
     * Creates an instance of RestoreJobRecoveryPointDetails class.
     */
    public RestoreJobRecoveryPointDetails() {
    }

    /**
     * Get the recoveryPointId property: The recoveryPointID property.
     * 
     * @return the recoveryPointId value.
     */
    public String recoveryPointId() {
        return this.recoveryPointId;
    }

    /**
     * Set the recoveryPointId property: The recoveryPointID property.
     * 
     * @param recoveryPointId the recoveryPointId value to set.
     * @return the RestoreJobRecoveryPointDetails object itself.
     */
    public RestoreJobRecoveryPointDetails withRecoveryPointId(String recoveryPointId) {
        this.recoveryPointId = recoveryPointId;
        return this;
    }

    /**
     * Get the recoveryPointTime property: The recoveryPointTime property.
     * 
     * @return the recoveryPointTime value.
     */
    public OffsetDateTime recoveryPointTime() {
        return this.recoveryPointTime;
    }

    /**
     * Set the recoveryPointTime property: The recoveryPointTime property.
     * 
     * @param recoveryPointTime the recoveryPointTime value to set.
     * @return the RestoreJobRecoveryPointDetails object itself.
     */
    public RestoreJobRecoveryPointDetails withRecoveryPointTime(OffsetDateTime recoveryPointTime) {
        this.recoveryPointTime = recoveryPointTime;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("recoveryPointID", this.recoveryPointId);
        jsonWriter.writeStringField("recoveryPointTime",
            this.recoveryPointTime == null
                ? null
                : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.recoveryPointTime));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RestoreJobRecoveryPointDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RestoreJobRecoveryPointDetails if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the RestoreJobRecoveryPointDetails.
     */
    public static RestoreJobRecoveryPointDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RestoreJobRecoveryPointDetails deserializedRestoreJobRecoveryPointDetails
                = new RestoreJobRecoveryPointDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("recoveryPointID".equals(fieldName)) {
                    deserializedRestoreJobRecoveryPointDetails.recoveryPointId = reader.getString();
                } else if ("recoveryPointTime".equals(fieldName)) {
                    deserializedRestoreJobRecoveryPointDetails.recoveryPointTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRestoreJobRecoveryPointDetails;
        });
    }
}
