// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Information about BI whose secondary RecoveryPoints are requested
 * Source region and
 * BI ARM path.
 */
@Fluent
public final class FetchSecondaryRPsRequestParameters implements JsonSerializable<FetchSecondaryRPsRequestParameters> {
    /*
     * Source region in which BackupInstance is located
     */
    private String sourceRegion;

    /*
     * ARM Path of BackupInstance
     */
    private String sourceBackupInstanceId;

    /**
     * Creates an instance of FetchSecondaryRPsRequestParameters class.
     */
    public FetchSecondaryRPsRequestParameters() {
    }

    /**
     * Get the sourceRegion property: Source region in which BackupInstance is located.
     * 
     * @return the sourceRegion value.
     */
    public String sourceRegion() {
        return this.sourceRegion;
    }

    /**
     * Set the sourceRegion property: Source region in which BackupInstance is located.
     * 
     * @param sourceRegion the sourceRegion value to set.
     * @return the FetchSecondaryRPsRequestParameters object itself.
     */
    public FetchSecondaryRPsRequestParameters withSourceRegion(String sourceRegion) {
        this.sourceRegion = sourceRegion;
        return this;
    }

    /**
     * Get the sourceBackupInstanceId property: ARM Path of BackupInstance.
     * 
     * @return the sourceBackupInstanceId value.
     */
    public String sourceBackupInstanceId() {
        return this.sourceBackupInstanceId;
    }

    /**
     * Set the sourceBackupInstanceId property: ARM Path of BackupInstance.
     * 
     * @param sourceBackupInstanceId the sourceBackupInstanceId value to set.
     * @return the FetchSecondaryRPsRequestParameters object itself.
     */
    public FetchSecondaryRPsRequestParameters withSourceBackupInstanceId(String sourceBackupInstanceId) {
        this.sourceBackupInstanceId = sourceBackupInstanceId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("sourceRegion", this.sourceRegion);
        jsonWriter.writeStringField("sourceBackupInstanceId", this.sourceBackupInstanceId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FetchSecondaryRPsRequestParameters from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FetchSecondaryRPsRequestParameters if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the FetchSecondaryRPsRequestParameters.
     */
    public static FetchSecondaryRPsRequestParameters fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            FetchSecondaryRPsRequestParameters deserializedFetchSecondaryRPsRequestParameters
                = new FetchSecondaryRPsRequestParameters();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("sourceRegion".equals(fieldName)) {
                    deserializedFetchSecondaryRPsRequestParameters.sourceRegion = reader.getString();
                } else if ("sourceBackupInstanceId".equals(fieldName)) {
                    deserializedFetchSecondaryRPsRequestParameters.sourceBackupInstanceId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedFetchSecondaryRPsRequestParameters;
        });
    }
}
