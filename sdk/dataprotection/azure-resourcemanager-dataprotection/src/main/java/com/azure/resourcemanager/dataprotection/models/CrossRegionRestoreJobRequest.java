// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Details of CRR Job to be fetched.
 */
@Fluent
public final class CrossRegionRestoreJobRequest implements JsonSerializable<CrossRegionRestoreJobRequest> {
    /*
     * The sourceRegion property.
     */
    private String sourceRegion;

    /*
     * The sourceBackupVaultId property.
     */
    private String sourceBackupVaultId;

    /*
     * The jobId property.
     */
    private String jobId;

    /**
     * Creates an instance of CrossRegionRestoreJobRequest class.
     */
    public CrossRegionRestoreJobRequest() {
    }

    /**
     * Get the sourceRegion property: The sourceRegion property.
     * 
     * @return the sourceRegion value.
     */
    public String sourceRegion() {
        return this.sourceRegion;
    }

    /**
     * Set the sourceRegion property: The sourceRegion property.
     * 
     * @param sourceRegion the sourceRegion value to set.
     * @return the CrossRegionRestoreJobRequest object itself.
     */
    public CrossRegionRestoreJobRequest withSourceRegion(String sourceRegion) {
        this.sourceRegion = sourceRegion;
        return this;
    }

    /**
     * Get the sourceBackupVaultId property: The sourceBackupVaultId property.
     * 
     * @return the sourceBackupVaultId value.
     */
    public String sourceBackupVaultId() {
        return this.sourceBackupVaultId;
    }

    /**
     * Set the sourceBackupVaultId property: The sourceBackupVaultId property.
     * 
     * @param sourceBackupVaultId the sourceBackupVaultId value to set.
     * @return the CrossRegionRestoreJobRequest object itself.
     */
    public CrossRegionRestoreJobRequest withSourceBackupVaultId(String sourceBackupVaultId) {
        this.sourceBackupVaultId = sourceBackupVaultId;
        return this;
    }

    /**
     * Get the jobId property: The jobId property.
     * 
     * @return the jobId value.
     */
    public String jobId() {
        return this.jobId;
    }

    /**
     * Set the jobId property: The jobId property.
     * 
     * @param jobId the jobId value to set.
     * @return the CrossRegionRestoreJobRequest object itself.
     */
    public CrossRegionRestoreJobRequest withJobId(String jobId) {
        this.jobId = jobId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (sourceRegion() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property sourceRegion in model CrossRegionRestoreJobRequest"));
        }
        if (sourceBackupVaultId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property sourceBackupVaultId in model CrossRegionRestoreJobRequest"));
        }
        if (jobId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property jobId in model CrossRegionRestoreJobRequest"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(CrossRegionRestoreJobRequest.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("sourceRegion", this.sourceRegion);
        jsonWriter.writeStringField("sourceBackupVaultId", this.sourceBackupVaultId);
        jsonWriter.writeStringField("jobId", this.jobId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CrossRegionRestoreJobRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CrossRegionRestoreJobRequest if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CrossRegionRestoreJobRequest.
     */
    public static CrossRegionRestoreJobRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CrossRegionRestoreJobRequest deserializedCrossRegionRestoreJobRequest = new CrossRegionRestoreJobRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("sourceRegion".equals(fieldName)) {
                    deserializedCrossRegionRestoreJobRequest.sourceRegion = reader.getString();
                } else if ("sourceBackupVaultId".equals(fieldName)) {
                    deserializedCrossRegionRestoreJobRequest.sourceBackupVaultId = reader.getString();
                } else if ("jobId".equals(fieldName)) {
                    deserializedCrossRegionRestoreJobRequest.jobId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCrossRegionRestoreJobRequest;
        });
    }
}
