// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * This class contains all the details about a critical operation.
 */
@Immutable
public final class ResourceGuardOperation implements JsonSerializable<ResourceGuardOperation> {
    /*
     * Name of the critical operation.
     */
    private String vaultCriticalOperation;

    /*
     * Type of resource request.
     */
    private String requestResourceType;

    /**
     * Creates an instance of ResourceGuardOperation class.
     */
    public ResourceGuardOperation() {
    }

    /**
     * Get the vaultCriticalOperation property: Name of the critical operation.
     * 
     * @return the vaultCriticalOperation value.
     */
    public String vaultCriticalOperation() {
        return this.vaultCriticalOperation;
    }

    /**
     * Get the requestResourceType property: Type of resource request.
     * 
     * @return the requestResourceType value.
     */
    public String requestResourceType() {
        return this.requestResourceType;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ResourceGuardOperation from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ResourceGuardOperation if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ResourceGuardOperation.
     */
    public static ResourceGuardOperation fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ResourceGuardOperation deserializedResourceGuardOperation = new ResourceGuardOperation();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("vaultCriticalOperation".equals(fieldName)) {
                    deserializedResourceGuardOperation.vaultCriticalOperation = reader.getString();
                } else if ("requestResourceType".equals(fieldName)) {
                    deserializedResourceGuardOperation.requestResourceType = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedResourceGuardOperation;
        });
    }
}
