// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of BackupPolicies. */
public interface BackupPolicies {
    /**
     * Returns list of backup policies belonging to a backup vault.
     *
     * @param vaultName The name of the backup vault.
     * @param resourceGroupName The name of the resource group where the backup vault is present.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of BaseBackupPolicy resources.
     */
    PagedIterable<BaseBackupPolicyResource> list(String vaultName, String resourceGroupName);

    /**
     * Returns list of backup policies belonging to a backup vault.
     *
     * @param vaultName The name of the backup vault.
     * @param resourceGroupName The name of the resource group where the backup vault is present.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of BaseBackupPolicy resources.
     */
    PagedIterable<BaseBackupPolicyResource> list(String vaultName, String resourceGroupName, Context context);

    /**
     * Gets a backup policy belonging to a backup vault.
     *
     * @param vaultName The name of the backup vault.
     * @param resourceGroupName The name of the resource group where the backup vault is present.
     * @param backupPolicyName The backupPolicyName parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a backup policy belonging to a backup vault.
     */
    BaseBackupPolicyResource get(String vaultName, String resourceGroupName, String backupPolicyName);

    /**
     * Gets a backup policy belonging to a backup vault.
     *
     * @param vaultName The name of the backup vault.
     * @param resourceGroupName The name of the resource group where the backup vault is present.
     * @param backupPolicyName The backupPolicyName parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a backup policy belonging to a backup vault.
     */
    Response<BaseBackupPolicyResource> getWithResponse(
        String vaultName, String resourceGroupName, String backupPolicyName, Context context);

    /**
     * Deletes a backup policy belonging to a backup vault.
     *
     * @param vaultName The name of the backup vault.
     * @param resourceGroupName The name of the resource group where the backup vault is present.
     * @param backupPolicyName The backupPolicyName parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String vaultName, String resourceGroupName, String backupPolicyName);

    /**
     * Deletes a backup policy belonging to a backup vault.
     *
     * @param vaultName The name of the backup vault.
     * @param resourceGroupName The name of the resource group where the backup vault is present.
     * @param backupPolicyName The backupPolicyName parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    Response<Void> deleteWithResponse(
        String vaultName, String resourceGroupName, String backupPolicyName, Context context);

    /**
     * Gets a backup policy belonging to a backup vault.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a backup policy belonging to a backup vault.
     */
    BaseBackupPolicyResource getById(String id);

    /**
     * Gets a backup policy belonging to a backup vault.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a backup policy belonging to a backup vault.
     */
    Response<BaseBackupPolicyResource> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a backup policy belonging to a backup vault.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes a backup policy belonging to a backup vault.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new BaseBackupPolicyResource resource.
     *
     * @param name resource name.
     * @return the first stage of the new BaseBackupPolicyResource definition.
     */
    BaseBackupPolicyResource.DefinitionStages.Blank define(String name);
}
