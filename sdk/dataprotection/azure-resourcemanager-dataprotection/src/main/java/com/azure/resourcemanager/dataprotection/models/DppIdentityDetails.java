// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Identity details. */
@Fluent
public final class DppIdentityDetails {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DppIdentityDetails.class);

    /*
     * The object ID of the service principal object for the managed identity
     * that is used to grant role-based access to an Azure resource.
     */
    @JsonProperty(value = "principalId", access = JsonProperty.Access.WRITE_ONLY)
    private String principalId;

    /*
     * A Globally Unique Identifier (GUID) that represents the Azure AD tenant
     * where the resource is now a member.
     */
    @JsonProperty(value = "tenantId", access = JsonProperty.Access.WRITE_ONLY)
    private String tenantId;

    /*
     * The identityType which can be either SystemAssigned or None
     */
    @JsonProperty(value = "type")
    private String type;

    /**
     * Get the principalId property: The object ID of the service principal object for the managed identity that is used
     * to grant role-based access to an Azure resource.
     *
     * @return the principalId value.
     */
    public String principalId() {
        return this.principalId;
    }

    /**
     * Get the tenantId property: A Globally Unique Identifier (GUID) that represents the Azure AD tenant where the
     * resource is now a member.
     *
     * @return the tenantId value.
     */
    public String tenantId() {
        return this.tenantId;
    }

    /**
     * Get the type property: The identityType which can be either SystemAssigned or None.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: The identityType which can be either SystemAssigned or None.
     *
     * @param type the type value to set.
     * @return the DppIdentityDetails object itself.
     */
    public DppIdentityDetails withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
