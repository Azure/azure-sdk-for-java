// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.dataprotection.DataProtectionManager;
import com.azure.resourcemanager.dataprotection.fluent.ResourceProvidersClient;
import com.azure.resourcemanager.dataprotection.fluent.models.BackupVaultResourceInner;
import com.azure.resourcemanager.dataprotection.fluent.models.FeatureValidationResponseBaseInner;
import com.azure.resourcemanager.dataprotection.fluent.models.OperationResourceInner;
import com.azure.resourcemanager.dataprotection.models.BackupVaultResource;
import com.azure.resourcemanager.dataprotection.models.FeatureValidationRequestBase;
import com.azure.resourcemanager.dataprotection.models.FeatureValidationResponseBase;
import com.azure.resourcemanager.dataprotection.models.OperationResource;
import com.azure.resourcemanager.dataprotection.models.ResourceProviders;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class ResourceProvidersImpl implements ResourceProviders {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ResourceProvidersImpl.class);

    private final ResourceProvidersClient innerClient;

    private final DataProtectionManager serviceManager;

    public ResourceProvidersImpl(ResourceProvidersClient innerClient, DataProtectionManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public OperationResource getOperationStatus(String location, String operationId) {
        OperationResourceInner inner = this.serviceClient().getOperationStatus(location, operationId);
        if (inner != null) {
            return new OperationResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<OperationResource> getOperationStatusWithResponse(
        String location, String operationId, Context context) {
        Response<OperationResourceInner> inner =
            this.serviceClient().getOperationStatusWithResponse(location, operationId, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new OperationResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public BackupVaultResource getOperationResultPatch(String vaultName, String resourceGroupName, String operationId) {
        BackupVaultResourceInner inner =
            this.serviceClient().getOperationResultPatch(vaultName, resourceGroupName, operationId);
        if (inner != null) {
            return new BackupVaultResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<BackupVaultResource> getOperationResultPatchWithResponse(
        String vaultName, String resourceGroupName, String operationId, Context context) {
        Response<BackupVaultResourceInner> inner =
            this
                .serviceClient()
                .getOperationResultPatchWithResponse(vaultName, resourceGroupName, operationId, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new BackupVaultResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public FeatureValidationResponseBase checkFeatureSupport(String location, FeatureValidationRequestBase parameters) {
        FeatureValidationResponseBaseInner inner = this.serviceClient().checkFeatureSupport(location, parameters);
        if (inner != null) {
            return new FeatureValidationResponseBaseImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<FeatureValidationResponseBase> checkFeatureSupportWithResponse(
        String location, FeatureValidationRequestBase parameters, Context context) {
        Response<FeatureValidationResponseBaseInner> inner =
            this.serviceClient().checkFeatureSupportWithResponse(location, parameters, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new FeatureValidationResponseBaseImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private ResourceProvidersClient serviceClient() {
        return this.innerClient;
    }

    private DataProtectionManager manager() {
        return this.serviceManager;
    }
}
