// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * ExportJobsResult
 * 
 * The result for export jobs containing blob details.
 */
@Immutable
public final class ExportJobsResultInner implements JsonSerializable<ExportJobsResultInner> {
    /*
     * URL of the blob into which the serialized string of list of jobs is exported.
     */
    private String blobUrl;

    /*
     * SAS key to access the blob.
     */
    private String blobSasKey;

    /*
     * URL of the blob into which the ExcelFile is uploaded.
     */
    private String excelFileBlobUrl;

    /*
     * SAS key to access the ExcelFile blob.
     */
    private String excelFileBlobSasKey;

    /**
     * Creates an instance of ExportJobsResultInner class.
     */
    public ExportJobsResultInner() {
    }

    /**
     * Get the blobUrl property: URL of the blob into which the serialized string of list of jobs is exported.
     * 
     * @return the blobUrl value.
     */
    public String blobUrl() {
        return this.blobUrl;
    }

    /**
     * Get the blobSasKey property: SAS key to access the blob.
     * 
     * @return the blobSasKey value.
     */
    public String blobSasKey() {
        return this.blobSasKey;
    }

    /**
     * Get the excelFileBlobUrl property: URL of the blob into which the ExcelFile is uploaded.
     * 
     * @return the excelFileBlobUrl value.
     */
    public String excelFileBlobUrl() {
        return this.excelFileBlobUrl;
    }

    /**
     * Get the excelFileBlobSasKey property: SAS key to access the ExcelFile blob.
     * 
     * @return the excelFileBlobSasKey value.
     */
    public String excelFileBlobSasKey() {
        return this.excelFileBlobSasKey;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ExportJobsResultInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ExportJobsResultInner if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ExportJobsResultInner.
     */
    public static ExportJobsResultInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ExportJobsResultInner deserializedExportJobsResultInner = new ExportJobsResultInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("blobUrl".equals(fieldName)) {
                    deserializedExportJobsResultInner.blobUrl = reader.getString();
                } else if ("blobSasKey".equals(fieldName)) {
                    deserializedExportJobsResultInner.blobSasKey = reader.getString();
                } else if ("excelFileBlobUrl".equals(fieldName)) {
                    deserializedExportJobsResultInner.excelFileBlobUrl = reader.getString();
                } else if ("excelFileBlobSasKey".equals(fieldName)) {
                    deserializedExportJobsResultInner.excelFileBlobSasKey = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedExportJobsResultInner;
        });
    }
}
