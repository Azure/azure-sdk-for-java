// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Patch Request content for Microsoft.DataProtection resources. */
@Fluent
public final class PatchResourceRequestInput {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(PatchResourceRequestInput.class);

    /*
     * Input Managed Identity Details
     */
    @JsonProperty(value = "identity")
    private DppIdentityDetails identity;

    /*
     * Resource tags.
     */
    @JsonProperty(value = "tags")
    private Map<String, String> tags;

    /**
     * Get the identity property: Input Managed Identity Details.
     *
     * @return the identity value.
     */
    public DppIdentityDetails identity() {
        return this.identity;
    }

    /**
     * Set the identity property: Input Managed Identity Details.
     *
     * @param identity the identity value to set.
     * @return the PatchResourceRequestInput object itself.
     */
    public PatchResourceRequestInput withIdentity(DppIdentityDetails identity) {
        this.identity = identity;
        return this;
    }

    /**
     * Get the tags property: Resource tags.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Resource tags.
     *
     * @param tags the tags value to set.
     * @return the PatchResourceRequestInput object itself.
     */
    public PatchResourceRequestInput withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (identity() != null) {
            identity().validate();
        }
    }
}
