/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.storagesync.v2019_02_01.implementation;

import com.microsoft.azure.management.storagesync.v2019_02_01.Workflow;
import com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl;
import rx.Observable;

class WorkflowImpl extends IndexableRefreshableWrapperImpl<Workflow, WorkflowInner> implements Workflow {
    private final StorageSyncManager manager;
    private String resourceGroupName;
    private String storageSyncServiceName;
    private String workflowId;

    WorkflowImpl(WorkflowInner inner,  StorageSyncManager manager) {
        super(null, inner);
        this.manager = manager;
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.storageSyncServiceName = IdParsingUtils.getValueFromIdByName(inner.id(), "storageSyncServices");
        this.workflowId = IdParsingUtils.getValueFromIdByName(inner.id(), "workflows");
    }

    @Override
    public StorageSyncManager manager() {
        return this.manager;
    }

    @Override
    protected Observable<WorkflowInner> getInnerAsync() {
        WorkflowsInner client = this.manager().inner().workflows();
        return client.getAsync(this.resourceGroupName, this.storageSyncServiceName, this.workflowId);
    }



    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String lastOperationId() {
        return this.inner().lastOperationId();
    }

    @Override
    public String lastStepName() {
        return this.inner().lastStepName();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String operation() {
        return this.inner().operation();
    }

    @Override
    public String status() {
        return this.inner().status();
    }

    @Override
    public String steps() {
        return this.inner().steps();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

}
