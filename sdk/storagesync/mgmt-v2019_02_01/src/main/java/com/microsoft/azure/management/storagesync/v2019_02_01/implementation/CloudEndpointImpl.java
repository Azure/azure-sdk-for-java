/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.storagesync.v2019_02_01.implementation;

import com.microsoft.azure.management.storagesync.v2019_02_01.CloudEndpoint;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;
import com.microsoft.azure.management.storagesync.v2019_02_01.CloudEndpointCreateParameters;
import rx.functions.Func1;

class CloudEndpointImpl extends CreatableUpdatableImpl<CloudEndpoint, CloudEndpointInner, CloudEndpointImpl> implements CloudEndpoint, CloudEndpoint.Definition, CloudEndpoint.Update {
    private final StorageSyncManager manager;
    private String resourceGroupName;
    private String storageSyncServiceName;
    private String syncGroupName;
    private String cloudEndpointName;
    private CloudEndpointCreateParameters createOrUpdateParameter;

    CloudEndpointImpl(String name, StorageSyncManager manager) {
        super(name, new CloudEndpointInner());
        this.manager = manager;
        // Set resource name
        this.cloudEndpointName = name;
        //
        this.createOrUpdateParameter = new CloudEndpointCreateParameters();
    }

    CloudEndpointImpl(CloudEndpointInner inner, StorageSyncManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.cloudEndpointName = inner.name();
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.storageSyncServiceName = IdParsingUtils.getValueFromIdByName(inner.id(), "storageSyncServices");
        this.syncGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "syncGroups");
        this.cloudEndpointName = IdParsingUtils.getValueFromIdByName(inner.id(), "cloudEndpoints");
        //
        this.createOrUpdateParameter = new CloudEndpointCreateParameters();
    }

    @Override
    public StorageSyncManager manager() {
        return this.manager;
    }

    @Override
    public Observable<CloudEndpoint> createResourceAsync() {
        CloudEndpointsInner client = this.manager().inner().cloudEndpoints();
        return client.createAsync(this.resourceGroupName, this.storageSyncServiceName, this.syncGroupName, this.cloudEndpointName, this.createOrUpdateParameter)
            .map(new Func1<CloudEndpointInner, CloudEndpointInner>() {
               @Override
               public CloudEndpointInner call(CloudEndpointInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<CloudEndpoint> updateResourceAsync() {
        CloudEndpointsInner client = this.manager().inner().cloudEndpoints();
        return client.createAsync(this.resourceGroupName, this.storageSyncServiceName, this.syncGroupName, this.cloudEndpointName, this.createOrUpdateParameter)
            .map(new Func1<CloudEndpointInner, CloudEndpointInner>() {
               @Override
               public CloudEndpointInner call(CloudEndpointInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<CloudEndpointInner> getInnerAsync() {
        CloudEndpointsInner client = this.manager().inner().cloudEndpoints();
        return client.getAsync(this.resourceGroupName, this.storageSyncServiceName, this.syncGroupName, this.cloudEndpointName);
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }

    private void resetCreateUpdateParameters() {
        this.createOrUpdateParameter = new CloudEndpointCreateParameters();
    }

    @Override
    public String azureFileShareName() {
        return this.inner().azureFileShareName();
    }

    @Override
    public String backupEnabled() {
        return this.inner().backupEnabled();
    }

    @Override
    public String friendlyName() {
        return this.inner().friendlyName();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String lastOperationName() {
        return this.inner().lastOperationName();
    }

    @Override
    public String lastWorkflowId() {
        return this.inner().lastWorkflowId();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String partnershipId() {
        return this.inner().partnershipId();
    }

    @Override
    public String provisioningState() {
        return this.inner().provisioningState();
    }

    @Override
    public String storageAccountResourceId() {
        return this.inner().storageAccountResourceId();
    }

    @Override
    public String storageAccountTenantId() {
        return this.inner().storageAccountTenantId();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public CloudEndpointImpl withExistingSyncGroup(String resourceGroupName, String storageSyncServiceName, String syncGroupName) {
        this.resourceGroupName = resourceGroupName;
        this.storageSyncServiceName = storageSyncServiceName;
        this.syncGroupName = syncGroupName;
        return this;
    }

    @Override
    public CloudEndpointImpl withAzureFileShareName(String azureFileShareName) {
        this.createOrUpdateParameter.withAzureFileShareName(azureFileShareName);
        return this;
    }

    @Override
    public CloudEndpointImpl withStorageAccountResourceId(String storageAccountResourceId) {
        this.createOrUpdateParameter.withStorageAccountResourceId(storageAccountResourceId);
        return this;
    }

    @Override
    public CloudEndpointImpl withStorageAccountTenantId(String storageAccountTenantId) {
        this.createOrUpdateParameter.withStorageAccountTenantId(storageAccountTenantId);
        return this;
    }

}
