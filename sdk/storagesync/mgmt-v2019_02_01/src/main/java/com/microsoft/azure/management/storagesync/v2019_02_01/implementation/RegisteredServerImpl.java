/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.storagesync.v2019_02_01.implementation;

import com.microsoft.azure.management.storagesync.v2019_02_01.RegisteredServer;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;
import com.microsoft.azure.management.storagesync.v2019_02_01.RegisteredServerCreateParameters;
import rx.functions.Func1;

class RegisteredServerImpl extends CreatableUpdatableImpl<RegisteredServer, RegisteredServerInner, RegisteredServerImpl> implements RegisteredServer, RegisteredServer.Definition, RegisteredServer.Update {
    private final StorageSyncManager manager;
    private String resourceGroupName;
    private String storageSyncServiceName;
    private String serverId;
    private RegisteredServerCreateParameters createOrUpdateParameter;

    RegisteredServerImpl(String name, StorageSyncManager manager) {
        super(name, new RegisteredServerInner());
        this.manager = manager;
        // Set resource name
        this.serverId = name;
        //
        this.createOrUpdateParameter = new RegisteredServerCreateParameters();
    }

    RegisteredServerImpl(RegisteredServerInner inner, StorageSyncManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.serverId = inner.name();
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.storageSyncServiceName = IdParsingUtils.getValueFromIdByName(inner.id(), "storageSyncServices");
        this.serverId = IdParsingUtils.getValueFromIdByName(inner.id(), "registeredServers");
        //
        this.createOrUpdateParameter = new RegisteredServerCreateParameters();
    }

    @Override
    public StorageSyncManager manager() {
        return this.manager;
    }

    @Override
    public Observable<RegisteredServer> createResourceAsync() {
        RegisteredServersInner client = this.manager().inner().registeredServers();
        return client.createAsync(this.resourceGroupName, this.storageSyncServiceName, this.serverId, this.createOrUpdateParameter)
            .map(new Func1<RegisteredServerInner, RegisteredServerInner>() {
               @Override
               public RegisteredServerInner call(RegisteredServerInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<RegisteredServer> updateResourceAsync() {
        RegisteredServersInner client = this.manager().inner().registeredServers();
        return client.createAsync(this.resourceGroupName, this.storageSyncServiceName, this.serverId, this.createOrUpdateParameter)
            .map(new Func1<RegisteredServerInner, RegisteredServerInner>() {
               @Override
               public RegisteredServerInner call(RegisteredServerInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<RegisteredServerInner> getInnerAsync() {
        RegisteredServersInner client = this.manager().inner().registeredServers();
        return client.getAsync(this.resourceGroupName, this.storageSyncServiceName, this.serverId);
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }

    private void resetCreateUpdateParameters() {
        this.createOrUpdateParameter = new RegisteredServerCreateParameters();
    }

    @Override
    public String agentVersion() {
        return this.inner().agentVersion();
    }

    @Override
    public String clusterId() {
        return this.inner().clusterId();
    }

    @Override
    public String clusterName() {
        return this.inner().clusterName();
    }

    @Override
    public String discoveryEndpointUri() {
        return this.inner().discoveryEndpointUri();
    }

    @Override
    public String friendlyName() {
        return this.inner().friendlyName();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String lastHeartBeat() {
        return this.inner().lastHeartBeat();
    }

    @Override
    public String lastOperationName() {
        return this.inner().lastOperationName();
    }

    @Override
    public String lastWorkflowId() {
        return this.inner().lastWorkflowId();
    }

    @Override
    public String managementEndpointUri() {
        return this.inner().managementEndpointUri();
    }

    @Override
    public String monitoringConfiguration() {
        return this.inner().monitoringConfiguration();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String provisioningState() {
        return this.inner().provisioningState();
    }

    @Override
    public String resourceLocation() {
        return this.inner().resourceLocation();
    }

    @Override
    public String serverCertificate() {
        return this.inner().serverCertificate();
    }

    @Override
    public String serverId() {
        return this.inner().serverId();
    }

    @Override
    public Integer serverManagementErrorCode() {
        return this.inner().serverManagementErrorCode();
    }

    @Override
    public String serverOSVersion() {
        return this.inner().serverOSVersion();
    }

    @Override
    public String serverRole() {
        return this.inner().serverRole();
    }

    @Override
    public String serviceLocation() {
        return this.inner().serviceLocation();
    }

    @Override
    public String storageSyncServiceUid() {
        return this.inner().storageSyncServiceUid();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public RegisteredServerImpl withExistingStorageSyncService(String resourceGroupName, String storageSyncServiceName) {
        this.resourceGroupName = resourceGroupName;
        this.storageSyncServiceName = storageSyncServiceName;
        return this;
    }

    @Override
    public RegisteredServerImpl withAgentVersion(String agentVersion) {
        this.createOrUpdateParameter.withAgentVersion(agentVersion);
        return this;
    }

    @Override
    public RegisteredServerImpl withClusterId(String clusterId) {
        this.createOrUpdateParameter.withClusterId(clusterId);
        return this;
    }

    @Override
    public RegisteredServerImpl withClusterName(String clusterName) {
        this.createOrUpdateParameter.withClusterName(clusterName);
        return this;
    }

    @Override
    public RegisteredServerImpl withFriendlyName(String friendlyName) {
        this.createOrUpdateParameter.withFriendlyName(friendlyName);
        return this;
    }

    @Override
    public RegisteredServerImpl withLastHeartBeat(String lastHeartBeat) {
        this.createOrUpdateParameter.withLastHeartBeat(lastHeartBeat);
        return this;
    }

    @Override
    public RegisteredServerImpl withServerCertificate(String serverCertificate) {
        this.createOrUpdateParameter.withServerCertificate(serverCertificate);
        return this;
    }

    @Override
    public RegisteredServerImpl withServerId(String serverId) {
        this.createOrUpdateParameter.withServerId(serverId);
        return this;
    }

    @Override
    public RegisteredServerImpl withServerOSVersion(String serverOSVersion) {
        this.createOrUpdateParameter.withServerOSVersion(serverOSVersion);
        return this;
    }

    @Override
    public RegisteredServerImpl withServerRole(String serverRole) {
        this.createOrUpdateParameter.withServerRole(serverRole);
        return this;
    }

}
