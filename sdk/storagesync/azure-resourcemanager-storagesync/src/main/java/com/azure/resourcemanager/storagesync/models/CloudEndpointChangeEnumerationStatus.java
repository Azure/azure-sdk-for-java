// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagesync.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Cloud endpoint change enumeration status object. */
@Immutable
public final class CloudEndpointChangeEnumerationStatus {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(CloudEndpointChangeEnumerationStatus.class);

    /*
     * Last updated timestamp
     */
    @JsonProperty(value = "lastUpdatedTimestamp", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime lastUpdatedTimestamp;

    /*
     * Status of last completed change enumeration
     */
    @JsonProperty(value = "lastEnumerationStatus", access = JsonProperty.Access.WRITE_ONLY)
    private CloudEndpointLastChangeEnumerationStatus lastEnumerationStatus;

    /*
     * Change enumeration activity
     */
    @JsonProperty(value = "activity", access = JsonProperty.Access.WRITE_ONLY)
    private CloudEndpointChangeEnumerationActivity activity;

    /**
     * Get the lastUpdatedTimestamp property: Last updated timestamp.
     *
     * @return the lastUpdatedTimestamp value.
     */
    public OffsetDateTime lastUpdatedTimestamp() {
        return this.lastUpdatedTimestamp;
    }

    /**
     * Get the lastEnumerationStatus property: Status of last completed change enumeration.
     *
     * @return the lastEnumerationStatus value.
     */
    public CloudEndpointLastChangeEnumerationStatus lastEnumerationStatus() {
        return this.lastEnumerationStatus;
    }

    /**
     * Get the activity property: Change enumeration activity.
     *
     * @return the activity value.
     */
    public CloudEndpointChangeEnumerationActivity activity() {
        return this.activity;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (lastEnumerationStatus() != null) {
            lastEnumerationStatus().validate();
        }
        if (activity() != null) {
            activity().validate();
        }
    }
}
