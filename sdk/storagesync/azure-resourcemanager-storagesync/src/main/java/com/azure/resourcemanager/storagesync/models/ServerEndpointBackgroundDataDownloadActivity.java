// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagesync.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Background data download activity object. */
@Immutable
public final class ServerEndpointBackgroundDataDownloadActivity {
    @JsonIgnore
    private final ClientLogger logger = new ClientLogger(ServerEndpointBackgroundDataDownloadActivity.class);

    /*
     * Timestamp when properties were updated
     */
    @JsonProperty(value = "timestamp", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime timestamp;

    /*
     * Timestamp when the operation started
     */
    @JsonProperty(value = "startedTimestamp", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime startedTimestamp;

    /*
     * Progress percentage
     */
    @JsonProperty(value = "percentProgress", access = JsonProperty.Access.WRITE_ONLY)
    private Integer percentProgress;

    /*
     * Running count of bytes downloaded
     */
    @JsonProperty(value = "downloadedBytes", access = JsonProperty.Access.WRITE_ONLY)
    private Long downloadedBytes;

    /**
     * Get the timestamp property: Timestamp when properties were updated.
     *
     * @return the timestamp value.
     */
    public OffsetDateTime timestamp() {
        return this.timestamp;
    }

    /**
     * Get the startedTimestamp property: Timestamp when the operation started.
     *
     * @return the startedTimestamp value.
     */
    public OffsetDateTime startedTimestamp() {
        return this.startedTimestamp;
    }

    /**
     * Get the percentProgress property: Progress percentage.
     *
     * @return the percentProgress value.
     */
    public Integer percentProgress() {
        return this.percentProgress;
    }

    /**
     * Get the downloadedBytes property: Running count of bytes downloaded.
     *
     * @return the downloadedBytes value.
     */
    public Long downloadedBytes() {
        return this.downloadedBytes;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
