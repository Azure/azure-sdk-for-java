// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagesync.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Status of the volume free space policy. */
@Immutable
public final class CloudTieringVolumeFreeSpacePolicyStatus {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(CloudTieringVolumeFreeSpacePolicyStatus.class);

    /*
     * Last updated timestamp
     */
    @JsonProperty(value = "lastUpdatedTimestamp", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime lastUpdatedTimestamp;

    /*
     * In the case where multiple server endpoints are present in a volume, an
     * effective free space policy is applied.
     */
    @JsonProperty(value = "effectiveVolumeFreeSpacePolicy", access = JsonProperty.Access.WRITE_ONLY)
    private Integer effectiveVolumeFreeSpacePolicy;

    /*
     * Current volume free space percentage.
     */
    @JsonProperty(value = "currentVolumeFreeSpacePercent", access = JsonProperty.Access.WRITE_ONLY)
    private Integer currentVolumeFreeSpacePercent;

    /**
     * Get the lastUpdatedTimestamp property: Last updated timestamp.
     *
     * @return the lastUpdatedTimestamp value.
     */
    public OffsetDateTime lastUpdatedTimestamp() {
        return this.lastUpdatedTimestamp;
    }

    /**
     * Get the effectiveVolumeFreeSpacePolicy property: In the case where multiple server endpoints are present in a
     * volume, an effective free space policy is applied.
     *
     * @return the effectiveVolumeFreeSpacePolicy value.
     */
    public Integer effectiveVolumeFreeSpacePolicy() {
        return this.effectiveVolumeFreeSpacePolicy;
    }

    /**
     * Get the currentVolumeFreeSpacePercent property: Current volume free space percentage.
     *
     * @return the currentVolumeFreeSpacePercent value.
     */
    public Integer currentVolumeFreeSpacePercent() {
        return this.currentVolumeFreeSpacePercent;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
