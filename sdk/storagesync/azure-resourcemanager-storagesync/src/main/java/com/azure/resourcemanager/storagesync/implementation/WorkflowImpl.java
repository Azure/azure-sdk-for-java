// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagesync.implementation;

import com.azure.resourcemanager.storagesync.fluent.models.WorkflowInner;
import com.azure.resourcemanager.storagesync.models.OperationDirection;
import com.azure.resourcemanager.storagesync.models.Workflow;
import com.azure.resourcemanager.storagesync.models.WorkflowStatus;
import java.time.OffsetDateTime;

public final class WorkflowImpl implements Workflow {
    private WorkflowInner innerObject;

    private final com.azure.resourcemanager.storagesync.StoragesyncManager serviceManager;

    WorkflowImpl(WorkflowInner innerObject, com.azure.resourcemanager.storagesync.StoragesyncManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String lastStepName() {
        return this.innerModel().lastStepName();
    }

    public WorkflowStatus status() {
        return this.innerModel().status();
    }

    public OperationDirection operation() {
        return this.innerModel().operation();
    }

    public String steps() {
        return this.innerModel().steps();
    }

    public String lastOperationId() {
        return this.innerModel().lastOperationId();
    }

    public String commandName() {
        return this.innerModel().commandName();
    }

    public OffsetDateTime createdTimestamp() {
        return this.innerModel().createdTimestamp();
    }

    public OffsetDateTime lastStatusTimestamp() {
        return this.innerModel().lastStatusTimestamp();
    }

    public WorkflowInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.storagesync.StoragesyncManager manager() {
        return this.serviceManager;
    }
}
