// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagesync.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.storagesync.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.storagesync.fluent.models.StorageSyncServiceInner;
import com.azure.resourcemanager.storagesync.models.IncomingTrafficPolicy;
import com.azure.resourcemanager.storagesync.models.PrivateEndpointConnection;
import com.azure.resourcemanager.storagesync.models.StorageSyncService;
import com.azure.resourcemanager.storagesync.models.StorageSyncServiceCreateParameters;
import com.azure.resourcemanager.storagesync.models.StorageSyncServiceUpdateParameters;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public final class StorageSyncServiceImpl
    implements StorageSyncService, StorageSyncService.Definition, StorageSyncService.Update {
    private StorageSyncServiceInner innerObject;

    private final com.azure.resourcemanager.storagesync.StoragesyncManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public IncomingTrafficPolicy incomingTrafficPolicy() {
        return this.innerModel().incomingTrafficPolicy();
    }

    public Integer storageSyncServiceStatus() {
        return this.innerModel().storageSyncServiceStatus();
    }

    public String storageSyncServiceUid() {
        return this.innerModel().storageSyncServiceUid();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String lastWorkflowId() {
        return this.innerModel().lastWorkflowId();
    }

    public String lastOperationName() {
        return this.innerModel().lastOperationName();
    }

    public List<PrivateEndpointConnection> privateEndpointConnections() {
        List<PrivateEndpointConnectionInner> inner = this.innerModel().privateEndpointConnections();
        if (inner != null) {
            return Collections
                .unmodifiableList(
                    inner
                        .stream()
                        .map(inner1 -> new PrivateEndpointConnectionImpl(inner1, this.manager()))
                        .collect(Collectors.toList()));
        } else {
            return Collections.emptyList();
        }
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public StorageSyncServiceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.storagesync.StoragesyncManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String storageSyncServiceName;

    private StorageSyncServiceCreateParameters createParameters;

    private StorageSyncServiceUpdateParameters updateParameters;

    public StorageSyncServiceImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public StorageSyncService create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getStorageSyncServices()
                .create(resourceGroupName, storageSyncServiceName, createParameters, Context.NONE);
        return this;
    }

    public StorageSyncService create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getStorageSyncServices()
                .create(resourceGroupName, storageSyncServiceName, createParameters, context);
        return this;
    }

    StorageSyncServiceImpl(String name, com.azure.resourcemanager.storagesync.StoragesyncManager serviceManager) {
        this.innerObject = new StorageSyncServiceInner();
        this.serviceManager = serviceManager;
        this.storageSyncServiceName = name;
        this.createParameters = new StorageSyncServiceCreateParameters();
    }

    public StorageSyncServiceImpl update() {
        this.updateParameters = new StorageSyncServiceUpdateParameters();
        return this;
    }

    public StorageSyncService apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getStorageSyncServices()
                .update(resourceGroupName, storageSyncServiceName, updateParameters, Context.NONE);
        return this;
    }

    public StorageSyncService apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getStorageSyncServices()
                .update(resourceGroupName, storageSyncServiceName, updateParameters, context);
        return this;
    }

    StorageSyncServiceImpl(
        StorageSyncServiceInner innerObject, com.azure.resourcemanager.storagesync.StoragesyncManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.storageSyncServiceName = Utils.getValueFromIdByName(innerObject.id(), "storageSyncServices");
    }

    public StorageSyncService refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getStorageSyncServices()
                .getByResourceGroupWithResponse(resourceGroupName, storageSyncServiceName, Context.NONE)
                .getValue();
        return this;
    }

    public StorageSyncService refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getStorageSyncServices()
                .getByResourceGroupWithResponse(resourceGroupName, storageSyncServiceName, context)
                .getValue();
        return this;
    }

    public StorageSyncServiceImpl withRegion(Region location) {
        this.createParameters.withLocation(location.toString());
        return this;
    }

    public StorageSyncServiceImpl withRegion(String location) {
        this.createParameters.withLocation(location);
        return this;
    }

    public StorageSyncServiceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.createParameters.withTags(tags);
            return this;
        } else {
            this.updateParameters.withTags(tags);
            return this;
        }
    }

    public StorageSyncServiceImpl withIncomingTrafficPolicy(IncomingTrafficPolicy incomingTrafficPolicy) {
        if (isInCreateMode()) {
            this.createParameters.withIncomingTrafficPolicy(incomingTrafficPolicy);
            return this;
        } else {
            this.updateParameters.withIncomingTrafficPolicy(incomingTrafficPolicy);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
