// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagesync.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.storagesync.fluent.ResourceProvidersClient;
import com.azure.resourcemanager.storagesync.fluent.models.LocationOperationStatusInner;
import com.azure.resourcemanager.storagesync.models.LocationOperationStatus;
import com.azure.resourcemanager.storagesync.models.ResourceProviders;
import com.azure.resourcemanager.storagesync.models.ResourceProvidersLocationOperationStatusResponse;

public final class ResourceProvidersImpl implements ResourceProviders {
    private static final ClientLogger LOGGER = new ClientLogger(ResourceProvidersImpl.class);

    private final ResourceProvidersClient innerClient;

    private final com.azure.resourcemanager.storagesync.StoragesyncManager serviceManager;

    public ResourceProvidersImpl(
        ResourceProvidersClient innerClient, com.azure.resourcemanager.storagesync.StoragesyncManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public LocationOperationStatus locationOperationStatus(String locationName, String operationId) {
        LocationOperationStatusInner inner = this.serviceClient().locationOperationStatus(locationName, operationId);
        if (inner != null) {
            return new LocationOperationStatusImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<LocationOperationStatus> locationOperationStatusWithResponse(
        String locationName, String operationId, Context context) {
        ResourceProvidersLocationOperationStatusResponse inner =
            this.serviceClient().locationOperationStatusWithResponse(locationName, operationId, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new LocationOperationStatusImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private ResourceProvidersClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.storagesync.StoragesyncManager manager() {
        return this.serviceManager;
    }
}
