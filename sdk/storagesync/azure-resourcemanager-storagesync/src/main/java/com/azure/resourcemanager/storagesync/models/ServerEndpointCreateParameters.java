// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagesync.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The parameters used when creating a server endpoint. */
@JsonFlatten
@Fluent
public class ServerEndpointCreateParameters extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ServerEndpointCreateParameters.class);

    /*
     * Server Local path.
     */
    @JsonProperty(value = "properties.serverLocalPath")
    private String serverLocalPath;

    /*
     * Cloud Tiering.
     */
    @JsonProperty(value = "properties.cloudTiering")
    private FeatureStatus cloudTiering;

    /*
     * Level of free space to be maintained by Cloud Tiering if it is enabled.
     */
    @JsonProperty(value = "properties.volumeFreeSpacePercent")
    private Integer volumeFreeSpacePercent;

    /*
     * Tier files older than days.
     */
    @JsonProperty(value = "properties.tierFilesOlderThanDays")
    private Integer tierFilesOlderThanDays;

    /*
     * Friendly Name
     */
    @JsonProperty(value = "properties.friendlyName")
    private String friendlyName;

    /*
     * Server Resource Id.
     */
    @JsonProperty(value = "properties.serverResourceId")
    private String serverResourceId;

    /*
     * Offline data transfer
     */
    @JsonProperty(value = "properties.offlineDataTransfer")
    private FeatureStatus offlineDataTransfer;

    /*
     * Offline data transfer share name
     */
    @JsonProperty(value = "properties.offlineDataTransferShareName")
    private String offlineDataTransferShareName;

    /*
     * Policy for how namespace and files are recalled during FastDr.
     */
    @JsonProperty(value = "properties.initialDownloadPolicy")
    private InitialDownloadPolicy initialDownloadPolicy;

    /*
     * Policy for enabling follow-the-sun business models: link local cache to
     * cloud behavior to pre-populate before local access.
     */
    @JsonProperty(value = "properties.localCacheMode")
    private LocalCacheMode localCacheMode;

    /*
     * Policy for how the initial upload sync session is performed.
     */
    @JsonProperty(value = "properties.initialUploadPolicy")
    private InitialUploadPolicy initialUploadPolicy;

    /**
     * Get the serverLocalPath property: Server Local path.
     *
     * @return the serverLocalPath value.
     */
    public String serverLocalPath() {
        return this.serverLocalPath;
    }

    /**
     * Set the serverLocalPath property: Server Local path.
     *
     * @param serverLocalPath the serverLocalPath value to set.
     * @return the ServerEndpointCreateParameters object itself.
     */
    public ServerEndpointCreateParameters withServerLocalPath(String serverLocalPath) {
        this.serverLocalPath = serverLocalPath;
        return this;
    }

    /**
     * Get the cloudTiering property: Cloud Tiering.
     *
     * @return the cloudTiering value.
     */
    public FeatureStatus cloudTiering() {
        return this.cloudTiering;
    }

    /**
     * Set the cloudTiering property: Cloud Tiering.
     *
     * @param cloudTiering the cloudTiering value to set.
     * @return the ServerEndpointCreateParameters object itself.
     */
    public ServerEndpointCreateParameters withCloudTiering(FeatureStatus cloudTiering) {
        this.cloudTiering = cloudTiering;
        return this;
    }

    /**
     * Get the volumeFreeSpacePercent property: Level of free space to be maintained by Cloud Tiering if it is enabled.
     *
     * @return the volumeFreeSpacePercent value.
     */
    public Integer volumeFreeSpacePercent() {
        return this.volumeFreeSpacePercent;
    }

    /**
     * Set the volumeFreeSpacePercent property: Level of free space to be maintained by Cloud Tiering if it is enabled.
     *
     * @param volumeFreeSpacePercent the volumeFreeSpacePercent value to set.
     * @return the ServerEndpointCreateParameters object itself.
     */
    public ServerEndpointCreateParameters withVolumeFreeSpacePercent(Integer volumeFreeSpacePercent) {
        this.volumeFreeSpacePercent = volumeFreeSpacePercent;
        return this;
    }

    /**
     * Get the tierFilesOlderThanDays property: Tier files older than days.
     *
     * @return the tierFilesOlderThanDays value.
     */
    public Integer tierFilesOlderThanDays() {
        return this.tierFilesOlderThanDays;
    }

    /**
     * Set the tierFilesOlderThanDays property: Tier files older than days.
     *
     * @param tierFilesOlderThanDays the tierFilesOlderThanDays value to set.
     * @return the ServerEndpointCreateParameters object itself.
     */
    public ServerEndpointCreateParameters withTierFilesOlderThanDays(Integer tierFilesOlderThanDays) {
        this.tierFilesOlderThanDays = tierFilesOlderThanDays;
        return this;
    }

    /**
     * Get the friendlyName property: Friendly Name.
     *
     * @return the friendlyName value.
     */
    public String friendlyName() {
        return this.friendlyName;
    }

    /**
     * Set the friendlyName property: Friendly Name.
     *
     * @param friendlyName the friendlyName value to set.
     * @return the ServerEndpointCreateParameters object itself.
     */
    public ServerEndpointCreateParameters withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }

    /**
     * Get the serverResourceId property: Server Resource Id.
     *
     * @return the serverResourceId value.
     */
    public String serverResourceId() {
        return this.serverResourceId;
    }

    /**
     * Set the serverResourceId property: Server Resource Id.
     *
     * @param serverResourceId the serverResourceId value to set.
     * @return the ServerEndpointCreateParameters object itself.
     */
    public ServerEndpointCreateParameters withServerResourceId(String serverResourceId) {
        this.serverResourceId = serverResourceId;
        return this;
    }

    /**
     * Get the offlineDataTransfer property: Offline data transfer.
     *
     * @return the offlineDataTransfer value.
     */
    public FeatureStatus offlineDataTransfer() {
        return this.offlineDataTransfer;
    }

    /**
     * Set the offlineDataTransfer property: Offline data transfer.
     *
     * @param offlineDataTransfer the offlineDataTransfer value to set.
     * @return the ServerEndpointCreateParameters object itself.
     */
    public ServerEndpointCreateParameters withOfflineDataTransfer(FeatureStatus offlineDataTransfer) {
        this.offlineDataTransfer = offlineDataTransfer;
        return this;
    }

    /**
     * Get the offlineDataTransferShareName property: Offline data transfer share name.
     *
     * @return the offlineDataTransferShareName value.
     */
    public String offlineDataTransferShareName() {
        return this.offlineDataTransferShareName;
    }

    /**
     * Set the offlineDataTransferShareName property: Offline data transfer share name.
     *
     * @param offlineDataTransferShareName the offlineDataTransferShareName value to set.
     * @return the ServerEndpointCreateParameters object itself.
     */
    public ServerEndpointCreateParameters withOfflineDataTransferShareName(String offlineDataTransferShareName) {
        this.offlineDataTransferShareName = offlineDataTransferShareName;
        return this;
    }

    /**
     * Get the initialDownloadPolicy property: Policy for how namespace and files are recalled during FastDr.
     *
     * @return the initialDownloadPolicy value.
     */
    public InitialDownloadPolicy initialDownloadPolicy() {
        return this.initialDownloadPolicy;
    }

    /**
     * Set the initialDownloadPolicy property: Policy for how namespace and files are recalled during FastDr.
     *
     * @param initialDownloadPolicy the initialDownloadPolicy value to set.
     * @return the ServerEndpointCreateParameters object itself.
     */
    public ServerEndpointCreateParameters withInitialDownloadPolicy(InitialDownloadPolicy initialDownloadPolicy) {
        this.initialDownloadPolicy = initialDownloadPolicy;
        return this;
    }

    /**
     * Get the localCacheMode property: Policy for enabling follow-the-sun business models: link local cache to cloud
     * behavior to pre-populate before local access.
     *
     * @return the localCacheMode value.
     */
    public LocalCacheMode localCacheMode() {
        return this.localCacheMode;
    }

    /**
     * Set the localCacheMode property: Policy for enabling follow-the-sun business models: link local cache to cloud
     * behavior to pre-populate before local access.
     *
     * @param localCacheMode the localCacheMode value to set.
     * @return the ServerEndpointCreateParameters object itself.
     */
    public ServerEndpointCreateParameters withLocalCacheMode(LocalCacheMode localCacheMode) {
        this.localCacheMode = localCacheMode;
        return this;
    }

    /**
     * Get the initialUploadPolicy property: Policy for how the initial upload sync session is performed.
     *
     * @return the initialUploadPolicy value.
     */
    public InitialUploadPolicy initialUploadPolicy() {
        return this.initialUploadPolicy;
    }

    /**
     * Set the initialUploadPolicy property: Policy for how the initial upload sync session is performed.
     *
     * @param initialUploadPolicy the initialUploadPolicy value to set.
     * @return the ServerEndpointCreateParameters object itself.
     */
    public ServerEndpointCreateParameters withInitialUploadPolicy(InitialUploadPolicy initialUploadPolicy) {
        this.initialUploadPolicy = initialUploadPolicy;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
