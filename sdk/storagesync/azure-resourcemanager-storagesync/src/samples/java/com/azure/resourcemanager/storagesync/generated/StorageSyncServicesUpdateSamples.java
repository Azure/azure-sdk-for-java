// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagesync.generated;

import com.azure.core.util.Context;
import com.azure.resourcemanager.storagesync.models.IncomingTrafficPolicy;
import com.azure.resourcemanager.storagesync.models.StorageSyncService;
import java.util.HashMap;
import java.util.Map;

/** Samples for StorageSyncServices Update. */
public final class StorageSyncServicesUpdateSamples {
    /*
     * x-ms-original-file: specification/storagesync/resource-manager/Microsoft.StorageSync/stable/2022-06-01/examples/StorageSyncServices_Update.json
     */
    /**
     * Sample code: StorageSyncServices_Update.
     *
     * @param manager Entry point to StoragesyncManager.
     */
    public static void storageSyncServicesUpdate(com.azure.resourcemanager.storagesync.StoragesyncManager manager) {
        StorageSyncService resource =
            manager
                .storageSyncServices()
                .getByResourceGroupWithResponse("SampleResourceGroup_1", "SampleStorageSyncService_1", Context.NONE)
                .getValue();
        resource
            .update()
            .withTags(mapOf("Dept", "IT", "Environment", "Test"))
            .withIncomingTrafficPolicy(IncomingTrafficPolicy.ALLOW_ALL_TRAFFIC)
            .apply();
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
