// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagesync.generated;

import com.azure.core.util.Context;
import com.azure.resourcemanager.storagesync.models.PostRestoreRequest;
import com.azure.resourcemanager.storagesync.models.RestoreFileSpec;
import java.util.Arrays;

/** Samples for CloudEndpoints PostRestore. */
public final class CloudEndpointsPostRestoreSamples {
    /*
     * x-ms-original-file: specification/storagesync/resource-manager/Microsoft.StorageSync/stable/2022-06-01/examples/CloudEndpoints_PostRestore.json
     */
    /**
     * Sample code: CloudEndpoints_PostRestore.
     *
     * @param manager Entry point to StoragesyncManager.
     */
    public static void cloudEndpointsPostRestore(com.azure.resourcemanager.storagesync.StoragesyncManager manager) {
        manager
            .cloudEndpoints()
            .postRestore(
                "SampleResourceGroup_1",
                "SampleStorageSyncService_1",
                "SampleSyncGroup_1",
                "SampleCloudEndpoint_1",
                new PostRestoreRequest()
                    .withAzureFileShareUri(
                        "https://hfsazbackupdevintncus2.file.core.test-cint.azure-test.net/sampleFileShare")
                    .withStatus("Succeeded")
                    .withSourceAzureFileShareUri(
                        "https://hfsazbackupdevintncus2.file.core.test-cint.azure-test.net/sampleFileShare")
                    .withRestoreFileSpec(
                        Arrays
                            .asList(
                                new RestoreFileSpec().withPath("text1.txt").withIsdir(false),
                                new RestoreFileSpec().withPath("MyDir").withIsdir(true),
                                new RestoreFileSpec().withPath("MyDir/SubDir").withIsdir(false),
                                new RestoreFileSpec().withPath("MyDir/SubDir/File1.pdf").withIsdir(false))),
                Context.NONE);
    }
}
