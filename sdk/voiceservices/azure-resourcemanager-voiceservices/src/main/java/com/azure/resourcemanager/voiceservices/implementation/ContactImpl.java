// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.voiceservices.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.voiceservices.fluent.models.ContactInner;
import com.azure.resourcemanager.voiceservices.models.Contact;
import com.azure.resourcemanager.voiceservices.models.ContactUpdate;
import com.azure.resourcemanager.voiceservices.models.ProvisioningState;
import java.util.Collections;
import java.util.Map;

public final class ContactImpl implements Contact, Contact.Definition, Contact.Update {
    private ContactInner innerObject;

    private final com.azure.resourcemanager.voiceservices.VoiceservicesManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String contactName() {
        return this.innerModel().contactName();
    }

    public String phoneNumber() {
        return this.innerModel().phoneNumber();
    }

    public String email() {
        return this.innerModel().email();
    }

    public String role() {
        return this.innerModel().role();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ContactInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.voiceservices.VoiceservicesManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String communicationsGatewayName;

    private String contactName;

    private ContactUpdate updateProperties;

    public ContactImpl withExistingCommunicationsGateway(String resourceGroupName, String communicationsGatewayName) {
        this.resourceGroupName = resourceGroupName;
        this.communicationsGatewayName = communicationsGatewayName;
        return this;
    }

    public Contact create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getContacts()
                .createOrUpdate(
                    resourceGroupName, communicationsGatewayName, contactName, this.innerModel(), Context.NONE);
        return this;
    }

    public Contact create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getContacts()
                .createOrUpdate(resourceGroupName, communicationsGatewayName, contactName, this.innerModel(), context);
        return this;
    }

    ContactImpl(String name, com.azure.resourcemanager.voiceservices.VoiceservicesManager serviceManager) {
        this.innerObject = new ContactInner();
        this.serviceManager = serviceManager;
        this.contactName = name;
    }

    public ContactImpl update() {
        this.updateProperties = new ContactUpdate();
        return this;
    }

    public Contact apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getContacts()
                .updateWithResponse(
                    resourceGroupName, communicationsGatewayName, contactName, updateProperties, Context.NONE)
                .getValue();
        return this;
    }

    public Contact apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getContacts()
                .updateWithResponse(
                    resourceGroupName, communicationsGatewayName, contactName, updateProperties, context)
                .getValue();
        return this;
    }

    ContactImpl(ContactInner innerObject, com.azure.resourcemanager.voiceservices.VoiceservicesManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.communicationsGatewayName = Utils.getValueFromIdByName(innerObject.id(), "communicationsGateways");
        this.contactName = Utils.getValueFromIdByName(innerObject.id(), "contacts");
    }

    public Contact refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getContacts()
                .getWithResponse(resourceGroupName, communicationsGatewayName, contactName, Context.NONE)
                .getValue();
        return this;
    }

    public Contact refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getContacts()
                .getWithResponse(resourceGroupName, communicationsGatewayName, contactName, context)
                .getValue();
        return this;
    }

    public ContactImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public ContactImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public ContactImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateProperties.withTags(tags);
            return this;
        }
    }

    public ContactImpl withContactName(String contactName) {
        this.innerModel().withContactName(contactName);
        return this;
    }

    public ContactImpl withPhoneNumber(String phoneNumber) {
        this.innerModel().withPhoneNumber(phoneNumber);
        return this;
    }

    public ContactImpl withEmail(String email) {
        this.innerModel().withEmail(email);
        return this;
    }

    public ContactImpl withRole(String role) {
        this.innerModel().withRole(role);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
