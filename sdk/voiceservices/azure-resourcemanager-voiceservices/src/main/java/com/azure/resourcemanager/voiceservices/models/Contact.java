// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.voiceservices.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.voiceservices.fluent.models.ContactInner;
import java.util.Map;

/** An immutable client-side representation of Contact. */
public interface Contact {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the provisioningState property: Resource provisioning state.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the contactName property: Full name of contact.
     *
     * @return the contactName value.
     */
    String contactName();

    /**
     * Gets the phoneNumber property: Telephone number of contact.
     *
     * @return the phoneNumber value.
     */
    String phoneNumber();

    /**
     * Gets the email property: Email address of contact.
     *
     * @return the email value.
     */
    String email();

    /**
     * Gets the role property: Job title of contact.
     *
     * @return the role value.
     */
    String role();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.voiceservices.fluent.models.ContactInner object.
     *
     * @return the inner object.
     */
    ContactInner innerModel();

    /** The entirety of the Contact definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithParentResource,
            DefinitionStages.WithCreate {
    }
    /** The Contact definition stages. */
    interface DefinitionStages {
        /** The first stage of the Contact definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the Contact definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(String location);
        }
        /** The stage of the Contact definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, communicationsGatewayName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param communicationsGatewayName Unique identifier for this deployment.
             * @return the next definition stage.
             */
            WithCreate withExistingCommunicationsGateway(String resourceGroupName, String communicationsGatewayName);
        }
        /**
         * The stage of the Contact definition which contains all the minimum required properties for the resource to be
         * created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithContactName,
                DefinitionStages.WithPhoneNumber,
                DefinitionStages.WithEmail,
                DefinitionStages.WithRole {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            Contact create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Contact create(Context context);
        }
        /** The stage of the Contact definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the Contact definition allowing to specify contactName. */
        interface WithContactName {
            /**
             * Specifies the contactName property: Full name of contact.
             *
             * @param contactName Full name of contact.
             * @return the next definition stage.
             */
            WithCreate withContactName(String contactName);
        }
        /** The stage of the Contact definition allowing to specify phoneNumber. */
        interface WithPhoneNumber {
            /**
             * Specifies the phoneNumber property: Telephone number of contact.
             *
             * @param phoneNumber Telephone number of contact.
             * @return the next definition stage.
             */
            WithCreate withPhoneNumber(String phoneNumber);
        }
        /** The stage of the Contact definition allowing to specify email. */
        interface WithEmail {
            /**
             * Specifies the email property: Email address of contact.
             *
             * @param email Email address of contact.
             * @return the next definition stage.
             */
            WithCreate withEmail(String email);
        }
        /** The stage of the Contact definition allowing to specify role. */
        interface WithRole {
            /**
             * Specifies the role property: Job title of contact.
             *
             * @param role Job title of contact.
             * @return the next definition stage.
             */
            WithCreate withRole(String role);
        }
    }
    /**
     * Begins update for the Contact resource.
     *
     * @return the stage of resource update.
     */
    Contact.Update update();

    /** The template for Contact update. */
    interface Update extends UpdateStages.WithTags {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        Contact apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Contact apply(Context context);
    }
    /** The Contact update stages. */
    interface UpdateStages {
        /** The stage of the Contact update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    Contact refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Contact refresh(Context context);
}
