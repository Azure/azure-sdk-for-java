// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.voiceservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.voiceservices.models.PrimaryRegionProperties;
import com.azure.resourcemanager.voiceservices.models.ServiceRegionProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ServiceRegionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServiceRegionProperties model = BinaryData.fromString(
            "{\"name\":\"ljdousk\",\"primaryRegionProperties\":{\"operatorAddresses\":[\"vkocrcjdkwtn\",\"xbnjbiksq\"],\"esrpAddresses\":[\"ssainqpjwnzll\",\"fmppe\"],\"allowedSignalingSourceAddressPrefixes\":[\"mgxsab\",\"yqduujit\"],\"allowedMediaSourceAddressPrefixes\":[\"zdzevndh\",\"rwpdappdsbdkvwrw\"]}}")
            .toObject(ServiceRegionProperties.class);
        Assertions.assertEquals("ljdousk", model.name());
        Assertions.assertEquals("vkocrcjdkwtn", model.primaryRegionProperties().operatorAddresses().get(0));
        Assertions.assertEquals("ssainqpjwnzll", model.primaryRegionProperties().esrpAddresses().get(0));
        Assertions.assertEquals("mgxsab",
            model.primaryRegionProperties().allowedSignalingSourceAddressPrefixes().get(0));
        Assertions.assertEquals("zdzevndh", model.primaryRegionProperties().allowedMediaSourceAddressPrefixes().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServiceRegionProperties model = new ServiceRegionProperties().withName("ljdousk")
            .withPrimaryRegionProperties(
                new PrimaryRegionProperties().withOperatorAddresses(Arrays.asList("vkocrcjdkwtn", "xbnjbiksq"))
                    .withEsrpAddresses(Arrays.asList("ssainqpjwnzll", "fmppe"))
                    .withAllowedSignalingSourceAddressPrefixes(Arrays.asList("mgxsab", "yqduujit"))
                    .withAllowedMediaSourceAddressPrefixes(Arrays.asList("zdzevndh", "rwpdappdsbdkvwrw")));
        model = BinaryData.fromObject(model).toObject(ServiceRegionProperties.class);
        Assertions.assertEquals("ljdousk", model.name());
        Assertions.assertEquals("vkocrcjdkwtn", model.primaryRegionProperties().operatorAddresses().get(0));
        Assertions.assertEquals("ssainqpjwnzll", model.primaryRegionProperties().esrpAddresses().get(0));
        Assertions.assertEquals("mgxsab",
            model.primaryRegionProperties().allowedSignalingSourceAddressPrefixes().get(0));
        Assertions.assertEquals("zdzevndh", model.primaryRegionProperties().allowedMediaSourceAddressPrefixes().get(0));
    }
}
