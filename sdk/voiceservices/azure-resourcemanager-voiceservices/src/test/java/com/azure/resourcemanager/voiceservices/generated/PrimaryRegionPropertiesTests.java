// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.voiceservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.voiceservices.models.PrimaryRegionProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrimaryRegionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrimaryRegionProperties model = BinaryData.fromString(
            "{\"operatorAddresses\":[\"eusnhutj\",\"ltmrldh\"],\"esrpAddresses\":[\"zzd\"],\"allowedSignalingSourceAddressPrefixes\":[\"xhocdgeablgphuti\",\"ndv\",\"aozwyiftyhxhu\",\"okftyxolniwpwcuk\"],\"allowedMediaSourceAddressPrefixes\":[\"giawx\",\"lryplwckbasyy\",\"nddhsgcbacph\",\"jkot\"]}")
            .toObject(PrimaryRegionProperties.class);
        Assertions.assertEquals("eusnhutj", model.operatorAddresses().get(0));
        Assertions.assertEquals("zzd", model.esrpAddresses().get(0));
        Assertions.assertEquals("xhocdgeablgphuti", model.allowedSignalingSourceAddressPrefixes().get(0));
        Assertions.assertEquals("giawx", model.allowedMediaSourceAddressPrefixes().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrimaryRegionProperties model
            = new PrimaryRegionProperties().withOperatorAddresses(Arrays.asList("eusnhutj", "ltmrldh"))
                .withEsrpAddresses(Arrays.asList("zzd"))
                .withAllowedSignalingSourceAddressPrefixes(
                    Arrays.asList("xhocdgeablgphuti", "ndv", "aozwyiftyhxhu", "okftyxolniwpwcuk"))
                .withAllowedMediaSourceAddressPrefixes(Arrays.asList("giawx", "lryplwckbasyy", "nddhsgcbacph", "jkot"));
        model = BinaryData.fromObject(model).toObject(PrimaryRegionProperties.class);
        Assertions.assertEquals("eusnhutj", model.operatorAddresses().get(0));
        Assertions.assertEquals("zzd", model.esrpAddresses().get(0));
        Assertions.assertEquals("xhocdgeablgphuti", model.allowedSignalingSourceAddressPrefixes().get(0));
        Assertions.assertEquals("giawx", model.allowedMediaSourceAddressPrefixes().get(0));
    }
}
