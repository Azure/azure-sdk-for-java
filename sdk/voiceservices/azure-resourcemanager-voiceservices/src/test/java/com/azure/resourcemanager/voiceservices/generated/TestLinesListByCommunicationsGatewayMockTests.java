// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.voiceservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.voiceservices.VoiceServicesManager;
import com.azure.resourcemanager.voiceservices.models.TestLine;
import com.azure.resourcemanager.voiceservices.models.TestLinePurpose;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class TestLinesListByCommunicationsGatewayMockTests {
    @Test
    public void testListByCommunicationsGateway() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Failed\",\"phoneNumber\":\"mryw\",\"purpose\":\"Manual\"},\"location\":\"oqftiyqzrnkcq\",\"tags\":{\"lsicohoqqnwv\":\"lwh\",\"yxzk\":\"ryavwhheunmmqh\",\"koklya\":\"noc\"},\"id\":\"uconuqszfkbey\",\"name\":\"ewrmjmwvvjektc\",\"type\":\"senhwlrs\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        VoiceServicesManager manager = VoiceServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<TestLine> response = manager.testLines()
            .listByCommunicationsGateway("ipwhonowk", "shwankixzbinje", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("oqftiyqzrnkcq", response.iterator().next().location());
        Assertions.assertEquals("lwh", response.iterator().next().tags().get("lsicohoqqnwv"));
        Assertions.assertEquals("mryw", response.iterator().next().phoneNumber());
        Assertions.assertEquals(TestLinePurpose.MANUAL, response.iterator().next().purpose());
    }
}
