/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.compute.v2020_12_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.compute.v2020_12_01.implementation.ComputeManager;
import java.util.List;
import org.joda.time.DateTime;
import com.microsoft.azure.management.compute.v2020_12_01.implementation.DiskAccessInner;

/**
 * Type representing DiskAccess.
 */
public interface DiskAccess extends HasInner<DiskAccessInner>, Resource, GroupableResourceCore<ComputeManager, DiskAccessInner>, HasResourceGroup, Refreshable<DiskAccess>, Updatable<DiskAccess.Update>, HasManager<ComputeManager> {
    /**
     * @return the privateEndpointConnections value.
     */
    List<PrivateEndpointConnection> privateEndpointConnections();

    /**
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * @return the timeCreated value.
     */
    DateTime timeCreated();

    /**
     * The entirety of the DiskAccess definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of DiskAccess definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a DiskAccess definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the DiskAccess definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithCreate> {
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<DiskAccess>, Resource.DefinitionWithTags<WithCreate> {
        }
    }
    /**
     * The template for a DiskAccess update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<DiskAccess>, Resource.UpdateWithTags<Update> {
    }

    /**
     * Grouping of DiskAccess update stages.
     */
    interface UpdateStages {
    }
}
