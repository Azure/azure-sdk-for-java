/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.compute.v2020_12_01.implementation;

import com.microsoft.azure.management.compute.v2020_12_01.VirtualMachineScaleSet;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;
import com.microsoft.azure.management.compute.v2020_12_01.VirtualMachineScaleSetUpdate;
import java.util.Map;
import com.microsoft.azure.SubResource;
import com.microsoft.azure.management.compute.v2020_12_01.Sku;
import com.microsoft.azure.management.compute.v2020_12_01.Plan;
import com.microsoft.azure.management.compute.v2020_12_01.UpgradePolicy;
import com.microsoft.azure.management.compute.v2020_12_01.AutomaticRepairsPolicy;
import com.microsoft.azure.management.compute.v2020_12_01.VirtualMachineScaleSetVMProfile;
import com.microsoft.azure.management.compute.v2020_12_01.AdditionalCapabilities;
import com.microsoft.azure.management.compute.v2020_12_01.ScaleInPolicy;
import com.microsoft.azure.management.compute.v2020_12_01.OrchestrationMode;
import com.microsoft.azure.management.compute.v2020_12_01.VirtualMachineScaleSetIdentity;
import java.util.List;
import com.microsoft.azure.management.compute.v2020_12_01.ExtendedLocation;
import com.microsoft.azure.management.compute.v2020_12_01.VirtualMachineScaleSetUpdateVMProfile;
import rx.functions.Func1;

class VirtualMachineScaleSetImpl extends CreatableUpdatableImpl<VirtualMachineScaleSet, VirtualMachineScaleSetInner, VirtualMachineScaleSetImpl> implements VirtualMachineScaleSet, VirtualMachineScaleSet.Definition, VirtualMachineScaleSet.Update {
    private final ComputeManager manager;
    private String resourceGroupName;
    private String vmScaleSetName;
    private VirtualMachineScaleSetUpdate updateParameter;

    VirtualMachineScaleSetImpl(String name, ComputeManager manager) {
        super(name, new VirtualMachineScaleSetInner());
        this.manager = manager;
        // Set resource name
        this.vmScaleSetName = name;
        //
        this.updateParameter = new VirtualMachineScaleSetUpdate();
    }

    VirtualMachineScaleSetImpl(VirtualMachineScaleSetInner inner, ComputeManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.vmScaleSetName = inner.name();
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.vmScaleSetName = IdParsingUtils.getValueFromIdByName(inner.id(), "virtualMachineScaleSets");
        //
        this.updateParameter = new VirtualMachineScaleSetUpdate();
    }

    @Override
    public ComputeManager manager() {
        return this.manager;
    }

    @Override
    public Observable<VirtualMachineScaleSet> createResourceAsync() {
        VirtualMachineScaleSetsInner client = this.manager().inner().virtualMachineScaleSets();
        return client.createOrUpdateAsync(this.resourceGroupName, this.vmScaleSetName, this.inner())
            .map(new Func1<VirtualMachineScaleSetInner, VirtualMachineScaleSetInner>() {
               @Override
               public VirtualMachineScaleSetInner call(VirtualMachineScaleSetInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<VirtualMachineScaleSet> updateResourceAsync() {
        VirtualMachineScaleSetsInner client = this.manager().inner().virtualMachineScaleSets();
        return client.updateAsync(this.resourceGroupName, this.vmScaleSetName, this.updateParameter)
            .map(new Func1<VirtualMachineScaleSetInner, VirtualMachineScaleSetInner>() {
               @Override
               public VirtualMachineScaleSetInner call(VirtualMachineScaleSetInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<VirtualMachineScaleSetInner> getInnerAsync() {
        VirtualMachineScaleSetsInner client = this.manager().inner().virtualMachineScaleSets();
        return null; // NOP getInnerAsync implementation as get is not supported
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }

    private void resetCreateUpdateParameters() {
        this.updateParameter = new VirtualMachineScaleSetUpdate();
    }

    @Override
    public AdditionalCapabilities additionalCapabilities() {
        return this.inner().additionalCapabilities();
    }

    @Override
    public AutomaticRepairsPolicy automaticRepairsPolicy() {
        return this.inner().automaticRepairsPolicy();
    }

    @Override
    public Boolean doNotRunExtensionsOnOverprovisionedVMs() {
        return this.inner().doNotRunExtensionsOnOverprovisionedVMs();
    }

    @Override
    public ExtendedLocation extendedLocation() {
        return this.inner().extendedLocation();
    }

    @Override
    public SubResource hostGroup() {
        return this.inner().hostGroup();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public VirtualMachineScaleSetIdentity identity() {
        return this.inner().identity();
    }

    @Override
    public String location() {
        return this.inner().location();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public OrchestrationMode orchestrationMode() {
        return this.inner().orchestrationMode();
    }

    @Override
    public Boolean overprovision() {
        return this.inner().overprovision();
    }

    @Override
    public Plan plan() {
        return this.inner().plan();
    }

    @Override
    public Integer platformFaultDomainCount() {
        return this.inner().platformFaultDomainCount();
    }

    @Override
    public String provisioningState() {
        return this.inner().provisioningState();
    }

    @Override
    public SubResource proximityPlacementGroup() {
        return this.inner().proximityPlacementGroup();
    }

    @Override
    public ScaleInPolicy scaleInPolicy() {
        return this.inner().scaleInPolicy();
    }

    @Override
    public Boolean singlePlacementGroup() {
        return this.inner().singlePlacementGroup();
    }

    @Override
    public Sku sku() {
        return this.inner().sku();
    }

    @Override
    public Map<String, String> tags() {
        return this.inner().getTags();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public String uniqueId() {
        return this.inner().uniqueId();
    }

    @Override
    public UpgradePolicy upgradePolicy() {
        return this.inner().upgradePolicy();
    }

    @Override
    public VirtualMachineScaleSetVMProfile virtualMachineProfile() {
        return this.inner().virtualMachineProfile();
    }

    @Override
    public Boolean zoneBalance() {
        return this.inner().zoneBalance();
    }

    @Override
    public List<String> zones() {
        return this.inner().zones();
    }

    @Override
    public VirtualMachineScaleSetImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    @Override
    public VirtualMachineScaleSetImpl withLocation(String location) {
        this.inner().withLocation(location);
        return this;
    }

    @Override
    public VirtualMachineScaleSetImpl withExtendedLocation(ExtendedLocation extendedLocation) {
        this.inner().withExtendedLocation(extendedLocation);
        return this;
    }

    @Override
    public VirtualMachineScaleSetImpl withHostGroup(SubResource hostGroup) {
        this.inner().withHostGroup(hostGroup);
        return this;
    }

    @Override
    public VirtualMachineScaleSetImpl withOrchestrationMode(OrchestrationMode orchestrationMode) {
        this.inner().withOrchestrationMode(orchestrationMode);
        return this;
    }

    @Override
    public VirtualMachineScaleSetImpl withPlatformFaultDomainCount(Integer platformFaultDomainCount) {
        this.inner().withPlatformFaultDomainCount(platformFaultDomainCount);
        return this;
    }

    @Override
    public VirtualMachineScaleSetImpl withVirtualMachineProfile(VirtualMachineScaleSetVMProfile virtualMachineProfile) {
        this.inner().withVirtualMachineProfile(virtualMachineProfile);
        return this;
    }

    @Override
    public VirtualMachineScaleSetImpl withZoneBalance(Boolean zoneBalance) {
        this.inner().withZoneBalance(zoneBalance);
        return this;
    }

    @Override
    public VirtualMachineScaleSetImpl withZones(List<String> zones) {
        this.inner().withZones(zones);
        return this;
    }

    @Override
    public VirtualMachineScaleSetImpl withVirtualMachineProfile(VirtualMachineScaleSetUpdateVMProfile virtualMachineProfile) {
        this.updateParameter.withVirtualMachineProfile(virtualMachineProfile);
        return this;
    }

    @Override
    public VirtualMachineScaleSetImpl withAdditionalCapabilities(AdditionalCapabilities additionalCapabilities) {
        if (isInCreateMode()) {
            this.inner().withAdditionalCapabilities(additionalCapabilities);
        } else {
            this.updateParameter.withAdditionalCapabilities(additionalCapabilities);
        }
        return this;
    }

    @Override
    public VirtualMachineScaleSetImpl withAutomaticRepairsPolicy(AutomaticRepairsPolicy automaticRepairsPolicy) {
        if (isInCreateMode()) {
            this.inner().withAutomaticRepairsPolicy(automaticRepairsPolicy);
        } else {
            this.updateParameter.withAutomaticRepairsPolicy(automaticRepairsPolicy);
        }
        return this;
    }

    @Override
    public VirtualMachineScaleSetImpl withDoNotRunExtensionsOnOverprovisionedVMs(Boolean doNotRunExtensionsOnOverprovisionedVMs) {
        if (isInCreateMode()) {
            this.inner().withDoNotRunExtensionsOnOverprovisionedVMs(doNotRunExtensionsOnOverprovisionedVMs);
        } else {
            this.updateParameter.withDoNotRunExtensionsOnOverprovisionedVMs(doNotRunExtensionsOnOverprovisionedVMs);
        }
        return this;
    }

    @Override
    public VirtualMachineScaleSetImpl withIdentity(VirtualMachineScaleSetIdentity identity) {
        if (isInCreateMode()) {
            this.inner().withIdentity(identity);
        } else {
            this.updateParameter.withIdentity(identity);
        }
        return this;
    }

    @Override
    public VirtualMachineScaleSetImpl withOverprovision(Boolean overprovision) {
        if (isInCreateMode()) {
            this.inner().withOverprovision(overprovision);
        } else {
            this.updateParameter.withOverprovision(overprovision);
        }
        return this;
    }

    @Override
    public VirtualMachineScaleSetImpl withPlan(Plan plan) {
        if (isInCreateMode()) {
            this.inner().withPlan(plan);
        } else {
            this.updateParameter.withPlan(plan);
        }
        return this;
    }

    @Override
    public VirtualMachineScaleSetImpl withProximityPlacementGroup(SubResource proximityPlacementGroup) {
        if (isInCreateMode()) {
            this.inner().withProximityPlacementGroup(proximityPlacementGroup);
        } else {
            this.updateParameter.withProximityPlacementGroup(proximityPlacementGroup);
        }
        return this;
    }

    @Override
    public VirtualMachineScaleSetImpl withScaleInPolicy(ScaleInPolicy scaleInPolicy) {
        if (isInCreateMode()) {
            this.inner().withScaleInPolicy(scaleInPolicy);
        } else {
            this.updateParameter.withScaleInPolicy(scaleInPolicy);
        }
        return this;
    }

    @Override
    public VirtualMachineScaleSetImpl withSinglePlacementGroup(Boolean singlePlacementGroup) {
        if (isInCreateMode()) {
            this.inner().withSinglePlacementGroup(singlePlacementGroup);
        } else {
            this.updateParameter.withSinglePlacementGroup(singlePlacementGroup);
        }
        return this;
    }

    @Override
    public VirtualMachineScaleSetImpl withSku(Sku sku) {
        if (isInCreateMode()) {
            this.inner().withSku(sku);
        } else {
            this.updateParameter.withSku(sku);
        }
        return this;
    }

    @Override
    public VirtualMachineScaleSetImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.inner().withTags(tags);
        } else {
            this.updateParameter.withTags(tags);
        }
        return this;
    }

    @Override
    public VirtualMachineScaleSetImpl withUpgradePolicy(UpgradePolicy upgradePolicy) {
        if (isInCreateMode()) {
            this.inner().withUpgradePolicy(upgradePolicy);
        } else {
            this.updateParameter.withUpgradePolicy(upgradePolicy);
        }
        return this;
    }

}
