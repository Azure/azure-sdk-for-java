// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.generated;

import com.azure.resourcemanager.compute.generated.models.DataDiskImageEncryption;
import com.azure.resourcemanager.compute.generated.models.EncryptionImages;
import com.azure.resourcemanager.compute.generated.models.GalleryArtifactVersionSource;
import com.azure.resourcemanager.compute.generated.models.GalleryDataDiskImage;
import com.azure.resourcemanager.compute.generated.models.GalleryImageVersionPublishingProfile;
import com.azure.resourcemanager.compute.generated.models.GalleryImageVersionStorageProfile;
import com.azure.resourcemanager.compute.generated.models.GalleryOSDiskImage;
import com.azure.resourcemanager.compute.generated.models.HostCaching;
import com.azure.resourcemanager.compute.generated.models.OSDiskImageEncryption;
import com.azure.resourcemanager.compute.generated.models.ReplicationMode;
import com.azure.resourcemanager.compute.generated.models.StorageAccountType;
import com.azure.resourcemanager.compute.generated.models.TargetRegion;
import java.util.Arrays;

/** Samples for GalleryImageVersions CreateOrUpdate. */
public final class GalleryImageVersionsCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-10-01/examples/gallery/CreateOrUpdateASimpleGalleryImageVersionWithShallowReplicationMode.json
     */
    /**
     * Sample code: Create or update a simple Gallery Image Version using shallow replication mode.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createOrUpdateASimpleGalleryImageVersionUsingShallowReplicationMode(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .galleryImageVersions()
            .define("1.0.0")
            .withRegion("West US")
            .withExistingImage("myResourceGroup", "myGalleryName", "myGalleryImageName")
            .withPublishingProfile(
                new GalleryImageVersionPublishingProfile()
                    .withTargetRegions(
                        Arrays.asList(new TargetRegion().withName("West US").withRegionalReplicaCount(1)))
                    .withReplicationMode(ReplicationMode.SHALLOW))
            .withStorageProfile(
                new GalleryImageVersionStorageProfile()
                    .withSource(
                        new GalleryArtifactVersionSource()
                            .withId(
                                "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}")))
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-10-01/examples/gallery/CreateOrUpdateASimpleGalleryImageVersionWithVHD.json
     */
    /**
     * Sample code: Create or update a simple Gallery Image Version using vhd as a source.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createOrUpdateASimpleGalleryImageVersionUsingVhdAsASource(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .galleryImageVersions()
            .define("1.0.0")
            .withRegion("West US")
            .withExistingImage("myResourceGroup", "myGalleryName", "myGalleryImageName")
            .withPublishingProfile(
                new GalleryImageVersionPublishingProfile()
                    .withTargetRegions(
                        Arrays
                            .asList(
                                new TargetRegion()
                                    .withName("West US")
                                    .withRegionalReplicaCount(1)
                                    .withEncryption(
                                        new EncryptionImages()
                                            .withOsDiskImage(
                                                new OSDiskImageEncryption()
                                                    .withDiskEncryptionSetId(
                                                        "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myDiskEncryptionSet"))
                                            .withDataDiskImages(
                                                Arrays
                                                    .asList(
                                                        new DataDiskImageEncryption()
                                                            .withDiskEncryptionSetId(
                                                                "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherDiskEncryptionSet")
                                                            .withLun(1)))),
                                new TargetRegion()
                                    .withName("East US")
                                    .withRegionalReplicaCount(2)
                                    .withStorageAccountType(StorageAccountType.STANDARD_ZRS))))
            .withStorageProfile(
                new GalleryImageVersionStorageProfile()
                    .withOsDiskImage(
                        new GalleryOSDiskImage()
                            .withHostCaching(HostCaching.READ_ONLY)
                            .withSource(
                                new GalleryArtifactVersionSource()
                                    .withId(
                                        "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Storage/storageAccounts/{storageAccount}")
                                    .withUri(
                                        "https://gallerysourcencus.blob.core.windows.net/myvhds/Windows-Server-2012-R2-20171216-en.us-128GB.vhd")))
                    .withDataDiskImages(
                        Arrays
                            .asList(
                                new GalleryDataDiskImage()
                                    .withHostCaching(HostCaching.NONE)
                                    .withSource(
                                        new GalleryArtifactVersionSource()
                                            .withId(
                                                "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Storage/storageAccounts/{storageAccount}")
                                            .withUri(
                                                "https://gallerysourcencus.blob.core.windows.net/myvhds/Windows-Server-2012-R2-20171216-en.us-128GB.vhd"))
                                    .withLun(1))))
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-10-01/examples/gallery/CreateOrUpdateASimpleGalleryImageVersionWithVMAsSource.json
     */
    /**
     * Sample code: Create or update a simple Gallery Image Version using VM as source.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createOrUpdateASimpleGalleryImageVersionUsingVMAsSource(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .galleryImageVersions()
            .define("1.0.0")
            .withRegion("West US")
            .withExistingImage("myResourceGroup", "myGalleryName", "myGalleryImageName")
            .withPublishingProfile(
                new GalleryImageVersionPublishingProfile()
                    .withTargetRegions(
                        Arrays
                            .asList(
                                new TargetRegion()
                                    .withName("West US")
                                    .withRegionalReplicaCount(1)
                                    .withEncryption(
                                        new EncryptionImages()
                                            .withOsDiskImage(
                                                new OSDiskImageEncryption()
                                                    .withDiskEncryptionSetId(
                                                        "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet"))
                                            .withDataDiskImages(
                                                Arrays
                                                    .asList(
                                                        new DataDiskImageEncryption()
                                                            .withDiskEncryptionSetId(
                                                                "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherWestUSDiskEncryptionSet")
                                                            .withLun(0),
                                                        new DataDiskImageEncryption()
                                                            .withDiskEncryptionSetId(
                                                                "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet")
                                                            .withLun(1)))),
                                new TargetRegion()
                                    .withName("East US")
                                    .withRegionalReplicaCount(2)
                                    .withStorageAccountType(StorageAccountType.STANDARD_ZRS)
                                    .withEncryption(
                                        new EncryptionImages()
                                            .withOsDiskImage(
                                                new OSDiskImageEncryption()
                                                    .withDiskEncryptionSetId(
                                                        "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet"))
                                            .withDataDiskImages(
                                                Arrays
                                                    .asList(
                                                        new DataDiskImageEncryption()
                                                            .withDiskEncryptionSetId(
                                                                "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherEastUSDiskEncryptionSet")
                                                            .withLun(0),
                                                        new DataDiskImageEncryption()
                                                            .withDiskEncryptionSetId(
                                                                "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet")
                                                            .withLun(1)))))))
            .withStorageProfile(
                new GalleryImageVersionStorageProfile()
                    .withSource(
                        new GalleryArtifactVersionSource()
                            .withId(
                                "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/virtualMachines/{vmName}")))
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-10-01/examples/gallery/CreateOrUpdateASimpleGalleryImageVersionWithImageVersionAsSource.json
     */
    /**
     * Sample code: Create or update a simple Gallery Image Version using shared image as source.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createOrUpdateASimpleGalleryImageVersionUsingSharedImageAsSource(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .galleryImageVersions()
            .define("1.0.0")
            .withRegion("West US")
            .withExistingImage("myResourceGroup", "myGalleryName", "myGalleryImageName")
            .withPublishingProfile(
                new GalleryImageVersionPublishingProfile()
                    .withTargetRegions(
                        Arrays
                            .asList(
                                new TargetRegion()
                                    .withName("West US")
                                    .withRegionalReplicaCount(1)
                                    .withEncryption(
                                        new EncryptionImages()
                                            .withOsDiskImage(
                                                new OSDiskImageEncryption()
                                                    .withDiskEncryptionSetId(
                                                        "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet"))
                                            .withDataDiskImages(
                                                Arrays
                                                    .asList(
                                                        new DataDiskImageEncryption()
                                                            .withDiskEncryptionSetId(
                                                                "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherWestUSDiskEncryptionSet")
                                                            .withLun(0),
                                                        new DataDiskImageEncryption()
                                                            .withDiskEncryptionSetId(
                                                                "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet")
                                                            .withLun(1)))),
                                new TargetRegion()
                                    .withName("East US")
                                    .withRegionalReplicaCount(2)
                                    .withStorageAccountType(StorageAccountType.STANDARD_ZRS)
                                    .withEncryption(
                                        new EncryptionImages()
                                            .withOsDiskImage(
                                                new OSDiskImageEncryption()
                                                    .withDiskEncryptionSetId(
                                                        "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet"))
                                            .withDataDiskImages(
                                                Arrays
                                                    .asList(
                                                        new DataDiskImageEncryption()
                                                            .withDiskEncryptionSetId(
                                                                "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherEastUSDiskEncryptionSet")
                                                            .withLun(0),
                                                        new DataDiskImageEncryption()
                                                            .withDiskEncryptionSetId(
                                                                "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet")
                                                            .withLun(1)))))))
            .withStorageProfile(
                new GalleryImageVersionStorageProfile()
                    .withSource(
                        new GalleryArtifactVersionSource()
                            .withId(
                                "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageDefinitionName}/versions/{versionName}")))
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-10-01/examples/gallery/CreateOrUpdateASimpleGalleryImageVersionWithSnapshotsAsSource.json
     */
    /**
     * Sample code: Create or update a simple Gallery Image Version using mix of disks and snapshots as a source.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createOrUpdateASimpleGalleryImageVersionUsingMixOfDisksAndSnapshotsAsASource(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .galleryImageVersions()
            .define("1.0.0")
            .withRegion("West US")
            .withExistingImage("myResourceGroup", "myGalleryName", "myGalleryImageName")
            .withPublishingProfile(
                new GalleryImageVersionPublishingProfile()
                    .withTargetRegions(
                        Arrays
                            .asList(
                                new TargetRegion()
                                    .withName("West US")
                                    .withRegionalReplicaCount(1)
                                    .withEncryption(
                                        new EncryptionImages()
                                            .withOsDiskImage(
                                                new OSDiskImageEncryption()
                                                    .withDiskEncryptionSetId(
                                                        "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet"))
                                            .withDataDiskImages(
                                                Arrays
                                                    .asList(
                                                        new DataDiskImageEncryption()
                                                            .withDiskEncryptionSetId(
                                                                "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet")
                                                            .withLun(1)))),
                                new TargetRegion()
                                    .withName("East US")
                                    .withRegionalReplicaCount(2)
                                    .withStorageAccountType(StorageAccountType.STANDARD_ZRS)
                                    .withEncryption(
                                        new EncryptionImages()
                                            .withOsDiskImage(
                                                new OSDiskImageEncryption()
                                                    .withDiskEncryptionSetId(
                                                        "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet"))
                                            .withDataDiskImages(
                                                Arrays
                                                    .asList(
                                                        new DataDiskImageEncryption()
                                                            .withDiskEncryptionSetId(
                                                                "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet")
                                                            .withLun(1)))))))
            .withStorageProfile(
                new GalleryImageVersionStorageProfile()
                    .withOsDiskImage(
                        new GalleryOSDiskImage()
                            .withHostCaching(HostCaching.READ_ONLY)
                            .withSource(
                                new GalleryArtifactVersionSource()
                                    .withId(
                                        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/snapshots/{osSnapshotName}")))
                    .withDataDiskImages(
                        Arrays
                            .asList(
                                new GalleryDataDiskImage()
                                    .withHostCaching(HostCaching.NONE)
                                    .withSource(
                                        new GalleryArtifactVersionSource()
                                            .withId(
                                                "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/disks/{dataDiskName}"))
                                    .withLun(1))))
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-10-01/examples/gallery/CreateOrUpdateASimpleGalleryImageVersionWithSnapshotsAsSource.json
     */
    /**
     * Sample code: Create or update a simple Gallery Image Version using snapshots as a source.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createOrUpdateASimpleGalleryImageVersionUsingSnapshotsAsASource(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .galleryImageVersions()
            .define("1.0.0")
            .withRegion("West US")
            .withExistingImage("myResourceGroup", "myGalleryName", "myGalleryImageName")
            .withPublishingProfile(
                new GalleryImageVersionPublishingProfile()
                    .withTargetRegions(
                        Arrays
                            .asList(
                                new TargetRegion()
                                    .withName("West US")
                                    .withRegionalReplicaCount(1)
                                    .withEncryption(
                                        new EncryptionImages()
                                            .withOsDiskImage(
                                                new OSDiskImageEncryption()
                                                    .withDiskEncryptionSetId(
                                                        "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet"))
                                            .withDataDiskImages(
                                                Arrays
                                                    .asList(
                                                        new DataDiskImageEncryption()
                                                            .withDiskEncryptionSetId(
                                                                "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet")
                                                            .withLun(1)))),
                                new TargetRegion()
                                    .withName("East US")
                                    .withRegionalReplicaCount(2)
                                    .withStorageAccountType(StorageAccountType.STANDARD_ZRS)
                                    .withEncryption(
                                        new EncryptionImages()
                                            .withOsDiskImage(
                                                new OSDiskImageEncryption()
                                                    .withDiskEncryptionSetId(
                                                        "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet"))
                                            .withDataDiskImages(
                                                Arrays
                                                    .asList(
                                                        new DataDiskImageEncryption()
                                                            .withDiskEncryptionSetId(
                                                                "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet")
                                                            .withLun(1)))))))
            .withStorageProfile(
                new GalleryImageVersionStorageProfile()
                    .withOsDiskImage(
                        new GalleryOSDiskImage()
                            .withHostCaching(HostCaching.READ_ONLY)
                            .withSource(
                                new GalleryArtifactVersionSource()
                                    .withId(
                                        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/snapshots/{osSnapshotName}")))
                    .withDataDiskImages(
                        Arrays
                            .asList(
                                new GalleryDataDiskImage()
                                    .withHostCaching(HostCaching.NONE)
                                    .withSource(
                                        new GalleryArtifactVersionSource()
                                            .withId(
                                                "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/disks/{dataDiskName}"))
                                    .withLun(1))))
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-10-01/examples/gallery/CreateOrUpdateASimpleGalleryImageVersionWithTargetExtendedLocations.json
     */
    /**
     * Sample code: Create or update a simple gallery image version with target extended locations specified.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createOrUpdateASimpleGalleryImageVersionWithTargetExtendedLocationsSpecified(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .galleryImageVersions()
            .define("1.0.0")
            .withRegion("West US")
            .withExistingImage("myResourceGroup", "myGalleryName", "myGalleryImageName")
            .withPublishingProfile(
                new GalleryImageVersionPublishingProfile()
                    .withTargetRegions(
                        Arrays
                            .asList(
                                new TargetRegion()
                                    .withName("West US")
                                    .withRegionalReplicaCount(1)
                                    .withEncryption(
                                        new EncryptionImages()
                                            .withOsDiskImage(
                                                new OSDiskImageEncryption()
                                                    .withDiskEncryptionSetId(
                                                        "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet"))
                                            .withDataDiskImages(
                                                Arrays
                                                    .asList(
                                                        new DataDiskImageEncryption()
                                                            .withDiskEncryptionSetId(
                                                                "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherWestUSDiskEncryptionSet")
                                                            .withLun(0),
                                                        new DataDiskImageEncryption()
                                                            .withDiskEncryptionSetId(
                                                                "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet")
                                                            .withLun(1)))),
                                new TargetRegion()
                                    .withName("East US")
                                    .withRegionalReplicaCount(2)
                                    .withStorageAccountType(StorageAccountType.STANDARD_ZRS)
                                    .withEncryption(
                                        new EncryptionImages()
                                            .withOsDiskImage(
                                                new OSDiskImageEncryption()
                                                    .withDiskEncryptionSetId(
                                                        "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet"))
                                            .withDataDiskImages(
                                                Arrays
                                                    .asList(
                                                        new DataDiskImageEncryption()
                                                            .withDiskEncryptionSetId(
                                                                "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherEastUSDiskEncryptionSet")
                                                            .withLun(0),
                                                        new DataDiskImageEncryption()
                                                            .withDiskEncryptionSetId(
                                                                "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet")
                                                            .withLun(1)))))))
            .withStorageProfile(
                new GalleryImageVersionStorageProfile()
                    .withSource(
                        new GalleryArtifactVersionSource()
                            .withId(
                                "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}")))
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-10-01/examples/gallery/CreateOrUpdateASimpleGalleryImageVersion.json
     */
    /**
     * Sample code: Create or update a simple Gallery Image Version using managed image as source.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createOrUpdateASimpleGalleryImageVersionUsingManagedImageAsSource(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .galleryImageVersions()
            .define("1.0.0")
            .withRegion("West US")
            .withExistingImage("myResourceGroup", "myGalleryName", "myGalleryImageName")
            .withPublishingProfile(
                new GalleryImageVersionPublishingProfile()
                    .withTargetRegions(
                        Arrays
                            .asList(
                                new TargetRegion()
                                    .withName("West US")
                                    .withRegionalReplicaCount(1)
                                    .withEncryption(
                                        new EncryptionImages()
                                            .withOsDiskImage(
                                                new OSDiskImageEncryption()
                                                    .withDiskEncryptionSetId(
                                                        "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet"))
                                            .withDataDiskImages(
                                                Arrays
                                                    .asList(
                                                        new DataDiskImageEncryption()
                                                            .withDiskEncryptionSetId(
                                                                "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherWestUSDiskEncryptionSet")
                                                            .withLun(0),
                                                        new DataDiskImageEncryption()
                                                            .withDiskEncryptionSetId(
                                                                "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet")
                                                            .withLun(1)))),
                                new TargetRegion()
                                    .withName("East US")
                                    .withRegionalReplicaCount(2)
                                    .withStorageAccountType(StorageAccountType.STANDARD_ZRS)
                                    .withEncryption(
                                        new EncryptionImages()
                                            .withOsDiskImage(
                                                new OSDiskImageEncryption()
                                                    .withDiskEncryptionSetId(
                                                        "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet"))
                                            .withDataDiskImages(
                                                Arrays
                                                    .asList(
                                                        new DataDiskImageEncryption()
                                                            .withDiskEncryptionSetId(
                                                                "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherEastUSDiskEncryptionSet")
                                                            .withLun(0),
                                                        new DataDiskImageEncryption()
                                                            .withDiskEncryptionSetId(
                                                                "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet")
                                                            .withLun(1)))))))
            .withStorageProfile(
                new GalleryImageVersionStorageProfile()
                    .withSource(
                        new GalleryArtifactVersionSource()
                            .withId(
                                "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}")))
            .create();
    }
}
