// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.generated;

import com.azure.core.management.SubResource;
import com.azure.core.management.serializer.SerializerFactory;
import com.azure.core.util.serializer.SerializerEncoding;
import com.azure.resourcemanager.compute.generated.fluent.models.VirtualMachineScaleSetExtensionInner;
import com.azure.resourcemanager.compute.generated.models.ApiEntityReference;
import com.azure.resourcemanager.compute.generated.models.ApplicationProfile;
import com.azure.resourcemanager.compute.generated.models.AutomaticRepairsPolicy;
import com.azure.resourcemanager.compute.generated.models.BillingProfile;
import com.azure.resourcemanager.compute.generated.models.BootDiagnostics;
import com.azure.resourcemanager.compute.generated.models.CachingTypes;
import com.azure.resourcemanager.compute.generated.models.CapacityReservationProfile;
import com.azure.resourcemanager.compute.generated.models.DiagnosticsProfile;
import com.azure.resourcemanager.compute.generated.models.DiffDiskOptions;
import com.azure.resourcemanager.compute.generated.models.DiffDiskPlacement;
import com.azure.resourcemanager.compute.generated.models.DiffDiskSettings;
import com.azure.resourcemanager.compute.generated.models.DiskCreateOptionTypes;
import com.azure.resourcemanager.compute.generated.models.DiskEncryptionSetParameters;
import com.azure.resourcemanager.compute.generated.models.ImageReference;
import com.azure.resourcemanager.compute.generated.models.IpVersion;
import com.azure.resourcemanager.compute.generated.models.LinuxConfiguration;
import com.azure.resourcemanager.compute.generated.models.Plan;
import com.azure.resourcemanager.compute.generated.models.ScaleInPolicy;
import com.azure.resourcemanager.compute.generated.models.ScheduledEventsProfile;
import com.azure.resourcemanager.compute.generated.models.SecurityEncryptionTypes;
import com.azure.resourcemanager.compute.generated.models.SecurityProfile;
import com.azure.resourcemanager.compute.generated.models.SecurityTypes;
import com.azure.resourcemanager.compute.generated.models.Sku;
import com.azure.resourcemanager.compute.generated.models.SpotRestorePolicy;
import com.azure.resourcemanager.compute.generated.models.SshConfiguration;
import com.azure.resourcemanager.compute.generated.models.SshPublicKey;
import com.azure.resourcemanager.compute.generated.models.StorageAccountTypes;
import com.azure.resourcemanager.compute.generated.models.TerminateNotificationProfile;
import com.azure.resourcemanager.compute.generated.models.UefiSettings;
import com.azure.resourcemanager.compute.generated.models.UpgradeMode;
import com.azure.resourcemanager.compute.generated.models.UpgradePolicy;
import com.azure.resourcemanager.compute.generated.models.VMDiskSecurityProfile;
import com.azure.resourcemanager.compute.generated.models.VMGalleryApplication;
import com.azure.resourcemanager.compute.generated.models.VMSizeProperties;
import com.azure.resourcemanager.compute.generated.models.VirtualHardDisk;
import com.azure.resourcemanager.compute.generated.models.VirtualMachineEvictionPolicyTypes;
import com.azure.resourcemanager.compute.generated.models.VirtualMachinePriorityTypes;
import com.azure.resourcemanager.compute.generated.models.VirtualMachineScaleSetDataDisk;
import com.azure.resourcemanager.compute.generated.models.VirtualMachineScaleSetExtensionProfile;
import com.azure.resourcemanager.compute.generated.models.VirtualMachineScaleSetHardwareProfile;
import com.azure.resourcemanager.compute.generated.models.VirtualMachineScaleSetIpConfiguration;
import com.azure.resourcemanager.compute.generated.models.VirtualMachineScaleSetManagedDiskParameters;
import com.azure.resourcemanager.compute.generated.models.VirtualMachineScaleSetNetworkConfiguration;
import com.azure.resourcemanager.compute.generated.models.VirtualMachineScaleSetNetworkProfile;
import com.azure.resourcemanager.compute.generated.models.VirtualMachineScaleSetOSDisk;
import com.azure.resourcemanager.compute.generated.models.VirtualMachineScaleSetOSProfile;
import com.azure.resourcemanager.compute.generated.models.VirtualMachineScaleSetPublicIpAddressConfiguration;
import com.azure.resourcemanager.compute.generated.models.VirtualMachineScaleSetScaleInRules;
import com.azure.resourcemanager.compute.generated.models.VirtualMachineScaleSetStorageProfile;
import com.azure.resourcemanager.compute.generated.models.VirtualMachineScaleSetVMProfile;
import java.io.IOException;
import java.util.Arrays;

/** Samples for VirtualMachineScaleSets CreateOrUpdate. */
public final class VirtualMachineScaleSetsCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetWithEmptyDataDisksOnEachVm.json
     */
    /**
     * Sample code: Create a scale set with empty data disks on each vm.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetWithEmptyDataDisksOnEachVm(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_D2_v2").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("MicrosoftWindowsServer")
                                    .withOffer("WindowsServer")
                                    .withSku("2016-Datacenter")
                                    .withVersion("latest"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withDiskSizeGB(512)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS)))
                            .withDataDisks(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetDataDisk()
                                            .withLun(0)
                                            .withCreateOption(DiskCreateOptionTypes.EMPTY)
                                            .withDiskSizeGB(1023),
                                        new VirtualMachineScaleSetDataDisk()
                                            .withLun(1)
                                            .withCreateOption(DiskCreateOptionTypes.EMPTY)
                                            .withDiskSizeGB(1023))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true)))))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateOrUpdateAScaleSetWithUserData.json
     */
    /**
     * Sample code: Create a scale set with userData.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetWithUserData(com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_D1_v2").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("MicrosoftWindowsServer")
                                    .withOffer("WindowsServer")
                                    .withSku("2016-Datacenter")
                                    .withVersion("latest"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true))))
                    .withUserData("RXhhbXBsZSBVc2VyRGF0YQ=="))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetFromWithFpgaNetworkInterface.json
     */
    /**
     * Sample code: Create a scale set with Fpga Network Interfaces.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetWithFpgaNetworkInterfaces(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_D1_v2").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withId(
                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/{existing-custom-image-name}"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true),
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{fpgaNic-Name}")
                                            .withPrimary(false)
                                            .withEnableAcceleratedNetworking(false)
                                            .withEnableFpga(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{fpgaNic-Name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-fpga-subnet-name}"))
                                                            .withPrimary(true)
                                                            .withPrivateIpAddressVersion(IpVersion.IPV4)))
                                            .withEnableIpForwarding(false)))))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetFromACustomImage.json
     */
    /**
     * Sample code: Create a scale set from a custom image.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetFromACustomImage(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_D1_v2").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withId(
                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/{existing-custom-image-name}"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true)))))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetWithDiffOsDiskUsingDiffDiskPlacement.json
     */
    /**
     * Sample code: Create a scale set with ephemeral os disks using placement property.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetWithEphemeralOsDisksUsingPlacementProperty(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_DS1_v2").withTier("Standard").withCapacity(3L))
            .withPlan(
                new Plan()
                    .withName("windows2016")
                    .withPublisher("microsoft-ads")
                    .withProduct("windows-data-science-vm"))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("microsoft-ads")
                                    .withOffer("windows-data-science-vm")
                                    .withSku("windows2016")
                                    .withVersion("latest"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_ONLY)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withDiffDiskSettings(
                                        new DiffDiskSettings()
                                            .withOption(DiffDiskOptions.LOCAL)
                                            .withPlacement(DiffDiskPlacement.RESOURCE_DISK))
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true)))))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetWithScaleInPolicy.json
     */
    /**
     * Sample code: Create a scale set with scaleInPolicy.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetWithScaleInPolicy(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_D1_v2").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("MicrosoftWindowsServer")
                                    .withOffer("WindowsServer")
                                    .withSku("2016-Datacenter")
                                    .withVersion("latest"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true)))))
            .withOverprovision(true)
            .withScaleInPolicy(
                new ScaleInPolicy()
                    .withRules(Arrays.asList(VirtualMachineScaleSetScaleInRules.OLDEST_VM))
                    .withForceDeletion(true))
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetWithEncryptionAtHost.json
     */
    /**
     * Sample code: Create a scale set with Host Encryption using encryptionAtHost property.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetWithHostEncryptionUsingEncryptionAtHostProperty(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_DS1_v2").withTier("Standard").withCapacity(3L))
            .withPlan(
                new Plan()
                    .withName("windows2016")
                    .withPublisher("microsoft-ads")
                    .withProduct("windows-data-science-vm"))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("microsoft-ads")
                                    .withOffer("windows-data-science-vm")
                                    .withSku("windows2016")
                                    .withVersion("latest"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_ONLY)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true))))
                    .withSecurityProfile(new SecurityProfile().withEncryptionAtHost(true)))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetWithProtectedSettingsFromKeyVault.json
     */
    /**
     * Sample code: Create a VMSS with an extension with protectedSettingsFromKeyVault.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAVMSSWithAnExtensionWithProtectedSettingsFromKeyVault(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) throws IOException {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_D1_v2").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("MicrosoftWindowsServer")
                                    .withOffer("WindowsServer")
                                    .withSku("2016-Datacenter")
                                    .withVersion("latest"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true))))
                    .withDiagnosticsProfile(
                        new DiagnosticsProfile()
                            .withBootDiagnostics(
                                new BootDiagnostics()
                                    .withEnabled(true)
                                    .withStorageUri("http://{existing-storage-account-name}.blob.core.windows.net")))
                    .withExtensionProfile(
                        new VirtualMachineScaleSetExtensionProfile()
                            .withExtensions(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetExtensionInner()
                                            .withName("{extension-name}")
                                            .withPublisher("{extension-Publisher}")
                                            .withTypePropertiesType("{extension-Type}")
                                            .withTypeHandlerVersion("{handler-version}")
                                            .withAutoUpgradeMinorVersion(false)
                                            .withSettings(
                                                SerializerFactory
                                                    .createDefaultManagementSerializerAdapter()
                                                    .deserialize("{}", Object.class, SerializerEncoding.JSON))
                                            .withProtectedSettingsFromKeyVault(
                                                SerializerFactory
                                                    .createDefaultManagementSerializerAdapter()
                                                    .deserialize(
                                                        "{\"secretUrl\":\"https://kvName.vault.azure.net/secrets/secretName/79b88b3a6f5440ffb2e73e44a0db712e\",\"sourceVault\":{\"id\":\"/subscriptions/a53f7094-a16c-47af-abe4-b05c05d0d79a/resourceGroups/myResourceGroup/providers/Microsoft.KeyVault/vaults/kvName\"}}",
                                                        Object.class,
                                                        SerializerEncoding.JSON))))))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetWithAnAzureLoadBalancer.json
     */
    /**
     * Sample code: Create a scale set with an azure load balancer.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetWithAnAzureLoadBalancer(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_D1_v2").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("MicrosoftWindowsServer")
                                    .withOffer("WindowsServer")
                                    .withSku("2016-Datacenter")
                                    .withVersion("latest"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))
                                                            .withPublicIpAddressConfiguration(
                                                                new VirtualMachineScaleSetPublicIpAddressConfiguration()
                                                                    .withName("{vmss-name}")
                                                                    .withPublicIpAddressVersion(IpVersion.IPV4))
                                                            .withLoadBalancerBackendAddressPools(
                                                                Arrays
                                                                    .asList(
                                                                        new SubResource()
                                                                            .withId(
                                                                                "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/loadBalancers/{existing-load-balancer-name}/backendAddressPools/{existing-backend-address-pool-name}")))
                                                            .withLoadBalancerInboundNatPools(
                                                                Arrays
                                                                    .asList(
                                                                        new SubResource()
                                                                            .withId(
                                                                                "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/loadBalancers/{existing-load-balancer-name}/inboundNatPools/{existing-nat-pool-name}")))))
                                            .withEnableIpForwarding(true)))))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetWithManagedBootDiagnostics.json
     */
    /**
     * Sample code: Create a scale set with managed boot diagnostics.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetWithManagedBootDiagnostics(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_D1_v2").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("MicrosoftWindowsServer")
                                    .withOffer("WindowsServer")
                                    .withSku("2016-Datacenter")
                                    .withVersion("latest"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true))))
                    .withDiagnosticsProfile(
                        new DiagnosticsProfile().withBootDiagnostics(new BootDiagnostics().withEnabled(true))))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetWithAMarketplaceImagePlan.json
     */
    /**
     * Sample code: Create a scale set with a marketplace image plan.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetWithAMarketplaceImagePlan(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_D1_v2").withTier("Standard").withCapacity(3L))
            .withPlan(
                new Plan()
                    .withName("windows2016")
                    .withPublisher("microsoft-ads")
                    .withProduct("windows-data-science-vm"))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("microsoft-ads")
                                    .withOffer("windows-data-science-vm")
                                    .withSku("windows2016")
                                    .withVersion("latest"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true)))))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetWithDiffOsDisk.json
     */
    /**
     * Sample code: Create a scale set with ephemeral os disks.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetWithEphemeralOsDisks(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_DS1_v2").withTier("Standard").withCapacity(3L))
            .withPlan(
                new Plan()
                    .withName("windows2016")
                    .withPublisher("microsoft-ads")
                    .withProduct("windows-data-science-vm"))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("microsoft-ads")
                                    .withOffer("windows-data-science-vm")
                                    .withSku("windows2016")
                                    .withVersion("latest"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_ONLY)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withDiffDiskSettings(new DiffDiskSettings().withOption(DiffDiskOptions.LOCAL))
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true)))))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetWithVMsInDifferentZones.json
     */
    /**
     * Sample code: Create a scale set with virtual machines in different zones.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetWithVirtualMachinesInDifferentZones(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("centralus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_A1_v2").withTier("Standard").withCapacity(2L))
            .withZones(Arrays.asList("1", "3"))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.AUTOMATIC))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("MicrosoftWindowsServer")
                                    .withOffer("WindowsServer")
                                    .withSku("2016-Datacenter")
                                    .withVersion("latest"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withDiskSizeGB(512)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS)))
                            .withDataDisks(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetDataDisk()
                                            .withLun(0)
                                            .withCreateOption(DiskCreateOptionTypes.EMPTY)
                                            .withDiskSizeGB(1023),
                                        new VirtualMachineScaleSetDataDisk()
                                            .withLun(1)
                                            .withCreateOption(DiskCreateOptionTypes.EMPTY)
                                            .withDiskSizeGB(1023))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true)))))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateOrUpdateAScaleSetWithCapacityReservation.json
     */
    /**
     * Sample code: Create or update a scale set with capacity reservation.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createOrUpdateAScaleSetWithCapacityReservation(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_DS1_v2").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("MicrosoftWindowsServer")
                                    .withOffer("WindowsServer")
                                    .withSku("2016-Datacenter")
                                    .withVersion("latest"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true))))
                    .withCapacityReservation(
                        new CapacityReservationProfile()
                            .withCapacityReservationGroup(
                                new SubResource()
                                    .withId(
                                        "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/CapacityReservationGroups/{crgName}"))))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetWithSecurityTypeConfidentialVM.json
     */
    /**
     * Sample code: Create a scale set with SecurityType as ConfidentialVM.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetWithSecurityTypeAsConfidentialVM(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_DC2as_v5").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("MicrosoftWindowsServer")
                                    .withOffer("2019-datacenter-cvm")
                                    .withSku("windows-cvm")
                                    .withVersion("17763.2183.2109130127"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_ONLY)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_SSD_LRS)
                                            .withSecurityProfile(
                                                new VMDiskSecurityProfile()
                                                    .withSecurityEncryptionType(
                                                        SecurityEncryptionTypes.VMGUEST_STATE_ONLY)))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true))))
                    .withSecurityProfile(
                        new SecurityProfile()
                            .withUefiSettings(new UefiSettings().withSecureBootEnabled(true).withVTpmEnabled(true))
                            .withSecurityType(SecurityTypes.CONFIDENTIAL_VM)))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetWithSshAuthentication.json
     */
    /**
     * Sample code: Create a scale set with ssh authentication.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetWithSshAuthentication(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_D1_v2").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withLinuxConfiguration(
                                new LinuxConfiguration()
                                    .withDisablePasswordAuthentication(true)
                                    .withSsh(
                                        new SshConfiguration()
                                            .withPublicKeys(
                                                Arrays
                                                    .asList(
                                                        new SshPublicKey()
                                                            .withPath("/home/{your-username}/.ssh/authorized_keys")
                                                            .withKeyData(
                                                                "ssh-rsa"
                                                                    + " AAAAB3NzaC1yc2EAAAADAQABAAABAQCeClRAk2ipUs/l5voIsDC5q9RI+YSRd1Bvd/O+axgY4WiBzG+4FwJWZm/mLLe5DoOdHQwmU2FrKXZSW4w2sYE70KeWnrFViCOX5MTVvJgPE8ClugNl8RWth/tU849DvM9sT7vFgfVSHcAS2yDRyDlueii+8nF2ym8XWAPltFVCyLHRsyBp5YPqK8JFYIa1eybKsY3hEAxRCA+/7bq8et+Gj3coOsuRmrehav7rE6N12Pb80I6ofa6SM5XNYq4Xk0iYNx7R3kdz0Jj9XgZYWjAHjJmT0gTRoOnt6upOuxK7xI/ykWrllgpXrCPu3Ymz+c+ujaqcxDopnAl2lmf69/J1"))))))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("MicrosoftWindowsServer")
                                    .withOffer("WindowsServer")
                                    .withSku("2016-Datacenter")
                                    .withVersion("latest"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true)))))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetWithAnAzureApplicationGateway.json
     */
    /**
     * Sample code: Create a scale set with an azure application gateway.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetWithAnAzureApplicationGateway(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_D1_v2").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("MicrosoftWindowsServer")
                                    .withOffer("WindowsServer")
                                    .withSku("2016-Datacenter")
                                    .withVersion("latest"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))
                                                            .withApplicationGatewayBackendAddressPools(
                                                                Arrays
                                                                    .asList(
                                                                        new SubResource()
                                                                            .withId(
                                                                                "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/applicationGateways/{existing-application-gateway-name}/backendAddressPools/{existing-backend-address-pool-name}")))))
                                            .withEnableIpForwarding(true)))))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateACustomImageScaleSetFromAnUnmanagedGeneralizedOsImage.json
     */
    /**
     * Sample code: Create a custom-image scale set from an unmanaged generalized os image.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createACustomImageScaleSetFromAnUnmanagedGeneralizedOsImage(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_D1_v2").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withName("osDisk")
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withImage(
                                        new VirtualHardDisk()
                                            .withUri(
                                                "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/{existing-generalized-os-image-blob-name}.vhd"))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true)))))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetWithExtensionsTimeBudget.json
     */
    /**
     * Sample code: Create a scale set with extension time budget.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetWithExtensionTimeBudget(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) throws IOException {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_D1_v2").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("MicrosoftWindowsServer")
                                    .withOffer("WindowsServer")
                                    .withSku("2016-Datacenter")
                                    .withVersion("latest"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true))))
                    .withDiagnosticsProfile(
                        new DiagnosticsProfile()
                            .withBootDiagnostics(
                                new BootDiagnostics()
                                    .withEnabled(true)
                                    .withStorageUri("http://{existing-storage-account-name}.blob.core.windows.net")))
                    .withExtensionProfile(
                        new VirtualMachineScaleSetExtensionProfile()
                            .withExtensions(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetExtensionInner()
                                            .withName("{extension-name}")
                                            .withPublisher("{extension-Publisher}")
                                            .withTypePropertiesType("{extension-Type}")
                                            .withTypeHandlerVersion("{handler-version}")
                                            .withAutoUpgradeMinorVersion(false)
                                            .withSettings(
                                                SerializerFactory
                                                    .createDefaultManagementSerializerAdapter()
                                                    .deserialize("{}", Object.class, SerializerEncoding.JSON))))
                            .withExtensionsTimeBudget("PT1H20M")))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetWithApplicationProfile.json
     */
    /**
     * Sample code: Create a scale set with Application Profile.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetWithApplicationProfile(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_D1_v2").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("MicrosoftWindowsServer")
                                    .withOffer("WindowsServer")
                                    .withSku("2016-Datacenter")
                                    .withVersion("latest"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true))))
                    .withApplicationProfile(
                        new ApplicationProfile()
                            .withGalleryApplications(
                                Arrays
                                    .asList(
                                        new VMGalleryApplication()
                                            .withTags("myTag1")
                                            .withOrder(1)
                                            .withPackageReferenceId(
                                                "/subscriptions/32c17a9e-aa7b-4ba5-a45b-e324116b6fdb/resourceGroups/myresourceGroupName2/providers/Microsoft.Compute/galleries/myGallery1/applications/MyApplication1/versions/1.0")
                                            .withConfigurationReference(
                                                "https://mystorageaccount.blob.core.windows.net/configurations/settings.config"),
                                        new VMGalleryApplication()
                                            .withPackageReferenceId(
                                                "/subscriptions/32c17a9e-aa7b-4ba5-a45b-e324116b6fdg/resourceGroups/myresourceGroupName3/providers/Microsoft.Compute/galleries/myGallery2/applications/MyApplication2/versions/1.1")))))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScalesetWithDiskEncryptionSetResource.json
     */
    /**
     * Sample code: Create a scale set with DiskEncryptionSet resource in os disk and data disk.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetWithDiskEncryptionSetResourceInOsDiskAndDataDisk(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_DS1_v2").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withId(
                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/{existing-custom-image-name}"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS)
                                            .withDiskEncryptionSet(
                                                new DiskEncryptionSetParameters()
                                                    .withId(
                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"))))
                            .withDataDisks(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetDataDisk()
                                            .withLun(0)
                                            .withCaching(CachingTypes.READ_WRITE)
                                            .withCreateOption(DiskCreateOptionTypes.EMPTY)
                                            .withDiskSizeGB(1023)
                                            .withManagedDisk(
                                                new VirtualMachineScaleSetManagedDiskParameters()
                                                    .withStorageAccountType(StorageAccountTypes.STANDARD_LRS)
                                                    .withDiskEncryptionSet(
                                                        new DiskEncryptionSetParameters()
                                                            .withId(
                                                                "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"))))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true)))))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetWithPremiumStorage.json
     */
    /**
     * Sample code: Create a scale set with premium storage.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetWithPremiumStorage(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_D1_v2").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("MicrosoftWindowsServer")
                                    .withOffer("WindowsServer")
                                    .withSku("2016-Datacenter")
                                    .withVersion("latest"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.PREMIUM_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true)))))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateOrUpdateAScaleSetWithVMSizeProperties.json
     */
    /**
     * Sample code: Create a scale set with vm size properties.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetWithVmSizeProperties(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_D1_v2").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("MicrosoftWindowsServer")
                                    .withOffer("WindowsServer")
                                    .withSku("2016-Datacenter")
                                    .withVersion("latest"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true))))
                    .withUserData("RXhhbXBsZSBVc2VyRGF0YQ==")
                    .withHardwareProfile(
                        new VirtualMachineScaleSetHardwareProfile()
                            .withVmSizeProperties(new VMSizeProperties().withVCpusAvailable(1).withVCpusPerCore(1))))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetWithTerminateScheduledEventEnabled.json
     */
    /**
     * Sample code: Create a scale set with terminate scheduled events enabled.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetWithTerminateScheduledEventsEnabled(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_D1_v2").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("MicrosoftWindowsServer")
                                    .withOffer("WindowsServer")
                                    .withSku("2016-Datacenter")
                                    .withVersion("latest"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true))))
                    .withScheduledEventsProfile(
                        new ScheduledEventsProfile()
                            .withTerminateNotificationProfile(
                                new TerminateNotificationProfile().withNotBeforeTimeout("PT5M").withEnable(true))))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetWithExtensionsSuppressFailuresEnabled.json
     */
    /**
     * Sample code: Create a VMSS with an extension that has suppressFailures enabled.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAVMSSWithAnExtensionThatHasSuppressFailuresEnabled(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) throws IOException {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_D1_v2").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("MicrosoftWindowsServer")
                                    .withOffer("WindowsServer")
                                    .withSku("2016-Datacenter")
                                    .withVersion("latest"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true))))
                    .withDiagnosticsProfile(
                        new DiagnosticsProfile()
                            .withBootDiagnostics(
                                new BootDiagnostics()
                                    .withEnabled(true)
                                    .withStorageUri("http://{existing-storage-account-name}.blob.core.windows.net")))
                    .withExtensionProfile(
                        new VirtualMachineScaleSetExtensionProfile()
                            .withExtensions(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetExtensionInner()
                                            .withName("{extension-name}")
                                            .withPublisher("{extension-Publisher}")
                                            .withTypePropertiesType("{extension-Type}")
                                            .withTypeHandlerVersion("{handler-version}")
                                            .withAutoUpgradeMinorVersion(false)
                                            .withSettings(
                                                SerializerFactory
                                                    .createDefaultManagementSerializerAdapter()
                                                    .deserialize("{}", Object.class, SerializerEncoding.JSON))
                                            .withSuppressFailures(true)))))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAPlatformImageScaleSetWithUnmanagedOsDisks.json
     */
    /**
     * Sample code: Create a platform-image scale set with unmanaged os disks.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAPlatformImageScaleSetWithUnmanagedOsDisks(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_D1_v2").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("MicrosoftWindowsServer")
                                    .withOffer("WindowsServer")
                                    .withSku("2016-Datacenter")
                                    .withVersion("latest"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withName("osDisk")
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withVhdContainers(
                                        Arrays
                                            .asList(
                                                "http://{existing-storage-account-name-0}.blob.core.windows.net/vhdContainer",
                                                "http://{existing-storage-account-name-1}.blob.core.windows.net/vhdContainer",
                                                "http://{existing-storage-account-name-2}.blob.core.windows.net/vhdContainer",
                                                "http://{existing-storage-account-name-3}.blob.core.windows.net/vhdContainer",
                                                "http://{existing-storage-account-name-4}.blob.core.windows.net/vhdContainer"))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true)))))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetWithUefiSettings.json
     */
    /**
     * Sample code: Create a scale set with Uefi Settings of secureBoot and vTPM.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetWithUefiSettingsOfSecureBootAndVTPM(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_D2s_v3").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("MicrosoftWindowsServer")
                                    .withOffer("windowsserver-gen2preview-preview")
                                    .withSku("windows10-tvm")
                                    .withVersion("18363.592.2001092016"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_ONLY)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_SSD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true))))
                    .withSecurityProfile(
                        new SecurityProfile()
                            .withUefiSettings(new UefiSettings().withSecureBootEnabled(true).withVTpmEnabled(true))
                            .withSecurityType(SecurityTypes.TRUSTED_LAUNCH)))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetWithPasswordAuthentication.json
     */
    /**
     * Sample code: Create a scale set with password authentication.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetWithPasswordAuthentication(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_D1_v2").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("MicrosoftWindowsServer")
                                    .withOffer("WindowsServer")
                                    .withSku("2016-Datacenter")
                                    .withVersion("latest"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true)))))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetWithAutomaticRepairs.json
     */
    /**
     * Sample code: Create a scale set with automatic repairs enabled.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetWithAutomaticRepairsEnabled(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_D1_v2").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withAutomaticRepairsPolicy(new AutomaticRepairsPolicy().withEnabled(true).withGracePeriod("PT10M"))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("MicrosoftWindowsServer")
                                    .withOffer("WindowsServer")
                                    .withSku("2016-Datacenter")
                                    .withVersion("latest"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true)))))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetWithSpotRestorePolicy.json
     */
    /**
     * Sample code: Create a scale set with spot restore policy.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetWithSpotRestorePolicy(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_A8m_v2").withTier("Standard").withCapacity(2L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("MicrosoftWindowsServer")
                                    .withOffer("WindowsServer")
                                    .withSku("2016-Datacenter")
                                    .withVersion("latest"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true))))
                    .withPriority(VirtualMachinePriorityTypes.SPOT)
                    .withEvictionPolicy(VirtualMachineEvictionPolicyTypes.DEALLOCATE)
                    .withBillingProfile(new BillingProfile().withMaxPrice(-1.0)))
            .withOverprovision(true)
            .withSpotRestorePolicy(new SpotRestorePolicy().withEnabled(true).withRestoreTimeout("PT1H"))
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetFromAGeneralizedSharedImage.json
     */
    /**
     * Sample code: Create a scale set from a generalized shared image.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetFromAGeneralizedSharedImage(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_D1_v2").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withId(
                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/mySharedGallery/images/mySharedImage"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true)))))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetWithBootDiagnostics.json
     */
    /**
     * Sample code: Create a scale set with boot diagnostics.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetWithBootDiagnostics(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_D1_v2").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withOsProfile(
                        new VirtualMachineScaleSetOSProfile()
                            .withComputerNamePrefix("{vmss-name}")
                            .withAdminUsername("{your-username}")
                            .withAdminPassword("{your-password}"))
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withPublisher("MicrosoftWindowsServer")
                                    .withOffer("WindowsServer")
                                    .withSku("2016-Datacenter")
                                    .withVersion("latest"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true))))
                    .withDiagnosticsProfile(
                        new DiagnosticsProfile()
                            .withBootDiagnostics(
                                new BootDiagnostics()
                                    .withEnabled(true)
                                    .withStorageUri("http://{existing-storage-account-name}.blob.core.windows.net"))))
            .withOverprovision(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAScaleSetFromASpecializedSharedImage.json
     */
    /**
     * Sample code: Create a scale set from a specialized shared image.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createAScaleSetFromASpecializedSharedImage(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        manager
            .virtualMachineScaleSets()
            .define("{vmss-name}")
            .withRegion("westus")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new Sku().withName("Standard_D1_v2").withTier("Standard").withCapacity(3L))
            .withUpgradePolicy(new UpgradePolicy().withMode(UpgradeMode.MANUAL))
            .withVirtualMachineProfile(
                new VirtualMachineScaleSetVMProfile()
                    .withStorageProfile(
                        new VirtualMachineScaleSetStorageProfile()
                            .withImageReference(
                                new ImageReference()
                                    .withId(
                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/mySharedGallery/images/mySharedImage"))
                            .withOsDisk(
                                new VirtualMachineScaleSetOSDisk()
                                    .withCaching(CachingTypes.READ_WRITE)
                                    .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                    .withManagedDisk(
                                        new VirtualMachineScaleSetManagedDiskParameters()
                                            .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                    .withNetworkProfile(
                        new VirtualMachineScaleSetNetworkProfile()
                            .withNetworkInterfaceConfigurations(
                                Arrays
                                    .asList(
                                        new VirtualMachineScaleSetNetworkConfiguration()
                                            .withName("{vmss-name}")
                                            .withPrimary(true)
                                            .withIpConfigurations(
                                                Arrays
                                                    .asList(
                                                        new VirtualMachineScaleSetIpConfiguration()
                                                            .withName("{vmss-name}")
                                                            .withSubnet(
                                                                new ApiEntityReference()
                                                                    .withId(
                                                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"))))
                                            .withEnableIpForwarding(true)))))
            .withOverprovision(true)
            .create();
    }
}
