// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.generated;

import com.azure.core.util.Context;
import com.azure.resourcemanager.compute.generated.models.Architecture;
import com.azure.resourcemanager.compute.generated.models.Disk;
import com.azure.resourcemanager.compute.generated.models.NetworkAccessPolicy;
import com.azure.resourcemanager.compute.generated.models.PurchasePlanAutoGenerated;
import com.azure.resourcemanager.compute.generated.models.SupportedCapabilities;

/** Samples for Disks Update. */
public final class DisksUpdateSamples {
    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-12-01/examples/UpdateAManagedDiskToAddArchitecture.json
     */
    /**
     * Sample code: Update a managed disk to add architecture.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void updateAManagedDiskToAddArchitecture(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        Disk resource =
            manager.disks().getByResourceGroupWithResponse("myResourceGroup", "myDisk", Context.NONE).getValue();
        resource
            .update()
            .withSupportedCapabilities(new SupportedCapabilities().withArchitecture(Architecture.ARM64))
            .apply();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-12-01/examples/UpdateAManagedDiskToDisableBursting.json
     */
    /**
     * Sample code: Update a managed disk to disable bursting.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void updateAManagedDiskToDisableBursting(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        Disk resource =
            manager.disks().getByResourceGroupWithResponse("myResourceGroup", "myDisk", Context.NONE).getValue();
        resource.update().withBurstingEnabled(false).apply();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-12-01/examples/UpdateAManagedDiskToAddPurchasePlan.json
     */
    /**
     * Sample code: Update a managed disk to add purchase plan.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void updateAManagedDiskToAddPurchasePlan(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        Disk resource =
            manager.disks().getByResourceGroupWithResponse("myResourceGroup", "myDisk", Context.NONE).getValue();
        resource
            .update()
            .withPurchasePlan(
                new PurchasePlanAutoGenerated()
                    .withName("myPurchasePlanName")
                    .withPublisher("myPurchasePlanPublisher")
                    .withProduct("myPurchasePlanProduct")
                    .withPromotionCode("myPurchasePlanPromotionCode"))
            .apply();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-12-01/examples/UpdateAManagedDiskToChangeTier.json
     */
    /**
     * Sample code: Update a managed disk to change tier.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void updateAManagedDiskToChangeTier(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        Disk resource =
            manager.disks().getByResourceGroupWithResponse("myResourceGroup", "myDisk", Context.NONE).getValue();
        resource.update().withTier("P30").apply();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-12-01/examples/CreateOrUpdateABurstingEnabledManagedDisk.json
     */
    /**
     * Sample code: Create or update a bursting enabled managed disk.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void createOrUpdateABurstingEnabledManagedDisk(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        Disk resource =
            manager.disks().getByResourceGroupWithResponse("myResourceGroup", "myDisk", Context.NONE).getValue();
        resource.update().withDiskSizeGB(1024).withBurstingEnabled(true).apply();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-12-01/examples/UpdateAManagedDiskToAddSupportsHibernation.json
     */
    /**
     * Sample code: Update a managed disk to add supportsHibernation.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void updateAManagedDiskToAddSupportsHibernation(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        Disk resource =
            manager.disks().getByResourceGroupWithResponse("myResourceGroup", "myDisk", Context.NONE).getValue();
        resource.update().withSupportsHibernation(true).apply();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-12-01/examples/UpdateAManagedDiskToRemoveDiskAccess.json
     */
    /**
     * Sample code: Update managed disk to remove disk access resource association.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void updateManagedDiskToRemoveDiskAccessResourceAssociation(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        Disk resource =
            manager.disks().getByResourceGroupWithResponse("myResourceGroup", "myDisk", Context.NONE).getValue();
        resource.update().withNetworkAccessPolicy(NetworkAccessPolicy.ALLOW_ALL).apply();
    }

    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-12-01/examples/UpdateAManagedDiskToAddAcceleratedNetworking.json
     */
    /**
     * Sample code: Update a managed disk to add accelerated networking.
     *
     * @param manager Entry point to ComputeManager.
     */
    public static void updateAManagedDiskToAddAcceleratedNetworking(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        Disk resource =
            manager.disks().getByResourceGroupWithResponse("myResourceGroup", "myDisk", Context.NONE).getValue();
        resource.update().withSupportedCapabilities(new SupportedCapabilities().withAcceleratedNetwork(false)).apply();
    }
}
