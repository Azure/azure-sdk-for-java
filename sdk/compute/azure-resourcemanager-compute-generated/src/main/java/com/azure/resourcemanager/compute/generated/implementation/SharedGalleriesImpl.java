// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.resourcemanager.compute.generated.ComputeManager;
import com.azure.resourcemanager.compute.generated.fluent.SharedGalleriesClient;
import com.azure.resourcemanager.compute.generated.fluent.models.PirSharedGalleryResourceInner;
import com.azure.resourcemanager.compute.generated.models.PirSharedGalleryResource;
import com.azure.resourcemanager.compute.generated.models.SharedGalleries;
import com.azure.resourcemanager.compute.generated.models.SharedToValues;

public final class SharedGalleriesImpl implements SharedGalleries {
    private final SharedGalleriesClient innerClient;

    private final ComputeManager serviceManager;

    public SharedGalleriesImpl(SharedGalleriesClient innerClient, ComputeManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<PirSharedGalleryResource> list(String location) {
        PagedIterable<PirSharedGalleryResourceInner> inner = this.serviceClient().list(location);
        return inner.mapPage(inner1 -> new PirSharedGalleryResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<PirSharedGalleryResource> list(String location, SharedToValues sharedTo, Context context) {
        PagedIterable<PirSharedGalleryResourceInner> inner = this.serviceClient().list(location, sharedTo, context);
        return inner.mapPage(inner1 -> new PirSharedGalleryResourceImpl(inner1, this.manager()));
    }

    public PirSharedGalleryResource get(String location, String galleryUniqueName) {
        PirSharedGalleryResourceInner inner = this.serviceClient().get(location, galleryUniqueName);
        if (inner != null) {
            return new PirSharedGalleryResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<PirSharedGalleryResource> getWithResponse(
        String location, String galleryUniqueName, Context context) {
        Response<PirSharedGalleryResourceInner> inner =
            this.serviceClient().getWithResponse(location, galleryUniqueName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new PirSharedGalleryResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private SharedGalleriesClient serviceClient() {
        return this.innerClient;
    }

    private ComputeManager manager() {
        return this.serviceManager;
    }
}
