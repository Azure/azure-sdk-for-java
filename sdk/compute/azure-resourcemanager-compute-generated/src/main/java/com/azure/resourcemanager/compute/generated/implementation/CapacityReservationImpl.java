// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.compute.generated.fluent.models.CapacityReservationInner;
import com.azure.resourcemanager.compute.generated.models.CapacityReservation;
import com.azure.resourcemanager.compute.generated.models.CapacityReservationInstanceView;
import com.azure.resourcemanager.compute.generated.models.CapacityReservationInstanceViewTypes;
import com.azure.resourcemanager.compute.generated.models.CapacityReservationUpdate;
import com.azure.resourcemanager.compute.generated.models.Sku;
import com.azure.resourcemanager.compute.generated.models.SubResourceReadOnly;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class CapacityReservationImpl
    implements CapacityReservation, CapacityReservation.Definition, CapacityReservation.Update {
    private CapacityReservationInner innerObject;

    private final com.azure.resourcemanager.compute.generated.ComputeManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public Sku sku() {
        return this.innerModel().sku();
    }

    public List<String> zones() {
        List<String> inner = this.innerModel().zones();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String reservationId() {
        return this.innerModel().reservationId();
    }

    public List<SubResourceReadOnly> virtualMachinesAssociated() {
        List<SubResourceReadOnly> inner = this.innerModel().virtualMachinesAssociated();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public OffsetDateTime provisioningTime() {
        return this.innerModel().provisioningTime();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public CapacityReservationInstanceView instanceView() {
        return this.innerModel().instanceView();
    }

    public OffsetDateTime timeCreated() {
        return this.innerModel().timeCreated();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public CapacityReservationInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.compute.generated.ComputeManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String capacityReservationGroupName;

    private String capacityReservationName;

    private CapacityReservationUpdate updateParameters;

    public CapacityReservationImpl withExistingCapacityReservationGroup(
        String resourceGroupName, String capacityReservationGroupName) {
        this.resourceGroupName = resourceGroupName;
        this.capacityReservationGroupName = capacityReservationGroupName;
        return this;
    }

    public CapacityReservation create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCapacityReservations()
                .createOrUpdate(
                    resourceGroupName,
                    capacityReservationGroupName,
                    capacityReservationName,
                    this.innerModel(),
                    Context.NONE);
        return this;
    }

    public CapacityReservation create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCapacityReservations()
                .createOrUpdate(
                    resourceGroupName,
                    capacityReservationGroupName,
                    capacityReservationName,
                    this.innerModel(),
                    context);
        return this;
    }

    CapacityReservationImpl(String name, com.azure.resourcemanager.compute.generated.ComputeManager serviceManager) {
        this.innerObject = new CapacityReservationInner();
        this.serviceManager = serviceManager;
        this.capacityReservationName = name;
    }

    public CapacityReservationImpl update() {
        this.updateParameters = new CapacityReservationUpdate();
        return this;
    }

    public CapacityReservation apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCapacityReservations()
                .update(
                    resourceGroupName,
                    capacityReservationGroupName,
                    capacityReservationName,
                    updateParameters,
                    Context.NONE);
        return this;
    }

    public CapacityReservation apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCapacityReservations()
                .update(
                    resourceGroupName,
                    capacityReservationGroupName,
                    capacityReservationName,
                    updateParameters,
                    context);
        return this;
    }

    CapacityReservationImpl(
        CapacityReservationInner innerObject,
        com.azure.resourcemanager.compute.generated.ComputeManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.capacityReservationGroupName = Utils.getValueFromIdByName(innerObject.id(), "capacityReservationGroups");
        this.capacityReservationName = Utils.getValueFromIdByName(innerObject.id(), "capacityReservations");
    }

    public CapacityReservation refresh() {
        CapacityReservationInstanceViewTypes localExpand = null;
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCapacityReservations()
                .getWithResponse(
                    resourceGroupName, capacityReservationGroupName, capacityReservationName, localExpand, Context.NONE)
                .getValue();
        return this;
    }

    public CapacityReservation refresh(Context context) {
        CapacityReservationInstanceViewTypes localExpand = null;
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCapacityReservations()
                .getWithResponse(
                    resourceGroupName, capacityReservationGroupName, capacityReservationName, localExpand, context)
                .getValue();
        return this;
    }

    public CapacityReservationImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public CapacityReservationImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public CapacityReservationImpl withSku(Sku sku) {
        if (isInCreateMode()) {
            this.innerModel().withSku(sku);
            return this;
        } else {
            this.updateParameters.withSku(sku);
            return this;
        }
    }

    public CapacityReservationImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateParameters.withTags(tags);
            return this;
        }
    }

    public CapacityReservationImpl withZones(List<String> zones) {
        this.innerModel().withZones(zones);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
