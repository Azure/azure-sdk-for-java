// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.compute.generated.ComputeManager;
import com.azure.resourcemanager.compute.generated.fluent.models.VirtualMachineScaleSetVMExtensionInner;
import com.azure.resourcemanager.compute.generated.models.VirtualMachineExtensionInstanceView;
import com.azure.resourcemanager.compute.generated.models.VirtualMachineScaleSetVMExtension;
import com.azure.resourcemanager.compute.generated.models.VirtualMachineScaleSetVMExtensionUpdate;

public final class VirtualMachineScaleSetVMExtensionImpl
    implements VirtualMachineScaleSetVMExtension,
        VirtualMachineScaleSetVMExtension.Definition,
        VirtualMachineScaleSetVMExtension.Update {
    private VirtualMachineScaleSetVMExtensionInner innerObject;

    private final ComputeManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String forceUpdateTag() {
        return this.innerModel().forceUpdateTag();
    }

    public String publisher() {
        return this.innerModel().publisher();
    }

    public String typePropertiesType() {
        return this.innerModel().typePropertiesType();
    }

    public String typeHandlerVersion() {
        return this.innerModel().typeHandlerVersion();
    }

    public Boolean autoUpgradeMinorVersion() {
        return this.innerModel().autoUpgradeMinorVersion();
    }

    public Boolean enableAutomaticUpgrade() {
        return this.innerModel().enableAutomaticUpgrade();
    }

    public Object settings() {
        return this.innerModel().settings();
    }

    public Object protectedSettings() {
        return this.innerModel().protectedSettings();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public VirtualMachineExtensionInstanceView instanceView() {
        return this.innerModel().instanceView();
    }

    public VirtualMachineScaleSetVMExtensionInner innerModel() {
        return this.innerObject;
    }

    private ComputeManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String vmScaleSetName;

    private String instanceId;

    private String vmExtensionName;

    private VirtualMachineScaleSetVMExtensionUpdate updateExtensionParameters;

    public VirtualMachineScaleSetVMExtensionImpl withExistingVirtualMachine(
        String resourceGroupName, String vmScaleSetName, String instanceId) {
        this.resourceGroupName = resourceGroupName;
        this.vmScaleSetName = vmScaleSetName;
        this.instanceId = instanceId;
        return this;
    }

    public VirtualMachineScaleSetVMExtension create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getVirtualMachineScaleSetVMExtensions()
                .createOrUpdate(
                    resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, innerObject, Context.NONE);
        return this;
    }

    public VirtualMachineScaleSetVMExtension create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getVirtualMachineScaleSetVMExtensions()
                .createOrUpdate(resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, innerObject, context);
        return this;
    }

    public VirtualMachineScaleSetVMExtensionImpl(String name, ComputeManager serviceManager) {
        this.innerObject = new VirtualMachineScaleSetVMExtensionInner();
        this.serviceManager = serviceManager;
        this.vmExtensionName = name;
    }

    public VirtualMachineScaleSetVMExtensionImpl update() {
        this.updateExtensionParameters = new VirtualMachineScaleSetVMExtensionUpdate();
        return this;
    }

    public VirtualMachineScaleSetVMExtension apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getVirtualMachineScaleSetVMExtensions()
                .update(
                    resourceGroupName,
                    vmScaleSetName,
                    instanceId,
                    vmExtensionName,
                    updateExtensionParameters,
                    Context.NONE);
        return this;
    }

    public VirtualMachineScaleSetVMExtension apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getVirtualMachineScaleSetVMExtensions()
                .update(
                    resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, updateExtensionParameters, context);
        return this;
    }

    public VirtualMachineScaleSetVMExtensionImpl(
        VirtualMachineScaleSetVMExtensionInner innerObject, ComputeManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.vmScaleSetName = Utils.getValueFromIdByName(innerObject.id(), "virtualMachineScaleSets");
        this.instanceId = Utils.getValueFromIdByName(innerObject.id(), "virtualMachines");
        this.vmExtensionName = Utils.getValueFromIdByName(innerObject.id(), "extensions");
    }

    public VirtualMachineScaleSetVMExtension refresh() {
        String refreshExpand = null;
        this.innerObject =
            serviceManager
                .serviceClient()
                .getVirtualMachineScaleSetVMExtensions()
                .getWithResponse(
                    resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, refreshExpand, Context.NONE)
                .getValue();
        return this;
    }

    public VirtualMachineScaleSetVMExtension refresh(Context context) {
        String refreshExpand = null;
        this.innerObject =
            serviceManager
                .serviceClient()
                .getVirtualMachineScaleSetVMExtensions()
                .getWithResponse(resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, refreshExpand, context)
                .getValue();
        return this;
    }

    public VirtualMachineScaleSetVMExtensionImpl withForceUpdateTag(String forceUpdateTag) {
        if (isInCreateMode()) {
            this.innerModel().withForceUpdateTag(forceUpdateTag);
            return this;
        } else {
            this.updateExtensionParameters.withForceUpdateTag(forceUpdateTag);
            return this;
        }
    }

    public VirtualMachineScaleSetVMExtensionImpl withPublisher(String publisher) {
        if (isInCreateMode()) {
            this.innerModel().withPublisher(publisher);
            return this;
        } else {
            this.updateExtensionParameters.withPublisher(publisher);
            return this;
        }
    }

    public VirtualMachineScaleSetVMExtensionImpl withTypePropertiesType(String typePropertiesType) {
        if (isInCreateMode()) {
            this.innerModel().withTypePropertiesType(typePropertiesType);
            return this;
        } else {
            this.updateExtensionParameters.withTypePropertiesType(typePropertiesType);
            return this;
        }
    }

    public VirtualMachineScaleSetVMExtensionImpl withTypeHandlerVersion(String typeHandlerVersion) {
        if (isInCreateMode()) {
            this.innerModel().withTypeHandlerVersion(typeHandlerVersion);
            return this;
        } else {
            this.updateExtensionParameters.withTypeHandlerVersion(typeHandlerVersion);
            return this;
        }
    }

    public VirtualMachineScaleSetVMExtensionImpl withAutoUpgradeMinorVersion(Boolean autoUpgradeMinorVersion) {
        if (isInCreateMode()) {
            this.innerModel().withAutoUpgradeMinorVersion(autoUpgradeMinorVersion);
            return this;
        } else {
            this.updateExtensionParameters.withAutoUpgradeMinorVersion(autoUpgradeMinorVersion);
            return this;
        }
    }

    public VirtualMachineScaleSetVMExtensionImpl withEnableAutomaticUpgrade(Boolean enableAutomaticUpgrade) {
        if (isInCreateMode()) {
            this.innerModel().withEnableAutomaticUpgrade(enableAutomaticUpgrade);
            return this;
        } else {
            this.updateExtensionParameters.withEnableAutomaticUpgrade(enableAutomaticUpgrade);
            return this;
        }
    }

    public VirtualMachineScaleSetVMExtensionImpl withSettings(Object settings) {
        if (isInCreateMode()) {
            this.innerModel().withSettings(settings);
            return this;
        } else {
            this.updateExtensionParameters.withSettings(settings);
            return this;
        }
    }

    public VirtualMachineScaleSetVMExtensionImpl withProtectedSettings(Object protectedSettings) {
        if (isInCreateMode()) {
            this.innerModel().withProtectedSettings(protectedSettings);
            return this;
        } else {
            this.updateExtensionParameters.withProtectedSettings(protectedSettings);
            return this;
        }
    }

    public VirtualMachineScaleSetVMExtensionImpl withInstanceView(VirtualMachineExtensionInstanceView instanceView) {
        this.innerModel().withInstanceView(instanceView);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
