// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.compute.generated.fluent.RestorePointsClient;
import com.azure.resourcemanager.compute.generated.fluent.models.RestorePointInner;
import com.azure.resourcemanager.compute.generated.models.RestorePoint;
import com.azure.resourcemanager.compute.generated.models.RestorePoints;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class RestorePointsImpl implements RestorePoints {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(RestorePointsImpl.class);

    private final RestorePointsClient innerClient;

    private final com.azure.resourcemanager.compute.generated.ComputeManager serviceManager;

    public RestorePointsImpl(
        RestorePointsClient innerClient, com.azure.resourcemanager.compute.generated.ComputeManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public void delete(String resourceGroupName, String restorePointCollectionName, String restorePointName) {
        this.serviceClient().delete(resourceGroupName, restorePointCollectionName, restorePointName);
    }

    public void delete(
        String resourceGroupName, String restorePointCollectionName, String restorePointName, Context context) {
        this.serviceClient().delete(resourceGroupName, restorePointCollectionName, restorePointName, context);
    }

    public RestorePoint get(String resourceGroupName, String restorePointCollectionName, String restorePointName) {
        RestorePointInner inner =
            this.serviceClient().get(resourceGroupName, restorePointCollectionName, restorePointName);
        if (inner != null) {
            return new RestorePointImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<RestorePoint> getWithResponse(
        String resourceGroupName, String restorePointCollectionName, String restorePointName, Context context) {
        Response<RestorePointInner> inner =
            this
                .serviceClient()
                .getWithResponse(resourceGroupName, restorePointCollectionName, restorePointName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new RestorePointImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public RestorePoint getById(String id) {
        String resourceGroupName = Utils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String
                            .format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String restorePointCollectionName = Utils.getValueFromIdByName(id, "restorePointCollections");
        if (restorePointCollectionName == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String
                            .format(
                                "The resource ID '%s' is not valid. Missing path segment 'restorePointCollections'.",
                                id)));
        }
        String restorePointName = Utils.getValueFromIdByName(id, "restorePoints");
        if (restorePointName == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String.format("The resource ID '%s' is not valid. Missing path segment 'restorePoints'.", id)));
        }
        return this
            .getWithResponse(resourceGroupName, restorePointCollectionName, restorePointName, Context.NONE)
            .getValue();
    }

    public Response<RestorePoint> getByIdWithResponse(String id, Context context) {
        String resourceGroupName = Utils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String
                            .format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String restorePointCollectionName = Utils.getValueFromIdByName(id, "restorePointCollections");
        if (restorePointCollectionName == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String
                            .format(
                                "The resource ID '%s' is not valid. Missing path segment 'restorePointCollections'.",
                                id)));
        }
        String restorePointName = Utils.getValueFromIdByName(id, "restorePoints");
        if (restorePointName == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String.format("The resource ID '%s' is not valid. Missing path segment 'restorePoints'.", id)));
        }
        return this.getWithResponse(resourceGroupName, restorePointCollectionName, restorePointName, context);
    }

    public void deleteById(String id) {
        String resourceGroupName = Utils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String
                            .format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String restorePointCollectionName = Utils.getValueFromIdByName(id, "restorePointCollections");
        if (restorePointCollectionName == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String
                            .format(
                                "The resource ID '%s' is not valid. Missing path segment 'restorePointCollections'.",
                                id)));
        }
        String restorePointName = Utils.getValueFromIdByName(id, "restorePoints");
        if (restorePointName == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String.format("The resource ID '%s' is not valid. Missing path segment 'restorePoints'.", id)));
        }
        this.delete(resourceGroupName, restorePointCollectionName, restorePointName, Context.NONE);
    }

    public void deleteByIdWithResponse(String id, Context context) {
        String resourceGroupName = Utils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String
                            .format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String restorePointCollectionName = Utils.getValueFromIdByName(id, "restorePointCollections");
        if (restorePointCollectionName == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String
                            .format(
                                "The resource ID '%s' is not valid. Missing path segment 'restorePointCollections'.",
                                id)));
        }
        String restorePointName = Utils.getValueFromIdByName(id, "restorePoints");
        if (restorePointName == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String.format("The resource ID '%s' is not valid. Missing path segment 'restorePoints'.", id)));
        }
        this.delete(resourceGroupName, restorePointCollectionName, restorePointName, context);
    }

    private RestorePointsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.compute.generated.ComputeManager manager() {
        return this.serviceManager;
    }

    public RestorePointImpl define(String name) {
        return new RestorePointImpl(name, this.manager());
    }
}
