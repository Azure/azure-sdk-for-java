// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.implementation;

import com.azure.resourcemanager.compute.generated.ComputeManager;
import com.azure.resourcemanager.compute.generated.fluent.models.VirtualMachineScaleSetInstanceViewInner;
import com.azure.resourcemanager.compute.generated.models.InstanceViewStatus;
import com.azure.resourcemanager.compute.generated.models.OrchestrationServiceSummary;
import com.azure.resourcemanager.compute.generated.models.VirtualMachineScaleSetInstanceView;
import com.azure.resourcemanager.compute.generated.models.VirtualMachineScaleSetInstanceViewStatusesSummary;
import com.azure.resourcemanager.compute.generated.models.VirtualMachineScaleSetVMExtensionsSummary;
import java.util.Collections;
import java.util.List;

public final class VirtualMachineScaleSetInstanceViewImpl implements VirtualMachineScaleSetInstanceView {
    private VirtualMachineScaleSetInstanceViewInner innerObject;

    private final ComputeManager serviceManager;

    public VirtualMachineScaleSetInstanceViewImpl(
        VirtualMachineScaleSetInstanceViewInner innerObject, ComputeManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public VirtualMachineScaleSetInstanceViewStatusesSummary virtualMachine() {
        return this.innerModel().virtualMachine();
    }

    public List<VirtualMachineScaleSetVMExtensionsSummary> extensions() {
        List<VirtualMachineScaleSetVMExtensionsSummary> inner = this.innerModel().extensions();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return null;
        }
    }

    public List<InstanceViewStatus> statuses() {
        List<InstanceViewStatus> inner = this.innerModel().statuses();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return null;
        }
    }

    public List<OrchestrationServiceSummary> orchestrationServices() {
        List<OrchestrationServiceSummary> inner = this.innerModel().orchestrationServices();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return null;
        }
    }

    public VirtualMachineScaleSetInstanceViewInner innerModel() {
        return this.innerObject;
    }

    private ComputeManager manager() {
        return this.serviceManager;
    }
}
