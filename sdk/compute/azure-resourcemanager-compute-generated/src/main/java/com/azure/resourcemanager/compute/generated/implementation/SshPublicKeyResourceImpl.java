// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.compute.generated.ComputeManager;
import com.azure.resourcemanager.compute.generated.fluent.models.SshPublicKeyResourceInner;
import com.azure.resourcemanager.compute.generated.models.SshPublicKeyResource;
import com.azure.resourcemanager.compute.generated.models.SshPublicKeyUpdateResource;
import java.util.Collections;
import java.util.Map;

public final class SshPublicKeyResourceImpl
    implements SshPublicKeyResource, SshPublicKeyResource.Definition, SshPublicKeyResource.Update {
    private SshPublicKeyResourceInner innerObject;

    private final ComputeManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return null;
        }
    }

    public String publicKey() {
        return this.innerModel().publicKey();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public SshPublicKeyResourceInner innerModel() {
        return this.innerObject;
    }

    private ComputeManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String sshPublicKeyName;

    private SshPublicKeyUpdateResource updateParameters;

    public SshPublicKeyResourceImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public SshPublicKeyResource create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSshPublicKeys()
                .createWithResponse(resourceGroupName, sshPublicKeyName, innerObject, Context.NONE)
                .getValue();
        return this;
    }

    public SshPublicKeyResource create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSshPublicKeys()
                .createWithResponse(resourceGroupName, sshPublicKeyName, innerObject, context)
                .getValue();
        return this;
    }

    public SshPublicKeyResourceImpl(String name, ComputeManager serviceManager) {
        this.innerObject = new SshPublicKeyResourceInner();
        this.serviceManager = serviceManager;
        this.sshPublicKeyName = name;
    }

    public SshPublicKeyResourceImpl update() {
        this.updateParameters = new SshPublicKeyUpdateResource();
        return this;
    }

    public SshPublicKeyResource apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSshPublicKeys()
                .updateWithResponse(resourceGroupName, sshPublicKeyName, updateParameters, Context.NONE)
                .getValue();
        return this;
    }

    public SshPublicKeyResource apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSshPublicKeys()
                .updateWithResponse(resourceGroupName, sshPublicKeyName, updateParameters, context)
                .getValue();
        return this;
    }

    public SshPublicKeyResourceImpl(SshPublicKeyResourceInner innerObject, ComputeManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.sshPublicKeyName = Utils.getValueFromIdByName(innerObject.id(), "sshPublicKeys");
    }

    public SshPublicKeyResource refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSshPublicKeys()
                .getByResourceGroupWithResponse(resourceGroupName, sshPublicKeyName, Context.NONE)
                .getValue();
        return this;
    }

    public SshPublicKeyResource refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSshPublicKeys()
                .getByResourceGroupWithResponse(resourceGroupName, sshPublicKeyName, context)
                .getValue();
        return this;
    }

    public SshPublicKeyResourceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public SshPublicKeyResourceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public SshPublicKeyResourceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateParameters.withTags(tags);
            return this;
        }
    }

    public SshPublicKeyResourceImpl withPublicKey(String publicKey) {
        if (isInCreateMode()) {
            this.innerModel().withPublicKey(publicKey);
            return this;
        } else {
            this.updateParameters.withPublicKey(publicKey);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
