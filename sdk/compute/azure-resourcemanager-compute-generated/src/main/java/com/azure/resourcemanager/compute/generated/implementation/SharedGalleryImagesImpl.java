// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.compute.generated.fluent.SharedGalleryImagesClient;
import com.azure.resourcemanager.compute.generated.fluent.models.SharedGalleryImageInner;
import com.azure.resourcemanager.compute.generated.models.SharedGalleryImage;
import com.azure.resourcemanager.compute.generated.models.SharedGalleryImages;
import com.azure.resourcemanager.compute.generated.models.SharedToValues;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class SharedGalleryImagesImpl implements SharedGalleryImages {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(SharedGalleryImagesImpl.class);

    private final SharedGalleryImagesClient innerClient;

    private final com.azure.resourcemanager.compute.generated.ComputeManager serviceManager;

    public SharedGalleryImagesImpl(
        SharedGalleryImagesClient innerClient,
        com.azure.resourcemanager.compute.generated.ComputeManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<SharedGalleryImage> list(String location, String galleryUniqueName) {
        PagedIterable<SharedGalleryImageInner> inner = this.serviceClient().list(location, galleryUniqueName);
        return Utils.mapPage(inner, inner1 -> new SharedGalleryImageImpl(inner1, this.manager()));
    }

    public PagedIterable<SharedGalleryImage> list(
        String location, String galleryUniqueName, SharedToValues sharedTo, Context context) {
        PagedIterable<SharedGalleryImageInner> inner =
            this.serviceClient().list(location, galleryUniqueName, sharedTo, context);
        return Utils.mapPage(inner, inner1 -> new SharedGalleryImageImpl(inner1, this.manager()));
    }

    public SharedGalleryImage get(String location, String galleryUniqueName, String galleryImageName) {
        SharedGalleryImageInner inner = this.serviceClient().get(location, galleryUniqueName, galleryImageName);
        if (inner != null) {
            return new SharedGalleryImageImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<SharedGalleryImage> getWithResponse(
        String location, String galleryUniqueName, String galleryImageName, Context context) {
        Response<SharedGalleryImageInner> inner =
            this.serviceClient().getWithResponse(location, galleryUniqueName, galleryImageName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SharedGalleryImageImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private SharedGalleryImagesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.compute.generated.ComputeManager manager() {
        return this.serviceManager;
    }
}
