// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.implementation;

import com.azure.resourcemanager.compute.generated.ComputeManager;
import com.azure.resourcemanager.compute.generated.fluent.models.RunCommandDocumentInner;
import com.azure.resourcemanager.compute.generated.models.OperatingSystemTypes;
import com.azure.resourcemanager.compute.generated.models.RunCommandDocument;
import com.azure.resourcemanager.compute.generated.models.RunCommandParameterDefinition;
import java.util.Collections;
import java.util.List;

public final class RunCommandDocumentImpl implements RunCommandDocument {
    private RunCommandDocumentInner innerObject;

    private final ComputeManager serviceManager;

    public RunCommandDocumentImpl(RunCommandDocumentInner innerObject, ComputeManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String schema() {
        return this.innerModel().schema();
    }

    public String id() {
        return this.innerModel().id();
    }

    public OperatingSystemTypes osType() {
        return this.innerModel().osType();
    }

    public String label() {
        return this.innerModel().label();
    }

    public String description() {
        return this.innerModel().description();
    }

    public List<String> script() {
        List<String> inner = this.innerModel().script();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return null;
        }
    }

    public List<RunCommandParameterDefinition> parameters() {
        List<RunCommandParameterDefinition> inner = this.innerModel().parameters();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return null;
        }
    }

    public RunCommandDocumentInner innerModel() {
        return this.innerObject;
    }

    private ComputeManager manager() {
        return this.serviceManager;
    }
}
