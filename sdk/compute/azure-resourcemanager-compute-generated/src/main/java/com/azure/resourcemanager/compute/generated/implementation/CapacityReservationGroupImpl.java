// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.compute.generated.fluent.models.CapacityReservationGroupInner;
import com.azure.resourcemanager.compute.generated.models.CapacityReservationGroup;
import com.azure.resourcemanager.compute.generated.models.CapacityReservationGroupInstanceView;
import com.azure.resourcemanager.compute.generated.models.CapacityReservationGroupInstanceViewTypes;
import com.azure.resourcemanager.compute.generated.models.CapacityReservationGroupUpdate;
import com.azure.resourcemanager.compute.generated.models.SubResourceReadOnly;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class CapacityReservationGroupImpl
    implements CapacityReservationGroup, CapacityReservationGroup.Definition, CapacityReservationGroup.Update {
    private CapacityReservationGroupInner innerObject;

    private final com.azure.resourcemanager.compute.generated.ComputeManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public List<String> zones() {
        List<String> inner = this.innerModel().zones();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<SubResourceReadOnly> capacityReservations() {
        List<SubResourceReadOnly> inner = this.innerModel().capacityReservations();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<SubResourceReadOnly> virtualMachinesAssociated() {
        List<SubResourceReadOnly> inner = this.innerModel().virtualMachinesAssociated();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public CapacityReservationGroupInstanceView instanceView() {
        return this.innerModel().instanceView();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public CapacityReservationGroupInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.compute.generated.ComputeManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String capacityReservationGroupName;

    private CapacityReservationGroupUpdate updateParameters;

    public CapacityReservationGroupImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public CapacityReservationGroup create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCapacityReservationGroups()
                .createOrUpdateWithResponse(
                    resourceGroupName, capacityReservationGroupName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public CapacityReservationGroup create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCapacityReservationGroups()
                .createOrUpdateWithResponse(resourceGroupName, capacityReservationGroupName, this.innerModel(), context)
                .getValue();
        return this;
    }

    CapacityReservationGroupImpl(
        String name, com.azure.resourcemanager.compute.generated.ComputeManager serviceManager) {
        this.innerObject = new CapacityReservationGroupInner();
        this.serviceManager = serviceManager;
        this.capacityReservationGroupName = name;
    }

    public CapacityReservationGroupImpl update() {
        this.updateParameters = new CapacityReservationGroupUpdate();
        return this;
    }

    public CapacityReservationGroup apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCapacityReservationGroups()
                .updateWithResponse(resourceGroupName, capacityReservationGroupName, updateParameters, Context.NONE)
                .getValue();
        return this;
    }

    public CapacityReservationGroup apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCapacityReservationGroups()
                .updateWithResponse(resourceGroupName, capacityReservationGroupName, updateParameters, context)
                .getValue();
        return this;
    }

    CapacityReservationGroupImpl(
        CapacityReservationGroupInner innerObject,
        com.azure.resourcemanager.compute.generated.ComputeManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.capacityReservationGroupName = Utils.getValueFromIdByName(innerObject.id(), "capacityReservationGroups");
    }

    public CapacityReservationGroup refresh() {
        CapacityReservationGroupInstanceViewTypes localExpand = null;
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCapacityReservationGroups()
                .getByResourceGroupWithResponse(
                    resourceGroupName, capacityReservationGroupName, localExpand, Context.NONE)
                .getValue();
        return this;
    }

    public CapacityReservationGroup refresh(Context context) {
        CapacityReservationGroupInstanceViewTypes localExpand = null;
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCapacityReservationGroups()
                .getByResourceGroupWithResponse(resourceGroupName, capacityReservationGroupName, localExpand, context)
                .getValue();
        return this;
    }

    public CapacityReservationGroupImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public CapacityReservationGroupImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public CapacityReservationGroupImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateParameters.withTags(tags);
            return this;
        }
    }

    public CapacityReservationGroupImpl withZones(List<String> zones) {
        this.innerModel().withZones(zones);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
