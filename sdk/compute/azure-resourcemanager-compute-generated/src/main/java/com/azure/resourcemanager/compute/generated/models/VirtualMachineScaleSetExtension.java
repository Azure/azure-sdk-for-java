// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.Context;
import com.azure.resourcemanager.compute.generated.fluent.models.VirtualMachineScaleSetExtensionInner;
import java.util.List;

/** An immutable client-side representation of VirtualMachineScaleSetExtension. */
@Immutable
public interface VirtualMachineScaleSetExtension {
    /**
     * Gets the id property: Resource Id.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the extension.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: Resource type.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the forceUpdateTag property: If a value is provided and is different from the previous value, the extension
     * handler will be forced to update even if the extension configuration has not changed.
     *
     * @return the forceUpdateTag value.
     */
    String forceUpdateTag();

    /**
     * Gets the publisher property: The name of the extension handler publisher.
     *
     * @return the publisher value.
     */
    String publisher();

    /**
     * Gets the typePropertiesType property: Specifies the type of the extension; an example is "CustomScriptExtension".
     *
     * @return the typePropertiesType value.
     */
    String typePropertiesType();

    /**
     * Gets the typeHandlerVersion property: Specifies the version of the script handler.
     *
     * @return the typeHandlerVersion value.
     */
    String typeHandlerVersion();

    /**
     * Gets the autoUpgradeMinorVersion property: Indicates whether the extension should use a newer minor version if
     * one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless
     * redeployed, even with this property set to true.
     *
     * @return the autoUpgradeMinorVersion value.
     */
    Boolean autoUpgradeMinorVersion();

    /**
     * Gets the enableAutomaticUpgrade property: Indicates whether the extension should be automatically upgraded by the
     * platform if there is a newer version of the extension available.
     *
     * @return the enableAutomaticUpgrade value.
     */
    Boolean enableAutomaticUpgrade();

    /**
     * Gets the settings property: Json formatted public settings for the extension.
     *
     * @return the settings value.
     */
    Object settings();

    /**
     * Gets the protectedSettings property: The extension can contain either protectedSettings or
     * protectedSettingsFromKeyVault or no protected settings at all.
     *
     * @return the protectedSettings value.
     */
    Object protectedSettings();

    /**
     * Gets the provisioningState property: The provisioning state, which only appears in the response.
     *
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the provisionAfterExtensions property: Collection of extension names after which this extension needs to be
     * provisioned.
     *
     * @return the provisionAfterExtensions value.
     */
    List<String> provisionAfterExtensions();

    /**
     * Gets the inner com.azure.resourcemanager.compute.generated.fluent.models.VirtualMachineScaleSetExtensionInner
     * object.
     *
     * @return the inner object.
     */
    VirtualMachineScaleSetExtensionInner innerModel();

    /** The entirety of the VirtualMachineScaleSetExtension definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The VirtualMachineScaleSetExtension definition stages. */
    interface DefinitionStages {
        /** The first stage of the VirtualMachineScaleSetExtension definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the VirtualMachineScaleSetExtension definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, vmScaleSetName.
             *
             * @param resourceGroupName The name of the resource group.
             * @param vmScaleSetName The name of the VM scale set where the extension should be create or updated.
             * @return the next definition stage.
             */
            WithCreate withExistingVirtualMachineScaleSet(String resourceGroupName, String vmScaleSetName);
        }
        /**
         * The stage of the VirtualMachineScaleSetExtension definition which contains all the minimum required
         * properties for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithName,
                DefinitionStages.WithForceUpdateTag,
                DefinitionStages.WithPublisher,
                DefinitionStages.WithTypePropertiesType,
                DefinitionStages.WithTypeHandlerVersion,
                DefinitionStages.WithAutoUpgradeMinorVersion,
                DefinitionStages.WithEnableAutomaticUpgrade,
                DefinitionStages.WithSettings,
                DefinitionStages.WithProtectedSettings,
                DefinitionStages.WithProvisionAfterExtensions {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            VirtualMachineScaleSetExtension create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            VirtualMachineScaleSetExtension create(Context context);
        }
        /** The stage of the VirtualMachineScaleSetExtension definition allowing to specify name. */
        interface WithName {
            /**
             * Specifies the name property: The name of the extension..
             *
             * @param name The name of the extension.
             * @return the next definition stage.
             */
            WithCreate withName(String name);
        }
        /** The stage of the VirtualMachineScaleSetExtension definition allowing to specify forceUpdateTag. */
        interface WithForceUpdateTag {
            /**
             * Specifies the forceUpdateTag property: If a value is provided and is different from the previous value,
             * the extension handler will be forced to update even if the extension configuration has not changed..
             *
             * @param forceUpdateTag If a value is provided and is different from the previous value, the extension
             *     handler will be forced to update even if the extension configuration has not changed.
             * @return the next definition stage.
             */
            WithCreate withForceUpdateTag(String forceUpdateTag);
        }
        /** The stage of the VirtualMachineScaleSetExtension definition allowing to specify publisher. */
        interface WithPublisher {
            /**
             * Specifies the publisher property: The name of the extension handler publisher..
             *
             * @param publisher The name of the extension handler publisher.
             * @return the next definition stage.
             */
            WithCreate withPublisher(String publisher);
        }
        /** The stage of the VirtualMachineScaleSetExtension definition allowing to specify typePropertiesType. */
        interface WithTypePropertiesType {
            /**
             * Specifies the typePropertiesType property: Specifies the type of the extension; an example is
             * "CustomScriptExtension"..
             *
             * @param typePropertiesType Specifies the type of the extension; an example is "CustomScriptExtension".
             * @return the next definition stage.
             */
            WithCreate withTypePropertiesType(String typePropertiesType);
        }
        /** The stage of the VirtualMachineScaleSetExtension definition allowing to specify typeHandlerVersion. */
        interface WithTypeHandlerVersion {
            /**
             * Specifies the typeHandlerVersion property: Specifies the version of the script handler..
             *
             * @param typeHandlerVersion Specifies the version of the script handler.
             * @return the next definition stage.
             */
            WithCreate withTypeHandlerVersion(String typeHandlerVersion);
        }
        /** The stage of the VirtualMachineScaleSetExtension definition allowing to specify autoUpgradeMinorVersion. */
        interface WithAutoUpgradeMinorVersion {
            /**
             * Specifies the autoUpgradeMinorVersion property: Indicates whether the extension should use a newer minor
             * version if one is available at deployment time. Once deployed, however, the extension will not upgrade
             * minor versions unless redeployed, even with this property set to true..
             *
             * @param autoUpgradeMinorVersion Indicates whether the extension should use a newer minor version if one is
             *     available at deployment time. Once deployed, however, the extension will not upgrade minor versions
             *     unless redeployed, even with this property set to true.
             * @return the next definition stage.
             */
            WithCreate withAutoUpgradeMinorVersion(Boolean autoUpgradeMinorVersion);
        }
        /** The stage of the VirtualMachineScaleSetExtension definition allowing to specify enableAutomaticUpgrade. */
        interface WithEnableAutomaticUpgrade {
            /**
             * Specifies the enableAutomaticUpgrade property: Indicates whether the extension should be automatically
             * upgraded by the platform if there is a newer version of the extension available..
             *
             * @param enableAutomaticUpgrade Indicates whether the extension should be automatically upgraded by the
             *     platform if there is a newer version of the extension available.
             * @return the next definition stage.
             */
            WithCreate withEnableAutomaticUpgrade(Boolean enableAutomaticUpgrade);
        }
        /** The stage of the VirtualMachineScaleSetExtension definition allowing to specify settings. */
        interface WithSettings {
            /**
             * Specifies the settings property: Json formatted public settings for the extension..
             *
             * @param settings Json formatted public settings for the extension.
             * @return the next definition stage.
             */
            WithCreate withSettings(Object settings);
        }
        /** The stage of the VirtualMachineScaleSetExtension definition allowing to specify protectedSettings. */
        interface WithProtectedSettings {
            /**
             * Specifies the protectedSettings property: The extension can contain either protectedSettings or
             * protectedSettingsFromKeyVault or no protected settings at all..
             *
             * @param protectedSettings The extension can contain either protectedSettings or
             *     protectedSettingsFromKeyVault or no protected settings at all.
             * @return the next definition stage.
             */
            WithCreate withProtectedSettings(Object protectedSettings);
        }
        /** The stage of the VirtualMachineScaleSetExtension definition allowing to specify provisionAfterExtensions. */
        interface WithProvisionAfterExtensions {
            /**
             * Specifies the provisionAfterExtensions property: Collection of extension names after which this extension
             * needs to be provisioned..
             *
             * @param provisionAfterExtensions Collection of extension names after which this extension needs to be
             *     provisioned.
             * @return the next definition stage.
             */
            WithCreate withProvisionAfterExtensions(List<String> provisionAfterExtensions);
        }
    }
    /**
     * Begins update for the VirtualMachineScaleSetExtension resource.
     *
     * @return the stage of resource update.
     */
    VirtualMachineScaleSetExtension.Update update();

    /** The template for VirtualMachineScaleSetExtension update. */
    interface Update
        extends UpdateStages.WithForceUpdateTag,
            UpdateStages.WithPublisher,
            UpdateStages.WithTypePropertiesType,
            UpdateStages.WithTypeHandlerVersion,
            UpdateStages.WithAutoUpgradeMinorVersion,
            UpdateStages.WithEnableAutomaticUpgrade,
            UpdateStages.WithSettings,
            UpdateStages.WithProtectedSettings,
            UpdateStages.WithProvisionAfterExtensions {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        VirtualMachineScaleSetExtension apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        VirtualMachineScaleSetExtension apply(Context context);
    }
    /** The VirtualMachineScaleSetExtension update stages. */
    interface UpdateStages {
        /** The stage of the VirtualMachineScaleSetExtension update allowing to specify forceUpdateTag. */
        interface WithForceUpdateTag {
            /**
             * Specifies the forceUpdateTag property: If a value is provided and is different from the previous value,
             * the extension handler will be forced to update even if the extension configuration has not changed..
             *
             * @param forceUpdateTag If a value is provided and is different from the previous value, the extension
             *     handler will be forced to update even if the extension configuration has not changed.
             * @return the next definition stage.
             */
            Update withForceUpdateTag(String forceUpdateTag);
        }
        /** The stage of the VirtualMachineScaleSetExtension update allowing to specify publisher. */
        interface WithPublisher {
            /**
             * Specifies the publisher property: The name of the extension handler publisher..
             *
             * @param publisher The name of the extension handler publisher.
             * @return the next definition stage.
             */
            Update withPublisher(String publisher);
        }
        /** The stage of the VirtualMachineScaleSetExtension update allowing to specify typePropertiesType. */
        interface WithTypePropertiesType {
            /**
             * Specifies the typePropertiesType property: Specifies the type of the extension; an example is
             * "CustomScriptExtension"..
             *
             * @param typePropertiesType Specifies the type of the extension; an example is "CustomScriptExtension".
             * @return the next definition stage.
             */
            Update withTypePropertiesType(String typePropertiesType);
        }
        /** The stage of the VirtualMachineScaleSetExtension update allowing to specify typeHandlerVersion. */
        interface WithTypeHandlerVersion {
            /**
             * Specifies the typeHandlerVersion property: Specifies the version of the script handler..
             *
             * @param typeHandlerVersion Specifies the version of the script handler.
             * @return the next definition stage.
             */
            Update withTypeHandlerVersion(String typeHandlerVersion);
        }
        /** The stage of the VirtualMachineScaleSetExtension update allowing to specify autoUpgradeMinorVersion. */
        interface WithAutoUpgradeMinorVersion {
            /**
             * Specifies the autoUpgradeMinorVersion property: Indicates whether the extension should use a newer minor
             * version if one is available at deployment time. Once deployed, however, the extension will not upgrade
             * minor versions unless redeployed, even with this property set to true..
             *
             * @param autoUpgradeMinorVersion Indicates whether the extension should use a newer minor version if one is
             *     available at deployment time. Once deployed, however, the extension will not upgrade minor versions
             *     unless redeployed, even with this property set to true.
             * @return the next definition stage.
             */
            Update withAutoUpgradeMinorVersion(Boolean autoUpgradeMinorVersion);
        }
        /** The stage of the VirtualMachineScaleSetExtension update allowing to specify enableAutomaticUpgrade. */
        interface WithEnableAutomaticUpgrade {
            /**
             * Specifies the enableAutomaticUpgrade property: Indicates whether the extension should be automatically
             * upgraded by the platform if there is a newer version of the extension available..
             *
             * @param enableAutomaticUpgrade Indicates whether the extension should be automatically upgraded by the
             *     platform if there is a newer version of the extension available.
             * @return the next definition stage.
             */
            Update withEnableAutomaticUpgrade(Boolean enableAutomaticUpgrade);
        }
        /** The stage of the VirtualMachineScaleSetExtension update allowing to specify settings. */
        interface WithSettings {
            /**
             * Specifies the settings property: Json formatted public settings for the extension..
             *
             * @param settings Json formatted public settings for the extension.
             * @return the next definition stage.
             */
            Update withSettings(Object settings);
        }
        /** The stage of the VirtualMachineScaleSetExtension update allowing to specify protectedSettings. */
        interface WithProtectedSettings {
            /**
             * Specifies the protectedSettings property: The extension can contain either protectedSettings or
             * protectedSettingsFromKeyVault or no protected settings at all..
             *
             * @param protectedSettings The extension can contain either protectedSettings or
             *     protectedSettingsFromKeyVault or no protected settings at all.
             * @return the next definition stage.
             */
            Update withProtectedSettings(Object protectedSettings);
        }
        /** The stage of the VirtualMachineScaleSetExtension update allowing to specify provisionAfterExtensions. */
        interface WithProvisionAfterExtensions {
            /**
             * Specifies the provisionAfterExtensions property: Collection of extension names after which this extension
             * needs to be provisioned..
             *
             * @param provisionAfterExtensions Collection of extension names after which this extension needs to be
             *     provisioned.
             * @return the next definition stage.
             */
            Update withProvisionAfterExtensions(List<String> provisionAfterExtensions);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    VirtualMachineScaleSetExtension refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    VirtualMachineScaleSetExtension refresh(Context context);
}
