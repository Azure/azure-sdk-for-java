/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.compute.v2017_03_30.implementation;

import com.microsoft.azure.arm.resources.models.implementation.GroupableResourceCoreImpl;
import com.microsoft.azure.management.compute.v2017_03_30.Image;
import rx.Observable;
import com.microsoft.azure.SubResource;
import com.microsoft.azure.management.compute.v2017_03_30.ImageStorageProfile;

class ImageImpl extends GroupableResourceCoreImpl<Image, ImageInner, ImageImpl, ComputeManager> implements Image, Image.Definition, Image.Update {
    ImageImpl(String name, ImageInner inner, ComputeManager manager) {
        super(name, inner, manager);
    }

    @Override
    public Observable<Image> createResourceAsync() {
        ImagesInner client = this.manager().inner().images();
        return client.createOrUpdateAsync(this.resourceGroupName(), this.name(), this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<Image> updateResourceAsync() {
        ImagesInner client = this.manager().inner().images();
        return client.createOrUpdateAsync(this.resourceGroupName(), this.name(), this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<ImageInner> getInnerAsync() {
        ImagesInner client = this.manager().inner().images();
        return client.getByResourceGroupAsync(this.resourceGroupName(), this.name());
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public String provisioningState() {
        return this.inner().provisioningState();
    }

    @Override
    public SubResource sourceVirtualMachine() {
        return this.inner().sourceVirtualMachine();
    }

    @Override
    public ImageStorageProfile storageProfile() {
        return this.inner().storageProfile();
    }

    @Override
    public ImageImpl withSourceVirtualMachine(SubResource sourceVirtualMachine) {
        this.inner().withSourceVirtualMachine(sourceVirtualMachine);
        return this;
    }

    @Override
    public ImageImpl withStorageProfile(ImageStorageProfile storageProfile) {
        this.inner().withStorageProfile(storageProfile);
        return this;
    }

}
