/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.compute.v2019_07_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.compute.v2019_07_01.implementation.VirtualMachineExtensionInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.compute.v2019_07_01.implementation.ComputeManager;
import java.util.Map;

/**
 * Type representing VirtualMachineScaleSetVirtualMachineExtension.
 */
public interface VirtualMachineScaleSetVirtualMachineExtension extends HasInner<VirtualMachineExtensionInner>, Indexable, Refreshable<VirtualMachineScaleSetVirtualMachineExtension>, Updatable<VirtualMachineScaleSetVirtualMachineExtension.Update>, HasManager<ComputeManager> {
    /**
     * @return the autoUpgradeMinorVersion value.
     */
    Boolean autoUpgradeMinorVersion();

    /**
     * @return the forceUpdateTag value.
     */
    String forceUpdateTag();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the instanceView value.
     */
    VirtualMachineExtensionInstanceView instanceView();

    /**
     * @return the location value.
     */
    String location();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the protectedSettings value.
     */
    Object protectedSettings();

    /**
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * @return the publisher value.
     */
    String publisher();

    /**
     * @return the settings value.
     */
    Object settings();

    /**
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * @return the type value.
     */
    String type();

    /**
     * @return the typeHandlerVersion value.
     */
    String typeHandlerVersion();

    /**
     * @return the virtualMachineExtensionType value.
     */
    String virtualMachineExtensionType();

    /**
     * The entirety of the VirtualMachineScaleSetVirtualMachineExtension definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithVirtualmachine, DefinitionStages.WithLocation, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of VirtualMachineScaleSetVirtualMachineExtension definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a VirtualMachineScaleSetVirtualMachineExtension definition.
         */
        interface Blank extends WithVirtualmachine {
        }

        /**
         * The stage of the virtualmachinescalesetvirtualmachineextension definition allowing to specify Virtualmachine.
         */
        interface WithVirtualmachine {
           /**
            * Specifies resourceGroupName, vmScaleSetName, instanceId.
            * @param resourceGroupName The name of the resource group
            * @param vmScaleSetName The name of the VM scale set
            * @param instanceId The instance ID of the virtual machine
            * @return the next definition stage
            */
            WithLocation withExistingVirtualmachine(String resourceGroupName, String vmScaleSetName, String instanceId);
        }

        /**
         * The stage of the virtualmachinescalesetvirtualmachineextension definition allowing to specify Location.
         */
        interface WithLocation {
           /**
            * Specifies location.
            * @param location Resource location
            * @return the next definition stage
            */
            WithCreate withLocation(String location);
        }

        /**
         * The stage of the virtualmachinescalesetvirtualmachineextension definition allowing to specify AutoUpgradeMinorVersion.
         */
        interface WithAutoUpgradeMinorVersion {
            /**
             * Specifies autoUpgradeMinorVersion.
             * @param autoUpgradeMinorVersion Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true
             * @return the next definition stage
             */
            WithCreate withAutoUpgradeMinorVersion(Boolean autoUpgradeMinorVersion);
        }

        /**
         * The stage of the virtualmachinescalesetvirtualmachineextension definition allowing to specify ForceUpdateTag.
         */
        interface WithForceUpdateTag {
            /**
             * Specifies forceUpdateTag.
             * @param forceUpdateTag How the extension handler should be forced to update even if the extension configuration has not changed
             * @return the next definition stage
             */
            WithCreate withForceUpdateTag(String forceUpdateTag);
        }

        /**
         * The stage of the virtualmachinescalesetvirtualmachineextension definition allowing to specify InstanceView.
         */
        interface WithInstanceView {
            /**
             * Specifies instanceView.
             * @param instanceView The virtual machine extension instance view
             * @return the next definition stage
             */
            WithCreate withInstanceView(VirtualMachineExtensionInstanceView instanceView);
        }

        /**
         * The stage of the virtualmachinescalesetvirtualmachineextension definition allowing to specify ProtectedSettings.
         */
        interface WithProtectedSettings {
            /**
             * Specifies protectedSettings.
             * @param protectedSettings The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all
             * @return the next definition stage
             */
            WithCreate withProtectedSettings(Object protectedSettings);
        }

        /**
         * The stage of the virtualmachinescalesetvirtualmachineextension definition allowing to specify Publisher.
         */
        interface WithPublisher {
            /**
             * Specifies publisher.
             * @param publisher The name of the extension handler publisher
             * @return the next definition stage
             */
            WithCreate withPublisher(String publisher);
        }

        /**
         * The stage of the virtualmachinescalesetvirtualmachineextension definition allowing to specify Settings.
         */
        interface WithSettings {
            /**
             * Specifies settings.
             * @param settings Json formatted public settings for the extension
             * @return the next definition stage
             */
            WithCreate withSettings(Object settings);
        }

        /**
         * The stage of the virtualmachinescalesetvirtualmachineextension definition allowing to specify Tags.
         */
        interface WithTags {
            /**
             * Specifies tags.
             * @param tags Resource tags
             * @return the next definition stage
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the virtualmachinescalesetvirtualmachineextension definition allowing to specify TypeHandlerVersion.
         */
        interface WithTypeHandlerVersion {
            /**
             * Specifies typeHandlerVersion.
             * @param typeHandlerVersion Specifies the version of the script handler
             * @return the next definition stage
             */
            WithCreate withTypeHandlerVersion(String typeHandlerVersion);
        }

        /**
         * The stage of the virtualmachinescalesetvirtualmachineextension definition allowing to specify VirtualMachineExtensionType.
         */
        interface WithVirtualMachineExtensionType {
            /**
             * Specifies virtualMachineExtensionType.
             * @param virtualMachineExtensionType Specifies the type of the extension; an example is "CustomScriptExtension"
             * @return the next definition stage
             */
            WithCreate withVirtualMachineExtensionType(String virtualMachineExtensionType);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<VirtualMachineScaleSetVirtualMachineExtension>, DefinitionStages.WithAutoUpgradeMinorVersion, DefinitionStages.WithForceUpdateTag, DefinitionStages.WithInstanceView, DefinitionStages.WithProtectedSettings, DefinitionStages.WithPublisher, DefinitionStages.WithSettings, DefinitionStages.WithTags, DefinitionStages.WithTypeHandlerVersion, DefinitionStages.WithVirtualMachineExtensionType {
        }
    }
    /**
     * The template for a VirtualMachineScaleSetVirtualMachineExtension update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<VirtualMachineScaleSetVirtualMachineExtension>, UpdateStages.WithAutoUpgradeMinorVersion, UpdateStages.WithForceUpdateTag, UpdateStages.WithProtectedSettings, UpdateStages.WithPublisher, UpdateStages.WithSettings, UpdateStages.WithTags, UpdateStages.WithType, UpdateStages.WithTypeHandlerVersion {
    }

    /**
     * Grouping of VirtualMachineScaleSetVirtualMachineExtension update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the virtualmachinescalesetvirtualmachineextension update allowing to specify AutoUpgradeMinorVersion.
         */
        interface WithAutoUpgradeMinorVersion {
            /**
             * Specifies autoUpgradeMinorVersion.
             * @param autoUpgradeMinorVersion Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true
             * @return the next update stage
             */
            Update withAutoUpgradeMinorVersion(Boolean autoUpgradeMinorVersion);
        }

        /**
         * The stage of the virtualmachinescalesetvirtualmachineextension update allowing to specify ForceUpdateTag.
         */
        interface WithForceUpdateTag {
            /**
             * Specifies forceUpdateTag.
             * @param forceUpdateTag How the extension handler should be forced to update even if the extension configuration has not changed
             * @return the next update stage
             */
            Update withForceUpdateTag(String forceUpdateTag);
        }

        /**
         * The stage of the virtualmachinescalesetvirtualmachineextension update allowing to specify ProtectedSettings.
         */
        interface WithProtectedSettings {
            /**
             * Specifies protectedSettings.
             * @param protectedSettings The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all
             * @return the next update stage
             */
            Update withProtectedSettings(Object protectedSettings);
        }

        /**
         * The stage of the virtualmachinescalesetvirtualmachineextension update allowing to specify Publisher.
         */
        interface WithPublisher {
            /**
             * Specifies publisher.
             * @param publisher The name of the extension handler publisher
             * @return the next update stage
             */
            Update withPublisher(String publisher);
        }

        /**
         * The stage of the virtualmachinescalesetvirtualmachineextension update allowing to specify Settings.
         */
        interface WithSettings {
            /**
             * Specifies settings.
             * @param settings Json formatted public settings for the extension
             * @return the next update stage
             */
            Update withSettings(Object settings);
        }

        /**
         * The stage of the virtualmachinescalesetvirtualmachineextension update allowing to specify Tags.
         */
        interface WithTags {
            /**
             * Specifies tags.
             * @param tags Resource tags
             * @return the next update stage
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the virtualmachinescalesetvirtualmachineextension update allowing to specify Type.
         */
        interface WithType {
            /**
             * Specifies type.
             * @param type Specifies the type of the extension; an example is "CustomScriptExtension"
             * @return the next update stage
             */
            Update withType(String type);
        }

        /**
         * The stage of the virtualmachinescalesetvirtualmachineextension update allowing to specify TypeHandlerVersion.
         */
        interface WithTypeHandlerVersion {
            /**
             * Specifies typeHandlerVersion.
             * @param typeHandlerVersion Specifies the version of the script handler
             * @return the next update stage
             */
            Update withTypeHandlerVersion(String typeHandlerVersion);
        }

    }
}
