/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.compute.v2020_10_01_preview.implementation;

import com.microsoft.azure.management.compute.v2020_10_01_preview.RoleInstance;
import com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl;
import rx.Observable;
import com.microsoft.azure.management.compute.v2020_10_01_preview.RoleInstanceProperties;
import com.microsoft.azure.management.compute.v2020_10_01_preview.InstanceSku;
import java.util.Map;

class RoleInstanceImpl extends IndexableRefreshableWrapperImpl<RoleInstance, RoleInstanceInner> implements RoleInstance {
    private final ComputeManager manager;
    private String roleInstanceName;
    private String resourceGroupName;
    private String cloudServiceName;

    RoleInstanceImpl(RoleInstanceInner inner,  ComputeManager manager) {
        super(null, inner);
        this.manager = manager;
        // set resource ancestor and positional variables
        this.roleInstanceName = IdParsingUtils.getValueFromIdByName(inner.id(), "roleInstances");
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.cloudServiceName = IdParsingUtils.getValueFromIdByName(inner.id(), "cloudServices");
    }

    @Override
    public ComputeManager manager() {
        return this.manager;
    }

    @Override
    protected Observable<RoleInstanceInner> getInnerAsync() {
        CloudServiceRoleInstancesInner client = this.manager().inner().cloudServiceRoleInstances();
        return client.getAsync(this.roleInstanceName, this.resourceGroupName, this.cloudServiceName);
    }



    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String location() {
        return this.inner().location();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public RoleInstanceProperties properties() {
        return this.inner().properties();
    }

    @Override
    public InstanceSku sku() {
        return this.inner().sku();
    }

    @Override
    public Map<String, String> tags() {
        return this.inner().tags();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

}
