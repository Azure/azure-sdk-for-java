/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.compute.v2020_10_01_preview.implementation;

import com.microsoft.azure.management.compute.v2020_10_01_preview.VirtualMachineInstanceView;
import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.compute.v2020_10_01_preview.BootDiagnosticsInstanceView;
import java.util.List;
import com.microsoft.azure.management.compute.v2020_10_01_preview.DiskInstanceView;
import com.microsoft.azure.management.compute.v2020_10_01_preview.VirtualMachineExtensionInstanceView;
import com.microsoft.azure.management.compute.v2020_10_01_preview.HyperVGenerationType;
import com.microsoft.azure.management.compute.v2020_10_01_preview.MaintenanceRedeployStatus;
import com.microsoft.azure.management.compute.v2020_10_01_preview.VirtualMachinePatchStatus;
import com.microsoft.azure.management.compute.v2020_10_01_preview.InstanceViewStatus;
import com.microsoft.azure.management.compute.v2020_10_01_preview.VirtualMachineAgentInstanceView;
import com.microsoft.azure.management.compute.v2020_10_01_preview.VirtualMachineHealthStatus;

class VirtualMachineInstanceViewImpl extends WrapperImpl<VirtualMachineInstanceViewInner> implements VirtualMachineInstanceView {
    private final ComputeManager manager;
    VirtualMachineInstanceViewImpl(VirtualMachineInstanceViewInner inner, ComputeManager manager) {
        super(inner);
        this.manager = manager;
    }

    @Override
    public ComputeManager manager() {
        return this.manager;
    }

    @Override
    public String assignedHost() {
        return this.inner().assignedHost();
    }

    @Override
    public BootDiagnosticsInstanceView bootDiagnostics() {
        return this.inner().bootDiagnostics();
    }

    @Override
    public String computerName() {
        return this.inner().computerName();
    }

    @Override
    public List<DiskInstanceView> disks() {
        return this.inner().disks();
    }

    @Override
    public List<VirtualMachineExtensionInstanceView> extensions() {
        return this.inner().extensions();
    }

    @Override
    public HyperVGenerationType hyperVGeneration() {
        return this.inner().hyperVGeneration();
    }

    @Override
    public MaintenanceRedeployStatus maintenanceRedeployStatus() {
        return this.inner().maintenanceRedeployStatus();
    }

    @Override
    public String osName() {
        return this.inner().osName();
    }

    @Override
    public String osVersion() {
        return this.inner().osVersion();
    }

    @Override
    public VirtualMachinePatchStatus patchStatus() {
        return this.inner().patchStatus();
    }

    @Override
    public Integer platformFaultDomain() {
        return this.inner().platformFaultDomain();
    }

    @Override
    public Integer platformUpdateDomain() {
        return this.inner().platformUpdateDomain();
    }

    @Override
    public String rdpThumbPrint() {
        return this.inner().rdpThumbPrint();
    }

    @Override
    public List<InstanceViewStatus> statuses() {
        return this.inner().statuses();
    }

    @Override
    public VirtualMachineAgentInstanceView vmAgent() {
        return this.inner().vmAgent();
    }

    @Override
    public VirtualMachineHealthStatus vmHealth() {
        return this.inner().vmHealth();
    }

}
