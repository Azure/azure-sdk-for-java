/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.compute.v2020_10_01_preview;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Cloud service properties.
 */
public class CloudServiceProperties {
    /**
     * Specifies a URL that refers to the location of the service package in
     * the Blob service. The service package URL can be Shared Access Signature
     * (SAS) URI from any storage account.
     * This is a write-only property and is not returned in GET calls.
     */
    @JsonProperty(value = "packageUrl")
    private String packageUrl;

    /**
     * Specifies the XML service configuration (.cscfg) for the cloud service.
     */
    @JsonProperty(value = "configuration")
    private String configuration;

    /**
     * Specifies a URL that refers to the location of the service configuration
     * in the Blob service. The service package URL  can be Shared Access
     * Signature (SAS) URI from any storage account.
     * This is a write-only property and is not returned in GET calls.
     */
    @JsonProperty(value = "configurationUrl")
    private String configurationUrl;

    /**
     * (Optional) Indicates whether to start the cloud service immediately
     * after it is created. The default value is `true`.
     * If false, the service model is still deployed, but the code is not run
     * immediately. Instead, the service is PoweredOff until you call Start, at
     * which time the service will be started. A deployed service still incurs
     * charges, even if it is poweredoff.
     */
    @JsonProperty(value = "startCloudService")
    private Boolean startCloudService;

    /**
     * Possible values include: 'Auto', 'Manual', 'Simultaneous'.
     */
    @JsonProperty(value = "upgradeMode")
    private CloudServiceUpgradeMode upgradeMode;

    /**
     * The roleProfile property.
     */
    @JsonProperty(value = "roleProfile")
    private CloudServiceRoleProfile roleProfile;

    /**
     * The osProfile property.
     */
    @JsonProperty(value = "osProfile")
    private CloudServiceOsProfile osProfile;

    /**
     * The networkProfile property.
     */
    @JsonProperty(value = "networkProfile")
    private CloudServiceNetworkProfile networkProfile;

    /**
     * The extensionProfile property.
     */
    @JsonProperty(value = "extensionProfile")
    private CloudServiceExtensionProfile extensionProfile;

    /**
     * The provisioning state, which only appears in the response.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private String provisioningState;

    /**
     * The unique identifier for the cloud service.
     */
    @JsonProperty(value = "uniqueId", access = JsonProperty.Access.WRITE_ONLY)
    private String uniqueId;

    /**
     * Get specifies a URL that refers to the location of the service package in the Blob service. The service package URL can be Shared Access Signature (SAS) URI from any storage account.
     This is a write-only property and is not returned in GET calls.
     *
     * @return the packageUrl value
     */
    public String packageUrl() {
        return this.packageUrl;
    }

    /**
     * Set specifies a URL that refers to the location of the service package in the Blob service. The service package URL can be Shared Access Signature (SAS) URI from any storage account.
     This is a write-only property and is not returned in GET calls.
     *
     * @param packageUrl the packageUrl value to set
     * @return the CloudServiceProperties object itself.
     */
    public CloudServiceProperties withPackageUrl(String packageUrl) {
        this.packageUrl = packageUrl;
        return this;
    }

    /**
     * Get specifies the XML service configuration (.cscfg) for the cloud service.
     *
     * @return the configuration value
     */
    public String configuration() {
        return this.configuration;
    }

    /**
     * Set specifies the XML service configuration (.cscfg) for the cloud service.
     *
     * @param configuration the configuration value to set
     * @return the CloudServiceProperties object itself.
     */
    public CloudServiceProperties withConfiguration(String configuration) {
        this.configuration = configuration;
        return this;
    }

    /**
     * Get specifies a URL that refers to the location of the service configuration in the Blob service. The service package URL  can be Shared Access Signature (SAS) URI from any storage account.
     This is a write-only property and is not returned in GET calls.
     *
     * @return the configurationUrl value
     */
    public String configurationUrl() {
        return this.configurationUrl;
    }

    /**
     * Set specifies a URL that refers to the location of the service configuration in the Blob service. The service package URL  can be Shared Access Signature (SAS) URI from any storage account.
     This is a write-only property and is not returned in GET calls.
     *
     * @param configurationUrl the configurationUrl value to set
     * @return the CloudServiceProperties object itself.
     */
    public CloudServiceProperties withConfigurationUrl(String configurationUrl) {
        this.configurationUrl = configurationUrl;
        return this;
    }

    /**
     * Get (Optional) Indicates whether to start the cloud service immediately after it is created. The default value is `true`.
     If false, the service model is still deployed, but the code is not run immediately. Instead, the service is PoweredOff until you call Start, at which time the service will be started. A deployed service still incurs charges, even if it is poweredoff.
     *
     * @return the startCloudService value
     */
    public Boolean startCloudService() {
        return this.startCloudService;
    }

    /**
     * Set (Optional) Indicates whether to start the cloud service immediately after it is created. The default value is `true`.
     If false, the service model is still deployed, but the code is not run immediately. Instead, the service is PoweredOff until you call Start, at which time the service will be started. A deployed service still incurs charges, even if it is poweredoff.
     *
     * @param startCloudService the startCloudService value to set
     * @return the CloudServiceProperties object itself.
     */
    public CloudServiceProperties withStartCloudService(Boolean startCloudService) {
        this.startCloudService = startCloudService;
        return this;
    }

    /**
     * Get possible values include: 'Auto', 'Manual', 'Simultaneous'.
     *
     * @return the upgradeMode value
     */
    public CloudServiceUpgradeMode upgradeMode() {
        return this.upgradeMode;
    }

    /**
     * Set possible values include: 'Auto', 'Manual', 'Simultaneous'.
     *
     * @param upgradeMode the upgradeMode value to set
     * @return the CloudServiceProperties object itself.
     */
    public CloudServiceProperties withUpgradeMode(CloudServiceUpgradeMode upgradeMode) {
        this.upgradeMode = upgradeMode;
        return this;
    }

    /**
     * Get the roleProfile value.
     *
     * @return the roleProfile value
     */
    public CloudServiceRoleProfile roleProfile() {
        return this.roleProfile;
    }

    /**
     * Set the roleProfile value.
     *
     * @param roleProfile the roleProfile value to set
     * @return the CloudServiceProperties object itself.
     */
    public CloudServiceProperties withRoleProfile(CloudServiceRoleProfile roleProfile) {
        this.roleProfile = roleProfile;
        return this;
    }

    /**
     * Get the osProfile value.
     *
     * @return the osProfile value
     */
    public CloudServiceOsProfile osProfile() {
        return this.osProfile;
    }

    /**
     * Set the osProfile value.
     *
     * @param osProfile the osProfile value to set
     * @return the CloudServiceProperties object itself.
     */
    public CloudServiceProperties withOsProfile(CloudServiceOsProfile osProfile) {
        this.osProfile = osProfile;
        return this;
    }

    /**
     * Get the networkProfile value.
     *
     * @return the networkProfile value
     */
    public CloudServiceNetworkProfile networkProfile() {
        return this.networkProfile;
    }

    /**
     * Set the networkProfile value.
     *
     * @param networkProfile the networkProfile value to set
     * @return the CloudServiceProperties object itself.
     */
    public CloudServiceProperties withNetworkProfile(CloudServiceNetworkProfile networkProfile) {
        this.networkProfile = networkProfile;
        return this;
    }

    /**
     * Get the extensionProfile value.
     *
     * @return the extensionProfile value
     */
    public CloudServiceExtensionProfile extensionProfile() {
        return this.extensionProfile;
    }

    /**
     * Set the extensionProfile value.
     *
     * @param extensionProfile the extensionProfile value to set
     * @return the CloudServiceProperties object itself.
     */
    public CloudServiceProperties withExtensionProfile(CloudServiceExtensionProfile extensionProfile) {
        this.extensionProfile = extensionProfile;
        return this;
    }

    /**
     * Get the provisioning state, which only appears in the response.
     *
     * @return the provisioningState value
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the unique identifier for the cloud service.
     *
     * @return the uniqueId value
     */
    public String uniqueId() {
        return this.uniqueId;
    }

}
