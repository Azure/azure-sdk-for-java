/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.compute.v2020_10_01_preview.implementation;

import com.microsoft.azure.management.compute.v2020_10_01_preview.UpdateDomain;
import com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl;
import rx.Observable;

class UpdateDomainImpl extends IndexableRefreshableWrapperImpl<UpdateDomain, UpdateDomainInner> implements UpdateDomain {
    private final ComputeManager manager;
    private String resourceGroupName;
    private String cloudServiceName;
    private int updateDomain;

    UpdateDomainImpl(UpdateDomainInner inner,  ComputeManager manager) {
        super(null, inner);
        this.manager = manager;
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.cloudServiceName = IdParsingUtils.getValueFromIdByName(inner.id(), "cloudServices");
        this.updateDomain = Integer.parseInt(IdParsingUtils.getValueFromIdByName(inner.id(), "updateDomains"));
    }

    @Override
    public ComputeManager manager() {
        return this.manager;
    }

    @Override
    protected Observable<UpdateDomainInner> getInnerAsync() {
        CloudServicesUpdateDomainsInner client = this.manager().inner().cloudServicesUpdateDomains();
        return client.getUpdateDomainAsync(this.resourceGroupName, this.cloudServiceName, this.updateDomain);
    }



    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

}
