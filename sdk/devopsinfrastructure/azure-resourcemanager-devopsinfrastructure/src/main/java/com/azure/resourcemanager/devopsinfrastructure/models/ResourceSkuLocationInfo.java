// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.devopsinfrastructure.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Describes an available Compute SKU Location Information.
 */
@Immutable
public final class ResourceSkuLocationInfo {
    /*
     * Location of the SKU
     */
    @JsonProperty(value = "location", required = true)
    private String location;

    /*
     * List of availability zones where the SKU is supported.
     */
    @JsonProperty(value = "zones", required = true)
    private List<String> zones;

    /*
     * Gets details of capabilities available to a SKU in specific zones.
     */
    @JsonProperty(value = "zoneDetails", required = true)
    private List<ResourceSkuZoneDetails> zoneDetails;

    /**
     * Creates an instance of ResourceSkuLocationInfo class.
     */
    private ResourceSkuLocationInfo() {
    }

    /**
     * Get the location property: Location of the SKU.
     * 
     * @return the location value.
     */
    public String location() {
        return this.location;
    }

    /**
     * Get the zones property: List of availability zones where the SKU is supported.
     * 
     * @return the zones value.
     */
    public List<String> zones() {
        return this.zones;
    }

    /**
     * Get the zoneDetails property: Gets details of capabilities available to a SKU in specific zones.
     * 
     * @return the zoneDetails value.
     */
    public List<ResourceSkuZoneDetails> zoneDetails() {
        return this.zoneDetails;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (location() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property location in model ResourceSkuLocationInfo"));
        }
        if (zones() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property zones in model ResourceSkuLocationInfo"));
        }
        if (zoneDetails() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property zoneDetails in model ResourceSkuLocationInfo"));
        } else {
            zoneDetails().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ResourceSkuLocationInfo.class);
}
