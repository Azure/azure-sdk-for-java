// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.devopsinfrastructure.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;

/**
 * Azure DevOps organization profile.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "kind",
    defaultImpl = AzureDevOpsOrganizationProfile.class,
    visible = true)
@JsonTypeName("AzureDevOps")
@Fluent
public final class AzureDevOpsOrganizationProfile extends OrganizationProfile {
    /*
     * The kind property.
     */
    @JsonTypeId
    @JsonProperty(value = "kind", required = true)
    private String kind = "AzureDevOps";

    /*
     * The list of Azure DevOps organizations the pool should be present in.
     */
    @JsonProperty(value = "organizations", required = true)
    private List<Organization> organizations;

    /*
     * The type of permission which determines which accounts are admins on the Azure DevOps pool.
     */
    @JsonProperty(value = "permissionProfile")
    private AzureDevOpsPermissionProfile permissionProfile;

    /**
     * Creates an instance of AzureDevOpsOrganizationProfile class.
     */
    public AzureDevOpsOrganizationProfile() {
    }

    /**
     * Get the kind property: The kind property.
     * 
     * @return the kind value.
     */
    @Override
    public String kind() {
        return this.kind;
    }

    /**
     * Get the organizations property: The list of Azure DevOps organizations the pool should be present in.
     * 
     * @return the organizations value.
     */
    public List<Organization> organizations() {
        return this.organizations;
    }

    /**
     * Set the organizations property: The list of Azure DevOps organizations the pool should be present in.
     * 
     * @param organizations the organizations value to set.
     * @return the AzureDevOpsOrganizationProfile object itself.
     */
    public AzureDevOpsOrganizationProfile withOrganizations(List<Organization> organizations) {
        this.organizations = organizations;
        return this;
    }

    /**
     * Get the permissionProfile property: The type of permission which determines which accounts are admins on the
     * Azure DevOps pool.
     * 
     * @return the permissionProfile value.
     */
    public AzureDevOpsPermissionProfile permissionProfile() {
        return this.permissionProfile;
    }

    /**
     * Set the permissionProfile property: The type of permission which determines which accounts are admins on the
     * Azure DevOps pool.
     * 
     * @param permissionProfile the permissionProfile value to set.
     * @return the AzureDevOpsOrganizationProfile object itself.
     */
    public AzureDevOpsOrganizationProfile withPermissionProfile(AzureDevOpsPermissionProfile permissionProfile) {
        this.permissionProfile = permissionProfile;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (organizations() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property organizations in model AzureDevOpsOrganizationProfile"));
        } else {
            organizations().forEach(e -> e.validate());
        }
        if (permissionProfile() != null) {
            permissionProfile().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(AzureDevOpsOrganizationProfile.class);
}
