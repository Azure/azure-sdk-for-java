// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.devopsinfrastructure.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Stateful profile meaning that the machines will be returned to the pool after running a job.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "kind", defaultImpl = Stateful.class, visible = true)
@JsonTypeName("Stateful")
@Fluent
public final class Stateful extends AgentProfile {
    /*
     * The kind property.
     */
    @JsonTypeId
    @JsonProperty(value = "kind", required = true)
    private String kind = "Stateful";

    /*
     * How long should stateful machines be kept around. The maximum is one week.
     */
    @JsonProperty(value = "maxAgentLifetime")
    private String maxAgentLifetime;

    /*
     * How long should the machine be kept around after it ran a workload when there are no stand-by agents. The maximum
     * is one week.
     */
    @JsonProperty(value = "gracePeriodTimeSpan")
    private String gracePeriodTimeSpan;

    /**
     * Creates an instance of Stateful class.
     */
    public Stateful() {
    }

    /**
     * Get the kind property: The kind property.
     * 
     * @return the kind value.
     */
    @Override
    public String kind() {
        return this.kind;
    }

    /**
     * Get the maxAgentLifetime property: How long should stateful machines be kept around. The maximum is one week.
     * 
     * @return the maxAgentLifetime value.
     */
    public String maxAgentLifetime() {
        return this.maxAgentLifetime;
    }

    /**
     * Set the maxAgentLifetime property: How long should stateful machines be kept around. The maximum is one week.
     * 
     * @param maxAgentLifetime the maxAgentLifetime value to set.
     * @return the Stateful object itself.
     */
    public Stateful withMaxAgentLifetime(String maxAgentLifetime) {
        this.maxAgentLifetime = maxAgentLifetime;
        return this;
    }

    /**
     * Get the gracePeriodTimeSpan property: How long should the machine be kept around after it ran a workload when
     * there are no stand-by agents. The maximum is one week.
     * 
     * @return the gracePeriodTimeSpan value.
     */
    public String gracePeriodTimeSpan() {
        return this.gracePeriodTimeSpan;
    }

    /**
     * Set the gracePeriodTimeSpan property: How long should the machine be kept around after it ran a workload when
     * there are no stand-by agents. The maximum is one week.
     * 
     * @param gracePeriodTimeSpan the gracePeriodTimeSpan value to set.
     * @return the Stateful object itself.
     */
    public Stateful withGracePeriodTimeSpan(String gracePeriodTimeSpan) {
        this.gracePeriodTimeSpan = gracePeriodTimeSpan;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Stateful withResourcePredictions(Object resourcePredictions) {
        super.withResourcePredictions(resourcePredictions);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Stateful withResourcePredictionsProfile(ResourcePredictionsProfile resourcePredictionsProfile) {
        super.withResourcePredictionsProfile(resourcePredictionsProfile);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
