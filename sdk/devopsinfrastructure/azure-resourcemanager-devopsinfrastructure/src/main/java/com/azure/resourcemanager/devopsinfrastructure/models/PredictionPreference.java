// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.devopsinfrastructure.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Determines the balance between cost and performance.
 */
public final class PredictionPreference extends ExpandableStringEnum<PredictionPreference> {
    /**
     * Static value Balanced for PredictionPreference.
     */
    public static final PredictionPreference BALANCED = fromString("Balanced");

    /**
     * Static value MostCostEffective for PredictionPreference.
     */
    public static final PredictionPreference MOST_COST_EFFECTIVE = fromString("MostCostEffective");

    /**
     * Static value MoreCostEffective for PredictionPreference.
     */
    public static final PredictionPreference MORE_COST_EFFECTIVE = fromString("MoreCostEffective");

    /**
     * Static value MorePerformance for PredictionPreference.
     */
    public static final PredictionPreference MORE_PERFORMANCE = fromString("MorePerformance");

    /**
     * Static value BestPerformance for PredictionPreference.
     */
    public static final PredictionPreference BEST_PERFORMANCE = fromString("BestPerformance");

    /**
     * Creates a new instance of PredictionPreference value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public PredictionPreference() {
    }

    /**
     * Creates or finds a PredictionPreference from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding PredictionPreference.
     */
    public static PredictionPreference fromString(String name) {
        return fromString(name, PredictionPreference.class);
    }

    /**
     * Gets known PredictionPreference values.
     * 
     * @return known PredictionPreference values.
     */
    public static Collection<PredictionPreference> values() {
        return values(PredictionPreference.class);
    }
}
