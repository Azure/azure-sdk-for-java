// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.devopsinfrastructure.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The OS profile of the machines in the pool.
 */
@Fluent
public final class OsProfile {
    /*
     * The secret management settings of the machines in the pool.
     */
    @JsonProperty(value = "secretsManagementSettings")
    private SecretsManagementSettings secretsManagementSettings;

    /*
     * Determines how the service should be run. By default, this will be set to Service.
     */
    @JsonProperty(value = "logonType")
    private LogonType logonType;

    /**
     * Creates an instance of OsProfile class.
     */
    public OsProfile() {
    }

    /**
     * Get the secretsManagementSettings property: The secret management settings of the machines in the pool.
     * 
     * @return the secretsManagementSettings value.
     */
    public SecretsManagementSettings secretsManagementSettings() {
        return this.secretsManagementSettings;
    }

    /**
     * Set the secretsManagementSettings property: The secret management settings of the machines in the pool.
     * 
     * @param secretsManagementSettings the secretsManagementSettings value to set.
     * @return the OsProfile object itself.
     */
    public OsProfile withSecretsManagementSettings(SecretsManagementSettings secretsManagementSettings) {
        this.secretsManagementSettings = secretsManagementSettings;
        return this;
    }

    /**
     * Get the logonType property: Determines how the service should be run. By default, this will be set to Service.
     * 
     * @return the logonType value.
     */
    public LogonType logonType() {
        return this.logonType;
    }

    /**
     * Set the logonType property: Determines how the service should be run. By default, this will be set to Service.
     * 
     * @param logonType the logonType value to set.
     * @return the OsProfile object itself.
     */
    public OsProfile withLogonType(LogonType logonType) {
        this.logonType = logonType;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (secretsManagementSettings() != null) {
            secretsManagementSettings().validate();
        }
    }
}
