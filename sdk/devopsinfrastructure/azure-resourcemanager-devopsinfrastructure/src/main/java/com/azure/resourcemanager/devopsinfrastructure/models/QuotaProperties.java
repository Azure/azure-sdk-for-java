// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.devopsinfrastructure.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Describes Resource Quota properties.
 */
@Immutable
public final class QuotaProperties {
    /*
     * The unit of usage measurement.
     */
    @JsonProperty(value = "unit", required = true)
    private String unit;

    /*
     * The current usage of the resource.
     */
    @JsonProperty(value = "currentValue", required = true)
    private long currentValue;

    /*
     * The maximum permitted usage of the resource.
     */
    @JsonProperty(value = "limit", required = true)
    private long limit;

    /*
     * The details of the quota.
     */
    @JsonProperty(value = "name", required = true)
    private QuotaName name;

    /**
     * Creates an instance of QuotaProperties class.
     */
    private QuotaProperties() {
    }

    /**
     * Get the unit property: The unit of usage measurement.
     * 
     * @return the unit value.
     */
    public String unit() {
        return this.unit;
    }

    /**
     * Get the currentValue property: The current usage of the resource.
     * 
     * @return the currentValue value.
     */
    public long currentValue() {
        return this.currentValue;
    }

    /**
     * Get the limit property: The maximum permitted usage of the resource.
     * 
     * @return the limit value.
     */
    public long limit() {
        return this.limit;
    }

    /**
     * Get the name property: The details of the quota.
     * 
     * @return the name value.
     */
    public QuotaName name() {
        return this.name;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (unit() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property unit in model QuotaProperties"));
        }
        if (name() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property name in model QuotaProperties"));
        } else {
            name().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(QuotaProperties.class);
}
