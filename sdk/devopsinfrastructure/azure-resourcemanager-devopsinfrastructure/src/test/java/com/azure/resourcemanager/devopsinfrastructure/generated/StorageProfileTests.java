// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.devopsinfrastructure.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devopsinfrastructure.models.CachingType;
import com.azure.resourcemanager.devopsinfrastructure.models.DataDisk;
import com.azure.resourcemanager.devopsinfrastructure.models.OsDiskStorageAccountType;
import com.azure.resourcemanager.devopsinfrastructure.models.StorageAccountType;
import com.azure.resourcemanager.devopsinfrastructure.models.StorageProfile;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class StorageProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        StorageProfile model = BinaryData.fromString(
            "{\"osDiskStorageAccountType\":\"StandardSSD\",\"dataDisks\":[{\"caching\":\"ReadWrite\",\"diskSizeGiB\":1500151010,\"storageAccountType\":\"StandardSSD_ZRS\",\"driveLetter\":\"bvpyss\"},{\"caching\":\"ReadWrite\",\"diskSizeGiB\":315783866,\"storageAccountType\":\"Standard_LRS\",\"driveLetter\":\"uhmuouqfprwzwbn\"},{\"caching\":\"ReadOnly\",\"diskSizeGiB\":1015054859,\"storageAccountType\":\"StandardSSD_ZRS\",\"driveLetter\":\"zga\"},{\"caching\":\"ReadOnly\",\"diskSizeGiB\":2117984998,\"storageAccountType\":\"Premium_LRS\",\"driveLetter\":\"kyfi\"}]}")
            .toObject(StorageProfile.class);
        Assertions.assertEquals(OsDiskStorageAccountType.STANDARD_SSD, model.osDiskStorageAccountType());
        Assertions.assertEquals(CachingType.READ_WRITE, model.dataDisks().get(0).caching());
        Assertions.assertEquals(1500151010, model.dataDisks().get(0).diskSizeGiB());
        Assertions.assertEquals(StorageAccountType.STANDARD_SSDZRS, model.dataDisks().get(0).storageAccountType());
        Assertions.assertEquals("bvpyss", model.dataDisks().get(0).driveLetter());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        StorageProfile model = new StorageProfile().withOsDiskStorageAccountType(OsDiskStorageAccountType.STANDARD_SSD)
            .withDataDisks(Arrays.asList(
                new DataDisk().withCaching(CachingType.READ_WRITE)
                    .withDiskSizeGiB(1500151010)
                    .withStorageAccountType(StorageAccountType.STANDARD_SSDZRS)
                    .withDriveLetter("bvpyss"),
                new DataDisk().withCaching(CachingType.READ_WRITE)
                    .withDiskSizeGiB(315783866)
                    .withStorageAccountType(StorageAccountType.STANDARD_LRS)
                    .withDriveLetter("uhmuouqfprwzwbn"),
                new DataDisk().withCaching(CachingType.READ_ONLY)
                    .withDiskSizeGiB(1015054859)
                    .withStorageAccountType(StorageAccountType.STANDARD_SSDZRS)
                    .withDriveLetter("zga"),
                new DataDisk().withCaching(CachingType.READ_ONLY)
                    .withDiskSizeGiB(2117984998)
                    .withStorageAccountType(StorageAccountType.PREMIUM_LRS)
                    .withDriveLetter("kyfi")));
        model = BinaryData.fromObject(model).toObject(StorageProfile.class);
        Assertions.assertEquals(OsDiskStorageAccountType.STANDARD_SSD, model.osDiskStorageAccountType());
        Assertions.assertEquals(CachingType.READ_WRITE, model.dataDisks().get(0).caching());
        Assertions.assertEquals(1500151010, model.dataDisks().get(0).diskSizeGiB());
        Assertions.assertEquals(StorageAccountType.STANDARD_SSDZRS, model.dataDisks().get(0).storageAccountType());
        Assertions.assertEquals("bvpyss", model.dataDisks().get(0).driveLetter());
    }
}
