// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.devopsinfrastructure.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.devopsinfrastructure.DevOpsInfrastructureManager;
import com.azure.resourcemanager.devopsinfrastructure.models.AvailabilityStatus;
import com.azure.resourcemanager.devopsinfrastructure.models.CheckNameAvailability;
import com.azure.resourcemanager.devopsinfrastructure.models.CheckNameAvailabilityReason;
import com.azure.resourcemanager.devopsinfrastructure.models.CheckNameAvailabilityResult;
import com.azure.resourcemanager.devopsinfrastructure.models.DevOpsInfrastructureResourceType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PoolsCheckNameAvailabilityWithResponseMockTests {
    @Test
    public void testCheckNameAvailabilityWithResponse() throws Exception {
        String responseStr
            = "{\"available\":\"Available\",\"message\":\"jlfltkacjvefkdlf\",\"name\":\"akggkfpag\",\"reason\":\"Invalid\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DevOpsInfrastructureManager manager = DevOpsInfrastructureManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        CheckNameAvailabilityResult response = manager.pools()
            .checkNameAvailabilityWithResponse(
                new CheckNameAvailability().withName("odtji")
                    .withType(DevOpsInfrastructureResourceType.MICROSOFT_DEV_OPS_INFRASTRUCTURE_POOLS),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(AvailabilityStatus.AVAILABLE, response.available());
        Assertions.assertEquals("jlfltkacjvefkdlf", response.message());
        Assertions.assertEquals("akggkfpag", response.name());
        Assertions.assertEquals(CheckNameAvailabilityReason.INVALID, response.reason());
    }
}
