// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.devopsinfrastructure.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devopsinfrastructure.models.AzureDevOpsOrganizationProfile;
import com.azure.resourcemanager.devopsinfrastructure.models.AzureDevOpsPermissionProfile;
import com.azure.resourcemanager.devopsinfrastructure.models.AzureDevOpsPermissionType;
import com.azure.resourcemanager.devopsinfrastructure.models.Organization;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzureDevOpsOrganizationProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureDevOpsOrganizationProfile model = BinaryData.fromString(
            "{\"kind\":\"AzureDevOps\",\"organizations\":[{\"url\":\"felluwfzitonpe\",\"projects\":[\"jkjlxofpdvhpfx\",\"ypininm\",\"yhuybbkpod\"],\"parallelism\":783834227},{\"url\":\"oginuvamiheognar\",\"projects\":[\"theotusiv\"],\"parallelism\":38096196}],\"permissionProfile\":{\"kind\":\"SpecificAccounts\",\"users\":[\"ihnhun\"],\"groups\":[\"jzrnf\",\"gxg\",\"spemvtzfk\",\"fublj\"]}}")
            .toObject(AzureDevOpsOrganizationProfile.class);
        Assertions.assertEquals("felluwfzitonpe", model.organizations().get(0).url());
        Assertions.assertEquals("jkjlxofpdvhpfx", model.organizations().get(0).projects().get(0));
        Assertions.assertEquals(783834227, model.organizations().get(0).parallelism());
        Assertions.assertEquals(AzureDevOpsPermissionType.SPECIFIC_ACCOUNTS, model.permissionProfile().kind());
        Assertions.assertEquals("ihnhun", model.permissionProfile().users().get(0));
        Assertions.assertEquals("jzrnf", model.permissionProfile().groups().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureDevOpsOrganizationProfile model = new AzureDevOpsOrganizationProfile()
            .withOrganizations(Arrays.asList(
                new Organization().withUrl("felluwfzitonpe")
                    .withProjects(Arrays.asList("jkjlxofpdvhpfx", "ypininm", "yhuybbkpod"))
                    .withParallelism(783834227),
                new Organization().withUrl("oginuvamiheognar")
                    .withProjects(Arrays.asList("theotusiv"))
                    .withParallelism(38096196)))
            .withPermissionProfile(
                new AzureDevOpsPermissionProfile().withKind(AzureDevOpsPermissionType.SPECIFIC_ACCOUNTS)
                    .withUsers(Arrays.asList("ihnhun"))
                    .withGroups(Arrays.asList("jzrnf", "gxg", "spemvtzfk", "fublj")));
        model = BinaryData.fromObject(model).toObject(AzureDevOpsOrganizationProfile.class);
        Assertions.assertEquals("felluwfzitonpe", model.organizations().get(0).url());
        Assertions.assertEquals("jkjlxofpdvhpfx", model.organizations().get(0).projects().get(0));
        Assertions.assertEquals(783834227, model.organizations().get(0).parallelism());
        Assertions.assertEquals(AzureDevOpsPermissionType.SPECIFIC_ACCOUNTS, model.permissionProfile().kind());
        Assertions.assertEquals("ihnhun", model.permissionProfile().users().get(0));
        Assertions.assertEquals("jzrnf", model.permissionProfile().groups().get(0));
    }
}
