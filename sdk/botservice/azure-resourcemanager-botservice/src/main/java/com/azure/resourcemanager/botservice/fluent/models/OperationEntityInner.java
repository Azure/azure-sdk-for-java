// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.botservice.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.botservice.models.OperationDisplayInfo;
import java.io.IOException;

/**
 * The operations supported by Bot Service Management.
 */
@Fluent
public final class OperationEntityInner implements JsonSerializable<OperationEntityInner> {
    /*
     * Operation name: {provider}/{resource}/{operation}.
     */
    private String name;

    /*
     * The operation supported by Bot Service Management.
     */
    private OperationDisplayInfo display;

    /*
     * The origin of the operation.
     */
    private String origin;

    /*
     * Additional properties.
     */
    private Object properties;

    /**
     * Creates an instance of OperationEntityInner class.
     */
    public OperationEntityInner() {
    }

    /**
     * Get the name property: Operation name: {provider}/{resource}/{operation}.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Operation name: {provider}/{resource}/{operation}.
     * 
     * @param name the name value to set.
     * @return the OperationEntityInner object itself.
     */
    public OperationEntityInner withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the display property: The operation supported by Bot Service Management.
     * 
     * @return the display value.
     */
    public OperationDisplayInfo display() {
        return this.display;
    }

    /**
     * Set the display property: The operation supported by Bot Service Management.
     * 
     * @param display the display value to set.
     * @return the OperationEntityInner object itself.
     */
    public OperationEntityInner withDisplay(OperationDisplayInfo display) {
        this.display = display;
        return this;
    }

    /**
     * Get the origin property: The origin of the operation.
     * 
     * @return the origin value.
     */
    public String origin() {
        return this.origin;
    }

    /**
     * Set the origin property: The origin of the operation.
     * 
     * @param origin the origin value to set.
     * @return the OperationEntityInner object itself.
     */
    public OperationEntityInner withOrigin(String origin) {
        this.origin = origin;
        return this;
    }

    /**
     * Get the properties property: Additional properties.
     * 
     * @return the properties value.
     */
    public Object properties() {
        return this.properties;
    }

    /**
     * Set the properties property: Additional properties.
     * 
     * @param properties the properties value to set.
     * @return the OperationEntityInner object itself.
     */
    public OperationEntityInner withProperties(Object properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (display() != null) {
            display().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeJsonField("display", this.display);
        jsonWriter.writeStringField("origin", this.origin);
        jsonWriter.writeUntypedField("properties", this.properties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OperationEntityInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of OperationEntityInner if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the OperationEntityInner.
     */
    public static OperationEntityInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OperationEntityInner deserializedOperationEntityInner = new OperationEntityInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedOperationEntityInner.name = reader.getString();
                } else if ("display".equals(fieldName)) {
                    deserializedOperationEntityInner.display = OperationDisplayInfo.fromJson(reader);
                } else if ("origin".equals(fieldName)) {
                    deserializedOperationEntityInner.origin = reader.getString();
                } else if ("properties".equals(fieldName)) {
                    deserializedOperationEntityInner.properties = reader.readUntyped();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedOperationEntityInner;
        });
    }
}
