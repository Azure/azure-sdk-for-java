// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.botservice.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * AcsChat channel definition.
 */
@Fluent
public final class AcsChatChannel extends Channel {
    /*
     * The channel name
     */
    private String channelName = "AcsChatChannel";

    /*
     * Provisioning state of the resource
     */
    private String provisioningState;

    /**
     * Creates an instance of AcsChatChannel class.
     */
    public AcsChatChannel() {
    }

    /**
     * Get the channelName property: The channel name.
     * 
     * @return the channelName value.
     */
    @Override
    public String channelName() {
        return this.channelName;
    }

    /**
     * Get the provisioningState property: Provisioning state of the resource.
     * 
     * @return the provisioningState value.
     */
    @Override
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AcsChatChannel withEtag(String etag) {
        super.withEtag(etag);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AcsChatChannel withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("etag", etag());
        jsonWriter.writeStringField("location", location());
        jsonWriter.writeStringField("channelName", this.channelName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AcsChatChannel from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AcsChatChannel if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AcsChatChannel.
     */
    public static AcsChatChannel fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AcsChatChannel deserializedAcsChatChannel = new AcsChatChannel();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("etag".equals(fieldName)) {
                    deserializedAcsChatChannel.withEtag(reader.getString());
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedAcsChatChannel.provisioningState = reader.getString();
                } else if ("location".equals(fieldName)) {
                    deserializedAcsChatChannel.withLocation(reader.getString());
                } else if ("channelName".equals(fieldName)) {
                    deserializedAcsChatChannel.channelName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAcsChatChannel;
        });
    }
}
