// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.botservice.generated;

import com.azure.core.util.Context;
import com.azure.resourcemanager.botservice.models.Key;
import com.azure.resourcemanager.botservice.models.RegenerateKeysChannelName;
import com.azure.resourcemanager.botservice.models.SiteInfo;

/** Samples for DirectLine RegenerateKeys. */
public final class DirectLineRegenerateKeysSamples {
    /*
     * x-ms-original-file: specification/botservice/resource-manager/Microsoft.BotService/preview/2021-05-01-preview/examples/DirectlineRegenerateKeys.json
     */
    /**
     * Sample code: Regenerate Keys for DirectLine Channel Site.
     *
     * @param manager Entry point to BotServiceManager.
     */
    public static void regenerateKeysForDirectLineChannelSite(
        com.azure.resourcemanager.botservice.BotServiceManager manager) {
        manager
            .directLines()
            .regenerateKeysWithResponse(
                "OneResourceGroupName",
                "samplebotname",
                RegenerateKeysChannelName.DIRECT_LINE_CHANNEL,
                new SiteInfo().withSiteName("testSiteName").withKey(Key.KEY1),
                Context.NONE);
    }

    /*
     * x-ms-original-file: specification/botservice/resource-manager/Microsoft.BotService/preview/2021-05-01-preview/examples/WebChatRegenerateKeys.json
     */
    /**
     * Sample code: Regenerate Keys for WebChat Channel Site.
     *
     * @param manager Entry point to BotServiceManager.
     */
    public static void regenerateKeysForWebChatChannelSite(
        com.azure.resourcemanager.botservice.BotServiceManager manager) {
        manager
            .directLines()
            .regenerateKeysWithResponse(
                "OneResourceGroupName",
                "samplebotname",
                RegenerateKeysChannelName.WEB_CHAT_CHANNEL,
                new SiteInfo().withSiteName("testSiteName").withKey(Key.KEY1),
                Context.NONE);
    }
}
