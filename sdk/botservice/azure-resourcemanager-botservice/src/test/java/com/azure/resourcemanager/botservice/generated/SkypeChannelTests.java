// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.botservice.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.botservice.models.SkypeChannel;
import com.azure.resourcemanager.botservice.models.SkypeChannelProperties;
import org.junit.jupiter.api.Assertions;

public final class SkypeChannelTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SkypeChannel model = BinaryData.fromString(
            "{\"channelName\":\"SkypeChannel\",\"properties\":{\"enableMessaging\":false,\"enableMediaCards\":false,\"enableVideo\":true,\"enableCalling\":false,\"enableScreenSharing\":true,\"enableGroups\":false,\"groupsMode\":\"io\",\"callingWebHook\":\"qhakauhashsf\",\"incomingCallRoute\":\"osow\",\"isEnabled\":false},\"etag\":\"ugicjooxdjebw\",\"provisioningState\":\"cwwfvovbvme\",\"location\":\"civyhzceuo\"}")
            .toObject(SkypeChannel.class);
        Assertions.assertEquals("ugicjooxdjebw", model.etag());
        Assertions.assertEquals("civyhzceuo", model.location());
        Assertions.assertEquals(false, model.properties().enableMessaging());
        Assertions.assertEquals(false, model.properties().enableMediaCards());
        Assertions.assertEquals(true, model.properties().enableVideo());
        Assertions.assertEquals(false, model.properties().enableCalling());
        Assertions.assertEquals(true, model.properties().enableScreenSharing());
        Assertions.assertEquals(false, model.properties().enableGroups());
        Assertions.assertEquals("io", model.properties().groupsMode());
        Assertions.assertEquals("qhakauhashsf", model.properties().callingWebhook());
        Assertions.assertEquals("osow", model.properties().incomingCallRoute());
        Assertions.assertEquals(false, model.properties().isEnabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SkypeChannel model = new SkypeChannel().withEtag("ugicjooxdjebw")
            .withLocation("civyhzceuo")
            .withProperties(new SkypeChannelProperties().withEnableMessaging(false)
                .withEnableMediaCards(false)
                .withEnableVideo(true)
                .withEnableCalling(false)
                .withEnableScreenSharing(true)
                .withEnableGroups(false)
                .withGroupsMode("io")
                .withCallingWebhook("qhakauhashsf")
                .withIncomingCallRoute("osow")
                .withIsEnabled(false));
        model = BinaryData.fromObject(model).toObject(SkypeChannel.class);
        Assertions.assertEquals("ugicjooxdjebw", model.etag());
        Assertions.assertEquals("civyhzceuo", model.location());
        Assertions.assertEquals(false, model.properties().enableMessaging());
        Assertions.assertEquals(false, model.properties().enableMediaCards());
        Assertions.assertEquals(true, model.properties().enableVideo());
        Assertions.assertEquals(false, model.properties().enableCalling());
        Assertions.assertEquals(true, model.properties().enableScreenSharing());
        Assertions.assertEquals(false, model.properties().enableGroups());
        Assertions.assertEquals("io", model.properties().groupsMode());
        Assertions.assertEquals("qhakauhashsf", model.properties().callingWebhook());
        Assertions.assertEquals("osow", model.properties().incomingCallRoute());
        Assertions.assertEquals(false, model.properties().isEnabled());
    }
}
