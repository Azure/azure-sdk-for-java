// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.botservice.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.botservice.fluent.models.OperationEntityInner;
import com.azure.resourcemanager.botservice.models.OperationDisplayInfo;
import org.junit.jupiter.api.Assertions;

public final class OperationEntityInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationEntityInner model = BinaryData.fromString(
            "{\"name\":\"mivkwlzuvcc\",\"display\":{\"description\":\"fnba\",\"operation\":\"ionle\",\"provider\":\"etqgtzxdpnq\",\"resource\":\"qwxrjfeallnw\"},\"origin\":\"bisnja\",\"properties\":\"datamngnzscxaqw\"}")
            .toObject(OperationEntityInner.class);
        Assertions.assertEquals("mivkwlzuvcc", model.name());
        Assertions.assertEquals("fnba", model.display().description());
        Assertions.assertEquals("ionle", model.display().operation());
        Assertions.assertEquals("etqgtzxdpnq", model.display().provider());
        Assertions.assertEquals("qwxrjfeallnw", model.display().resource());
        Assertions.assertEquals("bisnja", model.origin());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationEntityInner model = new OperationEntityInner().withName("mivkwlzuvcc")
            .withDisplay(new OperationDisplayInfo().withDescription("fnba")
                .withOperation("ionle")
                .withProvider("etqgtzxdpnq")
                .withResource("qwxrjfeallnw"))
            .withOrigin("bisnja")
            .withProperties("datamngnzscxaqw");
        model = BinaryData.fromObject(model).toObject(OperationEntityInner.class);
        Assertions.assertEquals("mivkwlzuvcc", model.name());
        Assertions.assertEquals("fnba", model.display().description());
        Assertions.assertEquals("ionle", model.display().operation());
        Assertions.assertEquals("etqgtzxdpnq", model.display().provider());
        Assertions.assertEquals("qwxrjfeallnw", model.display().resource());
        Assertions.assertEquals("bisnja", model.origin());
    }
}
