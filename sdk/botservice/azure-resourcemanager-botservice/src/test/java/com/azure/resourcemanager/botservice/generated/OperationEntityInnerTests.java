// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.botservice.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.botservice.fluent.models.OperationEntityInner;
import com.azure.resourcemanager.botservice.models.OperationDisplayInfo;
import org.junit.jupiter.api.Assertions;

public final class OperationEntityInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationEntityInner model = BinaryData.fromString(
            "{\"name\":\"fmxa\",\"display\":{\"description\":\"jpgd\",\"operation\":\"ocjjxhvpmouexh\",\"provider\":\"xibqeojnx\",\"resource\":\"zvddntwndeicbtwn\"},\"origin\":\"aoqvuh\",\"properties\":\"datacffcyddglmj\"}")
            .toObject(OperationEntityInner.class);
        Assertions.assertEquals("fmxa", model.name());
        Assertions.assertEquals("jpgd", model.display().description());
        Assertions.assertEquals("ocjjxhvpmouexh", model.display().operation());
        Assertions.assertEquals("xibqeojnx", model.display().provider());
        Assertions.assertEquals("zvddntwndeicbtwn", model.display().resource());
        Assertions.assertEquals("aoqvuh", model.origin());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationEntityInner model = new OperationEntityInner().withName("fmxa")
            .withDisplay(new OperationDisplayInfo().withDescription("jpgd")
                .withOperation("ocjjxhvpmouexh")
                .withProvider("xibqeojnx")
                .withResource("zvddntwndeicbtwn"))
            .withOrigin("aoqvuh")
            .withProperties("datacffcyddglmj");
        model = BinaryData.fromObject(model).toObject(OperationEntityInner.class);
        Assertions.assertEquals("fmxa", model.name());
        Assertions.assertEquals("jpgd", model.display().description());
        Assertions.assertEquals("ocjjxhvpmouexh", model.display().operation());
        Assertions.assertEquals("xibqeojnx", model.display().provider());
        Assertions.assertEquals("zvddntwndeicbtwn", model.display().resource());
        Assertions.assertEquals("aoqvuh", model.origin());
    }
}
