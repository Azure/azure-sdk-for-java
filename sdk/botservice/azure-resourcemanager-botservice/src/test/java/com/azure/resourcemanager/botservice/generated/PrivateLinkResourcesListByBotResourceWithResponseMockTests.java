// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.botservice.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.botservice.BotServiceManager;
import com.azure.resourcemanager.botservice.models.PrivateLinkResourceListResult;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PrivateLinkResourcesListByBotResourceWithResponseMockTests {
    @Test
    public void testListByBotResourceWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"groupId\":\"augzxnfaazpxdtn\",\"requiredMembers\":[\"kqjjlwuenvrkp\",\"ou\"],\"requiredZoneNames\":[\"rebqaaysjk\"]},\"id\":\"xqtnq\",\"name\":\"tezlwff\",\"type\":\"iakp\"},{\"properties\":{\"groupId\":\"qmt\",\"requiredMembers\":[\"tmmjihyeozph\"],\"requiredZoneNames\":[\"uyqncygupkvipmd\",\"cwxqu\",\"evzhfsto\"]},\"id\":\"xhojuj\",\"name\":\"ypelmcu\",\"type\":\"hixbjxyfwnyl\"},{\"properties\":{\"groupId\":\"o\",\"requiredMembers\":[\"tpkiwkkbnujry\",\"vtylbfpncu\",\"doiwi\",\"thtywub\"],\"requiredZoneNames\":[\"ihwqknfdntwjchr\",\"goihx\",\"mwctondzjluudfd\"]},\"id\":\"wggytsbwtovvt\",\"name\":\"seinqfiuf\",\"type\":\"qknp\"},{\"properties\":{\"groupId\":\"nepttwqmsni\",\"requiredMembers\":[\"dmqnrojlpij\"],\"requiredZoneNames\":[\"xfrdd\",\"c\"]},\"id\":\"atiz\",\"name\":\"ronasxift\",\"type\":\"zq\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        BotServiceManager manager = BotServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PrivateLinkResourceListResult response = manager.privateLinkResources()
            .listByBotResourceWithResponse("saz", "jjoqkagf", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("rebqaaysjk", response.value().get(0).requiredZoneNames().get(0));
    }
}
