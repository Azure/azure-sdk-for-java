// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.botservice.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.botservice.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.botservice.models.PrivateEndpoint;
import com.azure.resourcemanager.botservice.models.PrivateEndpointConnectionListResult;
import com.azure.resourcemanager.botservice.models.PrivateEndpointServiceConnectionStatus;
import com.azure.resourcemanager.botservice.models.PrivateLinkServiceConnectionState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"privateEndpoint\":{\"id\":\"uugidyjrrfby\"},\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"e\",\"actionsRequired\":\"sonpclhocohs\"},\"provisioningState\":\"Succeeded\",\"groupIds\":[\"eggzfb\",\"hfmvfaxkffe\"]},\"id\":\"ithlvmezyvshxm\",\"name\":\"sbbzo\",\"type\":\"gigr\"},{\"properties\":{\"privateEndpoint\":{\"id\":\"rvjx\"},\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"pydptko\",\"actionsRequired\":\"kouknvudwtiu\"},\"provisioningState\":\"Deleting\",\"groupIds\":[\"gkpocipazyxoe\",\"ukgjnpiucgygevq\",\"ntypmrbpizcdrqj\"]},\"id\":\"dpydn\",\"name\":\"yhxdeoejzicwi\",\"type\":\"sjttgzfbish\"},{\"properties\":{\"privateEndpoint\":{\"id\":\"ajdeyeamdphaga\"},\"privateLinkServiceConnectionState\":{\"status\":\"Pending\",\"description\":\"xw\",\"actionsRequired\":\"pwhonowkg\"},\"provisioningState\":\"Deleting\",\"groupIds\":[\"kix\",\"bin\",\"eputtmrywnuzoqf\"]},\"id\":\"iyqzrnk\",\"name\":\"qvyxlwhzlsicoho\",\"type\":\"qnwvlrya\"},{\"properties\":{\"privateEndpoint\":{\"id\":\"eun\"},\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"gyxzk\",\"actionsRequired\":\"ocukoklyax\"},\"provisioningState\":\"Succeeded\",\"groupIds\":[\"qszf\",\"beypewrmjmw\"]},\"id\":\"vjektcxsenh\",\"name\":\"lrsf\",\"type\":\"rzpwvlqdqgbiq\"}]}")
            .toObject(PrivateEndpointConnectionListResult.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.APPROVED,
            model.value().get(0).privateLinkServiceConnectionState().status());
        Assertions.assertEquals("e", model.value().get(0).privateLinkServiceConnectionState().description());
        Assertions.assertEquals("sonpclhocohs",
            model.value().get(0).privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("eggzfb", model.value().get(0).groupIds().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionListResult model
            = new PrivateEndpointConnectionListResult()
                .withValue(
                    Arrays
                        .asList(
                            new PrivateEndpointConnectionInner().withPrivateEndpoint(new PrivateEndpoint())
                                .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                                    .withStatus(PrivateEndpointServiceConnectionStatus.APPROVED)
                                    .withDescription("e")
                                    .withActionsRequired("sonpclhocohs"))
                                .withGroupIds(Arrays.asList("eggzfb", "hfmvfaxkffe")),
                            new PrivateEndpointConnectionInner().withPrivateEndpoint(new PrivateEndpoint())
                                .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                                    .withStatus(PrivateEndpointServiceConnectionStatus.APPROVED)
                                    .withDescription("pydptko")
                                    .withActionsRequired("kouknvudwtiu"))
                                .withGroupIds(Arrays.asList("gkpocipazyxoe", "ukgjnpiucgygevq", "ntypmrbpizcdrqj")),
                            new PrivateEndpointConnectionInner().withPrivateEndpoint(new PrivateEndpoint())
                                .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                                    .withStatus(PrivateEndpointServiceConnectionStatus.PENDING)
                                    .withDescription("xw")
                                    .withActionsRequired("pwhonowkg"))
                                .withGroupIds(Arrays.asList("kix", "bin", "eputtmrywnuzoqf")),
                            new PrivateEndpointConnectionInner().withPrivateEndpoint(new PrivateEndpoint())
                                .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                                    .withStatus(PrivateEndpointServiceConnectionStatus.APPROVED)
                                    .withDescription("gyxzk")
                                    .withActionsRequired("ocukoklyax"))
                                .withGroupIds(Arrays.asList("qszf", "beypewrmjmw"))));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionListResult.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.APPROVED,
            model.value().get(0).privateLinkServiceConnectionState().status());
        Assertions.assertEquals("e", model.value().get(0).privateLinkServiceConnectionState().description());
        Assertions.assertEquals("sonpclhocohs",
            model.value().get(0).privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("eggzfb", model.value().get(0).groupIds().get(0));
    }
}
