// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.botservice.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.botservice.models.MsTeamsChannel;
import com.azure.resourcemanager.botservice.models.MsTeamsChannelProperties;
import org.junit.jupiter.api.Assertions;

public final class MsTeamsChannelTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MsTeamsChannel model = BinaryData.fromString(
            "{\"channelName\":\"MsTeamsChannel\",\"properties\":{\"enableCalling\":true,\"callingWebhook\":\"mx\",\"isEnabled\":true,\"incomingCallRoute\":\"vt\",\"deploymentEnvironment\":\"lmqkrhahvlj\",\"acceptedTerms\":false},\"etag\":\"quhcdhmduala\",\"provisioningState\":\"qpv\",\"location\":\"dmwsrcrgvxpvgomz\"}")
            .toObject(MsTeamsChannel.class);
        Assertions.assertEquals("quhcdhmduala", model.etag());
        Assertions.assertEquals("dmwsrcrgvxpvgomz", model.location());
        Assertions.assertEquals(true, model.properties().enableCalling());
        Assertions.assertEquals("mx", model.properties().callingWebhook());
        Assertions.assertEquals(true, model.properties().isEnabled());
        Assertions.assertEquals("vt", model.properties().incomingCallRoute());
        Assertions.assertEquals("lmqkrhahvlj", model.properties().deploymentEnvironment());
        Assertions.assertEquals(false, model.properties().acceptedTerms());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MsTeamsChannel model = new MsTeamsChannel().withEtag("quhcdhmduala")
            .withLocation("dmwsrcrgvxpvgomz")
            .withProperties(new MsTeamsChannelProperties().withEnableCalling(true)
                .withCallingWebhook("mx")
                .withIsEnabled(true)
                .withIncomingCallRoute("vt")
                .withDeploymentEnvironment("lmqkrhahvlj")
                .withAcceptedTerms(false));
        model = BinaryData.fromObject(model).toObject(MsTeamsChannel.class);
        Assertions.assertEquals("quhcdhmduala", model.etag());
        Assertions.assertEquals("dmwsrcrgvxpvgomz", model.location());
        Assertions.assertEquals(true, model.properties().enableCalling());
        Assertions.assertEquals("mx", model.properties().callingWebhook());
        Assertions.assertEquals(true, model.properties().isEnabled());
        Assertions.assertEquals("vt", model.properties().incomingCallRoute());
        Assertions.assertEquals("lmqkrhahvlj", model.properties().deploymentEnvironment());
        Assertions.assertEquals(false, model.properties().acceptedTerms());
    }
}
