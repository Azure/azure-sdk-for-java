// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.botservice.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.botservice.models.SkypeChannelProperties;
import org.junit.jupiter.api.Assertions;

public final class SkypeChannelPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SkypeChannelProperties model = BinaryData.fromString(
            "{\"enableMessaging\":false,\"enableMediaCards\":false,\"enableVideo\":false,\"enableCalling\":false,\"enableScreenSharing\":true,\"enableGroups\":false,\"groupsMode\":\"dnhjdauwhvylw\",\"callingWebHook\":\"tdhxujznbmpowuwp\",\"incomingCallRoute\":\"qlveualupjmkh\",\"isEnabled\":true}")
            .toObject(SkypeChannelProperties.class);
        Assertions.assertEquals(false, model.enableMessaging());
        Assertions.assertEquals(false, model.enableMediaCards());
        Assertions.assertEquals(false, model.enableVideo());
        Assertions.assertEquals(false, model.enableCalling());
        Assertions.assertEquals(true, model.enableScreenSharing());
        Assertions.assertEquals(false, model.enableGroups());
        Assertions.assertEquals("dnhjdauwhvylw", model.groupsMode());
        Assertions.assertEquals("tdhxujznbmpowuwp", model.callingWebhook());
        Assertions.assertEquals("qlveualupjmkh", model.incomingCallRoute());
        Assertions.assertEquals(true, model.isEnabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SkypeChannelProperties model = new SkypeChannelProperties().withEnableMessaging(false)
            .withEnableMediaCards(false)
            .withEnableVideo(false)
            .withEnableCalling(false)
            .withEnableScreenSharing(true)
            .withEnableGroups(false)
            .withGroupsMode("dnhjdauwhvylw")
            .withCallingWebhook("tdhxujznbmpowuwp")
            .withIncomingCallRoute("qlveualupjmkh")
            .withIsEnabled(true);
        model = BinaryData.fromObject(model).toObject(SkypeChannelProperties.class);
        Assertions.assertEquals(false, model.enableMessaging());
        Assertions.assertEquals(false, model.enableMediaCards());
        Assertions.assertEquals(false, model.enableVideo());
        Assertions.assertEquals(false, model.enableCalling());
        Assertions.assertEquals(true, model.enableScreenSharing());
        Assertions.assertEquals(false, model.enableGroups());
        Assertions.assertEquals("dnhjdauwhvylw", model.groupsMode());
        Assertions.assertEquals("tdhxujznbmpowuwp", model.callingWebhook());
        Assertions.assertEquals("qlveualupjmkh", model.incomingCallRoute());
        Assertions.assertEquals(true, model.isEnabled());
    }
}
