// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.botservice.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.botservice.models.SkypeChannelProperties;
import org.junit.jupiter.api.Assertions;

public final class SkypeChannelPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SkypeChannelProperties model = BinaryData.fromString(
            "{\"enableMessaging\":true,\"enableMediaCards\":false,\"enableVideo\":true,\"enableCalling\":true,\"enableScreenSharing\":false,\"enableGroups\":true,\"groupsMode\":\"dytdxwitx\",\"callingWebHook\":\"jawgqwg\",\"incomingCallRoute\":\"ni\",\"isEnabled\":true}")
            .toObject(SkypeChannelProperties.class);
        Assertions.assertEquals(true, model.enableMessaging());
        Assertions.assertEquals(false, model.enableMediaCards());
        Assertions.assertEquals(true, model.enableVideo());
        Assertions.assertEquals(true, model.enableCalling());
        Assertions.assertEquals(false, model.enableScreenSharing());
        Assertions.assertEquals(true, model.enableGroups());
        Assertions.assertEquals("dytdxwitx", model.groupsMode());
        Assertions.assertEquals("jawgqwg", model.callingWebhook());
        Assertions.assertEquals("ni", model.incomingCallRoute());
        Assertions.assertEquals(true, model.isEnabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SkypeChannelProperties model = new SkypeChannelProperties().withEnableMessaging(true)
            .withEnableMediaCards(false)
            .withEnableVideo(true)
            .withEnableCalling(true)
            .withEnableScreenSharing(false)
            .withEnableGroups(true)
            .withGroupsMode("dytdxwitx")
            .withCallingWebhook("jawgqwg")
            .withIncomingCallRoute("ni")
            .withIsEnabled(true);
        model = BinaryData.fromObject(model).toObject(SkypeChannelProperties.class);
        Assertions.assertEquals(true, model.enableMessaging());
        Assertions.assertEquals(false, model.enableMediaCards());
        Assertions.assertEquals(true, model.enableVideo());
        Assertions.assertEquals(true, model.enableCalling());
        Assertions.assertEquals(false, model.enableScreenSharing());
        Assertions.assertEquals(true, model.enableGroups());
        Assertions.assertEquals("dytdxwitx", model.groupsMode());
        Assertions.assertEquals("jawgqwg", model.callingWebhook());
        Assertions.assertEquals("ni", model.incomingCallRoute());
        Assertions.assertEquals(true, model.isEnabled());
    }
}
