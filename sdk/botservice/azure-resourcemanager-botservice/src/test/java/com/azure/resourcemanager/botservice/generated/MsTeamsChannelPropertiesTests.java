// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.botservice.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.botservice.models.MsTeamsChannelProperties;
import org.junit.jupiter.api.Assertions;

public final class MsTeamsChannelPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MsTeamsChannelProperties model = BinaryData.fromString(
            "{\"enableCalling\":false,\"callingWebhook\":\"vfadmws\",\"isEnabled\":true,\"incomingCallRoute\":\"gvxp\",\"deploymentEnvironment\":\"omzlfmi\",\"acceptedTerms\":false}")
            .toObject(MsTeamsChannelProperties.class);
        Assertions.assertEquals(false, model.enableCalling());
        Assertions.assertEquals("vfadmws", model.callingWebhook());
        Assertions.assertEquals(true, model.isEnabled());
        Assertions.assertEquals("gvxp", model.incomingCallRoute());
        Assertions.assertEquals("omzlfmi", model.deploymentEnvironment());
        Assertions.assertEquals(false, model.acceptedTerms());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MsTeamsChannelProperties model = new MsTeamsChannelProperties().withEnableCalling(false)
            .withCallingWebhook("vfadmws")
            .withIsEnabled(true)
            .withIncomingCallRoute("gvxp")
            .withDeploymentEnvironment("omzlfmi")
            .withAcceptedTerms(false);
        model = BinaryData.fromObject(model).toObject(MsTeamsChannelProperties.class);
        Assertions.assertEquals(false, model.enableCalling());
        Assertions.assertEquals("vfadmws", model.callingWebhook());
        Assertions.assertEquals(true, model.isEnabled());
        Assertions.assertEquals("gvxp", model.incomingCallRoute());
        Assertions.assertEquals("omzlfmi", model.deploymentEnvironment());
        Assertions.assertEquals(false, model.acceptedTerms());
    }
}
