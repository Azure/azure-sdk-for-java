// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.powerbiembedded.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.powerbiembedded.fluent.models.WorkspaceCollectionInner;
import com.azure.resourcemanager.powerbiembedded.models.AzureSku;
import com.azure.resourcemanager.powerbiembedded.models.CreateWorkspaceCollectionRequest;
import com.azure.resourcemanager.powerbiembedded.models.UpdateWorkspaceCollectionRequest;
import com.azure.resourcemanager.powerbiembedded.models.WorkspaceCollection;
import com.azure.resourcemanager.powerbiembedded.models.WorkspaceCollectionAccessKey;
import com.azure.resourcemanager.powerbiembedded.models.WorkspaceCollectionAccessKeys;
import java.util.Collections;
import java.util.Map;

public final class WorkspaceCollectionImpl
    implements WorkspaceCollection, WorkspaceCollection.Definition, WorkspaceCollection.Update {
    private WorkspaceCollectionInner innerObject;

    private final com.azure.resourcemanager.powerbiembedded.PowerBIEmbeddedManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public AzureSku sku() {
        return this.innerModel().sku();
    }

    public Object properties() {
        return this.innerModel().properties();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public WorkspaceCollectionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.powerbiembedded.PowerBIEmbeddedManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String workspaceCollectionName;

    private CreateWorkspaceCollectionRequest createBody;

    private UpdateWorkspaceCollectionRequest updateBody;

    public WorkspaceCollectionImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public WorkspaceCollection create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getWorkspaceCollections()
                .createWithResponse(resourceGroupName, workspaceCollectionName, createBody, Context.NONE)
                .getValue();
        return this;
    }

    public WorkspaceCollection create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getWorkspaceCollections()
                .createWithResponse(resourceGroupName, workspaceCollectionName, createBody, context)
                .getValue();
        return this;
    }

    WorkspaceCollectionImpl(
        String name, com.azure.resourcemanager.powerbiembedded.PowerBIEmbeddedManager serviceManager) {
        this.innerObject = new WorkspaceCollectionInner();
        this.serviceManager = serviceManager;
        this.workspaceCollectionName = name;
        this.createBody = new CreateWorkspaceCollectionRequest();
    }

    public WorkspaceCollectionImpl update() {
        this.updateBody = new UpdateWorkspaceCollectionRequest();
        return this;
    }

    public WorkspaceCollection apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getWorkspaceCollections()
                .updateWithResponse(resourceGroupName, workspaceCollectionName, updateBody, Context.NONE)
                .getValue();
        return this;
    }

    public WorkspaceCollection apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getWorkspaceCollections()
                .updateWithResponse(resourceGroupName, workspaceCollectionName, updateBody, context)
                .getValue();
        return this;
    }

    WorkspaceCollectionImpl(
        WorkspaceCollectionInner innerObject,
        com.azure.resourcemanager.powerbiembedded.PowerBIEmbeddedManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.workspaceCollectionName = Utils.getValueFromIdByName(innerObject.id(), "workspaceCollections");
    }

    public WorkspaceCollection refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getWorkspaceCollections()
                .getByResourceGroupWithResponse(resourceGroupName, workspaceCollectionName, Context.NONE)
                .getValue();
        return this;
    }

    public WorkspaceCollection refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getWorkspaceCollections()
                .getByResourceGroupWithResponse(resourceGroupName, workspaceCollectionName, context)
                .getValue();
        return this;
    }

    public WorkspaceCollectionAccessKeys getAccessKeys() {
        return serviceManager.workspaceCollections().getAccessKeys(resourceGroupName, workspaceCollectionName);
    }

    public Response<WorkspaceCollectionAccessKeys> getAccessKeysWithResponse(Context context) {
        return serviceManager
            .workspaceCollections()
            .getAccessKeysWithResponse(resourceGroupName, workspaceCollectionName, context);
    }

    public WorkspaceCollectionAccessKeys regenerateKey(WorkspaceCollectionAccessKey body) {
        return serviceManager.workspaceCollections().regenerateKey(resourceGroupName, workspaceCollectionName, body);
    }

    public Response<WorkspaceCollectionAccessKeys> regenerateKeyWithResponse(
        WorkspaceCollectionAccessKey body, Context context) {
        return serviceManager
            .workspaceCollections()
            .regenerateKeyWithResponse(resourceGroupName, workspaceCollectionName, body, context);
    }

    public WorkspaceCollectionImpl withRegion(Region location) {
        this.createBody.withLocation(location.toString());
        return this;
    }

    public WorkspaceCollectionImpl withRegion(String location) {
        this.createBody.withLocation(location);
        return this;
    }

    public WorkspaceCollectionImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.createBody.withTags(tags);
            return this;
        } else {
            this.updateBody.withTags(tags);
            return this;
        }
    }

    public WorkspaceCollectionImpl withSku(AzureSku sku) {
        if (isInCreateMode()) {
            this.createBody.withSku(sku);
            return this;
        } else {
            this.updateBody.withSku(sku);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
