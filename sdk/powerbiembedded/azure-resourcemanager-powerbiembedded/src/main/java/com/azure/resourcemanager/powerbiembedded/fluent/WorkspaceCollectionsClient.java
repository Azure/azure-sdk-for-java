// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.powerbiembedded.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.powerbiembedded.fluent.models.CheckNameResponseInner;
import com.azure.resourcemanager.powerbiembedded.fluent.models.WorkspaceCollectionAccessKeysInner;
import com.azure.resourcemanager.powerbiembedded.fluent.models.WorkspaceCollectionInner;
import com.azure.resourcemanager.powerbiembedded.models.CheckNameRequest;
import com.azure.resourcemanager.powerbiembedded.models.CreateWorkspaceCollectionRequest;
import com.azure.resourcemanager.powerbiembedded.models.MigrateWorkspaceCollectionRequest;
import com.azure.resourcemanager.powerbiembedded.models.UpdateWorkspaceCollectionRequest;
import com.azure.resourcemanager.powerbiembedded.models.WorkspaceCollectionAccessKey;

/** An instance of this class provides access to all the operations defined in WorkspaceCollectionsClient. */
public interface WorkspaceCollectionsClient {
    /**
     * Retrieves an existing Power BI Workspace Collection.
     *
     * @param resourceGroupName Azure resource group.
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    WorkspaceCollectionInner getByResourceGroup(String resourceGroupName, String workspaceCollectionName);

    /**
     * Retrieves an existing Power BI Workspace Collection.
     *
     * @param resourceGroupName Azure resource group.
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<WorkspaceCollectionInner> getByResourceGroupWithResponse(
        String resourceGroupName, String workspaceCollectionName, Context context);

    /**
     * Creates a new Power BI Workspace Collection with the specified properties. A Power BI Workspace Collection
     * contains one or more workspaces, and can be used to provision keys that provide API access to those workspaces.
     *
     * @param resourceGroupName Azure resource group.
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name.
     * @param body Create workspace collection request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    WorkspaceCollectionInner create(
        String resourceGroupName, String workspaceCollectionName, CreateWorkspaceCollectionRequest body);

    /**
     * Creates a new Power BI Workspace Collection with the specified properties. A Power BI Workspace Collection
     * contains one or more workspaces, and can be used to provision keys that provide API access to those workspaces.
     *
     * @param resourceGroupName Azure resource group.
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name.
     * @param body Create workspace collection request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<WorkspaceCollectionInner> createWithResponse(
        String resourceGroupName,
        String workspaceCollectionName,
        CreateWorkspaceCollectionRequest body,
        Context context);

    /**
     * Update an existing Power BI Workspace Collection with the specified properties.
     *
     * @param resourceGroupName Azure resource group.
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name.
     * @param body Update workspace collection request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    WorkspaceCollectionInner update(
        String resourceGroupName, String workspaceCollectionName, UpdateWorkspaceCollectionRequest body);

    /**
     * Update an existing Power BI Workspace Collection with the specified properties.
     *
     * @param resourceGroupName Azure resource group.
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name.
     * @param body Update workspace collection request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<WorkspaceCollectionInner> updateWithResponse(
        String resourceGroupName,
        String workspaceCollectionName,
        UpdateWorkspaceCollectionRequest body,
        Context context);

    /**
     * Delete a Power BI Workspace Collection.
     *
     * @param resourceGroupName Azure resource group.
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String workspaceCollectionName);

    /**
     * Delete a Power BI Workspace Collection.
     *
     * @param resourceGroupName Azure resource group.
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String workspaceCollectionName, Context context);

    /**
     * Delete a Power BI Workspace Collection.
     *
     * @param resourceGroupName Azure resource group.
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String workspaceCollectionName);

    /**
     * Delete a Power BI Workspace Collection.
     *
     * @param resourceGroupName Azure resource group.
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String workspaceCollectionName, Context context);

    /**
     * Verify the specified Power BI Workspace Collection name is valid and not already in use.
     *
     * @param location Azure location.
     * @param body Check name availability request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CheckNameResponseInner checkNameAvailability(String location, CheckNameRequest body);

    /**
     * Verify the specified Power BI Workspace Collection name is valid and not already in use.
     *
     * @param location Azure location.
     * @param body Check name availability request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<CheckNameResponseInner> checkNameAvailabilityWithResponse(
        String location, CheckNameRequest body, Context context);

    /**
     * Retrieves all existing Power BI workspace collections in the specified resource group.
     *
     * @param resourceGroupName Azure resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<WorkspaceCollectionInner> listByResourceGroup(String resourceGroupName);

    /**
     * Retrieves all existing Power BI workspace collections in the specified resource group.
     *
     * @param resourceGroupName Azure resource group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<WorkspaceCollectionInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Retrieves all existing Power BI workspace collections in the specified subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<WorkspaceCollectionInner> list();

    /**
     * Retrieves all existing Power BI workspace collections in the specified subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<WorkspaceCollectionInner> list(Context context);

    /**
     * Retrieves the primary and secondary access keys for the specified Power BI Workspace Collection.
     *
     * @param resourceGroupName Azure resource group.
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    WorkspaceCollectionAccessKeysInner getAccessKeys(String resourceGroupName, String workspaceCollectionName);

    /**
     * Retrieves the primary and secondary access keys for the specified Power BI Workspace Collection.
     *
     * @param resourceGroupName Azure resource group.
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<WorkspaceCollectionAccessKeysInner> getAccessKeysWithResponse(
        String resourceGroupName, String workspaceCollectionName, Context context);

    /**
     * Regenerates the primary or secondary access key for the specified Power BI Workspace Collection.
     *
     * @param resourceGroupName Azure resource group.
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name.
     * @param body Access key to regenerate.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    WorkspaceCollectionAccessKeysInner regenerateKey(
        String resourceGroupName, String workspaceCollectionName, WorkspaceCollectionAccessKey body);

    /**
     * Regenerates the primary or secondary access key for the specified Power BI Workspace Collection.
     *
     * @param resourceGroupName Azure resource group.
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name.
     * @param body Access key to regenerate.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<WorkspaceCollectionAccessKeysInner> regenerateKeyWithResponse(
        String resourceGroupName, String workspaceCollectionName, WorkspaceCollectionAccessKey body, Context context);

    /**
     * Migrates an existing Power BI Workspace Collection to a different resource group and/or subscription.
     *
     * @param resourceGroupName Azure resource group.
     * @param body Workspace migration request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void migrate(String resourceGroupName, MigrateWorkspaceCollectionRequest body);

    /**
     * Migrates an existing Power BI Workspace Collection to a different resource group and/or subscription.
     *
     * @param resourceGroupName Azure resource group.
     * @param body Workspace migration request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> migrateWithResponse(
        String resourceGroupName, MigrateWorkspaceCollectionRequest body, Context context);
}
