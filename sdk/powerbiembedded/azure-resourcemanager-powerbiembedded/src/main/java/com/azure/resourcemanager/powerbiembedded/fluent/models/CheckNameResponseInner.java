// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.powerbiembedded.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.powerbiembedded.models.CheckNameReason;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The CheckNameResponse model. */
@Fluent
public final class CheckNameResponseInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(CheckNameResponseInner.class);

    /*
     * Specifies a Boolean value that indicates whether the specified Power BI
     * Workspace Collection name is available to use.
     */
    @JsonProperty(value = "nameAvailable")
    private Boolean nameAvailable;

    /*
     * Reason why the workspace collection name cannot be used.
     */
    @JsonProperty(value = "reason")
    private CheckNameReason reason;

    /*
     * Message indicating an unavailable name due to a conflict, or a
     * description of the naming rules that are violated.
     */
    @JsonProperty(value = "message")
    private String message;

    /**
     * Get the nameAvailable property: Specifies a Boolean value that indicates whether the specified Power BI Workspace
     * Collection name is available to use.
     *
     * @return the nameAvailable value.
     */
    public Boolean nameAvailable() {
        return this.nameAvailable;
    }

    /**
     * Set the nameAvailable property: Specifies a Boolean value that indicates whether the specified Power BI Workspace
     * Collection name is available to use.
     *
     * @param nameAvailable the nameAvailable value to set.
     * @return the CheckNameResponseInner object itself.
     */
    public CheckNameResponseInner withNameAvailable(Boolean nameAvailable) {
        this.nameAvailable = nameAvailable;
        return this;
    }

    /**
     * Get the reason property: Reason why the workspace collection name cannot be used.
     *
     * @return the reason value.
     */
    public CheckNameReason reason() {
        return this.reason;
    }

    /**
     * Set the reason property: Reason why the workspace collection name cannot be used.
     *
     * @param reason the reason value to set.
     * @return the CheckNameResponseInner object itself.
     */
    public CheckNameResponseInner withReason(CheckNameReason reason) {
        this.reason = reason;
        return this;
    }

    /**
     * Get the message property: Message indicating an unavailable name due to a conflict, or a description of the
     * naming rules that are violated.
     *
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * Set the message property: Message indicating an unavailable name due to a conflict, or a description of the
     * naming rules that are violated.
     *
     * @param message the message value to set.
     * @return the CheckNameResponseInner object itself.
     */
    public CheckNameResponseInner withMessage(String message) {
        this.message = message;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
