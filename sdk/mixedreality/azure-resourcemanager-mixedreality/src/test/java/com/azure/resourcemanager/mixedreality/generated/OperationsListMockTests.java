// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mixedreality.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mixedreality.MixedRealityManager;
import com.azure.resourcemanager.mixedreality.models.Operation;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OperationsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"name\":\"d\",\"display\":{\"provider\":\"avxbniwdjswztsdb\",\"resource\":\"gnxytxhpzxbz\",\"operation\":\"fzab\",\"description\":\"lcuhxwtctyqiklb\"},\"isDataAction\":false,\"origin\":\"lwzbhvgyugu\",\"properties\":{\"serviceSpecification\":{\"logSpecifications\":[{\"name\":\"ss\",\"displayName\":\"ukkfplgmgs\",\"blobDuration\":\"kjz\"},{\"name\":\"es\",\"displayName\":\"vlopwiyighx\",\"blobDuration\":\"dwzbaiue\"},{\"name\":\"a\",\"displayName\":\"nyqupedeojnabck\",\"blobDuration\":\"mtxpsiebtfh\"}],\"metricSpecifications\":[{\"name\":\"apskrdqm\",\"displayName\":\"jdhtldwkyzxu\",\"displayDescription\":\"kn\",\"unit\":\"scwsv\",\"aggregationType\":\"otogtwrupqs\",\"supportedAggregationTypes\":[\"micykvceoveilo\"],\"supportedTimeGrainTypes\":[\"tyfjfcnjbkcnxdhb\"],\"enableRegionalMdmAccount\":true,\"sourceMdmAccount\":\"h\",\"sourceMdmNamespace\":\"pnvjtoqnermclf\",\"metricFilterPattern\":\"phoxus\",\"fillGapWithZero\":false,\"category\":\"bgyepsbj\",\"internalMetricName\":\"zq\",\"dimensions\":[{},{},{},{}],\"lockedAggregationType\":\"wpmueefj\"}]}}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MixedRealityManager manager = MixedRealityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Operation> response = manager.operations().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("d", response.iterator().next().name());
        Assertions.assertEquals("avxbniwdjswztsdb", response.iterator().next().display().provider());
        Assertions.assertEquals("gnxytxhpzxbz", response.iterator().next().display().resource());
        Assertions.assertEquals("fzab", response.iterator().next().display().operation());
        Assertions.assertEquals("lcuhxwtctyqiklb", response.iterator().next().display().description());
        Assertions.assertEquals(false, response.iterator().next().isDataAction());
        Assertions.assertEquals("lwzbhvgyugu", response.iterator().next().origin());
        Assertions.assertEquals("ss",
            response.iterator().next().properties().serviceSpecification().logSpecifications().get(0).name());
        Assertions.assertEquals("ukkfplgmgs",
            response.iterator().next().properties().serviceSpecification().logSpecifications().get(0).displayName());
        Assertions.assertEquals("kjz",
            response.iterator().next().properties().serviceSpecification().logSpecifications().get(0).blobDuration());
        Assertions.assertEquals("apskrdqm",
            response.iterator().next().properties().serviceSpecification().metricSpecifications().get(0).name());
        Assertions.assertEquals("jdhtldwkyzxu",
            response.iterator().next().properties().serviceSpecification().metricSpecifications().get(0).displayName());
        Assertions.assertEquals("kn",
            response.iterator()
                .next()
                .properties()
                .serviceSpecification()
                .metricSpecifications()
                .get(0)
                .displayDescription());
        Assertions.assertEquals("scwsv",
            response.iterator().next().properties().serviceSpecification().metricSpecifications().get(0).unit());
        Assertions.assertEquals("otogtwrupqs",
            response.iterator()
                .next()
                .properties()
                .serviceSpecification()
                .metricSpecifications()
                .get(0)
                .aggregationType());
        Assertions.assertEquals("micykvceoveilo",
            response.iterator()
                .next()
                .properties()
                .serviceSpecification()
                .metricSpecifications()
                .get(0)
                .supportedAggregationTypes()
                .get(0));
        Assertions.assertEquals("tyfjfcnjbkcnxdhb",
            response.iterator()
                .next()
                .properties()
                .serviceSpecification()
                .metricSpecifications()
                .get(0)
                .supportedTimeGrainTypes()
                .get(0));
        Assertions.assertEquals(true,
            response.iterator()
                .next()
                .properties()
                .serviceSpecification()
                .metricSpecifications()
                .get(0)
                .enableRegionalMdmAccount());
        Assertions.assertEquals("h",
            response.iterator()
                .next()
                .properties()
                .serviceSpecification()
                .metricSpecifications()
                .get(0)
                .sourceMdmAccount());
        Assertions.assertEquals("pnvjtoqnermclf",
            response.iterator()
                .next()
                .properties()
                .serviceSpecification()
                .metricSpecifications()
                .get(0)
                .sourceMdmNamespace());
        Assertions.assertEquals("phoxus",
            response.iterator()
                .next()
                .properties()
                .serviceSpecification()
                .metricSpecifications()
                .get(0)
                .metricFilterPattern());
        Assertions.assertEquals(false,
            response.iterator()
                .next()
                .properties()
                .serviceSpecification()
                .metricSpecifications()
                .get(0)
                .fillGapWithZero());
        Assertions.assertEquals("bgyepsbj",
            response.iterator().next().properties().serviceSpecification().metricSpecifications().get(0).category());
        Assertions.assertEquals("zq",
            response.iterator()
                .next()
                .properties()
                .serviceSpecification()
                .metricSpecifications()
                .get(0)
                .internalMetricName());
        Assertions.assertEquals("wpmueefj",
            response.iterator()
                .next()
                .properties()
                .serviceSpecification()
                .metricSpecifications()
                .get(0)
                .lockedAggregationType());
    }
}
