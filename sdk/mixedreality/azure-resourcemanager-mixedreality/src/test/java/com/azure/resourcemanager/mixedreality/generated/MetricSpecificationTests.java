// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mixedreality.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mixedreality.models.MetricDimension;
import com.azure.resourcemanager.mixedreality.models.MetricSpecification;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MetricSpecificationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MetricSpecification model = BinaryData.fromString(
            "{\"name\":\"z\",\"displayName\":\"pvswjdkirso\",\"displayDescription\":\"qxhcrmn\",\"unit\":\"jtckwhdso\",\"aggregationType\":\"iy\",\"supportedAggregationTypes\":[\"xsqwpgrjbznorc\",\"xv\",\"nb\"],\"supportedTimeGrainTypes\":[\"abnmocpcyshu\",\"zafb\"],\"enableRegionalMdmAccount\":false,\"sourceMdmAccount\":\"pbtoqcjmkl\",\"sourceMdmNamespace\":\"vbqid\",\"metricFilterPattern\":\"ajzyul\",\"fillGapWithZero\":false,\"category\":\"jkrlkhbzhfepg\",\"internalMetricName\":\"qex\",\"dimensions\":[{\"name\":\"xscpaierhhbc\",\"displayName\":\"l\",\"internalName\":\"majtjaod\",\"toBeExportedForShoebox\":true},{\"name\":\"bdxkqpxokaj\",\"displayName\":\"npime\",\"internalName\":\"stxgc\",\"toBeExportedForShoebox\":false},{\"name\":\"maajrmvdjwzrlo\",\"displayName\":\"clwhijcoejctbz\",\"internalName\":\"s\",\"toBeExportedForShoebox\":false},{\"name\":\"bkbfkgukdkex\",\"displayName\":\"pofm\",\"internalName\":\"x\",\"toBeExportedForShoebox\":false}],\"lockedAggregationType\":\"gddtocj\"}")
            .toObject(MetricSpecification.class);
        Assertions.assertEquals("z", model.name());
        Assertions.assertEquals("pvswjdkirso", model.displayName());
        Assertions.assertEquals("qxhcrmn", model.displayDescription());
        Assertions.assertEquals("jtckwhdso", model.unit());
        Assertions.assertEquals("iy", model.aggregationType());
        Assertions.assertEquals("xsqwpgrjbznorc", model.supportedAggregationTypes().get(0));
        Assertions.assertEquals("abnmocpcyshu", model.supportedTimeGrainTypes().get(0));
        Assertions.assertEquals(false, model.enableRegionalMdmAccount());
        Assertions.assertEquals("pbtoqcjmkl", model.sourceMdmAccount());
        Assertions.assertEquals("vbqid", model.sourceMdmNamespace());
        Assertions.assertEquals("ajzyul", model.metricFilterPattern());
        Assertions.assertEquals(false, model.fillGapWithZero());
        Assertions.assertEquals("jkrlkhbzhfepg", model.category());
        Assertions.assertEquals("qex", model.internalMetricName());
        Assertions.assertEquals("xscpaierhhbc", model.dimensions().get(0).name());
        Assertions.assertEquals("l", model.dimensions().get(0).displayName());
        Assertions.assertEquals("majtjaod", model.dimensions().get(0).internalName());
        Assertions.assertEquals(true, model.dimensions().get(0).toBeExportedForShoebox());
        Assertions.assertEquals("gddtocj", model.lockedAggregationType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MetricSpecification model = new MetricSpecification().withName("z")
            .withDisplayName("pvswjdkirso")
            .withDisplayDescription("qxhcrmn")
            .withUnit("jtckwhdso")
            .withAggregationType("iy")
            .withSupportedAggregationTypes(Arrays.asList("xsqwpgrjbznorc", "xv", "nb"))
            .withSupportedTimeGrainTypes(Arrays.asList("abnmocpcyshu", "zafb"))
            .withEnableRegionalMdmAccount(false)
            .withSourceMdmAccount("pbtoqcjmkl")
            .withSourceMdmNamespace("vbqid")
            .withMetricFilterPattern("ajzyul")
            .withFillGapWithZero(false)
            .withCategory("jkrlkhbzhfepg")
            .withInternalMetricName("qex")
            .withDimensions(Arrays.asList(
                new MetricDimension().withName("xscpaierhhbc")
                    .withDisplayName("l")
                    .withInternalName("majtjaod")
                    .withToBeExportedForShoebox(true),
                new MetricDimension().withName("bdxkqpxokaj")
                    .withDisplayName("npime")
                    .withInternalName("stxgc")
                    .withToBeExportedForShoebox(false),
                new MetricDimension().withName("maajrmvdjwzrlo")
                    .withDisplayName("clwhijcoejctbz")
                    .withInternalName("s")
                    .withToBeExportedForShoebox(false),
                new MetricDimension().withName("bkbfkgukdkex")
                    .withDisplayName("pofm")
                    .withInternalName("x")
                    .withToBeExportedForShoebox(false)))
            .withLockedAggregationType("gddtocj");
        model = BinaryData.fromObject(model).toObject(MetricSpecification.class);
        Assertions.assertEquals("z", model.name());
        Assertions.assertEquals("pvswjdkirso", model.displayName());
        Assertions.assertEquals("qxhcrmn", model.displayDescription());
        Assertions.assertEquals("jtckwhdso", model.unit());
        Assertions.assertEquals("iy", model.aggregationType());
        Assertions.assertEquals("xsqwpgrjbznorc", model.supportedAggregationTypes().get(0));
        Assertions.assertEquals("abnmocpcyshu", model.supportedTimeGrainTypes().get(0));
        Assertions.assertEquals(false, model.enableRegionalMdmAccount());
        Assertions.assertEquals("pbtoqcjmkl", model.sourceMdmAccount());
        Assertions.assertEquals("vbqid", model.sourceMdmNamespace());
        Assertions.assertEquals("ajzyul", model.metricFilterPattern());
        Assertions.assertEquals(false, model.fillGapWithZero());
        Assertions.assertEquals("jkrlkhbzhfepg", model.category());
        Assertions.assertEquals("qex", model.internalMetricName());
        Assertions.assertEquals("xscpaierhhbc", model.dimensions().get(0).name());
        Assertions.assertEquals("l", model.dimensions().get(0).displayName());
        Assertions.assertEquals("majtjaod", model.dimensions().get(0).internalName());
        Assertions.assertEquals(true, model.dimensions().get(0).toBeExportedForShoebox());
        Assertions.assertEquals("gddtocj", model.lockedAggregationType());
    }
}
