// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mixedreality.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mixedreality.MixedRealityManager;
import com.azure.resourcemanager.mixedreality.models.ResourceIdentityType;
import com.azure.resourcemanager.mixedreality.models.SkuTier;
import com.azure.resourcemanager.mixedreality.models.SpatialAnchorsAccount;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SpatialAnchorsAccountsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"storageAccountName\":\"wmcdytdxwi\",\"accountId\":\"nrjawgqwg\",\"accountDomain\":\"ni\"},\"identity\":{\"principalId\":\"fbkp\",\"tenantId\":\"gklwn\",\"type\":\"SystemAssigned\"},\"plan\":{\"principalId\":\"auwhvylwzbtdhx\",\"tenantId\":\"znbmpowuwprzq\",\"type\":\"SystemAssigned\"},\"sku\":{\"name\":\"alupjm\",\"tier\":\"Standard\",\"size\":\"obbc\",\"family\":\"s\",\"capacity\":1626950587},\"kind\":{\"name\":\"iplrbpbewtghfgb\",\"tier\":\"Free\",\"size\":\"xzvlvqhjkbegib\",\"family\":\"mxiebw\",\"capacity\":2134442960},\"location\":\"ayqcgw\",\"tags\":{\"zg\":\"j\",\"txon\":\"yzm\"},\"id\":\"mtsavjcbpwxqp\",\"name\":\"rknftguvriuhprwm\",\"type\":\"yvxqtayriwwroy\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MixedRealityManager manager = MixedRealityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<SpatialAnchorsAccount> response
            = manager.spatialAnchorsAccounts().listByResourceGroup("hzceuojgjrwjue", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ayqcgw", response.iterator().next().location());
        Assertions.assertEquals("j", response.iterator().next().tags().get("zg"));
        Assertions.assertEquals(ResourceIdentityType.SYSTEM_ASSIGNED, response.iterator().next().identity().type());
        Assertions.assertEquals(ResourceIdentityType.SYSTEM_ASSIGNED, response.iterator().next().plan().type());
        Assertions.assertEquals("alupjm", response.iterator().next().sku().name());
        Assertions.assertEquals(SkuTier.STANDARD, response.iterator().next().sku().tier());
        Assertions.assertEquals("obbc", response.iterator().next().sku().size());
        Assertions.assertEquals("s", response.iterator().next().sku().family());
        Assertions.assertEquals(1626950587, response.iterator().next().sku().capacity());
        Assertions.assertEquals("iplrbpbewtghfgb", response.iterator().next().kind().name());
        Assertions.assertEquals(SkuTier.FREE, response.iterator().next().kind().tier());
        Assertions.assertEquals("xzvlvqhjkbegib", response.iterator().next().kind().size());
        Assertions.assertEquals("mxiebw", response.iterator().next().kind().family());
        Assertions.assertEquals(2134442960, response.iterator().next().kind().capacity());
        Assertions.assertEquals("wmcdytdxwi", response.iterator().next().storageAccountName());
    }
}
