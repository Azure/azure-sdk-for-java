// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mixedreality.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mixedreality.models.LogSpecification;
import com.azure.resourcemanager.mixedreality.models.MetricDimension;
import com.azure.resourcemanager.mixedreality.models.MetricSpecification;
import com.azure.resourcemanager.mixedreality.models.ServiceSpecification;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ServiceSpecificationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServiceSpecification model = BinaryData.fromString(
            "{\"logSpecifications\":[{\"name\":\"hbmdgbbjfdd\",\"displayName\":\"bmbexppbhtqqro\",\"blobDuration\":\"p\"}],\"metricSpecifications\":[{\"name\":\"lgbquxig\",\"displayName\":\"jgzjaoyfhrtx\",\"displayDescription\":\"n\",\"unit\":\"kujysvlejuvfq\",\"aggregationType\":\"rlyxwjkcprbnw\",\"supportedAggregationTypes\":[\"jvtbvpyss\",\"dnrujqguhmuouqfp\"],\"supportedTimeGrainTypes\":[\"wbnguitnwui\"],\"enableRegionalMdmAccount\":false,\"sourceMdmAccount\":\"x\",\"sourceMdmNamespace\":\"izuckyfihrfidfvz\",\"metricFilterPattern\":\"zuhtymwisdkfthwx\",\"fillGapWithZero\":false,\"category\":\"i\",\"internalMetricName\":\"opvkmijcm\",\"dimensions\":[{\"name\":\"ufufsrp\",\"displayName\":\"zidnsezcxtbzsgfy\",\"internalName\":\"sne\",\"toBeExportedForShoebox\":true}],\"lockedAggregationType\":\"z\"}]}")
            .toObject(ServiceSpecification.class);
        Assertions.assertEquals("hbmdgbbjfdd", model.logSpecifications().get(0).name());
        Assertions.assertEquals("bmbexppbhtqqro", model.logSpecifications().get(0).displayName());
        Assertions.assertEquals("p", model.logSpecifications().get(0).blobDuration());
        Assertions.assertEquals("lgbquxig", model.metricSpecifications().get(0).name());
        Assertions.assertEquals("jgzjaoyfhrtx", model.metricSpecifications().get(0).displayName());
        Assertions.assertEquals("n", model.metricSpecifications().get(0).displayDescription());
        Assertions.assertEquals("kujysvlejuvfq", model.metricSpecifications().get(0).unit());
        Assertions.assertEquals("rlyxwjkcprbnw", model.metricSpecifications().get(0).aggregationType());
        Assertions.assertEquals("jvtbvpyss", model.metricSpecifications().get(0).supportedAggregationTypes().get(0));
        Assertions.assertEquals("wbnguitnwui", model.metricSpecifications().get(0).supportedTimeGrainTypes().get(0));
        Assertions.assertEquals(false, model.metricSpecifications().get(0).enableRegionalMdmAccount());
        Assertions.assertEquals("x", model.metricSpecifications().get(0).sourceMdmAccount());
        Assertions.assertEquals("izuckyfihrfidfvz", model.metricSpecifications().get(0).sourceMdmNamespace());
        Assertions.assertEquals("zuhtymwisdkfthwx", model.metricSpecifications().get(0).metricFilterPattern());
        Assertions.assertEquals(false, model.metricSpecifications().get(0).fillGapWithZero());
        Assertions.assertEquals("i", model.metricSpecifications().get(0).category());
        Assertions.assertEquals("opvkmijcm", model.metricSpecifications().get(0).internalMetricName());
        Assertions.assertEquals("ufufsrp", model.metricSpecifications().get(0).dimensions().get(0).name());
        Assertions.assertEquals("zidnsezcxtbzsgfy",
            model.metricSpecifications().get(0).dimensions().get(0).displayName());
        Assertions.assertEquals("sne", model.metricSpecifications().get(0).dimensions().get(0).internalName());
        Assertions.assertEquals(true, model.metricSpecifications().get(0).dimensions().get(0).toBeExportedForShoebox());
        Assertions.assertEquals("z", model.metricSpecifications().get(0).lockedAggregationType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServiceSpecification model = new ServiceSpecification()
            .withLogSpecifications(Arrays.asList(
                new LogSpecification().withName("hbmdgbbjfdd").withDisplayName("bmbexppbhtqqro").withBlobDuration("p")))
            .withMetricSpecifications(Arrays.asList(new MetricSpecification().withName("lgbquxig")
                .withDisplayName("jgzjaoyfhrtx")
                .withDisplayDescription("n")
                .withUnit("kujysvlejuvfq")
                .withAggregationType("rlyxwjkcprbnw")
                .withSupportedAggregationTypes(Arrays.asList("jvtbvpyss", "dnrujqguhmuouqfp"))
                .withSupportedTimeGrainTypes(Arrays.asList("wbnguitnwui"))
                .withEnableRegionalMdmAccount(false)
                .withSourceMdmAccount("x")
                .withSourceMdmNamespace("izuckyfihrfidfvz")
                .withMetricFilterPattern("zuhtymwisdkfthwx")
                .withFillGapWithZero(false)
                .withCategory("i")
                .withInternalMetricName("opvkmijcm")
                .withDimensions(Arrays.asList(new MetricDimension().withName("ufufsrp")
                    .withDisplayName("zidnsezcxtbzsgfy")
                    .withInternalName("sne")
                    .withToBeExportedForShoebox(true)))
                .withLockedAggregationType("z")));
        model = BinaryData.fromObject(model).toObject(ServiceSpecification.class);
        Assertions.assertEquals("hbmdgbbjfdd", model.logSpecifications().get(0).name());
        Assertions.assertEquals("bmbexppbhtqqro", model.logSpecifications().get(0).displayName());
        Assertions.assertEquals("p", model.logSpecifications().get(0).blobDuration());
        Assertions.assertEquals("lgbquxig", model.metricSpecifications().get(0).name());
        Assertions.assertEquals("jgzjaoyfhrtx", model.metricSpecifications().get(0).displayName());
        Assertions.assertEquals("n", model.metricSpecifications().get(0).displayDescription());
        Assertions.assertEquals("kujysvlejuvfq", model.metricSpecifications().get(0).unit());
        Assertions.assertEquals("rlyxwjkcprbnw", model.metricSpecifications().get(0).aggregationType());
        Assertions.assertEquals("jvtbvpyss", model.metricSpecifications().get(0).supportedAggregationTypes().get(0));
        Assertions.assertEquals("wbnguitnwui", model.metricSpecifications().get(0).supportedTimeGrainTypes().get(0));
        Assertions.assertEquals(false, model.metricSpecifications().get(0).enableRegionalMdmAccount());
        Assertions.assertEquals("x", model.metricSpecifications().get(0).sourceMdmAccount());
        Assertions.assertEquals("izuckyfihrfidfvz", model.metricSpecifications().get(0).sourceMdmNamespace());
        Assertions.assertEquals("zuhtymwisdkfthwx", model.metricSpecifications().get(0).metricFilterPattern());
        Assertions.assertEquals(false, model.metricSpecifications().get(0).fillGapWithZero());
        Assertions.assertEquals("i", model.metricSpecifications().get(0).category());
        Assertions.assertEquals("opvkmijcm", model.metricSpecifications().get(0).internalMetricName());
        Assertions.assertEquals("ufufsrp", model.metricSpecifications().get(0).dimensions().get(0).name());
        Assertions.assertEquals("zidnsezcxtbzsgfy",
            model.metricSpecifications().get(0).dimensions().get(0).displayName());
        Assertions.assertEquals("sne", model.metricSpecifications().get(0).dimensions().get(0).internalName());
        Assertions.assertEquals(true, model.metricSpecifications().get(0).dimensions().get(0).toBeExportedForShoebox());
        Assertions.assertEquals("z", model.metricSpecifications().get(0).lockedAggregationType());
    }
}
