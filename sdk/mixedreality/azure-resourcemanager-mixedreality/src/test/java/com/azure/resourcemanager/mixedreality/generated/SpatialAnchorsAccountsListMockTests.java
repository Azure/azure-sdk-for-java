// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mixedreality.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mixedreality.MixedRealityManager;
import com.azure.resourcemanager.mixedreality.models.ResourceIdentityType;
import com.azure.resourcemanager.mixedreality.models.SkuTier;
import com.azure.resourcemanager.mixedreality.models.SpatialAnchorsAccount;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SpatialAnchorsAccountsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"storageAccountName\":\"xy\",\"accountId\":\"moyrxvwfudwpz\",\"accountDomain\":\"xhdzhlrqjbhckf\"},\"identity\":{\"principalId\":\"rxsbkyvp\",\"tenantId\":\"anuzbpzkafkuw\",\"type\":\"SystemAssigned\"},\"plan\":{\"principalId\":\"bmehh\",\"tenantId\":\"yvjusrtslhsp\",\"type\":\"SystemAssigned\"},\"sku\":{\"name\":\"maofmxagkv\",\"tier\":\"Basic\",\"size\":\"mqkrhahvljuahaqu\",\"family\":\"dhmdua\",\"capacity\":595850477},\"kind\":{\"name\":\"qpv\",\"tier\":\"Premium\",\"size\":\"ws\",\"family\":\"r\",\"capacity\":1259983494},\"location\":\"vgomz\",\"tags\":{\"ali\":\"isgwbnbbeldawkz\",\"hashsfwxosow\":\"urqhaka\"},\"id\":\"xcug\",\"name\":\"cjooxdjebwpucwwf\",\"type\":\"ovbvmeueciv\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MixedRealityManager manager = MixedRealityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<SpatialAnchorsAccount> response
            = manager.spatialAnchorsAccounts().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("vgomz", response.iterator().next().location());
        Assertions.assertEquals("isgwbnbbeldawkz", response.iterator().next().tags().get("ali"));
        Assertions.assertEquals(ResourceIdentityType.SYSTEM_ASSIGNED, response.iterator().next().identity().type());
        Assertions.assertEquals(ResourceIdentityType.SYSTEM_ASSIGNED, response.iterator().next().plan().type());
        Assertions.assertEquals("maofmxagkv", response.iterator().next().sku().name());
        Assertions.assertEquals(SkuTier.BASIC, response.iterator().next().sku().tier());
        Assertions.assertEquals("mqkrhahvljuahaqu", response.iterator().next().sku().size());
        Assertions.assertEquals("dhmdua", response.iterator().next().sku().family());
        Assertions.assertEquals(595850477, response.iterator().next().sku().capacity());
        Assertions.assertEquals("qpv", response.iterator().next().kind().name());
        Assertions.assertEquals(SkuTier.PREMIUM, response.iterator().next().kind().tier());
        Assertions.assertEquals("ws", response.iterator().next().kind().size());
        Assertions.assertEquals("r", response.iterator().next().kind().family());
        Assertions.assertEquals(1259983494, response.iterator().next().kind().capacity());
        Assertions.assertEquals("xy", response.iterator().next().storageAccountName());
    }
}
