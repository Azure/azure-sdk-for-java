// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mixedreality.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mixedreality.MixedRealityManager;
import com.azure.resourcemanager.mixedreality.models.RemoteRenderingAccount;
import com.azure.resourcemanager.mixedreality.models.ResourceIdentityType;
import com.azure.resourcemanager.mixedreality.models.SkuTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RemoteRenderingAccountsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"storageAccountName\":\"ywsuwsy\",\"accountId\":\"ndsytgadg\",\"accountDomain\":\"aeaeneqnzarrw\"},\"identity\":{\"principalId\":\"uijfqk\",\"tenantId\":\"e\",\"type\":\"SystemAssigned\"},\"plan\":{\"principalId\":\"pubjibw\",\"tenantId\":\"f\",\"type\":\"SystemAssigned\"},\"sku\":{\"name\":\"kvpuvksgplsaknyn\",\"tier\":\"Free\",\"size\":\"ljphuopxodl\",\"family\":\"ynt\",\"capacity\":863114887},\"kind\":{\"name\":\"hleosjsw\",\"tier\":\"Premium\",\"size\":\"lyzrpzbchckqqzqi\",\"family\":\"iysui\",\"capacity\":2121235922},\"location\":\"ked\",\"tags\":{\"pyy\":\"rwyhqmibzyhwitsm\",\"mwzn\":\"pcdpumnz\",\"rgjhxb\":\"abikns\"},\"id\":\"dtlwwrlkd\",\"name\":\"tncvokot\",\"type\":\"lxdy\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MixedRealityManager manager = MixedRealityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        RemoteRenderingAccount response = manager.remoteRenderingAccounts()
            .getByResourceGroupWithResponse("pkkpw", "reqnovvqfov", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ked", response.location());
        Assertions.assertEquals("rwyhqmibzyhwitsm", response.tags().get("pyy"));
        Assertions.assertEquals(ResourceIdentityType.SYSTEM_ASSIGNED, response.identity().type());
        Assertions.assertEquals(ResourceIdentityType.SYSTEM_ASSIGNED, response.plan().type());
        Assertions.assertEquals("kvpuvksgplsaknyn", response.sku().name());
        Assertions.assertEquals(SkuTier.FREE, response.sku().tier());
        Assertions.assertEquals("ljphuopxodl", response.sku().size());
        Assertions.assertEquals("ynt", response.sku().family());
        Assertions.assertEquals(863114887, response.sku().capacity());
        Assertions.assertEquals("hleosjsw", response.kind().name());
        Assertions.assertEquals(SkuTier.PREMIUM, response.kind().tier());
        Assertions.assertEquals("lyzrpzbchckqqzqi", response.kind().size());
        Assertions.assertEquals("iysui", response.kind().family());
        Assertions.assertEquals(2121235922, response.kind().capacity());
        Assertions.assertEquals("ywsuwsy", response.storageAccountName());
    }
}
