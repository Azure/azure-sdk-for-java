// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mixedreality.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Request for account key regeneration.
 */
@Fluent
public final class AccountKeyRegenerateRequest implements JsonSerializable<AccountKeyRegenerateRequest> {
    /*
     * serial of key to be regenerated
     */
    private Serial serial;

    /**
     * Creates an instance of AccountKeyRegenerateRequest class.
     */
    public AccountKeyRegenerateRequest() {
    }

    /**
     * Get the serial property: serial of key to be regenerated.
     * 
     * @return the serial value.
     */
    public Serial serial() {
        return this.serial;
    }

    /**
     * Set the serial property: serial of key to be regenerated.
     * 
     * @param serial the serial value to set.
     * @return the AccountKeyRegenerateRequest object itself.
     */
    public AccountKeyRegenerateRequest withSerial(Serial serial) {
        this.serial = serial;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("serial", this.serial == null ? null : this.serial.toInt());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AccountKeyRegenerateRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AccountKeyRegenerateRequest if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AccountKeyRegenerateRequest.
     */
    public static AccountKeyRegenerateRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AccountKeyRegenerateRequest deserializedAccountKeyRegenerateRequest = new AccountKeyRegenerateRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("serial".equals(fieldName)) {
                    deserializedAccountKeyRegenerateRequest.serial = Serial.fromInt(reader.getInt());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAccountKeyRegenerateRequest;
        });
    }
}
