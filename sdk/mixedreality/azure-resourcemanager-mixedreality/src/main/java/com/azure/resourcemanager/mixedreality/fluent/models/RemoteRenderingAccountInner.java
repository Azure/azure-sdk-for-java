// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mixedreality.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.Resource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.mixedreality.models.Identity;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** RemoteRenderingAccount Response. */
@JsonFlatten
@Fluent
public class RemoteRenderingAccountInner extends Resource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(RemoteRenderingAccountInner.class);

    /*
     * Identity for the resource.
     */
    @JsonProperty(value = "identity")
    private Identity identity;

    /*
     * unique id of certain account.
     */
    @JsonProperty(value = "properties.accountId", access = JsonProperty.Access.WRITE_ONLY)
    private String accountId;

    /*
     * Correspond domain name of certain Spatial Anchors Account
     */
    @JsonProperty(value = "properties.accountDomain", access = JsonProperty.Access.WRITE_ONLY)
    private String accountDomain;

    /**
     * Get the identity property: Identity for the resource.
     *
     * @return the identity value.
     */
    public Identity identity() {
        return this.identity;
    }

    /**
     * Set the identity property: Identity for the resource.
     *
     * @param identity the identity value to set.
     * @return the RemoteRenderingAccountInner object itself.
     */
    public RemoteRenderingAccountInner withIdentity(Identity identity) {
        this.identity = identity;
        return this;
    }

    /**
     * Get the accountId property: unique id of certain account.
     *
     * @return the accountId value.
     */
    public String accountId() {
        return this.accountId;
    }

    /**
     * Get the accountDomain property: Correspond domain name of certain Spatial Anchors Account.
     *
     * @return the accountDomain value.
     */
    public String accountDomain() {
        return this.accountDomain;
    }

    /** {@inheritDoc} */
    @Override
    public RemoteRenderingAccountInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RemoteRenderingAccountInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (identity() != null) {
            identity().validate();
        }
    }
}
