package com.azure.mixedreality.remoterendering.models;

import com.azure.mixedreality.remoterendering.models.internal.ModelTranslator;

import java.time.OffsetDateTime;

public class Conversion {
    private com.azure.mixedreality.remoterendering.implementation.models.Conversion conversion;

    public Conversion(com.azure.mixedreality.remoterendering.implementation.models.Conversion conversion) {
        this.conversion = conversion;
    }

    /**
     * Get the id property: The id of the conversion supplied when the conversion was created.
     *
     * @return the id value.
     */
    public String getId() {
        return conversion.getId();
    }

    /**
     * Get the conversion options: Options for where to retrieve input files from and where to write output files.
     * Supplied when creating the conversion.
     *
     * @return the conversion options value.
     */
    public ConversionOptions getOptions() {
        return ModelTranslator.fromGenerated(conversion.getSettings());
    }

    /**
     * Get the outputAssetUri property: URL of the asset generated by the conversion process. Only present when the status of
     * the conversion is 'Succeeded'.
     *
     * @return the outputAssetUri value.
     */
    public String getOutputAssetUri() {
        var conversionOutput = conversion.getOutput();
        return conversionOutput != null ? conversionOutput.getOutputAssetUri() : null;
    }

    /**
     * Get the error property: The error object containing details about the conversion failure.
     *
     * @return the error value.
     */
    public RemoteRenderingServiceError getError() {
        return new RemoteRenderingServiceError(conversion.getError());
    }

    /**
     * Get the status property: The status of the conversion. Terminal states are CANCELLED, FAILED, or SUCCEEDED.
     *
     * @return the status value.
     */
    public ConversionStatus getStatus() {
        return ConversionStatus.fromString(conversion.getStatus().toString());
    }

    /**
     * Get the creationTime property: The time when the conversion was created. Date and time in ISO 8601 format.
     *
     * @return the creationTime value.
     */
    public OffsetDateTime getCreationTime() {
        return conversion.getCreationTime();
    }
}
