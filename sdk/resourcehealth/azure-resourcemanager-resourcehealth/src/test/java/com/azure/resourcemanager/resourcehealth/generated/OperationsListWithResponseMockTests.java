// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcehealth.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.resourcehealth.ResourceHealthManager;
import com.azure.resourcemanager.resourcehealth.models.OperationListResult;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OperationsListWithResponseMockTests {
    @Test
    public void testListWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"name\":\"wk\",\"display\":{\"provider\":\"ycslevufuztcktyh\",\"resource\":\"qedcgzulwm\",\"operation\":\"qzz\",\"description\":\"jvpglydzgk\"}},{\"name\":\"qeevt\",\"display\":{\"provider\":\"r\",\"resource\":\"t\",\"operation\":\"ytp\",\"description\":\"mov\"}},{\"name\":\"fvaawzqa\",\"display\":{\"provider\":\"gzuriglaecxndt\",\"resource\":\"okpvzm\",\"operation\":\"t\",\"description\":\"dgxobfircl\"}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ResourceHealthManager manager = ResourceHealthManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        OperationListResult response
            = manager.operations().listWithResponse(com.azure.core.util.Context.NONE).getValue();

        Assertions.assertEquals("wk", response.value().get(0).name());
        Assertions.assertEquals("ycslevufuztcktyh", response.value().get(0).display().provider());
        Assertions.assertEquals("qedcgzulwm", response.value().get(0).display().resource());
        Assertions.assertEquals("qzz", response.value().get(0).display().operation());
        Assertions.assertEquals("jvpglydzgk", response.value().get(0).display().description());
    }
}
