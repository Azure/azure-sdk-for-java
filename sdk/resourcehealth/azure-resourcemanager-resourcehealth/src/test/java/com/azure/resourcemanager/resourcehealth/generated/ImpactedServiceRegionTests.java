// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcehealth.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.resourcehealth.models.EventStatusValues;
import com.azure.resourcemanager.resourcehealth.models.ImpactedServiceRegion;
import com.azure.resourcemanager.resourcehealth.models.Update;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ImpactedServiceRegionTests {
    @Test
    public void testDeserialize() {
        ImpactedServiceRegion model =
            BinaryData
                .fromString(
                    "{\"impactedRegion\":\"lzlfbxzpuz\",\"status\":\"Resolved\",\"impactedSubscriptions\":[\"nqzahmgkbrpyyd\"],\"impactedTenants\":[\"nuqqkpikadrgvt\",\"agnb\",\"ynhijggme\"],\"lastUpdateTime\":\"2021-11-02T05:09:13Z\",\"updates\":[{\"summary\":\"butr\",\"updateDateTime\":\"2020-12-24T14:25:03Z\"}]}")
                .toObject(ImpactedServiceRegion.class);
        Assertions.assertEquals("lzlfbxzpuz", model.impactedRegion());
        Assertions.assertEquals(EventStatusValues.RESOLVED, model.status());
        Assertions.assertEquals("nqzahmgkbrpyyd", model.impactedSubscriptions().get(0));
        Assertions.assertEquals("nuqqkpikadrgvt", model.impactedTenants().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-02T05:09:13Z"), model.lastUpdateTime());
        Assertions.assertEquals("butr", model.updates().get(0).summary());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-24T14:25:03Z"), model.updates().get(0).updateDateTime());
    }

    @Test
    public void testSerialize() {
        ImpactedServiceRegion model =
            new ImpactedServiceRegion()
                .withImpactedRegion("lzlfbxzpuz")
                .withStatus(EventStatusValues.RESOLVED)
                .withImpactedSubscriptions(Arrays.asList("nqzahmgkbrpyyd"))
                .withImpactedTenants(Arrays.asList("nuqqkpikadrgvt", "agnb", "ynhijggme"))
                .withLastUpdateTime(OffsetDateTime.parse("2021-11-02T05:09:13Z"))
                .withUpdates(
                    Arrays
                        .asList(
                            new Update()
                                .withSummary("butr")
                                .withUpdateDateTime(OffsetDateTime.parse("2020-12-24T14:25:03Z"))));
        model = BinaryData.fromObject(model).toObject(ImpactedServiceRegion.class);
        Assertions.assertEquals("lzlfbxzpuz", model.impactedRegion());
        Assertions.assertEquals(EventStatusValues.RESOLVED, model.status());
        Assertions.assertEquals("nqzahmgkbrpyyd", model.impactedSubscriptions().get(0));
        Assertions.assertEquals("nuqqkpikadrgvt", model.impactedTenants().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-02T05:09:13Z"), model.lastUpdateTime());
        Assertions.assertEquals("butr", model.updates().get(0).summary());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-24T14:25:03Z"), model.updates().get(0).updateDateTime());
    }
}
