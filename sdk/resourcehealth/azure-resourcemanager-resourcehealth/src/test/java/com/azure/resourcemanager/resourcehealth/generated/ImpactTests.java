// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcehealth.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.resourcehealth.models.EventStatusValues;
import com.azure.resourcemanager.resourcehealth.models.Impact;
import com.azure.resourcemanager.resourcehealth.models.ImpactedServiceRegion;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ImpactTests {
    @Test
    public void testDeserialize() {
        Impact model =
            BinaryData
                .fromString(
                    "{\"impactedService\":\"gygev\",\"impactedRegions\":[{\"impactedRegion\":\"yp\",\"status\":\"Resolved\",\"impactedSubscriptions\":[\"zcdrqjsdpydnfyhx\",\"eoejzic\",\"ifsjttgzfbishcb\"],\"impactedTenants\":[\"jdeyeamdpha\",\"alpbuxwgipwhon\",\"wkgshwa\",\"kix\"],\"lastUpdateTime\":\"2021-05-05T18:01:17Z\",\"updates\":[]},{\"impactedRegion\":\"pu\",\"status\":\"Active\",\"impactedSubscriptions\":[\"wnuzoqftiyqzrnkc\",\"vyxlwhzlsicohoqq\"],\"impactedTenants\":[\"lryav\",\"hheunmmqhgyx\",\"konocu\",\"oklyaxuconuq\"],\"lastUpdateTime\":\"2021-09-25T01:29:01Z\",\"updates\":[]},{\"impactedRegion\":\"ypewrmjmwvvjekt\",\"status\":\"Active\",\"impactedSubscriptions\":[\"hwlrsf\",\"rzpwvlqdqgbiq\",\"lihkaetcktvfc\",\"vf\"],\"impactedTenants\":[\"ymuctqhjfbebrj\",\"xerf\",\"wutttxfvjrbi\",\"phxepcyvahf\"],\"lastUpdateTime\":\"2021-04-15T16:11:33Z\",\"updates\":[]},{\"impactedRegion\":\"xjvuujqgidokg\",\"status\":\"Resolved\",\"impactedSubscriptions\":[\"xgvcl\",\"bgsncghkjeszzhb\"],\"impactedTenants\":[\"txfvgx\",\"fsm\",\"nehmpvecx\",\"odebfqkkrbmpu\"],\"lastUpdateTime\":\"2021-09-18T08:22:42Z\",\"updates\":[]}]}")
                .toObject(Impact.class);
        Assertions.assertEquals("gygev", model.impactedService());
        Assertions.assertEquals("yp", model.impactedRegions().get(0).impactedRegion());
        Assertions.assertEquals(EventStatusValues.RESOLVED, model.impactedRegions().get(0).status());
        Assertions.assertEquals("zcdrqjsdpydnfyhx", model.impactedRegions().get(0).impactedSubscriptions().get(0));
        Assertions.assertEquals("jdeyeamdpha", model.impactedRegions().get(0).impactedTenants().get(0));
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-05-05T18:01:17Z"), model.impactedRegions().get(0).lastUpdateTime());
    }

    @Test
    public void testSerialize() {
        Impact model =
            new Impact()
                .withImpactedService("gygev")
                .withImpactedRegions(
                    Arrays
                        .asList(
                            new ImpactedServiceRegion()
                                .withImpactedRegion("yp")
                                .withStatus(EventStatusValues.RESOLVED)
                                .withImpactedSubscriptions(
                                    Arrays.asList("zcdrqjsdpydnfyhx", "eoejzic", "ifsjttgzfbishcb"))
                                .withImpactedTenants(Arrays.asList("jdeyeamdpha", "alpbuxwgipwhon", "wkgshwa", "kix"))
                                .withLastUpdateTime(OffsetDateTime.parse("2021-05-05T18:01:17Z"))
                                .withUpdates(Arrays.asList()),
                            new ImpactedServiceRegion()
                                .withImpactedRegion("pu")
                                .withStatus(EventStatusValues.ACTIVE)
                                .withImpactedSubscriptions(Arrays.asList("wnuzoqftiyqzrnkc", "vyxlwhzlsicohoqq"))
                                .withImpactedTenants(Arrays.asList("lryav", "hheunmmqhgyx", "konocu", "oklyaxuconuq"))
                                .withLastUpdateTime(OffsetDateTime.parse("2021-09-25T01:29:01Z"))
                                .withUpdates(Arrays.asList()),
                            new ImpactedServiceRegion()
                                .withImpactedRegion("ypewrmjmwvvjekt")
                                .withStatus(EventStatusValues.ACTIVE)
                                .withImpactedSubscriptions(
                                    Arrays.asList("hwlrsf", "rzpwvlqdqgbiq", "lihkaetcktvfc", "vf"))
                                .withImpactedTenants(
                                    Arrays.asList("ymuctqhjfbebrj", "xerf", "wutttxfvjrbi", "phxepcyvahf"))
                                .withLastUpdateTime(OffsetDateTime.parse("2021-04-15T16:11:33Z"))
                                .withUpdates(Arrays.asList()),
                            new ImpactedServiceRegion()
                                .withImpactedRegion("xjvuujqgidokg")
                                .withStatus(EventStatusValues.RESOLVED)
                                .withImpactedSubscriptions(Arrays.asList("xgvcl", "bgsncghkjeszzhb"))
                                .withImpactedTenants(Arrays.asList("txfvgx", "fsm", "nehmpvecx", "odebfqkkrbmpu"))
                                .withLastUpdateTime(OffsetDateTime.parse("2021-09-18T08:22:42Z"))
                                .withUpdates(Arrays.asList())));
        model = BinaryData.fromObject(model).toObject(Impact.class);
        Assertions.assertEquals("gygev", model.impactedService());
        Assertions.assertEquals("yp", model.impactedRegions().get(0).impactedRegion());
        Assertions.assertEquals(EventStatusValues.RESOLVED, model.impactedRegions().get(0).status());
        Assertions.assertEquals("zcdrqjsdpydnfyhx", model.impactedRegions().get(0).impactedSubscriptions().get(0));
        Assertions.assertEquals("jdeyeamdpha", model.impactedRegions().get(0).impactedTenants().get(0));
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-05-05T18:01:17Z"), model.impactedRegions().get(0).lastUpdateTime());
    }
}
