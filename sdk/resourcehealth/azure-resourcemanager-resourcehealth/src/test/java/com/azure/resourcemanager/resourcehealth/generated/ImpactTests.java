// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcehealth.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.resourcehealth.models.EventStatusValues;
import com.azure.resourcemanager.resourcehealth.models.Impact;
import com.azure.resourcemanager.resourcehealth.models.ImpactedServiceRegion;
import com.azure.resourcemanager.resourcehealth.models.Update;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ImpactTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Impact model =
            BinaryData
                .fromString(
                    "{\"impactedService\":\"mslyzrpzbchckqqz\",\"impactedRegions\":[{\"impactedRegion\":\"iysui\",\"status\":\"Resolved\",\"impactedSubscriptions\":[\"edyatrwyhqmibzyh\"],\"impactedTenants\":[\"smypyynpc\",\"pumnz\",\"mwzn\"],\"lastUpdateTime\":\"2021-06-04T15:48:38Z\",\"updates\":[{\"summary\":\"sorgj\",\"updateDateTime\":\"2021-10-23T19:23:01Z\"}]}]}")
                .toObject(Impact.class);
        Assertions.assertEquals("mslyzrpzbchckqqz", model.impactedService());
        Assertions.assertEquals("iysui", model.impactedRegions().get(0).impactedRegion());
        Assertions.assertEquals(EventStatusValues.RESOLVED, model.impactedRegions().get(0).status());
        Assertions.assertEquals("edyatrwyhqmibzyh", model.impactedRegions().get(0).impactedSubscriptions().get(0));
        Assertions.assertEquals("smypyynpc", model.impactedRegions().get(0).impactedTenants().get(0));
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-06-04T15:48:38Z"), model.impactedRegions().get(0).lastUpdateTime());
        Assertions.assertEquals("sorgj", model.impactedRegions().get(0).updates().get(0).summary());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-10-23T19:23:01Z"),
                model.impactedRegions().get(0).updates().get(0).updateDateTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Impact model =
            new Impact()
                .withImpactedService("mslyzrpzbchckqqz")
                .withImpactedRegions(
                    Arrays
                        .asList(
                            new ImpactedServiceRegion()
                                .withImpactedRegion("iysui")
                                .withStatus(EventStatusValues.RESOLVED)
                                .withImpactedSubscriptions(Arrays.asList("edyatrwyhqmibzyh"))
                                .withImpactedTenants(Arrays.asList("smypyynpc", "pumnz", "mwzn"))
                                .withLastUpdateTime(OffsetDateTime.parse("2021-06-04T15:48:38Z"))
                                .withUpdates(
                                    Arrays
                                        .asList(
                                            new Update()
                                                .withSummary("sorgj")
                                                .withUpdateDateTime(OffsetDateTime.parse("2021-10-23T19:23:01Z"))))));
        model = BinaryData.fromObject(model).toObject(Impact.class);
        Assertions.assertEquals("mslyzrpzbchckqqz", model.impactedService());
        Assertions.assertEquals("iysui", model.impactedRegions().get(0).impactedRegion());
        Assertions.assertEquals(EventStatusValues.RESOLVED, model.impactedRegions().get(0).status());
        Assertions.assertEquals("edyatrwyhqmibzyh", model.impactedRegions().get(0).impactedSubscriptions().get(0));
        Assertions.assertEquals("smypyynpc", model.impactedRegions().get(0).impactedTenants().get(0));
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-06-04T15:48:38Z"), model.impactedRegions().get(0).lastUpdateTime());
        Assertions.assertEquals("sorgj", model.impactedRegions().get(0).updates().get(0).summary());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-10-23T19:23:01Z"),
                model.impactedRegions().get(0).updates().get(0).updateDateTime());
    }
}
