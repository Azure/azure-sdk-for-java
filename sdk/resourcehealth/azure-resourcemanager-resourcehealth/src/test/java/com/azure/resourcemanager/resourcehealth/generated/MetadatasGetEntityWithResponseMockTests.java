// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcehealth.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.resourcehealth.ResourceHealthManager;
import com.azure.resourcemanager.resourcehealth.models.MetadataEntity;
import com.azure.resourcemanager.resourcehealth.models.Scenario;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MetadatasGetEntityWithResponseMockTests {
    @Test
    public void testGetEntityWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"huzqgn\",\"dependsOn\":[\"kynscliqhzv\",\"xnkomtkubo\",\"ppnvdxz\"],\"applicableScenarios\":[\"Alerts\",\"Alerts\",\"Alerts\"],\"supportedValues\":[{\"id\":\"evqagtl\",\"displayName\":\"hlfkqojpy\",\"resourceTypes\":[\"trdcnifmzzs\"]}]},\"id\":\"m\",\"name\":\"rnysux\",\"type\":\"prafwgckhoc\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ResourceHealthManager manager = ResourceHealthManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        MetadataEntity response
            = manager.metadatas().getEntityWithResponse("ekrsgs", com.azure.core.util.Context.NONE).getValue();

        Assertions.assertEquals("huzqgn", response.displayName());
        Assertions.assertEquals("kynscliqhzv", response.dependsOn().get(0));
        Assertions.assertEquals(Scenario.ALERTS, response.applicableScenarios().get(0));
        Assertions.assertEquals("evqagtl", response.supportedValues().get(0).id());
        Assertions.assertEquals("hlfkqojpy", response.supportedValues().get(0).displayName());
        Assertions.assertEquals("trdcnifmzzs", response.supportedValues().get(0).resourceTypes().get(0));
    }
}
