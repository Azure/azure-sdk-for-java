// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcehealth.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.resourcehealth.fluent.models.MetadataEntityProperties;
import com.azure.resourcemanager.resourcehealth.models.MetadataSupportedValueDetail;
import com.azure.resourcemanager.resourcehealth.models.Scenario;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MetadataEntityPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MetadataEntityProperties model =
            BinaryData
                .fromString(
                    "{\"displayName\":\"rq\",\"dependsOn\":[\"dckzywbiexz\",\"eyueaxibxujwb\",\"qwalmuzyoxaepd\",\"zjancuxr\"],\"applicableScenarios\":[\"Alerts\",\"Alerts\",\"Alerts\"],\"supportedValues\":[{\"id\":\"iwdjswztsdbpgn\",\"displayName\":\"txhp\",\"resourceTypes\":[\"zpfzabglc\",\"hxw\"]},{\"id\":\"tyq\",\"displayName\":\"lbbovplw\",\"resourceTypes\":[\"vgyuguos\",\"mkfssxqukkfplgm\",\"sxnkjzkdeslpvlo\"]}]}")
                .toObject(MetadataEntityProperties.class);
        Assertions.assertEquals("rq", model.displayName());
        Assertions.assertEquals("dckzywbiexz", model.dependsOn().get(0));
        Assertions.assertEquals(Scenario.ALERTS, model.applicableScenarios().get(0));
        Assertions.assertEquals("iwdjswztsdbpgn", model.supportedValues().get(0).id());
        Assertions.assertEquals("txhp", model.supportedValues().get(0).displayName());
        Assertions.assertEquals("zpfzabglc", model.supportedValues().get(0).resourceTypes().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MetadataEntityProperties model =
            new MetadataEntityProperties()
                .withDisplayName("rq")
                .withDependsOn(Arrays.asList("dckzywbiexz", "eyueaxibxujwb", "qwalmuzyoxaepd", "zjancuxr"))
                .withApplicableScenarios(Arrays.asList(Scenario.ALERTS, Scenario.ALERTS, Scenario.ALERTS))
                .withSupportedValues(
                    Arrays
                        .asList(
                            new MetadataSupportedValueDetail()
                                .withId("iwdjswztsdbpgn")
                                .withDisplayName("txhp")
                                .withResourceTypes(Arrays.asList("zpfzabglc", "hxw")),
                            new MetadataSupportedValueDetail()
                                .withId("tyq")
                                .withDisplayName("lbbovplw")
                                .withResourceTypes(Arrays.asList("vgyuguos", "mkfssxqukkfplgm", "sxnkjzkdeslpvlo"))));
        model = BinaryData.fromObject(model).toObject(MetadataEntityProperties.class);
        Assertions.assertEquals("rq", model.displayName());
        Assertions.assertEquals("dckzywbiexz", model.dependsOn().get(0));
        Assertions.assertEquals(Scenario.ALERTS, model.applicableScenarios().get(0));
        Assertions.assertEquals("iwdjswztsdbpgn", model.supportedValues().get(0).id());
        Assertions.assertEquals("txhp", model.supportedValues().get(0).displayName());
        Assertions.assertEquals("zpfzabglc", model.supportedValues().get(0).resourceTypes().get(0));
    }
}
