// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcehealth.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.resourcehealth.models.Link;
import com.azure.resourcemanager.resourcehealth.models.LinkDisplayText;
import com.azure.resourcemanager.resourcehealth.models.LinkTypeValues;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class LinkTests {
    @Test
    public void testDeserialize() {
        Link model =
            BinaryData
                .fromString(
                    "{\"type\":\"Hyperlink\",\"displayText\":{\"value\":\"ez\",\"localizedValue\":\"shxmzsbbzoggigrx\"},\"extensionName\":\"ur\",\"bladeName\":\"xxjnspydptk\",\"parameters\":\"datankoukn\"}")
                .toObject(Link.class);
        Assertions.assertEquals(LinkTypeValues.HYPERLINK, model.type());
        Assertions.assertEquals("ez", model.displayText().value());
        Assertions.assertEquals("shxmzsbbzoggigrx", model.displayText().localizedValue());
        Assertions.assertEquals("ur", model.extensionName());
        Assertions.assertEquals("xxjnspydptk", model.bladeName());
    }

    @Test
    public void testSerialize() {
        Link model =
            new Link()
                .withType(LinkTypeValues.HYPERLINK)
                .withDisplayText(new LinkDisplayText().withValue("ez").withLocalizedValue("shxmzsbbzoggigrx"))
                .withExtensionName("ur")
                .withBladeName("xxjnspydptk")
                .withParameters("datankoukn");
        model = BinaryData.fromObject(model).toObject(Link.class);
        Assertions.assertEquals(LinkTypeValues.HYPERLINK, model.type());
        Assertions.assertEquals("ez", model.displayText().value());
        Assertions.assertEquals("shxmzsbbzoggigrx", model.displayText().localizedValue());
        Assertions.assertEquals("ur", model.extensionName());
        Assertions.assertEquals("xxjnspydptk", model.bladeName());
    }
}
