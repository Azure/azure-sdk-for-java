// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcehealth.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.resourcehealth.models.Link;
import com.azure.resourcemanager.resourcehealth.models.LinkDisplayText;
import com.azure.resourcemanager.resourcehealth.models.LinkTypeValues;
import org.junit.jupiter.api.Assertions;

public final class LinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Link model =
            BinaryData
                .fromString(
                    "{\"type\":\"Button\",\"displayText\":{\"value\":\"ji\",\"localizedValue\":\"wifto\"},\"extensionName\":\"kvpuvksgplsaknyn\",\"bladeName\":\"ynl\",\"parameters\":\"datahuopxodlqiynto\"}")
                .toObject(Link.class);
        Assertions.assertEquals(LinkTypeValues.BUTTON, model.type());
        Assertions.assertEquals("ji", model.displayText().value());
        Assertions.assertEquals("wifto", model.displayText().localizedValue());
        Assertions.assertEquals("kvpuvksgplsaknyn", model.extensionName());
        Assertions.assertEquals("ynl", model.bladeName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Link model =
            new Link()
                .withType(LinkTypeValues.BUTTON)
                .withDisplayText(new LinkDisplayText().withValue("ji").withLocalizedValue("wifto"))
                .withExtensionName("kvpuvksgplsaknyn")
                .withBladeName("ynl")
                .withParameters("datahuopxodlqiynto");
        model = BinaryData.fromObject(model).toObject(Link.class);
        Assertions.assertEquals(LinkTypeValues.BUTTON, model.type());
        Assertions.assertEquals("ji", model.displayText().value());
        Assertions.assertEquals("wifto", model.displayText().localizedValue());
        Assertions.assertEquals("kvpuvksgplsaknyn", model.extensionName());
        Assertions.assertEquals("ynl", model.bladeName());
    }
}
