// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcehealth.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of ImpactedResources. */
public interface ImpactedResources {
    /**
     * Lists impacted resources in the subscription by an event.
     *
     * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the List of eventImpactedResources operation response as paginated response with {@link PagedIterable}.
     */
    PagedIterable<EventImpactedResource> listBySubscriptionIdAndEventId(String eventTrackingId);

    /**
     * Lists impacted resources in the subscription by an event.
     *
     * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.
     * @param filter The filter to apply on the operation. For more information please see
     *     https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the List of eventImpactedResources operation response as paginated response with {@link PagedIterable}.
     */
    PagedIterable<EventImpactedResource> listBySubscriptionIdAndEventId(
        String eventTrackingId, String filter, Context context);

    /**
     * Gets the specific impacted resource in the subscription by an event.
     *
     * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.
     * @param impactedResourceName Name of the Impacted Resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specific impacted resource in the subscription by an event along with {@link Response}.
     */
    Response<EventImpactedResource> getWithResponse(
        String eventTrackingId, String impactedResourceName, Context context);

    /**
     * Gets the specific impacted resource in the subscription by an event.
     *
     * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.
     * @param impactedResourceName Name of the Impacted Resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specific impacted resource in the subscription by an event.
     */
    EventImpactedResource get(String eventTrackingId, String impactedResourceName);

    /**
     * Lists impacted resources in the tenant by an event.
     *
     * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the List of eventImpactedResources operation response as paginated response with {@link PagedIterable}.
     */
    PagedIterable<EventImpactedResource> listByTenantIdAndEventId(String eventTrackingId);

    /**
     * Lists impacted resources in the tenant by an event.
     *
     * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.
     * @param filter The filter to apply on the operation. For more information please see
     *     https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the List of eventImpactedResources operation response as paginated response with {@link PagedIterable}.
     */
    PagedIterable<EventImpactedResource> listByTenantIdAndEventId(
        String eventTrackingId, String filter, Context context);

    /**
     * Gets the specific impacted resource in the tenant by an event.
     *
     * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.
     * @param impactedResourceName Name of the Impacted Resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specific impacted resource in the tenant by an event along with {@link Response}.
     */
    Response<EventImpactedResource> getByTenantIdWithResponse(
        String eventTrackingId, String impactedResourceName, Context context);

    /**
     * Gets the specific impacted resource in the tenant by an event.
     *
     * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.
     * @param impactedResourceName Name of the Impacted Resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specific impacted resource in the tenant by an event.
     */
    EventImpactedResource getByTenantId(String eventTrackingId, String impactedResourceName);
}
