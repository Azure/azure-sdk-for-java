// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcehealth.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Recommended action for the service health event.
 */
@Fluent
public final class EventPropertiesRecommendedActionsItem
    implements JsonSerializable<EventPropertiesRecommendedActionsItem> {
    /*
     * Recommended action group Id for the service health event.
     */
    private Integer groupId;

    /*
     * Recommended action text
     */
    private String actionText;

    /**
     * Creates an instance of EventPropertiesRecommendedActionsItem class.
     */
    public EventPropertiesRecommendedActionsItem() {
    }

    /**
     * Get the groupId property: Recommended action group Id for the service health event.
     * 
     * @return the groupId value.
     */
    public Integer groupId() {
        return this.groupId;
    }

    /**
     * Set the groupId property: Recommended action group Id for the service health event.
     * 
     * @param groupId the groupId value to set.
     * @return the EventPropertiesRecommendedActionsItem object itself.
     */
    public EventPropertiesRecommendedActionsItem withGroupId(Integer groupId) {
        this.groupId = groupId;
        return this;
    }

    /**
     * Get the actionText property: Recommended action text.
     * 
     * @return the actionText value.
     */
    public String actionText() {
        return this.actionText;
    }

    /**
     * Set the actionText property: Recommended action text.
     * 
     * @param actionText the actionText value to set.
     * @return the EventPropertiesRecommendedActionsItem object itself.
     */
    public EventPropertiesRecommendedActionsItem withActionText(String actionText) {
        this.actionText = actionText;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("groupId", this.groupId);
        jsonWriter.writeStringField("actionText", this.actionText);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EventPropertiesRecommendedActionsItem from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of EventPropertiesRecommendedActionsItem if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the EventPropertiesRecommendedActionsItem.
     */
    public static EventPropertiesRecommendedActionsItem fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            EventPropertiesRecommendedActionsItem deserializedEventPropertiesRecommendedActionsItem
                = new EventPropertiesRecommendedActionsItem();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("groupId".equals(fieldName)) {
                    deserializedEventPropertiesRecommendedActionsItem.groupId = reader.getNullable(JsonReader::getInt);
                } else if ("actionText".equals(fieldName)) {
                    deserializedEventPropertiesRecommendedActionsItem.actionText = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedEventPropertiesRecommendedActionsItem;
        });
    }
}
