/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.resourcehealth.v2018_08_01_preview.implementation;

import org.joda.time.DateTime;
import java.util.List;
import com.microsoft.azure.management.resourcehealth.v2018_08_01_preview.StatusBanner;
import com.microsoft.azure.management.resourcehealth.v2018_08_01_preview.StatusActiveEvent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.ProxyResource;

/**
 * The Get EmergingIssues operation response.
 */
@JsonFlatten
public class EmergingIssuesGetResultInner extends ProxyResource {
    /**
     * Timestamp for when last time refreshed for ongoing emerging issue.
     */
    @JsonProperty(value = "properties.refreshTimestamp")
    private DateTime refreshTimestamp;

    /**
     * The list of emerging issues of banner type.
     */
    @JsonProperty(value = "properties.statusBanners")
    private List<StatusBanner> statusBanners;

    /**
     * The list of emerging issues of active event type.
     */
    @JsonProperty(value = "properties.statusActiveEvents")
    private List<StatusActiveEvent> statusActiveEvents;

    /**
     * Get timestamp for when last time refreshed for ongoing emerging issue.
     *
     * @return the refreshTimestamp value
     */
    public DateTime refreshTimestamp() {
        return this.refreshTimestamp;
    }

    /**
     * Set timestamp for when last time refreshed for ongoing emerging issue.
     *
     * @param refreshTimestamp the refreshTimestamp value to set
     * @return the EmergingIssuesGetResultInner object itself.
     */
    public EmergingIssuesGetResultInner withRefreshTimestamp(DateTime refreshTimestamp) {
        this.refreshTimestamp = refreshTimestamp;
        return this;
    }

    /**
     * Get the list of emerging issues of banner type.
     *
     * @return the statusBanners value
     */
    public List<StatusBanner> statusBanners() {
        return this.statusBanners;
    }

    /**
     * Set the list of emerging issues of banner type.
     *
     * @param statusBanners the statusBanners value to set
     * @return the EmergingIssuesGetResultInner object itself.
     */
    public EmergingIssuesGetResultInner withStatusBanners(List<StatusBanner> statusBanners) {
        this.statusBanners = statusBanners;
        return this;
    }

    /**
     * Get the list of emerging issues of active event type.
     *
     * @return the statusActiveEvents value
     */
    public List<StatusActiveEvent> statusActiveEvents() {
        return this.statusActiveEvents;
    }

    /**
     * Set the list of emerging issues of active event type.
     *
     * @param statusActiveEvents the statusActiveEvents value to set
     * @return the EmergingIssuesGetResultInner object itself.
     */
    public EmergingIssuesGetResultInner withStatusActiveEvents(List<StatusActiveEvent> statusActiveEvents) {
        this.statusActiveEvents = statusActiveEvents;
        return this;
    }

}
