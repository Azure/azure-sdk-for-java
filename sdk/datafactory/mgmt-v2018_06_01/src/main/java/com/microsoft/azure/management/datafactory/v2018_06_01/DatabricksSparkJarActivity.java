/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datafactory.v2018_06_01;

import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * DatabricksSparkJar activity.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", defaultImpl = DatabricksSparkJarActivity.class)
@JsonTypeName("DatabricksSparkJar")
@JsonFlatten
public class DatabricksSparkJarActivity extends ExecutionActivity {
    /**
     * The full name of the class containing the main method to be executed.
     * This class must be contained in a JAR provided as a library. Type:
     * string (or Expression with resultType string).
     */
    @JsonProperty(value = "typeProperties.mainClassName", required = true)
    private Object mainClassName;

    /**
     * Parameters that will be passed to the main method.
     */
    @JsonProperty(value = "typeProperties.parameters")
    private List<Object> parameters;

    /**
     * A list of libraries to be installed on the cluster that will execute the
     * job.
     */
    @JsonProperty(value = "typeProperties.libraries")
    private List<Map<String, Object>> libraries;

    /**
     * Get the full name of the class containing the main method to be executed. This class must be contained in a JAR provided as a library. Type: string (or Expression with resultType string).
     *
     * @return the mainClassName value
     */
    public Object mainClassName() {
        return this.mainClassName;
    }

    /**
     * Set the full name of the class containing the main method to be executed. This class must be contained in a JAR provided as a library. Type: string (or Expression with resultType string).
     *
     * @param mainClassName the mainClassName value to set
     * @return the DatabricksSparkJarActivity object itself.
     */
    public DatabricksSparkJarActivity withMainClassName(Object mainClassName) {
        this.mainClassName = mainClassName;
        return this;
    }

    /**
     * Get parameters that will be passed to the main method.
     *
     * @return the parameters value
     */
    public List<Object> parameters() {
        return this.parameters;
    }

    /**
     * Set parameters that will be passed to the main method.
     *
     * @param parameters the parameters value to set
     * @return the DatabricksSparkJarActivity object itself.
     */
    public DatabricksSparkJarActivity withParameters(List<Object> parameters) {
        this.parameters = parameters;
        return this;
    }

    /**
     * Get a list of libraries to be installed on the cluster that will execute the job.
     *
     * @return the libraries value
     */
    public List<Map<String, Object>> libraries() {
        return this.libraries;
    }

    /**
     * Set a list of libraries to be installed on the cluster that will execute the job.
     *
     * @param libraries the libraries value to set
     * @return the DatabricksSparkJarActivity object itself.
     */
    public DatabricksSparkJarActivity withLibraries(List<Map<String, Object>> libraries) {
        this.libraries = libraries;
        return this;
    }

}
