/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datafactory.v2018_06_01;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The Amazon S3 settings needed for the interim Amazon S3 when copying from
 * Amazon Redshift with unload. With this, data from Amazon Redshift source
 * will be unloaded into S3 first and then copied into the targeted sink from
 * the interim S3.
 */
public class RedshiftUnloadSettings {
    /**
     * The name of the Amazon S3 linked service which will be used for the
     * unload operation when copying from the Amazon Redshift source.
     */
    @JsonProperty(value = "s3LinkedServiceName", required = true)
    private LinkedServiceReference s3LinkedServiceName;

    /**
     * The bucket of the interim Amazon S3 which will be used to store the
     * unloaded data from Amazon Redshift source. The bucket must be in the
     * same region as the Amazon Redshift source. Type: string (or Expression
     * with resultType string).
     */
    @JsonProperty(value = "bucketName", required = true)
    private Object bucketName;

    /**
     * Get the name of the Amazon S3 linked service which will be used for the unload operation when copying from the Amazon Redshift source.
     *
     * @return the s3LinkedServiceName value
     */
    public LinkedServiceReference s3LinkedServiceName() {
        return this.s3LinkedServiceName;
    }

    /**
     * Set the name of the Amazon S3 linked service which will be used for the unload operation when copying from the Amazon Redshift source.
     *
     * @param s3LinkedServiceName the s3LinkedServiceName value to set
     * @return the RedshiftUnloadSettings object itself.
     */
    public RedshiftUnloadSettings withS3LinkedServiceName(LinkedServiceReference s3LinkedServiceName) {
        this.s3LinkedServiceName = s3LinkedServiceName;
        return this;
    }

    /**
     * Get the bucket of the interim Amazon S3 which will be used to store the unloaded data from Amazon Redshift source. The bucket must be in the same region as the Amazon Redshift source. Type: string (or Expression with resultType string).
     *
     * @return the bucketName value
     */
    public Object bucketName() {
        return this.bucketName;
    }

    /**
     * Set the bucket of the interim Amazon S3 which will be used to store the unloaded data from Amazon Redshift source. The bucket must be in the same region as the Amazon Redshift source. Type: string (or Expression with resultType string).
     *
     * @param bucketName the bucketName value to set
     * @return the RedshiftUnloadSettings object itself.
     */
    public RedshiftUnloadSettings withBucketName(Object bucketName) {
        this.bucketName = bucketName;
        return this;
    }

}
