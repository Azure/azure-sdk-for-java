/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datafactory.v2018_06_01;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * Trigger that runs every time a custom event is received.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", defaultImpl = CustomEventsTrigger.class)
@JsonTypeName("CustomEventsTrigger")
@JsonFlatten
public class CustomEventsTrigger extends MultiplePipelineTrigger {
    /**
     * The event subject must begin with the pattern provided for trigger to
     * fire. At least one of these must be provided: subjectBeginsWith,
     * subjectEndsWith.
     */
    @JsonProperty(value = "typeProperties.subjectBeginsWith")
    private String subjectBeginsWith;

    /**
     * The event subject must end with the pattern provided for trigger to
     * fire. At least one of these must be provided: subjectBeginsWith,
     * subjectEndsWith.
     */
    @JsonProperty(value = "typeProperties.subjectEndsWith")
    private String subjectEndsWith;

    /**
     * The list of event types that cause this trigger to fire.
     */
    @JsonProperty(value = "typeProperties.events", required = true)
    private List<Object> events;

    /**
     * The ARM resource ID of the Azure Event Grid Topic.
     */
    @JsonProperty(value = "typeProperties.scope", required = true)
    private String scope;

    /**
     * Get the event subject must begin with the pattern provided for trigger to fire. At least one of these must be provided: subjectBeginsWith, subjectEndsWith.
     *
     * @return the subjectBeginsWith value
     */
    public String subjectBeginsWith() {
        return this.subjectBeginsWith;
    }

    /**
     * Set the event subject must begin with the pattern provided for trigger to fire. At least one of these must be provided: subjectBeginsWith, subjectEndsWith.
     *
     * @param subjectBeginsWith the subjectBeginsWith value to set
     * @return the CustomEventsTrigger object itself.
     */
    public CustomEventsTrigger withSubjectBeginsWith(String subjectBeginsWith) {
        this.subjectBeginsWith = subjectBeginsWith;
        return this;
    }

    /**
     * Get the event subject must end with the pattern provided for trigger to fire. At least one of these must be provided: subjectBeginsWith, subjectEndsWith.
     *
     * @return the subjectEndsWith value
     */
    public String subjectEndsWith() {
        return this.subjectEndsWith;
    }

    /**
     * Set the event subject must end with the pattern provided for trigger to fire. At least one of these must be provided: subjectBeginsWith, subjectEndsWith.
     *
     * @param subjectEndsWith the subjectEndsWith value to set
     * @return the CustomEventsTrigger object itself.
     */
    public CustomEventsTrigger withSubjectEndsWith(String subjectEndsWith) {
        this.subjectEndsWith = subjectEndsWith;
        return this;
    }

    /**
     * Get the list of event types that cause this trigger to fire.
     *
     * @return the events value
     */
    public List<Object> events() {
        return this.events;
    }

    /**
     * Set the list of event types that cause this trigger to fire.
     *
     * @param events the events value to set
     * @return the CustomEventsTrigger object itself.
     */
    public CustomEventsTrigger withEvents(List<Object> events) {
        this.events = events;
        return this;
    }

    /**
     * Get the ARM resource ID of the Azure Event Grid Topic.
     *
     * @return the scope value
     */
    public String scope() {
        return this.scope;
    }

    /**
     * Set the ARM resource ID of the Azure Event Grid Topic.
     *
     * @param scope the scope value to set
     * @return the CustomEventsTrigger object itself.
     */
    public CustomEventsTrigger withScope(String scope) {
        this.scope = scope;
        return this;
    }

}
