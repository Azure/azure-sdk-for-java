/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datafactory.v2018_06_01;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.management.datafactory.v2018_06_01.implementation.DataFlowInner;

/**
 * Mapping data flow.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", defaultImpl = MappingDataFlow.class)
@JsonTypeName("MappingDataFlow")
@JsonFlatten
public class MappingDataFlow extends DataFlowInner {
    /**
     * List of sources in data flow.
     */
    @JsonProperty(value = "typeProperties.sources")
    private List<DataFlowSource> sources;

    /**
     * List of sinks in data flow.
     */
    @JsonProperty(value = "typeProperties.sinks")
    private List<DataFlowSink> sinks;

    /**
     * List of transformations in data flow.
     */
    @JsonProperty(value = "typeProperties.transformations")
    private List<Transformation> transformations;

    /**
     * DataFlow script.
     */
    @JsonProperty(value = "typeProperties.script")
    private String script;

    /**
     * Get list of sources in data flow.
     *
     * @return the sources value
     */
    public List<DataFlowSource> sources() {
        return this.sources;
    }

    /**
     * Set list of sources in data flow.
     *
     * @param sources the sources value to set
     * @return the MappingDataFlow object itself.
     */
    public MappingDataFlow withSources(List<DataFlowSource> sources) {
        this.sources = sources;
        return this;
    }

    /**
     * Get list of sinks in data flow.
     *
     * @return the sinks value
     */
    public List<DataFlowSink> sinks() {
        return this.sinks;
    }

    /**
     * Set list of sinks in data flow.
     *
     * @param sinks the sinks value to set
     * @return the MappingDataFlow object itself.
     */
    public MappingDataFlow withSinks(List<DataFlowSink> sinks) {
        this.sinks = sinks;
        return this;
    }

    /**
     * Get list of transformations in data flow.
     *
     * @return the transformations value
     */
    public List<Transformation> transformations() {
        return this.transformations;
    }

    /**
     * Set list of transformations in data flow.
     *
     * @param transformations the transformations value to set
     * @return the MappingDataFlow object itself.
     */
    public MappingDataFlow withTransformations(List<Transformation> transformations) {
        this.transformations = transformations;
        return this;
    }

    /**
     * Get dataFlow script.
     *
     * @return the script value
     */
    public String script() {
        return this.script;
    }

    /**
     * Set dataFlow script.
     *
     * @param script the script value to set
     * @return the MappingDataFlow object itself.
     */
    public MappingDataFlow withScript(String script) {
        this.script = script;
        return this;
    }

}
