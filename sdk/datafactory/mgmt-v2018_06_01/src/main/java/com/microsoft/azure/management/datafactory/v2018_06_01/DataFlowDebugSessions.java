/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datafactory.v2018_06_01;

import rx.Completable;
import rx.Observable;
import com.microsoft.azure.management.datafactory.v2018_06_01.implementation.DataFlowDebugSessionsInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing DataFlowDebugSessions.
 */
public interface DataFlowDebugSessions extends HasInner<DataFlowDebugSessionsInner> {
    /**
     * Creates a data flow debug session.
     *
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param request Data flow debug session definition
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<CreateDataFlowDebugSessionResponse> createAsync(String resourceGroupName, String factoryName, CreateDataFlowDebugSessionRequest request);

    /**
     * Query all active data flow debug sessions.
     *
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<DataFlowDebugSessionInfo> queryByFactoryAsync(final String resourceGroupName, final String factoryName);

    /**
     * Add a data flow into debug session.
     *
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param request Data flow debug session definition with debug content.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<AddDataFlowToDebugSessionResponse> addDataFlowAsync(String resourceGroupName, String factoryName, DataFlowDebugPackage request);

    /**
     * Deletes a data flow debug session.
     *
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteAsync(String resourceGroupName, String factoryName);

    /**
     * Execute a data flow debug command.
     *
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param request Data flow debug command definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<DataFlowDebugCommandResponse> executeCommandAsync(String resourceGroupName, String factoryName, DataFlowDebugCommandRequest request);

}
