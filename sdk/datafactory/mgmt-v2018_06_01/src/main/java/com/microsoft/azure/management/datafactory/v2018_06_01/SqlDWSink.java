/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datafactory.v2018_06_01;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * A copy activity SQL Data Warehouse sink.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", defaultImpl = SqlDWSink.class)
@JsonTypeName("SqlDWSink")
public class SqlDWSink extends CopySink {
    /**
     * SQL pre-copy script. Type: string (or Expression with resultType
     * string).
     */
    @JsonProperty(value = "preCopyScript")
    private Object preCopyScript;

    /**
     * Indicates to use PolyBase to copy data into SQL Data Warehouse when
     * applicable. Type: boolean (or Expression with resultType boolean).
     */
    @JsonProperty(value = "allowPolyBase")
    private Object allowPolyBase;

    /**
     * Specifies PolyBase-related settings when allowPolyBase is true.
     */
    @JsonProperty(value = "polyBaseSettings")
    private PolybaseSettings polyBaseSettings;

    /**
     * Indicates to use Copy Command to copy data into SQL Data Warehouse.
     * Type: boolean (or Expression with resultType boolean).
     */
    @JsonProperty(value = "allowCopyCommand")
    private Object allowCopyCommand;

    /**
     * Specifies Copy Command related settings when allowCopyCommand is true.
     */
    @JsonProperty(value = "copyCommandSettings")
    private DWCopyCommandSettings copyCommandSettings;

    /**
     * The option to handle sink table, such as autoCreate. For now only
     * 'autoCreate' value is supported. Type: string (or Expression with
     * resultType string).
     */
    @JsonProperty(value = "tableOption")
    private Object tableOption;

    /**
     * Get sQL pre-copy script. Type: string (or Expression with resultType string).
     *
     * @return the preCopyScript value
     */
    public Object preCopyScript() {
        return this.preCopyScript;
    }

    /**
     * Set sQL pre-copy script. Type: string (or Expression with resultType string).
     *
     * @param preCopyScript the preCopyScript value to set
     * @return the SqlDWSink object itself.
     */
    public SqlDWSink withPreCopyScript(Object preCopyScript) {
        this.preCopyScript = preCopyScript;
        return this;
    }

    /**
     * Get indicates to use PolyBase to copy data into SQL Data Warehouse when applicable. Type: boolean (or Expression with resultType boolean).
     *
     * @return the allowPolyBase value
     */
    public Object allowPolyBase() {
        return this.allowPolyBase;
    }

    /**
     * Set indicates to use PolyBase to copy data into SQL Data Warehouse when applicable. Type: boolean (or Expression with resultType boolean).
     *
     * @param allowPolyBase the allowPolyBase value to set
     * @return the SqlDWSink object itself.
     */
    public SqlDWSink withAllowPolyBase(Object allowPolyBase) {
        this.allowPolyBase = allowPolyBase;
        return this;
    }

    /**
     * Get specifies PolyBase-related settings when allowPolyBase is true.
     *
     * @return the polyBaseSettings value
     */
    public PolybaseSettings polyBaseSettings() {
        return this.polyBaseSettings;
    }

    /**
     * Set specifies PolyBase-related settings when allowPolyBase is true.
     *
     * @param polyBaseSettings the polyBaseSettings value to set
     * @return the SqlDWSink object itself.
     */
    public SqlDWSink withPolyBaseSettings(PolybaseSettings polyBaseSettings) {
        this.polyBaseSettings = polyBaseSettings;
        return this;
    }

    /**
     * Get indicates to use Copy Command to copy data into SQL Data Warehouse. Type: boolean (or Expression with resultType boolean).
     *
     * @return the allowCopyCommand value
     */
    public Object allowCopyCommand() {
        return this.allowCopyCommand;
    }

    /**
     * Set indicates to use Copy Command to copy data into SQL Data Warehouse. Type: boolean (or Expression with resultType boolean).
     *
     * @param allowCopyCommand the allowCopyCommand value to set
     * @return the SqlDWSink object itself.
     */
    public SqlDWSink withAllowCopyCommand(Object allowCopyCommand) {
        this.allowCopyCommand = allowCopyCommand;
        return this;
    }

    /**
     * Get specifies Copy Command related settings when allowCopyCommand is true.
     *
     * @return the copyCommandSettings value
     */
    public DWCopyCommandSettings copyCommandSettings() {
        return this.copyCommandSettings;
    }

    /**
     * Set specifies Copy Command related settings when allowCopyCommand is true.
     *
     * @param copyCommandSettings the copyCommandSettings value to set
     * @return the SqlDWSink object itself.
     */
    public SqlDWSink withCopyCommandSettings(DWCopyCommandSettings copyCommandSettings) {
        this.copyCommandSettings = copyCommandSettings;
        return this;
    }

    /**
     * Get the option to handle sink table, such as autoCreate. For now only 'autoCreate' value is supported. Type: string (or Expression with resultType string).
     *
     * @return the tableOption value
     */
    public Object tableOption() {
        return this.tableOption;
    }

    /**
     * Set the option to handle sink table, such as autoCreate. For now only 'autoCreate' value is supported. Type: string (or Expression with resultType string).
     *
     * @param tableOption the tableOption value to set
     * @return the SqlDWSink object itself.
     */
    public SqlDWSink withTableOption(Object tableOption) {
        this.tableOption = tableOption;
        return this;
    }

}
