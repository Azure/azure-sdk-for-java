/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datafactory.v2018_06_01;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.management.datafactory.v2018_06_01.implementation.LinkedServiceInner;

/**
 * Office365 linked service.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", defaultImpl = Office365LinkedService.class)
@JsonTypeName("Office365")
@JsonFlatten
public class Office365LinkedService extends LinkedServiceInner {
    /**
     * Azure tenant ID to which the Office 365 account belongs. Type: string
     * (or Expression with resultType string).
     */
    @JsonProperty(value = "typeProperties.office365TenantId", required = true)
    private Object office365TenantId;

    /**
     * Specify the tenant information under which your Azure AD web application
     * resides. Type: string (or Expression with resultType string).
     */
    @JsonProperty(value = "typeProperties.servicePrincipalTenantId", required = true)
    private Object servicePrincipalTenantId;

    /**
     * Specify the application's client ID. Type: string (or Expression with
     * resultType string).
     */
    @JsonProperty(value = "typeProperties.servicePrincipalId", required = true)
    private Object servicePrincipalId;

    /**
     * Specify the application's key.
     */
    @JsonProperty(value = "typeProperties.servicePrincipalKey", required = true)
    private SecretBase servicePrincipalKey;

    /**
     * The encrypted credential used for authentication. Credentials are
     * encrypted using the integration runtime credential manager. Type: string
     * (or Expression with resultType string).
     */
    @JsonProperty(value = "typeProperties.encryptedCredential")
    private Object encryptedCredential;

    /**
     * Get azure tenant ID to which the Office 365 account belongs. Type: string (or Expression with resultType string).
     *
     * @return the office365TenantId value
     */
    public Object office365TenantId() {
        return this.office365TenantId;
    }

    /**
     * Set azure tenant ID to which the Office 365 account belongs. Type: string (or Expression with resultType string).
     *
     * @param office365TenantId the office365TenantId value to set
     * @return the Office365LinkedService object itself.
     */
    public Office365LinkedService withOffice365TenantId(Object office365TenantId) {
        this.office365TenantId = office365TenantId;
        return this;
    }

    /**
     * Get specify the tenant information under which your Azure AD web application resides. Type: string (or Expression with resultType string).
     *
     * @return the servicePrincipalTenantId value
     */
    public Object servicePrincipalTenantId() {
        return this.servicePrincipalTenantId;
    }

    /**
     * Set specify the tenant information under which your Azure AD web application resides. Type: string (or Expression with resultType string).
     *
     * @param servicePrincipalTenantId the servicePrincipalTenantId value to set
     * @return the Office365LinkedService object itself.
     */
    public Office365LinkedService withServicePrincipalTenantId(Object servicePrincipalTenantId) {
        this.servicePrincipalTenantId = servicePrincipalTenantId;
        return this;
    }

    /**
     * Get specify the application's client ID. Type: string (or Expression with resultType string).
     *
     * @return the servicePrincipalId value
     */
    public Object servicePrincipalId() {
        return this.servicePrincipalId;
    }

    /**
     * Set specify the application's client ID. Type: string (or Expression with resultType string).
     *
     * @param servicePrincipalId the servicePrincipalId value to set
     * @return the Office365LinkedService object itself.
     */
    public Office365LinkedService withServicePrincipalId(Object servicePrincipalId) {
        this.servicePrincipalId = servicePrincipalId;
        return this;
    }

    /**
     * Get specify the application's key.
     *
     * @return the servicePrincipalKey value
     */
    public SecretBase servicePrincipalKey() {
        return this.servicePrincipalKey;
    }

    /**
     * Set specify the application's key.
     *
     * @param servicePrincipalKey the servicePrincipalKey value to set
     * @return the Office365LinkedService object itself.
     */
    public Office365LinkedService withServicePrincipalKey(SecretBase servicePrincipalKey) {
        this.servicePrincipalKey = servicePrincipalKey;
        return this;
    }

    /**
     * Get the encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
     *
     * @return the encryptedCredential value
     */
    public Object encryptedCredential() {
        return this.encryptedCredential;
    }

    /**
     * Set the encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
     *
     * @param encryptedCredential the encryptedCredential value to set
     * @return the Office365LinkedService object itself.
     */
    public Office365LinkedService withEncryptedCredential(Object encryptedCredential) {
        this.encryptedCredential = encryptedCredential;
        return this;
    }

}
