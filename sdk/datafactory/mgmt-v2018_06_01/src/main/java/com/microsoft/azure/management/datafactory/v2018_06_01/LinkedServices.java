/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datafactory.v2018_06_01;

import com.microsoft.azure.arm.collection.SupportsCreating;
import rx.Completable;
import rx.Observable;
import com.microsoft.azure.management.datafactory.v2018_06_01.implementation.LinkedServicesInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing LinkedServices.
 */
public interface LinkedServices extends SupportsCreating<LinkedServiceResource.DefinitionStages.Blank>, HasInner<LinkedServicesInner> {
    /**
     * Gets a linked service.
     *
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param linkedServiceName The linked service name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<LinkedServiceResource> getAsync(String resourceGroupName, String factoryName, String linkedServiceName);

    /**
     * Lists linked services.
     *
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<LinkedServiceResource> listByFactoryAsync(final String resourceGroupName, final String factoryName);

    /**
     * Deletes a linked service.
     *
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param linkedServiceName The linked service name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteAsync(String resourceGroupName, String factoryName, String linkedServiceName);

}
