/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datafactory.v2018_06_01;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.management.datafactory.v2018_06_01.implementation.LinkedServiceInner;

/**
 * Azure Databricks Delta Lake linked service.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", defaultImpl = AzureDatabricksDeltaLakeLinkedService.class)
@JsonTypeName("AzureDatabricksDeltaLake")
@JsonFlatten
public class AzureDatabricksDeltaLakeLinkedService extends LinkedServiceInner {
    /**
     * &lt;REGION&gt;.azuredatabricks.net, domain name of your Databricks
     * deployment. Type: string (or Expression with resultType string).
     */
    @JsonProperty(value = "typeProperties.domain", required = true)
    private Object domain;

    /**
     * Access token for databricks REST API. Refer to
     * https://docs.azuredatabricks.net/api/latest/authentication.html. Type:
     * string, SecureString or AzureKeyVaultSecretReference.
     */
    @JsonProperty(value = "typeProperties.accessToken")
    private SecretBase accessToken;

    /**
     * The id of an existing interactive cluster that will be used for all runs
     * of this job. Type: string (or Expression with resultType string).
     */
    @JsonProperty(value = "typeProperties.clusterId")
    private Object clusterId;

    /**
     * The encrypted credential used for authentication. Credentials are
     * encrypted using the integration runtime credential manager. Type: string
     * (or Expression with resultType string).
     */
    @JsonProperty(value = "typeProperties.encryptedCredential")
    private Object encryptedCredential;

    /**
     * Get &lt;REGION&gt;.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string).
     *
     * @return the domain value
     */
    public Object domain() {
        return this.domain;
    }

    /**
     * Set &lt;REGION&gt;.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string).
     *
     * @param domain the domain value to set
     * @return the AzureDatabricksDeltaLakeLinkedService object itself.
     */
    public AzureDatabricksDeltaLakeLinkedService withDomain(Object domain) {
        this.domain = domain;
        return this;
    }

    /**
     * Get access token for databricks REST API. Refer to https://docs.azuredatabricks.net/api/latest/authentication.html. Type: string, SecureString or AzureKeyVaultSecretReference.
     *
     * @return the accessToken value
     */
    public SecretBase accessToken() {
        return this.accessToken;
    }

    /**
     * Set access token for databricks REST API. Refer to https://docs.azuredatabricks.net/api/latest/authentication.html. Type: string, SecureString or AzureKeyVaultSecretReference.
     *
     * @param accessToken the accessToken value to set
     * @return the AzureDatabricksDeltaLakeLinkedService object itself.
     */
    public AzureDatabricksDeltaLakeLinkedService withAccessToken(SecretBase accessToken) {
        this.accessToken = accessToken;
        return this;
    }

    /**
     * Get the id of an existing interactive cluster that will be used for all runs of this job. Type: string (or Expression with resultType string).
     *
     * @return the clusterId value
     */
    public Object clusterId() {
        return this.clusterId;
    }

    /**
     * Set the id of an existing interactive cluster that will be used for all runs of this job. Type: string (or Expression with resultType string).
     *
     * @param clusterId the clusterId value to set
     * @return the AzureDatabricksDeltaLakeLinkedService object itself.
     */
    public AzureDatabricksDeltaLakeLinkedService withClusterId(Object clusterId) {
        this.clusterId = clusterId;
        return this;
    }

    /**
     * Get the encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
     *
     * @return the encryptedCredential value
     */
    public Object encryptedCredential() {
        return this.encryptedCredential;
    }

    /**
     * Set the encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
     *
     * @param encryptedCredential the encryptedCredential value to set
     * @return the AzureDatabricksDeltaLakeLinkedService object itself.
     */
    public AzureDatabricksDeltaLakeLinkedService withEncryptedCredential(Object encryptedCredential) {
        this.encryptedCredential = encryptedCredential;
        return this;
    }

}
