/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datafactory.v2018_06_01;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * A copy activity snowflake source.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", defaultImpl = SnowflakeSource.class)
@JsonTypeName("SnowflakeSource")
public class SnowflakeSource extends CopySource {
    /**
     * Snowflake Sql query. Type: string (or Expression with resultType
     * string).
     */
    @JsonProperty(value = "query")
    private Object query;

    /**
     * Snowflake export settings.
     */
    @JsonProperty(value = "exportSettings")
    private SnowflakeExportCopyCommand exportSettings;

    /**
     * Get snowflake Sql query. Type: string (or Expression with resultType string).
     *
     * @return the query value
     */
    public Object query() {
        return this.query;
    }

    /**
     * Set snowflake Sql query. Type: string (or Expression with resultType string).
     *
     * @param query the query value to set
     * @return the SnowflakeSource object itself.
     */
    public SnowflakeSource withQuery(Object query) {
        this.query = query;
        return this;
    }

    /**
     * Get snowflake export settings.
     *
     * @return the exportSettings value
     */
    public SnowflakeExportCopyCommand exportSettings() {
        return this.exportSettings;
    }

    /**
     * Set snowflake export settings.
     *
     * @param exportSettings the exportSettings value to set
     * @return the SnowflakeSource object itself.
     */
    public SnowflakeSource withExportSettings(SnowflakeExportCopyCommand exportSettings) {
        this.exportSettings = exportSettings;
        return this;
    }

}
