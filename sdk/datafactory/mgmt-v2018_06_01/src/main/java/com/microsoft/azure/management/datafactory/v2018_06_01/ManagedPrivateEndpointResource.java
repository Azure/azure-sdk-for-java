/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datafactory.v2018_06_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.datafactory.v2018_06_01.implementation.ManagedPrivateEndpointResourceInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.datafactory.v2018_06_01.implementation.DataFactoryManager;
import com.microsoft.azure.management.datafactory.v2018_06_01.implementation.ManagedPrivateEndpointInner;
import java.util.Map;
import java.util.List;

/**
 * Type representing ManagedPrivateEndpointResource.
 */
public interface ManagedPrivateEndpointResource extends HasInner<ManagedPrivateEndpointResourceInner>, Indexable, Refreshable<ManagedPrivateEndpointResource>, Updatable<ManagedPrivateEndpointResource.Update>, HasManager<DataFactoryManager> {
    /**
     * @return the etag value.
     */
    String etag();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the properties value.
     */
    ManagedPrivateEndpointInner properties();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the ManagedPrivateEndpointResource definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithManagedVirtualNetwork, DefinitionStages.WithIfMatch, DefinitionStages.WithProperties, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of ManagedPrivateEndpointResource definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a ManagedPrivateEndpointResource definition.
         */
        interface Blank extends WithManagedVirtualNetwork {
        }

        /**
         * The stage of the managedprivateendpointresource definition allowing to specify ManagedVirtualNetwork.
         */
        interface WithManagedVirtualNetwork {
           /**
            * Specifies resourceGroupName, factoryName, managedVirtualNetworkName.
            * @param resourceGroupName The resource group name
            * @param factoryName The factory name
            * @param managedVirtualNetworkName Managed virtual network name
            * @return the next definition stage
            */
            WithIfMatch withExistingManagedVirtualNetwork(String resourceGroupName, String factoryName, String managedVirtualNetworkName);
        }

        /**
         * The stage of the managedprivateendpointresource definition allowing to specify IfMatch.
         */
        interface WithIfMatch {
           /**
            * Specifies ifMatch.
            * @param ifMatch ETag of the managed private endpoint entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update
            * @return the next definition stage
            */
            WithProperties withIfMatch(String ifMatch);
        }

        /**
         * The stage of the managedprivateendpointresource definition allowing to specify Properties.
         */
        interface WithProperties {
           /**
            * Specifies properties.
            * @param properties Managed private endpoint properties
            * @return the next definition stage
            */
            WithCreate withProperties(ManagedPrivateEndpointInner properties);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<ManagedPrivateEndpointResource> {
        }
    }
    /**
     * The template for a ManagedPrivateEndpointResource update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<ManagedPrivateEndpointResource>, UpdateStages.WithIfMatch, UpdateStages.WithProperties {
    }

    /**
     * Grouping of ManagedPrivateEndpointResource update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the managedprivateendpointresource update allowing to specify IfMatch.
         */
        interface WithIfMatch {
            /**
             * Specifies ifMatch.
             * @param ifMatch ETag of the managed private endpoint entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update
             * @return the next update stage
             */
            Update withIfMatch(String ifMatch);
        }

        /**
         * The stage of the managedprivateendpointresource update allowing to specify Properties.
         */
        interface WithProperties {
            /**
             * Specifies properties.
             * @param properties Managed private endpoint properties
             * @return the next update stage
             */
            Update withProperties(ManagedPrivateEndpointInner properties);
        }

    }
}
