// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.datafactory.DataFactoryManager;
import com.azure.resourcemanager.datafactory.models.IntegrationRuntimeMonitoringData;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IntegrationRuntimesGetMonitoringDataWithResponseMockTests {
    @Test
    public void testGetMonitoringDataWithResponse() throws Exception {
        String responseStr
            = "{\"name\":\"uwbrwoyqty\",\"nodes\":[{\"nodeName\":\"ccumk\",\"availableMemoryInMB\":728800792,\"cpuUtilization\":436941349,\"concurrentJobsLimit\":1852688001,\"concurrentJobsRunning\":2013623616,\"maxConcurrentJobs\":1911258771,\"sentBytes\":4.5306683,\"receivedBytes\":32.07864,\"\":{\"lrfqst\":\"datarbotzvrgoxpayjs\",\"qmlnefvbeyugggf\":\"dataf\",\"aevrkxyjsuappdm\":\"datahntykenmjznjqrxy\",\"syoybjtzdgzt\":\"datajiguusbw\"}},{\"nodeName\":\"qiilfovmcjchbof\",\"availableMemoryInMB\":626803302,\"cpuUtilization\":1317203532,\"concurrentJobsLimit\":867009902,\"concurrentJobsRunning\":299777437,\"maxConcurrentJobs\":1143361378,\"sentBytes\":26.287401,\"receivedBytes\":81.01534,\"\":{\"rcjgkauyzbrd\":\"dataeznkrer\",\"gxqsbwepduyqxv\":\"databdb\",\"yftwdprtpxwgtt\":\"dataxarddbnqyayl\"}},{\"nodeName\":\"bjihz\",\"availableMemoryInMB\":1190147943,\"cpuUtilization\":765252755,\"concurrentJobsLimit\":832580974,\"concurrentJobsRunning\":1491820891,\"maxConcurrentJobs\":2117066441,\"sentBytes\":27.401001,\"receivedBytes\":71.859505,\"\":{\"lqnoeyfufleioyw\":\"datazwstytexueugq\",\"kt\":\"dataclhbytshsat\",\"yzjq\":\"datawqljnuayp\"}},{\"nodeName\":\"qajipnpwom\",\"availableMemoryInMB\":1489726911,\"cpuUtilization\":1683883253,\"concurrentJobsLimit\":508436125,\"concurrentJobsRunning\":961704290,\"maxConcurrentJobs\":2081574756,\"sentBytes\":69.46848,\"receivedBytes\":39.533035,\"\":{\"nw\":\"datadnp\",\"lwoozlfliiru\":\"dataqag\"}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DataFactoryManager manager = DataFactoryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        IntegrationRuntimeMonitoringData response = manager.integrationRuntimes()
            .getMonitoringDataWithResponse("imnfvqaqtzo", "ulwdhjb", "hflbchzoboeeiakw",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("uwbrwoyqty", response.name());
    }
}
