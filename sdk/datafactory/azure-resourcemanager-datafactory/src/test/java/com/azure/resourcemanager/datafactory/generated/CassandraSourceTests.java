// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.CassandraSource;
import com.azure.resourcemanager.datafactory.models.CassandraSourceReadConsistencyLevels;
import org.junit.jupiter.api.Assertions;

public final class CassandraSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CassandraSource model = BinaryData.fromString(
            "{\"type\":\"zeebdefepwkhr\",\"query\":\"datanwohlcahhfuydgd\",\"consistencyLevel\":\"QUORUM\",\"queryTimeout\":\"datayuspz\",\"additionalColumns\":\"datavibp\",\"sourceRetryCount\":\"datazwgbbozivf\",\"sourceRetryWait\":\"dataqvnlhsxea\",\"maxConcurrentConnections\":\"datasqquvv\",\"disableMetricsCollection\":\"datab\",\"\":{\"rsyirfkxazu\":\"dataohdukprqyibwuzvm\",\"qoilgkzn\":\"dataoigorwpbbjzdv\",\"iceqyraj\":\"datazpvjwego\"}}")
            .toObject(CassandraSource.class);
        Assertions.assertEquals(CassandraSourceReadConsistencyLevels.QUORUM, model.consistencyLevel());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CassandraSource model = new CassandraSource().withSourceRetryCount("datazwgbbozivf")
            .withSourceRetryWait("dataqvnlhsxea")
            .withMaxConcurrentConnections("datasqquvv")
            .withDisableMetricsCollection("datab")
            .withQueryTimeout("datayuspz")
            .withAdditionalColumns("datavibp")
            .withQuery("datanwohlcahhfuydgd")
            .withConsistencyLevel(CassandraSourceReadConsistencyLevels.QUORUM);
        model = BinaryData.fromObject(model).toObject(CassandraSource.class);
        Assertions.assertEquals(CassandraSourceReadConsistencyLevels.QUORUM, model.consistencyLevel());
    }
}
