// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.fluent.models.IntegrationRuntimeMonitoringDataInner;
import com.azure.resourcemanager.datafactory.models.IntegrationRuntimeNodeMonitoringData;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class IntegrationRuntimeMonitoringDataInnerTests {
    @Test
    public void testDeserialize() {
        IntegrationRuntimeMonitoringDataInner model =
            BinaryData
                .fromString(
                    "{\"name\":\"gzfbishcbk\",\"nodes\":[{\"nodeName\":\"eyeam\",\"availableMemoryInMB\":1616519742,\"cpuUtilization\":203407725,\"concurrentJobsLimit\":2125402633,\"concurrentJobsRunning\":1821646506,\"maxConcurrentJobs\":324478949,\"sentBytes\":64.098946,\"receivedBytes\":50.20986,\"\":{}},{\"nodeName\":\"nowkgshw\",\"availableMemoryInMB\":595861111,\"cpuUtilization\":691407592,\"concurrentJobsLimit\":775419838,\"concurrentJobsRunning\":828238885,\"maxConcurrentJobs\":1868038426,\"sentBytes\":81.7402,\"receivedBytes\":25.285995,\"\":{}},{\"nodeName\":\"wnuzoqftiyqzrnkc\",\"availableMemoryInMB\":287696022,\"cpuUtilization\":541571882,\"concurrentJobsLimit\":1062459417,\"concurrentJobsRunning\":995801795,\"maxConcurrentJobs\":658066876,\"sentBytes\":76.86453,\"receivedBytes\":63.993477,\"\":{}}]}")
                .toObject(IntegrationRuntimeMonitoringDataInner.class);
        Assertions.assertEquals("gzfbishcbk", model.name());
    }

    @Test
    public void testSerialize() {
        IntegrationRuntimeMonitoringDataInner model =
            new IntegrationRuntimeMonitoringDataInner()
                .withName("gzfbishcbk")
                .withNodes(
                    Arrays
                        .asList(
                            new IntegrationRuntimeNodeMonitoringData()
                                .withAdditionalProperties(
                                    mapOf(
                                        "nodeName",
                                        "eyeam",
                                        "cpuUtilization",
                                        203407725,
                                        "receivedBytes",
                                        50.20986f,
                                        "concurrentJobsLimit",
                                        2125402633,
                                        "concurrentJobsRunning",
                                        1821646506,
                                        "maxConcurrentJobs",
                                        324478949,
                                        "availableMemoryInMB",
                                        1616519742,
                                        "sentBytes",
                                        64.098946f)),
                            new IntegrationRuntimeNodeMonitoringData()
                                .withAdditionalProperties(
                                    mapOf(
                                        "nodeName",
                                        "nowkgshw",
                                        "cpuUtilization",
                                        691407592,
                                        "receivedBytes",
                                        25.285995f,
                                        "concurrentJobsLimit",
                                        775419838,
                                        "concurrentJobsRunning",
                                        828238885,
                                        "maxConcurrentJobs",
                                        1868038426,
                                        "availableMemoryInMB",
                                        595861111,
                                        "sentBytes",
                                        81.7402f)),
                            new IntegrationRuntimeNodeMonitoringData()
                                .withAdditionalProperties(
                                    mapOf(
                                        "nodeName",
                                        "wnuzoqftiyqzrnkc",
                                        "cpuUtilization",
                                        541571882,
                                        "receivedBytes",
                                        63.993477f,
                                        "concurrentJobsLimit",
                                        1062459417,
                                        "concurrentJobsRunning",
                                        995801795,
                                        "maxConcurrentJobs",
                                        658066876,
                                        "availableMemoryInMB",
                                        287696022,
                                        "sentBytes",
                                        76.86453f))));
        model = BinaryData.fromObject(model).toObject(IntegrationRuntimeMonitoringDataInner.class);
        Assertions.assertEquals("gzfbishcbk", model.name());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
