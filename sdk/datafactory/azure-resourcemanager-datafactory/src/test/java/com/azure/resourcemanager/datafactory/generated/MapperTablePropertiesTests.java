// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.fluent.models.MapperTableProperties;
import com.azure.resourcemanager.datafactory.models.MapperDslConnectorProperties;
import com.azure.resourcemanager.datafactory.models.MapperTableSchema;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MapperTablePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MapperTableProperties model = BinaryData.fromString(
            "{\"schema\":[{\"name\":\"wetp\",\"dataType\":\"ycyqiqyhgfsetzl\"},{\"name\":\"bsfledynojpziu\",\"dataType\":\"bzkkd\"}],\"dslConnectorProperties\":[{\"name\":\"sycljsel\",\"value\":\"datapbafvafhlbylc\"},{\"name\":\"evxrhyz\",\"value\":\"datawrso\"},{\"name\":\"ltdb\",\"value\":\"datairrhv\"}]}")
            .toObject(MapperTableProperties.class);
        Assertions.assertEquals("wetp", model.schema().get(0).name());
        Assertions.assertEquals("ycyqiqyhgfsetzl", model.schema().get(0).dataType());
        Assertions.assertEquals("sycljsel", model.dslConnectorProperties().get(0).name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MapperTableProperties model = new MapperTableProperties()
            .withSchema(Arrays.asList(new MapperTableSchema().withName("wetp").withDataType("ycyqiqyhgfsetzl"),
                new MapperTableSchema().withName("bsfledynojpziu").withDataType("bzkkd")))
            .withDslConnectorProperties(
                Arrays.asList(new MapperDslConnectorProperties().withName("sycljsel").withValue("datapbafvafhlbylc"),
                    new MapperDslConnectorProperties().withName("evxrhyz").withValue("datawrso"),
                    new MapperDslConnectorProperties().withName("ltdb").withValue("datairrhv")));
        model = BinaryData.fromObject(model).toObject(MapperTableProperties.class);
        Assertions.assertEquals("wetp", model.schema().get(0).name());
        Assertions.assertEquals("ycyqiqyhgfsetzl", model.schema().get(0).dataType());
        Assertions.assertEquals("sycljsel", model.dslConnectorProperties().get(0).name());
    }
}
