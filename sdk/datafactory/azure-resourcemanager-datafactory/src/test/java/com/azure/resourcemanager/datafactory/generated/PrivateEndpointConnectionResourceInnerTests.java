// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.fluent.models.PrivateEndpointConnectionResourceInner;
import com.azure.resourcemanager.datafactory.models.ArmIdWrapper;
import com.azure.resourcemanager.datafactory.models.PrivateLinkConnectionState;
import com.azure.resourcemanager.datafactory.models.RemotePrivateEndpointConnection;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class PrivateEndpointConnectionResourceInnerTests {
    @Test
    public void testDeserialize() {
        PrivateEndpointConnectionResourceInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"provisioningState\":\"dxtqmieoxo\",\"privateEndpoint\":{\"id\":\"ufhyaomtbgh\"},\"privateLinkServiceConnectionState\":{\"status\":\"grvk\",\"description\":\"ovjzhpjbibgjmfx\",\"actionsRequired\":\"vfcluyovwxnbkfe\"}},\"name\":\"xscyhwzdgirujbz\",\"type\":\"mvzzbtdcqvp\",\"etag\":\"yujviylwdshfssn\",\"id\":\"gy\"}")
                .toObject(PrivateEndpointConnectionResourceInner.class);
        Assertions.assertEquals("gy", model.id());
        Assertions.assertEquals("grvk", model.properties().privateLinkServiceConnectionState().status());
        Assertions
            .assertEquals("ovjzhpjbibgjmfx", model.properties().privateLinkServiceConnectionState().description());
        Assertions
            .assertEquals("vfcluyovwxnbkfe", model.properties().privateLinkServiceConnectionState().actionsRequired());
    }

    @Test
    public void testSerialize() {
        PrivateEndpointConnectionResourceInner model =
            new PrivateEndpointConnectionResourceInner()
                .withId("gy")
                .withProperties(
                    new RemotePrivateEndpointConnection()
                        .withPrivateEndpoint(new ArmIdWrapper())
                        .withPrivateLinkServiceConnectionState(
                            new PrivateLinkConnectionState()
                                .withStatus("grvk")
                                .withDescription("ovjzhpjbibgjmfx")
                                .withActionsRequired("vfcluyovwxnbkfe")));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionResourceInner.class);
        Assertions.assertEquals("gy", model.id());
        Assertions.assertEquals("grvk", model.properties().privateLinkServiceConnectionState().status());
        Assertions
            .assertEquals("ovjzhpjbibgjmfx", model.properties().privateLinkServiceConnectionState().description());
        Assertions
            .assertEquals("vfcluyovwxnbkfe", model.properties().privateLinkServiceConnectionState().actionsRequired());
    }
}
