// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SparkSource;

public final class SparkSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SparkSource model =
            BinaryData
                .fromString(
                    "{\"type\":\"SparkSource\",\"query\":\"datasr\",\"queryTimeout\":\"datafagoov\",\"additionalColumns\":\"datazysvnvrfjgbxu\",\"sourceRetryCount\":\"datahgonovwu\",\"sourceRetryWait\":\"dataarowrm\",\"maxConcurrentConnections\":\"dataziubkyvcgkoufwk\",\"disableMetricsCollection\":\"datamytlxrwdjby\",\"\":{\"makxyhuetztorh\":\"datafmsxamncuhxz\",\"jqgzloorhxdu\":\"dataeuuysszhse\",\"akgd\":\"dataegljqpyxi\",\"qwgoomapc\":\"dataanmhvwgchgpbd\"}}")
                .toObject(SparkSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SparkSource model =
            new SparkSource()
                .withSourceRetryCount("datahgonovwu")
                .withSourceRetryWait("dataarowrm")
                .withMaxConcurrentConnections("dataziubkyvcgkoufwk")
                .withDisableMetricsCollection("datamytlxrwdjby")
                .withQueryTimeout("datafagoov")
                .withAdditionalColumns("datazysvnvrfjgbxu")
                .withQuery("datasr");
        model = BinaryData.fromObject(model).toObject(SparkSource.class);
    }
}
