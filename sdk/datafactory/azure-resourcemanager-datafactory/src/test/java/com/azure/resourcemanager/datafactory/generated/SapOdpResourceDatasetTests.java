// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.SapOdpResourceDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SapOdpResourceDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SapOdpResourceDataset model = BinaryData.fromString(
            "{\"type\":\"vuqzgbjwvrudmp\",\"typeProperties\":{\"context\":\"dataick\",\"objectName\":\"datakithueoc\"},\"description\":\"wpm\",\"structure\":\"dataleajabesgyzwp\",\"schema\":\"datajkscecmbaajdfw\",\"linkedServiceName\":{\"referenceName\":\"dkqlvzkf\",\"parameters\":{\"b\":\"dataesbpjqtl\"}},\"parameters\":{\"rr\":{\"type\":\"Array\",\"defaultValue\":\"datauibs\"},\"rcpzhbwcxybtdzyc\":{\"type\":\"String\",\"defaultValue\":\"dataeqrypyurvshhovtu\"},\"wczsrazcbybic\":{\"type\":\"Bool\",\"defaultValue\":\"dataoegjzgpljb\"},\"pua\":{\"type\":\"SecureString\",\"defaultValue\":\"datah\"}},\"annotations\":[\"datai\"],\"folder\":{\"name\":\"mu\"},\"\":{\"enndzgthdzit\":\"datawuycuo\",\"vswtwonadezm\":\"datazffpherwj\"}}")
            .toObject(SapOdpResourceDataset.class);
        Assertions.assertEquals("wpm", model.description());
        Assertions.assertEquals("dkqlvzkf", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.ARRAY, model.parameters().get("rr").type());
        Assertions.assertEquals("mu", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SapOdpResourceDataset model = new SapOdpResourceDataset().withDescription("wpm")
            .withStructure("dataleajabesgyzwp")
            .withSchema("datajkscecmbaajdfw")
            .withLinkedServiceName(
                new LinkedServiceReference().withReferenceName("dkqlvzkf").withParameters(mapOf("b", "dataesbpjqtl")))
            .withParameters(
                mapOf("rr", new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("datauibs"),
                    "rcpzhbwcxybtdzyc",
                    new ParameterSpecification().withType(ParameterType.STRING)
                        .withDefaultValue("dataeqrypyurvshhovtu"),
                    "wczsrazcbybic",
                    new ParameterSpecification().withType(ParameterType.BOOL).withDefaultValue("dataoegjzgpljb"), "pua",
                    new ParameterSpecification().withType(ParameterType.SECURE_STRING).withDefaultValue("datah")))
            .withAnnotations(Arrays.asList("datai"))
            .withFolder(new DatasetFolder().withName("mu"))
            .withContext("dataick")
            .withObjectName("datakithueoc");
        model = BinaryData.fromObject(model).toObject(SapOdpResourceDataset.class);
        Assertions.assertEquals("wpm", model.description());
        Assertions.assertEquals("dkqlvzkf", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.ARRAY, model.parameters().get("rr").type());
        Assertions.assertEquals("mu", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
