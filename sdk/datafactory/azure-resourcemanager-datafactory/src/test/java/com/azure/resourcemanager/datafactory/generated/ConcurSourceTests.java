// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.ConcurSource;

public final class ConcurSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ConcurSource model = BinaryData.fromString(
            "{\"type\":\"ConcurSource\",\"query\":\"datakrjolbaegha\",\"queryTimeout\":\"datascismr\",\"additionalColumns\":\"dataeklf\",\"sourceRetryCount\":\"datanys\",\"sourceRetryWait\":\"datalxt\",\"maxConcurrentConnections\":\"dataodwqzbiuk\",\"disableMetricsCollection\":\"datafyfvyzaofaiwlnfv\",\"\":{\"jluaywgcjqnfa\":\"datauuqafolseyxpgkml\",\"slwve\":\"datapyglnfw\",\"ekst\":\"datablucpmqwkfgmkp\",\"ajfers\":\"dataqzhdwr\"}}")
            .toObject(ConcurSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ConcurSource model = new ConcurSource().withSourceRetryCount("datanys")
            .withSourceRetryWait("datalxt")
            .withMaxConcurrentConnections("dataodwqzbiuk")
            .withDisableMetricsCollection("datafyfvyzaofaiwlnfv")
            .withQueryTimeout("datascismr")
            .withAdditionalColumns("dataeklf")
            .withQuery("datakrjolbaegha");
        model = BinaryData.fromObject(model).toObject(ConcurSource.class);
    }
}
