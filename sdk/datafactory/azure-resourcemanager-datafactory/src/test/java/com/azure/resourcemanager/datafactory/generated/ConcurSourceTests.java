// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.ConcurSource;

public final class ConcurSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ConcurSource model = BinaryData.fromString(
            "{\"type\":\"ConcurSource\",\"query\":\"datasmgh\",\"queryTimeout\":\"datatuujcuavctxyrmws\",\"additionalColumns\":\"datazmy\",\"sourceRetryCount\":\"datan\",\"sourceRetryWait\":\"dataajxv\",\"maxConcurrentConnections\":\"dataidlwmewrgu\",\"disableMetricsCollection\":\"dataugpkunvygupgnnvm\",\"\":{\"ekmsn\":\"dataqmxww\",\"jypxcqmdeecdh\":\"datafjbefszfrxfy\",\"mykgrtwh\":\"datajsizyhp\"}}")
            .toObject(ConcurSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ConcurSource model = new ConcurSource().withSourceRetryCount("datan")
            .withSourceRetryWait("dataajxv")
            .withMaxConcurrentConnections("dataidlwmewrgu")
            .withDisableMetricsCollection("dataugpkunvygupgnnvm")
            .withQueryTimeout("datatuujcuavctxyrmws")
            .withAdditionalColumns("datazmy")
            .withQuery("datasmgh");
        model = BinaryData.fromObject(model).toObject(ConcurSource.class);
    }
}
