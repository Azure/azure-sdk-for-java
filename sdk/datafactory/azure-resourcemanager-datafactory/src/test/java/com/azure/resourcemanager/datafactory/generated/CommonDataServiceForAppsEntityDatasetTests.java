// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.CommonDataServiceForAppsEntityDataset;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class CommonDataServiceForAppsEntityDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CommonDataServiceForAppsEntityDataset model = BinaryData.fromString(
            "{\"type\":\"CommonDataServiceForAppsEntity\",\"typeProperties\":{\"entityName\":\"datazokn\"},\"description\":\"qddlggbq\",\"structure\":\"datalgzubak\",\"schema\":\"datakvggcmfns\",\"linkedServiceName\":{\"referenceName\":\"f\",\"parameters\":{\"gsmepnqvxgvoh\":\"datakmixwewzls\",\"pfhga\":\"databthhxmoevvude\",\"gayb\":\"datanvwxqhpjhubohxv\"}},\"parameters\":{\"v\":{\"type\":\"Float\",\"defaultValue\":\"datagalgxnwfm\"},\"fcssanybzzghvd\":{\"type\":\"String\",\"defaultValue\":\"datauebpamq\"}},\"annotations\":[\"datamyjsvcdhly\",\"datakh\"],\"folder\":{\"name\":\"junzxezriwg\"},\"\":{\"itibenwsdf\":\"dataapcqksaaapxjh\",\"ireszyaqg\":\"datavdaahlfrcqklpmvz\",\"cjjlwkyeahhhut\":\"datamlbmfggeokfe\",\"inowrerjpxp\":\"dataulnrfcqufmcih\"}}")
            .toObject(CommonDataServiceForAppsEntityDataset.class);
        Assertions.assertEquals("qddlggbq", model.description());
        Assertions.assertEquals("f", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.FLOAT, model.parameters().get("v").type());
        Assertions.assertEquals("junzxezriwg", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CommonDataServiceForAppsEntityDataset model = new CommonDataServiceForAppsEntityDataset()
            .withDescription("qddlggbq")
            .withStructure("datalgzubak")
            .withSchema("datakvggcmfns")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("f")
                .withParameters(mapOf("gsmepnqvxgvoh", "datakmixwewzls", "pfhga", "databthhxmoevvude", "gayb",
                    "datanvwxqhpjhubohxv")))
            .withParameters(
                mapOf("v", new ParameterSpecification().withType(ParameterType.FLOAT).withDefaultValue("datagalgxnwfm"),
                    "fcssanybzzghvd",
                    new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("datauebpamq")))
            .withAnnotations(Arrays.asList("datamyjsvcdhly", "datakh"))
            .withFolder(new DatasetFolder().withName("junzxezriwg"))
            .withEntityName("datazokn");
        model = BinaryData.fromObject(model).toObject(CommonDataServiceForAppsEntityDataset.class);
        Assertions.assertEquals("qddlggbq", model.description());
        Assertions.assertEquals("f", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.FLOAT, model.parameters().get("v").type());
        Assertions.assertEquals("junzxezriwg", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
