// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.datafactory.DataFactoryManager;
import com.azure.resourcemanager.datafactory.models.SelfHostedIntegrationRuntimeNode;
import com.azure.resourcemanager.datafactory.models.UpdateIntegrationRuntimeNodeRequest;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IntegrationRuntimeNodesUpdateWithResponseMockTests {
    @Test
    public void testUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"nodeName\":\"dibdbkgx\",\"machineName\":\"bwepduyqx\",\"hostServiceUri\":\"xarddbnqyayl\",\"status\":\"NeedRegistration\",\"capabilities\":{\"pxbjihz\":\"dprtpxwgt\",\"dnljpouz\":\"xndnbzhs\",\"ugqllq\":\"stytexu\"},\"versionStatus\":\"eyfuf\",\"version\":\"ioyw\",\"registerTime\":\"2021-04-12T09:41:48Z\",\"lastConnectTime\":\"2021-07-14T20:04:05Z\",\"expiryTime\":\"2021-03-23T09:37:38Z\",\"lastStartTime\":\"2021-12-05T19:22:06Z\",\"lastStopTime\":\"2021-09-27T23:49Z\",\"lastUpdateResult\":\"Succeed\",\"lastStartUpdateTime\":\"2021-08-11T04:14:48Z\",\"lastEndUpdateTime\":\"2021-06-16T16:09:13Z\",\"isActiveDispatcher\":true,\"concurrentJobsLimit\":1334488394,\"maxConcurrentJobs\":1334330909,\"\":{\"pwom\":\"datatyzjqteqajip\",\"segyt\":\"datal\",\"nw\":\"datauktcqggxdnp\",\"lwoozlfliiru\":\"dataqag\"}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DataFactoryManager manager = DataFactoryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SelfHostedIntegrationRuntimeNode response = manager.integrationRuntimeNodes()
            .updateWithResponse("vmc", "chbofqd", "qvjfszvecedoptez", "krerurcjgkau",
                new UpdateIntegrationRuntimeNodeRequest().withConcurrentJobsLimit(943572631),
                com.azure.core.util.Context.NONE)
            .getValue();

    }
}
