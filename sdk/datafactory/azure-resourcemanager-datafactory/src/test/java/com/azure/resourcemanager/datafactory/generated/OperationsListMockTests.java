// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.datafactory.DataFactoryManager;
import com.azure.resourcemanager.datafactory.models.Operation;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OperationsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"name\":\"b\",\"origin\":\"eiakwdtuwbrw\",\"display\":{\"description\":\"tyuywzccumkliygr\",\"provider\":\"olvitbtloxr\",\"resource\":\"tzvrgoxpayjs\",\"operation\":\"rfqstbfuqmlnefvb\"},\"properties\":{\"serviceSpecification\":{\"logSpecifications\":[{\"name\":\"fshntykenmjznjq\",\"displayName\":\"yaaevrkxyjsuapp\",\"blobDuration\":\"ujiguusbwmsy\"},{\"name\":\"bjtzd\",\"displayName\":\"twkq\",\"blobDuration\":\"lfovmc\"}],\"metricSpecifications\":[{\"name\":\"ofqdvqvjfszvece\",\"displayName\":\"ptez\",\"displayDescription\":\"r\",\"unit\":\"urcjgkau\",\"aggregationType\":\"brdibdbkgxqs\",\"enableRegionalMdmAccount\":\"epduy\",\"sourceMdmAccount\":\"vjxarddb\",\"sourceMdmNamespace\":\"yaylt\",\"availabilities\":[{}],\"dimensions\":[{},{},{}]}]}}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DataFactoryManager manager = DataFactoryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Operation> response = manager.operations().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("b", response.iterator().next().name());
        Assertions.assertEquals("eiakwdtuwbrw", response.iterator().next().origin());
        Assertions.assertEquals("tyuywzccumkliygr", response.iterator().next().display().description());
        Assertions.assertEquals("olvitbtloxr", response.iterator().next().display().provider());
        Assertions.assertEquals("tzvrgoxpayjs", response.iterator().next().display().resource());
        Assertions.assertEquals("rfqstbfuqmlnefvb", response.iterator().next().display().operation());
        Assertions.assertEquals("fshntykenmjznjq",
            response.iterator().next().serviceSpecification().logSpecifications().get(0).name());
        Assertions.assertEquals("yaaevrkxyjsuapp",
            response.iterator().next().serviceSpecification().logSpecifications().get(0).displayName());
        Assertions.assertEquals("ujiguusbwmsy",
            response.iterator().next().serviceSpecification().logSpecifications().get(0).blobDuration());
        Assertions.assertEquals("ofqdvqvjfszvece",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).name());
        Assertions.assertEquals("ptez",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).displayName());
        Assertions.assertEquals("r",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).displayDescription());
        Assertions.assertEquals("urcjgkau",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).unit());
        Assertions.assertEquals("brdibdbkgxqs",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).aggregationType());
        Assertions.assertEquals("epduy",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).enableRegionalMdmAccount());
        Assertions.assertEquals("vjxarddb",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).sourceMdmAccount());
        Assertions.assertEquals("yaylt",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).sourceMdmNamespace());
    }
}
