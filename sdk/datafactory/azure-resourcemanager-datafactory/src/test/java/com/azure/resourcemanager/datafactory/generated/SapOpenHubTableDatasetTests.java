// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.SapOpenHubTableDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SapOpenHubTableDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SapOpenHubTableDataset model = BinaryData.fromString(
            "{\"type\":\"SapOpenHubTable\",\"typeProperties\":{\"openHubDestinationName\":\"datagenlrjcsmwevguyf\",\"excludeLastRequest\":\"dataxelrjk\",\"baseRequestId\":\"datacdetowwezhy\"},\"description\":\"di\",\"structure\":\"datawqlqacs\",\"schema\":\"databirtybcelfjn\",\"linkedServiceName\":{\"referenceName\":\"odnjyhzfaxskdv\",\"parameters\":{\"pegqxsorch\":\"dataumo\",\"kbmpw\":\"datazrqoxzyhlbeqvh\",\"zgaefhawkmib\":\"dataslajgg\",\"wi\":\"datay\"}},\"parameters\":{\"u\":{\"type\":\"Int\",\"defaultValue\":\"dataupdyttqm\"},\"s\":{\"type\":\"Array\",\"defaultValue\":\"datal\"}},\"annotations\":[\"datahhtuqmtxynof\",\"dataqobfixngxebihe\"],\"folder\":{\"name\":\"kingiqcdolrpgu\"},\"\":{\"dafbncuy\":\"datalbsm\",\"fzxjzi\":\"dataeykcnhpplzh\",\"wnuwkkfzzetl\":\"dataucrln\",\"vwywjvrlgqpwwlzp\":\"datahdyxz\"}}")
            .toObject(SapOpenHubTableDataset.class);
        Assertions.assertEquals("di", model.description());
        Assertions.assertEquals("odnjyhzfaxskdv", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.INT, model.parameters().get("u").type());
        Assertions.assertEquals("kingiqcdolrpgu", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SapOpenHubTableDataset model = new SapOpenHubTableDataset().withDescription("di")
            .withStructure("datawqlqacs")
            .withSchema("databirtybcelfjn")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("odnjyhzfaxskdv")
                .withParameters(mapOf("pegqxsorch", "dataumo", "kbmpw", "datazrqoxzyhlbeqvh", "zgaefhawkmib",
                    "dataslajgg", "wi", "datay")))
            .withParameters(
                mapOf("u", new ParameterSpecification().withType(ParameterType.INT).withDefaultValue("dataupdyttqm"),
                    "s", new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("datal")))
            .withAnnotations(Arrays.asList("datahhtuqmtxynof", "dataqobfixngxebihe"))
            .withFolder(new DatasetFolder().withName("kingiqcdolrpgu"))
            .withOpenHubDestinationName("datagenlrjcsmwevguyf")
            .withExcludeLastRequest("dataxelrjk")
            .withBaseRequestId("datacdetowwezhy");
        model = BinaryData.fromObject(model).toObject(SapOpenHubTableDataset.class);
        Assertions.assertEquals("di", model.description());
        Assertions.assertEquals("odnjyhzfaxskdv", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.INT, model.parameters().get("u").type());
        Assertions.assertEquals("kingiqcdolrpgu", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
