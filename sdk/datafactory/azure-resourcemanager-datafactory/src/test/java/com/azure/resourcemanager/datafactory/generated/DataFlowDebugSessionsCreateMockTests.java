// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.datafactory.DataFactoryManager;
import com.azure.resourcemanager.datafactory.models.CreateDataFlowDebugSessionRequest;
import com.azure.resourcemanager.datafactory.models.CreateDataFlowDebugSessionResponse;
import com.azure.resourcemanager.datafactory.models.IntegrationRuntimeDebugResource;
import com.azure.resourcemanager.datafactory.models.SelfHostedIntegrationRuntime;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DataFlowDebugSessionsCreateMockTests {
    @Test
    public void testCreate() throws Exception {
        String responseStr = "{\"status\":\"yputnywwtfnx\",\"sessionId\":\"punowvavd\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DataFactoryManager manager = DataFactoryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        CreateDataFlowDebugSessionResponse response = manager.dataFlowDebugSessions()
            .create("prwgbvdtgaha", "szynsxxnljfsfxtt",
                new CreateDataFlowDebugSessionRequest().withComputeType("edgsceme")
                    .withCoreCount(2066654081)
                    .withTimeToLive(948042645)
                    .withIntegrationRuntime(new IntegrationRuntimeDebugResource().withName("dmtylq")
                        .withProperties(new SelfHostedIntegrationRuntime().withDescription("eh"))),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("yputnywwtfnx", response.status());
        Assertions.assertEquals("punowvavd", response.sessionId());
    }
}
