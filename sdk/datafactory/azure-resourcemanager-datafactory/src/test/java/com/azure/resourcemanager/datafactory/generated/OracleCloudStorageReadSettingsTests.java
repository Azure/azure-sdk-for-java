// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.OracleCloudStorageReadSettings;

public final class OracleCloudStorageReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OracleCloudStorageReadSettings model = BinaryData.fromString(
            "{\"type\":\"OracleCloudStorageReadSettings\",\"recursive\":\"datanhhiofcnyzqznld\",\"wildcardFolderPath\":\"datagqwmlleguc\",\"wildcardFileName\":\"dataagsyljwwp\",\"prefix\":\"datahphlajmikqvn\",\"fileListPath\":\"datakjopbgtzrgyrldo\",\"enablePartitionDiscovery\":\"dataldglz\",\"partitionRootPath\":\"dataxftjrederkvbdvla\",\"deleteFilesAfterCompletion\":\"dataxa\",\"modifiedDatetimeStart\":\"datajr\",\"modifiedDatetimeEnd\":\"datatghdwrvffjpwszlf\",\"maxConcurrentConnections\":\"datatg\",\"disableMetricsCollection\":\"datatcplxidiuxzzhl\",\"\":{\"vrbb\":\"datavirpuwacfqn\"}}")
            .toObject(OracleCloudStorageReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OracleCloudStorageReadSettings model = new OracleCloudStorageReadSettings()
            .withMaxConcurrentConnections("datatg").withDisableMetricsCollection("datatcplxidiuxzzhl")
            .withRecursive("datanhhiofcnyzqznld").withWildcardFolderPath("datagqwmlleguc")
            .withWildcardFileName("dataagsyljwwp").withPrefix("datahphlajmikqvn")
            .withFileListPath("datakjopbgtzrgyrldo").withEnablePartitionDiscovery("dataldglz")
            .withPartitionRootPath("dataxftjrederkvbdvla").withDeleteFilesAfterCompletion("dataxa")
            .withModifiedDatetimeStart("datajr").withModifiedDatetimeEnd("datatghdwrvffjpwszlf");
        model = BinaryData.fromObject(model).toObject(OracleCloudStorageReadSettings.class);
    }
}
