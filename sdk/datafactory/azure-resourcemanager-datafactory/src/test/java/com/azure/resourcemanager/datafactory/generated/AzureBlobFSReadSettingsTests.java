// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzureBlobFSReadSettings;

public final class AzureBlobFSReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureBlobFSReadSettings model = BinaryData.fromString(
            "{\"type\":\"AzureBlobFSReadSettings\",\"recursive\":\"datagro\",\"wildcardFolderPath\":\"dataxsqdzyyalrx\",\"wildcardFileName\":\"dataqpqfw\",\"fileListPath\":\"datalfjkbaxv\",\"enablePartitionDiscovery\":\"dataeimuipggt\",\"partitionRootPath\":\"dataxbfhb\",\"deleteFilesAfterCompletion\":\"dataldziph\",\"modifiedDatetimeStart\":\"datafefznxcleyamv\",\"modifiedDatetimeEnd\":\"datatjjhqvypqgncgw\",\"maxConcurrentConnections\":\"databtkafcnfit\",\"disableMetricsCollection\":\"datack\",\"\":{\"goudcl\":\"datawyjdvyxxbawjgy\",\"disjeovgc\":\"dataidqlynx\"}}")
            .toObject(AzureBlobFSReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureBlobFSReadSettings model = new AzureBlobFSReadSettings().withMaxConcurrentConnections("databtkafcnfit")
            .withDisableMetricsCollection("datack")
            .withRecursive("datagro")
            .withWildcardFolderPath("dataxsqdzyyalrx")
            .withWildcardFileName("dataqpqfw")
            .withFileListPath("datalfjkbaxv")
            .withEnablePartitionDiscovery("dataeimuipggt")
            .withPartitionRootPath("dataxbfhb")
            .withDeleteFilesAfterCompletion("dataldziph")
            .withModifiedDatetimeStart("datafefznxcleyamv")
            .withModifiedDatetimeEnd("datatjjhqvypqgncgw");
        model = BinaryData.fromObject(model).toObject(AzureBlobFSReadSettings.class);
    }
}
