// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzureBlobFSReadSettings;

public final class AzureBlobFSReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureBlobFSReadSettings model = BinaryData.fromString(
            "{\"type\":\"AzureBlobFSReadSettings\",\"recursive\":\"dataejkvcimq\",\"wildcardFolderPath\":\"datad\",\"wildcardFileName\":\"datahhwtgcgefayc\",\"fileListPath\":\"datagotbjnxozi\",\"enablePartitionDiscovery\":\"dataxnpov\",\"partitionRootPath\":\"dataxl\",\"deleteFilesAfterCompletion\":\"datamsgdisupnxth\",\"modifiedDatetimeStart\":\"datazdvokxuyhhrdi\",\"modifiedDatetimeEnd\":\"databqeahgsibldxyaq\",\"maxConcurrentConnections\":\"dataaznz\",\"disableMetricsCollection\":\"datazfhh\",\"\":{\"ihn\":\"dataxkgnryalkfdxa\",\"dwyehqnxuffgjyn\":\"datardh\"}}")
            .toObject(AzureBlobFSReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureBlobFSReadSettings model = new AzureBlobFSReadSettings().withMaxConcurrentConnections("dataaznz")
            .withDisableMetricsCollection("datazfhh")
            .withRecursive("dataejkvcimq")
            .withWildcardFolderPath("datad")
            .withWildcardFileName("datahhwtgcgefayc")
            .withFileListPath("datagotbjnxozi")
            .withEnablePartitionDiscovery("dataxnpov")
            .withPartitionRootPath("dataxl")
            .withDeleteFilesAfterCompletion("datamsgdisupnxth")
            .withModifiedDatetimeStart("datazdvokxuyhhrdi")
            .withModifiedDatetimeEnd("databqeahgsibldxyaq");
        model = BinaryData.fromObject(model).toObject(AzureBlobFSReadSettings.class);
    }
}
