// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzureBlobFSReadSettings;

public final class AzureBlobFSReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureBlobFSReadSettings model = BinaryData.fromString(
            "{\"type\":\"AzureBlobFSReadSettings\",\"recursive\":\"databbhukx\",\"wildcardFolderPath\":\"datahyr\",\"wildcardFileName\":\"dataqpgadesnesg\",\"fileListPath\":\"datadvgxte\",\"enablePartitionDiscovery\":\"datasictoq\",\"partitionRootPath\":\"datazmznoe\",\"deleteFilesAfterCompletion\":\"dataduyqb\",\"modifiedDatetimeStart\":\"datayzajdpbnbp\",\"modifiedDatetimeEnd\":\"datanopryutx\",\"maxConcurrentConnections\":\"datanighcx\",\"disableMetricsCollection\":\"datahiihg\",\"\":{\"ipfudzntbzg\":\"dataheitty\",\"kwypbq\":\"datagw\"}}")
            .toObject(AzureBlobFSReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureBlobFSReadSettings model = new AzureBlobFSReadSettings().withMaxConcurrentConnections("datanighcx")
            .withDisableMetricsCollection("datahiihg").withRecursive("databbhukx").withWildcardFolderPath("datahyr")
            .withWildcardFileName("dataqpgadesnesg").withFileListPath("datadvgxte")
            .withEnablePartitionDiscovery("datasictoq").withPartitionRootPath("datazmznoe")
            .withDeleteFilesAfterCompletion("dataduyqb").withModifiedDatetimeStart("datayzajdpbnbp")
            .withModifiedDatetimeEnd("datanopryutx");
        model = BinaryData.fromObject(model).toObject(AzureBlobFSReadSettings.class);
    }
}
