// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.XeroSource;

public final class XeroSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        XeroSource model = BinaryData.fromString(
            "{\"type\":\"XeroSource\",\"query\":\"datahnklesvzdvak\",\"queryTimeout\":\"datajiantcy\",\"additionalColumns\":\"datatrdukdmsktuvjh\",\"sourceRetryCount\":\"datatvyt\",\"sourceRetryWait\":\"datafbsgrzw\",\"maxConcurrentConnections\":\"datadudxqebtrpsplwt\",\"disableMetricsCollection\":\"datacseybvtgcoznnjqx\",\"\":{\"otlymybmgmrkxk\":\"datanku\",\"vfh\":\"datatuynugptfjpi\",\"pzhuhuj\":\"datatqqshb\"}}")
            .toObject(XeroSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        XeroSource model = new XeroSource().withSourceRetryCount("datatvyt")
            .withSourceRetryWait("datafbsgrzw")
            .withMaxConcurrentConnections("datadudxqebtrpsplwt")
            .withDisableMetricsCollection("datacseybvtgcoznnjqx")
            .withQueryTimeout("datajiantcy")
            .withAdditionalColumns("datatrdukdmsktuvjh")
            .withQuery("datahnklesvzdvak");
        model = BinaryData.fromObject(model).toObject(XeroSource.class);
    }
}
