// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AmazonRedshiftTableDataset;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AmazonRedshiftTableDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AmazonRedshiftTableDataset model = BinaryData.fromString(
            "{\"type\":\"hjbozvoo\",\"typeProperties\":{\"tableName\":\"datajejqa\",\"table\":\"datausqpfzxkczbd\",\"schema\":\"databb\"},\"description\":\"clnh\",\"structure\":\"datacyuzlybqscibv\",\"schema\":\"datakvck\",\"linkedServiceName\":{\"referenceName\":\"afnwqh\",\"parameters\":{\"mgjz\":\"datacnviulby\",\"wpbgumwhmxp\":\"datay\",\"trvlv\":\"datacknsastlpsmgomic\",\"xok\":\"dataj\"}},\"parameters\":{\"emklphx\":{\"type\":\"Float\",\"defaultValue\":\"dataecjrzvlcivqx\"}},\"annotations\":[\"datalojkbgnfbrzj\",\"datafsunh\",\"dataevlahxczywyw\",\"dataahwcorewcnn\"],\"folder\":{\"name\":\"qjfdajr\"},\"\":{\"bxexf\":\"datamomggewd\",\"vussuqks\":\"dataz\",\"qbyeywpmoh\":\"datawsfxay\",\"dzt\":\"datartlikff\"}}")
            .toObject(AmazonRedshiftTableDataset.class);
        Assertions.assertEquals("clnh", model.description());
        Assertions.assertEquals("afnwqh", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.FLOAT, model.parameters().get("emklphx").type());
        Assertions.assertEquals("qjfdajr", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AmazonRedshiftTableDataset model = new AmazonRedshiftTableDataset().withDescription("clnh")
            .withStructure("datacyuzlybqscibv")
            .withSchema("datakvck")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("afnwqh")
                .withParameters(mapOf("mgjz", "datacnviulby", "wpbgumwhmxp", "datay", "trvlv", "datacknsastlpsmgomic",
                    "xok", "dataj")))
            .withParameters(mapOf("emklphx",
                new ParameterSpecification().withType(ParameterType.FLOAT).withDefaultValue("dataecjrzvlcivqx")))
            .withAnnotations(Arrays.asList("datalojkbgnfbrzj", "datafsunh", "dataevlahxczywyw", "dataahwcorewcnn"))
            .withFolder(new DatasetFolder().withName("qjfdajr"))
            .withTableName("datajejqa")
            .withTable("datausqpfzxkczbd")
            .withSchemaTypePropertiesSchema("databb");
        model = BinaryData.fromObject(model).toObject(AmazonRedshiftTableDataset.class);
        Assertions.assertEquals("clnh", model.description());
        Assertions.assertEquals("afnwqh", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.FLOAT, model.parameters().get("emklphx").type());
        Assertions.assertEquals("qjfdajr", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
