// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.OperationLogSpecification;
import com.azure.resourcemanager.datafactory.models.OperationMetricAvailability;
import com.azure.resourcemanager.datafactory.models.OperationMetricDimension;
import com.azure.resourcemanager.datafactory.models.OperationMetricSpecification;
import com.azure.resourcemanager.datafactory.models.OperationServiceSpecification;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OperationServiceSpecificationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationServiceSpecification model = BinaryData.fromString(
            "{\"logSpecifications\":[{\"name\":\"ujysvle\",\"displayName\":\"vfqawrlyxwjkcpr\",\"blobDuration\":\"wbxgjvt\"},{\"name\":\"p\",\"displayName\":\"szdnr\",\"blobDuration\":\"qguhmuo\"}],\"metricSpecifications\":[{\"name\":\"rwzwbng\",\"displayName\":\"tnwu\",\"displayDescription\":\"gazxuf\",\"unit\":\"uckyf\",\"aggregationType\":\"rfidfvzwdz\",\"enableRegionalMdmAccount\":\"tymw\",\"sourceMdmAccount\":\"dkfthwxmnt\",\"sourceMdmNamespace\":\"waopvkmijcmmxd\",\"availabilities\":[{\"timeGrain\":\"fsrpymzidnse\",\"blobDuration\":\"xtbzsgfyccsne\"},{\"timeGrain\":\"dwzjeiach\",\"blobDuration\":\"osfln\"},{\"timeGrain\":\"sfqpteehz\",\"blobDuration\":\"ypyqrimzinp\"}],\"dimensions\":[{\"name\":\"dkirsoodqxhcr\",\"displayName\":\"ohjtckw\",\"toBeExportedForShoebox\":true}]}]}")
            .toObject(OperationServiceSpecification.class);
        Assertions.assertEquals("ujysvle", model.logSpecifications().get(0).name());
        Assertions.assertEquals("vfqawrlyxwjkcpr", model.logSpecifications().get(0).displayName());
        Assertions.assertEquals("wbxgjvt", model.logSpecifications().get(0).blobDuration());
        Assertions.assertEquals("rwzwbng", model.metricSpecifications().get(0).name());
        Assertions.assertEquals("tnwu", model.metricSpecifications().get(0).displayName());
        Assertions.assertEquals("gazxuf", model.metricSpecifications().get(0).displayDescription());
        Assertions.assertEquals("uckyf", model.metricSpecifications().get(0).unit());
        Assertions.assertEquals("rfidfvzwdz", model.metricSpecifications().get(0).aggregationType());
        Assertions.assertEquals("tymw", model.metricSpecifications().get(0).enableRegionalMdmAccount());
        Assertions.assertEquals("dkfthwxmnt", model.metricSpecifications().get(0).sourceMdmAccount());
        Assertions.assertEquals("waopvkmijcmmxd", model.metricSpecifications().get(0).sourceMdmNamespace());
        Assertions.assertEquals("fsrpymzidnse",
            model.metricSpecifications().get(0).availabilities().get(0).timeGrain());
        Assertions.assertEquals("xtbzsgfyccsne",
            model.metricSpecifications().get(0).availabilities().get(0).blobDuration());
        Assertions.assertEquals("dkirsoodqxhcr", model.metricSpecifications().get(0).dimensions().get(0).name());
        Assertions.assertEquals("ohjtckw", model.metricSpecifications().get(0).dimensions().get(0).displayName());
        Assertions.assertEquals(true, model.metricSpecifications().get(0).dimensions().get(0).toBeExportedForShoebox());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationServiceSpecification model = new OperationServiceSpecification()
            .withLogSpecifications(Arrays.asList(
                new OperationLogSpecification()
                    .withName("ujysvle")
                    .withDisplayName("vfqawrlyxwjkcpr")
                    .withBlobDuration("wbxgjvt"),
                new OperationLogSpecification().withName("p").withDisplayName("szdnr").withBlobDuration("qguhmuo")))
            .withMetricSpecifications(Arrays.asList(new OperationMetricSpecification().withName("rwzwbng")
                .withDisplayName("tnwu")
                .withDisplayDescription("gazxuf")
                .withUnit("uckyf")
                .withAggregationType("rfidfvzwdz")
                .withEnableRegionalMdmAccount("tymw")
                .withSourceMdmAccount("dkfthwxmnt")
                .withSourceMdmNamespace("waopvkmijcmmxd")
                .withAvailabilities(Arrays.asList(
                    new OperationMetricAvailability().withTimeGrain("fsrpymzidnse").withBlobDuration("xtbzsgfyccsne"),
                    new OperationMetricAvailability().withTimeGrain("dwzjeiach").withBlobDuration("osfln"),
                    new OperationMetricAvailability().withTimeGrain("sfqpteehz").withBlobDuration("ypyqrimzinp")))
                .withDimensions(Arrays.asList(new OperationMetricDimension().withName("dkirsoodqxhcr")
                    .withDisplayName("ohjtckw")
                    .withToBeExportedForShoebox(true)))));
        model = BinaryData.fromObject(model).toObject(OperationServiceSpecification.class);
        Assertions.assertEquals("ujysvle", model.logSpecifications().get(0).name());
        Assertions.assertEquals("vfqawrlyxwjkcpr", model.logSpecifications().get(0).displayName());
        Assertions.assertEquals("wbxgjvt", model.logSpecifications().get(0).blobDuration());
        Assertions.assertEquals("rwzwbng", model.metricSpecifications().get(0).name());
        Assertions.assertEquals("tnwu", model.metricSpecifications().get(0).displayName());
        Assertions.assertEquals("gazxuf", model.metricSpecifications().get(0).displayDescription());
        Assertions.assertEquals("uckyf", model.metricSpecifications().get(0).unit());
        Assertions.assertEquals("rfidfvzwdz", model.metricSpecifications().get(0).aggregationType());
        Assertions.assertEquals("tymw", model.metricSpecifications().get(0).enableRegionalMdmAccount());
        Assertions.assertEquals("dkfthwxmnt", model.metricSpecifications().get(0).sourceMdmAccount());
        Assertions.assertEquals("waopvkmijcmmxd", model.metricSpecifications().get(0).sourceMdmNamespace());
        Assertions.assertEquals("fsrpymzidnse",
            model.metricSpecifications().get(0).availabilities().get(0).timeGrain());
        Assertions.assertEquals("xtbzsgfyccsne",
            model.metricSpecifications().get(0).availabilities().get(0).blobDuration());
        Assertions.assertEquals("dkirsoodqxhcr", model.metricSpecifications().get(0).dimensions().get(0).name());
        Assertions.assertEquals("ohjtckw", model.metricSpecifications().get(0).dimensions().get(0).displayName());
        Assertions.assertEquals(true, model.metricSpecifications().get(0).dimensions().get(0).toBeExportedForShoebox());
    }
}
