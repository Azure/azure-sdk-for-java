// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzureMySqlTableDataset;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AzureMySqlTableDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureMySqlTableDataset model = BinaryData.fromString(
            "{\"type\":\"zq\",\"typeProperties\":{\"tableName\":\"dataozfrfawtnnsv\",\"table\":\"dataajynihtibu\"},\"description\":\"luctblf\",\"structure\":\"databgcgyohrcmeqlj\",\"schema\":\"dataumhycxonebld\",\"linkedServiceName\":{\"referenceName\":\"a\",\"parameters\":{\"ufzdtsrpju\":\"datafjwcngkwxjsjquvo\"}},\"parameters\":{\"nsbylgmgbh\":{\"type\":\"String\",\"defaultValue\":\"datarz\"},\"an\":{\"type\":\"Array\",\"defaultValue\":\"datazo\"},\"ztilqbzb\":{\"type\":\"Bool\",\"defaultValue\":\"datalvcxglxoqw\"},\"yodpiovnlhrwy\":{\"type\":\"Array\",\"defaultValue\":\"datawzhbhflj\"}},\"annotations\":[\"datauafapwxsvdeatjio\"],\"folder\":{\"name\":\"rgoextqdnw\"},\"\":{\"setk\":\"datatimznupbmt\",\"zmmmjyvdhdgdi\":\"datadsqvhedaakghc\"}}")
            .toObject(AzureMySqlTableDataset.class);
        Assertions.assertEquals("luctblf", model.description());
        Assertions.assertEquals("a", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.STRING, model.parameters().get("nsbylgmgbh").type());
        Assertions.assertEquals("rgoextqdnw", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureMySqlTableDataset model = new AzureMySqlTableDataset().withDescription("luctblf")
            .withStructure("databgcgyohrcmeqlj")
            .withSchema("dataumhycxonebld")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("a")
                .withParameters(mapOf("ufzdtsrpju", "datafjwcngkwxjsjquvo")))
            .withParameters(mapOf("nsbylgmgbh",
                new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("datarz"), "an",
                new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("datazo"), "ztilqbzb",
                new ParameterSpecification().withType(ParameterType.BOOL).withDefaultValue("datalvcxglxoqw"),
                "yodpiovnlhrwy",
                new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("datawzhbhflj")))
            .withAnnotations(Arrays.asList("datauafapwxsvdeatjio"))
            .withFolder(new DatasetFolder().withName("rgoextqdnw"))
            .withTableName("dataozfrfawtnnsv")
            .withTable("dataajynihtibu");
        model = BinaryData.fromObject(model).toObject(AzureMySqlTableDataset.class);
        Assertions.assertEquals("luctblf", model.description());
        Assertions.assertEquals("a", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.STRING, model.parameters().get("nsbylgmgbh").type());
        Assertions.assertEquals("rgoextqdnw", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
