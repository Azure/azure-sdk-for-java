// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.datafactory.DataFactoryManager;
import com.azure.resourcemanager.datafactory.models.DatasetResource;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DatasetsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"type\":\"h\",\"description\":\"vgow\",\"structure\":\"datapqfsshjlpznxjym\",\"schema\":\"datalj\",\"linkedServiceName\":{\"referenceName\":\"groawlta\",\"parameters\":{\"eltrnogfyaimpk\":\"datamrreajp\",\"lwubkmdusnwok\":\"databgrug\",\"inrgqzlw\":\"datauxcmaukirzlfp\"}},\"parameters\":{\"kr\":{\"type\":\"String\",\"defaultValue\":\"datatxcjnwzvlzwy\"}},\"annotations\":[\"dataqgknpgqzmgivkf\"],\"folder\":{\"name\":\"aklxpwhvuihjl\"},\"\":{\"bq\":\"dataqinrfu\",\"jtrxqd\":\"datatyoaccrlydml\",\"ufe\":\"datapmhgqihuqajh\"}},\"name\":\"vy\",\"type\":\"ont\",\"etag\":\"vquwxxouflncah\",\"id\":\"lgnmyioalnkr\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DataFactoryManager manager = DataFactoryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DatasetResource response = manager.datasets()
            .getWithResponse("ewyvwwvkicuvphkh", "zes", "sy", "vjkwpkn", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("lgnmyioalnkr", response.id());
        Assertions.assertEquals("vgow", response.properties().description());
        Assertions.assertEquals("groawlta", response.properties().linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.STRING, response.properties().parameters().get("kr").type());
        Assertions.assertEquals("aklxpwhvuihjl", response.properties().folder().name());
    }
}
