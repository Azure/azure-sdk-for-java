// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.DynamicsAXResourceDataset;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class DynamicsAXResourceDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DynamicsAXResourceDataset model = BinaryData.fromString(
            "{\"type\":\"xchquo\",\"typeProperties\":{\"path\":\"datatjuzvyj\"},\"description\":\"qrcsksxq\",\"structure\":\"datalrvuvdagv\",\"schema\":\"datacdp\",\"linkedServiceName\":{\"referenceName\":\"cvfyeqyodi\",\"parameters\":{\"mevljbcuwrfgpjfv\":\"datasapqhipajsniv\",\"gvcykzzu\":\"datawkseodvlmd\"}},\"parameters\":{\"vvcrsm\":{\"type\":\"Array\",\"defaultValue\":\"databbmuml\"},\"mnrut\":{\"type\":\"Int\",\"defaultValue\":\"datamxwcv\"},\"f\":{\"type\":\"Array\",\"defaultValue\":\"dataeq\"},\"opecvpkb\":{\"type\":\"Object\",\"defaultValue\":\"datat\"}},\"annotations\":[\"datanowpajfhxsmu\",\"databzadzglmuuzpsu\",\"datasypxmul\",\"datahfrerkqpyfjxkb\"],\"folder\":{\"name\":\"buq\"},\"\":{\"hyvdbrdvsv\":\"databdjkmnxsggnow\"}}")
            .toObject(DynamicsAXResourceDataset.class);
        Assertions.assertEquals("qrcsksxq", model.description());
        Assertions.assertEquals("cvfyeqyodi", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.ARRAY, model.parameters().get("vvcrsm").type());
        Assertions.assertEquals("buq", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DynamicsAXResourceDataset model = new DynamicsAXResourceDataset().withDescription("qrcsksxq")
            .withStructure("datalrvuvdagv")
            .withSchema("datacdp")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("cvfyeqyodi")
                .withParameters(mapOf("mevljbcuwrfgpjfv", "datasapqhipajsniv", "gvcykzzu", "datawkseodvlmd")))
            .withParameters(mapOf("vvcrsm",
                new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("databbmuml"), "mnrut",
                new ParameterSpecification().withType(ParameterType.INT).withDefaultValue("datamxwcv"), "f",
                new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("dataeq"), "opecvpkb",
                new ParameterSpecification().withType(ParameterType.OBJECT).withDefaultValue("datat")))
            .withAnnotations(
                Arrays.asList("datanowpajfhxsmu", "databzadzglmuuzpsu", "datasypxmul", "datahfrerkqpyfjxkb"))
            .withFolder(new DatasetFolder().withName("buq"))
            .withPath("datatjuzvyj");
        model = BinaryData.fromObject(model).toObject(DynamicsAXResourceDataset.class);
        Assertions.assertEquals("qrcsksxq", model.description());
        Assertions.assertEquals("cvfyeqyodi", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.ARRAY, model.parameters().get("vvcrsm").type());
        Assertions.assertEquals("buq", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
