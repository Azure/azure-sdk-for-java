// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.core.util.serializer.JacksonAdapter;
import com.azure.core.util.serializer.SerializerEncoding;
import com.azure.resourcemanager.datafactory.fluent.models.SelfHostedIntegrationRuntimeNodeInner;
import com.azure.resourcemanager.datafactory.fluent.models.SelfHostedIntegrationRuntimeStatusTypeProperties;
import com.azure.resourcemanager.datafactory.models.LinkedIntegrationRuntime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

public final class SelfHostedIntegrationRuntimeStatusTypePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SelfHostedIntegrationRuntimeStatusTypeProperties model = BinaryData.fromString(
            "{\"createTime\":\"2021-01-04T00:59:28Z\",\"taskQueueId\":\"irgyutexnzh\",\"internalChannelEncryption\":\"SslEncrypted\",\"version\":\"vjbryb\",\"nodes\":[{\"nodeName\":\"hkoqcudnwmoyhdpj\",\"machineName\":\"qnzcbjfpxoy\",\"hostServiceUri\":\"mjn\",\"status\":\"Limited\",\"capabilities\":{\"njq\":\"xyxf\",\"snlpaymketotk\":\"stnwvravntvklkwq\",\"wlkryzmpgqqdh\":\"dme\"},\"versionStatus\":\"tx\",\"version\":\"egykjmpadbzjo\",\"registerTime\":\"2021-02-15T10:57:09Z\",\"lastConnectTime\":\"2021-03-04T00:28:50Z\",\"expiryTime\":\"2021-08-29T22:11:09Z\",\"lastStartTime\":\"2021-05-24T07:23:03Z\",\"lastStopTime\":\"2021-04-23T23:40:15Z\",\"lastUpdateResult\":\"Fail\",\"lastStartUpdateTime\":\"2021-08-30T22:11:23Z\",\"lastEndUpdateTime\":\"2021-11-22T06:03:09Z\",\"isActiveDispatcher\":true,\"concurrentJobsLimit\":602113668,\"maxConcurrentJobs\":1226454239,\"\":{\"isi\":\"dataqbactffxd\"}}],\"scheduledUpdateDate\":\"2021-11-19T11:40:04Z\",\"updateDelayOffset\":\"afapctgljopizqq\",\"localTimeZoneOffset\":\"vbkuf\",\"capabilities\":{\"npgomzmkjpaj\":\"ddj\"},\"serviceUrls\":[\"svrljlhejccc\",\"xbnwitaf\",\"jevptvitgh\"],\"autoUpdate\":\"On\",\"versionStatus\":\"kparskplqf\",\"links\":[{\"name\":\"qmbsudcy\",\"subscriptionId\":\"ul\",\"dataFactoryName\":\"lfw\",\"dataFactoryLocation\":\"suxyq\",\"createTime\":\"2021-02-12T23:31:30Z\"}],\"pushedVersion\":\"ubxlpkdsnbqoy\",\"latestVersion\":\"dlraduhg\",\"autoUpdateETA\":\"2021-09-14T21:07:48Z\",\"selfContainedInteractiveAuthoringEnabled\":true}")
            .toObject(SelfHostedIntegrationRuntimeStatusTypeProperties.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SelfHostedIntegrationRuntimeStatusTypeProperties model = new SelfHostedIntegrationRuntimeStatusTypeProperties()
            .withNodes(Arrays.asList(new SelfHostedIntegrationRuntimeNodeInner().withAdditionalProperties(mapOf(
                "nodeName", "hkoqcudnwmoyhdpj", "lastStartUpdateTime", "2021-08-30T22:11:23Z", "lastConnectTime",
                "2021-03-04T00:28:50Z", "capabilities",
                JacksonAdapter.createDefaultSerializerAdapter()
                    .deserialize("{\"njq\":\"xyxf\",\"snlpaymketotk\":\"stnwvravntvklkwq\",\"wlkryzmpgqqdh\":\"dme\"}",
                        Object.class, SerializerEncoding.JSON),
                "hostServiceUri", "mjn", "registerTime", "2021-02-15T10:57:09Z", "maxConcurrentJobs", 1226454239,
                "lastStopTime", "2021-04-23T23:40:15Z", "version", "egykjmpadbzjo", "machineName", "qnzcbjfpxoy",
                "versionStatus", "tx", "concurrentJobsLimit", 602113668, "lastEndUpdateTime", "2021-11-22T06:03:09Z",
                "expiryTime", "2021-08-29T22:11:09Z", "lastStartTime", "2021-05-24T07:23:03Z", "lastUpdateResult",
                "Fail", "isActiveDispatcher", true, "status", "Limited"))))
            .withLinks(Arrays.asList(new LinkedIntegrationRuntime()));
        model = BinaryData.fromObject(model).toObject(SelfHostedIntegrationRuntimeStatusTypeProperties.class);
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
