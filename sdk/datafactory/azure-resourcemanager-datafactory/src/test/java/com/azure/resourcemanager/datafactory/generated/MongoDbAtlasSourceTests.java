// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.MongoDbAtlasSource;
import com.azure.resourcemanager.datafactory.models.MongoDbCursorMethodsProperties;
import java.util.HashMap;
import java.util.Map;

public final class MongoDbAtlasSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MongoDbAtlasSource model = BinaryData.fromString(
            "{\"type\":\"MongoDbAtlasSource\",\"filter\":\"datahiuwv\",\"cursorMethods\":{\"project\":\"dataejytqn\",\"sort\":\"datacbhayhctjvl\",\"skip\":\"datanzgzfs\",\"limit\":\"datavyt\",\"\":{\"uhsmuclx\":\"datadcwbaiaqq\",\"hzhervvlibro\":\"datacedusuyqcvykags\"}},\"batchSize\":\"dataxloedj\",\"queryTimeout\":\"datavfrfsyqbf\",\"additionalColumns\":\"dataujwowthvuepsz\",\"sourceRetryCount\":\"datavdjnspy\",\"sourceRetryWait\":\"dataoygutqtjwiv\",\"maxConcurrentConnections\":\"datamavfzjwdww\",\"disableMetricsCollection\":\"dataxehndcpiwcgcwmsh\",\"\":{\"xopzclka\":\"dataxjxhdwj\",\"mga\":\"datapu\"}}")
            .toObject(MongoDbAtlasSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MongoDbAtlasSource model = new MongoDbAtlasSource().withSourceRetryCount("datavdjnspy")
            .withSourceRetryWait("dataoygutqtjwiv")
            .withMaxConcurrentConnections("datamavfzjwdww")
            .withDisableMetricsCollection("dataxehndcpiwcgcwmsh")
            .withFilter("datahiuwv")
            .withCursorMethods(new MongoDbCursorMethodsProperties().withProject("dataejytqn")
                .withSort("datacbhayhctjvl")
                .withSkip("datanzgzfs")
                .withLimit("datavyt")
                .withAdditionalProperties(mapOf()))
            .withBatchSize("dataxloedj")
            .withQueryTimeout("datavfrfsyqbf")
            .withAdditionalColumns("dataujwowthvuepsz");
        model = BinaryData.fromObject(model).toObject(MongoDbAtlasSource.class);
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
