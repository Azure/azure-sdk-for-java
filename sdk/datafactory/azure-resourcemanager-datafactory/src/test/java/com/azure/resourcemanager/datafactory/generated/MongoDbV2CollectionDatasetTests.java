// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.MongoDbV2CollectionDataset;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class MongoDbV2CollectionDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MongoDbV2CollectionDataset model = BinaryData.fromString(
            "{\"type\":\"MongoDbV2Collection\",\"typeProperties\":{\"collection\":\"dataugico\"},\"description\":\"tmvwrmjxyvuodnx\",\"structure\":\"databassqfyylwpp\",\"schema\":\"datagkbzbloas\",\"linkedServiceName\":{\"referenceName\":\"bxhqvovdp\",\"parameters\":{\"aqg\":\"datatuvsqjsrvjnq\",\"wevsfgdrmnszdosm\":\"dataqbfkceincnrecjbi\"}},\"parameters\":{\"hgsulwvgs\":{\"type\":\"Object\",\"defaultValue\":\"datazvmxtcwghndae\"},\"wuhyzekypy\":{\"type\":\"Array\",\"defaultValue\":\"dataigvfjjuzkilmc\"},\"bp\":{\"type\":\"Bool\",\"defaultValue\":\"datajlbzdlb\"}},\"annotations\":[\"datapzy\",\"dataov\",\"datanwbhanzgesfhshag\"],\"folder\":{\"name\":\"nezpby\"},\"\":{\"qbugihcdv\":\"dataynpmggqgagen\",\"zsaxzgkqwvdepp\":\"dataoizorbloe\"}}")
            .toObject(MongoDbV2CollectionDataset.class);
        Assertions.assertEquals("tmvwrmjxyvuodnx", model.description());
        Assertions.assertEquals("bxhqvovdp", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.OBJECT, model.parameters().get("hgsulwvgs").type());
        Assertions.assertEquals("nezpby", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MongoDbV2CollectionDataset model = new MongoDbV2CollectionDataset().withDescription("tmvwrmjxyvuodnx")
            .withStructure("databassqfyylwpp")
            .withSchema("datagkbzbloas")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("bxhqvovdp")
                .withParameters(mapOf("aqg", "datatuvsqjsrvjnq", "wevsfgdrmnszdosm", "dataqbfkceincnrecjbi")))
            .withParameters(mapOf("hgsulwvgs",
                new ParameterSpecification().withType(ParameterType.OBJECT).withDefaultValue("datazvmxtcwghndae"),
                "wuhyzekypy",
                new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("dataigvfjjuzkilmc"), "bp",
                new ParameterSpecification().withType(ParameterType.BOOL).withDefaultValue("datajlbzdlb")))
            .withAnnotations(Arrays.asList("datapzy", "dataov", "datanwbhanzgesfhshag"))
            .withFolder(new DatasetFolder().withName("nezpby"))
            .withCollection("dataugico");
        model = BinaryData.fromObject(model).toObject(MongoDbV2CollectionDataset.class);
        Assertions.assertEquals("tmvwrmjxyvuodnx", model.description());
        Assertions.assertEquals("bxhqvovdp", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.OBJECT, model.parameters().get("hgsulwvgs").type());
        Assertions.assertEquals("nezpby", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
