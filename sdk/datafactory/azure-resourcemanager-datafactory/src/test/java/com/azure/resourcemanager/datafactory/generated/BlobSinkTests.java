// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.BlobSink;
import com.azure.resourcemanager.datafactory.models.MetadataItem;
import java.util.Arrays;

public final class BlobSinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BlobSink model = BinaryData.fromString(
            "{\"type\":\"BlobSink\",\"blobWriterOverwriteFiles\":\"datapvidzhjcppqcgbp\",\"blobWriterDateTimeFormat\":\"datani\",\"blobWriterAddHeader\":\"datahd\",\"copyBehavior\":\"datau\",\"metadata\":[{\"name\":\"datalharjbakp\",\"value\":\"datauug\"},{\"name\":\"datagdulvdenh\",\"value\":\"datavaimkoyrp\"},{\"name\":\"datanljduwkbozlmr\",\"value\":\"dataghvlvdjxbjqiab\"}],\"writeBatchSize\":\"dataevvowiypyljzkx\",\"writeBatchTimeout\":\"datafyv\",\"sinkRetryCount\":\"dataftaq\",\"sinkRetryWait\":\"datacrjl\",\"maxConcurrentConnections\":\"dataneykxewemtazmrej\",\"disableMetricsCollection\":\"dataxoqege\",\"\":{\"rt\":\"datalfnuglmyr\",\"zwgrs\":\"datakpo\"}}")
            .toObject(BlobSink.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BlobSink model = new BlobSink().withWriteBatchSize("dataevvowiypyljzkx").withWriteBatchTimeout("datafyv")
            .withSinkRetryCount("dataftaq").withSinkRetryWait("datacrjl")
            .withMaxConcurrentConnections("dataneykxewemtazmrej").withDisableMetricsCollection("dataxoqege")
            .withBlobWriterOverwriteFiles("datapvidzhjcppqcgbp").withBlobWriterDateTimeFormat("datani")
            .withBlobWriterAddHeader("datahd").withCopyBehavior("datau")
            .withMetadata(Arrays.asList(new MetadataItem().withName("datalharjbakp").withValue("datauug"),
                new MetadataItem().withName("datagdulvdenh").withValue("datavaimkoyrp"),
                new MetadataItem().withName("datanljduwkbozlmr").withValue("dataghvlvdjxbjqiab")));
        model = BinaryData.fromObject(model).toObject(BlobSink.class);
    }
}
