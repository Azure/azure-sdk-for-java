// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.BlobSink;
import com.azure.resourcemanager.datafactory.models.MetadataItem;
import java.util.Arrays;

public final class BlobSinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BlobSink model =
            BinaryData
                .fromString(
                    "{\"type\":\"BlobSink\",\"blobWriterOverwriteFiles\":\"dataahzylspzcyrhynl\",\"blobWriterDateTimeFormat\":\"datariaecvagud\",\"blobWriterAddHeader\":\"dataadgyhqrasxe\",\"copyBehavior\":\"datajqqhbkxiu\",\"metadata\":[{\"name\":\"databhzdjvdyrzijggb\",\"value\":\"datapzgvq\"},{\"name\":\"datanxzaliicrut\",\"value\":\"datamflvxilaytjywf\"}],\"writeBatchSize\":\"datawnoghqdl\",\"writeBatchTimeout\":\"datawqngpvvnbuknvku\",\"sinkRetryCount\":\"datasz\",\"sinkRetryWait\":\"datauqbuvpbeswgkre\",\"maxConcurrentConnections\":\"datapufkcamzcbzgikl\",\"disableMetricsCollection\":\"dataegcg\",\"\":{\"mmcbiktetzvqtce\":\"datapbsie\",\"pdnbzqweohmlkzhx\":\"datavcsbyimygswdu\",\"haerhxd\":\"datadmauanxzrqt\",\"bqmoguy\":\"datahkbrkhjjbwelicrx\"}}")
                .toObject(BlobSink.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BlobSink model =
            new BlobSink()
                .withWriteBatchSize("datawnoghqdl")
                .withWriteBatchTimeout("datawqngpvvnbuknvku")
                .withSinkRetryCount("datasz")
                .withSinkRetryWait("datauqbuvpbeswgkre")
                .withMaxConcurrentConnections("datapufkcamzcbzgikl")
                .withDisableMetricsCollection("dataegcg")
                .withBlobWriterOverwriteFiles("dataahzylspzcyrhynl")
                .withBlobWriterDateTimeFormat("datariaecvagud")
                .withBlobWriterAddHeader("dataadgyhqrasxe")
                .withCopyBehavior("datajqqhbkxiu")
                .withMetadata(
                    Arrays
                        .asList(
                            new MetadataItem().withName("databhzdjvdyrzijggb").withValue("datapzgvq"),
                            new MetadataItem().withName("datanxzaliicrut").withValue("datamflvxilaytjywf")));
        model = BinaryData.fromObject(model).toObject(BlobSink.class);
    }
}
