// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.BlobSink;
import com.azure.resourcemanager.datafactory.models.MetadataItem;
import java.util.Arrays;

public final class BlobSinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BlobSink model = BinaryData.fromString(
            "{\"type\":\"BlobSink\",\"blobWriterOverwriteFiles\":\"datapvpc\",\"blobWriterDateTimeFormat\":\"datacovzkwhdtf\",\"blobWriterAddHeader\":\"datafctsfujdap\",\"copyBehavior\":\"datagamgbnktg\",\"metadata\":[{\"name\":\"dataydbatexkwcolnaer\",\"value\":\"datadyvahni\"},{\"name\":\"datacpmvnzhdsa\",\"value\":\"dataekgtkojrruhz\"},{\"name\":\"dataeerwlehsnlm\",\"value\":\"datasiy\"},{\"name\":\"datadcc\",\"value\":\"dataggbmzdnyrmol\"}],\"writeBatchSize\":\"dataekcpumckcbsa\",\"writeBatchTimeout\":\"dataucsscwdqilz\",\"sinkRetryCount\":\"datai\",\"sinkRetryWait\":\"datarqzwypwh\",\"maxConcurrentConnections\":\"databflrpvcgqqxek\",\"disableMetricsCollection\":\"datahpsqvuised\",\"\":{\"btpvwx\":\"datavfjkxxnqrqdx\",\"zss\":\"datalsvicvpagwohkro\",\"jpiezthflgpsal\":\"datamlozjyovrllvhbgk\",\"wzpfbiqjrz\":\"datanan\"}}")
            .toObject(BlobSink.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BlobSink model = new BlobSink().withWriteBatchSize("dataekcpumckcbsa")
            .withWriteBatchTimeout("dataucsscwdqilz")
            .withSinkRetryCount("datai")
            .withSinkRetryWait("datarqzwypwh")
            .withMaxConcurrentConnections("databflrpvcgqqxek")
            .withDisableMetricsCollection("datahpsqvuised")
            .withBlobWriterOverwriteFiles("datapvpc")
            .withBlobWriterDateTimeFormat("datacovzkwhdtf")
            .withBlobWriterAddHeader("datafctsfujdap")
            .withCopyBehavior("datagamgbnktg")
            .withMetadata(Arrays.asList(new MetadataItem().withName("dataydbatexkwcolnaer").withValue("datadyvahni"),
                new MetadataItem().withName("datacpmvnzhdsa").withValue("dataekgtkojrruhz"),
                new MetadataItem().withName("dataeerwlehsnlm").withValue("datasiy"),
                new MetadataItem().withName("datadcc").withValue("dataggbmzdnyrmol")));
        model = BinaryData.fromObject(model).toObject(BlobSink.class);
    }
}
