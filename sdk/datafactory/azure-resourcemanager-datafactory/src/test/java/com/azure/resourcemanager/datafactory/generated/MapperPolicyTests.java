// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.FrequencyType;
import com.azure.resourcemanager.datafactory.models.MapperPolicy;
import com.azure.resourcemanager.datafactory.models.MapperPolicyRecurrence;
import org.junit.jupiter.api.Assertions;

public final class MapperPolicyTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MapperPolicy model =
            BinaryData
                .fromString("{\"mode\":\"ujlyegq\",\"recurrence\":{\"frequency\":\"Second\",\"interval\":1397511481}}")
                .toObject(MapperPolicy.class);
        Assertions.assertEquals("ujlyegq", model.mode());
        Assertions.assertEquals(FrequencyType.SECOND, model.recurrence().frequency());
        Assertions.assertEquals(1397511481, model.recurrence().interval());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MapperPolicy model =
            new MapperPolicy()
                .withMode("ujlyegq")
                .withRecurrence(
                    new MapperPolicyRecurrence().withFrequency(FrequencyType.SECOND).withInterval(1397511481));
        model = BinaryData.fromObject(model).toObject(MapperPolicy.class);
        Assertions.assertEquals("ujlyegq", model.mode());
        Assertions.assertEquals(FrequencyType.SECOND, model.recurrence().frequency());
        Assertions.assertEquals(1397511481, model.recurrence().interval());
    }
}
