// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.FrequencyType;
import com.azure.resourcemanager.datafactory.models.MapperPolicy;
import com.azure.resourcemanager.datafactory.models.MapperPolicyRecurrence;
import org.junit.jupiter.api.Assertions;

public final class MapperPolicyTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MapperPolicy model = BinaryData
            .fromString("{\"mode\":\"gazlsvbz\",\"recurrence\":{\"frequency\":\"Minute\",\"interval\":63190145}}")
            .toObject(MapperPolicy.class);
        Assertions.assertEquals("gazlsvbz", model.mode());
        Assertions.assertEquals(FrequencyType.MINUTE, model.recurrence().frequency());
        Assertions.assertEquals(63190145, model.recurrence().interval());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MapperPolicy model = new MapperPolicy().withMode("gazlsvbz")
            .withRecurrence(new MapperPolicyRecurrence().withFrequency(FrequencyType.MINUTE).withInterval(63190145));
        model = BinaryData.fromObject(model).toObject(MapperPolicy.class);
        Assertions.assertEquals("gazlsvbz", model.mode());
        Assertions.assertEquals(FrequencyType.MINUTE, model.recurrence().frequency());
        Assertions.assertEquals(63190145, model.recurrence().interval());
    }
}
