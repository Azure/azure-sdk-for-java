// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.XeroObjectDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class XeroObjectDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        XeroObjectDataset model = BinaryData.fromString(
            "{\"type\":\"XeroObject\",\"typeProperties\":{\"tableName\":\"datalrtbofzghfuifwx\"},\"description\":\"ynohocqxug\",\"structure\":\"dataugdcr\",\"schema\":\"databplvhmhur\",\"linkedServiceName\":{\"referenceName\":\"sdjlzbdmdd\",\"parameters\":{\"pvesorsbegclmexa\":\"dataeuyaorser\"}},\"parameters\":{\"unssky\":{\"type\":\"SecureString\",\"defaultValue\":\"datahzydyvtuqvir\"},\"jx\":{\"type\":\"Bool\",\"defaultValue\":\"datat\"},\"uzscyfyi\":{\"type\":\"Bool\",\"defaultValue\":\"datasvjekejchxzjdc\"},\"jeeyv\":{\"type\":\"String\",\"defaultValue\":\"datamasjnfgngxa\"}},\"annotations\":[\"datafckmo\",\"dataljaxv\"],\"folder\":{\"name\":\"xuzhvo\"},\"\":{\"z\":\"datafwflbkjc\",\"cyzcjefpubaldj\":\"dataiyg\",\"lrlkbh\":\"datagldry\"}}")
            .toObject(XeroObjectDataset.class);
        Assertions.assertEquals("ynohocqxug", model.description());
        Assertions.assertEquals("sdjlzbdmdd", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.SECURE_STRING, model.parameters().get("unssky").type());
        Assertions.assertEquals("xuzhvo", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        XeroObjectDataset model = new XeroObjectDataset().withDescription("ynohocqxug")
            .withStructure("dataugdcr")
            .withSchema("databplvhmhur")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("sdjlzbdmdd")
                .withParameters(mapOf("pvesorsbegclmexa", "dataeuyaorser")))
            .withParameters(mapOf("unssky",
                new ParameterSpecification().withType(ParameterType.SECURE_STRING).withDefaultValue("datahzydyvtuqvir"),
                "jx", new ParameterSpecification().withType(ParameterType.BOOL).withDefaultValue("datat"), "uzscyfyi",
                new ParameterSpecification().withType(ParameterType.BOOL).withDefaultValue("datasvjekejchxzjdc"),
                "jeeyv",
                new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("datamasjnfgngxa")))
            .withAnnotations(Arrays.asList("datafckmo", "dataljaxv"))
            .withFolder(new DatasetFolder().withName("xuzhvo"))
            .withTableName("datalrtbofzghfuifwx");
        model = BinaryData.fromObject(model).toObject(XeroObjectDataset.class);
        Assertions.assertEquals("ynohocqxug", model.description());
        Assertions.assertEquals("sdjlzbdmdd", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.SECURE_STRING, model.parameters().get("unssky").type());
        Assertions.assertEquals("xuzhvo", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
