// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzurePostgreSqlSource;

public final class AzurePostgreSqlSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzurePostgreSqlSource model = BinaryData.fromString(
            "{\"type\":\"AzurePostgreSqlSource\",\"query\":\"dataehmvrveurpzrysef\",\"queryTimeout\":\"datachkkwah\",\"additionalColumns\":\"datayrdlvbomhfqsjz\",\"sourceRetryCount\":\"dataktk\",\"sourceRetryWait\":\"dataxtee\",\"maxConcurrentConnections\":\"datahxgnlpjytle\",\"disableMetricsCollection\":\"datamijhnjk\",\"\":{\"nkzbdeyhw\":\"datahhuwz\",\"jmmdmbylyndtq\":\"databhobdocfv\"}}")
            .toObject(AzurePostgreSqlSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzurePostgreSqlSource model = new AzurePostgreSqlSource().withSourceRetryCount("dataktk")
            .withSourceRetryWait("dataxtee").withMaxConcurrentConnections("datahxgnlpjytle")
            .withDisableMetricsCollection("datamijhnjk").withQueryTimeout("datachkkwah")
            .withAdditionalColumns("datayrdlvbomhfqsjz").withQuery("dataehmvrveurpzrysef");
        model = BinaryData.fromObject(model).toObject(AzurePostgreSqlSource.class);
    }
}
