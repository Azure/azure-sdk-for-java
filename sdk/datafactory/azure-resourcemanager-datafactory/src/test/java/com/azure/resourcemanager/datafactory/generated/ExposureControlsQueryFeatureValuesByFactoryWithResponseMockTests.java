// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.datafactory.DataFactoryManager;
import com.azure.resourcemanager.datafactory.models.ExposureControlBatchRequest;
import com.azure.resourcemanager.datafactory.models.ExposureControlBatchResponse;
import com.azure.resourcemanager.datafactory.models.ExposureControlRequest;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ExposureControlsQueryFeatureValuesByFactoryWithResponseMockTests {
    @Test
    public void testQueryFeatureValuesByFactoryWithResponse() throws Exception {
        String responseStr
            = "{\"exposureControlResponses\":[{\"featureName\":\"zcnpsdpfw\",\"value\":\"wwbunfymbwi\"},{\"featureName\":\"rajtbmjok\",\"value\":\"qgokha\"},{\"featureName\":\"ylkflf\",\"value\":\"fjskndwywbptvym\"},{\"featureName\":\"pdcddbeozhprlxxb\",\"value\":\"z\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DataFactoryManager manager = DataFactoryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ExposureControlBatchResponse response = manager.exposureControls()
            .queryFeatureValuesByFactoryWithResponse("k", "dtofakmopqfzvvti",
                new ExposureControlBatchRequest().withExposureControlRequests(Arrays
                    .asList(new ExposureControlRequest().withFeatureName("suemewfut").withFeatureType("bpnrfucxt"))),
                com.azure.core.util.Context.NONE)
            .getValue();

    }
}
