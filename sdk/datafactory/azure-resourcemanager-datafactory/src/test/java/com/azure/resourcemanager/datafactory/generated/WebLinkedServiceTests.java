// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.WebLinkedService;
import com.azure.resourcemanager.datafactory.models.WebLinkedServiceTypeProperties;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class WebLinkedServiceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WebLinkedService model = BinaryData.fromString(
            "{\"type\":\"Web\",\"typeProperties\":{\"authenticationType\":\"WebLinkedServiceTypeProperties\",\"url\":\"datagjto\"},\"version\":\"ohoy\",\"connectVia\":{\"referenceName\":\"wdzizzu\",\"parameters\":{\"piplpexhhjjatlep\":\"datarcppqvovsirtas\",\"pbainsihdzxeufjy\":\"databiroxamnvrcq\",\"qjcphofyoqfvm\":\"datatzmmxdmppibv\"}},\"description\":\"plxmuzltnne\",\"parameters\":{\"j\":{\"type\":\"Int\",\"defaultValue\":\"datat\"},\"cckjrqdtyk\":{\"type\":\"Array\",\"defaultValue\":\"datals\"},\"k\":{\"type\":\"SecureString\",\"defaultValue\":\"datacjuuxq\"},\"ynjcvewl\":{\"type\":\"Array\",\"defaultValue\":\"datamrwc\"}},\"annotations\":[\"datanaktjopiglah\",\"dataeqjchhrrx\",\"datacztrqnuahh\"],\"\":{\"rbdujpshiszivr\":\"datav\",\"les\":\"datacyulwzjorvsgmkk\",\"lwdmpsdfsla\":\"datajckyocyb\"}}")
            .toObject(WebLinkedService.class);
        Assertions.assertEquals("ohoy", model.version());
        Assertions.assertEquals("wdzizzu", model.connectVia().referenceName());
        Assertions.assertEquals("plxmuzltnne", model.description());
        Assertions.assertEquals(ParameterType.INT, model.parameters().get("j").type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WebLinkedService model = new WebLinkedService().withVersion("ohoy")
            .withConnectVia(new IntegrationRuntimeReference().withReferenceName("wdzizzu")
                .withParameters(mapOf("piplpexhhjjatlep", "datarcppqvovsirtas", "pbainsihdzxeufjy", "databiroxamnvrcq",
                    "qjcphofyoqfvm", "datatzmmxdmppibv")))
            .withDescription("plxmuzltnne")
            .withParameters(mapOf("j",
                new ParameterSpecification().withType(ParameterType.INT).withDefaultValue("datat"), "cckjrqdtyk",
                new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("datals"), "k",
                new ParameterSpecification().withType(ParameterType.SECURE_STRING).withDefaultValue("datacjuuxq"),
                "ynjcvewl", new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("datamrwc")))
            .withAnnotations(Arrays.asList("datanaktjopiglah", "dataeqjchhrrx", "datacztrqnuahh"))
            .withTypeProperties(new WebLinkedServiceTypeProperties().withUrl("datagjto"));
        model = BinaryData.fromObject(model).toObject(WebLinkedService.class);
        Assertions.assertEquals("ohoy", model.version());
        Assertions.assertEquals("wdzizzu", model.connectVia().referenceName());
        Assertions.assertEquals("plxmuzltnne", model.description());
        Assertions.assertEquals(ParameterType.INT, model.parameters().get("j").type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
