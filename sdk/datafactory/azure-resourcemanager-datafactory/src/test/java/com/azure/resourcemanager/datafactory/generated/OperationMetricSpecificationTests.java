// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.OperationMetricAvailability;
import com.azure.resourcemanager.datafactory.models.OperationMetricDimension;
import com.azure.resourcemanager.datafactory.models.OperationMetricSpecification;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class OperationMetricSpecificationTests {
    @Test
    public void testDeserialize() {
        OperationMetricSpecification model =
            BinaryData
                .fromString(
                    "{\"name\":\"qktapspwgcuert\",\"displayName\":\"kdosvqw\",\"displayDescription\":\"mdgbbjfdd\",\"unit\":\"bmbexppbhtqqro\",\"aggregationType\":\"p\",\"enableRegionalMdmAccount\":\"s\",\"sourceMdmAccount\":\"gbquxigj\",\"sourceMdmNamespace\":\"gzjaoyfhrtxilne\",\"availabilities\":[{\"timeGrain\":\"ysvlejuvf\",\"blobDuration\":\"wrlyxwjkcprb\"},{\"timeGrain\":\"b\",\"blobDuration\":\"jvtbvpyss\"}],\"dimensions\":[{\"name\":\"uj\",\"displayName\":\"uhmuouqfprwzwbn\",\"toBeExportedForShoebox\":true}]}")
                .toObject(OperationMetricSpecification.class);
        Assertions.assertEquals("qktapspwgcuert", model.name());
        Assertions.assertEquals("kdosvqw", model.displayName());
        Assertions.assertEquals("mdgbbjfdd", model.displayDescription());
        Assertions.assertEquals("bmbexppbhtqqro", model.unit());
        Assertions.assertEquals("p", model.aggregationType());
        Assertions.assertEquals("s", model.enableRegionalMdmAccount());
        Assertions.assertEquals("gbquxigj", model.sourceMdmAccount());
        Assertions.assertEquals("gzjaoyfhrtxilne", model.sourceMdmNamespace());
        Assertions.assertEquals("ysvlejuvf", model.availabilities().get(0).timeGrain());
        Assertions.assertEquals("wrlyxwjkcprb", model.availabilities().get(0).blobDuration());
        Assertions.assertEquals("uj", model.dimensions().get(0).name());
        Assertions.assertEquals("uhmuouqfprwzwbn", model.dimensions().get(0).displayName());
        Assertions.assertEquals(true, model.dimensions().get(0).toBeExportedForShoebox());
    }

    @Test
    public void testSerialize() {
        OperationMetricSpecification model =
            new OperationMetricSpecification()
                .withName("qktapspwgcuert")
                .withDisplayName("kdosvqw")
                .withDisplayDescription("mdgbbjfdd")
                .withUnit("bmbexppbhtqqro")
                .withAggregationType("p")
                .withEnableRegionalMdmAccount("s")
                .withSourceMdmAccount("gbquxigj")
                .withSourceMdmNamespace("gzjaoyfhrtxilne")
                .withAvailabilities(
                    Arrays
                        .asList(
                            new OperationMetricAvailability()
                                .withTimeGrain("ysvlejuvf")
                                .withBlobDuration("wrlyxwjkcprb"),
                            new OperationMetricAvailability().withTimeGrain("b").withBlobDuration("jvtbvpyss")))
                .withDimensions(
                    Arrays
                        .asList(
                            new OperationMetricDimension()
                                .withName("uj")
                                .withDisplayName("uhmuouqfprwzwbn")
                                .withToBeExportedForShoebox(true)));
        model = BinaryData.fromObject(model).toObject(OperationMetricSpecification.class);
        Assertions.assertEquals("qktapspwgcuert", model.name());
        Assertions.assertEquals("kdosvqw", model.displayName());
        Assertions.assertEquals("mdgbbjfdd", model.displayDescription());
        Assertions.assertEquals("bmbexppbhtqqro", model.unit());
        Assertions.assertEquals("p", model.aggregationType());
        Assertions.assertEquals("s", model.enableRegionalMdmAccount());
        Assertions.assertEquals("gbquxigj", model.sourceMdmAccount());
        Assertions.assertEquals("gzjaoyfhrtxilne", model.sourceMdmNamespace());
        Assertions.assertEquals("ysvlejuvf", model.availabilities().get(0).timeGrain());
        Assertions.assertEquals("wrlyxwjkcprb", model.availabilities().get(0).blobDuration());
        Assertions.assertEquals("uj", model.dimensions().get(0).name());
        Assertions.assertEquals("uhmuouqfprwzwbn", model.dimensions().get(0).displayName());
        Assertions.assertEquals(true, model.dimensions().get(0).toBeExportedForShoebox());
    }
}
