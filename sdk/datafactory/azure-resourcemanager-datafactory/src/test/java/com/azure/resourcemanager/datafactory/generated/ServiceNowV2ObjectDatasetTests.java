// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.ServiceNowV2ObjectDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ServiceNowV2ObjectDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServiceNowV2ObjectDataset model = BinaryData.fromString(
            "{\"type\":\"ServiceNowV2Object\",\"typeProperties\":{\"tableName\":\"datavsveamseauuuvhx\"},\"description\":\"h\",\"structure\":\"datamufzuuyszhae\",\"schema\":\"datatyosdpxtsdy\",\"linkedServiceName\":{\"referenceName\":\"fgefvwgwp\",\"parameters\":{\"puhhzwrsjumlkjsv\":\"dataiavwmixaqg\"}},\"parameters\":{\"cjg\":{\"type\":\"Int\",\"defaultValue\":\"dataixalphkgminh\"},\"kpismmrmrj\":{\"type\":\"Bool\",\"defaultValue\":\"datajmsngmluyr\"},\"sabcylzz\":{\"type\":\"Bool\",\"defaultValue\":\"datahi\"}},\"annotations\":[\"dataumzenk\",\"datadrue\",\"dataxexawxoib\",\"datactjwfebqqq\"],\"folder\":{\"name\":\"sqaclczfrofy\"},\"\":{\"ptldddorzljhnxfk\":\"dataiaiidkewqwa\",\"vx\":\"datafngfpilloir\",\"rqmznwwtkuy\":\"databktuqnbcjk\"}}")
            .toObject(ServiceNowV2ObjectDataset.class);
        Assertions.assertEquals("h", model.description());
        Assertions.assertEquals("fgefvwgwp", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.INT, model.parameters().get("cjg").type());
        Assertions.assertEquals("sqaclczfrofy", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServiceNowV2ObjectDataset model = new ServiceNowV2ObjectDataset().withDescription("h")
            .withStructure("datamufzuuyszhae")
            .withSchema("datatyosdpxtsdy")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("fgefvwgwp")
                .withParameters(mapOf("puhhzwrsjumlkjsv", "dataiavwmixaqg")))
            .withParameters(mapOf("cjg",
                new ParameterSpecification().withType(ParameterType.INT).withDefaultValue("dataixalphkgminh"),
                "kpismmrmrj",
                new ParameterSpecification().withType(ParameterType.BOOL).withDefaultValue("datajmsngmluyr"),
                "sabcylzz", new ParameterSpecification().withType(ParameterType.BOOL).withDefaultValue("datahi")))
            .withAnnotations(Arrays.asList("dataumzenk", "datadrue", "dataxexawxoib", "datactjwfebqqq"))
            .withFolder(new DatasetFolder().withName("sqaclczfrofy"))
            .withTableName("datavsveamseauuuvhx");
        model = BinaryData.fromObject(model).toObject(ServiceNowV2ObjectDataset.class);
        Assertions.assertEquals("h", model.description());
        Assertions.assertEquals("fgefvwgwp", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.INT, model.parameters().get("cjg").type());
        Assertions.assertEquals("sqaclczfrofy", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
