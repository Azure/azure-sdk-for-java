// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.HBaseObjectDataset;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class HBaseObjectDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HBaseObjectDataset model = BinaryData.fromString(
            "{\"type\":\"HBaseObject\",\"typeProperties\":{\"tableName\":\"datacbicfecthotb\"},\"description\":\"whz\",\"structure\":\"dataxjvtwkyjdpayxo\",\"schema\":\"dataiwuzrgqztjfkgbtq\",\"linkedServiceName\":{\"referenceName\":\"jobsynn\",\"parameters\":{\"wfudmpf\":\"dataonjqhdheosx\"}},\"parameters\":{\"bb\":{\"type\":\"Array\",\"defaultValue\":\"datahtjtntcwgp\"},\"spkvrmp\":{\"type\":\"Array\",\"defaultValue\":\"dataecctokfspvjr\"},\"djmvphwfnu\":{\"type\":\"String\",\"defaultValue\":\"datayptwjwiyyeohgmc\"},\"ueprpmofxnwc\":{\"type\":\"SecureString\",\"defaultValue\":\"datavfzzioxbgom\"}},\"annotations\":[\"dataoxi\",\"datatxxxajse\",\"datab\",\"datannrnkyj\"],\"folder\":{\"name\":\"pcbs\"},\"\":{\"pkjealkdbewhotv\":\"dataehczbnivcohsxv\",\"dktrjtoqszh\":\"datamyzuqfd\"}}")
            .toObject(HBaseObjectDataset.class);
        Assertions.assertEquals("whz", model.description());
        Assertions.assertEquals("jobsynn", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.ARRAY, model.parameters().get("bb").type());
        Assertions.assertEquals("pcbs", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HBaseObjectDataset model = new HBaseObjectDataset().withDescription("whz")
            .withStructure("dataxjvtwkyjdpayxo")
            .withSchema("dataiwuzrgqztjfkgbtq")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("jobsynn")
                .withParameters(mapOf("wfudmpf", "dataonjqhdheosx")))
            .withParameters(mapOf("bb",
                new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("datahtjtntcwgp"),
                "spkvrmp",
                new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("dataecctokfspvjr"),
                "djmvphwfnu",
                new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("datayptwjwiyyeohgmc"),
                "ueprpmofxnwc",
                new ParameterSpecification().withType(ParameterType.SECURE_STRING).withDefaultValue("datavfzzioxbgom")))
            .withAnnotations(Arrays.asList("dataoxi", "datatxxxajse", "datab", "datannrnkyj"))
            .withFolder(new DatasetFolder().withName("pcbs"))
            .withTableName("datacbicfecthotb");
        model = BinaryData.fromObject(model).toObject(HBaseObjectDataset.class);
        Assertions.assertEquals("whz", model.description());
        Assertions.assertEquals("jobsynn", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.ARRAY, model.parameters().get("bb").type());
        Assertions.assertEquals("pcbs", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
