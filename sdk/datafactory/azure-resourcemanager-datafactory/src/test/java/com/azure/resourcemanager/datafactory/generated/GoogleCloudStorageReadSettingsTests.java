// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.GoogleCloudStorageReadSettings;

public final class GoogleCloudStorageReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GoogleCloudStorageReadSettings model = BinaryData.fromString(
            "{\"type\":\"GoogleCloudStorageReadSettings\",\"recursive\":\"datatnsnb\",\"wildcardFolderPath\":\"datauv\",\"wildcardFileName\":\"dataodfmort\",\"prefix\":\"datanpbsungnjkkmkzfb\",\"fileListPath\":\"datacgbgzjyr\",\"enablePartitionDiscovery\":\"dataiwhmrhz\",\"partitionRootPath\":\"datavpjydwmaqeytjp\",\"deleteFilesAfterCompletion\":\"datadp\",\"modifiedDatetimeStart\":\"datapdcsvzugiurhgqlv\",\"modifiedDatetimeEnd\":\"datajzscrjtnq\",\"maxConcurrentConnections\":\"datapobjufksddxk\",\"disableMetricsCollection\":\"datawxlylxfpvoylf\",\"\":{\"ime\":\"datarguecbthauivg\"}}")
            .toObject(GoogleCloudStorageReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GoogleCloudStorageReadSettings model
            = new GoogleCloudStorageReadSettings().withMaxConcurrentConnections("datapobjufksddxk")
                .withDisableMetricsCollection("datawxlylxfpvoylf").withRecursive("datatnsnb")
                .withWildcardFolderPath("datauv").withWildcardFileName("dataodfmort").withPrefix("datanpbsungnjkkmkzfb")
                .withFileListPath("datacgbgzjyr").withEnablePartitionDiscovery("dataiwhmrhz")
                .withPartitionRootPath("datavpjydwmaqeytjp").withDeleteFilesAfterCompletion("datadp")
                .withModifiedDatetimeStart("datapdcsvzugiurhgqlv").withModifiedDatetimeEnd("datajzscrjtnq");
        model = BinaryData.fromObject(model).toObject(GoogleCloudStorageReadSettings.class);
    }
}
