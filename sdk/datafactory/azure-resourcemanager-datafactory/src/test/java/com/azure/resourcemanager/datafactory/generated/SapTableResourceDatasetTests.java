// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.SapTableResourceDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SapTableResourceDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SapTableResourceDataset model = BinaryData.fromString(
            "{\"type\":\"SapTableResource\",\"typeProperties\":{\"tableName\":\"datadngvnqdjgsbtwg\"},\"description\":\"dxuczl\",\"structure\":\"datab\",\"schema\":\"datacznrirpiiuvcqo\",\"linkedServiceName\":{\"referenceName\":\"kqwucqsd\",\"parameters\":{\"kjlamyvwprjmaiht\":\"datacwtvmijccp\",\"ppvolzayjw\":\"datanlbhxjppcbqetfz\"}},\"parameters\":{\"rwgxeegxbnjnczep\":{\"type\":\"Array\",\"defaultValue\":\"datamprklatwiuujxsuj\"},\"uyyaescjxna\":{\"type\":\"SecureString\",\"defaultValue\":\"dataymgbfmd\"},\"inzkefkzlxvc\":{\"type\":\"Float\",\"defaultValue\":\"dataxqbkxdtbfkih\"}},\"annotations\":[\"datagoeozlib\",\"databnunzuysajvvqlho\",\"datayonelivgtibtkqjq\",\"datacaj\"],\"folder\":{\"name\":\"y\"},\"\":{\"mrvkxeojtdyulglh\":\"datahk\",\"xspxgogypbztgae\":\"datalwruklfq\"}}")
            .toObject(SapTableResourceDataset.class);
        Assertions.assertEquals("dxuczl", model.description());
        Assertions.assertEquals("kqwucqsd", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.ARRAY, model.parameters().get("rwgxeegxbnjnczep").type());
        Assertions.assertEquals("y", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SapTableResourceDataset model = new SapTableResourceDataset().withDescription("dxuczl")
            .withStructure("datab")
            .withSchema("datacznrirpiiuvcqo")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("kqwucqsd")
                .withParameters(mapOf("kjlamyvwprjmaiht", "datacwtvmijccp", "ppvolzayjw", "datanlbhxjppcbqetfz")))
            .withParameters(mapOf("rwgxeegxbnjnczep",
                new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("datamprklatwiuujxsuj"),
                "uyyaescjxna",
                new ParameterSpecification().withType(ParameterType.SECURE_STRING).withDefaultValue("dataymgbfmd"),
                "inzkefkzlxvc",
                new ParameterSpecification().withType(ParameterType.FLOAT).withDefaultValue("dataxqbkxdtbfkih")))
            .withAnnotations(Arrays.asList("datagoeozlib", "databnunzuysajvvqlho", "datayonelivgtibtkqjq", "datacaj"))
            .withFolder(new DatasetFolder().withName("y"))
            .withTableName("datadngvnqdjgsbtwg");
        model = BinaryData.fromObject(model).toObject(SapTableResourceDataset.class);
        Assertions.assertEquals("dxuczl", model.description());
        Assertions.assertEquals("kqwucqsd", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.ARRAY, model.parameters().get("rwgxeegxbnjnczep").type());
        Assertions.assertEquals("y", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
