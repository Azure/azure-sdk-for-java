// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzureTableSource;

public final class AzureTableSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureTableSource model = BinaryData.fromString(
            "{\"type\":\"AzureTableSource\",\"azureTableSourceQuery\":\"datauybdzrxbckx\",\"azureTableSourceIgnoreTableNotFound\":\"datanzowguirhexj\",\"queryTimeout\":\"datayhmktpy\",\"additionalColumns\":\"dataicpkoam\",\"sourceRetryCount\":\"datadtbaobj\",\"sourceRetryWait\":\"datafkcvhh\",\"maxConcurrentConnections\":\"datavkuuikrsi\",\"disableMetricsCollection\":\"datarwsj\",\"\":{\"jva\":\"dataen\",\"fm\":\"datadqgfvygrfyyknxua\",\"kt\":\"dataynlcimjmurocryfu\"}}")
            .toObject(AzureTableSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureTableSource model = new AzureTableSource().withSourceRetryCount("datadtbaobj")
            .withSourceRetryWait("datafkcvhh")
            .withMaxConcurrentConnections("datavkuuikrsi")
            .withDisableMetricsCollection("datarwsj")
            .withQueryTimeout("datayhmktpy")
            .withAdditionalColumns("dataicpkoam")
            .withAzureTableSourceQuery("datauybdzrxbckx")
            .withAzureTableSourceIgnoreTableNotFound("datanzowguirhexj");
        model = BinaryData.fromObject(model).toObject(AzureTableSource.class);
    }
}
