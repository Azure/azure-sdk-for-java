// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.SapHanaTableDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SapHanaTableDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SapHanaTableDataset model = BinaryData.fromString(
            "{\"type\":\"oqkanqtrkic\",\"typeProperties\":{\"schema\":\"datax\",\"table\":\"datao\"},\"description\":\"qyrgqmndk\",\"structure\":\"datawmurhvifqeqf\",\"schema\":\"datanackitlw\",\"linkedServiceName\":{\"referenceName\":\"ebylpzjelda\",\"parameters\":{\"h\":\"dataunilni\",\"kbvzpkodngvnq\":\"datacbrdsypotn\"}},\"parameters\":{\"vbqy\":{\"type\":\"Object\",\"defaultValue\":\"datatwgnldxuczl\"},\"uvcqoqkqwucqsdgb\":{\"type\":\"Float\",\"defaultValue\":\"datarirpi\"},\"jlamyv\":{\"type\":\"Int\",\"defaultValue\":\"datatvmijccpk\"}},\"annotations\":[\"datajmaih\",\"datannlb\"],\"folder\":{\"name\":\"ppcbqetf\"},\"\":{\"mprklatwiuujxsuj\":\"datapvolzayjwdunj\",\"pc\":\"datarwgxeegxbnjnczep\",\"dquyyaes\":\"datamgbf\"}}")
            .toObject(SapHanaTableDataset.class);
        Assertions.assertEquals("qyrgqmndk", model.description());
        Assertions.assertEquals("ebylpzjelda", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.OBJECT, model.parameters().get("vbqy").type());
        Assertions.assertEquals("ppcbqetf", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SapHanaTableDataset model = new SapHanaTableDataset().withDescription("qyrgqmndk")
            .withStructure("datawmurhvifqeqf")
            .withSchema("datanackitlw")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("ebylpzjelda")
                .withParameters(mapOf("h", "dataunilni", "kbvzpkodngvnq", "datacbrdsypotn")))
            .withParameters(mapOf("vbqy",
                new ParameterSpecification().withType(ParameterType.OBJECT).withDefaultValue("datatwgnldxuczl"),
                "uvcqoqkqwucqsdgb",
                new ParameterSpecification().withType(ParameterType.FLOAT).withDefaultValue("datarirpi"), "jlamyv",
                new ParameterSpecification().withType(ParameterType.INT).withDefaultValue("datatvmijccpk")))
            .withAnnotations(Arrays.asList("datajmaih", "datannlb"))
            .withFolder(new DatasetFolder().withName("ppcbqetf"))
            .withSchemaTypePropertiesSchema("datax")
            .withTable("datao");
        model = BinaryData.fromObject(model).toObject(SapHanaTableDataset.class);
        Assertions.assertEquals("qyrgqmndk", model.description());
        Assertions.assertEquals("ebylpzjelda", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.OBJECT, model.parameters().get("vbqy").type());
        Assertions.assertEquals("ppcbqetf", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
