// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.MetadataItem;
import com.azure.resourcemanager.datafactory.models.SftpWriteSettings;
import java.util.Arrays;

public final class SftpWriteSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SftpWriteSettings model = BinaryData.fromString(
            "{\"type\":\"SftpWriteSettings\",\"operationTimeout\":\"dataypkiqlo\",\"useTempFileRename\":\"datazbceimsco\",\"maxConcurrentConnections\":\"datanaehllwqmraihe\",\"disableMetricsCollection\":\"datajvzlgclia\",\"copyBehavior\":\"datawxvihyi\",\"metadata\":[{\"name\":\"dataxex\",\"value\":\"datano\"},{\"name\":\"dataymgkirfzvtzrq\",\"value\":\"datalipmuufsek\"},{\"name\":\"datapufhwpkpejfszw\",\"value\":\"datamswb\"},{\"name\":\"datamfwjcn\",\"value\":\"dataajptjhwrn\"}],\"\":{\"pafj\":\"dataka\",\"qja\":\"datadc\",\"dykjchzcz\":\"datafrzqwytgggidr\",\"tcvdzytsd\":\"datacpqkpgbssjqj\"}}")
            .toObject(SftpWriteSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SftpWriteSettings model = new SftpWriteSettings().withMaxConcurrentConnections("datanaehllwqmraihe")
            .withDisableMetricsCollection("datajvzlgclia")
            .withCopyBehavior("datawxvihyi")
            .withMetadata(Arrays.asList(new MetadataItem().withName("dataxex").withValue("datano"),
                new MetadataItem().withName("dataymgkirfzvtzrq").withValue("datalipmuufsek"),
                new MetadataItem().withName("datapufhwpkpejfszw").withValue("datamswb"),
                new MetadataItem().withName("datamfwjcn").withValue("dataajptjhwrn")))
            .withOperationTimeout("dataypkiqlo")
            .withUseTempFileRename("datazbceimsco");
        model = BinaryData.fromObject(model).toObject(SftpWriteSettings.class);
    }
}
