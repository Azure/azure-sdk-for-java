// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SsisEnvironmentReference;
import com.azure.resourcemanager.datafactory.models.SsisParameter;
import com.azure.resourcemanager.datafactory.models.SsisProject;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SsisProjectTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SsisProject model = BinaryData.fromString(
            "{\"type\":\"Project\",\"folderId\":1402483351488265161,\"version\":2381115839441940754,\"environmentRefs\":[{\"id\":1379544178862142488,\"environmentFolderName\":\"jzdjqzbr\",\"environmentName\":\"frmhoufokrbg\",\"referenceType\":\"jcksirs\"}],\"parameters\":[{\"id\":2068039513298288479,\"name\":\"lyxdeggnzadqmvp\",\"description\":\"pnsvkyq\",\"dataType\":\"pl\",\"required\":false,\"sensitive\":true,\"designDefaultValue\":\"jsrgclxnsvbkhh\",\"defaultValue\":\"sytue\",\"sensitiveDefaultValue\":\"gukywdp\",\"valueType\":\"wlcexkrpitqz\",\"valueSet\":false,\"variable\":\"eujcmtci\"},{\"id\":6519184799798061845,\"name\":\"nxhcxct\",\"description\":\"xoef\",\"dataType\":\"orylx\",\"required\":false,\"sensitive\":false,\"designDefaultValue\":\"zvq\",\"defaultValue\":\"ymtupyjtrxxzwdsn\",\"sensitiveDefaultValue\":\"yefnakdmtpjksdlu\",\"valueType\":\"tjxhxwt\",\"valueSet\":false,\"variable\":\"nvukvupu\"}],\"id\":1051284638662928792,\"name\":\"lynvpdvctqdapyds\",\"description\":\"zpjbsilbn\"}")
            .toObject(SsisProject.class);
        Assertions.assertEquals(1051284638662928792L, model.id());
        Assertions.assertEquals("lynvpdvctqdapyds", model.name());
        Assertions.assertEquals("zpjbsilbn", model.description());
        Assertions.assertEquals(1402483351488265161L, model.folderId());
        Assertions.assertEquals(2381115839441940754L, model.version());
        Assertions.assertEquals(1379544178862142488L, model.environmentRefs().get(0).id());
        Assertions.assertEquals("jzdjqzbr", model.environmentRefs().get(0).environmentFolderName());
        Assertions.assertEquals("frmhoufokrbg", model.environmentRefs().get(0).environmentName());
        Assertions.assertEquals("jcksirs", model.environmentRefs().get(0).referenceType());
        Assertions.assertEquals(2068039513298288479L, model.parameters().get(0).id());
        Assertions.assertEquals("lyxdeggnzadqmvp", model.parameters().get(0).name());
        Assertions.assertEquals("pnsvkyq", model.parameters().get(0).description());
        Assertions.assertEquals("pl", model.parameters().get(0).dataType());
        Assertions.assertEquals(false, model.parameters().get(0).required());
        Assertions.assertEquals(true, model.parameters().get(0).sensitive());
        Assertions.assertEquals("jsrgclxnsvbkhh", model.parameters().get(0).designDefaultValue());
        Assertions.assertEquals("sytue", model.parameters().get(0).defaultValue());
        Assertions.assertEquals("gukywdp", model.parameters().get(0).sensitiveDefaultValue());
        Assertions.assertEquals("wlcexkrpitqz", model.parameters().get(0).valueType());
        Assertions.assertEquals(false, model.parameters().get(0).valueSet());
        Assertions.assertEquals("eujcmtci", model.parameters().get(0).variable());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SsisProject model = new SsisProject().withId(1051284638662928792L)
            .withName("lynvpdvctqdapyds")
            .withDescription("zpjbsilbn")
            .withFolderId(1402483351488265161L)
            .withVersion(2381115839441940754L)
            .withEnvironmentRefs(Arrays.asList(new SsisEnvironmentReference().withId(1379544178862142488L)
                .withEnvironmentFolderName("jzdjqzbr")
                .withEnvironmentName("frmhoufokrbg")
                .withReferenceType("jcksirs")))
            .withParameters(Arrays.asList(
                new SsisParameter().withId(2068039513298288479L)
                    .withName("lyxdeggnzadqmvp")
                    .withDescription("pnsvkyq")
                    .withDataType("pl")
                    .withRequired(false)
                    .withSensitive(true)
                    .withDesignDefaultValue("jsrgclxnsvbkhh")
                    .withDefaultValue("sytue")
                    .withSensitiveDefaultValue("gukywdp")
                    .withValueType("wlcexkrpitqz")
                    .withValueSet(false)
                    .withVariable("eujcmtci"),
                new SsisParameter().withId(6519184799798061845L)
                    .withName("nxhcxct")
                    .withDescription("xoef")
                    .withDataType("orylx")
                    .withRequired(false)
                    .withSensitive(false)
                    .withDesignDefaultValue("zvq")
                    .withDefaultValue("ymtupyjtrxxzwdsn")
                    .withSensitiveDefaultValue("yefnakdmtpjksdlu")
                    .withValueType("tjxhxwt")
                    .withValueSet(false)
                    .withVariable("nvukvupu")));
        model = BinaryData.fromObject(model).toObject(SsisProject.class);
        Assertions.assertEquals(1051284638662928792L, model.id());
        Assertions.assertEquals("lynvpdvctqdapyds", model.name());
        Assertions.assertEquals("zpjbsilbn", model.description());
        Assertions.assertEquals(1402483351488265161L, model.folderId());
        Assertions.assertEquals(2381115839441940754L, model.version());
        Assertions.assertEquals(1379544178862142488L, model.environmentRefs().get(0).id());
        Assertions.assertEquals("jzdjqzbr", model.environmentRefs().get(0).environmentFolderName());
        Assertions.assertEquals("frmhoufokrbg", model.environmentRefs().get(0).environmentName());
        Assertions.assertEquals("jcksirs", model.environmentRefs().get(0).referenceType());
        Assertions.assertEquals(2068039513298288479L, model.parameters().get(0).id());
        Assertions.assertEquals("lyxdeggnzadqmvp", model.parameters().get(0).name());
        Assertions.assertEquals("pnsvkyq", model.parameters().get(0).description());
        Assertions.assertEquals("pl", model.parameters().get(0).dataType());
        Assertions.assertEquals(false, model.parameters().get(0).required());
        Assertions.assertEquals(true, model.parameters().get(0).sensitive());
        Assertions.assertEquals("jsrgclxnsvbkhh", model.parameters().get(0).designDefaultValue());
        Assertions.assertEquals("sytue", model.parameters().get(0).defaultValue());
        Assertions.assertEquals("gukywdp", model.parameters().get(0).sensitiveDefaultValue());
        Assertions.assertEquals("wlcexkrpitqz", model.parameters().get(0).valueType());
        Assertions.assertEquals(false, model.parameters().get(0).valueSet());
        Assertions.assertEquals("eujcmtci", model.parameters().get(0).variable());
    }
}
