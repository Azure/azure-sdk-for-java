// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzureDataLakeStoreSink;

public final class AzureDataLakeStoreSinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureDataLakeStoreSink model = BinaryData.fromString(
            "{\"type\":\"AzureDataLakeStoreSink\",\"copyBehavior\":\"datandfrfhgowhnvc\",\"enableAdlsSingleFileParallel\":\"datamuvgysto\",\"writeBatchSize\":\"datarktodeertyijlvcm\",\"writeBatchTimeout\":\"datanxxw\",\"sinkRetryCount\":\"dataedbdkwzbkhvlsahj\",\"sinkRetryWait\":\"databwyqnlus\",\"maxConcurrentConnections\":\"datalkrcpxlk\",\"disableMetricsCollection\":\"datafxtbvhmsvcmce\",\"\":{\"gkrpjonminsqjnu\":\"datahwriihwxchyy\",\"gkkg\":\"dataiytyarpeyigfdp\",\"bgrtse\":\"dataygjldljgd\",\"kofmtfwculsbnapz\":\"datanowzf\"}}")
            .toObject(AzureDataLakeStoreSink.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureDataLakeStoreSink model = new AzureDataLakeStoreSink().withWriteBatchSize("datarktodeertyijlvcm")
            .withWriteBatchTimeout("datanxxw")
            .withSinkRetryCount("dataedbdkwzbkhvlsahj")
            .withSinkRetryWait("databwyqnlus")
            .withMaxConcurrentConnections("datalkrcpxlk")
            .withDisableMetricsCollection("datafxtbvhmsvcmce")
            .withCopyBehavior("datandfrfhgowhnvc")
            .withEnableAdlsSingleFileParallel("datamuvgysto");
        model = BinaryData.fromObject(model).toObject(AzureDataLakeStoreSink.class);
    }
}
