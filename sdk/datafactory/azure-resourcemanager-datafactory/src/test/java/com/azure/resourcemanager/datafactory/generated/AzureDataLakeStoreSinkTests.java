// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzureDataLakeStoreSink;

public final class AzureDataLakeStoreSinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureDataLakeStoreSink model = BinaryData.fromString(
            "{\"type\":\"AzureDataLakeStoreSink\",\"copyBehavior\":\"datasyvryo\",\"enableAdlsSingleFileParallel\":\"dataqikcork\",\"writeBatchSize\":\"dataobobxfhtb\",\"writeBatchTimeout\":\"datavwzjycgcie\",\"sinkRetryCount\":\"datax\",\"sinkRetryWait\":\"datazvnghtknr\",\"maxConcurrentConnections\":\"datahysnmyuvf\",\"disableMetricsCollection\":\"datacnrapxw\",\"\":{\"lojjcz\":\"dataxoelfobehrcf\",\"gnqa\":\"dataytfwkvirmbrd\",\"ybh\":\"datankms\"}}")
            .toObject(AzureDataLakeStoreSink.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureDataLakeStoreSink model = new AzureDataLakeStoreSink().withWriteBatchSize("dataobobxfhtb")
            .withWriteBatchTimeout("datavwzjycgcie").withSinkRetryCount("datax").withSinkRetryWait("datazvnghtknr")
            .withMaxConcurrentConnections("datahysnmyuvf").withDisableMetricsCollection("datacnrapxw")
            .withCopyBehavior("datasyvryo").withEnableAdlsSingleFileParallel("dataqikcork");
        model = BinaryData.fromObject(model).toObject(AzureDataLakeStoreSink.class);
    }
}
