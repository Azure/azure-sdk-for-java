// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzureDataLakeStoreSink;

public final class AzureDataLakeStoreSinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureDataLakeStoreSink model =
            BinaryData
                .fromString(
                    "{\"type\":\"AzureDataLakeStoreSink\",\"copyBehavior\":\"datayipjzgmxqaupy\",\"enableAdlsSingleFileParallel\":\"datagoyp\",\"writeBatchSize\":\"dataooyyfysn\",\"writeBatchTimeout\":\"datajnl\",\"sinkRetryCount\":\"datacmhonojese\",\"sinkRetryWait\":\"dataxel\",\"maxConcurrentConnections\":\"dataxwmpziy\",\"disableMetricsCollection\":\"datasjswedkfof\",\"\":{\"utzlvx\":\"datapunwp\",\"vddwgozr\":\"dataolvedzrjkrpor\"}}")
                .toObject(AzureDataLakeStoreSink.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureDataLakeStoreSink model =
            new AzureDataLakeStoreSink()
                .withWriteBatchSize("dataooyyfysn")
                .withWriteBatchTimeout("datajnl")
                .withSinkRetryCount("datacmhonojese")
                .withSinkRetryWait("dataxel")
                .withMaxConcurrentConnections("dataxwmpziy")
                .withDisableMetricsCollection("datasjswedkfof")
                .withCopyBehavior("datayipjzgmxqaupy")
                .withEnableAdlsSingleFileParallel("datagoyp");
        model = BinaryData.fromObject(model).toObject(AzureDataLakeStoreSink.class);
    }
}
