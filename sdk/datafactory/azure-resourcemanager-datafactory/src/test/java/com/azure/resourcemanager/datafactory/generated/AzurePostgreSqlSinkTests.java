// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzurePostgreSqlSink;

public final class AzurePostgreSqlSinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzurePostgreSqlSink model =
            BinaryData
                .fromString(
                    "{\"type\":\"AzurePostgreSqlSink\",\"preCopyScript\":\"datacownxiwpptvbud\",\"writeBatchSize\":\"dataujvmllyjelnhm\",\"writeBatchTimeout\":\"datahxkofzxkqsle\",\"sinkRetryCount\":\"databam\",\"sinkRetryWait\":\"datanwgccgblepam\",\"maxConcurrentConnections\":\"databaxdaoja\",\"disableMetricsCollection\":\"dataq\",\"\":{\"ljmj\":\"dataqlnxvnm\",\"vhjbzpohfej\":\"datayadafecwnufldzjc\"}}")
                .toObject(AzurePostgreSqlSink.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzurePostgreSqlSink model =
            new AzurePostgreSqlSink()
                .withWriteBatchSize("dataujvmllyjelnhm")
                .withWriteBatchTimeout("datahxkofzxkqsle")
                .withSinkRetryCount("databam")
                .withSinkRetryWait("datanwgccgblepam")
                .withMaxConcurrentConnections("databaxdaoja")
                .withDisableMetricsCollection("dataq")
                .withPreCopyScript("datacownxiwpptvbud");
        model = BinaryData.fromObject(model).toObject(AzurePostgreSqlSink.class);
    }
}
