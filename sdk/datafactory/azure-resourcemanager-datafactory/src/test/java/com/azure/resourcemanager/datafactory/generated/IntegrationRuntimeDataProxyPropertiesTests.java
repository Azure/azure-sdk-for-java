// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.EntityReference;
import com.azure.resourcemanager.datafactory.models.IntegrationRuntimeDataProxyProperties;
import com.azure.resourcemanager.datafactory.models.IntegrationRuntimeEntityReferenceType;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class IntegrationRuntimeDataProxyPropertiesTests {
    @Test
    public void testDeserialize() {
        IntegrationRuntimeDataProxyProperties model =
            BinaryData
                .fromString(
                    "{\"connectVia\":{\"type\":\"IntegrationRuntimeReference\",\"referenceName\":\"pxzuca\"},\"stagingLinkedService\":{\"type\":\"IntegrationRuntimeReference\",\"referenceName\":\"wnlzafwxu\"},\"path\":\"nhgookrtalvnbw\"}")
                .toObject(IntegrationRuntimeDataProxyProperties.class);
        Assertions
            .assertEquals(
                IntegrationRuntimeEntityReferenceType.INTEGRATION_RUNTIME_REFERENCE, model.connectVia().type());
        Assertions.assertEquals("pxzuca", model.connectVia().referenceName());
        Assertions
            .assertEquals(
                IntegrationRuntimeEntityReferenceType.INTEGRATION_RUNTIME_REFERENCE,
                model.stagingLinkedService().type());
        Assertions.assertEquals("wnlzafwxu", model.stagingLinkedService().referenceName());
        Assertions.assertEquals("nhgookrtalvnbw", model.path());
    }

    @Test
    public void testSerialize() {
        IntegrationRuntimeDataProxyProperties model =
            new IntegrationRuntimeDataProxyProperties()
                .withConnectVia(
                    new EntityReference()
                        .withType(IntegrationRuntimeEntityReferenceType.INTEGRATION_RUNTIME_REFERENCE)
                        .withReferenceName("pxzuca"))
                .withStagingLinkedService(
                    new EntityReference()
                        .withType(IntegrationRuntimeEntityReferenceType.INTEGRATION_RUNTIME_REFERENCE)
                        .withReferenceName("wnlzafwxu"))
                .withPath("nhgookrtalvnbw");
        model = BinaryData.fromObject(model).toObject(IntegrationRuntimeDataProxyProperties.class);
        Assertions
            .assertEquals(
                IntegrationRuntimeEntityReferenceType.INTEGRATION_RUNTIME_REFERENCE, model.connectVia().type());
        Assertions.assertEquals("pxzuca", model.connectVia().referenceName());
        Assertions
            .assertEquals(
                IntegrationRuntimeEntityReferenceType.INTEGRATION_RUNTIME_REFERENCE,
                model.stagingLinkedService().type());
        Assertions.assertEquals("wnlzafwxu", model.stagingLinkedService().referenceName());
        Assertions.assertEquals("nhgookrtalvnbw", model.path());
    }
}
