// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.DocumentDbCollectionDataset;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class DocumentDbCollectionDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DocumentDbCollectionDataset model = BinaryData.fromString(
            "{\"type\":\"cffrx\",\"typeProperties\":{\"collectionName\":\"dataivdfwgqjh\"},\"description\":\"ezkhzp\",\"structure\":\"dataqissen\",\"schema\":\"datarusyzai\",\"linkedServiceName\":{\"referenceName\":\"npsjnpc\",\"parameters\":{\"lvvmnbkxja\":\"dataujyduonbdawsao\",\"xqkdyqjvzvcgrds\":\"datasbbdddwokqxai\",\"hvzf\":\"datazesfkqqx\",\"wukokgoojj\":\"databrouszxac\"}},\"parameters\":{\"unhgbtzvxxvsbcuu\":{\"type\":\"String\",\"defaultValue\":\"databc\"},\"urqmw\":{\"type\":\"Array\",\"defaultValue\":\"datafnkcnihkswxm\"},\"svnkxmyt\":{\"type\":\"Object\",\"defaultValue\":\"datapntumotahb\"}},\"annotations\":[\"dataedr\"],\"folder\":{\"name\":\"gc\"},\"\":{\"zzmiemqyft\":\"datarhkv\",\"mghpakbqyh\":\"datapqoswgfqv\",\"jm\":\"datasornfbmeqagkn\"}}")
            .toObject(DocumentDbCollectionDataset.class);
        Assertions.assertEquals("ezkhzp", model.description());
        Assertions.assertEquals("npsjnpc", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.STRING, model.parameters().get("unhgbtzvxxvsbcuu").type());
        Assertions.assertEquals("gc", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DocumentDbCollectionDataset model = new DocumentDbCollectionDataset().withDescription("ezkhzp")
            .withStructure("dataqissen")
            .withSchema("datarusyzai")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("npsjnpc")
                .withParameters(mapOf("lvvmnbkxja", "dataujyduonbdawsao", "xqkdyqjvzvcgrds", "datasbbdddwokqxai",
                    "hvzf", "datazesfkqqx", "wukokgoojj", "databrouszxac")))
            .withParameters(mapOf("unhgbtzvxxvsbcuu",
                new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("databc"), "urqmw",
                new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("datafnkcnihkswxm"),
                "svnkxmyt",
                new ParameterSpecification().withType(ParameterType.OBJECT).withDefaultValue("datapntumotahb")))
            .withAnnotations(Arrays.asList("dataedr"))
            .withFolder(new DatasetFolder().withName("gc"))
            .withCollectionName("dataivdfwgqjh");
        model = BinaryData.fromObject(model).toObject(DocumentDbCollectionDataset.class);
        Assertions.assertEquals("ezkhzp", model.description());
        Assertions.assertEquals("npsjnpc", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.STRING, model.parameters().get("unhgbtzvxxvsbcuu").type());
        Assertions.assertEquals("gc", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
