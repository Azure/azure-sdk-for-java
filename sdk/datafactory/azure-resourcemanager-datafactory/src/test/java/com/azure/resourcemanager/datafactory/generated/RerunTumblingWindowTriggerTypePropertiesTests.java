// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.fluent.models.RerunTumblingWindowTriggerTypeProperties;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class RerunTumblingWindowTriggerTypePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RerunTumblingWindowTriggerTypeProperties model =
            BinaryData
                .fromString(
                    "{\"parentTrigger\":\"datawrqywaagzaxqh\",\"requestedStartTime\":\"2021-07-31T01:48:53Z\",\"requestedEndTime\":\"2021-04-25T14:25:18Z\",\"rerunConcurrency\":370253583}")
                .toObject(RerunTumblingWindowTriggerTypeProperties.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-31T01:48:53Z"), model.requestedStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-25T14:25:18Z"), model.requestedEndTime());
        Assertions.assertEquals(370253583, model.rerunConcurrency());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RerunTumblingWindowTriggerTypeProperties model =
            new RerunTumblingWindowTriggerTypeProperties()
                .withParentTrigger("datawrqywaagzaxqh")
                .withRequestedStartTime(OffsetDateTime.parse("2021-07-31T01:48:53Z"))
                .withRequestedEndTime(OffsetDateTime.parse("2021-04-25T14:25:18Z"))
                .withRerunConcurrency(370253583);
        model = BinaryData.fromObject(model).toObject(RerunTumblingWindowTriggerTypeProperties.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-31T01:48:53Z"), model.requestedStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-25T14:25:18Z"), model.requestedEndTime());
        Assertions.assertEquals(370253583, model.rerunConcurrency());
    }
}
