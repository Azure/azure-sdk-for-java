// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.PostgreSqlV2TableDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class PostgreSqlV2TableDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PostgreSqlV2TableDataset model = BinaryData.fromString(
            "{\"type\":\"PostgreSqlV2Table\",\"typeProperties\":{\"table\":\"datasfcriqxzix\",\"schema\":\"datalxwmvcdkucpx\"},\"description\":\"afr\",\"structure\":\"datagorogeuvmk\",\"schema\":\"datapnr\",\"linkedServiceName\":{\"referenceName\":\"jseml\",\"parameters\":{\"tikelpmwgr\":\"datarsnqpljpetex\",\"udhvos\":\"dataub\",\"gq\":\"datajzscuezalivdf\"}},\"parameters\":{\"rxggezkhzp\":{\"type\":\"Array\",\"defaultValue\":\"dataf\"},\"yzaivnpsjnpckpl\":{\"type\":\"String\",\"defaultValue\":\"dataissenerru\"},\"pl\":{\"type\":\"Float\",\"defaultValue\":\"dataduonbdawsa\"}},\"annotations\":[\"datanbkxjarsbb\",\"dataddwokqxail\",\"dataqk\",\"datayqjvzvc\"],\"folder\":{\"name\":\"spzesfkqqxuhvz\"},\"\":{\"j\":\"datarouszxacdwukokgo\",\"ubcmun\":\"datafuk\",\"fkrfnkcni\":\"datagbtzvxxvsbcu\"}}")
            .toObject(PostgreSqlV2TableDataset.class);
        Assertions.assertEquals("afr", model.description());
        Assertions.assertEquals("jseml", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.ARRAY, model.parameters().get("rxggezkhzp").type());
        Assertions.assertEquals("spzesfkqqxuhvz", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PostgreSqlV2TableDataset model = new PostgreSqlV2TableDataset().withDescription("afr")
            .withStructure("datagorogeuvmk")
            .withSchema("datapnr")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("jseml")
                .withParameters(mapOf("tikelpmwgr", "datarsnqpljpetex", "udhvos", "dataub", "gq", "datajzscuezalivdf")))
            .withParameters(mapOf("rxggezkhzp",
                new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("dataf"), "yzaivnpsjnpckpl",
                new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("dataissenerru"), "pl",
                new ParameterSpecification().withType(ParameterType.FLOAT).withDefaultValue("dataduonbdawsa")))
            .withAnnotations(Arrays.asList("datanbkxjarsbb", "dataddwokqxail", "dataqk", "datayqjvzvc"))
            .withFolder(new DatasetFolder().withName("spzesfkqqxuhvz"))
            .withTable("datasfcriqxzix")
            .withSchemaTypePropertiesSchema("datalxwmvcdkucpx");
        model = BinaryData.fromObject(model).toObject(PostgreSqlV2TableDataset.class);
        Assertions.assertEquals("afr", model.description());
        Assertions.assertEquals("jseml", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.ARRAY, model.parameters().get("rxggezkhzp").type());
        Assertions.assertEquals("spzesfkqqxuhvz", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
