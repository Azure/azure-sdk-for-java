// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.PostgreSqlV2TableDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class PostgreSqlV2TableDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PostgreSqlV2TableDataset model = BinaryData.fromString(
            "{\"type\":\"vvoydwedggwg\",\"typeProperties\":{\"table\":\"datai\",\"schema\":\"datajrgtruwpuqpsrce\"},\"description\":\"vbwa\",\"structure\":\"dataadrjbjng\",\"schema\":\"datar\",\"linkedServiceName\":{\"referenceName\":\"rdrwiem\",\"parameters\":{\"rxirq\":\"dataniapypi\",\"nytkmlfupjzc\":\"dataipzesstu\",\"ahxuerrdaktnytk\":\"dataxvzjoyxj\"}},\"parameters\":{\"fqjckmpwyvlhnhhc\":{\"type\":\"SecureString\",\"defaultValue\":\"datacvcp\"},\"lrcygotohzwto\":{\"type\":\"Int\",\"defaultValue\":\"datalebgjgylsacagi\"}},\"annotations\":[\"databxitrapwzhlutj\",\"datajzelsriemvupmea\",\"dataosysycv\",\"datade\"],\"folder\":{\"name\":\"bsaipusuofkegbvb\"},\"\":{\"f\":\"dataedfflzvsluazz\",\"ee\":\"dataveugpx\",\"scboxra\":\"datapup\"}}")
            .toObject(PostgreSqlV2TableDataset.class);
        Assertions.assertEquals("vbwa", model.description());
        Assertions.assertEquals("rdrwiem", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.SECURE_STRING, model.parameters().get("fqjckmpwyvlhnhhc").type());
        Assertions.assertEquals("bsaipusuofkegbvb", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PostgreSqlV2TableDataset model
            = new PostgreSqlV2TableDataset().withDescription("vbwa")
                .withStructure("dataadrjbjng")
                .withSchema("datar")
                .withLinkedServiceName(new LinkedServiceReference().withReferenceName("rdrwiem")
                    .withParameters(mapOf("rxirq", "dataniapypi", "nytkmlfupjzc", "dataipzesstu", "ahxuerrdaktnytk",
                        "dataxvzjoyxj")))
                .withParameters(mapOf("fqjckmpwyvlhnhhc",
                    new ParameterSpecification().withType(ParameterType.SECURE_STRING).withDefaultValue("datacvcp"),
                    "lrcygotohzwto",
                    new ParameterSpecification().withType(ParameterType.INT).withDefaultValue("datalebgjgylsacagi")))
                .withAnnotations(Arrays.asList("databxitrapwzhlutj", "datajzelsriemvupmea", "dataosysycv", "datade"))
                .withFolder(new DatasetFolder().withName("bsaipusuofkegbvb"))
                .withTable("datai")
                .withSchemaTypePropertiesSchema("datajrgtruwpuqpsrce");
        model = BinaryData.fromObject(model).toObject(PostgreSqlV2TableDataset.class);
        Assertions.assertEquals("vbwa", model.description());
        Assertions.assertEquals("rdrwiem", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.SECURE_STRING, model.parameters().get("fqjckmpwyvlhnhhc").type());
        Assertions.assertEquals("bsaipusuofkegbvb", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
