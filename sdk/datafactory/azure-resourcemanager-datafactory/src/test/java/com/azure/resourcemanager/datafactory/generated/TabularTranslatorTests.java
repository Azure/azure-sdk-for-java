// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.TabularTranslator;
import com.azure.resourcemanager.datafactory.models.TypeConversionSettings;

public final class TabularTranslatorTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TabularTranslator model =
            BinaryData
                .fromString(
                    "{\"type\":\"TabularTranslator\",\"columnMappings\":\"dataezb\",\"schemaMapping\":\"dataullqpcijyx\",\"collectionReference\":\"dataqcggksr\",\"mapComplexValuesToString\":\"datax\",\"mappings\":\"datafhar\",\"typeConversion\":\"dataltlftraylxz\",\"typeConversionSettings\":{\"allowDataTruncation\":\"datapuhbao\",\"treatBooleanAsNumber\":\"datawbkxdhavegy\",\"dateTimeFormat\":\"datasmlbz\",\"dateTimeOffsetFormat\":\"datapdatvndvwwejvqpw\",\"timeSpanFormat\":\"dataioqwmhcpujygnt\",\"culture\":\"datae\"},\"\":{\"rso\":\"datasqthcywyoqx\",\"lr\":\"dataf\",\"ffl\":\"dataj\",\"ljf\":\"datazm\"}}")
                .toObject(TabularTranslator.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TabularTranslator model =
            new TabularTranslator()
                .withColumnMappings("dataezb")
                .withSchemaMapping("dataullqpcijyx")
                .withCollectionReference("dataqcggksr")
                .withMapComplexValuesToString("datax")
                .withMappings("datafhar")
                .withTypeConversion("dataltlftraylxz")
                .withTypeConversionSettings(
                    new TypeConversionSettings()
                        .withAllowDataTruncation("datapuhbao")
                        .withTreatBooleanAsNumber("datawbkxdhavegy")
                        .withDateTimeFormat("datasmlbz")
                        .withDateTimeOffsetFormat("datapdatvndvwwejvqpw")
                        .withTimeSpanFormat("dataioqwmhcpujygnt")
                        .withCulture("datae"));
        model = BinaryData.fromObject(model).toObject(TabularTranslator.class);
    }
}
