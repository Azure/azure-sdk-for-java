// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.TabularTranslator;
import com.azure.resourcemanager.datafactory.models.TypeConversionSettings;

public final class TabularTranslatorTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TabularTranslator model = BinaryData.fromString(
            "{\"type\":\"TabularTranslator\",\"columnMappings\":\"datayfaidzvdq\",\"schemaMapping\":\"dataiv\",\"collectionReference\":\"datayxsjblblxjbrqbut\",\"mapComplexValuesToString\":\"datacnqudm\",\"mappings\":\"datauvaweajq\",\"typeConversion\":\"datavbvkwr\",\"typeConversionSettings\":{\"allowDataTruncation\":\"dataoqyymhdbgobhl\",\"treatBooleanAsNumber\":\"datapaycqqgr\",\"dateTimeFormat\":\"datattosnz\",\"dateTimeOffsetFormat\":\"dataxifacrhpuzcagz\",\"timeSpanFormat\":\"datapbw\",\"timeFormat\":\"datasuig\",\"dateFormat\":\"dataemocndb\",\"culture\":\"dataxrkoxwyxodpcgdv\"},\"\":{\"afila\":\"databkvx\"}}")
            .toObject(TabularTranslator.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TabularTranslator model = new TabularTranslator().withColumnMappings("datayfaidzvdq")
            .withSchemaMapping("dataiv")
            .withCollectionReference("datayxsjblblxjbrqbut")
            .withMapComplexValuesToString("datacnqudm")
            .withMappings("datauvaweajq")
            .withTypeConversion("datavbvkwr")
            .withTypeConversionSettings(new TypeConversionSettings().withAllowDataTruncation("dataoqyymhdbgobhl")
                .withTreatBooleanAsNumber("datapaycqqgr")
                .withDateTimeFormat("datattosnz")
                .withDateTimeOffsetFormat("dataxifacrhpuzcagz")
                .withTimeSpanFormat("datapbw")
                .withTimeFormat("datasuig")
                .withDateFormat("dataemocndb")
                .withCulture("dataxrkoxwyxodpcgdv"));
        model = BinaryData.fromObject(model).toObject(TabularTranslator.class);
    }
}
