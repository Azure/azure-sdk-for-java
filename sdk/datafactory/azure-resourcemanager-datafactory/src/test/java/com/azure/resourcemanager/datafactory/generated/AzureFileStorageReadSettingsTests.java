// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzureFileStorageReadSettings;

public final class AzureFileStorageReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureFileStorageReadSettings model = BinaryData.fromString(
            "{\"type\":\"AzureFileStorageReadSettings\",\"recursive\":\"dataolwfkbdwzvhtg\",\"wildcardFolderPath\":\"dataygaphlwmivaz\",\"wildcardFileName\":\"databzcjmsr\",\"prefix\":\"datajbyyxkcva\",\"fileListPath\":\"databysxtjivw\",\"enablePartitionDiscovery\":\"datang\",\"partitionRootPath\":\"datayct\",\"deleteFilesAfterCompletion\":\"datahgjyholsmahbjc\",\"modifiedDatetimeStart\":\"dataskqxgbigozrvlkla\",\"modifiedDatetimeEnd\":\"datalysse\",\"maxConcurrentConnections\":\"datappgsfj\",\"disableMetricsCollection\":\"datagmogmcjn\",\"\":{\"wy\":\"datak\",\"rizflwlkov\":\"datacvqfzvyoxg\",\"dp\":\"datapqpf\"}}")
            .toObject(AzureFileStorageReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureFileStorageReadSettings model
            = new AzureFileStorageReadSettings().withMaxConcurrentConnections("datappgsfj")
                .withDisableMetricsCollection("datagmogmcjn")
                .withRecursive("dataolwfkbdwzvhtg")
                .withWildcardFolderPath("dataygaphlwmivaz")
                .withWildcardFileName("databzcjmsr")
                .withPrefix("datajbyyxkcva")
                .withFileListPath("databysxtjivw")
                .withEnablePartitionDiscovery("datang")
                .withPartitionRootPath("datayct")
                .withDeleteFilesAfterCompletion("datahgjyholsmahbjc")
                .withModifiedDatetimeStart("dataskqxgbigozrvlkla")
                .withModifiedDatetimeEnd("datalysse");
        model = BinaryData.fromObject(model).toObject(AzureFileStorageReadSettings.class);
    }
}
