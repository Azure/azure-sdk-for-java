// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.FactoryIdentity;
import com.azure.resourcemanager.datafactory.models.FactoryIdentityType;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class FactoryIdentityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FactoryIdentity model =
            BinaryData
                .fromString(
                    "{\"type\":\"SystemAssigned\",\"principalId\":\"b37fcaa7-64f2-4db7-a40e-e1e20fcb2f78\",\"tenantId\":\"28b3eacd-3b18-4dbe-ae5d-16c012a9972c\",\"userAssignedIdentities\":{\"qjpkcattpngjcrc\":\"dataleyyvx\"}}")
                .toObject(FactoryIdentity.class);
        Assertions.assertEquals(FactoryIdentityType.SYSTEM_ASSIGNED, model.type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FactoryIdentity model =
            new FactoryIdentity()
                .withType(FactoryIdentityType.SYSTEM_ASSIGNED)
                .withUserAssignedIdentities(mapOf("qjpkcattpngjcrc", "dataleyyvx"));
        model = BinaryData.fromObject(model).toObject(FactoryIdentity.class);
        Assertions.assertEquals(FactoryIdentityType.SYSTEM_ASSIGNED, model.type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
