// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.SapCloudForCustomerResourceDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SapCloudForCustomerResourceDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SapCloudForCustomerResourceDataset model = BinaryData.fromString(
            "{\"type\":\"SapCloudForCustomerResource\",\"typeProperties\":{\"path\":\"datadfhmlx\"},\"description\":\"keknumkqafzv\",\"structure\":\"datariysjrgt\",\"schema\":\"datawpuqpsrc\",\"linkedServiceName\":{\"referenceName\":\"kdvvoydwedggwg\",\"parameters\":{\"drjbjngoars\":\"databwatz\"}},\"parameters\":{\"rqw\":{\"type\":\"Float\",\"defaultValue\":\"dataemzcyniapypimrx\"},\"stuinytkmlfupjzc\":{\"type\":\"Object\",\"defaultValue\":\"datae\"},\"yxjg\":{\"type\":\"Array\",\"defaultValue\":\"datazj\"}},\"annotations\":[\"datauerrdaktnytkbc\",\"datarfcvcp\"],\"folder\":{\"name\":\"j\"},\"\":{\"vlhnhhcikhleb\":\"datapw\",\"giflr\":\"datajgylsac\"}}")
            .toObject(SapCloudForCustomerResourceDataset.class);
        Assertions.assertEquals("keknumkqafzv", model.description());
        Assertions.assertEquals("kdvvoydwedggwg", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.FLOAT, model.parameters().get("rqw").type());
        Assertions.assertEquals("j", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SapCloudForCustomerResourceDataset model
            = new SapCloudForCustomerResourceDataset().withDescription("keknumkqafzv")
                .withStructure("datariysjrgt")
                .withSchema("datawpuqpsrc")
                .withLinkedServiceName(new LinkedServiceReference().withReferenceName("kdvvoydwedggwg")
                    .withParameters(mapOf("drjbjngoars", "databwatz")))
                .withParameters(
                    mapOf("rqw",
                        new ParameterSpecification().withType(ParameterType.FLOAT)
                            .withDefaultValue("dataemzcyniapypimrx"),
                        "stuinytkmlfupjzc",
                        new ParameterSpecification().withType(ParameterType.OBJECT).withDefaultValue("datae"), "yxjg",
                        new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("datazj")))
                .withAnnotations(Arrays.asList("datauerrdaktnytkbc", "datarfcvcp"))
                .withFolder(new DatasetFolder().withName("j"))
                .withPath("datadfhmlx");
        model = BinaryData.fromObject(model).toObject(SapCloudForCustomerResourceDataset.class);
        Assertions.assertEquals("keknumkqafzv", model.description());
        Assertions.assertEquals("kdvvoydwedggwg", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.FLOAT, model.parameters().get("rqw").type());
        Assertions.assertEquals("j", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
