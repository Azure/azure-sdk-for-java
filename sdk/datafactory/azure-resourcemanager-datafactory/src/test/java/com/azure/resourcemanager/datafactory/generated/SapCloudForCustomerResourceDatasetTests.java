// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.SapCloudForCustomerResourceDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SapCloudForCustomerResourceDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SapCloudForCustomerResourceDataset model = BinaryData.fromString(
            "{\"type\":\"vjixgofqdqwsjm\",\"typeProperties\":{\"path\":\"dataraxnfyzguax\"},\"description\":\"uvrqpbxdoicqp\",\"structure\":\"datatly\",\"schema\":\"datarpensbm\",\"linkedServiceName\":{\"referenceName\":\"jritu\",\"parameters\":{\"f\":\"datamh\"}},\"parameters\":{\"zwanduhduwdvolxt\":{\"type\":\"Bool\",\"defaultValue\":\"datazjxwjoq\"}},\"annotations\":[\"dataic\",\"datas\",\"datalzbki\",\"datamjfgoxedrmra\"],\"folder\":{\"name\":\"chvvoyiogbntnwz\"},\"\":{\"ppnvcebspciry\":\"datasoowxcsmxtlc\",\"kwh\":\"datamhkdwuwedupbkm\",\"x\":\"datajsqwhaefefvv\",\"dobues\":\"databnmcvaqycd\"}}")
            .toObject(SapCloudForCustomerResourceDataset.class);
        Assertions.assertEquals("uvrqpbxdoicqp", model.description());
        Assertions.assertEquals("jritu", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.BOOL, model.parameters().get("zwanduhduwdvolxt").type());
        Assertions.assertEquals("chvvoyiogbntnwz", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SapCloudForCustomerResourceDataset model
            = new SapCloudForCustomerResourceDataset().withDescription("uvrqpbxdoicqp")
                .withStructure("datatly")
                .withSchema("datarpensbm")
                .withLinkedServiceName(
                    new LinkedServiceReference().withReferenceName("jritu").withParameters(mapOf("f", "datamh")))
                .withParameters(mapOf("zwanduhduwdvolxt",
                    new ParameterSpecification().withType(ParameterType.BOOL).withDefaultValue("datazjxwjoq")))
                .withAnnotations(Arrays.asList("dataic", "datas", "datalzbki", "datamjfgoxedrmra"))
                .withFolder(new DatasetFolder().withName("chvvoyiogbntnwz"))
                .withPath("dataraxnfyzguax");
        model = BinaryData.fromObject(model).toObject(SapCloudForCustomerResourceDataset.class);
        Assertions.assertEquals("uvrqpbxdoicqp", model.description());
        Assertions.assertEquals("jritu", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.BOOL, model.parameters().get("zwanduhduwdvolxt").type());
        Assertions.assertEquals("chvvoyiogbntnwz", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
