// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.BlobSource;

public final class BlobSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BlobSource model = BinaryData.fromString(
            "{\"type\":\"bjledjxblobknfpd\",\"treatEmptyAsNull\":\"dataacsfbmb\",\"skipHeaderLineCount\":\"dataefqku\",\"recursive\":\"datayumoamqxwluslxyt\",\"sourceRetryCount\":\"datahzgj\",\"sourceRetryWait\":\"dataomctbgoccypxsrh\",\"maxConcurrentConnections\":\"datalbnuflfzawk\",\"disableMetricsCollection\":\"datae\",\"\":{\"jnhwwy\":\"datapyoqfbjpclboioj\"}}")
            .toObject(BlobSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BlobSource model = new BlobSource().withSourceRetryCount("datahzgj")
            .withSourceRetryWait("dataomctbgoccypxsrh")
            .withMaxConcurrentConnections("datalbnuflfzawk")
            .withDisableMetricsCollection("datae")
            .withTreatEmptyAsNull("dataacsfbmb")
            .withSkipHeaderLineCount("dataefqku")
            .withRecursive("datayumoamqxwluslxyt");
        model = BinaryData.fromObject(model).toObject(BlobSource.class);
    }
}
