// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.BlobSource;

public final class BlobSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BlobSource model = BinaryData.fromString(
            "{\"type\":\"BlobSource\",\"treatEmptyAsNull\":\"datazuzvbqbroyrw\",\"skipHeaderLineCount\":\"databbfweozkbok\",\"recursive\":\"datasu\",\"sourceRetryCount\":\"datacslzca\",\"sourceRetryWait\":\"datad\",\"maxConcurrentConnections\":\"datafwkpupbsgfnqtxl\",\"disableMetricsCollection\":\"dataoviklxsgstunsatc\",\"\":{\"tgsazwx\":\"datadbehkbuajkodpz\",\"hasjbuhz\":\"datafaas\"}}")
            .toObject(BlobSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BlobSource model = new BlobSource().withSourceRetryCount("datacslzca")
            .withSourceRetryWait("datad")
            .withMaxConcurrentConnections("datafwkpupbsgfnqtxl")
            .withDisableMetricsCollection("dataoviklxsgstunsatc")
            .withTreatEmptyAsNull("datazuzvbqbroyrw")
            .withSkipHeaderLineCount("databbfweozkbok")
            .withRecursive("datasu");
        model = BinaryData.fromObject(model).toObject(BlobSource.class);
    }
}
