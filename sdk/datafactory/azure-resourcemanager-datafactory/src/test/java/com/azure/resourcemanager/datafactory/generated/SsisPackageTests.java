// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SsisPackage;
import com.azure.resourcemanager.datafactory.models.SsisParameter;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SsisPackageTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SsisPackage model = BinaryData.fromString(
            "{\"type\":\"Package\",\"folderId\":6056512355996014897,\"projectVersion\":4550609594207854420,\"projectId\":8576241744456427452,\"parameters\":[{\"id\":4305402148108255233,\"name\":\"vllpfjguzsy\",\"description\":\"am\",\"dataType\":\"eoxxbzagwnompvy\",\"required\":false,\"sensitive\":true,\"designDefaultValue\":\"ufysalbjfkjex\",\"defaultValue\":\"zmh\",\"sensitiveDefaultValue\":\"idipwczjnnmpifj\",\"valueType\":\"jen\",\"valueSet\":false,\"variable\":\"fpllosadjffllrs\"}],\"id\":6883034740159153282,\"name\":\"eoka\",\"description\":\"uddcc\"}")
            .toObject(SsisPackage.class);
        Assertions.assertEquals(6883034740159153282L, model.id());
        Assertions.assertEquals("eoka", model.name());
        Assertions.assertEquals("uddcc", model.description());
        Assertions.assertEquals(6056512355996014897L, model.folderId());
        Assertions.assertEquals(4550609594207854420L, model.projectVersion());
        Assertions.assertEquals(8576241744456427452L, model.projectId());
        Assertions.assertEquals(4305402148108255233L, model.parameters().get(0).id());
        Assertions.assertEquals("vllpfjguzsy", model.parameters().get(0).name());
        Assertions.assertEquals("am", model.parameters().get(0).description());
        Assertions.assertEquals("eoxxbzagwnompvy", model.parameters().get(0).dataType());
        Assertions.assertEquals(false, model.parameters().get(0).required());
        Assertions.assertEquals(true, model.parameters().get(0).sensitive());
        Assertions.assertEquals("ufysalbjfkjex", model.parameters().get(0).designDefaultValue());
        Assertions.assertEquals("zmh", model.parameters().get(0).defaultValue());
        Assertions.assertEquals("idipwczjnnmpifj", model.parameters().get(0).sensitiveDefaultValue());
        Assertions.assertEquals("jen", model.parameters().get(0).valueType());
        Assertions.assertEquals(false, model.parameters().get(0).valueSet());
        Assertions.assertEquals("fpllosadjffllrs", model.parameters().get(0).variable());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SsisPackage model = new SsisPackage().withId(6883034740159153282L)
            .withName("eoka")
            .withDescription("uddcc")
            .withFolderId(6056512355996014897L)
            .withProjectVersion(4550609594207854420L)
            .withProjectId(8576241744456427452L)
            .withParameters(Arrays.asList(new SsisParameter().withId(4305402148108255233L)
                .withName("vllpfjguzsy")
                .withDescription("am")
                .withDataType("eoxxbzagwnompvy")
                .withRequired(false)
                .withSensitive(true)
                .withDesignDefaultValue("ufysalbjfkjex")
                .withDefaultValue("zmh")
                .withSensitiveDefaultValue("idipwczjnnmpifj")
                .withValueType("jen")
                .withValueSet(false)
                .withVariable("fpllosadjffllrs")));
        model = BinaryData.fromObject(model).toObject(SsisPackage.class);
        Assertions.assertEquals(6883034740159153282L, model.id());
        Assertions.assertEquals("eoka", model.name());
        Assertions.assertEquals("uddcc", model.description());
        Assertions.assertEquals(6056512355996014897L, model.folderId());
        Assertions.assertEquals(4550609594207854420L, model.projectVersion());
        Assertions.assertEquals(8576241744456427452L, model.projectId());
        Assertions.assertEquals(4305402148108255233L, model.parameters().get(0).id());
        Assertions.assertEquals("vllpfjguzsy", model.parameters().get(0).name());
        Assertions.assertEquals("am", model.parameters().get(0).description());
        Assertions.assertEquals("eoxxbzagwnompvy", model.parameters().get(0).dataType());
        Assertions.assertEquals(false, model.parameters().get(0).required());
        Assertions.assertEquals(true, model.parameters().get(0).sensitive());
        Assertions.assertEquals("ufysalbjfkjex", model.parameters().get(0).designDefaultValue());
        Assertions.assertEquals("zmh", model.parameters().get(0).defaultValue());
        Assertions.assertEquals("idipwczjnnmpifj", model.parameters().get(0).sensitiveDefaultValue());
        Assertions.assertEquals("jen", model.parameters().get(0).valueType());
        Assertions.assertEquals(false, model.parameters().get(0).valueSet());
        Assertions.assertEquals("fpllosadjffllrs", model.parameters().get(0).variable());
    }
}
