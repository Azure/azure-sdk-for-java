// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SsisPackage;
import com.azure.resourcemanager.datafactory.models.SsisParameter;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SsisPackageTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SsisPackage model =
            BinaryData
                .fromString(
                    "{\"type\":\"Package\",\"folderId\":8840596202186352259,\"projectVersion\":8413150626448269128,\"projectId\":3815968071675012064,\"parameters\":[{\"id\":7252305858739380777,\"name\":\"wqieyxjkctyq\",\"description\":\"tampq\",\"dataType\":\"eftmub\",\"required\":true,\"sensitive\":true,\"designDefaultValue\":\"eql\",\"defaultValue\":\"tysyizeqlctpqn\",\"sensitiveDefaultValue\":\"k\",\"valueType\":\"gyzwfyfdbvoo\",\"valueSet\":false,\"variable\":\"kd\"}],\"id\":2515540147851548589,\"name\":\"gjjsmvsiyqml\",\"description\":\"jwsmnwbmacvemmr\"}")
                .toObject(SsisPackage.class);
        Assertions.assertEquals(2515540147851548589L, model.id());
        Assertions.assertEquals("gjjsmvsiyqml", model.name());
        Assertions.assertEquals("jwsmnwbmacvemmr", model.description());
        Assertions.assertEquals(8840596202186352259L, model.folderId());
        Assertions.assertEquals(8413150626448269128L, model.projectVersion());
        Assertions.assertEquals(3815968071675012064L, model.projectId());
        Assertions.assertEquals(7252305858739380777L, model.parameters().get(0).id());
        Assertions.assertEquals("wqieyxjkctyq", model.parameters().get(0).name());
        Assertions.assertEquals("tampq", model.parameters().get(0).description());
        Assertions.assertEquals("eftmub", model.parameters().get(0).dataType());
        Assertions.assertEquals(true, model.parameters().get(0).required());
        Assertions.assertEquals(true, model.parameters().get(0).sensitive());
        Assertions.assertEquals("eql", model.parameters().get(0).designDefaultValue());
        Assertions.assertEquals("tysyizeqlctpqn", model.parameters().get(0).defaultValue());
        Assertions.assertEquals("k", model.parameters().get(0).sensitiveDefaultValue());
        Assertions.assertEquals("gyzwfyfdbvoo", model.parameters().get(0).valueType());
        Assertions.assertEquals(false, model.parameters().get(0).valueSet());
        Assertions.assertEquals("kd", model.parameters().get(0).variable());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SsisPackage model =
            new SsisPackage()
                .withId(2515540147851548589L)
                .withName("gjjsmvsiyqml")
                .withDescription("jwsmnwbmacvemmr")
                .withFolderId(8840596202186352259L)
                .withProjectVersion(8413150626448269128L)
                .withProjectId(3815968071675012064L)
                .withParameters(
                    Arrays
                        .asList(
                            new SsisParameter()
                                .withId(7252305858739380777L)
                                .withName("wqieyxjkctyq")
                                .withDescription("tampq")
                                .withDataType("eftmub")
                                .withRequired(true)
                                .withSensitive(true)
                                .withDesignDefaultValue("eql")
                                .withDefaultValue("tysyizeqlctpqn")
                                .withSensitiveDefaultValue("k")
                                .withValueType("gyzwfyfdbvoo")
                                .withValueSet(false)
                                .withVariable("kd")));
        model = BinaryData.fromObject(model).toObject(SsisPackage.class);
        Assertions.assertEquals(2515540147851548589L, model.id());
        Assertions.assertEquals("gjjsmvsiyqml", model.name());
        Assertions.assertEquals("jwsmnwbmacvemmr", model.description());
        Assertions.assertEquals(8840596202186352259L, model.folderId());
        Assertions.assertEquals(8413150626448269128L, model.projectVersion());
        Assertions.assertEquals(3815968071675012064L, model.projectId());
        Assertions.assertEquals(7252305858739380777L, model.parameters().get(0).id());
        Assertions.assertEquals("wqieyxjkctyq", model.parameters().get(0).name());
        Assertions.assertEquals("tampq", model.parameters().get(0).description());
        Assertions.assertEquals("eftmub", model.parameters().get(0).dataType());
        Assertions.assertEquals(true, model.parameters().get(0).required());
        Assertions.assertEquals(true, model.parameters().get(0).sensitive());
        Assertions.assertEquals("eql", model.parameters().get(0).designDefaultValue());
        Assertions.assertEquals("tysyizeqlctpqn", model.parameters().get(0).defaultValue());
        Assertions.assertEquals("k", model.parameters().get(0).sensitiveDefaultValue());
        Assertions.assertEquals("gyzwfyfdbvoo", model.parameters().get(0).valueType());
        Assertions.assertEquals(false, model.parameters().get(0).valueSet());
        Assertions.assertEquals("kd", model.parameters().get(0).variable());
    }
}
