// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.MicrosoftAccessSource;

public final class MicrosoftAccessSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MicrosoftAccessSource model = BinaryData.fromString(
            "{\"type\":\"hsodofsxjik\",\"query\":\"datawkwxdgcfcfkyyrj\",\"additionalColumns\":\"datahslrbwwkbyw\",\"sourceRetryCount\":\"datasquhu\",\"sourceRetryWait\":\"dataqwoggwcxdm\",\"maxConcurrentConnections\":\"datauwldfahkyft\",\"disableMetricsCollection\":\"datakbgsgopyckmncru\",\"\":{\"qkgixfnrneyav\":\"datadjmda\",\"iizbwfjumulhf\":\"datadovpwrqcfzokplz\",\"qcapbkfvowzbk\":\"datadgnchahldnrpt\"}}")
            .toObject(MicrosoftAccessSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MicrosoftAccessSource model = new MicrosoftAccessSource().withSourceRetryCount("datasquhu")
            .withSourceRetryWait("dataqwoggwcxdm")
            .withMaxConcurrentConnections("datauwldfahkyft")
            .withDisableMetricsCollection("datakbgsgopyckmncru")
            .withQuery("datawkwxdgcfcfkyyrj")
            .withAdditionalColumns("datahslrbwwkbyw");
        model = BinaryData.fromObject(model).toObject(MicrosoftAccessSource.class);
    }
}
