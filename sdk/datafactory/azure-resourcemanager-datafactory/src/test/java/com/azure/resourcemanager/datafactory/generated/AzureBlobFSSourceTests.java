// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzureBlobFSSource;

public final class AzureBlobFSSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureBlobFSSource model = BinaryData.fromString(
            "{\"type\":\"AzureBlobFSSource\",\"treatEmptyAsNull\":\"datajypxcqmdeecdh\",\"skipHeaderLineCount\":\"datasiz\",\"recursive\":\"datappmykgr\",\"sourceRetryCount\":\"datahm\",\"sourceRetryWait\":\"datahismw\",\"maxConcurrentConnections\":\"dataqtfyuyg\",\"disableMetricsCollection\":\"datashchxueaitzgew\",\"\":{\"usqupkrrp\":\"dataibtkrhcgbzrlfse\",\"cfvzslttkpirku\":\"datamwozwjinxyrt\"}}")
            .toObject(AzureBlobFSSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureBlobFSSource model = new AzureBlobFSSource().withSourceRetryCount("datahm")
            .withSourceRetryWait("datahismw")
            .withMaxConcurrentConnections("dataqtfyuyg")
            .withDisableMetricsCollection("datashchxueaitzgew")
            .withTreatEmptyAsNull("datajypxcqmdeecdh")
            .withSkipHeaderLineCount("datasiz")
            .withRecursive("datappmykgr");
        model = BinaryData.fromObject(model).toObject(AzureBlobFSSource.class);
    }
}
