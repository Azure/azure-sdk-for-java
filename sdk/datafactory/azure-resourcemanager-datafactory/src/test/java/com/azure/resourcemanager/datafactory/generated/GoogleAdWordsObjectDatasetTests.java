// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.GoogleAdWordsObjectDataset;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class GoogleAdWordsObjectDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GoogleAdWordsObjectDataset model = BinaryData.fromString(
            "{\"type\":\"qeetsqaclc\",\"typeProperties\":{\"tableName\":\"dataxoibdctjwfeb\"},\"description\":\"rofyyraiai\",\"structure\":\"datakewqwamptld\",\"schema\":\"dataorzljhnxfkffng\",\"linkedServiceName\":{\"referenceName\":\"pilloirm\",\"parameters\":{\"rqmznwwtkuy\":\"databktuqnbcjk\"}},\"parameters\":{\"moyoioxdwff\":{\"type\":\"SecureString\",\"defaultValue\":\"datainlic\"}},\"annotations\":[\"dataqkebc\",\"datarreuec\"],\"folder\":{\"name\":\"d\"},\"\":{\"vkdvcgowrd\":\"datauscolbqvehtekx\",\"yrkwsthpivocf\":\"dataddddwzdlbbcztam\",\"yroswnfqd\":\"dataxhvnodqqzjb\"}}")
            .toObject(GoogleAdWordsObjectDataset.class);
        Assertions.assertEquals("rofyyraiai", model.description());
        Assertions.assertEquals("pilloirm", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.SECURE_STRING, model.parameters().get("moyoioxdwff").type());
        Assertions.assertEquals("d", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GoogleAdWordsObjectDataset model = new GoogleAdWordsObjectDataset().withDescription("rofyyraiai")
            .withStructure("datakewqwamptld")
            .withSchema("dataorzljhnxfkffng")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("pilloirm")
                .withParameters(mapOf("rqmznwwtkuy", "databktuqnbcjk")))
            .withParameters(mapOf("moyoioxdwff",
                new ParameterSpecification().withType(ParameterType.SECURE_STRING).withDefaultValue("datainlic")))
            .withAnnotations(Arrays.asList("dataqkebc", "datarreuec"))
            .withFolder(new DatasetFolder().withName("d"))
            .withTableName("dataxoibdctjwfeb");
        model = BinaryData.fromObject(model).toObject(GoogleAdWordsObjectDataset.class);
        Assertions.assertEquals("rofyyraiai", model.description());
        Assertions.assertEquals("pilloirm", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.SECURE_STRING, model.parameters().get("moyoioxdwff").type());
        Assertions.assertEquals("d", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
