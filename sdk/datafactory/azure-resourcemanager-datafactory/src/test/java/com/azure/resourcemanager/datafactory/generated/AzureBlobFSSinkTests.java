// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzureBlobFSSink;
import com.azure.resourcemanager.datafactory.models.MetadataItem;
import java.util.Arrays;

public final class AzureBlobFSSinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureBlobFSSink model = BinaryData.fromString(
            "{\"type\":\"AzureBlobFSSink\",\"copyBehavior\":\"dataou\",\"metadata\":[{\"name\":\"datafdxgtg\",\"value\":\"datakeaeupmhtlkjfpq\"},{\"name\":\"databq\",\"value\":\"dataxsuxvjjwlwy\"},{\"name\":\"dataswzh\",\"value\":\"dataazwebts\"},{\"name\":\"dataqkanuxjud\",\"value\":\"datazodnxlcdgkc\"}],\"writeBatchSize\":\"dataancjlkrskzw\",\"writeBatchTimeout\":\"databafqzihmvw\",\"sinkRetryCount\":\"datajwvqiahoqjz\",\"sinkRetryWait\":\"datavwdlrt\",\"maxConcurrentConnections\":\"dataulmzxhgwz\",\"disableMetricsCollection\":\"datastw\",\"\":{\"jssjbpna\":\"dataehn\"}}")
            .toObject(AzureBlobFSSink.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureBlobFSSink model = new AzureBlobFSSink().withWriteBatchSize("dataancjlkrskzw")
            .withWriteBatchTimeout("databafqzihmvw")
            .withSinkRetryCount("datajwvqiahoqjz")
            .withSinkRetryWait("datavwdlrt")
            .withMaxConcurrentConnections("dataulmzxhgwz")
            .withDisableMetricsCollection("datastw")
            .withCopyBehavior("dataou")
            .withMetadata(Arrays.asList(new MetadataItem().withName("datafdxgtg").withValue("datakeaeupmhtlkjfpq"),
                new MetadataItem().withName("databq").withValue("dataxsuxvjjwlwy"),
                new MetadataItem().withName("dataswzh").withValue("dataazwebts"),
                new MetadataItem().withName("dataqkanuxjud").withValue("datazodnxlcdgkc")));
        model = BinaryData.fromObject(model).toObject(AzureBlobFSSink.class);
    }
}
