// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.core.util.serializer.JacksonAdapter;
import com.azure.core.util.serializer.SerializerEncoding;
import com.azure.resourcemanager.datafactory.models.TriggerRun;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Test;

public final class TriggerRunTests {
    @Test
    public void testDeserialize() {
        TriggerRun model =
            BinaryData
                .fromString(
                    "{\"triggerRunId\":\"nwxuqlcvydyp\",\"triggerName\":\"dooaojkniodko\",\"triggerType\":\"bw\",\"triggerRunTimestamp\":\"2021-01-14T23:54:10Z\",\"status\":\"Succeeded\",\"message\":\"msbvdkcrodtjinf\",\"properties\":{\"f\":\"fltkacjv\",\"gaowpulpqblylsyx\":\"dlfoakggkfp\"},\"triggeredPipelines\":{\"r\":\"nsj\",\"dszue\":\"tiagx\",\"icvi\":\"psbzkfzbeyvpn\",\"jjxd\":\"v\"},\"runDimension\":{\"aztz\":\"uukzclewyhmlw\",\"yq\":\"ofncckwyfzqwhxxb\",\"ztppriolxorjalto\":\"xzfe\",\"wdcfhucqdpfuv\":\"mncwsobqwcsdb\"},\"dependencyStatus\":{},\"\":{}}")
                .toObject(TriggerRun.class);
    }

    @Test
    public void testSerialize() throws IOException {
        TriggerRun model =
            new TriggerRun()
                .withAdditionalProperties(
                    mapOf(
                        "triggerRunId",
                        "nwxuqlcvydyp",
                        "triggerName",
                        "dooaojkniodko",
                        "runDimension",
                        JacksonAdapter
                            .createDefaultSerializerAdapter()
                            .deserialize(
                                "{\"aztz\":\"uukzclewyhmlw\",\"yq\":\"ofncckwyfzqwhxxb\",\"ztppriolxorjalto\":\"xzfe\",\"wdcfhucqdpfuv\":\"mncwsobqwcsdb\"}",
                                Object.class,
                                SerializerEncoding.JSON),
                        "dependencyStatus",
                        JacksonAdapter
                            .createDefaultSerializerAdapter()
                            .deserialize("{}", Object.class, SerializerEncoding.JSON),
                        "triggeredPipelines",
                        JacksonAdapter
                            .createDefaultSerializerAdapter()
                            .deserialize(
                                "{\"r\":\"nsj\",\"dszue\":\"tiagx\",\"icvi\":\"psbzkfzbeyvpn\",\"jjxd\":\"v\"}",
                                Object.class,
                                SerializerEncoding.JSON),
                        "triggerType",
                        "bw",
                        "triggerRunTimestamp",
                        "2021-01-14T23:54:10Z",
                        "message",
                        "msbvdkcrodtjinf",
                        "properties",
                        JacksonAdapter
                            .createDefaultSerializerAdapter()
                            .deserialize(
                                "{\"f\":\"fltkacjv\",\"gaowpulpqblylsyx\":\"dlfoakggkfp\"}",
                                Object.class,
                                SerializerEncoding.JSON),
                        "status",
                        "Succeeded"));
        model = BinaryData.fromObject(model).toObject(TriggerRun.class);
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
