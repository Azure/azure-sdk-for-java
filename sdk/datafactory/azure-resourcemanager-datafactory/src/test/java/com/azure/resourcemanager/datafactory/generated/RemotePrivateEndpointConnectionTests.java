// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.ArmIdWrapper;
import com.azure.resourcemanager.datafactory.models.PrivateLinkConnectionState;
import com.azure.resourcemanager.datafactory.models.RemotePrivateEndpointConnection;
import org.junit.jupiter.api.Assertions;

public final class RemotePrivateEndpointConnectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RemotePrivateEndpointConnection model = BinaryData.fromString(
            "{\"provisioningState\":\"nepzwakls\",\"privateEndpoint\":{\"id\":\"qqqagwwrxaomzi\"},\"privateLinkServiceConnectionState\":{\"status\":\"rrczezkhhltnj\",\"description\":\"hqo\",\"actionsRequired\":\"jqoyueayfbpcm\"}}")
            .toObject(RemotePrivateEndpointConnection.class);
        Assertions.assertEquals("rrczezkhhltnj", model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("hqo", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("jqoyueayfbpcm", model.privateLinkServiceConnectionState().actionsRequired());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RemotePrivateEndpointConnection model
            = new RemotePrivateEndpointConnection().withPrivateEndpoint(new ArmIdWrapper())
                .withPrivateLinkServiceConnectionState(new PrivateLinkConnectionState().withStatus("rrczezkhhltnj")
                    .withDescription("hqo")
                    .withActionsRequired("jqoyueayfbpcm"));
        model = BinaryData.fromObject(model).toObject(RemotePrivateEndpointConnection.class);
        Assertions.assertEquals("rrczezkhhltnj", model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("hqo", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("jqoyueayfbpcm", model.privateLinkServiceConnectionState().actionsRequired());
    }
}
