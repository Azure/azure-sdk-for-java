// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.PhoenixObjectDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class PhoenixObjectDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PhoenixObjectDataset model = BinaryData.fromString(
            "{\"type\":\"PhoenixObject\",\"typeProperties\":{\"tableName\":\"datantbfytnhdnihu\",\"table\":\"datajuzvwgbzdtorbi\",\"schema\":\"datayfzdp\"},\"description\":\"tsucrxdtejobjz\",\"structure\":\"datawtidcnzalgmpupj\",\"schema\":\"datatyl\",\"linkedServiceName\":{\"referenceName\":\"uudvbgvzlzjsb\",\"parameters\":{\"mbdqra\":\"datautzaziydpoknsea\",\"o\":\"datakdarl\"}},\"parameters\":{\"vclfjyclvi\":{\"type\":\"Int\",\"defaultValue\":\"dataqwzknyujxy\"},\"pfildcg\":{\"type\":\"Array\",\"defaultValue\":\"datafflleirmtxf\"},\"cryvidbzdylbvj\":{\"type\":\"Float\",\"defaultValue\":\"datauzfbp\"}},\"annotations\":[\"datangw\",\"dataxjftecgprz\"],\"folder\":{\"name\":\"pdqcakzbyqhaathx\"},\"\":{\"lhrvmgsbpgmncr\":\"datauucolusyruxrzh\"}}")
            .toObject(PhoenixObjectDataset.class);
        Assertions.assertEquals("tsucrxdtejobjz", model.description());
        Assertions.assertEquals("uudvbgvzlzjsb", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.INT, model.parameters().get("vclfjyclvi").type());
        Assertions.assertEquals("pdqcakzbyqhaathx", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PhoenixObjectDataset model = new PhoenixObjectDataset().withDescription("tsucrxdtejobjz")
            .withStructure("datawtidcnzalgmpupj")
            .withSchema("datatyl")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("uudvbgvzlzjsb")
                .withParameters(mapOf("mbdqra", "datautzaziydpoknsea", "o", "datakdarl")))
            .withParameters(mapOf("vclfjyclvi",
                new ParameterSpecification().withType(ParameterType.INT).withDefaultValue("dataqwzknyujxy"), "pfildcg",
                new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("datafflleirmtxf"),
                "cryvidbzdylbvj",
                new ParameterSpecification().withType(ParameterType.FLOAT).withDefaultValue("datauzfbp")))
            .withAnnotations(Arrays.asList("datangw", "dataxjftecgprz"))
            .withFolder(new DatasetFolder().withName("pdqcakzbyqhaathx"))
            .withTableName("datantbfytnhdnihu")
            .withTable("datajuzvwgbzdtorbi")
            .withSchemaTypePropertiesSchema("datayfzdp");
        model = BinaryData.fromObject(model).toObject(PhoenixObjectDataset.class);
        Assertions.assertEquals("tsucrxdtejobjz", model.description());
        Assertions.assertEquals("uudvbgvzlzjsb", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.INT, model.parameters().get("vclfjyclvi").type());
        Assertions.assertEquals("pdqcakzbyqhaathx", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
