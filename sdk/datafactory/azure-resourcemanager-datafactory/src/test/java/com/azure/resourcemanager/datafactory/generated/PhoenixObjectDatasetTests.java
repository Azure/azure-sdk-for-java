// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.PhoenixObjectDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class PhoenixObjectDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PhoenixObjectDataset model = BinaryData.fromString(
            "{\"type\":\"eenlqtqyvlfb\",\"typeProperties\":{\"tableName\":\"datauepaco\",\"table\":\"dataohex\",\"schema\":\"datagukfkbsycbdymb\"},\"description\":\"vqdvfjdsqephtosh\",\"structure\":\"dataua\",\"schema\":\"datawgujrcn\",\"linkedServiceName\":{\"referenceName\":\"a\",\"parameters\":{\"jwyyeomiflrvfeow\":\"datayqoizfyasyddqbws\",\"znwwu\":\"datatshwfrhhasabva\",\"bwtpwbjlpfwuq\":\"datakbpgci\",\"mpnxg\":\"datarpdgitenyuksli\"}},\"parameters\":{\"xej\":{\"type\":\"Bool\",\"defaultValue\":\"datalanchqotmmxl\"},\"psbeqieiux\":{\"type\":\"SecureString\",\"defaultValue\":\"datajzbjwvtuekbbypqs\"}},\"annotations\":[\"datawndalnjjh\",\"datagkjjpcpi\"],\"folder\":{\"name\":\"yxvtajfjatoid\"},\"\":{\"zanaqvengnpuelr\":\"dataurdgc\",\"jt\":\"dataanbrpkocuxfbage\",\"xmdboefnhx\":\"dataltckiwxggfagi\"}}")
            .toObject(PhoenixObjectDataset.class);
        Assertions.assertEquals("vqdvfjdsqephtosh", model.description());
        Assertions.assertEquals("a", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.BOOL, model.parameters().get("xej").type());
        Assertions.assertEquals("yxvtajfjatoid", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PhoenixObjectDataset model = new PhoenixObjectDataset().withDescription("vqdvfjdsqephtosh")
            .withStructure("dataua")
            .withSchema("datawgujrcn")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("a")
                .withParameters(mapOf("jwyyeomiflrvfeow", "datayqoizfyasyddqbws", "znwwu", "datatshwfrhhasabva",
                    "bwtpwbjlpfwuq", "datakbpgci", "mpnxg", "datarpdgitenyuksli")))
            .withParameters(mapOf("xej",
                new ParameterSpecification().withType(ParameterType.BOOL).withDefaultValue("datalanchqotmmxl"),
                "psbeqieiux",
                new ParameterSpecification().withType(ParameterType.SECURE_STRING)
                    .withDefaultValue("datajzbjwvtuekbbypqs")))
            .withAnnotations(Arrays.asList("datawndalnjjh", "datagkjjpcpi"))
            .withFolder(new DatasetFolder().withName("yxvtajfjatoid"))
            .withTableName("datauepaco")
            .withTable("dataohex")
            .withSchemaTypePropertiesSchema("datagukfkbsycbdymb");
        model = BinaryData.fromObject(model).toObject(PhoenixObjectDataset.class);
        Assertions.assertEquals("vqdvfjdsqephtosh", model.description());
        Assertions.assertEquals("a", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.BOOL, model.parameters().get("xej").type());
        Assertions.assertEquals("yxvtajfjatoid", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
