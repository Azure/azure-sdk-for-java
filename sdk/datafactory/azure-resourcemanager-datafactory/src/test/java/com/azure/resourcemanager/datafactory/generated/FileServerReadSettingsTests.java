// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.FileServerReadSettings;

public final class FileServerReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FileServerReadSettings model =
            BinaryData
                .fromString(
                    "{\"type\":\"FileServerReadSettings\",\"recursive\":\"datakobxvexusjfjuphj\",\"wildcardFolderPath\":\"dataeksvj\",\"wildcardFileName\":\"datapyoatlp\",\"fileListPath\":\"datasxqmmxjdkvy\",\"enablePartitionDiscovery\":\"datalrlfgowvvxjqrus\",\"partitionRootPath\":\"databqyfecnsqeewf\",\"deleteFilesAfterCompletion\":\"datagmkc\",\"modifiedDatetimeStart\":\"dataazi\",\"modifiedDatetimeEnd\":\"datawybwmebmxzwcfd\",\"fileFilter\":\"datakurppwksixh\",\"maxConcurrentConnections\":\"datanvydxjkdsqe\",\"disableMetricsCollection\":\"datajd\",\"\":{\"vahbwhrguqet\":\"dataiqwixsdxxflw\",\"dciwxlgg\":\"databqhyszflzj\",\"cmsqznv\":\"datatpayfklbgshbkdp\",\"loeq\":\"datahjtrashnfofiy\"}}")
                .toObject(FileServerReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FileServerReadSettings model =
            new FileServerReadSettings()
                .withMaxConcurrentConnections("datanvydxjkdsqe")
                .withDisableMetricsCollection("datajd")
                .withRecursive("datakobxvexusjfjuphj")
                .withWildcardFolderPath("dataeksvj")
                .withWildcardFileName("datapyoatlp")
                .withFileListPath("datasxqmmxjdkvy")
                .withEnablePartitionDiscovery("datalrlfgowvvxjqrus")
                .withPartitionRootPath("databqyfecnsqeewf")
                .withDeleteFilesAfterCompletion("datagmkc")
                .withModifiedDatetimeStart("dataazi")
                .withModifiedDatetimeEnd("datawybwmebmxzwcfd")
                .withFileFilter("datakurppwksixh");
        model = BinaryData.fromObject(model).toObject(FileServerReadSettings.class);
    }
}
