// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzureSearchIndexSink;
import com.azure.resourcemanager.datafactory.models.AzureSearchIndexWriteBehaviorType;
import org.junit.jupiter.api.Assertions;

public final class AzureSearchIndexSinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureSearchIndexSink model = BinaryData.fromString(
            "{\"type\":\"AzureSearchIndexSink\",\"writeBehavior\":\"Upload\",\"writeBatchSize\":\"datasdccmdplhzjiqi\",\"writeBatchTimeout\":\"dataiwrhmzkxrqzgshqx\",\"sinkRetryCount\":\"dataunuvfslawimhoaqj\",\"sinkRetryWait\":\"datahlpznmdai\",\"maxConcurrentConnections\":\"datazqz\",\"disableMetricsCollection\":\"datadipnhbsvrlr\",\"\":{\"xtl\":\"datamnoasyyadyf\",\"ekuovwiwtykpr\":\"datanzcmdgsv\"}}")
            .toObject(AzureSearchIndexSink.class);
        Assertions.assertEquals(AzureSearchIndexWriteBehaviorType.UPLOAD, model.writeBehavior());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureSearchIndexSink model = new AzureSearchIndexSink().withWriteBatchSize("datasdccmdplhzjiqi")
            .withWriteBatchTimeout("dataiwrhmzkxrqzgshqx")
            .withSinkRetryCount("dataunuvfslawimhoaqj")
            .withSinkRetryWait("datahlpznmdai")
            .withMaxConcurrentConnections("datazqz")
            .withDisableMetricsCollection("datadipnhbsvrlr")
            .withWriteBehavior(AzureSearchIndexWriteBehaviorType.UPLOAD);
        model = BinaryData.fromObject(model).toObject(AzureSearchIndexSink.class);
        Assertions.assertEquals(AzureSearchIndexWriteBehaviorType.UPLOAD, model.writeBehavior());
    }
}
