// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.TriggerReference;
import com.azure.resourcemanager.datafactory.models.TriggerReferenceType;
import com.azure.resourcemanager.datafactory.models.TumblingWindowTriggerDependencyReference;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class TumblingWindowTriggerDependencyReferenceTests {
    @Test
    public void testDeserialize() {
        TumblingWindowTriggerDependencyReference model =
            BinaryData
                .fromString(
                    "{\"type\":\"TumblingWindowTriggerDependencyReference\",\"offset\":\"btplefoi\",\"size\":\"idoxznvgvdtmuuv\",\"referenceTrigger\":{\"type\":\"TriggerReference\",\"referenceName\":\"wsxmrszb\"}}")
                .toObject(TumblingWindowTriggerDependencyReference.class);
        Assertions.assertEquals(TriggerReferenceType.TRIGGER_REFERENCE, model.referenceTrigger().type());
        Assertions.assertEquals("wsxmrszb", model.referenceTrigger().referenceName());
        Assertions.assertEquals("btplefoi", model.offset());
        Assertions.assertEquals("idoxznvgvdtmuuv", model.size());
    }

    @Test
    public void testSerialize() {
        TumblingWindowTriggerDependencyReference model =
            new TumblingWindowTriggerDependencyReference()
                .withReferenceTrigger(
                    new TriggerReference()
                        .withType(TriggerReferenceType.TRIGGER_REFERENCE)
                        .withReferenceName("wsxmrszb"))
                .withOffset("btplefoi")
                .withSize("idoxznvgvdtmuuv");
        model = BinaryData.fromObject(model).toObject(TumblingWindowTriggerDependencyReference.class);
        Assertions.assertEquals(TriggerReferenceType.TRIGGER_REFERENCE, model.referenceTrigger().type());
        Assertions.assertEquals("wsxmrszb", model.referenceTrigger().referenceName());
        Assertions.assertEquals("btplefoi", model.offset());
        Assertions.assertEquals("idoxznvgvdtmuuv", model.size());
    }
}
