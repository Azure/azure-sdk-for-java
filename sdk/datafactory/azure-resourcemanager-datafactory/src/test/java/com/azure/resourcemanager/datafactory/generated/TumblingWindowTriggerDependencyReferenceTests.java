// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.TriggerReference;
import com.azure.resourcemanager.datafactory.models.TriggerReferenceType;
import com.azure.resourcemanager.datafactory.models.TumblingWindowTriggerDependencyReference;
import org.junit.jupiter.api.Assertions;

public final class TumblingWindowTriggerDependencyReferenceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TumblingWindowTriggerDependencyReference model =
            BinaryData
                .fromString(
                    "{\"type\":\"TumblingWindowTriggerDependencyReference\",\"offset\":\"qyknivkmdfw\",\"size\":\"ko\",\"referenceTrigger\":{\"type\":\"TriggerReference\",\"referenceName\":\"jwjm\"}}")
                .toObject(TumblingWindowTriggerDependencyReference.class);
        Assertions.assertEquals(TriggerReferenceType.TRIGGER_REFERENCE, model.referenceTrigger().type());
        Assertions.assertEquals("jwjm", model.referenceTrigger().referenceName());
        Assertions.assertEquals("qyknivkmdfw", model.offset());
        Assertions.assertEquals("ko", model.size());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TumblingWindowTriggerDependencyReference model =
            new TumblingWindowTriggerDependencyReference()
                .withReferenceTrigger(
                    new TriggerReference().withType(TriggerReferenceType.TRIGGER_REFERENCE).withReferenceName("jwjm"))
                .withOffset("qyknivkmdfw")
                .withSize("ko");
        model = BinaryData.fromObject(model).toObject(TumblingWindowTriggerDependencyReference.class);
        Assertions.assertEquals(TriggerReferenceType.TRIGGER_REFERENCE, model.referenceTrigger().type());
        Assertions.assertEquals("jwjm", model.referenceTrigger().referenceName());
        Assertions.assertEquals("qyknivkmdfw", model.offset());
        Assertions.assertEquals("ko", model.size());
    }
}
