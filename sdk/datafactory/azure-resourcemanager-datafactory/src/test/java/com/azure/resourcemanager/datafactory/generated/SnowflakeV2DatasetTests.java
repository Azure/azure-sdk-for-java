// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.SnowflakeV2Dataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SnowflakeV2DatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SnowflakeV2Dataset model = BinaryData.fromString(
            "{\"type\":\"ixfzau\",\"typeProperties\":{\"schema\":\"datapuqyrpubbkhcidc\",\"table\":\"dataoolkugzowg\"},\"description\":\"blnagjnpahzhpqsc\",\"structure\":\"dataileqjzrijebmuio\",\"schema\":\"datamndwohoeashuxfvb\",\"linkedServiceName\":{\"referenceName\":\"imzwynsmmphvkye\",\"parameters\":{\"ofzrk\":\"dataeyuoyjmjwqdslqr\",\"symnrtvqmima\":\"dataztpyaymhxlnmwa\",\"vzxx\":\"datayotpcvpahhpkvyq\",\"tominrufq\":\"datand\"}},\"parameters\":{\"ewk\":{\"type\":\"Float\",\"defaultValue\":\"dataasfmhbx\"},\"vuzcc\":{\"type\":\"Array\",\"defaultValue\":\"datat\"},\"hlc\":{\"type\":\"Float\",\"defaultValue\":\"datarybytcaqpj\"}},\"annotations\":[\"datavxyyhhsisz\",\"dataqfrpanteqiw\"],\"folder\":{\"name\":\"kaamim\"},\"\":{\"rjgyindexijov\":\"datacxysjdfxvksi\"}}")
            .toObject(SnowflakeV2Dataset.class);
        Assertions.assertEquals("blnagjnpahzhpqsc", model.description());
        Assertions.assertEquals("imzwynsmmphvkye", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.FLOAT, model.parameters().get("ewk").type());
        Assertions.assertEquals("kaamim", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SnowflakeV2Dataset model = new SnowflakeV2Dataset().withDescription("blnagjnpahzhpqsc")
            .withStructure("dataileqjzrijebmuio")
            .withSchema("datamndwohoeashuxfvb")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("imzwynsmmphvkye")
                .withParameters(mapOf("ofzrk", "dataeyuoyjmjwqdslqr", "symnrtvqmima", "dataztpyaymhxlnmwa", "vzxx",
                    "datayotpcvpahhpkvyq", "tominrufq", "datand")))
            .withParameters(mapOf("ewk",
                new ParameterSpecification().withType(ParameterType.FLOAT).withDefaultValue("dataasfmhbx"), "vuzcc",
                new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("datat"), "hlc",
                new ParameterSpecification().withType(ParameterType.FLOAT).withDefaultValue("datarybytcaqpj")))
            .withAnnotations(Arrays.asList("datavxyyhhsisz", "dataqfrpanteqiw"))
            .withFolder(new DatasetFolder().withName("kaamim"))
            .withSchemaTypePropertiesSchema("datapuqyrpubbkhcidc")
            .withTable("dataoolkugzowg");
        model = BinaryData.fromObject(model).toObject(SnowflakeV2Dataset.class);
        Assertions.assertEquals("blnagjnpahzhpqsc", model.description());
        Assertions.assertEquals("imzwynsmmphvkye", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.FLOAT, model.parameters().get("ewk").type());
        Assertions.assertEquals("kaamim", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
