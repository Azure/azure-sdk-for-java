// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SqlPartitionSettings;
import com.azure.resourcemanager.datafactory.models.WarehouseSource;

public final class WarehouseSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WarehouseSource model = BinaryData.fromString(
            "{\"type\":\"WarehouseSource\",\"sqlReaderQuery\":\"dataophtkyzsgayng\",\"sqlReaderStoredProcedureName\":\"datawvcnv\",\"storedProcedureParameters\":\"dataqxqhysu\",\"isolationLevel\":\"datadnslroqxrvycjdn\",\"partitionOption\":\"datamggy\",\"partitionSettings\":{\"partitionColumnName\":\"datamsacbamtoqseam\",\"partitionUpperBound\":\"dataxdigkggzmylq\",\"partitionLowerBound\":\"dataeosxdsxil\"},\"queryTimeout\":\"dataiottdawgkaohhtt\",\"additionalColumns\":\"datahypidzjjjfcyskpn\",\"sourceRetryCount\":\"dataxoic\",\"sourceRetryWait\":\"datasmfvltbocqhv\",\"maxConcurrentConnections\":\"datam\",\"disableMetricsCollection\":\"datapvgri\",\"\":{\"fmfkuvybem\":\"datagrlgkoqbzrclarr\"}}")
            .toObject(WarehouseSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WarehouseSource model = new WarehouseSource().withSourceRetryCount("dataxoic")
            .withSourceRetryWait("datasmfvltbocqhv")
            .withMaxConcurrentConnections("datam")
            .withDisableMetricsCollection("datapvgri")
            .withQueryTimeout("dataiottdawgkaohhtt")
            .withAdditionalColumns("datahypidzjjjfcyskpn")
            .withSqlReaderQuery("dataophtkyzsgayng")
            .withSqlReaderStoredProcedureName("datawvcnv")
            .withStoredProcedureParameters("dataqxqhysu")
            .withIsolationLevel("datadnslroqxrvycjdn")
            .withPartitionOption("datamggy")
            .withPartitionSettings(new SqlPartitionSettings().withPartitionColumnName("datamsacbamtoqseam")
                .withPartitionUpperBound("dataxdigkggzmylq")
                .withPartitionLowerBound("dataeosxdsxil"));
        model = BinaryData.fromObject(model).toObject(WarehouseSource.class);
    }
}
