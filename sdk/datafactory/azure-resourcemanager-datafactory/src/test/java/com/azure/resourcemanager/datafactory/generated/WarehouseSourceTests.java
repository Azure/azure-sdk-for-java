// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SqlPartitionSettings;
import com.azure.resourcemanager.datafactory.models.WarehouseSource;

public final class WarehouseSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WarehouseSource model = BinaryData.fromString(
            "{\"type\":\"WarehouseSource\",\"sqlReaderQuery\":\"datalevpdbirhgjm\",\"sqlReaderStoredProcedureName\":\"datayacdhjmpnvgkx\",\"storedProcedureParameters\":\"datahljtkuyvytfuq\",\"isolationLevel\":\"datatqbxpy\",\"partitionOption\":\"datawkjeitkfhzv\",\"partitionSettings\":{\"partitionColumnName\":\"datadbkl\",\"partitionUpperBound\":\"dataokafaq\",\"partitionLowerBound\":\"datapvnvdzssssn\"},\"queryTimeout\":\"datahgid\",\"additionalColumns\":\"dataotx\",\"sourceRetryCount\":\"databxzhad\",\"sourceRetryWait\":\"datajnnoot\",\"maxConcurrentConnections\":\"datayupaqdoodhnzkmj\",\"disableMetricsCollection\":\"databyogwjr\",\"\":{\"e\":\"datarykkhxawohs\",\"lweyzvrixcv\":\"dataxph\"}}")
            .toObject(WarehouseSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WarehouseSource model = new WarehouseSource().withSourceRetryCount("databxzhad")
            .withSourceRetryWait("datajnnoot")
            .withMaxConcurrentConnections("datayupaqdoodhnzkmj")
            .withDisableMetricsCollection("databyogwjr")
            .withQueryTimeout("datahgid")
            .withAdditionalColumns("dataotx")
            .withSqlReaderQuery("datalevpdbirhgjm")
            .withSqlReaderStoredProcedureName("datayacdhjmpnvgkx")
            .withStoredProcedureParameters("datahljtkuyvytfuq")
            .withIsolationLevel("datatqbxpy")
            .withPartitionOption("datawkjeitkfhzv")
            .withPartitionSettings(new SqlPartitionSettings().withPartitionColumnName("datadbkl")
                .withPartitionUpperBound("dataokafaq")
                .withPartitionLowerBound("datapvnvdzssssn"));
        model = BinaryData.fromObject(model).toObject(WarehouseSource.class);
    }
}
