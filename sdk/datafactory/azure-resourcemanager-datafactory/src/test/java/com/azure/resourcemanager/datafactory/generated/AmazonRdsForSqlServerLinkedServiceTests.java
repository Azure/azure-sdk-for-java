// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AmazonRdsForSqlServerLinkedService;
import com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.SecretBase;
import com.azure.resourcemanager.datafactory.models.SqlAlwaysEncryptedAkvAuthType;
import com.azure.resourcemanager.datafactory.models.SqlAlwaysEncryptedProperties;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class AmazonRdsForSqlServerLinkedServiceTests {
    @Test
    public void testDeserialize() {
        AmazonRdsForSqlServerLinkedService model =
            BinaryData
                .fromString(
                    "{\"type\":\"AmazonRdsForSqlServer\",\"typeProperties\":{\"password\":{\"type\":\"SecretBase\"},\"alwaysEncryptedSettings\":{\"alwaysEncryptedAkvAuthType\":\"UserAssignedManagedIdentity\"}},\"connectVia\":{\"referenceName\":\"p\",\"parameters\":{}},\"description\":\"csehchkhufm\",\"parameters\":{\"yjgyd\":{\"type\":\"String\"}},\"annotations\":[],\"\":{}}")
                .toObject(AmazonRdsForSqlServerLinkedService.class);
        Assertions.assertEquals("p", model.connectVia().referenceName());
        Assertions.assertEquals("csehchkhufm", model.description());
        Assertions.assertEquals(ParameterType.STRING, model.parameters().get("yjgyd").type());
        Assertions
            .assertEquals(
                SqlAlwaysEncryptedAkvAuthType.USER_ASSIGNED_MANAGED_IDENTITY,
                model.alwaysEncryptedSettings().alwaysEncryptedAkvAuthType());
    }

    @Test
    public void testSerialize() {
        AmazonRdsForSqlServerLinkedService model =
            new AmazonRdsForSqlServerLinkedService()
                .withConnectVia(new IntegrationRuntimeReference().withReferenceName("p").withParameters(mapOf()))
                .withDescription("csehchkhufm")
                .withParameters(mapOf("yjgyd", new ParameterSpecification().withType(ParameterType.STRING)))
                .withAnnotations(Arrays.asList())
                .withPassword(new SecretBase())
                .withAlwaysEncryptedSettings(
                    new SqlAlwaysEncryptedProperties()
                        .withAlwaysEncryptedAkvAuthType(SqlAlwaysEncryptedAkvAuthType.USER_ASSIGNED_MANAGED_IDENTITY));
        model = BinaryData.fromObject(model).toObject(AmazonRdsForSqlServerLinkedService.class);
        Assertions.assertEquals("p", model.connectVia().referenceName());
        Assertions.assertEquals("csehchkhufm", model.description());
        Assertions.assertEquals(ParameterType.STRING, model.parameters().get("yjgyd").type());
        Assertions
            .assertEquals(
                SqlAlwaysEncryptedAkvAuthType.USER_ASSIGNED_MANAGED_IDENTITY,
                model.alwaysEncryptedSettings().alwaysEncryptedAkvAuthType());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
