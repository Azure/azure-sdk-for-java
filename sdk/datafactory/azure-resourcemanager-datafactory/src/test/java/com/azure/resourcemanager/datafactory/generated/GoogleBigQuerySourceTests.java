// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.GoogleBigQuerySource;

public final class GoogleBigQuerySourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GoogleBigQuerySource model =
            BinaryData
                .fromString(
                    "{\"type\":\"GoogleBigQuerySource\",\"query\":\"dataiupwktnsyrrybd\",\"queryTimeout\":\"dataivkssu\",\"additionalColumns\":\"datazihdkq\",\"sourceRetryCount\":\"datawthw\",\"sourceRetryWait\":\"dataijgasnafdjinw\",\"maxConcurrentConnections\":\"datarnjgs\",\"disableMetricsCollection\":\"datazbdhr\",\"\":{\"ygcahijbjj\":\"dataan\",\"jtyhe\":\"dataxsvjzbggsnan\",\"gaimktns\":\"datazxzazofronsxj\"}}")
                .toObject(GoogleBigQuerySource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GoogleBigQuerySource model =
            new GoogleBigQuerySource()
                .withSourceRetryCount("datawthw")
                .withSourceRetryWait("dataijgasnafdjinw")
                .withMaxConcurrentConnections("datarnjgs")
                .withDisableMetricsCollection("datazbdhr")
                .withQueryTimeout("dataivkssu")
                .withAdditionalColumns("datazihdkq")
                .withQuery("dataiupwktnsyrrybd");
        model = BinaryData.fromObject(model).toObject(GoogleBigQuerySource.class);
    }
}
