// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.GoogleBigQuerySource;

public final class GoogleBigQuerySourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GoogleBigQuerySource model = BinaryData.fromString(
            "{\"type\":\"GoogleBigQuerySource\",\"query\":\"dataso\",\"queryTimeout\":\"datapuaptpuwek\",\"additionalColumns\":\"datal\",\"sourceRetryCount\":\"datamtcljopivtwxvcfc\",\"sourceRetryWait\":\"datakkcjjnq\",\"maxConcurrentConnections\":\"datajoayaj\",\"disableMetricsCollection\":\"datahcxjmapgfbzbxeqz\",\"\":{\"hfafxcgjucmuax\":\"dataf\",\"srxqscdbbwejrmk\":\"dataulvue\"}}")
            .toObject(GoogleBigQuerySource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GoogleBigQuerySource model = new GoogleBigQuerySource().withSourceRetryCount("datamtcljopivtwxvcfc")
            .withSourceRetryWait("datakkcjjnq")
            .withMaxConcurrentConnections("datajoayaj")
            .withDisableMetricsCollection("datahcxjmapgfbzbxeqz")
            .withQueryTimeout("datapuaptpuwek")
            .withAdditionalColumns("datal")
            .withQuery("dataso");
        model = BinaryData.fromObject(model).toObject(GoogleBigQuerySource.class);
    }
}
