// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.ActivityDependency;
import com.azure.resourcemanager.datafactory.models.ActivityOnInactiveMarkAs;
import com.azure.resourcemanager.datafactory.models.ActivityPolicy;
import com.azure.resourcemanager.datafactory.models.ActivityState;
import com.azure.resourcemanager.datafactory.models.DependencyCondition;
import com.azure.resourcemanager.datafactory.models.HDInsightActivityDebugInfoOption;
import com.azure.resourcemanager.datafactory.models.HDInsightPigActivity;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.UserProperty;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class HDInsightPigActivityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HDInsightPigActivity model = BinaryData.fromString(
            "{\"type\":\"HDInsightPig\",\"typeProperties\":{\"storageLinkedServices\":[{\"referenceName\":\"xoqnvi\",\"parameters\":{\"loe\":\"datacolnxwdppiodnnt\",\"zvi\":\"dataptngr\",\"cdkomr\":\"dataxacxcac\"}},{\"referenceName\":\"u\",\"parameters\":{\"skyrhsijxm\":\"datajxpdqwywjnxd\"}},{\"referenceName\":\"iuymfx\",\"parameters\":{\"gzybp\":\"datawmbdtfet\",\"qkrsnxuezw\":\"datarapghloemqapvnqs\"}},{\"referenceName\":\"bqadtv\",\"parameters\":{\"ejplphkiyiq\":\"datagtmtgkrivcx\",\"sl\":\"dataiiodvzjk\"}}],\"arguments\":\"datadpo\",\"getDebugInfo\":\"Failure\",\"scriptPath\":\"datawpsncxbkwmhjq\",\"scriptLinkedService\":{\"referenceName\":\"acbcbrsnn\",\"parameters\":{\"jkbisjurilqc\":\"datamgfgtwqmtyfqut\"}},\"defines\":{\"ckbizqqajs\":\"datadorbufog\",\"cyvrbgi\":\"dataauwojgvpqzvtgwlz\"}},\"linkedServiceName\":{\"referenceName\":\"rdekjbljfkqubnn\",\"parameters\":{\"dfxxaoyisky\":\"datacbcxbvnhlw\"}},\"policy\":{\"timeout\":\"dataxakbqbwjtnf\",\"retry\":\"datamqkgc\",\"retryIntervalInSeconds\":1300088318,\"secureInput\":false,\"secureOutput\":false,\"\":{\"gszwsnryfaprhfcd\":\"datae\",\"x\":\"databcribqdsz\",\"yknfrhbknragpnmc\":\"dataaqlyw\",\"gd\":\"dataudfxh\"}},\"name\":\"zegm\",\"description\":\"ebzoujhijlduuvxk\",\"state\":\"Inactive\",\"onInactiveMarkAs\":\"Succeeded\",\"dependsOn\":[{\"activity\":\"ordzwbskf\",\"dependencyConditions\":[\"Succeeded\",\"Failed\",\"Completed\",\"Succeeded\"],\"\":{\"pmowlsrxytev\":\"dataojzlia\",\"nzzhyl\":\"dataqxpmfhehtrpql\"}},{\"activity\":\"zuxqqrmck\",\"dependencyConditions\":[\"Succeeded\"],\"\":{\"zg\":\"dataeutbym\"}},{\"activity\":\"zhbnbnjpiecnriv\",\"dependencyConditions\":[\"Succeeded\",\"Succeeded\"],\"\":{\"uvpcjyh\":\"datahsuhkik\",\"anrirrnqloomsy\":\"dataznmj\",\"gdvknqui\":\"datayqgaska\",\"jzborwzpfgks\":\"dataipgvfchzcpv\"}},{\"activity\":\"vbrxlsbgl\",\"dependencyConditions\":[\"Failed\",\"Failed\",\"Completed\",\"Failed\"],\"\":{\"cabsmrfx\":\"dataneopxdbhcfswpdar\"}}],\"userProperties\":[{\"name\":\"vzgwvmhbiziij\",\"value\":\"dataseexdboatvsfyxdf\"},{\"name\":\"qrnawnqy\",\"value\":\"datagfxacojca\"},{\"name\":\"axor\",\"value\":\"dataj\"},{\"name\":\"oyngxogqvwchyn\",\"value\":\"datadtnaptwmawypk\"}],\"\":{\"gvvizaygtbmluyyc\":\"dataidoqvcjspjpmt\",\"uijpay\":\"datazvqpnjqpwxf\",\"i\":\"datalnz\",\"n\":\"dataqopwmbdleegwlh\"}}")
            .toObject(HDInsightPigActivity.class);
        Assertions.assertEquals("zegm", model.name());
        Assertions.assertEquals("ebzoujhijlduuvxk", model.description());
        Assertions.assertEquals(ActivityState.INACTIVE, model.state());
        Assertions.assertEquals(ActivityOnInactiveMarkAs.SUCCEEDED, model.onInactiveMarkAs());
        Assertions.assertEquals("ordzwbskf", model.dependsOn().get(0).activity());
        Assertions.assertEquals(DependencyCondition.SUCCEEDED, model.dependsOn().get(0).dependencyConditions().get(0));
        Assertions.assertEquals("vzgwvmhbiziij", model.userProperties().get(0).name());
        Assertions.assertEquals("rdekjbljfkqubnn", model.linkedServiceName().referenceName());
        Assertions.assertEquals(1300088318, model.policy().retryIntervalInSeconds());
        Assertions.assertEquals(false, model.policy().secureInput());
        Assertions.assertEquals(false, model.policy().secureOutput());
        Assertions.assertEquals("xoqnvi", model.storageLinkedServices().get(0).referenceName());
        Assertions.assertEquals(HDInsightActivityDebugInfoOption.FAILURE, model.getDebugInfo());
        Assertions.assertEquals("acbcbrsnn", model.scriptLinkedService().referenceName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HDInsightPigActivity model = new HDInsightPigActivity().withName("zegm")
            .withDescription("ebzoujhijlduuvxk")
            .withState(ActivityState.INACTIVE)
            .withOnInactiveMarkAs(ActivityOnInactiveMarkAs.SUCCEEDED)
            .withDependsOn(Arrays.asList(
                new ActivityDependency().withActivity("ordzwbskf")
                    .withDependencyConditions(Arrays.asList(DependencyCondition.SUCCEEDED, DependencyCondition.FAILED,
                        DependencyCondition.COMPLETED, DependencyCondition.SUCCEEDED))
                    .withAdditionalProperties(mapOf()),
                new ActivityDependency().withActivity("zuxqqrmck")
                    .withDependencyConditions(Arrays.asList(DependencyCondition.SUCCEEDED))
                    .withAdditionalProperties(mapOf()),
                new ActivityDependency().withActivity("zhbnbnjpiecnriv")
                    .withDependencyConditions(
                        Arrays.asList(DependencyCondition.SUCCEEDED, DependencyCondition.SUCCEEDED))
                    .withAdditionalProperties(mapOf()),
                new ActivityDependency().withActivity("vbrxlsbgl")
                    .withDependencyConditions(Arrays.asList(DependencyCondition.FAILED, DependencyCondition.FAILED,
                        DependencyCondition.COMPLETED, DependencyCondition.FAILED))
                    .withAdditionalProperties(mapOf())))
            .withUserProperties(
                Arrays.asList(new UserProperty().withName("vzgwvmhbiziij").withValue("dataseexdboatvsfyxdf"),
                    new UserProperty().withName("qrnawnqy").withValue("datagfxacojca"),
                    new UserProperty().withName("axor").withValue("dataj"),
                    new UserProperty().withName("oyngxogqvwchyn").withValue("datadtnaptwmawypk")))
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("rdekjbljfkqubnn")
                .withParameters(mapOf("dfxxaoyisky", "datacbcxbvnhlw")))
            .withPolicy(new ActivityPolicy().withTimeout("dataxakbqbwjtnf")
                .withRetry("datamqkgc")
                .withRetryIntervalInSeconds(1300088318)
                .withSecureInput(false)
                .withSecureOutput(false)
                .withAdditionalProperties(mapOf()))
            .withStorageLinkedServices(Arrays.asList(
                new LinkedServiceReference().withReferenceName("xoqnvi")
                    .withParameters(mapOf("loe", "datacolnxwdppiodnnt", "zvi", "dataptngr", "cdkomr", "dataxacxcac")),
                new LinkedServiceReference().withReferenceName("u")
                    .withParameters(mapOf("skyrhsijxm", "datajxpdqwywjnxd")),
                new LinkedServiceReference().withReferenceName("iuymfx")
                    .withParameters(mapOf("gzybp", "datawmbdtfet", "qkrsnxuezw", "datarapghloemqapvnqs")),
                new LinkedServiceReference().withReferenceName("bqadtv")
                    .withParameters(mapOf("ejplphkiyiq", "datagtmtgkrivcx", "sl", "dataiiodvzjk"))))
            .withArguments("datadpo")
            .withGetDebugInfo(HDInsightActivityDebugInfoOption.FAILURE)
            .withScriptPath("datawpsncxbkwmhjq")
            .withScriptLinkedService(new LinkedServiceReference().withReferenceName("acbcbrsnn")
                .withParameters(mapOf("jkbisjurilqc", "datamgfgtwqmtyfqut")))
            .withDefines(mapOf("ckbizqqajs", "datadorbufog", "cyvrbgi", "dataauwojgvpqzvtgwlz"));
        model = BinaryData.fromObject(model).toObject(HDInsightPigActivity.class);
        Assertions.assertEquals("zegm", model.name());
        Assertions.assertEquals("ebzoujhijlduuvxk", model.description());
        Assertions.assertEquals(ActivityState.INACTIVE, model.state());
        Assertions.assertEquals(ActivityOnInactiveMarkAs.SUCCEEDED, model.onInactiveMarkAs());
        Assertions.assertEquals("ordzwbskf", model.dependsOn().get(0).activity());
        Assertions.assertEquals(DependencyCondition.SUCCEEDED, model.dependsOn().get(0).dependencyConditions().get(0));
        Assertions.assertEquals("vzgwvmhbiziij", model.userProperties().get(0).name());
        Assertions.assertEquals("rdekjbljfkqubnn", model.linkedServiceName().referenceName());
        Assertions.assertEquals(1300088318, model.policy().retryIntervalInSeconds());
        Assertions.assertEquals(false, model.policy().secureInput());
        Assertions.assertEquals(false, model.policy().secureOutput());
        Assertions.assertEquals("xoqnvi", model.storageLinkedServices().get(0).referenceName());
        Assertions.assertEquals(HDInsightActivityDebugInfoOption.FAILURE, model.getDebugInfo());
        Assertions.assertEquals("acbcbrsnn", model.scriptLinkedService().referenceName());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
