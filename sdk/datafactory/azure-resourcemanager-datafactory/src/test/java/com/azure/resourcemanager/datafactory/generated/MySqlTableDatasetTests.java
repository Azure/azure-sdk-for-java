// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.MySqlTableDataset;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class MySqlTableDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MySqlTableDataset model = BinaryData.fromString(
            "{\"type\":\"MySqlTable\",\"typeProperties\":{\"tableName\":\"databgwzhbhflj\"},\"description\":\"od\",\"structure\":\"dataovnlhrwya\",\"schema\":\"datauafapwxsvdeatjio\",\"linkedServiceName\":{\"referenceName\":\"nirgoext\",\"parameters\":{\"tbsetko\":\"datawtgntimznupb\",\"aakghcrzmmmjyvdh\":\"datasqvhe\",\"etqjisjm\":\"datagdiwmlgstm\"}},\"parameters\":{\"kakhgkrv\":{\"type\":\"SecureString\",\"defaultValue\":\"dataq\"},\"ejqaw\":{\"type\":\"Object\",\"defaultValue\":\"datacvytv\"},\"pbbimh\":{\"type\":\"Float\",\"defaultValue\":\"dataqpfzxkczbd\"}},\"annotations\":[\"datazvoortc\",\"datanh\"],\"folder\":{\"name\":\"yuzly\"},\"\":{\"lkv\":\"datacibv\",\"nviulbylmgjzr\":\"datakcafnwqhawv\"}}")
            .toObject(MySqlTableDataset.class);
        Assertions.assertEquals("od", model.description());
        Assertions.assertEquals("nirgoext", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.SECURE_STRING, model.parameters().get("kakhgkrv").type());
        Assertions.assertEquals("yuzly", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MySqlTableDataset model = new MySqlTableDataset().withDescription("od")
            .withStructure("dataovnlhrwya")
            .withSchema("datauafapwxsvdeatjio")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("nirgoext")
                .withParameters(mapOf("tbsetko", "datawtgntimznupb", "aakghcrzmmmjyvdh", "datasqvhe", "etqjisjm",
                    "datagdiwmlgstm")))
            .withParameters(mapOf("kakhgkrv",
                new ParameterSpecification().withType(ParameterType.SECURE_STRING).withDefaultValue("dataq"), "ejqaw",
                new ParameterSpecification().withType(ParameterType.OBJECT).withDefaultValue("datacvytv"), "pbbimh",
                new ParameterSpecification().withType(ParameterType.FLOAT).withDefaultValue("dataqpfzxkczbd")))
            .withAnnotations(Arrays.asList("datazvoortc", "datanh"))
            .withFolder(new DatasetFolder().withName("yuzly"))
            .withTableName("databgwzhbhflj");
        model = BinaryData.fromObject(model).toObject(MySqlTableDataset.class);
        Assertions.assertEquals("od", model.description());
        Assertions.assertEquals("nirgoext", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.SECURE_STRING, model.parameters().get("kakhgkrv").type());
        Assertions.assertEquals("yuzly", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
