// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SalesforceSink;
import com.azure.resourcemanager.datafactory.models.SalesforceSinkWriteBehavior;
import org.junit.jupiter.api.Assertions;

public final class SalesforceSinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SalesforceSink model = BinaryData.fromString(
            "{\"type\":\"SalesforceSink\",\"writeBehavior\":\"Insert\",\"externalIdFieldName\":\"datag\",\"ignoreNullValues\":\"dataemocndb\",\"writeBatchSize\":\"dataxrkoxwyxodpcgdv\",\"writeBatchTimeout\":\"datan\",\"sinkRetryCount\":\"datavxdafilaizcdugn\",\"sinkRetryWait\":\"datamljgayka\",\"maxConcurrentConnections\":\"datankxoqecjznuqg\",\"disableMetricsCollection\":\"datavmuewshhq\",\"\":{\"liezf\":\"datac\",\"raksahw\":\"datatczzjfzjovwiz\",\"snb\":\"datapukltfknroxm\",\"fvqtvukcfesizkn\":\"datacz\"}}")
            .toObject(SalesforceSink.class);
        Assertions.assertEquals(SalesforceSinkWriteBehavior.INSERT, model.writeBehavior());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SalesforceSink model = new SalesforceSink().withWriteBatchSize("dataxrkoxwyxodpcgdv")
            .withWriteBatchTimeout("datan")
            .withSinkRetryCount("datavxdafilaizcdugn")
            .withSinkRetryWait("datamljgayka")
            .withMaxConcurrentConnections("datankxoqecjznuqg")
            .withDisableMetricsCollection("datavmuewshhq")
            .withWriteBehavior(SalesforceSinkWriteBehavior.INSERT)
            .withExternalIdFieldName("datag")
            .withIgnoreNullValues("dataemocndb");
        model = BinaryData.fromObject(model).toObject(SalesforceSink.class);
        Assertions.assertEquals(SalesforceSinkWriteBehavior.INSERT, model.writeBehavior());
    }
}
