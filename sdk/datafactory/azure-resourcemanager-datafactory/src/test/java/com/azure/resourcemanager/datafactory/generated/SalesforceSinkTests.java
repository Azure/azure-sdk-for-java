// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SalesforceSink;
import com.azure.resourcemanager.datafactory.models.SalesforceSinkWriteBehavior;
import org.junit.jupiter.api.Assertions;

public final class SalesforceSinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SalesforceSink model = BinaryData.fromString(
            "{\"type\":\"SalesforceSink\",\"writeBehavior\":\"Insert\",\"externalIdFieldName\":\"datayxxwlyjdbsxjxl\",\"ignoreNullValues\":\"datas\",\"writeBatchSize\":\"datarolagbellp\",\"writeBatchTimeout\":\"datafbrsmyisndf\",\"sinkRetryCount\":\"datahgowhnvcqhmuv\",\"sinkRetryWait\":\"datastohurktod\",\"maxConcurrentConnections\":\"datartyijlvcmp\",\"disableMetricsCollection\":\"dataxx\",\"\":{\"ebw\":\"dataedbdkwzbkhvlsahj\",\"ihfxtbvhmsvcmce\":\"dataqnluszilkrcpxl\"}}")
            .toObject(SalesforceSink.class);
        Assertions.assertEquals(SalesforceSinkWriteBehavior.INSERT, model.writeBehavior());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SalesforceSink model = new SalesforceSink().withWriteBatchSize("datarolagbellp")
            .withWriteBatchTimeout("datafbrsmyisndf")
            .withSinkRetryCount("datahgowhnvcqhmuv")
            .withSinkRetryWait("datastohurktod")
            .withMaxConcurrentConnections("datartyijlvcmp")
            .withDisableMetricsCollection("dataxx")
            .withWriteBehavior(SalesforceSinkWriteBehavior.INSERT)
            .withExternalIdFieldName("datayxxwlyjdbsxjxl")
            .withIgnoreNullValues("datas");
        model = BinaryData.fromObject(model).toObject(SalesforceSink.class);
        Assertions.assertEquals(SalesforceSinkWriteBehavior.INSERT, model.writeBehavior());
    }
}
