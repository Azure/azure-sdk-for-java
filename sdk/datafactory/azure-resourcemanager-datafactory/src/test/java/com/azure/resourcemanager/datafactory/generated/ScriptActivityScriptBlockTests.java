// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.ScriptActivityParameter;
import com.azure.resourcemanager.datafactory.models.ScriptActivityParameterDirection;
import com.azure.resourcemanager.datafactory.models.ScriptActivityParameterType;
import com.azure.resourcemanager.datafactory.models.ScriptActivityScriptBlock;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ScriptActivityScriptBlockTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScriptActivityScriptBlock model = BinaryData.fromString(
            "{\"text\":\"datagwwrclxhveso\",\"type\":\"datadxmmtyumejp\",\"parameters\":[{\"name\":\"dataodwblaujhox\",\"type\":\"Guid\",\"value\":\"dataeuywyamtzl\",\"direction\":\"InputOutput\",\"size\":1167066365},{\"name\":\"dataqjbjdyoc\",\"type\":\"Guid\",\"value\":\"datayhi\",\"direction\":\"Input\",\"size\":1743108327},{\"name\":\"datalsqymvihhgpe\",\"type\":\"Single\",\"value\":\"datakkhyfiuxda\",\"direction\":\"InputOutput\",\"size\":246649999}]}")
            .toObject(ScriptActivityScriptBlock.class);
        Assertions.assertEquals(ScriptActivityParameterType.GUID, model.parameters().get(0).type());
        Assertions.assertEquals(ScriptActivityParameterDirection.INPUT_OUTPUT, model.parameters().get(0).direction());
        Assertions.assertEquals(1167066365, model.parameters().get(0).size());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScriptActivityScriptBlock model = new ScriptActivityScriptBlock().withText("datagwwrclxhveso")
            .withType("datadxmmtyumejp")
            .withParameters(Arrays.asList(
                new ScriptActivityParameter().withName("dataodwblaujhox")
                    .withType(ScriptActivityParameterType.GUID)
                    .withValue("dataeuywyamtzl")
                    .withDirection(ScriptActivityParameterDirection.INPUT_OUTPUT)
                    .withSize(1167066365),
                new ScriptActivityParameter().withName("dataqjbjdyoc")
                    .withType(ScriptActivityParameterType.GUID)
                    .withValue("datayhi")
                    .withDirection(ScriptActivityParameterDirection.INPUT)
                    .withSize(1743108327),
                new ScriptActivityParameter().withName("datalsqymvihhgpe")
                    .withType(ScriptActivityParameterType.SINGLE)
                    .withValue("datakkhyfiuxda")
                    .withDirection(ScriptActivityParameterDirection.INPUT_OUTPUT)
                    .withSize(246649999)));
        model = BinaryData.fromObject(model).toObject(ScriptActivityScriptBlock.class);
        Assertions.assertEquals(ScriptActivityParameterType.GUID, model.parameters().get(0).type());
        Assertions.assertEquals(ScriptActivityParameterDirection.INPUT_OUTPUT, model.parameters().get(0).direction());
        Assertions.assertEquals(1167066365, model.parameters().get(0).size());
    }
}
