// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.ScriptActivityParameter;
import com.azure.resourcemanager.datafactory.models.ScriptActivityParameterDirection;
import com.azure.resourcemanager.datafactory.models.ScriptActivityParameterType;
import com.azure.resourcemanager.datafactory.models.ScriptActivityScriptBlock;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ScriptActivityScriptBlockTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScriptActivityScriptBlock model = BinaryData.fromString(
            "{\"text\":\"datad\",\"type\":\"datasybn\",\"parameters\":[{\"name\":\"datak\",\"type\":\"DateTime\",\"value\":\"datavrqkmpqs\",\"direction\":\"Output\",\"size\":1973473232}]}")
            .toObject(ScriptActivityScriptBlock.class);
        Assertions.assertEquals(ScriptActivityParameterType.DATE_TIME, model.parameters().get(0).type());
        Assertions.assertEquals(ScriptActivityParameterDirection.OUTPUT, model.parameters().get(0).direction());
        Assertions.assertEquals(1973473232, model.parameters().get(0).size());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScriptActivityScriptBlock model = new ScriptActivityScriptBlock().withText("datad")
            .withType("datasybn")
            .withParameters(Arrays.asList(new ScriptActivityParameter().withName("datak")
                .withType(ScriptActivityParameterType.DATE_TIME)
                .withValue("datavrqkmpqs")
                .withDirection(ScriptActivityParameterDirection.OUTPUT)
                .withSize(1973473232)));
        model = BinaryData.fromObject(model).toObject(ScriptActivityScriptBlock.class);
        Assertions.assertEquals(ScriptActivityParameterType.DATE_TIME, model.parameters().get(0).type());
        Assertions.assertEquals(ScriptActivityParameterDirection.OUTPUT, model.parameters().get(0).direction());
        Assertions.assertEquals(1973473232, model.parameters().get(0).size());
    }
}
