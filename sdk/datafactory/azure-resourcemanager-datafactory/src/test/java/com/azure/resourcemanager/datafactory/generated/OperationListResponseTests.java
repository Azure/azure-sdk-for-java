// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.fluent.models.OperationInner;
import com.azure.resourcemanager.datafactory.models.OperationDisplay;
import com.azure.resourcemanager.datafactory.models.OperationListResponse;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class OperationListResponseTests {
    @Test
    public void testDeserialize() {
        OperationListResponse model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"name\":\"quvgjxpybczme\",\"origin\":\"tzopbsphrupidgsy\",\"display\":{\"description\":\"jhphoyc\",\"provider\":\"xaobhdxbmtqioqjz\",\"resource\":\"tbmufpo\",\"operation\":\"oizh\"},\"properties\":{}},{\"name\":\"ybqsoqijg\",\"origin\":\"mbpazlobcufpdzn\",\"display\":{\"description\":\"cqqjnqglhqgn\",\"provider\":\"ooojywifsqe\",\"resource\":\"agdfmglzlh\",\"operation\":\"rifkwm\"},\"properties\":{}},{\"name\":\"siznto\",\"origin\":\"pa\",\"display\":{\"description\":\"jpsq\",\"provider\":\"mpoyfd\",\"resource\":\"ogknygjofjdd\",\"operation\":\"s\"},\"properties\":{}}],\"nextLink\":\"pewnw\"}")
                .toObject(OperationListResponse.class);
        Assertions.assertEquals("quvgjxpybczme", model.value().get(0).name());
        Assertions.assertEquals("tzopbsphrupidgsy", model.value().get(0).origin());
        Assertions.assertEquals("jhphoyc", model.value().get(0).display().description());
        Assertions.assertEquals("xaobhdxbmtqioqjz", model.value().get(0).display().provider());
        Assertions.assertEquals("tbmufpo", model.value().get(0).display().resource());
        Assertions.assertEquals("oizh", model.value().get(0).display().operation());
        Assertions.assertEquals("pewnw", model.nextLink());
    }

    @Test
    public void testSerialize() {
        OperationListResponse model =
            new OperationListResponse()
                .withValue(
                    Arrays
                        .asList(
                            new OperationInner()
                                .withName("quvgjxpybczme")
                                .withOrigin("tzopbsphrupidgsy")
                                .withDisplay(
                                    new OperationDisplay()
                                        .withDescription("jhphoyc")
                                        .withProvider("xaobhdxbmtqioqjz")
                                        .withResource("tbmufpo")
                                        .withOperation("oizh")),
                            new OperationInner()
                                .withName("ybqsoqijg")
                                .withOrigin("mbpazlobcufpdzn")
                                .withDisplay(
                                    new OperationDisplay()
                                        .withDescription("cqqjnqglhqgn")
                                        .withProvider("ooojywifsqe")
                                        .withResource("agdfmglzlh")
                                        .withOperation("rifkwm")),
                            new OperationInner()
                                .withName("siznto")
                                .withOrigin("pa")
                                .withDisplay(
                                    new OperationDisplay()
                                        .withDescription("jpsq")
                                        .withProvider("mpoyfd")
                                        .withResource("ogknygjofjdd")
                                        .withOperation("s"))))
                .withNextLink("pewnw");
        model = BinaryData.fromObject(model).toObject(OperationListResponse.class);
        Assertions.assertEquals("quvgjxpybczme", model.value().get(0).name());
        Assertions.assertEquals("tzopbsphrupidgsy", model.value().get(0).origin());
        Assertions.assertEquals("jhphoyc", model.value().get(0).display().description());
        Assertions.assertEquals("xaobhdxbmtqioqjz", model.value().get(0).display().provider());
        Assertions.assertEquals("tbmufpo", model.value().get(0).display().resource());
        Assertions.assertEquals("oizh", model.value().get(0).display().operation());
        Assertions.assertEquals("pewnw", model.nextLink());
    }
}
