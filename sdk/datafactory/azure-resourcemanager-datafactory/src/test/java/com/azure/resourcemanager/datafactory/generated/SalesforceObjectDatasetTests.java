// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.SalesforceObjectDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SalesforceObjectDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SalesforceObjectDataset model = BinaryData.fromString(
            "{\"type\":\"SalesforceObject\",\"typeProperties\":{\"objectApiName\":\"datadwxhhlbm\"},\"description\":\"hfxnrpdhewokyqs\",\"structure\":\"dataxfsyw\",\"schema\":\"datahqbtodjfyxbvkv\",\"linkedServiceName\":{\"referenceName\":\"zdmvdd\",\"parameters\":{\"lrhocr\":\"datarugyozzzawnjdv\"}},\"parameters\":{\"hxtozfgdk\":{\"type\":\"String\",\"defaultValue\":\"datandqzbvbpsuv\"},\"igf\":{\"type\":\"Int\",\"defaultValue\":\"dataurklp\"},\"waqdzqydewuwxy\":{\"type\":\"Int\",\"defaultValue\":\"dataeutuipjclz\"}},\"annotations\":[\"datazzevtzqwczochwb\",\"datak\",\"datauynf\",\"datakyvnhiysdhork\"],\"folder\":{\"name\":\"raqkiwlw\"},\"\":{\"wmwqoguflte\":\"datala\",\"egefzjx\":\"datat\",\"thnvxwtdqtcbjd\":\"datajtqbgysi\"}}")
            .toObject(SalesforceObjectDataset.class);
        Assertions.assertEquals("hfxnrpdhewokyqs", model.description());
        Assertions.assertEquals("zdmvdd", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.STRING, model.parameters().get("hxtozfgdk").type());
        Assertions.assertEquals("raqkiwlw", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SalesforceObjectDataset model = new SalesforceObjectDataset().withDescription("hfxnrpdhewokyqs")
            .withStructure("dataxfsyw")
            .withSchema("datahqbtodjfyxbvkv")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("zdmvdd")
                .withParameters(mapOf("lrhocr", "datarugyozzzawnjdv")))
            .withParameters(mapOf("hxtozfgdk",
                new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("datandqzbvbpsuv"), "igf",
                new ParameterSpecification().withType(ParameterType.INT).withDefaultValue("dataurklp"),
                "waqdzqydewuwxy",
                new ParameterSpecification().withType(ParameterType.INT).withDefaultValue("dataeutuipjclz")))
            .withAnnotations(Arrays.asList("datazzevtzqwczochwb", "datak", "datauynf", "datakyvnhiysdhork"))
            .withFolder(new DatasetFolder().withName("raqkiwlw"))
            .withObjectApiName("datadwxhhlbm");
        model = BinaryData.fromObject(model).toObject(SalesforceObjectDataset.class);
        Assertions.assertEquals("hfxnrpdhewokyqs", model.description());
        Assertions.assertEquals("zdmvdd", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.STRING, model.parameters().get("hxtozfgdk").type());
        Assertions.assertEquals("raqkiwlw", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
