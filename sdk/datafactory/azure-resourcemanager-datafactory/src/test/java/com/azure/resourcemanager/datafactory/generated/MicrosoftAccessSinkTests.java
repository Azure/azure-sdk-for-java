// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.MicrosoftAccessSink;

public final class MicrosoftAccessSinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MicrosoftAccessSink model =
            BinaryData
                .fromString(
                    "{\"type\":\"MicrosoftAccessSink\",\"preCopyScript\":\"datavsozjfnpwx\",\"writeBatchSize\":\"dataciotlbpuemqetmo\",\"writeBatchTimeout\":\"datavhhedc\",\"sinkRetryCount\":\"datalycrldwccas\",\"sinkRetryWait\":\"databdvsorvhbygw\",\"maxConcurrentConnections\":\"dataxqlzzkbx\",\"disableMetricsCollection\":\"datacgg\",\"\":{\"hlexvqhbnwmokz\":\"databtqizydaiolnkk\",\"pqjfoujeiagny\":\"dataylt\",\"jssay\":\"datae\"}}")
                .toObject(MicrosoftAccessSink.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MicrosoftAccessSink model =
            new MicrosoftAccessSink()
                .withWriteBatchSize("dataciotlbpuemqetmo")
                .withWriteBatchTimeout("datavhhedc")
                .withSinkRetryCount("datalycrldwccas")
                .withSinkRetryWait("databdvsorvhbygw")
                .withMaxConcurrentConnections("dataxqlzzkbx")
                .withDisableMetricsCollection("datacgg")
                .withPreCopyScript("datavsozjfnpwx");
        model = BinaryData.fromObject(model).toObject(MicrosoftAccessSink.class);
    }
}
