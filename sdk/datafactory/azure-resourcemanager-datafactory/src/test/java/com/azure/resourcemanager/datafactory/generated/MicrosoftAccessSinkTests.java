// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.MicrosoftAccessSink;

public final class MicrosoftAccessSinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MicrosoftAccessSink model = BinaryData.fromString(
            "{\"type\":\"MicrosoftAccessSink\",\"preCopyScript\":\"dataizjr\",\"writeBatchSize\":\"datas\",\"writeBatchTimeout\":\"datawqpukltfk\",\"sinkRetryCount\":\"dataoxmisnbzczpfvqt\",\"sinkRetryWait\":\"datakcfe\",\"maxConcurrentConnections\":\"datazknhcvxf\",\"disableMetricsCollection\":\"datahgrnhwysdmovb\",\"\":{\"czoln\":\"datayqqofdgzly\",\"gg\":\"dataw\"}}")
            .toObject(MicrosoftAccessSink.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MicrosoftAccessSink model = new MicrosoftAccessSink().withWriteBatchSize("datas")
            .withWriteBatchTimeout("datawqpukltfk")
            .withSinkRetryCount("dataoxmisnbzczpfvqt")
            .withSinkRetryWait("datakcfe")
            .withMaxConcurrentConnections("datazknhcvxf")
            .withDisableMetricsCollection("datahgrnhwysdmovb")
            .withPreCopyScript("dataizjr");
        model = BinaryData.fromObject(model).toObject(MicrosoftAccessSink.class);
    }
}
