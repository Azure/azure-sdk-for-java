// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.datafactory.DataFactoryManager;
import com.azure.resourcemanager.datafactory.models.LinkedServiceResource;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class LinkedServicesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"type\":\"LinkedService\",\"connectVia\":{\"referenceName\":\"xyr\",\"parameters\":{\"zlkugkgnuhxa\":\"datalvpnoayckzshvca\",\"aps\":\"dataqposnnwnzxikvjev\",\"quxquypcn\":\"datapjh\",\"tkdeyuowdpnaohhe\":\"dataocusyqailqtq\"}},\"description\":\"yrkbsrpruoyjbzyl\",\"parameters\":{\"jbi\":{\"type\":\"Array\",\"defaultValue\":\"dataeuhssrdugaxkyge\"},\"jcqqv\":{\"type\":\"Float\",\"defaultValue\":\"datazkygh\"},\"zcbrxsqode\":{\"type\":\"Float\",\"defaultValue\":\"datayaec\"}},\"annotations\":[\"datajpeeqy\",\"datangcv\",\"datahvbczcsspn\"],\"\":{\"zfpvi\":\"datakjhzgm\",\"qsuokyvrzlu\":\"dataofvzeihlubdjd\",\"nlfyddyykfdlhytc\":\"datay\",\"nmzlsgal\":\"datapfgjzrdgnl\"}},\"name\":\"xyovwuhvpipaa\",\"type\":\"tkmzord\",\"etag\":\"hwipihoxpeyixbrs\",\"id\":\"rj\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DataFactoryManager manager = DataFactoryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        LinkedServiceResource response = manager.linkedServices()
            .getWithResponse("xicjl", "lvqbavpl", "kcsrbvvniwqpcq", "oujikvrkpultjc", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("rj", response.id());
        Assertions.assertEquals("xyr", response.properties().connectVia().referenceName());
        Assertions.assertEquals("yrkbsrpruoyjbzyl", response.properties().description());
        Assertions.assertEquals(ParameterType.ARRAY, response.properties().parameters().get("jbi").type());
    }
}
