// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.datafactory.DataFactoryManager;
import com.azure.resourcemanager.datafactory.models.LinkedServiceResource;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class LinkedServicesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"type\":\"LinkedService\",\"version\":\"iaot\",\"connectVia\":{\"referenceName\":\"xluovzmijirpwltb\",\"parameters\":{\"fcmsotudnkrwwchy\":\"datamb\",\"xixfeely\":\"dataeig\",\"mdn\":\"dataavin\",\"bobagaigtpjj\":\"dataqyvzzrnikan\"}},\"description\":\"qolmoifxli\",\"parameters\":{\"fjt\":{\"type\":\"Float\",\"defaultValue\":\"dataqxqjvjubjqjxobm\"},\"upkjyosqwcxedk\":{\"type\":\"Bool\",\"defaultValue\":\"datartarneug\"}},\"annotations\":[\"datakfrisrehg\",\"datafiflpiq\",\"dataisjboghjdihtc\"],\"yu\":\"datafvdktbaexb\"},\"name\":\"bycuuxgdadflil\",\"type\":\"ptvmtnougmf\",\"etag\":\"s\",\"id\":\"treihlszpus\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DataFactoryManager manager = DataFactoryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        LinkedServiceResource response = manager.linkedServices()
            .getWithResponse("i", "xz", "niiudnm", "jjmimy", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("treihlszpus", response.id());
        Assertions.assertEquals("iaot", response.properties().version());
        Assertions.assertEquals("xluovzmijirpwltb", response.properties().connectVia().referenceName());
        Assertions.assertEquals("qolmoifxli", response.properties().description());
        Assertions.assertEquals(ParameterType.FLOAT, response.properties().parameters().get("fjt").type());
    }
}
