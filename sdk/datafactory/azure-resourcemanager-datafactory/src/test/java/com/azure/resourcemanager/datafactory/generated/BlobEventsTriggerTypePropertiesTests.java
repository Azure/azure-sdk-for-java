// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.fluent.models.BlobEventsTriggerTypeProperties;
import com.azure.resourcemanager.datafactory.models.BlobEventTypes;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BlobEventsTriggerTypePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BlobEventsTriggerTypeProperties model =
            BinaryData
                .fromString(
                    "{\"blobPathBeginsWith\":\"zjwugrjio\",\"blobPathEndsWith\":\"cuxgimfftvylfke\",\"ignoreEmptyBlobs\":true,\"events\":[\"Microsoft.Storage.BlobCreated\"],\"scope\":\"x\"}")
                .toObject(BlobEventsTriggerTypeProperties.class);
        Assertions.assertEquals("zjwugrjio", model.blobPathBeginsWith());
        Assertions.assertEquals("cuxgimfftvylfke", model.blobPathEndsWith());
        Assertions.assertEquals(true, model.ignoreEmptyBlobs());
        Assertions.assertEquals(BlobEventTypes.MICROSOFT_STORAGE_BLOB_CREATED, model.events().get(0));
        Assertions.assertEquals("x", model.scope());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BlobEventsTriggerTypeProperties model =
            new BlobEventsTriggerTypeProperties()
                .withBlobPathBeginsWith("zjwugrjio")
                .withBlobPathEndsWith("cuxgimfftvylfke")
                .withIgnoreEmptyBlobs(true)
                .withEvents(Arrays.asList(BlobEventTypes.MICROSOFT_STORAGE_BLOB_CREATED))
                .withScope("x");
        model = BinaryData.fromObject(model).toObject(BlobEventsTriggerTypeProperties.class);
        Assertions.assertEquals("zjwugrjio", model.blobPathBeginsWith());
        Assertions.assertEquals("cuxgimfftvylfke", model.blobPathEndsWith());
        Assertions.assertEquals(true, model.ignoreEmptyBlobs());
        Assertions.assertEquals(BlobEventTypes.MICROSOFT_STORAGE_BLOB_CREATED, model.events().get(0));
        Assertions.assertEquals("x", model.scope());
    }
}
