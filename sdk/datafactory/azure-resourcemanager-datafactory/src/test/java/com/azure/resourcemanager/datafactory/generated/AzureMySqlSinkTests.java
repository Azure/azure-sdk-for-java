// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzureMySqlSink;

public final class AzureMySqlSinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureMySqlSink model = BinaryData.fromString(
            "{\"type\":\"AzureMySqlSink\",\"preCopyScript\":\"datasxjvublouelfy\",\"writeBatchSize\":\"datab\",\"writeBatchTimeout\":\"datablpdwckmnpzub\",\"sinkRetryCount\":\"datad\",\"sinkRetryWait\":\"datag\",\"maxConcurrentConnections\":\"datargngcpbshqzzlc\",\"disableMetricsCollection\":\"datamnryxnklfsw\",\"\":{\"peuqyzfdsu\":\"dataigxsyxhygczab\",\"sspcutgkm\":\"datapcdia\",\"siwzzkaeqrnglgi\":\"datasqaqgllnhg\"}}")
            .toObject(AzureMySqlSink.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureMySqlSink model = new AzureMySqlSink().withWriteBatchSize("datab")
            .withWriteBatchTimeout("datablpdwckmnpzub").withSinkRetryCount("datad").withSinkRetryWait("datag")
            .withMaxConcurrentConnections("datargngcpbshqzzlc").withDisableMetricsCollection("datamnryxnklfsw")
            .withPreCopyScript("datasxjvublouelfy");
        model = BinaryData.fromObject(model).toObject(AzureMySqlSink.class);
    }
}
