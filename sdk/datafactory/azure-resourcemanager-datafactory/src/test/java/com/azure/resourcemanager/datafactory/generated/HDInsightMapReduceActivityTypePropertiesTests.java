// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.fluent.models.HDInsightMapReduceActivityTypeProperties;
import com.azure.resourcemanager.datafactory.models.HDInsightActivityDebugInfoOption;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class HDInsightMapReduceActivityTypePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HDInsightMapReduceActivityTypeProperties model = BinaryData.fromString(
            "{\"storageLinkedServices\":[{\"referenceName\":\"g\",\"parameters\":{\"vwalhawoptiq\":\"datacnidubocmjiib\"}},{\"referenceName\":\"u\",\"parameters\":{\"vztaelpuxhkuemcb\":\"datatapcxsmapddmmwyl\",\"llewe\":\"dataumtnrcvovhyqexu\"}},{\"referenceName\":\"gvqbsyth\",\"parameters\":{\"cpf\":\"datac\",\"mgsi\":\"datammgfwxthr\"}},{\"referenceName\":\"gosclhjgckkbn\",\"parameters\":{\"wzgfankeol\":\"datanyeh\",\"hzuapkhfhuuizyey\":\"datarosahgc\",\"puuykyvbpneyml\":\"datakinidyjf\"}}],\"arguments\":[\"datansjcufijvaxuvazz\",\"datatld\",\"dataaxglxhbnqyewi\",\"datalenhtykebtvn\"],\"getDebugInfo\":\"Failure\",\"className\":\"dataclpbhntoiv\",\"jarFilePath\":\"datauerr\",\"jarLinkedService\":{\"referenceName\":\"hooxqkcayydtnllk\",\"parameters\":{\"rftidkjotvhivvo\":\"datajtxvx\",\"pfviiw\":\"datazsr\"}},\"jarLibs\":[\"datapsbbxkeygm\"],\"defines\":{\"n\":\"datayusn\",\"ugtcccydldavozmi\":\"dataekhfdlbcucwfc\",\"tpgll\":\"datatkv\",\"xwtnrroh\":\"datarrank\"}}")
            .toObject(HDInsightMapReduceActivityTypeProperties.class);
        Assertions.assertEquals("g", model.storageLinkedServices().get(0).referenceName());
        Assertions.assertEquals(HDInsightActivityDebugInfoOption.FAILURE, model.getDebugInfo());
        Assertions.assertEquals("hooxqkcayydtnllk", model.jarLinkedService().referenceName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HDInsightMapReduceActivityTypeProperties model = new HDInsightMapReduceActivityTypeProperties()
            .withStorageLinkedServices(Arrays.asList(
                new LinkedServiceReference().withReferenceName("g")
                    .withParameters(mapOf("vwalhawoptiq", "datacnidubocmjiib")),
                new LinkedServiceReference().withReferenceName("u")
                    .withParameters(mapOf("vztaelpuxhkuemcb", "datatapcxsmapddmmwyl", "llewe", "dataumtnrcvovhyqexu")),
                new LinkedServiceReference().withReferenceName("gvqbsyth")
                    .withParameters(mapOf("cpf", "datac", "mgsi", "datammgfwxthr")),
                new LinkedServiceReference().withReferenceName("gosclhjgckkbn")
                    .withParameters(mapOf("wzgfankeol", "datanyeh", "hzuapkhfhuuizyey", "datarosahgc", "puuykyvbpneyml",
                        "datakinidyjf"))))
            .withArguments(Arrays.asList("datansjcufijvaxuvazz", "datatld", "dataaxglxhbnqyewi", "datalenhtykebtvn"))
            .withGetDebugInfo(HDInsightActivityDebugInfoOption.FAILURE)
            .withClassName("dataclpbhntoiv")
            .withJarFilePath("datauerr")
            .withJarLinkedService(new LinkedServiceReference().withReferenceName("hooxqkcayydtnllk")
                .withParameters(mapOf("rftidkjotvhivvo", "datajtxvx", "pfviiw", "datazsr")))
            .withJarLibs(Arrays.asList("datapsbbxkeygm"))
            .withDefines(mapOf("n", "datayusn", "ugtcccydldavozmi", "dataekhfdlbcucwfc", "tpgll", "datatkv", "xwtnrroh",
                "datarrank"));
        model = BinaryData.fromObject(model).toObject(HDInsightMapReduceActivityTypeProperties.class);
        Assertions.assertEquals("g", model.storageLinkedServices().get(0).referenceName());
        Assertions.assertEquals(HDInsightActivityDebugInfoOption.FAILURE, model.getDebugInfo());
        Assertions.assertEquals("hooxqkcayydtnllk", model.jarLinkedService().referenceName());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
