// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.fluent.models.HDInsightMapReduceActivityTypeProperties;
import com.azure.resourcemanager.datafactory.models.HDInsightActivityDebugInfoOption;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class HDInsightMapReduceActivityTypePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HDInsightMapReduceActivityTypeProperties model =
            BinaryData
                .fromString(
                    "{\"storageLinkedServices\":[{\"referenceName\":\"vkt\",\"parameters\":{\"vonuhv\":\"dataceplnukdawgzhbwh\",\"tjoxocothsg\":\"datagxck\"}},{\"referenceName\":\"jcjvdajxebm\",\"parameters\":{\"a\":\"datarctf\",\"nd\":\"datakukra\",\"dhjdwfnbiyxqr\":\"datahwdicntqsrhacjsb\",\"rqllugnxmbwdkz\":\"datauyffkayovljtrml\"}},{\"referenceName\":\"wwbqukjithx\",\"parameters\":{\"eiw\":\"datapkv\",\"vuxwuepjcugwku\":\"datafshhcktbfmtbprt\"}}],\"arguments\":[\"datawgmznvlwcnjhq\",\"dataieyqpu\",\"datawzzx\"],\"getDebugInfo\":\"Failure\",\"className\":\"datazcjrbsqcwnbxqkb\",\"jarFilePath\":\"dataoofoxfchune\",\"jarLinkedService\":{\"referenceName\":\"ssx\",\"parameters\":{\"kkgxi\":\"datahlhprjcfy\",\"fdfs\":\"dataxlonz\",\"dnrtydhqkariatxh\":\"datakgwdng\",\"sa\":\"dataxdvrajoghgxgzb\"}},\"jarLibs\":[\"datamcwetx\",\"datasgcwadv\"],\"defines\":{\"cqtmpzwwt\":\"dataageltffqal\",\"ctyvmizxkm\":\"datawbgmxwpyns\",\"tdgpmhzlla\":\"datahqwwtar\",\"pk\":\"dataozsdnf\"}}")
                .toObject(HDInsightMapReduceActivityTypeProperties.class);
        Assertions.assertEquals("vkt", model.storageLinkedServices().get(0).referenceName());
        Assertions.assertEquals(HDInsightActivityDebugInfoOption.FAILURE, model.getDebugInfo());
        Assertions.assertEquals("ssx", model.jarLinkedService().referenceName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HDInsightMapReduceActivityTypeProperties model =
            new HDInsightMapReduceActivityTypeProperties()
                .withStorageLinkedServices(
                    Arrays
                        .asList(
                            new LinkedServiceReference()
                                .withReferenceName("vkt")
                                .withParameters(mapOf("vonuhv", "dataceplnukdawgzhbwh", "tjoxocothsg", "datagxck")),
                            new LinkedServiceReference()
                                .withReferenceName("jcjvdajxebm")
                                .withParameters(
                                    mapOf(
                                        "a",
                                        "datarctf",
                                        "nd",
                                        "datakukra",
                                        "dhjdwfnbiyxqr",
                                        "datahwdicntqsrhacjsb",
                                        "rqllugnxmbwdkz",
                                        "datauyffkayovljtrml")),
                            new LinkedServiceReference()
                                .withReferenceName("wwbqukjithx")
                                .withParameters(mapOf("eiw", "datapkv", "vuxwuepjcugwku", "datafshhcktbfmtbprt"))))
                .withArguments(Arrays.asList("datawgmznvlwcnjhq", "dataieyqpu", "datawzzx"))
                .withGetDebugInfo(HDInsightActivityDebugInfoOption.FAILURE)
                .withClassName("datazcjrbsqcwnbxqkb")
                .withJarFilePath("dataoofoxfchune")
                .withJarLinkedService(
                    new LinkedServiceReference()
                        .withReferenceName("ssx")
                        .withParameters(
                            mapOf(
                                "kkgxi",
                                "datahlhprjcfy",
                                "fdfs",
                                "dataxlonz",
                                "dnrtydhqkariatxh",
                                "datakgwdng",
                                "sa",
                                "dataxdvrajoghgxgzb")))
                .withJarLibs(Arrays.asList("datamcwetx", "datasgcwadv"))
                .withDefines(
                    mapOf(
                        "cqtmpzwwt",
                        "dataageltffqal",
                        "ctyvmizxkm",
                        "datawbgmxwpyns",
                        "tdgpmhzlla",
                        "datahqwwtar",
                        "pk",
                        "dataozsdnf"));
        model = BinaryData.fromObject(model).toObject(HDInsightMapReduceActivityTypeProperties.class);
        Assertions.assertEquals("vkt", model.storageLinkedServices().get(0).referenceName());
        Assertions.assertEquals(HDInsightActivityDebugInfoOption.FAILURE, model.getDebugInfo());
        Assertions.assertEquals("ssx", model.jarLinkedService().referenceName());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
