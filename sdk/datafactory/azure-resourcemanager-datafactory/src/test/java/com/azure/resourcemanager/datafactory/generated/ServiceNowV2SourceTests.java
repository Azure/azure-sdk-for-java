// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.ExpressionV2;
import com.azure.resourcemanager.datafactory.models.ExpressionV2Type;
import com.azure.resourcemanager.datafactory.models.ServiceNowV2Source;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ServiceNowV2SourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServiceNowV2Source model = BinaryData.fromString(
            "{\"type\":\"ServiceNowV2Source\",\"expression\":{\"type\":\"Constant\",\"value\":\"pjn\",\"operators\":[\"bxvouxcdenthgpw\",\"mevkckocexhlvf\"],\"operands\":[{\"type\":\"NAry\",\"value\":\"arohw\",\"operators\":[\"hzwsjqrmxpyzn\",\"amnkgmos\"],\"operands\":[{\"type\":\"Constant\",\"value\":\"dctpczzqusfugws\",\"operators\":[\"gij\",\"lyspk\",\"swyaejffvf\",\"khgqsjecccfyc\"],\"operands\":[{},{},{},{}]},{\"type\":\"Field\",\"value\":\"fx\",\"operators\":[\"f\",\"au\",\"ermnyphcoobs\",\"io\"],\"operands\":[{}]}]}]},\"queryTimeout\":\"datavubszjyttgkps\",\"additionalColumns\":\"datatcczzblalmgezk\",\"sourceRetryCount\":\"datairftlomec\",\"sourceRetryWait\":\"datangbgpxoefnb\",\"maxConcurrentConnections\":\"dataavbsbhdti\",\"disableMetricsCollection\":\"dataafalbkemodlvdhv\",\"\":{\"nd\":\"databrrkvxmeihrzi\",\"onjuwgvse\":\"datapojmgkeoqrxhdsu\"}}")
            .toObject(ServiceNowV2Source.class);
        Assertions.assertEquals(ExpressionV2Type.CONSTANT, model.expression().type());
        Assertions.assertEquals("pjn", model.expression().value());
        Assertions.assertEquals("bxvouxcdenthgpw", model.expression().operators().get(0));
        Assertions.assertEquals(ExpressionV2Type.NARY, model.expression().operands().get(0).type());
        Assertions.assertEquals("arohw", model.expression().operands().get(0).value());
        Assertions.assertEquals("hzwsjqrmxpyzn", model.expression().operands().get(0).operators().get(0));
        Assertions.assertEquals(ExpressionV2Type.CONSTANT,
            model.expression().operands().get(0).operands().get(0).type());
        Assertions.assertEquals("dctpczzqusfugws", model.expression().operands().get(0).operands().get(0).value());
        Assertions.assertEquals("gij", model.expression().operands().get(0).operands().get(0).operators().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServiceNowV2Source model = new ServiceNowV2Source().withSourceRetryCount("datairftlomec")
            .withSourceRetryWait("datangbgpxoefnb")
            .withMaxConcurrentConnections("dataavbsbhdti")
            .withDisableMetricsCollection("dataafalbkemodlvdhv")
            .withQueryTimeout("datavubszjyttgkps")
            .withAdditionalColumns("datatcczzblalmgezk")
            .withExpression(new ExpressionV2().withType(ExpressionV2Type.CONSTANT)
                .withValue("pjn")
                .withOperators(Arrays.asList("bxvouxcdenthgpw", "mevkckocexhlvf"))
                .withOperands(Arrays.asList(new ExpressionV2().withType(ExpressionV2Type.NARY)
                    .withValue("arohw")
                    .withOperators(Arrays.asList("hzwsjqrmxpyzn", "amnkgmos"))
                    .withOperands(Arrays.asList(
                        new ExpressionV2().withType(ExpressionV2Type.CONSTANT)
                            .withValue("dctpczzqusfugws")
                            .withOperators(Arrays.asList("gij", "lyspk", "swyaejffvf", "khgqsjecccfyc"))
                            .withOperands(Arrays.asList(new ExpressionV2(), new ExpressionV2(), new ExpressionV2(),
                                new ExpressionV2())),
                        new ExpressionV2().withType(ExpressionV2Type.FIELD)
                            .withValue("fx")
                            .withOperators(Arrays.asList("f", "au", "ermnyphcoobs", "io"))
                            .withOperands(Arrays.asList(new ExpressionV2())))))));
        model = BinaryData.fromObject(model).toObject(ServiceNowV2Source.class);
        Assertions.assertEquals(ExpressionV2Type.CONSTANT, model.expression().type());
        Assertions.assertEquals("pjn", model.expression().value());
        Assertions.assertEquals("bxvouxcdenthgpw", model.expression().operators().get(0));
        Assertions.assertEquals(ExpressionV2Type.NARY, model.expression().operands().get(0).type());
        Assertions.assertEquals("arohw", model.expression().operands().get(0).value());
        Assertions.assertEquals("hzwsjqrmxpyzn", model.expression().operands().get(0).operators().get(0));
        Assertions.assertEquals(ExpressionV2Type.CONSTANT,
            model.expression().operands().get(0).operands().get(0).type());
        Assertions.assertEquals("dctpczzqusfugws", model.expression().operands().get(0).operands().get(0).value());
        Assertions.assertEquals("gij", model.expression().operands().get(0).operands().get(0).operators().get(0));
    }
}
