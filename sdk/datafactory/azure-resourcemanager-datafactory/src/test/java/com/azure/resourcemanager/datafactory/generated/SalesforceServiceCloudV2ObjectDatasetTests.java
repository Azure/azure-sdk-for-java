// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.SalesforceServiceCloudV2ObjectDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SalesforceServiceCloudV2ObjectDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SalesforceServiceCloudV2ObjectDataset model = BinaryData.fromString(
            "{\"type\":\"SalesforceServiceCloudV2Object\",\"typeProperties\":{\"objectApiName\":\"datadplvi\",\"reportId\":\"datagarmawokgcnev\"},\"description\":\"cwbqy\",\"structure\":\"datalwbj\",\"schema\":\"dataynqryoisweofv\",\"linkedServiceName\":{\"referenceName\":\"xauphzefineyy\",\"parameters\":{\"exccwldgfq\":\"datagtiivzkd\",\"crvjcull\":\"dataywmwtacrscfc\",\"owoszzwncsjgfxv\":\"datafwfpo\",\"uqhgnmsvjfgrpryy\":\"datahmuby\"}},\"parameters\":{\"kbuatxkznlwl\":{\"type\":\"Int\",\"defaultValue\":\"datajxjrbvy\"},\"x\":{\"type\":\"SecureString\",\"defaultValue\":\"dataogkevday\"}},\"annotations\":[\"dataiy\"],\"folder\":{\"name\":\"r\"},\"\":{\"lybspsbomt\":\"dataalrjwaez\",\"suiwexpasckpg\":\"dataepzimfc\",\"cmxtoejt\":\"datamlyxbwslx\"}}")
            .toObject(SalesforceServiceCloudV2ObjectDataset.class);
        Assertions.assertEquals("cwbqy", model.description());
        Assertions.assertEquals("xauphzefineyy", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.INT, model.parameters().get("kbuatxkznlwl").type());
        Assertions.assertEquals("r", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SalesforceServiceCloudV2ObjectDataset model = new SalesforceServiceCloudV2ObjectDataset()
            .withDescription("cwbqy").withStructure("datalwbj").withSchema("dataynqryoisweofv")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("xauphzefineyy")
                .withParameters(mapOf("exccwldgfq", "datagtiivzkd", "crvjcull", "dataywmwtacrscfc", "owoszzwncsjgfxv",
                    "datafwfpo", "uqhgnmsvjfgrpryy", "datahmuby")))
            .withParameters(mapOf("kbuatxkznlwl",
                new ParameterSpecification().withType(ParameterType.INT).withDefaultValue("datajxjrbvy"), "x",
                new ParameterSpecification().withType(ParameterType.SECURE_STRING).withDefaultValue("dataogkevday")))
            .withAnnotations(Arrays.asList("dataiy")).withFolder(new DatasetFolder().withName("r"))
            .withObjectApiName("datadplvi").withReportId("datagarmawokgcnev");
        model = BinaryData.fromObject(model).toObject(SalesforceServiceCloudV2ObjectDataset.class);
        Assertions.assertEquals("cwbqy", model.description());
        Assertions.assertEquals("xauphzefineyy", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.INT, model.parameters().get("kbuatxkznlwl").type());
        Assertions.assertEquals("r", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
