// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.SalesforceServiceCloudV2ObjectDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SalesforceServiceCloudV2ObjectDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SalesforceServiceCloudV2ObjectDataset model = BinaryData.fromString(
            "{\"type\":\"SalesforceServiceCloudV2Object\",\"typeProperties\":{\"objectApiName\":\"dataadzglm\",\"reportId\":\"datazpsuhsypxmul\"},\"description\":\"frerkqp\",\"structure\":\"datajxkbywsbu\",\"schema\":\"datamxbdjkmn\",\"linkedServiceName\":{\"referenceName\":\"sggnowx\",\"parameters\":{\"svghbtycvlkus\":\"datadbrd\",\"ype\":\"dataiikhrct\"}},\"parameters\":{\"sdvkym\":{\"type\":\"Bool\",\"defaultValue\":\"datardis\"}},\"annotations\":[\"datawmivoxgzegngl\"],\"folder\":{\"name\":\"fgazagh\"},\"\":{\"wxuxor\":\"datao\",\"lssolqypv\":\"datautuhvemg\",\"hvrkqv\":\"dataxlx\"}}")
            .toObject(SalesforceServiceCloudV2ObjectDataset.class);
        Assertions.assertEquals("frerkqp", model.description());
        Assertions.assertEquals("sggnowx", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.BOOL, model.parameters().get("sdvkym").type());
        Assertions.assertEquals("fgazagh", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SalesforceServiceCloudV2ObjectDataset model = new SalesforceServiceCloudV2ObjectDataset()
            .withDescription("frerkqp")
            .withStructure("datajxkbywsbu")
            .withSchema("datamxbdjkmn")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("sggnowx")
                .withParameters(mapOf("svghbtycvlkus", "datadbrd", "ype", "dataiikhrct")))
            .withParameters(
                mapOf("sdvkym", new ParameterSpecification().withType(ParameterType.BOOL).withDefaultValue("datardis")))
            .withAnnotations(Arrays.asList("datawmivoxgzegngl"))
            .withFolder(new DatasetFolder().withName("fgazagh"))
            .withObjectApiName("dataadzglm")
            .withReportId("datazpsuhsypxmul");
        model = BinaryData.fromObject(model).toObject(SalesforceServiceCloudV2ObjectDataset.class);
        Assertions.assertEquals("frerkqp", model.description());
        Assertions.assertEquals("sggnowx", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.BOOL, model.parameters().get("sdvkym").type());
        Assertions.assertEquals("fgazagh", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
