// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SftpReadSettings;

public final class SftpReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SftpReadSettings model =
            BinaryData
                .fromString(
                    "{\"type\":\"SftpReadSettings\",\"recursive\":\"datajytvq\",\"wildcardFolderPath\":\"datarupsuyqvmxnavx\",\"wildcardFileName\":\"datayaptexzylqhewhcc\",\"enablePartitionDiscovery\":\"dataxczrmyniwggmi\",\"partitionRootPath\":\"datawolfmfazxwcaic\",\"fileListPath\":\"datajttzfswohddliikk\",\"deleteFilesAfterCompletion\":\"dataqpliegemtnbkev\",\"modifiedDatetimeStart\":\"datak\",\"modifiedDatetimeEnd\":\"dataiksncr\",\"disableChunking\":\"datatlrbzqtu\",\"maxConcurrentConnections\":\"dataajfay\",\"disableMetricsCollection\":\"dataohdlpcix\",\"\":{\"azylaya\":\"datanyhivhyujqxyfb\",\"gcn\":\"datardnovuduwwjo\",\"hwwhyejhwbdf\":\"datakmci\",\"zwkmrjfsqbc\":\"dataf\"}}")
                .toObject(SftpReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SftpReadSettings model =
            new SftpReadSettings()
                .withMaxConcurrentConnections("dataajfay")
                .withDisableMetricsCollection("dataohdlpcix")
                .withRecursive("datajytvq")
                .withWildcardFolderPath("datarupsuyqvmxnavx")
                .withWildcardFileName("datayaptexzylqhewhcc")
                .withEnablePartitionDiscovery("dataxczrmyniwggmi")
                .withPartitionRootPath("datawolfmfazxwcaic")
                .withFileListPath("datajttzfswohddliikk")
                .withDeleteFilesAfterCompletion("dataqpliegemtnbkev")
                .withModifiedDatetimeStart("datak")
                .withModifiedDatetimeEnd("dataiksncr")
                .withDisableChunking("datatlrbzqtu");
        model = BinaryData.fromObject(model).toObject(SftpReadSettings.class);
    }
}
