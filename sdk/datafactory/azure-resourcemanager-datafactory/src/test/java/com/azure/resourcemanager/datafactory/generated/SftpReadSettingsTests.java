// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SftpReadSettings;

public final class SftpReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SftpReadSettings model = BinaryData.fromString(
            "{\"type\":\"SftpReadSettings\",\"recursive\":\"datab\",\"wildcardFolderPath\":\"datavkm\",\"wildcardFileName\":\"datajz\",\"enablePartitionDiscovery\":\"datakyvybljqgirpi\",\"partitionRootPath\":\"dataqrmxcu\",\"fileListPath\":\"datarkgg\",\"deleteFilesAfterCompletion\":\"dataqanrkhcdjfsvfbj\",\"modifiedDatetimeStart\":\"dataadwrbrntvhppykrl\",\"modifiedDatetimeEnd\":\"dataalsvxpola\",\"disableChunking\":\"datarjmsabnmu\",\"maxConcurrentConnections\":\"datathyxryv\",\"disableMetricsCollection\":\"datazhsigddgbcnqv\",\"\":{\"lemzrw\":\"databffcvtij\",\"kmkwddgyqeni\":\"datagvgogczgcm\",\"rtcbvifcrnxst\":\"datarznam\"}}")
            .toObject(SftpReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SftpReadSettings model = new SftpReadSettings().withMaxConcurrentConnections("datathyxryv")
            .withDisableMetricsCollection("datazhsigddgbcnqv")
            .withRecursive("datab")
            .withWildcardFolderPath("datavkm")
            .withWildcardFileName("datajz")
            .withEnablePartitionDiscovery("datakyvybljqgirpi")
            .withPartitionRootPath("dataqrmxcu")
            .withFileListPath("datarkgg")
            .withDeleteFilesAfterCompletion("dataqanrkhcdjfsvfbj")
            .withModifiedDatetimeStart("dataadwrbrntvhppykrl")
            .withModifiedDatetimeEnd("dataalsvxpola")
            .withDisableChunking("datarjmsabnmu");
        model = BinaryData.fromObject(model).toObject(SftpReadSettings.class);
    }
}
