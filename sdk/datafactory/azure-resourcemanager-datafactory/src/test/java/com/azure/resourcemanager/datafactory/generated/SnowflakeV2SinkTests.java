// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SnowflakeImportCopyCommand;
import com.azure.resourcemanager.datafactory.models.SnowflakeV2Sink;
import java.util.HashMap;
import java.util.Map;

public final class SnowflakeV2SinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SnowflakeV2Sink model = BinaryData.fromString(
            "{\"type\":\"SnowflakeV2Sink\",\"preCopyScript\":\"datawdicntqsrhac\",\"importSettings\":{\"type\":\"SnowflakeImportCopyCommand\",\"additionalCopyOptions\":{\"uyffkayovljtrml\":\"datadhjdwfnbiyxqr\",\"wwbqukjithx\":\"datarqllugnxmbwdkz\",\"tbfmtbprt\":\"datapvpkvceiwcfshhc\",\"qbwgmznvlwcn\":\"datavuxwuepjcugwku\"},\"additionalFormatOptions\":{\"bwzzxetxzcjrbs\":\"datakieyqp\",\"oxfchune\":\"datacwnbxqkbeoo\",\"vkkgxilxlon\":\"datakssxpnhhlhprjcf\"},\"storageIntegration\":\"datafdfs\",\"\":{\"dhqkariatxhpxdvr\":\"datawdnghdnrt\"}},\"writeBatchSize\":\"dataoghg\",\"writeBatchTimeout\":\"datazbzsasgam\",\"sinkRetryCount\":\"dataetxnsgcwad\",\"sinkRetryWait\":\"dataqbageltffqalmcq\",\"maxConcurrentConnections\":\"datapzwwtcwbgmx\",\"disableMetricsCollection\":\"dataynslcty\",\"\":{\"kmhhqwwtarxtdgp\":\"dataz\"}}")
            .toObject(SnowflakeV2Sink.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SnowflakeV2Sink model = new SnowflakeV2Sink().withWriteBatchSize("dataoghg")
            .withWriteBatchTimeout("datazbzsasgam")
            .withSinkRetryCount("dataetxnsgcwad")
            .withSinkRetryWait("dataqbageltffqalmcq")
            .withMaxConcurrentConnections("datapzwwtcwbgmx")
            .withDisableMetricsCollection("dataynslcty")
            .withPreCopyScript("datawdicntqsrhac")
            .withImportSettings(new SnowflakeImportCopyCommand()
                .withAdditionalCopyOptions(mapOf("uyffkayovljtrml", "datadhjdwfnbiyxqr", "wwbqukjithx",
                    "datarqllugnxmbwdkz", "tbfmtbprt", "datapvpkvceiwcfshhc", "qbwgmznvlwcn", "datavuxwuepjcugwku"))
                .withAdditionalFormatOptions(mapOf("bwzzxetxzcjrbs", "datakieyqp", "oxfchune", "datacwnbxqkbeoo",
                    "vkkgxilxlon", "datakssxpnhhlhprjcf"))
                .withStorageIntegration("datafdfs"));
        model = BinaryData.fromObject(model).toObject(SnowflakeV2Sink.class);
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
