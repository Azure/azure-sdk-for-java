// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.ShopifyObjectDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ShopifyObjectDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ShopifyObjectDataset model = BinaryData.fromString(
            "{\"type\":\"ShopifyObject\",\"typeProperties\":{\"tableName\":\"datandmtqvmkmzvag\"},\"description\":\"fblsxyfqgtodg\",\"structure\":\"datalefmizdcsr\",\"schema\":\"databnasgfyxhsxcg\",\"linkedServiceName\":{\"referenceName\":\"bmxbpqcnx\",\"parameters\":{\"uufhpdncokqrg\":\"datahojvmazuflfp\",\"fnmmib\":\"datavbhmnimjlyhb\",\"umqeobrwreu\":\"datawcduyrgcay\"}},\"parameters\":{\"aagwkrxjkcge\":{\"type\":\"Array\",\"defaultValue\":\"datahamigsqzmfk\"},\"t\":{\"type\":\"Float\",\"defaultValue\":\"databrfkjfkxn\"}},\"annotations\":[\"dataoeqcrjvcjskqsfn\",\"dataiwap\",\"dataunhdikatzmtuv\",\"datanh\"],\"folder\":{\"name\":\"kbibxlwzlvkcm\"},\"\":{\"aoboiahk\":\"dataaunlodincf\",\"ksaxyeedvpmodkt\":\"datapsvax\",\"mor\":\"datautydvvg\",\"yvuz\":\"datapcjes\"}}")
            .toObject(ShopifyObjectDataset.class);
        Assertions.assertEquals("fblsxyfqgtodg", model.description());
        Assertions.assertEquals("bmxbpqcnx", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.ARRAY, model.parameters().get("aagwkrxjkcge").type());
        Assertions.assertEquals("kbibxlwzlvkcm", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ShopifyObjectDataset model = new ShopifyObjectDataset().withDescription("fblsxyfqgtodg")
            .withStructure("datalefmizdcsr")
            .withSchema("databnasgfyxhsxcg")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("bmxbpqcnx")
                .withParameters(mapOf("uufhpdncokqrg", "datahojvmazuflfp", "fnmmib", "datavbhmnimjlyhb", "umqeobrwreu",
                    "datawcduyrgcay")))
            .withParameters(mapOf("aagwkrxjkcge",
                new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("datahamigsqzmfk"), "t",
                new ParameterSpecification().withType(ParameterType.FLOAT).withDefaultValue("databrfkjfkxn")))
            .withAnnotations(Arrays.asList("dataoeqcrjvcjskqsfn", "dataiwap", "dataunhdikatzmtuv", "datanh"))
            .withFolder(new DatasetFolder().withName("kbibxlwzlvkcm"))
            .withTableName("datandmtqvmkmzvag");
        model = BinaryData.fromObject(model).toObject(ShopifyObjectDataset.class);
        Assertions.assertEquals("fblsxyfqgtodg", model.description());
        Assertions.assertEquals("bmxbpqcnx", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.ARRAY, model.parameters().get("aagwkrxjkcge").type());
        Assertions.assertEquals("kbibxlwzlvkcm", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
