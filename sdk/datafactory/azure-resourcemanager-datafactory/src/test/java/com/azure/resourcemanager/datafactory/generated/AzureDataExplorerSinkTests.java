// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzureDataExplorerSink;

public final class AzureDataExplorerSinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureDataExplorerSink model = BinaryData.fromString(
            "{\"type\":\"AzureDataExplorerSink\",\"ingestionMappingName\":\"dataik\",\"ingestionMappingAsJson\":\"datatrdbtrkvluu\",\"flushImmediately\":\"datasu\",\"writeBatchSize\":\"datafrwmct\",\"writeBatchTimeout\":\"datagjqcksfbkr\",\"sinkRetryCount\":\"dataulpy\",\"sinkRetryWait\":\"dataqsiniej\",\"maxConcurrentConnections\":\"datavvvtxkwrvtl\",\"disableMetricsCollection\":\"dataukbdtmr\",\"\":{\"f\":\"datau\",\"ui\":\"datavbpvizuu\"}}")
            .toObject(AzureDataExplorerSink.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureDataExplorerSink model = new AzureDataExplorerSink().withWriteBatchSize("datafrwmct")
            .withWriteBatchTimeout("datagjqcksfbkr")
            .withSinkRetryCount("dataulpy")
            .withSinkRetryWait("dataqsiniej")
            .withMaxConcurrentConnections("datavvvtxkwrvtl")
            .withDisableMetricsCollection("dataukbdtmr")
            .withIngestionMappingName("dataik")
            .withIngestionMappingAsJson("datatrdbtrkvluu")
            .withFlushImmediately("datasu");
        model = BinaryData.fromObject(model).toObject(AzureDataExplorerSink.class);
    }
}
