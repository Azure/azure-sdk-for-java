// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.ConnectionType;
import com.azure.resourcemanager.datafactory.models.MapperAttributeMapping;
import com.azure.resourcemanager.datafactory.models.MapperAttributeMappings;
import com.azure.resourcemanager.datafactory.models.MapperAttributeReference;
import com.azure.resourcemanager.datafactory.models.MapperConnectionReference;
import com.azure.resourcemanager.datafactory.models.MappingType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MapperAttributeMappingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MapperAttributeMappings model = BinaryData.fromString(
            "{\"attributeMappings\":[{\"name\":\"qumoeno\",\"type\":\"Direct\",\"functionName\":\"enhqhskndnelq\",\"expression\":\"adlknwfoanni\",\"attributeReference\":{\"name\":\"etxivcnrlyxnuc\",\"entity\":\"p\",\"entityConnectionReference\":{\"connectionName\":\"kwqpat\",\"type\":\"linkedservicetype\"}},\"attributeReferences\":[{\"name\":\"cjbctviv\",\"entity\":\"qymtuowogtgits\",\"entityConnectionReference\":{\"connectionName\":\"vbrzcdb\",\"type\":\"linkedservicetype\"}},{\"name\":\"ndscxmxeatk\",\"entity\":\"mwnrdj\",\"entityConnectionReference\":{\"connectionName\":\"q\",\"type\":\"linkedservicetype\"}}]},{\"name\":\"mhjrm\",\"type\":\"Aggregate\",\"functionName\":\"axljal\",\"expression\":\"hcjmo\",\"attributeReference\":{\"name\":\"nc\",\"entity\":\"xxqcwgaxf\",\"entityConnectionReference\":{\"connectionName\":\"knokzw\",\"type\":\"linkedservicetype\"}},\"attributeReferences\":[{\"name\":\"ixldzyyfy\",\"entity\":\"qsix\",\"entityConnectionReference\":{\"connectionName\":\"puj\",\"type\":\"linkedservicetype\"}},{\"name\":\"lkjuvsmbmslzoyov\",\"entity\":\"dbpqvybefgvm\",\"entityConnectionReference\":{\"connectionName\":\"kcvtl\",\"type\":\"linkedservicetype\"}},{\"name\":\"skvcuartrhunl\",\"entity\":\"rykycndzfqivjr\",\"entityConnectionReference\":{\"connectionName\":\"kbbm\",\"type\":\"linkedservicetype\"}},{\"name\":\"ltbxoeeonqlnfw\",\"entity\":\"ymvqdbpbhfckdvez\",\"entityConnectionReference\":{\"connectionName\":\"ssbzhddubbnqfbl\",\"type\":\"linkedservicetype\"}}]}]}")
            .toObject(MapperAttributeMappings.class);
        Assertions.assertEquals("qumoeno", model.attributeMappings().get(0).name());
        Assertions.assertEquals(MappingType.DIRECT, model.attributeMappings().get(0).type());
        Assertions.assertEquals("enhqhskndnelq", model.attributeMappings().get(0).functionName());
        Assertions.assertEquals("adlknwfoanni", model.attributeMappings().get(0).expression());
        Assertions.assertEquals("etxivcnrlyxnuc", model.attributeMappings().get(0).attributeReference().name());
        Assertions.assertEquals("p", model.attributeMappings().get(0).attributeReference().entity());
        Assertions.assertEquals("kwqpat",
            model.attributeMappings().get(0).attributeReference().entityConnectionReference().connectionName());
        Assertions.assertEquals(ConnectionType.LINKEDSERVICETYPE,
            model.attributeMappings().get(0).attributeReference().entityConnectionReference().type());
        Assertions.assertEquals("cjbctviv", model.attributeMappings().get(0).attributeReferences().get(0).name());
        Assertions.assertEquals("qymtuowogtgits",
            model.attributeMappings().get(0).attributeReferences().get(0).entity());
        Assertions.assertEquals("vbrzcdb",
            model.attributeMappings().get(0).attributeReferences().get(0).entityConnectionReference().connectionName());
        Assertions.assertEquals(ConnectionType.LINKEDSERVICETYPE,
            model.attributeMappings().get(0).attributeReferences().get(0).entityConnectionReference().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MapperAttributeMappings model = new MapperAttributeMappings().withAttributeMappings(Arrays.asList(
            new MapperAttributeMapping().withName("qumoeno")
                .withType(MappingType.DIRECT)
                .withFunctionName("enhqhskndnelq")
                .withExpression("adlknwfoanni")
                .withAttributeReference(new MapperAttributeReference().withName("etxivcnrlyxnuc")
                    .withEntity("p")
                    .withEntityConnectionReference(new MapperConnectionReference().withConnectionName("kwqpat")
                        .withType(ConnectionType.LINKEDSERVICETYPE)))
                .withAttributeReferences(Arrays.asList(
                    new MapperAttributeReference().withName("cjbctviv")
                        .withEntity("qymtuowogtgits")
                        .withEntityConnectionReference(new MapperConnectionReference().withConnectionName("vbrzcdb")
                            .withType(ConnectionType.LINKEDSERVICETYPE)),
                    new MapperAttributeReference().withName("ndscxmxeatk")
                        .withEntity("mwnrdj")
                        .withEntityConnectionReference(new MapperConnectionReference().withConnectionName("q")
                            .withType(ConnectionType.LINKEDSERVICETYPE)))),
            new MapperAttributeMapping().withName("mhjrm")
                .withType(MappingType.AGGREGATE)
                .withFunctionName("axljal")
                .withExpression("hcjmo")
                .withAttributeReference(new MapperAttributeReference().withName("nc")
                    .withEntity("xxqcwgaxf")
                    .withEntityConnectionReference(new MapperConnectionReference().withConnectionName("knokzw")
                        .withType(ConnectionType.LINKEDSERVICETYPE)))
                .withAttributeReferences(Arrays.asList(
                    new MapperAttributeReference().withName("ixldzyyfy")
                        .withEntity("qsix")
                        .withEntityConnectionReference(new MapperConnectionReference().withConnectionName("puj")
                            .withType(ConnectionType.LINKEDSERVICETYPE)),
                    new MapperAttributeReference().withName("lkjuvsmbmslzoyov")
                        .withEntity("dbpqvybefgvm")
                        .withEntityConnectionReference(new MapperConnectionReference().withConnectionName("kcvtl")
                            .withType(ConnectionType.LINKEDSERVICETYPE)),
                    new MapperAttributeReference().withName("skvcuartrhunl")
                        .withEntity("rykycndzfqivjr")
                        .withEntityConnectionReference(new MapperConnectionReference().withConnectionName("kbbm")
                            .withType(ConnectionType.LINKEDSERVICETYPE)),
                    new MapperAttributeReference().withName("ltbxoeeonqlnfw")
                        .withEntity("ymvqdbpbhfckdvez")
                        .withEntityConnectionReference(
                            new MapperConnectionReference().withConnectionName("ssbzhddubbnqfbl")
                                .withType(ConnectionType.LINKEDSERVICETYPE))))));
        model = BinaryData.fromObject(model).toObject(MapperAttributeMappings.class);
        Assertions.assertEquals("qumoeno", model.attributeMappings().get(0).name());
        Assertions.assertEquals(MappingType.DIRECT, model.attributeMappings().get(0).type());
        Assertions.assertEquals("enhqhskndnelq", model.attributeMappings().get(0).functionName());
        Assertions.assertEquals("adlknwfoanni", model.attributeMappings().get(0).expression());
        Assertions.assertEquals("etxivcnrlyxnuc", model.attributeMappings().get(0).attributeReference().name());
        Assertions.assertEquals("p", model.attributeMappings().get(0).attributeReference().entity());
        Assertions.assertEquals("kwqpat",
            model.attributeMappings().get(0).attributeReference().entityConnectionReference().connectionName());
        Assertions.assertEquals(ConnectionType.LINKEDSERVICETYPE,
            model.attributeMappings().get(0).attributeReference().entityConnectionReference().type());
        Assertions.assertEquals("cjbctviv", model.attributeMappings().get(0).attributeReferences().get(0).name());
        Assertions.assertEquals("qymtuowogtgits",
            model.attributeMappings().get(0).attributeReferences().get(0).entity());
        Assertions.assertEquals("vbrzcdb",
            model.attributeMappings().get(0).attributeReferences().get(0).entityConnectionReference().connectionName());
        Assertions.assertEquals(ConnectionType.LINKEDSERVICETYPE,
            model.attributeMappings().get(0).attributeReferences().get(0).entityConnectionReference().type());
    }
}
