// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.ImpalaObjectDataset;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ImpalaObjectDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ImpalaObjectDataset model = BinaryData.fromString(
            "{\"type\":\"ImpalaObject\",\"typeProperties\":{\"tableName\":\"dataxiefcorzbidaeb\",\"table\":\"datanicewd\",\"schema\":\"datajwiylciobb\"},\"description\":\"ws\",\"structure\":\"dataeqx\",\"schema\":\"datacuuuexsmnteevfg\",\"linkedServiceName\":{\"referenceName\":\"xfezraqsddko\",\"parameters\":{\"w\":\"dataxqfkyrxgmzzeg\",\"fegaok\":\"datazfss\"}},\"parameters\":{\"fyuklxkelmz\":{\"type\":\"String\",\"defaultValue\":\"datara\"},\"gsingmhpavsfg\":{\"type\":\"SecureString\",\"defaultValue\":\"databwhuecx\"},\"klj\":{\"type\":\"Float\",\"defaultValue\":\"dataqrwwbdrwro\"}},\"annotations\":[\"dataqhqq\",\"dataarkyulfamea\",\"datasjqenh\"],\"folder\":{\"name\":\"azvgeytlplslfcv\"},\"\":{\"jocrhnxzmfvmw\":\"datasuowtolkyqf\",\"rawwhyxf\":\"datanrtc\"}}")
            .toObject(ImpalaObjectDataset.class);
        Assertions.assertEquals("ws", model.description());
        Assertions.assertEquals("xfezraqsddko", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.STRING, model.parameters().get("fyuklxkelmz").type());
        Assertions.assertEquals("azvgeytlplslfcv", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ImpalaObjectDataset model = new ImpalaObjectDataset().withDescription("ws")
            .withStructure("dataeqx")
            .withSchema("datacuuuexsmnteevfg")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("xfezraqsddko")
                .withParameters(mapOf("w", "dataxqfkyrxgmzzeg", "fegaok", "datazfss")))
            .withParameters(mapOf("fyuklxkelmz",
                new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("datara"), "gsingmhpavsfg",
                new ParameterSpecification().withType(ParameterType.SECURE_STRING).withDefaultValue("databwhuecx"),
                "klj", new ParameterSpecification().withType(ParameterType.FLOAT).withDefaultValue("dataqrwwbdrwro")))
            .withAnnotations(Arrays.asList("dataqhqq", "dataarkyulfamea", "datasjqenh"))
            .withFolder(new DatasetFolder().withName("azvgeytlplslfcv"))
            .withTableName("dataxiefcorzbidaeb")
            .withTable("datanicewd")
            .withSchemaTypePropertiesSchema("datajwiylciobb");
        model = BinaryData.fromObject(model).toObject(ImpalaObjectDataset.class);
        Assertions.assertEquals("ws", model.description());
        Assertions.assertEquals("xfezraqsddko", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.STRING, model.parameters().get("fyuklxkelmz").type());
        Assertions.assertEquals("azvgeytlplslfcv", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
