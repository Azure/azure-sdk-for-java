// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.ZohoObjectDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ZohoObjectDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ZohoObjectDataset model = BinaryData.fromString(
            "{\"type\":\"ZohoObject\",\"typeProperties\":{\"tableName\":\"datamrslwknrd\"},\"description\":\"mbjern\",\"structure\":\"datazywx\",\"schema\":\"dataaq\",\"linkedServiceName\":{\"referenceName\":\"tkdeetnnef\",\"parameters\":{\"fwqjzybmfqdnpp\":\"datalkszuxjmrzsxwa\",\"vamuvkgd\":\"datacfguam\",\"spjvsyydjlhd\":\"datapjbblukgctv\"}},\"parameters\":{\"ulojwumfjdymeq\":{\"type\":\"Array\",\"defaultValue\":\"datavyeegx\"},\"nxemhqpzhnatw\":{\"type\":\"Bool\",\"defaultValue\":\"datapfyxdjspn\"}},\"annotations\":[\"datamcvdjlwwefevtwll\",\"dataypmjc\",\"datay\",\"datafwgkzuhk\"],\"folder\":{\"name\":\"jkckwbqwjyfmmk\"},\"\":{\"oerohextigukfk\":\"datarooyzhobnvyuepa\",\"enlqtqyvlfbs\":\"datasycbdymbnp\"}}")
            .toObject(ZohoObjectDataset.class);
        Assertions.assertEquals("mbjern", model.description());
        Assertions.assertEquals("tkdeetnnef", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.ARRAY, model.parameters().get("ulojwumfjdymeq").type());
        Assertions.assertEquals("jkckwbqwjyfmmk", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ZohoObjectDataset model = new ZohoObjectDataset().withDescription("mbjern")
            .withStructure("datazywx")
            .withSchema("dataaq")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("tkdeetnnef")
                .withParameters(mapOf("fwqjzybmfqdnpp", "datalkszuxjmrzsxwa", "vamuvkgd", "datacfguam", "spjvsyydjlhd",
                    "datapjbblukgctv")))
            .withParameters(mapOf("ulojwumfjdymeq",
                new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("datavyeegx"),
                "nxemhqpzhnatw",
                new ParameterSpecification().withType(ParameterType.BOOL).withDefaultValue("datapfyxdjspn")))
            .withAnnotations(Arrays.asList("datamcvdjlwwefevtwll", "dataypmjc", "datay", "datafwgkzuhk"))
            .withFolder(new DatasetFolder().withName("jkckwbqwjyfmmk"))
            .withTableName("datamrslwknrd");
        model = BinaryData.fromObject(model).toObject(ZohoObjectDataset.class);
        Assertions.assertEquals("mbjern", model.description());
        Assertions.assertEquals("tkdeetnnef", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.ARRAY, model.parameters().get("ulojwumfjdymeq").type());
        Assertions.assertEquals("jkckwbqwjyfmmk", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
