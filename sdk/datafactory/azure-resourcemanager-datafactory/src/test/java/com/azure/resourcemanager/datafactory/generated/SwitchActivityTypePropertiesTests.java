// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.fluent.models.SwitchActivityTypeProperties;
import com.azure.resourcemanager.datafactory.models.Activity;
import com.azure.resourcemanager.datafactory.models.ActivityDependency;
import com.azure.resourcemanager.datafactory.models.ActivityOnInactiveMarkAs;
import com.azure.resourcemanager.datafactory.models.ActivityState;
import com.azure.resourcemanager.datafactory.models.DependencyCondition;
import com.azure.resourcemanager.datafactory.models.Expression;
import com.azure.resourcemanager.datafactory.models.SwitchCase;
import com.azure.resourcemanager.datafactory.models.UserProperty;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SwitchActivityTypePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SwitchActivityTypeProperties model =
            BinaryData
                .fromString(
                    "{\"on\":{\"value\":\"wvirbshyulkhep\"},\"cases\":[{\"value\":\"cz\",\"activities\":[{\"type\":\"Activity\",\"name\":\"ydaifx\",\"description\":\"xqzczccml\",\"state\":\"Active\",\"onInactiveMarkAs\":\"Skipped\",\"dependsOn\":[{\"activity\":\"daoi\",\"dependencyConditions\":[]}],\"userProperties\":[{\"name\":\"knsqdr\",\"value\":\"datagvanpjv\"},{\"name\":\"rwlseeuyxxrwo\",\"value\":\"datagwq\"},{\"name\":\"zugsbwqrotpvytrz\",\"value\":\"dataqbckqgt\"}],\"\":{\"yicjzkgyuvi\":\"datanznk\",\"buvyuzzwph\":\"dataeskindgmk\",\"ikwvcogq\":\"dataliflxrnsyvmu\"}},{\"type\":\"Activity\",\"name\":\"im\",\"description\":\"thrrxr\",\"state\":\"Active\",\"onInactiveMarkAs\":\"Failed\",\"dependsOn\":[{\"activity\":\"bmizbev\",\"dependencyConditions\":[]},{\"activity\":\"ezufxuugvdbpjo\",\"dependencyConditions\":[]},{\"activity\":\"cpystc\",\"dependencyConditions\":[]},{\"activity\":\"avlnk\",\"dependencyConditions\":[]}],\"userProperties\":[{\"name\":\"nvfgwgoxfd\",\"value\":\"datakezoxhazafmq\"},{\"name\":\"bifpc\",\"value\":\"dataammpeakdhebzquq\"},{\"name\":\"gjxklojdydha\",\"value\":\"datafjwm\"},{\"name\":\"sxgjih\",\"value\":\"dataxoxjghumvpt\"}],\"\":{\"fealcjuzzz\":\"datagll\"}},{\"type\":\"Activity\",\"name\":\"lkucrno\",\"description\":\"gdbaorn\",\"state\":\"Inactive\",\"onInactiveMarkAs\":\"Skipped\",\"dependsOn\":[{\"activity\":\"qojdmzej\",\"dependencyConditions\":[]},{\"activity\":\"pzzq\",\"dependencyConditions\":[]},{\"activity\":\"inrymzlq\",\"dependencyConditions\":[]}],\"userProperties\":[{\"name\":\"ivxaqzmvgx\",\"value\":\"datatkcvnyik\"},{\"name\":\"exw\",\"value\":\"datas\"},{\"name\":\"vgxelzuvdyz\",\"value\":\"datansutesqkklzy\"},{\"name\":\"avtivefsrlt\",\"value\":\"dataxhpntewv\"}],\"\":{\"dervnnfieaqbvg\":\"dataidmcoxobrv\",\"ubqemrxmr\":\"dataehggeeagbrslbzc\",\"axusww\":\"databe\",\"agdnzvohrnqnuru\":\"datanwxohbmv\"}}]},{\"value\":\"yuzcp\",\"activities\":[{\"type\":\"Activity\",\"name\":\"s\",\"description\":\"dtiocsf\",\"state\":\"Active\",\"onInactiveMarkAs\":\"Failed\",\"dependsOn\":[{\"activity\":\"scv\",\"dependencyConditions\":[]},{\"activity\":\"mthukboryn\",\"dependencyConditions\":[]}],\"userProperties\":[{\"name\":\"tyhmophoemhv\",\"value\":\"dataqwdphncftbqij\"},{\"name\":\"qfoatqnhr\",\"value\":\"dataxhmtxpxdtmrwjk\"},{\"name\":\"tiznvijdtmjy\",\"value\":\"databkdhwadnccunrviq\"}],\"\":{\"a\":\"datasliou\",\"jw\":\"dataxqnpnpggbu\"}}]},{\"value\":\"gqudnmuirt\",\"activities\":[{\"type\":\"Activity\",\"name\":\"tk\",\"description\":\"hixfuuzaczmejf\",\"state\":\"Inactive\",\"onInactiveMarkAs\":\"Failed\",\"dependsOn\":[{\"activity\":\"itytketwdskoc\",\"dependencyConditions\":[]},{\"activity\":\"qhzyswchbvejg\",\"dependencyConditions\":[]},{\"activity\":\"xvjqevmzhkocyngd\",\"dependencyConditions\":[]},{\"activity\":\"kapnxylhr\",\"dependencyConditions\":[]}],\"userProperties\":[{\"name\":\"hd\",\"value\":\"datalndlvcbc\"},{\"name\":\"biisnh\",\"value\":\"dataqqaedgwghqq\"},{\"name\":\"uuetmqzuen\",\"value\":\"datallqvroopk\"},{\"name\":\"mj\",\"value\":\"dataopibaxkywqs\"}],\"\":{\"cahlsavinoora\":\"datacuvlfzdkpfeup\",\"lbd\":\"dataspfinyijmwqgmhf\",\"fpucwmdmbys\":\"datadhedmfidro\"}},{\"type\":\"Activity\",\"name\":\"qbgndfzheyxccx\",\"description\":\"sioawro\",\"state\":\"Inactive\",\"onInactiveMarkAs\":\"Skipped\",\"dependsOn\":[{\"activity\":\"quppkzuxsbbmxfut\",\"dependencyConditions\":[]},{\"activity\":\"y\",\"dependencyConditions\":[]}],\"userProperties\":[{\"name\":\"lyopobgzluuki\",\"value\":\"datajezadkf\"},{\"name\":\"piffgtqhghygzaya\",\"value\":\"datargmlaerx\"},{\"name\":\"ucxmybuqjpgbi\",\"value\":\"dataaxga\"},{\"name\":\"zfyin\",\"value\":\"datapvbmbf\"}],\"\":{\"wwgzyvo\":\"datauamdydkdcvowasl\",\"haqqavhfdezom\":\"dataotief\"}}]}],\"defaultActivities\":[{\"type\":\"Activity\",\"name\":\"blmypuonuv\",\"description\":\"mf\",\"state\":\"Active\",\"onInactiveMarkAs\":\"Succeeded\",\"dependsOn\":[{\"activity\":\"ha\",\"dependencyConditions\":[\"Failed\",\"Completed\",\"Failed\",\"Completed\"],\"\":{\"wipaucl\":\"dataabyzdaroe\"}},{\"activity\":\"typzziavg\",\"dependencyConditions\":[\"Succeeded\",\"Succeeded\",\"Skipped\",\"Succeeded\"],\"\":{\"djkk\":\"dataghboqeuezyf\",\"daejn\":\"dataaci\",\"wyfuqqbafrbhr\":\"datab\",\"kvok\":\"datap\"}},{\"activity\":\"mere\",\"dependencyConditions\":[\"Completed\",\"Failed\",\"Skipped\",\"Failed\"],\"\":{\"decxbiknf\":\"datakcn\",\"fxdntpksb\":\"datapixfdojxby\",\"svahbqoojdnmrxj\":\"dataigegwaidqzfl\"}},{\"activity\":\"umrzfdbo\",\"dependencyConditions\":[\"Failed\",\"Failed\"],\"\":{\"hql\":\"datan\"}}],\"userProperties\":[{\"name\":\"gia\",\"value\":\"dataxpfkozvcxxezurh\"},{\"name\":\"ucnssp\",\"value\":\"dataleazvyftklbbribg\"},{\"name\":\"zkkmrlptdk\",\"value\":\"dataib\"},{\"name\":\"rivedshuxlhecz\",\"value\":\"datamwwm\"}],\"\":{\"ysjglponkrhp\":\"dataiwkrj\"}},{\"type\":\"Activity\",\"name\":\"ediu\",\"description\":\"kcad\",\"state\":\"Inactive\",\"onInactiveMarkAs\":\"Failed\",\"dependsOn\":[{\"activity\":\"pcjrbfayduzzyxly\",\"dependencyConditions\":[\"Completed\",\"Skipped\"],\"\":{\"ec\":\"datafmya\"}}],\"userProperties\":[{\"name\":\"bfgmgho\",\"value\":\"dataox\"}],\"\":{\"lqlib\":\"datatsrvqcxrrkcv\"}},{\"type\":\"Activity\",\"name\":\"mfn\",\"description\":\"sihkkk\",\"state\":\"Inactive\",\"onInactiveMarkAs\":\"Succeeded\",\"dependsOn\":[{\"activity\":\"zmfpgzljgrt\",\"dependencyConditions\":[\"Skipped\",\"Failed\"],\"\":{\"etpk\":\"datamzbasxapcegtcdu\"}}],\"userProperties\":[{\"name\":\"nneynmgvqysgh\",\"value\":\"datahxgxqdmvfdocjafc\"}],\"\":{\"qhyq\":\"datadnktutwczdwmtfjz\",\"owverhtyc\":\"datamobsjudpeed\",\"mdsisll\":\"dataigtsrrlelpobm\",\"imojozhdcptxxb\":\"dataqgluhr\"}}]}")
                .toObject(SwitchActivityTypeProperties.class);
        Assertions.assertEquals("wvirbshyulkhep", model.on().value());
        Assertions.assertEquals("cz", model.cases().get(0).value());
        Assertions.assertEquals("ydaifx", model.cases().get(0).activities().get(0).name());
        Assertions.assertEquals("xqzczccml", model.cases().get(0).activities().get(0).description());
        Assertions.assertEquals(ActivityState.ACTIVE, model.cases().get(0).activities().get(0).state());
        Assertions
            .assertEquals(
                ActivityOnInactiveMarkAs.SKIPPED, model.cases().get(0).activities().get(0).onInactiveMarkAs());
        Assertions.assertEquals("daoi", model.cases().get(0).activities().get(0).dependsOn().get(0).activity());
        Assertions.assertEquals("knsqdr", model.cases().get(0).activities().get(0).userProperties().get(0).name());
        Assertions.assertEquals("blmypuonuv", model.defaultActivities().get(0).name());
        Assertions.assertEquals("mf", model.defaultActivities().get(0).description());
        Assertions.assertEquals(ActivityState.ACTIVE, model.defaultActivities().get(0).state());
        Assertions
            .assertEquals(ActivityOnInactiveMarkAs.SUCCEEDED, model.defaultActivities().get(0).onInactiveMarkAs());
        Assertions.assertEquals("ha", model.defaultActivities().get(0).dependsOn().get(0).activity());
        Assertions
            .assertEquals(
                DependencyCondition.FAILED,
                model.defaultActivities().get(0).dependsOn().get(0).dependencyConditions().get(0));
        Assertions.assertEquals("gia", model.defaultActivities().get(0).userProperties().get(0).name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SwitchActivityTypeProperties model =
            new SwitchActivityTypeProperties()
                .withOn(new Expression().withValue("wvirbshyulkhep"))
                .withCases(
                    Arrays
                        .asList(
                            new SwitchCase()
                                .withValue("cz")
                                .withActivities(
                                    Arrays
                                        .asList(
                                            new Activity()
                                                .withName("ydaifx")
                                                .withDescription("xqzczccml")
                                                .withState(ActivityState.ACTIVE)
                                                .withOnInactiveMarkAs(ActivityOnInactiveMarkAs.SKIPPED)
                                                .withDependsOn(
                                                    Arrays
                                                        .asList(
                                                            new ActivityDependency()
                                                                .withActivity("daoi")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf())))
                                                .withUserProperties(
                                                    Arrays
                                                        .asList(
                                                            new UserProperty()
                                                                .withName("knsqdr")
                                                                .withValue("datagvanpjv"),
                                                            new UserProperty()
                                                                .withName("rwlseeuyxxrwo")
                                                                .withValue("datagwq"),
                                                            new UserProperty()
                                                                .withName("zugsbwqrotpvytrz")
                                                                .withValue("dataqbckqgt")))
                                                .withAdditionalProperties(mapOf("type", "Activity")),
                                            new Activity()
                                                .withName("im")
                                                .withDescription("thrrxr")
                                                .withState(ActivityState.ACTIVE)
                                                .withOnInactiveMarkAs(ActivityOnInactiveMarkAs.FAILED)
                                                .withDependsOn(
                                                    Arrays
                                                        .asList(
                                                            new ActivityDependency()
                                                                .withActivity("bmizbev")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf()),
                                                            new ActivityDependency()
                                                                .withActivity("ezufxuugvdbpjo")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf()),
                                                            new ActivityDependency()
                                                                .withActivity("cpystc")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf()),
                                                            new ActivityDependency()
                                                                .withActivity("avlnk")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf())))
                                                .withUserProperties(
                                                    Arrays
                                                        .asList(
                                                            new UserProperty()
                                                                .withName("nvfgwgoxfd")
                                                                .withValue("datakezoxhazafmq"),
                                                            new UserProperty()
                                                                .withName("bifpc")
                                                                .withValue("dataammpeakdhebzquq"),
                                                            new UserProperty()
                                                                .withName("gjxklojdydha")
                                                                .withValue("datafjwm"),
                                                            new UserProperty()
                                                                .withName("sxgjih")
                                                                .withValue("dataxoxjghumvpt")))
                                                .withAdditionalProperties(mapOf("type", "Activity")),
                                            new Activity()
                                                .withName("lkucrno")
                                                .withDescription("gdbaorn")
                                                .withState(ActivityState.INACTIVE)
                                                .withOnInactiveMarkAs(ActivityOnInactiveMarkAs.SKIPPED)
                                                .withDependsOn(
                                                    Arrays
                                                        .asList(
                                                            new ActivityDependency()
                                                                .withActivity("qojdmzej")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf()),
                                                            new ActivityDependency()
                                                                .withActivity("pzzq")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf()),
                                                            new ActivityDependency()
                                                                .withActivity("inrymzlq")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf())))
                                                .withUserProperties(
                                                    Arrays
                                                        .asList(
                                                            new UserProperty()
                                                                .withName("ivxaqzmvgx")
                                                                .withValue("datatkcvnyik"),
                                                            new UserProperty().withName("exw").withValue("datas"),
                                                            new UserProperty()
                                                                .withName("vgxelzuvdyz")
                                                                .withValue("datansutesqkklzy"),
                                                            new UserProperty()
                                                                .withName("avtivefsrlt")
                                                                .withValue("dataxhpntewv")))
                                                .withAdditionalProperties(mapOf("type", "Activity")))),
                            new SwitchCase()
                                .withValue("yuzcp")
                                .withActivities(
                                    Arrays
                                        .asList(
                                            new Activity()
                                                .withName("s")
                                                .withDescription("dtiocsf")
                                                .withState(ActivityState.ACTIVE)
                                                .withOnInactiveMarkAs(ActivityOnInactiveMarkAs.FAILED)
                                                .withDependsOn(
                                                    Arrays
                                                        .asList(
                                                            new ActivityDependency()
                                                                .withActivity("scv")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf()),
                                                            new ActivityDependency()
                                                                .withActivity("mthukboryn")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf())))
                                                .withUserProperties(
                                                    Arrays
                                                        .asList(
                                                            new UserProperty()
                                                                .withName("tyhmophoemhv")
                                                                .withValue("dataqwdphncftbqij"),
                                                            new UserProperty()
                                                                .withName("qfoatqnhr")
                                                                .withValue("dataxhmtxpxdtmrwjk"),
                                                            new UserProperty()
                                                                .withName("tiznvijdtmjy")
                                                                .withValue("databkdhwadnccunrviq")))
                                                .withAdditionalProperties(mapOf("type", "Activity")))),
                            new SwitchCase()
                                .withValue("gqudnmuirt")
                                .withActivities(
                                    Arrays
                                        .asList(
                                            new Activity()
                                                .withName("tk")
                                                .withDescription("hixfuuzaczmejf")
                                                .withState(ActivityState.INACTIVE)
                                                .withOnInactiveMarkAs(ActivityOnInactiveMarkAs.FAILED)
                                                .withDependsOn(
                                                    Arrays
                                                        .asList(
                                                            new ActivityDependency()
                                                                .withActivity("itytketwdskoc")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf()),
                                                            new ActivityDependency()
                                                                .withActivity("qhzyswchbvejg")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf()),
                                                            new ActivityDependency()
                                                                .withActivity("xvjqevmzhkocyngd")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf()),
                                                            new ActivityDependency()
                                                                .withActivity("kapnxylhr")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf())))
                                                .withUserProperties(
                                                    Arrays
                                                        .asList(
                                                            new UserProperty().withName("hd").withValue("datalndlvcbc"),
                                                            new UserProperty()
                                                                .withName("biisnh")
                                                                .withValue("dataqqaedgwghqq"),
                                                            new UserProperty()
                                                                .withName("uuetmqzuen")
                                                                .withValue("datallqvroopk"),
                                                            new UserProperty()
                                                                .withName("mj")
                                                                .withValue("dataopibaxkywqs")))
                                                .withAdditionalProperties(mapOf("type", "Activity")),
                                            new Activity()
                                                .withName("qbgndfzheyxccx")
                                                .withDescription("sioawro")
                                                .withState(ActivityState.INACTIVE)
                                                .withOnInactiveMarkAs(ActivityOnInactiveMarkAs.SKIPPED)
                                                .withDependsOn(
                                                    Arrays
                                                        .asList(
                                                            new ActivityDependency()
                                                                .withActivity("quppkzuxsbbmxfut")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf()),
                                                            new ActivityDependency()
                                                                .withActivity("y")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf())))
                                                .withUserProperties(
                                                    Arrays
                                                        .asList(
                                                            new UserProperty()
                                                                .withName("lyopobgzluuki")
                                                                .withValue("datajezadkf"),
                                                            new UserProperty()
                                                                .withName("piffgtqhghygzaya")
                                                                .withValue("datargmlaerx"),
                                                            new UserProperty()
                                                                .withName("ucxmybuqjpgbi")
                                                                .withValue("dataaxga"),
                                                            new UserProperty()
                                                                .withName("zfyin")
                                                                .withValue("datapvbmbf")))
                                                .withAdditionalProperties(mapOf("type", "Activity"))))))
                .withDefaultActivities(
                    Arrays
                        .asList(
                            new Activity()
                                .withName("blmypuonuv")
                                .withDescription("mf")
                                .withState(ActivityState.ACTIVE)
                                .withOnInactiveMarkAs(ActivityOnInactiveMarkAs.SUCCEEDED)
                                .withDependsOn(
                                    Arrays
                                        .asList(
                                            new ActivityDependency()
                                                .withActivity("ha")
                                                .withDependencyConditions(
                                                    Arrays
                                                        .asList(
                                                            DependencyCondition.FAILED,
                                                            DependencyCondition.COMPLETED,
                                                            DependencyCondition.FAILED,
                                                            DependencyCondition.COMPLETED))
                                                .withAdditionalProperties(mapOf()),
                                            new ActivityDependency()
                                                .withActivity("typzziavg")
                                                .withDependencyConditions(
                                                    Arrays
                                                        .asList(
                                                            DependencyCondition.SUCCEEDED,
                                                            DependencyCondition.SUCCEEDED,
                                                            DependencyCondition.SKIPPED,
                                                            DependencyCondition.SUCCEEDED))
                                                .withAdditionalProperties(mapOf()),
                                            new ActivityDependency()
                                                .withActivity("mere")
                                                .withDependencyConditions(
                                                    Arrays
                                                        .asList(
                                                            DependencyCondition.COMPLETED,
                                                            DependencyCondition.FAILED,
                                                            DependencyCondition.SKIPPED,
                                                            DependencyCondition.FAILED))
                                                .withAdditionalProperties(mapOf()),
                                            new ActivityDependency()
                                                .withActivity("umrzfdbo")
                                                .withDependencyConditions(
                                                    Arrays
                                                        .asList(DependencyCondition.FAILED, DependencyCondition.FAILED))
                                                .withAdditionalProperties(mapOf())))
                                .withUserProperties(
                                    Arrays
                                        .asList(
                                            new UserProperty().withName("gia").withValue("dataxpfkozvcxxezurh"),
                                            new UserProperty().withName("ucnssp").withValue("dataleazvyftklbbribg"),
                                            new UserProperty().withName("zkkmrlptdk").withValue("dataib"),
                                            new UserProperty().withName("rivedshuxlhecz").withValue("datamwwm")))
                                .withAdditionalProperties(mapOf("type", "Activity")),
                            new Activity()
                                .withName("ediu")
                                .withDescription("kcad")
                                .withState(ActivityState.INACTIVE)
                                .withOnInactiveMarkAs(ActivityOnInactiveMarkAs.FAILED)
                                .withDependsOn(
                                    Arrays
                                        .asList(
                                            new ActivityDependency()
                                                .withActivity("pcjrbfayduzzyxly")
                                                .withDependencyConditions(
                                                    Arrays
                                                        .asList(
                                                            DependencyCondition.COMPLETED, DependencyCondition.SKIPPED))
                                                .withAdditionalProperties(mapOf())))
                                .withUserProperties(
                                    Arrays.asList(new UserProperty().withName("bfgmgho").withValue("dataox")))
                                .withAdditionalProperties(mapOf("type", "Activity")),
                            new Activity()
                                .withName("mfn")
                                .withDescription("sihkkk")
                                .withState(ActivityState.INACTIVE)
                                .withOnInactiveMarkAs(ActivityOnInactiveMarkAs.SUCCEEDED)
                                .withDependsOn(
                                    Arrays
                                        .asList(
                                            new ActivityDependency()
                                                .withActivity("zmfpgzljgrt")
                                                .withDependencyConditions(
                                                    Arrays
                                                        .asList(
                                                            DependencyCondition.SKIPPED, DependencyCondition.FAILED))
                                                .withAdditionalProperties(mapOf())))
                                .withUserProperties(
                                    Arrays
                                        .asList(
                                            new UserProperty()
                                                .withName("nneynmgvqysgh")
                                                .withValue("datahxgxqdmvfdocjafc")))
                                .withAdditionalProperties(mapOf("type", "Activity"))));
        model = BinaryData.fromObject(model).toObject(SwitchActivityTypeProperties.class);
        Assertions.assertEquals("wvirbshyulkhep", model.on().value());
        Assertions.assertEquals("cz", model.cases().get(0).value());
        Assertions.assertEquals("ydaifx", model.cases().get(0).activities().get(0).name());
        Assertions.assertEquals("xqzczccml", model.cases().get(0).activities().get(0).description());
        Assertions.assertEquals(ActivityState.ACTIVE, model.cases().get(0).activities().get(0).state());
        Assertions
            .assertEquals(
                ActivityOnInactiveMarkAs.SKIPPED, model.cases().get(0).activities().get(0).onInactiveMarkAs());
        Assertions.assertEquals("daoi", model.cases().get(0).activities().get(0).dependsOn().get(0).activity());
        Assertions.assertEquals("knsqdr", model.cases().get(0).activities().get(0).userProperties().get(0).name());
        Assertions.assertEquals("blmypuonuv", model.defaultActivities().get(0).name());
        Assertions.assertEquals("mf", model.defaultActivities().get(0).description());
        Assertions.assertEquals(ActivityState.ACTIVE, model.defaultActivities().get(0).state());
        Assertions
            .assertEquals(ActivityOnInactiveMarkAs.SUCCEEDED, model.defaultActivities().get(0).onInactiveMarkAs());
        Assertions.assertEquals("ha", model.defaultActivities().get(0).dependsOn().get(0).activity());
        Assertions
            .assertEquals(
                DependencyCondition.FAILED,
                model.defaultActivities().get(0).dependsOn().get(0).dependencyConditions().get(0));
        Assertions.assertEquals("gia", model.defaultActivities().get(0).userProperties().get(0).name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
