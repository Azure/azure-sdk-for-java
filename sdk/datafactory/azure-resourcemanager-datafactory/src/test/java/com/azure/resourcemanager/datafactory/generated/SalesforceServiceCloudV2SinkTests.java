// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SalesforceServiceCloudV2Sink;
import com.azure.resourcemanager.datafactory.models.SalesforceV2SinkWriteBehavior;
import org.junit.jupiter.api.Assertions;

public final class SalesforceServiceCloudV2SinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SalesforceServiceCloudV2Sink model = BinaryData.fromString(
            "{\"type\":\"SalesforceServiceCloudV2Sink\",\"writeBehavior\":\"Upsert\",\"externalIdFieldName\":\"datadlct\",\"ignoreNullValues\":\"datao\",\"writeBatchSize\":\"datavgrloshkqthuijvi\",\"writeBatchTimeout\":\"datawswpwbgoetu\",\"sinkRetryCount\":\"datasfsfuzqpigirnmd\",\"sinkRetryWait\":\"datamagmwyfxeu\",\"maxConcurrentConnections\":\"datavtkllbfnn\",\"disableMetricsCollection\":\"datar\",\"\":{\"wldkjayiexpcxylq\":\"dataqjcyhvyrhgeuvuj\",\"zxgha\":\"dataowunwactjpgwseul\",\"tjngkfipxolp\":\"datalrvpaumkz\"}}")
            .toObject(SalesforceServiceCloudV2Sink.class);
        Assertions.assertEquals(SalesforceV2SinkWriteBehavior.UPSERT, model.writeBehavior());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SalesforceServiceCloudV2Sink model
            = new SalesforceServiceCloudV2Sink().withWriteBatchSize("datavgrloshkqthuijvi")
                .withWriteBatchTimeout("datawswpwbgoetu")
                .withSinkRetryCount("datasfsfuzqpigirnmd")
                .withSinkRetryWait("datamagmwyfxeu")
                .withMaxConcurrentConnections("datavtkllbfnn")
                .withDisableMetricsCollection("datar")
                .withWriteBehavior(SalesforceV2SinkWriteBehavior.UPSERT)
                .withExternalIdFieldName("datadlct")
                .withIgnoreNullValues("datao");
        model = BinaryData.fromObject(model).toObject(SalesforceServiceCloudV2Sink.class);
        Assertions.assertEquals(SalesforceV2SinkWriteBehavior.UPSERT, model.writeBehavior());
    }
}
