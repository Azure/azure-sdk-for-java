// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SalesforceServiceCloudV2Sink;
import com.azure.resourcemanager.datafactory.models.SalesforceV2SinkWriteBehavior;
import org.junit.jupiter.api.Assertions;

public final class SalesforceServiceCloudV2SinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SalesforceServiceCloudV2Sink model = BinaryData.fromString(
            "{\"type\":\"SalesforceServiceCloudV2Sink\",\"writeBehavior\":\"Insert\",\"externalIdFieldName\":\"datan\",\"ignoreNullValues\":\"databwvaiiuq\",\"writeBatchSize\":\"dataaqoqjnvmfmrymk\",\"writeBatchTimeout\":\"datatorv\",\"sinkRetryCount\":\"datapjxdi\",\"sinkRetryWait\":\"datautdzhkbc\",\"maxConcurrentConnections\":\"dataav\",\"disableMetricsCollection\":\"datafmgtxzvy\",\"\":{\"bbjcznx\":\"datamlkrxjq\",\"yu\":\"datahiwaau\",\"onrrarznlr\":\"datajirtiubvyudk\"}}")
            .toObject(SalesforceServiceCloudV2Sink.class);
        Assertions.assertEquals(SalesforceV2SinkWriteBehavior.INSERT, model.writeBehavior());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SalesforceServiceCloudV2Sink model = new SalesforceServiceCloudV2Sink().withWriteBatchSize("dataaqoqjnvmfmrymk")
            .withWriteBatchTimeout("datatorv")
            .withSinkRetryCount("datapjxdi")
            .withSinkRetryWait("datautdzhkbc")
            .withMaxConcurrentConnections("dataav")
            .withDisableMetricsCollection("datafmgtxzvy")
            .withWriteBehavior(SalesforceV2SinkWriteBehavior.INSERT)
            .withExternalIdFieldName("datan")
            .withIgnoreNullValues("databwvaiiuq");
        model = BinaryData.fromObject(model).toObject(SalesforceServiceCloudV2Sink.class);
        Assertions.assertEquals(SalesforceV2SinkWriteBehavior.INSERT, model.writeBehavior());
    }
}
