// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.PostgreSqlSource;

public final class PostgreSqlSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PostgreSqlSource model = BinaryData.fromString(
            "{\"type\":\"PostgreSqlSource\",\"query\":\"dataljlwfqrfyw\",\"queryTimeout\":\"datasipkhqh\",\"additionalColumns\":\"datatcztmqdkhohspkgx\",\"sourceRetryCount\":\"datavlyaprjzbx\",\"sourceRetryWait\":\"dataqfrntzbhmxl\",\"maxConcurrentConnections\":\"datafauvgt\",\"disableMetricsCollection\":\"datanozsmy\",\"\":{\"bmrwhknefcoo\":\"dataap\",\"pdd\":\"datatmd\",\"laxuybxjwny\":\"datagupiosibg\",\"fiksjpkig\":\"dataskyrttnrikss\"}}")
            .toObject(PostgreSqlSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PostgreSqlSource model = new PostgreSqlSource().withSourceRetryCount("datavlyaprjzbx")
            .withSourceRetryWait("dataqfrntzbhmxl")
            .withMaxConcurrentConnections("datafauvgt")
            .withDisableMetricsCollection("datanozsmy")
            .withQueryTimeout("datasipkhqh")
            .withAdditionalColumns("datatcztmqdkhohspkgx")
            .withQuery("dataljlwfqrfyw");
        model = BinaryData.fromObject(model).toObject(PostgreSqlSource.class);
    }
}
