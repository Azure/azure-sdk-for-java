// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.PostgreSqlSource;

public final class PostgreSqlSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PostgreSqlSource model =
            BinaryData
                .fromString(
                    "{\"type\":\"PostgreSqlSource\",\"query\":\"datavhjkwfolpj\",\"queryTimeout\":\"datapahvoiranxqnz\",\"additionalColumns\":\"datavnldtqykz\",\"sourceRetryCount\":\"datadoqrejl\",\"sourceRetryWait\":\"datan\",\"maxConcurrentConnections\":\"dataicyozryoxmfrxf\",\"disableMetricsCollection\":\"datacjialvchfumlfgm\",\"\":{\"ipklfwn\":\"dataxko\",\"dkvljitbnhg\":\"datafkbqlrtffsw\",\"abgsdxtwqqukgo\":\"datarvlarozswmucr\",\"ksltunrwxsqvx\":\"datalvjgsk\"}}")
                .toObject(PostgreSqlSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PostgreSqlSource model =
            new PostgreSqlSource()
                .withSourceRetryCount("datadoqrejl")
                .withSourceRetryWait("datan")
                .withMaxConcurrentConnections("dataicyozryoxmfrxf")
                .withDisableMetricsCollection("datacjialvchfumlfgm")
                .withQueryTimeout("datapahvoiranxqnz")
                .withAdditionalColumns("datavnldtqykz")
                .withQuery("datavhjkwfolpj");
        model = BinaryData.fromObject(model).toObject(PostgreSqlSource.class);
    }
}
