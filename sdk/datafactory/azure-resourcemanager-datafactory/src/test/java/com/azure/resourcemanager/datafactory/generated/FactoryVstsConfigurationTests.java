// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.FactoryVstsConfiguration;
import org.junit.jupiter.api.Assertions;

public final class FactoryVstsConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FactoryVstsConfiguration model =
            BinaryData
                .fromString(
                    "{\"type\":\"FactoryVSTSConfiguration\",\"projectName\":\"yeofltfnnxrkad\",\"tenantId\":\"ynnfmuiii\",\"accountName\":\"ipfohykfkx\",\"repositoryName\":\"bcbrwjiutgnjizbe\",\"collaborationBranch\":\"woiymrvz\",\"rootFolder\":\"juyrsrziuctixg\",\"lastCommitId\":\"suif\",\"disablePublish\":false}")
                .toObject(FactoryVstsConfiguration.class);
        Assertions.assertEquals("ipfohykfkx", model.accountName());
        Assertions.assertEquals("bcbrwjiutgnjizbe", model.repositoryName());
        Assertions.assertEquals("woiymrvz", model.collaborationBranch());
        Assertions.assertEquals("juyrsrziuctixg", model.rootFolder());
        Assertions.assertEquals("suif", model.lastCommitId());
        Assertions.assertEquals(false, model.disablePublish());
        Assertions.assertEquals("yeofltfnnxrkad", model.projectName());
        Assertions.assertEquals("ynnfmuiii", model.tenantId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FactoryVstsConfiguration model =
            new FactoryVstsConfiguration()
                .withAccountName("ipfohykfkx")
                .withRepositoryName("bcbrwjiutgnjizbe")
                .withCollaborationBranch("woiymrvz")
                .withRootFolder("juyrsrziuctixg")
                .withLastCommitId("suif")
                .withDisablePublish(false)
                .withProjectName("yeofltfnnxrkad")
                .withTenantId("ynnfmuiii");
        model = BinaryData.fromObject(model).toObject(FactoryVstsConfiguration.class);
        Assertions.assertEquals("ipfohykfkx", model.accountName());
        Assertions.assertEquals("bcbrwjiutgnjizbe", model.repositoryName());
        Assertions.assertEquals("woiymrvz", model.collaborationBranch());
        Assertions.assertEquals("juyrsrziuctixg", model.rootFolder());
        Assertions.assertEquals("suif", model.lastCommitId());
        Assertions.assertEquals(false, model.disablePublish());
        Assertions.assertEquals("yeofltfnnxrkad", model.projectName());
        Assertions.assertEquals("ynnfmuiii", model.tenantId());
    }
}
