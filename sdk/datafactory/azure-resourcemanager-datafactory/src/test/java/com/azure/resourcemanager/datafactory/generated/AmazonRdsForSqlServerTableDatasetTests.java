// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AmazonRdsForSqlServerTableDataset;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AmazonRdsForSqlServerTableDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AmazonRdsForSqlServerTableDataset model = BinaryData.fromString(
            "{\"type\":\"vlqcwyzhndqk\",\"typeProperties\":{\"schema\":\"dataauimnntf\",\"table\":\"datapwqcnbn\"},\"description\":\"tzpze\",\"structure\":\"datalce\",\"schema\":\"datat\",\"linkedServiceName\":{\"referenceName\":\"htuwc\",\"parameters\":{\"lujm\":\"datacaumviudzpsjqr\",\"mpjbh\":\"dataunlofwuzebfq\",\"wkhdlckdoxocj\":\"datayenfspetxeu\"}},\"parameters\":{\"eortwwyjmgvr\":{\"type\":\"Object\",\"defaultValue\":\"datapf\"}},\"annotations\":[\"datax\"],\"folder\":{\"name\":\"jnnhbcjywkdywks\"},\"\":{\"plkossjbzvxp\":\"datauafanefictp\",\"aczhfjdccjn\":\"datawdqzuhfgt\",\"g\":\"datauvbtcuhj\",\"bszsbzrrxey\":\"datatjkntomnlzthc\"}}")
            .toObject(AmazonRdsForSqlServerTableDataset.class);
        Assertions.assertEquals("tzpze", model.description());
        Assertions.assertEquals("htuwc", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.OBJECT, model.parameters().get("eortwwyjmgvr").type());
        Assertions.assertEquals("jnnhbcjywkdywks", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AmazonRdsForSqlServerTableDataset model = new AmazonRdsForSqlServerTableDataset().withDescription("tzpze")
            .withStructure("datalce")
            .withSchema("datat")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("htuwc")
                .withParameters(mapOf("lujm", "datacaumviudzpsjqr", "mpjbh", "dataunlofwuzebfq", "wkhdlckdoxocj",
                    "datayenfspetxeu")))
            .withParameters(mapOf("eortwwyjmgvr",
                new ParameterSpecification().withType(ParameterType.OBJECT).withDefaultValue("datapf")))
            .withAnnotations(Arrays.asList("datax"))
            .withFolder(new DatasetFolder().withName("jnnhbcjywkdywks"))
            .withSchemaTypePropertiesSchema("dataauimnntf")
            .withTable("datapwqcnbn");
        model = BinaryData.fromObject(model).toObject(AmazonRdsForSqlServerTableDataset.class);
        Assertions.assertEquals("tzpze", model.description());
        Assertions.assertEquals("htuwc", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.OBJECT, model.parameters().get("eortwwyjmgvr").type());
        Assertions.assertEquals("jnnhbcjywkdywks", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
