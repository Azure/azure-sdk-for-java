// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AmazonRdsForSqlServerTableDataset;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AmazonRdsForSqlServerTableDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AmazonRdsForSqlServerTableDataset model = BinaryData.fromString(
            "{\"type\":\"AmazonRdsForSqlServerTable\",\"typeProperties\":{\"schema\":\"datakbzbloasyb\",\"table\":\"dataqvovdpmhttu\"},\"description\":\"qjsrvjnqtaqgxq\",\"structure\":\"datakceincnrec\",\"schema\":\"dataiywevsfg\",\"linkedServiceName\":{\"referenceName\":\"rmnszdosmjsqsvz\",\"parameters\":{\"wghndaevhgs\":\"datat\",\"jjuzk\":\"datalwvgseufigv\"}},\"parameters\":{\"vljlbzdlby\":{\"type\":\"Array\",\"defaultValue\":\"datawuhyzekypy\"},\"ov\":{\"type\":\"String\",\"defaultValue\":\"dataxhpzy\"}},\"annotations\":[\"databhanz\"],\"folder\":{\"name\":\"fhsh\"},\"\":{\"zpbyfyvynpmggq\":\"dataahn\",\"izorbloejzs\":\"dataagenvqbugihcdvf\"}}")
            .toObject(AmazonRdsForSqlServerTableDataset.class);
        Assertions.assertEquals("qjsrvjnqtaqgxq", model.description());
        Assertions.assertEquals("rmnszdosmjsqsvz", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.ARRAY, model.parameters().get("vljlbzdlby").type());
        Assertions.assertEquals("fhsh", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AmazonRdsForSqlServerTableDataset model
            = new AmazonRdsForSqlServerTableDataset().withDescription("qjsrvjnqtaqgxq")
                .withStructure("datakceincnrec")
                .withSchema("dataiywevsfg")
                .withLinkedServiceName(new LinkedServiceReference().withReferenceName("rmnszdosmjsqsvz")
                    .withParameters(mapOf("wghndaevhgs", "datat", "jjuzk", "datalwvgseufigv")))
                .withParameters(mapOf("vljlbzdlby",
                    new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("datawuhyzekypy"), "ov",
                    new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("dataxhpzy")))
                .withAnnotations(Arrays.asList("databhanz"))
                .withFolder(new DatasetFolder().withName("fhsh"))
                .withSchemaTypePropertiesSchema("datakbzbloasyb")
                .withTable("dataqvovdpmhttu");
        model = BinaryData.fromObject(model).toObject(AmazonRdsForSqlServerTableDataset.class);
        Assertions.assertEquals("qjsrvjnqtaqgxq", model.description());
        Assertions.assertEquals("rmnszdosmjsqsvz", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.ARRAY, model.parameters().get("vljlbzdlby").type());
        Assertions.assertEquals("fhsh", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
