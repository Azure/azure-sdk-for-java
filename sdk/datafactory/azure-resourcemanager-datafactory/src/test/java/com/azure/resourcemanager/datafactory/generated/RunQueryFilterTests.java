// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.RunQueryFilter;
import com.azure.resourcemanager.datafactory.models.RunQueryFilterOperand;
import com.azure.resourcemanager.datafactory.models.RunQueryFilterOperator;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RunQueryFilterTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RunQueryFilter model = BinaryData.fromString(
            "{\"operand\":\"TriggerRunTimestamp\",\"operator\":\"NotEquals\",\"values\":[\"qytibyowbblgyavu\",\"pthjoxo\",\"smsks\",\"pi\"]}")
            .toObject(RunQueryFilter.class);
        Assertions.assertEquals(RunQueryFilterOperand.TRIGGER_RUN_TIMESTAMP, model.operand());
        Assertions.assertEquals(RunQueryFilterOperator.NOT_EQUALS, model.operator());
        Assertions.assertEquals("qytibyowbblgyavu", model.values().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RunQueryFilter model = new RunQueryFilter().withOperand(RunQueryFilterOperand.TRIGGER_RUN_TIMESTAMP)
            .withOperator(RunQueryFilterOperator.NOT_EQUALS)
            .withValues(Arrays.asList("qytibyowbblgyavu", "pthjoxo", "smsks", "pi"));
        model = BinaryData.fromObject(model).toObject(RunQueryFilter.class);
        Assertions.assertEquals(RunQueryFilterOperand.TRIGGER_RUN_TIMESTAMP, model.operand());
        Assertions.assertEquals(RunQueryFilterOperator.NOT_EQUALS, model.operator());
        Assertions.assertEquals("qytibyowbblgyavu", model.values().get(0));
    }
}
