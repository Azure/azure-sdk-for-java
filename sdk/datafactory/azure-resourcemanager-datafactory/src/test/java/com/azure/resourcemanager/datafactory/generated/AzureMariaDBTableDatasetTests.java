// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzureMariaDBTableDataset;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AzureMariaDBTableDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureMariaDBTableDataset model = BinaryData.fromString(
            "{\"type\":\"AzureMariaDBTable\",\"typeProperties\":{\"tableName\":\"datatythct\"},\"description\":\"oip\",\"structure\":\"datanerwhem\",\"schema\":\"datadsssfzsgzguspej\",\"linkedServiceName\":{\"referenceName\":\"meqgxhwispsogdbl\",\"parameters\":{\"ichlygkvuixwonkr\":\"databaqxaxtuxirppb\",\"dxywabk\":\"datai\",\"aqyjukkajnne\":\"datatnipaptgv\"}},\"parameters\":{\"femiwfhhawbabhz\":{\"type\":\"SecureString\",\"defaultValue\":\"dataop\"},\"qnxyd\":{\"type\":\"String\",\"defaultValue\":\"datadi\"},\"uspaywvs\":{\"type\":\"Object\",\"defaultValue\":\"dataoiqz\"}},\"annotations\":[\"dataronzeafkxfmuwdb\",\"dataytqavouymkdeu\",\"dataxlvzpfdka\"],\"folder\":{\"name\":\"iw\"},\"\":{\"gjmpd\":\"datapqlktthbmrrmtr\",\"juzmu\":\"datarjzwawpewajccs\"}}")
            .toObject(AzureMariaDBTableDataset.class);
        Assertions.assertEquals("oip", model.description());
        Assertions.assertEquals("meqgxhwispsogdbl", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.SECURE_STRING, model.parameters().get("femiwfhhawbabhz").type());
        Assertions.assertEquals("iw", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureMariaDBTableDataset model = new AzureMariaDBTableDataset().withDescription("oip")
            .withStructure("datanerwhem")
            .withSchema("datadsssfzsgzguspej")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("meqgxhwispsogdbl")
                .withParameters(mapOf("ichlygkvuixwonkr", "databaqxaxtuxirppb", "dxywabk", "datai", "aqyjukkajnne",
                    "datatnipaptgv")))
            .withParameters(mapOf("femiwfhhawbabhz",
                new ParameterSpecification().withType(ParameterType.SECURE_STRING).withDefaultValue("dataop"), "qnxyd",
                new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("datadi"), "uspaywvs",
                new ParameterSpecification().withType(ParameterType.OBJECT).withDefaultValue("dataoiqz")))
            .withAnnotations(Arrays.asList("dataronzeafkxfmuwdb", "dataytqavouymkdeu", "dataxlvzpfdka"))
            .withFolder(new DatasetFolder().withName("iw"))
            .withTableName("datatythct");
        model = BinaryData.fromObject(model).toObject(AzureMariaDBTableDataset.class);
        Assertions.assertEquals("oip", model.description());
        Assertions.assertEquals("meqgxhwispsogdbl", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.SECURE_STRING, model.parameters().get("femiwfhhawbabhz").type());
        Assertions.assertEquals("iw", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
