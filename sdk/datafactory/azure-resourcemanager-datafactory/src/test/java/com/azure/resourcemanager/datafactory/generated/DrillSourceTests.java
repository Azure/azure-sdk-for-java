// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DrillSource;

public final class DrillSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DrillSource model = BinaryData.fromString(
            "{\"type\":\"DrillSource\",\"query\":\"datatmhneqdrz\",\"queryTimeout\":\"datayxx\",\"additionalColumns\":\"dataabqlakknaacseqo\",\"sourceRetryCount\":\"datajsf\",\"sourceRetryWait\":\"datayqrrsjqtdj\",\"maxConcurrentConnections\":\"datadm\",\"disableMetricsCollection\":\"dataiml\",\"\":{\"aqlqgyuiboel\":\"dataezcivkzrv\",\"caglytxjcbdpczm\":\"datajduzapnopotodprr\",\"viqskylwpqrcyf\":\"datauwrcehfwcecleaq\"}}")
            .toObject(DrillSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DrillSource model = new DrillSource().withSourceRetryCount("datajsf")
            .withSourceRetryWait("datayqrrsjqtdj")
            .withMaxConcurrentConnections("datadm")
            .withDisableMetricsCollection("dataiml")
            .withQueryTimeout("datayxx")
            .withAdditionalColumns("dataabqlakknaacseqo")
            .withQuery("datatmhneqdrz");
        model = BinaryData.fromObject(model).toObject(DrillSource.class);
    }
}
