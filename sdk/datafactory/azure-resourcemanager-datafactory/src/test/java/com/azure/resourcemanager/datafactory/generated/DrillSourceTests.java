// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DrillSource;

public final class DrillSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DrillSource model =
            BinaryData
                .fromString(
                    "{\"type\":\"DrillSource\",\"query\":\"dataxxbneiobub\",\"queryTimeout\":\"datayemppwkryz\",\"additionalColumns\":\"dataqpk\",\"sourceRetryCount\":\"datauv\",\"sourceRetryWait\":\"datai\",\"maxConcurrentConnections\":\"datazbhmyhjg\",\"disableMetricsCollection\":\"datayernckggwiquka\",\"\":{\"fttmjomuwl\":\"datakeolzizfbunzmx\",\"fzgpvdlx\":\"datavjwkpznsfbit\",\"clcuxzl\":\"datayo\",\"ggjeq\":\"datanwmgqc\"}}")
                .toObject(DrillSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DrillSource model =
            new DrillSource()
                .withSourceRetryCount("datauv")
                .withSourceRetryWait("datai")
                .withMaxConcurrentConnections("datazbhmyhjg")
                .withDisableMetricsCollection("datayernckggwiquka")
                .withQueryTimeout("datayemppwkryz")
                .withAdditionalColumns("dataqpk")
                .withQuery("dataxxbneiobub");
        model = BinaryData.fromObject(model).toObject(DrillSource.class);
    }
}
