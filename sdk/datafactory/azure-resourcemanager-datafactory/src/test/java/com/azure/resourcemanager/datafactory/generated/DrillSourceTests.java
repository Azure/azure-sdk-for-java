// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DrillSource;

public final class DrillSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DrillSource model = BinaryData.fromString(
            "{\"type\":\"DrillSource\",\"query\":\"dataaysxhfupvqjkqlaf\",\"queryTimeout\":\"dataywmcipuye\",\"additionalColumns\":\"datahd\",\"sourceRetryCount\":\"datagaifg\",\"sourceRetryWait\":\"datakgqwmp\",\"maxConcurrentConnections\":\"dataxpcxqcbnkxhcodh\",\"disableMetricsCollection\":\"databxllfwxdou\",\"\":{\"ofhk\":\"datapaqjahjxgedtmz\",\"rfassiii\":\"dataywtacgukierd\",\"ayyxgcgb\":\"datacmrgahs\",\"vqopxun\":\"dataieqonsbukznxd\"}}")
            .toObject(DrillSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DrillSource model = new DrillSource().withSourceRetryCount("datagaifg")
            .withSourceRetryWait("datakgqwmp")
            .withMaxConcurrentConnections("dataxpcxqcbnkxhcodh")
            .withDisableMetricsCollection("databxllfwxdou")
            .withQueryTimeout("dataywmcipuye")
            .withAdditionalColumns("datahd")
            .withQuery("dataaysxhfupvqjkqlaf");
        model = BinaryData.fromObject(model).toObject(DrillSource.class);
    }
}
