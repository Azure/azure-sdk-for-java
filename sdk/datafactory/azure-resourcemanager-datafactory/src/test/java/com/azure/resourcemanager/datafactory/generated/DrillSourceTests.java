// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DrillSource;

public final class DrillSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DrillSource model = BinaryData.fromString(
            "{\"type\":\"DrillSource\",\"query\":\"datacrnpscfke\",\"queryTimeout\":\"dataltxefamimgjuvjv\",\"additionalColumns\":\"dataec\",\"sourceRetryCount\":\"dataennledhoukfj\",\"sourceRetryWait\":\"datactdnnqokqeuzs\",\"maxConcurrentConnections\":\"datayj\",\"disableMetricsCollection\":\"dataywijnlpeczqb\",\"\":{\"vphr\":\"datakqydthfcwycm\",\"sqlekchjdh\":\"dataufnfovyl\",\"fwqtcownx\":\"dataske\"}}")
            .toObject(DrillSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DrillSource model
            = new DrillSource().withSourceRetryCount("dataennledhoukfj").withSourceRetryWait("datactdnnqokqeuzs")
                .withMaxConcurrentConnections("datayj").withDisableMetricsCollection("dataywijnlpeczqb")
                .withQueryTimeout("dataltxefamimgjuvjv").withAdditionalColumns("dataec").withQuery("datacrnpscfke");
        model = BinaryData.fromObject(model).toObject(DrillSource.class);
    }
}
