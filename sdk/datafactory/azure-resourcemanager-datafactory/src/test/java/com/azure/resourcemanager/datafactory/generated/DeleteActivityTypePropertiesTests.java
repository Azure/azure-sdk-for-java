// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.fluent.models.DeleteActivityTypeProperties;
import com.azure.resourcemanager.datafactory.models.DatasetReference;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.LogStorageSettings;
import com.azure.resourcemanager.datafactory.models.StoreReadSettings;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class DeleteActivityTypePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DeleteActivityTypeProperties model = BinaryData.fromString(
            "{\"recursive\":\"datauewrwcqrvtwv\",\"maxConcurrentConnections\":1816589211,\"enableLogging\":\"datarxhxqpm\",\"logStorageSettings\":{\"linkedServiceName\":{\"referenceName\":\"nmnscswadvbwewwd\",\"parameters\":{\"h\":\"dataehwmaxlppagk\",\"pllodowsjcvpvt\":\"dataeneq\"}},\"path\":\"datallivcymnpb\",\"logLevel\":\"dataalmhcatpwq\",\"enableReliableLogging\":\"datanajmwpeaoegg\",\"\":{\"lugrumoprnbo\":\"datapglhlw\",\"wykeeocpswqzpkod\":\"datavixamhitqrp\"}},\"dataset\":{\"referenceName\":\"quvf\",\"parameters\":{\"gwfqtqbn\":\"dataaozpcc\",\"wfdgeqzkpergzs\":\"datakmgydfmkz\"}},\"storeSettings\":{\"type\":\"StoreReadSettings\",\"maxConcurrentConnections\":\"datakankjkszudx\",\"disableMetricsCollection\":\"dataf\",\"\":{\"jfmvydjax\":\"dataoqbruymapjnfofxi\",\"vugb\":\"datastuhlwzcn\"}}}")
            .toObject(DeleteActivityTypeProperties.class);
        Assertions.assertEquals(1816589211, model.maxConcurrentConnections());
        Assertions.assertEquals("nmnscswadvbwewwd", model.logStorageSettings().linkedServiceName().referenceName());
        Assertions.assertEquals("quvf", model.dataset().referenceName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DeleteActivityTypeProperties model = new DeleteActivityTypeProperties().withRecursive("datauewrwcqrvtwv")
            .withMaxConcurrentConnections(1816589211)
            .withEnableLogging("datarxhxqpm")
            .withLogStorageSettings(new LogStorageSettings()
                .withLinkedServiceName(new LinkedServiceReference().withReferenceName("nmnscswadvbwewwd")
                    .withParameters(mapOf("h", "dataehwmaxlppagk", "pllodowsjcvpvt", "dataeneq")))
                .withPath("datallivcymnpb")
                .withLogLevel("dataalmhcatpwq")
                .withEnableReliableLogging("datanajmwpeaoegg")
                .withAdditionalProperties(mapOf()))
            .withDataset(new DatasetReference().withReferenceName("quvf")
                .withParameters(mapOf("gwfqtqbn", "dataaozpcc", "wfdgeqzkpergzs", "datakmgydfmkz")))
            .withStoreSettings(new StoreReadSettings().withMaxConcurrentConnections("datakankjkszudx")
                .withDisableMetricsCollection("dataf")
                .withAdditionalProperties(mapOf("type", "StoreReadSettings")));
        model = BinaryData.fromObject(model).toObject(DeleteActivityTypeProperties.class);
        Assertions.assertEquals(1816589211, model.maxConcurrentConnections());
        Assertions.assertEquals("nmnscswadvbwewwd", model.logStorageSettings().linkedServiceName().referenceName());
        Assertions.assertEquals("quvf", model.dataset().referenceName());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
