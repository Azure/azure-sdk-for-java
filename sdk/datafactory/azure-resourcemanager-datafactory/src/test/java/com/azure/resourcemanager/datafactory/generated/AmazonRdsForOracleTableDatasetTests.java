// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AmazonRdsForOracleTableDataset;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AmazonRdsForOracleTableDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AmazonRdsForOracleTableDataset model = BinaryData.fromString(
            "{\"type\":\"gmkokqoikx\",\"typeProperties\":{\"schema\":\"datawxcevdspt\",\"table\":\"dataffmwt\"},\"description\":\"fwlnmlkff\",\"structure\":\"datau\",\"schema\":\"datatbsliejdnccot\",\"linkedServiceName\":{\"referenceName\":\"likjiytehhxt\",\"parameters\":{\"rctysecpekhxdb\":\"datadwbymuqlngncrd\",\"zcvimmwcko\":\"datahq\"}},\"parameters\":{\"upqtzckj\":{\"type\":\"Int\",\"defaultValue\":\"datamtrtsv\"},\"nc\":{\"type\":\"Array\",\"defaultValue\":\"datakgnrfrjschj\"}},\"annotations\":[\"datahgt\",\"databgd\"],\"folder\":{\"name\":\"morzolxosg\"},\"\":{\"gvznjq\":\"datarxueqbmxq\",\"cxlngoufpi\":\"datawshesgcsqos\",\"mfxzspf\":\"datap\",\"zipplxg\":\"datavsl\"}}")
            .toObject(AmazonRdsForOracleTableDataset.class);
        Assertions.assertEquals("fwlnmlkff", model.description());
        Assertions.assertEquals("likjiytehhxt", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.INT, model.parameters().get("upqtzckj").type());
        Assertions.assertEquals("morzolxosg", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AmazonRdsForOracleTableDataset model = new AmazonRdsForOracleTableDataset().withDescription("fwlnmlkff")
            .withStructure("datau")
            .withSchema("datatbsliejdnccot")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("likjiytehhxt")
                .withParameters(mapOf("rctysecpekhxdb", "datadwbymuqlngncrd", "zcvimmwcko", "datahq")))
            .withParameters(mapOf("upqtzckj",
                new ParameterSpecification().withType(ParameterType.INT).withDefaultValue("datamtrtsv"), "nc",
                new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("datakgnrfrjschj")))
            .withAnnotations(Arrays.asList("datahgt", "databgd"))
            .withFolder(new DatasetFolder().withName("morzolxosg"))
            .withSchemaTypePropertiesSchema("datawxcevdspt")
            .withTable("dataffmwt");
        model = BinaryData.fromObject(model).toObject(AmazonRdsForOracleTableDataset.class);
        Assertions.assertEquals("fwlnmlkff", model.description());
        Assertions.assertEquals("likjiytehhxt", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.INT, model.parameters().get("upqtzckj").type());
        Assertions.assertEquals("morzolxosg", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
