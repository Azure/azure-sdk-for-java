// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AmazonRdsForOracleTableDataset;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AmazonRdsForOracleTableDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AmazonRdsForOracleTableDataset model =
            BinaryData
                .fromString(
                    "{\"type\":\"AmazonRdsForOracleTable\",\"typeProperties\":{\"schema\":\"dataipvwkauj\",\"table\":\"dataw\"},\"description\":\"ox\",\"structure\":\"datawofxxdplrel\",\"schema\":\"datavga\",\"linkedServiceName\":{\"referenceName\":\"cbtuxlbpxrhrfjen\",\"parameters\":{\"jixy\":\"datawefiktlhqashtos\",\"acfvvtdpcbpzf\":\"datasecigzzdwj\",\"fiwltkfysu\":\"datamcsaugbr\"}},\"parameters\":{\"hcvasyy\":{\"type\":\"Array\",\"defaultValue\":\"dataklx\"},\"ixyxxhwrlqomaqs\":{\"type\":\"Array\",\"defaultValue\":\"dataokjbmsr\"},\"zozsxag\":{\"type\":\"Bool\",\"defaultValue\":\"datapzzbrwn\"}},\"annotations\":[\"datak\"],\"folder\":{\"name\":\"ksybvrrbnhylsb\"},\"\":{\"stizsyqag\":\"datacydyllmxv\",\"dylkyhtr\":\"datallcbrva\",\"ogykugdlavsav\":\"dataqwfyybptmjjr\"}}")
                .toObject(AmazonRdsForOracleTableDataset.class);
        Assertions.assertEquals("ox", model.description());
        Assertions.assertEquals("cbtuxlbpxrhrfjen", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.ARRAY, model.parameters().get("hcvasyy").type());
        Assertions.assertEquals("ksybvrrbnhylsb", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AmazonRdsForOracleTableDataset model =
            new AmazonRdsForOracleTableDataset()
                .withDescription("ox")
                .withStructure("datawofxxdplrel")
                .withSchema("datavga")
                .withLinkedServiceName(
                    new LinkedServiceReference()
                        .withReferenceName("cbtuxlbpxrhrfjen")
                        .withParameters(
                            mapOf(
                                "jixy",
                                "datawefiktlhqashtos",
                                "acfvvtdpcbpzf",
                                "datasecigzzdwj",
                                "fiwltkfysu",
                                "datamcsaugbr")))
                .withParameters(
                    mapOf(
                        "hcvasyy",
                        new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("dataklx"),
                        "ixyxxhwrlqomaqs",
                        new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("dataokjbmsr"),
                        "zozsxag",
                        new ParameterSpecification().withType(ParameterType.BOOL).withDefaultValue("datapzzbrwn")))
                .withAnnotations(Arrays.asList("datak"))
                .withFolder(new DatasetFolder().withName("ksybvrrbnhylsb"))
                .withSchemaTypePropertiesSchema("dataipvwkauj")
                .withTable("dataw");
        model = BinaryData.fromObject(model).toObject(AmazonRdsForOracleTableDataset.class);
        Assertions.assertEquals("ox", model.description());
        Assertions.assertEquals("cbtuxlbpxrhrfjen", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.ARRAY, model.parameters().get("hcvasyy").type());
        Assertions.assertEquals("ksybvrrbnhylsb", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
