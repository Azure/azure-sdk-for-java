// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AmazonRdsForOracleTableDataset;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AmazonRdsForOracleTableDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AmazonRdsForOracleTableDataset model = BinaryData.fromString(
            "{\"type\":\"AmazonRdsForOracleTable\",\"typeProperties\":{\"schema\":\"datankfrwxo\",\"table\":\"dataydsn\"},\"description\":\"pchiypbfhmih\",\"structure\":\"datatqozewbrsrjzgkbr\",\"schema\":\"dataxboufqnnqbjx\",\"linkedServiceName\":{\"referenceName\":\"jwsreruk\",\"parameters\":{\"wkjxlaaced\":\"datadrizw\",\"lssybzbev\":\"datakq\"}},\"parameters\":{\"jy\":{\"type\":\"Int\",\"defaultValue\":\"datammkiqhypwtmzy\"},\"i\":{\"type\":\"String\",\"defaultValue\":\"datamzqlnaag\"}},\"annotations\":[\"datafqiywhxpsb\",\"datapialezay\"],\"folder\":{\"name\":\"zudegefxlieg\"},\"\":{\"zkah\":\"dataosmhssfnw\",\"cufthdgwuzrono\":\"dataecknfm\",\"odcikgxk\":\"datavhzfkdnwy\"}}")
            .toObject(AmazonRdsForOracleTableDataset.class);
        Assertions.assertEquals("pchiypbfhmih", model.description());
        Assertions.assertEquals("jwsreruk", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.INT, model.parameters().get("jy").type());
        Assertions.assertEquals("zudegefxlieg", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AmazonRdsForOracleTableDataset model = new AmazonRdsForOracleTableDataset().withDescription("pchiypbfhmih")
            .withStructure("datatqozewbrsrjzgkbr")
            .withSchema("dataxboufqnnqbjx")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("jwsreruk")
                .withParameters(mapOf("wkjxlaaced", "datadrizw", "lssybzbev", "datakq")))
            .withParameters(mapOf("jy",
                new ParameterSpecification().withType(ParameterType.INT).withDefaultValue("datammkiqhypwtmzy"), "i",
                new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("datamzqlnaag")))
            .withAnnotations(Arrays.asList("datafqiywhxpsb", "datapialezay"))
            .withFolder(new DatasetFolder().withName("zudegefxlieg"))
            .withSchemaTypePropertiesSchema("datankfrwxo")
            .withTable("dataydsn");
        model = BinaryData.fromObject(model).toObject(AmazonRdsForOracleTableDataset.class);
        Assertions.assertEquals("pchiypbfhmih", model.description());
        Assertions.assertEquals("jwsreruk", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.INT, model.parameters().get("jy").type());
        Assertions.assertEquals("zudegefxlieg", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
