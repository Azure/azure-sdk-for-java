// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.datafactory.DataFactoryManager;
import com.azure.resourcemanager.datafactory.models.GetSsisObjectMetadataRequest;
import com.azure.resourcemanager.datafactory.models.SsisObjectMetadataListResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IntegrationRuntimeObjectMetadatasGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"type\":\"Package\",\"id\":7014662316787087438,\"name\":\"zvvrzdbrpdveyxcd\",\"description\":\"l\"},{\"type\":\"Project\",\"id\":5690625794938036184,\"name\":\"mxzszhvjfijxtho\",\"description\":\"giipcvqyapnsnb\"},{\"type\":\"Package\",\"id\":1617738631876995390,\"name\":\"uswdwdau\",\"description\":\"gvs\"}],\"nextLink\":\"s\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DataFactoryManager manager = DataFactoryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SsisObjectMetadataListResponse response = manager.integrationRuntimeObjectMetadatas()
            .getWithResponse("haugenpipp", "preputusdewnk", "wyry",
                new GetSsisObjectMetadataRequest().withMetadataPath("hnoiqtvfr"), com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(7014662316787087438L, response.value().get(0).id());
        Assertions.assertEquals("zvvrzdbrpdveyxcd", response.value().get(0).name());
        Assertions.assertEquals("l", response.value().get(0).description());
        Assertions.assertEquals("s", response.nextLink());
    }
}
