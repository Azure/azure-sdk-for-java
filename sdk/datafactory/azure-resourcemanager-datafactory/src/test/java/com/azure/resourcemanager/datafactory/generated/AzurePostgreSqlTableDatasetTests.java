// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzurePostgreSqlTableDataset;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AzurePostgreSqlTableDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzurePostgreSqlTableDataset model = BinaryData.fromString(
            "{\"type\":\"AzurePostgreSqlTable\",\"typeProperties\":{\"tableName\":\"dataxoqwbztilqbzbwbg\",\"table\":\"datahbhfljeyodpiovnl\",\"schema\":\"datawyakzuafapwxsvde\"},\"description\":\"jiobnirgoextqdn\",\"structure\":\"datagntimz\",\"schema\":\"datapbmtbsetkodsq\",\"linkedServiceName\":{\"referenceName\":\"hedaakghcrzmm\",\"parameters\":{\"mfetqjisjmo\":\"datavdhdgdiwmlgs\",\"vt\":\"datazcaqfkakhgk\",\"ejqaw\":\"dataycvytv\"}},\"parameters\":{\"zbdypbbimhjbozv\":{\"type\":\"Bool\",\"defaultValue\":\"datafzxk\"},\"jcyuzlybqsci\":{\"type\":\"Object\",\"defaultValue\":\"datatclnh\"}},\"annotations\":[\"datalkv\",\"datakcafnwqhawv\"],\"folder\":{\"name\":\"iulby\"},\"\":{\"umwhmxpuck\":\"datajzrycwpb\"}}")
            .toObject(AzurePostgreSqlTableDataset.class);
        Assertions.assertEquals("jiobnirgoextqdn", model.description());
        Assertions.assertEquals("hedaakghcrzmm", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.BOOL, model.parameters().get("zbdypbbimhjbozv").type());
        Assertions.assertEquals("iulby", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzurePostgreSqlTableDataset model = new AzurePostgreSqlTableDataset().withDescription("jiobnirgoextqdn")
            .withStructure("datagntimz")
            .withSchema("datapbmtbsetkodsq")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("hedaakghcrzmm")
                .withParameters(
                    mapOf("mfetqjisjmo", "datavdhdgdiwmlgs", "vt", "datazcaqfkakhgk", "ejqaw", "dataycvytv")))
            .withParameters(mapOf("zbdypbbimhjbozv",
                new ParameterSpecification().withType(ParameterType.BOOL).withDefaultValue("datafzxk"), "jcyuzlybqsci",
                new ParameterSpecification().withType(ParameterType.OBJECT).withDefaultValue("datatclnh")))
            .withAnnotations(Arrays.asList("datalkv", "datakcafnwqhawv"))
            .withFolder(new DatasetFolder().withName("iulby"))
            .withTableName("dataxoqwbztilqbzbwbg")
            .withTable("datahbhfljeyodpiovnl")
            .withSchemaTypePropertiesSchema("datawyakzuafapwxsvde");
        model = BinaryData.fromObject(model).toObject(AzurePostgreSqlTableDataset.class);
        Assertions.assertEquals("jiobnirgoextqdn", model.description());
        Assertions.assertEquals("hedaakghcrzmm", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.BOOL, model.parameters().get("zbdypbbimhjbozv").type());
        Assertions.assertEquals("iulby", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
