// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SqlDWSource;
import com.azure.resourcemanager.datafactory.models.SqlPartitionSettings;

public final class SqlDWSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SqlDWSource model = BinaryData.fromString(
            "{\"type\":\"SqlDWSource\",\"sqlReaderQuery\":\"datafl\",\"sqlReaderStoredProcedureName\":\"datalpbawtpwnk\",\"storedProcedureParameters\":\"dataxl\",\"isolationLevel\":\"dataqnil\",\"partitionOption\":\"datafygvsfafcarf\",\"partitionSettings\":{\"partitionColumnName\":\"dataieqdwocufcsh\",\"partitionUpperBound\":\"dataclcnxfofwqd\",\"partitionLowerBound\":\"dataq\"},\"queryTimeout\":\"dataegilbkzctqbvntl\",\"additionalColumns\":\"datagj\",\"sourceRetryCount\":\"dataxqoydyislepdbsi\",\"sourceRetryWait\":\"datantsp\",\"maxConcurrentConnections\":\"dataumpyytbjbmjbmtx\",\"disableMetricsCollection\":\"datawflkgeqotvocj\",\"\":{\"wyvtrs\":\"datah\"}}")
            .toObject(SqlDWSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SqlDWSource model
            = new SqlDWSource().withSourceRetryCount("dataxqoydyislepdbsi").withSourceRetryWait("datantsp")
                .withMaxConcurrentConnections("dataumpyytbjbmjbmtx").withDisableMetricsCollection("datawflkgeqotvocj")
                .withQueryTimeout("dataegilbkzctqbvntl").withAdditionalColumns("datagj").withSqlReaderQuery("datafl")
                .withSqlReaderStoredProcedureName("datalpbawtpwnk").withStoredProcedureParameters("dataxl")
                .withIsolationLevel("dataqnil").withPartitionOption("datafygvsfafcarf")
                .withPartitionSettings(new SqlPartitionSettings().withPartitionColumnName("dataieqdwocufcsh")
                    .withPartitionUpperBound("dataclcnxfofwqd").withPartitionLowerBound("dataq"));
        model = BinaryData.fromObject(model).toObject(SqlDWSource.class);
    }
}
