// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SqlDWSource;
import com.azure.resourcemanager.datafactory.models.SqlPartitionSettings;

public final class SqlDWSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SqlDWSource model = BinaryData.fromString(
            "{\"type\":\"imbchi\",\"sqlReaderQuery\":\"datawzttkhyrwdsnpuoa\",\"sqlReaderStoredProcedureName\":\"datafpizybpjypqat\",\"storedProcedureParameters\":\"dataghw\",\"isolationLevel\":\"datawrbmxw\",\"partitionOption\":\"datakkffwf\",\"partitionSettings\":{\"partitionColumnName\":\"datae\",\"partitionUpperBound\":\"datamhsqyjsw\",\"partitionLowerBound\":\"datahafcoayuq\"},\"queryTimeout\":\"datajtsemnidbaykvlrs\",\"additionalColumns\":\"dataniocyo\",\"sourceRetryCount\":\"datawaffsjqn\",\"sourceRetryWait\":\"datacybugojzcarg\",\"maxConcurrentConnections\":\"datamaw\",\"disableMetricsCollection\":\"dataaagazryyjjwggpc\",\"\":{\"sj\":\"datawddobp\",\"gwkqnmhfml\":\"dataexedzmmcgqifhyhz\",\"qkdmpf\":\"dataorvhthxcrwe\",\"veibntwikm\":\"datacrcelsnjftnfdcj\"}}")
            .toObject(SqlDWSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SqlDWSource model = new SqlDWSource().withSourceRetryCount("datawaffsjqn")
            .withSourceRetryWait("datacybugojzcarg")
            .withMaxConcurrentConnections("datamaw")
            .withDisableMetricsCollection("dataaagazryyjjwggpc")
            .withQueryTimeout("datajtsemnidbaykvlrs")
            .withAdditionalColumns("dataniocyo")
            .withSqlReaderQuery("datawzttkhyrwdsnpuoa")
            .withSqlReaderStoredProcedureName("datafpizybpjypqat")
            .withStoredProcedureParameters("dataghw")
            .withIsolationLevel("datawrbmxw")
            .withPartitionOption("datakkffwf")
            .withPartitionSettings(new SqlPartitionSettings().withPartitionColumnName("datae")
                .withPartitionUpperBound("datamhsqyjsw")
                .withPartitionLowerBound("datahafcoayuq"));
        model = BinaryData.fromObject(model).toObject(SqlDWSource.class);
    }
}
