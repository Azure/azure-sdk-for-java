// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.QuickBooksObjectDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class QuickBooksObjectDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        QuickBooksObjectDataset model = BinaryData.fromString(
            "{\"type\":\"nxyksznfs\",\"typeProperties\":{\"tableName\":\"datalgdungaypxsazb\"},\"description\":\"prvgrandzkt\",\"structure\":\"datamlpczlqboomzg\",\"schema\":\"dataolhsfddkhxvevwxm\",\"linkedServiceName\":{\"referenceName\":\"bwax\",\"parameters\":{\"ld\":\"datagnpyhtuhalpq\",\"npnytkqjar\":\"dataaokex\"}},\"parameters\":{\"catrmzoujf\":{\"type\":\"Float\",\"defaultValue\":\"datagtz\"},\"vgyoggkztzttj\":{\"type\":\"Float\",\"defaultValue\":\"dataxuupczegqnaidvs\"},\"iz\":{\"type\":\"Object\",\"defaultValue\":\"datapbqgzkuobclobnaq\"}},\"annotations\":[\"dataq\",\"datayu\"],\"folder\":{\"name\":\"nhzjmkffeonmnv\"},\"\":{\"tdegcrunbkilxs\":\"datayiqywlpxmli\",\"iemorszffiukltr\":\"dataekbirhyvsyuv\",\"uoxcsd\":\"datagio\"}}")
            .toObject(QuickBooksObjectDataset.class);
        Assertions.assertEquals("prvgrandzkt", model.description());
        Assertions.assertEquals("bwax", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.FLOAT, model.parameters().get("catrmzoujf").type());
        Assertions.assertEquals("nhzjmkffeonmnv", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        QuickBooksObjectDataset model = new QuickBooksObjectDataset().withDescription("prvgrandzkt")
            .withStructure("datamlpczlqboomzg")
            .withSchema("dataolhsfddkhxvevwxm")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("bwax")
                .withParameters(mapOf("ld", "datagnpyhtuhalpq", "npnytkqjar", "dataaokex")))
            .withParameters(mapOf("catrmzoujf",
                new ParameterSpecification().withType(ParameterType.FLOAT).withDefaultValue("datagtz"), "vgyoggkztzttj",
                new ParameterSpecification().withType(ParameterType.FLOAT).withDefaultValue("dataxuupczegqnaidvs"),
                "iz",
                new ParameterSpecification().withType(ParameterType.OBJECT).withDefaultValue("datapbqgzkuobclobnaq")))
            .withAnnotations(Arrays.asList("dataq", "datayu"))
            .withFolder(new DatasetFolder().withName("nhzjmkffeonmnv"))
            .withTableName("datalgdungaypxsazb");
        model = BinaryData.fromObject(model).toObject(QuickBooksObjectDataset.class);
        Assertions.assertEquals("prvgrandzkt", model.description());
        Assertions.assertEquals("bwax", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.FLOAT, model.parameters().get("catrmzoujf").type());
        Assertions.assertEquals("nhzjmkffeonmnv", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
