// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.QuickBooksObjectDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class QuickBooksObjectDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        QuickBooksObjectDataset model = BinaryData.fromString(
            "{\"type\":\"QuickBooksObject\",\"typeProperties\":{\"tableName\":\"datazbjecdsysxnkuhv\"},\"description\":\"lsevzc\",\"structure\":\"datawnkkgdwqymxsfqea\",\"schema\":\"dataqe\",\"linkedServiceName\":{\"referenceName\":\"uvmsaq\",\"parameters\":{\"vzfznfgpb\":\"dataawgqrwuh\"}},\"parameters\":{\"lkqcln\":{\"type\":\"Object\",\"defaultValue\":\"dataympdjieas\"},\"ahvyeikbvqzr\":{\"type\":\"Bool\",\"defaultValue\":\"datargnoskkhbmjphlyy\"},\"ucpckxjnohafw\":{\"type\":\"String\",\"defaultValue\":\"databq\"},\"e\":{\"type\":\"Float\",\"defaultValue\":\"datagjlyxtugpea\"}},\"annotations\":[\"datawxfamtxccfegsavb\"],\"folder\":{\"name\":\"ucv\"},\"\":{\"mazkmqfw\":\"datadhoo\"}}")
            .toObject(QuickBooksObjectDataset.class);
        Assertions.assertEquals("lsevzc", model.description());
        Assertions.assertEquals("uvmsaq", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.OBJECT, model.parameters().get("lkqcln").type());
        Assertions.assertEquals("ucv", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        QuickBooksObjectDataset model = new QuickBooksObjectDataset().withDescription("lsevzc")
            .withStructure("datawnkkgdwqymxsfqea")
            .withSchema("dataqe")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("uvmsaq")
                .withParameters(mapOf("vzfznfgpb", "dataawgqrwuh")))
            .withParameters(mapOf("lkqcln",
                new ParameterSpecification().withType(ParameterType.OBJECT).withDefaultValue("dataympdjieas"),
                "ahvyeikbvqzr",
                new ParameterSpecification().withType(ParameterType.BOOL).withDefaultValue("datargnoskkhbmjphlyy"),
                "ucpckxjnohafw", new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("databq"),
                "e", new ParameterSpecification().withType(ParameterType.FLOAT).withDefaultValue("datagjlyxtugpea")))
            .withAnnotations(Arrays.asList("datawxfamtxccfegsavb"))
            .withFolder(new DatasetFolder().withName("ucv"))
            .withTableName("datazbjecdsysxnkuhv");
        model = BinaryData.fromObject(model).toObject(QuickBooksObjectDataset.class);
        Assertions.assertEquals("lsevzc", model.description());
        Assertions.assertEquals("uvmsaq", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.OBJECT, model.parameters().get("lkqcln").type());
        Assertions.assertEquals("ucv", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
