// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AmazonS3ReadSettings;

public final class AmazonS3ReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AmazonS3ReadSettings model = BinaryData.fromString(
            "{\"type\":\"AmazonS3ReadSettings\",\"recursive\":\"dataskqxgbigozrvlkla\",\"wildcardFolderPath\":\"datalysse\",\"wildcardFileName\":\"datappgsfj\",\"prefix\":\"datagmogmcjn\",\"fileListPath\":\"dataukbwypcvqfz\",\"enablePartitionDiscovery\":\"dataoxgerizflwl\",\"partitionRootPath\":\"datavopqpfcdpy\",\"deleteFilesAfterCompletion\":\"datamwpm\",\"modifiedDatetimeStart\":\"datagjjqsxf\",\"modifiedDatetimeEnd\":\"datavamvrejkvci\",\"maxConcurrentConnections\":\"databrdwfhhwt\",\"disableMetricsCollection\":\"datagefaycbvgotbjnx\",\"\":{\"ovflxluvmsgdi\":\"dataotxn\",\"xt\":\"dataup\"}}")
            .toObject(AmazonS3ReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AmazonS3ReadSettings model = new AmazonS3ReadSettings().withMaxConcurrentConnections("databrdwfhhwt")
            .withDisableMetricsCollection("datagefaycbvgotbjnx")
            .withRecursive("dataskqxgbigozrvlkla")
            .withWildcardFolderPath("datalysse")
            .withWildcardFileName("datappgsfj")
            .withPrefix("datagmogmcjn")
            .withFileListPath("dataukbwypcvqfz")
            .withEnablePartitionDiscovery("dataoxgerizflwl")
            .withPartitionRootPath("datavopqpfcdpy")
            .withDeleteFilesAfterCompletion("datamwpm")
            .withModifiedDatetimeStart("datagjjqsxf")
            .withModifiedDatetimeEnd("datavamvrejkvci");
        model = BinaryData.fromObject(model).toObject(AmazonS3ReadSettings.class);
    }
}
