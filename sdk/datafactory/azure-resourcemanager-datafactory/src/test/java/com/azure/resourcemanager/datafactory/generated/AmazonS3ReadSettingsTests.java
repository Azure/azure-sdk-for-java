// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AmazonS3ReadSettings;

public final class AmazonS3ReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AmazonS3ReadSettings model =
            BinaryData
                .fromString(
                    "{\"type\":\"AmazonS3ReadSettings\",\"recursive\":\"datawkqztqrnreyj\",\"wildcardFolderPath\":\"datanrweevtu\",\"wildcardFileName\":\"datadclugvs\",\"prefix\":\"datapsy\",\"fileListPath\":\"datagaaymfkexhiwmklj\",\"enablePartitionDiscovery\":\"datagxcewz\",\"partitionRootPath\":\"dataxz\",\"deleteFilesAfterCompletion\":\"datatcrccttedzyz\",\"modifiedDatetimeStart\":\"datasjuthsy\",\"modifiedDatetimeEnd\":\"datafilnc\",\"maxConcurrentConnections\":\"datankpxefmpzdwer\",\"disableMetricsCollection\":\"datakzxdlu\",\"\":{\"avpglntnsiuxyit\":\"dataptmndzbfo\",\"gomhenqnov\":\"datawsdxyzgrrllzx\"}}")
                .toObject(AmazonS3ReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AmazonS3ReadSettings model =
            new AmazonS3ReadSettings()
                .withMaxConcurrentConnections("datankpxefmpzdwer")
                .withDisableMetricsCollection("datakzxdlu")
                .withRecursive("datawkqztqrnreyj")
                .withWildcardFolderPath("datanrweevtu")
                .withWildcardFileName("datadclugvs")
                .withPrefix("datapsy")
                .withFileListPath("datagaaymfkexhiwmklj")
                .withEnablePartitionDiscovery("datagxcewz")
                .withPartitionRootPath("dataxz")
                .withDeleteFilesAfterCompletion("datatcrccttedzyz")
                .withModifiedDatetimeStart("datasjuthsy")
                .withModifiedDatetimeEnd("datafilnc");
        model = BinaryData.fromObject(model).toObject(AmazonS3ReadSettings.class);
    }
}
