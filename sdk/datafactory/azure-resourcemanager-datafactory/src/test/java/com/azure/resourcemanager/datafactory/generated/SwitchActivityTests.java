// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.Activity;
import com.azure.resourcemanager.datafactory.models.ActivityDependency;
import com.azure.resourcemanager.datafactory.models.ActivityOnInactiveMarkAs;
import com.azure.resourcemanager.datafactory.models.ActivityState;
import com.azure.resourcemanager.datafactory.models.DependencyCondition;
import com.azure.resourcemanager.datafactory.models.Expression;
import com.azure.resourcemanager.datafactory.models.SwitchActivity;
import com.azure.resourcemanager.datafactory.models.SwitchCase;
import com.azure.resourcemanager.datafactory.models.UserProperty;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SwitchActivityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SwitchActivity model =
            BinaryData
                .fromString(
                    "{\"type\":\"Switch\",\"typeProperties\":{\"on\":{\"value\":\"qfupoamc\"},\"cases\":[{\"value\":\"xkgrecnqipskpyn\",\"activities\":[{\"type\":\"Activity\",\"name\":\"cd\",\"description\":\"wutahl\",\"state\":\"Inactive\",\"onInactiveMarkAs\":\"Succeeded\",\"dependsOn\":[{\"activity\":\"scirgqjnfdehhke\",\"dependencyConditions\":[]}],\"userProperties\":[{\"name\":\"njifuucoj\",\"value\":\"dataikgbhkvhldnscxw\"},{\"name\":\"wsrdzmbz\",\"value\":\"datafzydwexoyfseehvm\"}],\"\":{\"hbadbbweaajgok\":\"databvdoufwkhipaod\",\"mhskhjjxesm\":\"datan\"}}]},{\"value\":\"hkcshyhgahmtevi\",\"activities\":[{\"type\":\"Activity\",\"name\":\"ijeppnpftwg\",\"description\":\"cccyiuehsne\",\"state\":\"Active\",\"onInactiveMarkAs\":\"Skipped\",\"dependsOn\":[{\"activity\":\"xnmqm\",\"dependencyConditions\":[]},{\"activity\":\"tvqrjutyfnmwmgha\",\"dependencyConditions\":[]},{\"activity\":\"edqakhcc\",\"dependencyConditions\":[]},{\"activity\":\"jntnlbsvt\",\"dependencyConditions\":[]}],\"userProperties\":[{\"name\":\"dvzafpvwrbqbyx\",\"value\":\"dataupqkbb\"},{\"name\":\"mhwtmeqtsf\",\"value\":\"datajpv\"},{\"name\":\"wbxlgpepxbjjnxd\",\"value\":\"datanegkltlpbbepmmi\"},{\"name\":\"mvada\",\"value\":\"datauev\"}],\"\":{\"hgfojdbov\":\"datadzgngnuuz\",\"vqmxzdi\":\"datamnelqlqn\",\"nrpqsj\":\"datan\"}}]},{\"value\":\"ncyksblreq\",\"activities\":[{\"type\":\"Activity\",\"name\":\"k\",\"description\":\"biylkfnedxdemc\",\"state\":\"Active\",\"onInactiveMarkAs\":\"Skipped\",\"dependsOn\":[{\"activity\":\"zyrugstbzpozql\",\"dependencyConditions\":[]},{\"activity\":\"uau\",\"dependencyConditions\":[]},{\"activity\":\"kttlpwxola\",\"dependencyConditions\":[]},{\"activity\":\"evwwblqd\",\"dependencyConditions\":[]}],\"userProperties\":[{\"name\":\"egu\",\"value\":\"datanteucaojjbb\"},{\"name\":\"ftcnzokdademqp\",\"value\":\"dataxekmdkbtmupm\"},{\"name\":\"ay\",\"value\":\"datajocsq\"},{\"name\":\"ibu\",\"value\":\"datalppnevujkzb\"}],\"\":{\"myfajygnh\":\"datavwkdgsr\",\"gpmjfwmtxfau\":\"dataoeoxsobljzodcx\"}},{\"type\":\"Activity\",\"name\":\"ihqs\",\"description\":\"tqaoacnl\",\"state\":\"Inactive\",\"onInactiveMarkAs\":\"Skipped\",\"dependsOn\":[{\"activity\":\"vgpidrtbcxiwfkd\",\"dependencyConditions\":[]},{\"activity\":\"lvbwueytxlujvm\",\"dependencyConditions\":[]},{\"activity\":\"ooagaqnekwen\",\"dependencyConditions\":[]}],\"userProperties\":[{\"name\":\"iqlnwfbjo\",\"value\":\"dataxsmhvjogvq\"},{\"name\":\"cpsufcdgc\",\"value\":\"datafxsvxkcyhkh\"},{\"name\":\"qwvwfombcgr\",\"value\":\"datalenrcovqty\"}],\"\":{\"gzslnnc\":\"datactkrgagxzmrxx\",\"vni\":\"datawrhoma\"}},{\"type\":\"Activity\",\"name\":\"up\",\"description\":\"neoqyetfxyx\",\"state\":\"Inactive\",\"onInactiveMarkAs\":\"Skipped\",\"dependsOn\":[{\"activity\":\"nqcuprlrzfafek\",\"dependencyConditions\":[]},{\"activity\":\"ueovsqmzeel\",\"dependencyConditions\":[]}],\"userProperties\":[{\"name\":\"v\",\"value\":\"datay\"}],\"\":{\"mccf\":\"dataf\",\"y\":\"datak\",\"vatnfdhyrhfvaap\":\"datazmnamesdcmg\"}}]}],\"defaultActivities\":[{\"type\":\"Activity\",\"name\":\"yufhcfeggyl\",\"description\":\"nbdvazqsbrqspvl\",\"state\":\"Active\",\"onInactiveMarkAs\":\"Succeeded\",\"dependsOn\":[{\"activity\":\"xvl\",\"dependencyConditions\":[\"Completed\"],\"\":{\"weoobb\":\"datacinjcrayoaskull\",\"wtzxq\":\"datagymbzaw\",\"pwvhiaxkm\":\"dataqzplzyjktc\",\"fhlwgka\":\"dataitczuscqobujfx\"}},{\"activity\":\"xp\",\"dependencyConditions\":[\"Skipped\",\"Skipped\"],\"\":{\"ccbduwsw\":\"dataccmjo\",\"gmewdmlk\":\"databqycubmeih\",\"pts\":\"datawchslb\"}},{\"activity\":\"qcwaobuimfdaq\",\"dependencyConditions\":[\"Succeeded\",\"Failed\"],\"\":{\"ablknqnqqcgiyff\":\"datamegmazdg\"}}],\"userProperties\":[{\"name\":\"g\",\"value\":\"datawlpopjlg\"}],\"\":{\"vaz\":\"datawqx\",\"skpgnagncguqfnh\":\"dataoxmxtcnmo\"}}]},\"name\":\"mvedjwdezmtpbe\",\"description\":\"ucxbudajfl\",\"state\":\"Inactive\",\"onInactiveMarkAs\":\"Failed\",\"dependsOn\":[{\"activity\":\"nrgm\",\"dependencyConditions\":[\"Failed\",\"Succeeded\",\"Skipped\"],\"\":{\"fvk\":\"datalhfmkllxoa\",\"thqzvfzxseqscoy\":\"datahf\",\"isbhkeskgnj\":\"dataxbaw\",\"ytdmrqravpxwze\":\"dataavoqcyl\"}}],\"userProperties\":[{\"name\":\"gcocbo\",\"value\":\"datamsj\"},{\"name\":\"bzvsugentr\",\"value\":\"datazbw\"},{\"name\":\"ivgdc\",\"value\":\"datarbswbxizmxvd\"},{\"name\":\"kmwyikoanep\",\"value\":\"dataknyvnbzglia\"}],\"\":{\"sg\":\"datajdhbqwcu\",\"kzwijqxwmjl\":\"dataefna\",\"fsqruyqaqemozj\":\"dataosqhnwbqc\",\"pclmkeswtkhfcnce\":\"datahixcivjokauj\"}}")
                .toObject(SwitchActivity.class);
        Assertions.assertEquals("mvedjwdezmtpbe", model.name());
        Assertions.assertEquals("ucxbudajfl", model.description());
        Assertions.assertEquals(ActivityState.INACTIVE, model.state());
        Assertions.assertEquals(ActivityOnInactiveMarkAs.FAILED, model.onInactiveMarkAs());
        Assertions.assertEquals("nrgm", model.dependsOn().get(0).activity());
        Assertions.assertEquals(DependencyCondition.FAILED, model.dependsOn().get(0).dependencyConditions().get(0));
        Assertions.assertEquals("gcocbo", model.userProperties().get(0).name());
        Assertions.assertEquals("qfupoamc", model.on().value());
        Assertions.assertEquals("xkgrecnqipskpyn", model.cases().get(0).value());
        Assertions.assertEquals("cd", model.cases().get(0).activities().get(0).name());
        Assertions.assertEquals("wutahl", model.cases().get(0).activities().get(0).description());
        Assertions.assertEquals(ActivityState.INACTIVE, model.cases().get(0).activities().get(0).state());
        Assertions
            .assertEquals(
                ActivityOnInactiveMarkAs.SUCCEEDED, model.cases().get(0).activities().get(0).onInactiveMarkAs());
        Assertions
            .assertEquals("scirgqjnfdehhke", model.cases().get(0).activities().get(0).dependsOn().get(0).activity());
        Assertions.assertEquals("njifuucoj", model.cases().get(0).activities().get(0).userProperties().get(0).name());
        Assertions.assertEquals("yufhcfeggyl", model.defaultActivities().get(0).name());
        Assertions.assertEquals("nbdvazqsbrqspvl", model.defaultActivities().get(0).description());
        Assertions.assertEquals(ActivityState.ACTIVE, model.defaultActivities().get(0).state());
        Assertions
            .assertEquals(ActivityOnInactiveMarkAs.SUCCEEDED, model.defaultActivities().get(0).onInactiveMarkAs());
        Assertions.assertEquals("xvl", model.defaultActivities().get(0).dependsOn().get(0).activity());
        Assertions
            .assertEquals(
                DependencyCondition.COMPLETED,
                model.defaultActivities().get(0).dependsOn().get(0).dependencyConditions().get(0));
        Assertions.assertEquals("g", model.defaultActivities().get(0).userProperties().get(0).name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SwitchActivity model =
            new SwitchActivity()
                .withName("mvedjwdezmtpbe")
                .withDescription("ucxbudajfl")
                .withState(ActivityState.INACTIVE)
                .withOnInactiveMarkAs(ActivityOnInactiveMarkAs.FAILED)
                .withDependsOn(
                    Arrays
                        .asList(
                            new ActivityDependency()
                                .withActivity("nrgm")
                                .withDependencyConditions(
                                    Arrays
                                        .asList(
                                            DependencyCondition.FAILED,
                                            DependencyCondition.SUCCEEDED,
                                            DependencyCondition.SKIPPED))
                                .withAdditionalProperties(mapOf())))
                .withUserProperties(
                    Arrays
                        .asList(
                            new UserProperty().withName("gcocbo").withValue("datamsj"),
                            new UserProperty().withName("bzvsugentr").withValue("datazbw"),
                            new UserProperty().withName("ivgdc").withValue("datarbswbxizmxvd"),
                            new UserProperty().withName("kmwyikoanep").withValue("dataknyvnbzglia")))
                .withOn(new Expression().withValue("qfupoamc"))
                .withCases(
                    Arrays
                        .asList(
                            new SwitchCase()
                                .withValue("xkgrecnqipskpyn")
                                .withActivities(
                                    Arrays
                                        .asList(
                                            new Activity()
                                                .withName("cd")
                                                .withDescription("wutahl")
                                                .withState(ActivityState.INACTIVE)
                                                .withOnInactiveMarkAs(ActivityOnInactiveMarkAs.SUCCEEDED)
                                                .withDependsOn(
                                                    Arrays
                                                        .asList(
                                                            new ActivityDependency()
                                                                .withActivity("scirgqjnfdehhke")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf())))
                                                .withUserProperties(
                                                    Arrays
                                                        .asList(
                                                            new UserProperty()
                                                                .withName("njifuucoj")
                                                                .withValue("dataikgbhkvhldnscxw"),
                                                            new UserProperty()
                                                                .withName("wsrdzmbz")
                                                                .withValue("datafzydwexoyfseehvm")))
                                                .withAdditionalProperties(mapOf("type", "Activity")))),
                            new SwitchCase()
                                .withValue("hkcshyhgahmtevi")
                                .withActivities(
                                    Arrays
                                        .asList(
                                            new Activity()
                                                .withName("ijeppnpftwg")
                                                .withDescription("cccyiuehsne")
                                                .withState(ActivityState.ACTIVE)
                                                .withOnInactiveMarkAs(ActivityOnInactiveMarkAs.SKIPPED)
                                                .withDependsOn(
                                                    Arrays
                                                        .asList(
                                                            new ActivityDependency()
                                                                .withActivity("xnmqm")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf()),
                                                            new ActivityDependency()
                                                                .withActivity("tvqrjutyfnmwmgha")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf()),
                                                            new ActivityDependency()
                                                                .withActivity("edqakhcc")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf()),
                                                            new ActivityDependency()
                                                                .withActivity("jntnlbsvt")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf())))
                                                .withUserProperties(
                                                    Arrays
                                                        .asList(
                                                            new UserProperty()
                                                                .withName("dvzafpvwrbqbyx")
                                                                .withValue("dataupqkbb"),
                                                            new UserProperty()
                                                                .withName("mhwtmeqtsf")
                                                                .withValue("datajpv"),
                                                            new UserProperty()
                                                                .withName("wbxlgpepxbjjnxd")
                                                                .withValue("datanegkltlpbbepmmi"),
                                                            new UserProperty().withName("mvada").withValue("datauev")))
                                                .withAdditionalProperties(mapOf("type", "Activity")))),
                            new SwitchCase()
                                .withValue("ncyksblreq")
                                .withActivities(
                                    Arrays
                                        .asList(
                                            new Activity()
                                                .withName("k")
                                                .withDescription("biylkfnedxdemc")
                                                .withState(ActivityState.ACTIVE)
                                                .withOnInactiveMarkAs(ActivityOnInactiveMarkAs.SKIPPED)
                                                .withDependsOn(
                                                    Arrays
                                                        .asList(
                                                            new ActivityDependency()
                                                                .withActivity("zyrugstbzpozql")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf()),
                                                            new ActivityDependency()
                                                                .withActivity("uau")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf()),
                                                            new ActivityDependency()
                                                                .withActivity("kttlpwxola")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf()),
                                                            new ActivityDependency()
                                                                .withActivity("evwwblqd")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf())))
                                                .withUserProperties(
                                                    Arrays
                                                        .asList(
                                                            new UserProperty()
                                                                .withName("egu")
                                                                .withValue("datanteucaojjbb"),
                                                            new UserProperty()
                                                                .withName("ftcnzokdademqp")
                                                                .withValue("dataxekmdkbtmupm"),
                                                            new UserProperty().withName("ay").withValue("datajocsq"),
                                                            new UserProperty()
                                                                .withName("ibu")
                                                                .withValue("datalppnevujkzb")))
                                                .withAdditionalProperties(mapOf("type", "Activity")),
                                            new Activity()
                                                .withName("ihqs")
                                                .withDescription("tqaoacnl")
                                                .withState(ActivityState.INACTIVE)
                                                .withOnInactiveMarkAs(ActivityOnInactiveMarkAs.SKIPPED)
                                                .withDependsOn(
                                                    Arrays
                                                        .asList(
                                                            new ActivityDependency()
                                                                .withActivity("vgpidrtbcxiwfkd")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf()),
                                                            new ActivityDependency()
                                                                .withActivity("lvbwueytxlujvm")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf()),
                                                            new ActivityDependency()
                                                                .withActivity("ooagaqnekwen")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf())))
                                                .withUserProperties(
                                                    Arrays
                                                        .asList(
                                                            new UserProperty()
                                                                .withName("iqlnwfbjo")
                                                                .withValue("dataxsmhvjogvq"),
                                                            new UserProperty()
                                                                .withName("cpsufcdgc")
                                                                .withValue("datafxsvxkcyhkh"),
                                                            new UserProperty()
                                                                .withName("qwvwfombcgr")
                                                                .withValue("datalenrcovqty")))
                                                .withAdditionalProperties(mapOf("type", "Activity")),
                                            new Activity()
                                                .withName("up")
                                                .withDescription("neoqyetfxyx")
                                                .withState(ActivityState.INACTIVE)
                                                .withOnInactiveMarkAs(ActivityOnInactiveMarkAs.SKIPPED)
                                                .withDependsOn(
                                                    Arrays
                                                        .asList(
                                                            new ActivityDependency()
                                                                .withActivity("nqcuprlrzfafek")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf()),
                                                            new ActivityDependency()
                                                                .withActivity("ueovsqmzeel")
                                                                .withDependencyConditions(Arrays.asList())
                                                                .withAdditionalProperties(mapOf())))
                                                .withUserProperties(
                                                    Arrays.asList(new UserProperty().withName("v").withValue("datay")))
                                                .withAdditionalProperties(mapOf("type", "Activity"))))))
                .withDefaultActivities(
                    Arrays
                        .asList(
                            new Activity()
                                .withName("yufhcfeggyl")
                                .withDescription("nbdvazqsbrqspvl")
                                .withState(ActivityState.ACTIVE)
                                .withOnInactiveMarkAs(ActivityOnInactiveMarkAs.SUCCEEDED)
                                .withDependsOn(
                                    Arrays
                                        .asList(
                                            new ActivityDependency()
                                                .withActivity("xvl")
                                                .withDependencyConditions(Arrays.asList(DependencyCondition.COMPLETED))
                                                .withAdditionalProperties(mapOf()),
                                            new ActivityDependency()
                                                .withActivity("xp")
                                                .withDependencyConditions(
                                                    Arrays
                                                        .asList(
                                                            DependencyCondition.SKIPPED, DependencyCondition.SKIPPED))
                                                .withAdditionalProperties(mapOf()),
                                            new ActivityDependency()
                                                .withActivity("qcwaobuimfdaq")
                                                .withDependencyConditions(
                                                    Arrays
                                                        .asList(
                                                            DependencyCondition.SUCCEEDED, DependencyCondition.FAILED))
                                                .withAdditionalProperties(mapOf())))
                                .withUserProperties(
                                    Arrays.asList(new UserProperty().withName("g").withValue("datawlpopjlg")))
                                .withAdditionalProperties(mapOf("type", "Activity"))));
        model = BinaryData.fromObject(model).toObject(SwitchActivity.class);
        Assertions.assertEquals("mvedjwdezmtpbe", model.name());
        Assertions.assertEquals("ucxbudajfl", model.description());
        Assertions.assertEquals(ActivityState.INACTIVE, model.state());
        Assertions.assertEquals(ActivityOnInactiveMarkAs.FAILED, model.onInactiveMarkAs());
        Assertions.assertEquals("nrgm", model.dependsOn().get(0).activity());
        Assertions.assertEquals(DependencyCondition.FAILED, model.dependsOn().get(0).dependencyConditions().get(0));
        Assertions.assertEquals("gcocbo", model.userProperties().get(0).name());
        Assertions.assertEquals("qfupoamc", model.on().value());
        Assertions.assertEquals("xkgrecnqipskpyn", model.cases().get(0).value());
        Assertions.assertEquals("cd", model.cases().get(0).activities().get(0).name());
        Assertions.assertEquals("wutahl", model.cases().get(0).activities().get(0).description());
        Assertions.assertEquals(ActivityState.INACTIVE, model.cases().get(0).activities().get(0).state());
        Assertions
            .assertEquals(
                ActivityOnInactiveMarkAs.SUCCEEDED, model.cases().get(0).activities().get(0).onInactiveMarkAs());
        Assertions
            .assertEquals("scirgqjnfdehhke", model.cases().get(0).activities().get(0).dependsOn().get(0).activity());
        Assertions.assertEquals("njifuucoj", model.cases().get(0).activities().get(0).userProperties().get(0).name());
        Assertions.assertEquals("yufhcfeggyl", model.defaultActivities().get(0).name());
        Assertions.assertEquals("nbdvazqsbrqspvl", model.defaultActivities().get(0).description());
        Assertions.assertEquals(ActivityState.ACTIVE, model.defaultActivities().get(0).state());
        Assertions
            .assertEquals(ActivityOnInactiveMarkAs.SUCCEEDED, model.defaultActivities().get(0).onInactiveMarkAs());
        Assertions.assertEquals("xvl", model.defaultActivities().get(0).dependsOn().get(0).activity());
        Assertions
            .assertEquals(
                DependencyCondition.COMPLETED,
                model.defaultActivities().get(0).dependsOn().get(0).dependencyConditions().get(0));
        Assertions.assertEquals("g", model.defaultActivities().get(0).userProperties().get(0).name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
