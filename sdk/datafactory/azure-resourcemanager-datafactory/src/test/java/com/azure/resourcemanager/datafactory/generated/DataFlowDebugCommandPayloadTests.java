// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DataFlowDebugCommandPayload;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DataFlowDebugCommandPayloadTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataFlowDebugCommandPayload model = BinaryData.fromString(
            "{\"streamName\":\"pvwgfstmhqykizmd\",\"rowLimits\":930902009,\"columns\":[\"fcluqvo\",\"mycjimryvwgcwwp\"],\"expression\":\"zgwe\"}")
            .toObject(DataFlowDebugCommandPayload.class);
        Assertions.assertEquals("pvwgfstmhqykizmd", model.streamName());
        Assertions.assertEquals(930902009, model.rowLimits());
        Assertions.assertEquals("fcluqvo", model.columns().get(0));
        Assertions.assertEquals("zgwe", model.expression());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataFlowDebugCommandPayload model = new DataFlowDebugCommandPayload().withStreamName("pvwgfstmhqykizmd")
            .withRowLimits(930902009)
            .withColumns(Arrays.asList("fcluqvo", "mycjimryvwgcwwp"))
            .withExpression("zgwe");
        model = BinaryData.fromObject(model).toObject(DataFlowDebugCommandPayload.class);
        Assertions.assertEquals("pvwgfstmhqykizmd", model.streamName());
        Assertions.assertEquals(930902009, model.rowLimits());
        Assertions.assertEquals("fcluqvo", model.columns().get(0));
        Assertions.assertEquals("zgwe", model.expression());
    }
}
