// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.fluent.models.PowerQueryTypeProperties;
import com.azure.resourcemanager.datafactory.models.DataFlowReference;
import com.azure.resourcemanager.datafactory.models.DataFlowReferenceType;
import com.azure.resourcemanager.datafactory.models.DatasetReference;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.PowerQuerySource;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class PowerQueryTypePropertiesTests {
    @Test
    public void testDeserialize() {
        PowerQueryTypeProperties model =
            BinaryData
                .fromString(
                    "{\"sources\":[{\"script\":\"ynenlsvxeizz\",\"schemaLinkedService\":{\"referenceName\":\"klnsrmffey\",\"parameters\":{}},\"name\":\"ckt\",\"description\":\"ymerteeammxq\",\"dataset\":{\"referenceName\":\"kk\",\"parameters\":{}},\"linkedService\":{\"referenceName\":\"drtkgdoj\",\"parameters\":{}},\"flowlet\":{\"type\":\"DataFlowReference\",\"referenceName\":\"a\",\"parameters\":{},\"\":{}}},{\"script\":\"eesvecu\",\"schemaLinkedService\":{\"referenceName\":\"pxtxsuwp\",\"parameters\":{}},\"name\":\"ujwsawddjibabxvi\",\"description\":\"tvtzeexavoxtfg\",\"dataset\":{\"referenceName\":\"cd\",\"parameters\":{}},\"linkedService\":{\"referenceName\":\"bwpypqtgsfjacb\",\"parameters\":{}},\"flowlet\":{\"type\":\"DataFlowReference\",\"referenceName\":\"xudb\",\"parameters\":{},\"\":{}}},{\"script\":\"tnsi\",\"schemaLinkedService\":{\"referenceName\":\"dhzmmesckdlp\",\"parameters\":{}},\"name\":\"zrcxfailcfxwmdbo\",\"description\":\"fgsftufqob\",\"dataset\":{\"referenceName\":\"lnacgcc\",\"parameters\":{}},\"linkedService\":{\"referenceName\":\"hxkizvytnrzv\",\"parameters\":{}},\"flowlet\":{\"type\":\"DataFlowReference\",\"referenceName\":\"aaeranokqgukk\",\"parameters\":{},\"\":{}}},{\"script\":\"roylaxxu\",\"schemaLinkedService\":{\"referenceName\":\"disdosfjbjsvgj\",\"parameters\":{}},\"name\":\"hryvy\",\"description\":\"t\",\"dataset\":{\"referenceName\":\"lxgccknfnwmbtm\",\"parameters\":{}},\"linkedService\":{\"referenceName\":\"vjdhttzaefedxih\",\"parameters\":{}},\"flowlet\":{\"type\":\"DataFlowReference\",\"referenceName\":\"hk\",\"parameters\":{},\"\":{}}}],\"script\":\"qnsdfzpbgtgky\",\"documentLocale\":\"dgh\"}")
                .toObject(PowerQueryTypeProperties.class);
        Assertions.assertEquals("ckt", model.sources().get(0).name());
        Assertions.assertEquals("ymerteeammxq", model.sources().get(0).description());
        Assertions.assertEquals("kk", model.sources().get(0).dataset().referenceName());
        Assertions.assertEquals("drtkgdoj", model.sources().get(0).linkedService().referenceName());
        Assertions.assertEquals(DataFlowReferenceType.DATA_FLOW_REFERENCE, model.sources().get(0).flowlet().type());
        Assertions.assertEquals("a", model.sources().get(0).flowlet().referenceName());
        Assertions.assertEquals("klnsrmffey", model.sources().get(0).schemaLinkedService().referenceName());
        Assertions.assertEquals("ynenlsvxeizz", model.sources().get(0).script());
        Assertions.assertEquals("qnsdfzpbgtgky", model.script());
        Assertions.assertEquals("dgh", model.documentLocale());
    }

    @Test
    public void testSerialize() {
        PowerQueryTypeProperties model =
            new PowerQueryTypeProperties()
                .withSources(
                    Arrays
                        .asList(
                            new PowerQuerySource()
                                .withName("ckt")
                                .withDescription("ymerteeammxq")
                                .withDataset(new DatasetReference().withReferenceName("kk").withParameters(mapOf()))
                                .withLinkedService(
                                    new LinkedServiceReference().withReferenceName("drtkgdoj").withParameters(mapOf()))
                                .withFlowlet(
                                    new DataFlowReference()
                                        .withType(DataFlowReferenceType.DATA_FLOW_REFERENCE)
                                        .withReferenceName("a")
                                        .withParameters(mapOf())
                                        .withAdditionalProperties(mapOf()))
                                .withSchemaLinkedService(
                                    new LinkedServiceReference()
                                        .withReferenceName("klnsrmffey")
                                        .withParameters(mapOf()))
                                .withScript("ynenlsvxeizz"),
                            new PowerQuerySource()
                                .withName("ujwsawddjibabxvi")
                                .withDescription("tvtzeexavoxtfg")
                                .withDataset(new DatasetReference().withReferenceName("cd").withParameters(mapOf()))
                                .withLinkedService(
                                    new LinkedServiceReference()
                                        .withReferenceName("bwpypqtgsfjacb")
                                        .withParameters(mapOf()))
                                .withFlowlet(
                                    new DataFlowReference()
                                        .withType(DataFlowReferenceType.DATA_FLOW_REFERENCE)
                                        .withReferenceName("xudb")
                                        .withParameters(mapOf())
                                        .withAdditionalProperties(mapOf()))
                                .withSchemaLinkedService(
                                    new LinkedServiceReference().withReferenceName("pxtxsuwp").withParameters(mapOf()))
                                .withScript("eesvecu"),
                            new PowerQuerySource()
                                .withName("zrcxfailcfxwmdbo")
                                .withDescription("fgsftufqob")
                                .withDataset(
                                    new DatasetReference().withReferenceName("lnacgcc").withParameters(mapOf()))
                                .withLinkedService(
                                    new LinkedServiceReference()
                                        .withReferenceName("hxkizvytnrzv")
                                        .withParameters(mapOf()))
                                .withFlowlet(
                                    new DataFlowReference()
                                        .withType(DataFlowReferenceType.DATA_FLOW_REFERENCE)
                                        .withReferenceName("aaeranokqgukk")
                                        .withParameters(mapOf())
                                        .withAdditionalProperties(mapOf()))
                                .withSchemaLinkedService(
                                    new LinkedServiceReference()
                                        .withReferenceName("dhzmmesckdlp")
                                        .withParameters(mapOf()))
                                .withScript("tnsi"),
                            new PowerQuerySource()
                                .withName("hryvy")
                                .withDescription("t")
                                .withDataset(
                                    new DatasetReference().withReferenceName("lxgccknfnwmbtm").withParameters(mapOf()))
                                .withLinkedService(
                                    new LinkedServiceReference()
                                        .withReferenceName("vjdhttzaefedxih")
                                        .withParameters(mapOf()))
                                .withFlowlet(
                                    new DataFlowReference()
                                        .withType(DataFlowReferenceType.DATA_FLOW_REFERENCE)
                                        .withReferenceName("hk")
                                        .withParameters(mapOf())
                                        .withAdditionalProperties(mapOf()))
                                .withSchemaLinkedService(
                                    new LinkedServiceReference()
                                        .withReferenceName("disdosfjbjsvgj")
                                        .withParameters(mapOf()))
                                .withScript("roylaxxu")))
                .withScript("qnsdfzpbgtgky")
                .withDocumentLocale("dgh");
        model = BinaryData.fromObject(model).toObject(PowerQueryTypeProperties.class);
        Assertions.assertEquals("ckt", model.sources().get(0).name());
        Assertions.assertEquals("ymerteeammxq", model.sources().get(0).description());
        Assertions.assertEquals("kk", model.sources().get(0).dataset().referenceName());
        Assertions.assertEquals("drtkgdoj", model.sources().get(0).linkedService().referenceName());
        Assertions.assertEquals(DataFlowReferenceType.DATA_FLOW_REFERENCE, model.sources().get(0).flowlet().type());
        Assertions.assertEquals("a", model.sources().get(0).flowlet().referenceName());
        Assertions.assertEquals("klnsrmffey", model.sources().get(0).schemaLinkedService().referenceName());
        Assertions.assertEquals("ynenlsvxeizz", model.sources().get(0).script());
        Assertions.assertEquals("qnsdfzpbgtgky", model.script());
        Assertions.assertEquals("dgh", model.documentLocale());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
