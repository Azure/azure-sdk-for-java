// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.fluent.models.PrivateEndpointConnectionResourceInner;
import com.azure.resourcemanager.datafactory.models.PrivateEndpointConnectionListResponse;
import com.azure.resourcemanager.datafactory.models.RemotePrivateEndpointConnection;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class PrivateEndpointConnectionListResponseTests {
    @Test
    public void testDeserialize() {
        PrivateEndpointConnectionListResponse model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"provisioningState\":\"ofbshr\"},\"name\":\"uswdv\",\"type\":\"ybycnunvj\",\"etag\":\"tkfa\",\"id\":\"opqgikyzirtxdyux\"}],\"nextLink\":\"jntpsewgioilqu\"}")
                .toObject(PrivateEndpointConnectionListResponse.class);
        Assertions.assertEquals("opqgikyzirtxdyux", model.value().get(0).id());
        Assertions.assertEquals("jntpsewgioilqu", model.nextLink());
    }

    @Test
    public void testSerialize() {
        PrivateEndpointConnectionListResponse model =
            new PrivateEndpointConnectionListResponse()
                .withValue(
                    Arrays
                        .asList(
                            new PrivateEndpointConnectionResourceInner()
                                .withId("opqgikyzirtxdyux")
                                .withProperties(new RemotePrivateEndpointConnection())))
                .withNextLink("jntpsewgioilqu");
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionListResponse.class);
        Assertions.assertEquals("opqgikyzirtxdyux", model.value().get(0).id());
        Assertions.assertEquals("jntpsewgioilqu", model.nextLink());
    }
}
