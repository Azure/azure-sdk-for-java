// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.fluent.models.PrivateEndpointConnectionResourceInner;
import com.azure.resourcemanager.datafactory.models.ArmIdWrapper;
import com.azure.resourcemanager.datafactory.models.PrivateEndpointConnectionListResponse;
import com.azure.resourcemanager.datafactory.models.PrivateLinkConnectionState;
import com.azure.resourcemanager.datafactory.models.RemotePrivateEndpointConnection;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionListResponseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionListResponse model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningState\":\"dikdfrdbi\",\"privateEndpoint\":{\"id\":\"jgeihfqlggwfi\"},\"privateLinkServiceConnectionState\":{\"status\":\"xmjpbyep\",\"description\":\"gt\",\"actionsRequired\":\"j\"}},\"name\":\"cmyfqipgxhnpo\",\"type\":\"qwcabvnui\",\"etag\":\"ey\",\"id\":\"wlpaugmrmfjlrxwt\"},{\"properties\":{\"provisioningState\":\"khfkvcisi\",\"privateEndpoint\":{\"id\":\"a\"},\"privateLinkServiceConnectionState\":{\"status\":\"xjw\",\"description\":\"vedwcgyeewx\",\"actionsRequired\":\"qbpsmg\"}},\"name\":\"guamlj\",\"type\":\"rgmsplzga\",\"etag\":\"cshhv\",\"id\":\"wgnxkympqanxrj\"},{\"properties\":{\"provisioningState\":\"tw\",\"privateEndpoint\":{\"id\":\"oypnyg\"},\"privateLinkServiceConnectionState\":{\"status\":\"xcy\",\"description\":\"kgmnsghpxyc\",\"actionsRequired\":\"drwjjkhvyom\"}},\"name\":\"luzvxnq\",\"type\":\"rpqpd\",\"etag\":\"mkoisqcssf\",\"id\":\"uifmc\"}],\"nextLink\":\"p\"}")
            .toObject(PrivateEndpointConnectionListResponse.class);
        Assertions.assertEquals("wlpaugmrmfjlrxwt", model.value().get(0).id());
        Assertions.assertEquals("xmjpbyep",
            model.value().get(0).properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("gt",
            model.value().get(0).properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("j",
            model.value().get(0).properties().privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("p", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionListResponse model
            = new PrivateEndpointConnectionListResponse().withValue(Arrays.asList(
                new PrivateEndpointConnectionResourceInner().withId("wlpaugmrmfjlrxwt")
                    .withProperties(new RemotePrivateEndpointConnection().withPrivateEndpoint(new ArmIdWrapper())
                        .withPrivateLinkServiceConnectionState(new PrivateLinkConnectionState().withStatus("xmjpbyep")
                            .withDescription("gt")
                            .withActionsRequired("j"))),
                new PrivateEndpointConnectionResourceInner().withId("wgnxkympqanxrj")
                    .withProperties(new RemotePrivateEndpointConnection().withPrivateEndpoint(new ArmIdWrapper())
                        .withPrivateLinkServiceConnectionState(new PrivateLinkConnectionState().withStatus("xjw")
                            .withDescription("vedwcgyeewx")
                            .withActionsRequired("qbpsmg"))),
                new PrivateEndpointConnectionResourceInner().withId("uifmc")
                    .withProperties(new RemotePrivateEndpointConnection().withPrivateEndpoint(new ArmIdWrapper())
                        .withPrivateLinkServiceConnectionState(new PrivateLinkConnectionState().withStatus("xcy")
                            .withDescription("kgmnsghpxyc")
                            .withActionsRequired("drwjjkhvyom")))))
                .withNextLink("p");
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionListResponse.class);
        Assertions.assertEquals("wlpaugmrmfjlrxwt", model.value().get(0).id());
        Assertions.assertEquals("xmjpbyep",
            model.value().get(0).properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("gt",
            model.value().get(0).properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("j",
            model.value().get(0).properties().privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("p", model.nextLink());
    }
}
