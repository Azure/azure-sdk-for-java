// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.OraclePartitionSettings;
import com.azure.resourcemanager.datafactory.models.OracleSource;

public final class OracleSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OracleSource model =
            BinaryData
                .fromString(
                    "{\"type\":\"OracleSource\",\"oracleReaderQuery\":\"dataeyrnbubyabtowbu\",\"queryTimeout\":\"datalwbgvzuxfsmf\",\"partitionOption\":\"datazuoq\",\"partitionSettings\":{\"partitionNames\":\"datafv\",\"partitionColumnName\":\"datayl\",\"partitionUpperBound\":\"datajylhv\",\"partitionLowerBound\":\"datajzrqwjtswemotj\"},\"additionalColumns\":\"datajyavkyjvctq\",\"sourceRetryCount\":\"datacz\",\"sourceRetryWait\":\"datapaeyklxsvcbr\",\"maxConcurrentConnections\":\"datalt\",\"disableMetricsCollection\":\"datamdsngoaofmrph\",\"\":{\"exibo\":\"datafrunkcgdnha\"}}")
                .toObject(OracleSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OracleSource model =
            new OracleSource()
                .withSourceRetryCount("datacz")
                .withSourceRetryWait("datapaeyklxsvcbr")
                .withMaxConcurrentConnections("datalt")
                .withDisableMetricsCollection("datamdsngoaofmrph")
                .withOracleReaderQuery("dataeyrnbubyabtowbu")
                .withQueryTimeout("datalwbgvzuxfsmf")
                .withPartitionOption("datazuoq")
                .withPartitionSettings(
                    new OraclePartitionSettings()
                        .withPartitionNames("datafv")
                        .withPartitionColumnName("datayl")
                        .withPartitionUpperBound("datajylhv")
                        .withPartitionLowerBound("datajzrqwjtswemotj"))
                .withAdditionalColumns("datajyavkyjvctq");
        model = BinaryData.fromObject(model).toObject(OracleSource.class);
    }
}
