// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.OraclePartitionSettings;
import com.azure.resourcemanager.datafactory.models.OracleSource;

public final class OracleSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OracleSource model = BinaryData.fromString(
            "{\"type\":\"OracleSource\",\"oracleReaderQuery\":\"datarnknnql\",\"queryTimeout\":\"datagyeyxmuwgnwxtm\",\"partitionOption\":\"datagencmoswcxlg\",\"partitionSettings\":{\"partitionNames\":\"dataqxewsvqpifza\",\"partitionColumnName\":\"datatywap\",\"partitionUpperBound\":\"dataczprzrsqcu\",\"partitionLowerBound\":\"datanp\"},\"additionalColumns\":\"dataqlanuhmsrnp\",\"sourceRetryCount\":\"dataaghoeqiwpdxpd\",\"sourceRetryWait\":\"dataoajqxyplhsto\",\"maxConcurrentConnections\":\"datayb\",\"disableMetricsCollection\":\"dataysvpikgqjdog\",\"\":{\"qpsiniidaxbesb\":\"datajfgyivsiirxcxp\",\"zyjchduasjrseqp\":\"datac\"}}")
            .toObject(OracleSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OracleSource model = new OracleSource().withSourceRetryCount("dataaghoeqiwpdxpd")
            .withSourceRetryWait("dataoajqxyplhsto")
            .withMaxConcurrentConnections("datayb")
            .withDisableMetricsCollection("dataysvpikgqjdog")
            .withOracleReaderQuery("datarnknnql")
            .withQueryTimeout("datagyeyxmuwgnwxtm")
            .withPartitionOption("datagencmoswcxlg")
            .withPartitionSettings(new OraclePartitionSettings().withPartitionNames("dataqxewsvqpifza")
                .withPartitionColumnName("datatywap")
                .withPartitionUpperBound("dataczprzrsqcu")
                .withPartitionLowerBound("datanp"))
            .withAdditionalColumns("dataqlanuhmsrnp");
        model = BinaryData.fromObject(model).toObject(OracleSource.class);
    }
}
