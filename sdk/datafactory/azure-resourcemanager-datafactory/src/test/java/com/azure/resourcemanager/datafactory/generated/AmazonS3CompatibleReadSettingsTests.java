// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AmazonS3CompatibleReadSettings;

public final class AmazonS3CompatibleReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AmazonS3CompatibleReadSettings model = BinaryData.fromString(
            "{\"type\":\"AmazonS3CompatibleReadSettings\",\"recursive\":\"dataugthcdbz\",\"wildcardFolderPath\":\"datahoiogpb\",\"wildcardFileName\":\"datapbwefoxlzrijpkbr\",\"prefix\":\"datazupq\",\"fileListPath\":\"dataqeqjtzawen\",\"enablePartitionDiscovery\":\"datagitzdjix\",\"partitionRootPath\":\"datapladohnizvvekpq\",\"deleteFilesAfterCompletion\":\"dataqvmhtyafcvtosovx\",\"modifiedDatetimeStart\":\"dataooqekzxqrzsng\",\"modifiedDatetimeEnd\":\"datalbsnlfp\",\"maxConcurrentConnections\":\"datajrh\",\"disableMetricsCollection\":\"datahiorhwu\",\"\":{\"jgtourrqmch\":\"datamyjvko\"}}")
            .toObject(AmazonS3CompatibleReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AmazonS3CompatibleReadSettings model
            = new AmazonS3CompatibleReadSettings().withMaxConcurrentConnections("datajrh")
                .withDisableMetricsCollection("datahiorhwu")
                .withRecursive("dataugthcdbz")
                .withWildcardFolderPath("datahoiogpb")
                .withWildcardFileName("datapbwefoxlzrijpkbr")
                .withPrefix("datazupq")
                .withFileListPath("dataqeqjtzawen")
                .withEnablePartitionDiscovery("datagitzdjix")
                .withPartitionRootPath("datapladohnizvvekpq")
                .withDeleteFilesAfterCompletion("dataqvmhtyafcvtosovx")
                .withModifiedDatetimeStart("dataooqekzxqrzsng")
                .withModifiedDatetimeEnd("datalbsnlfp");
        model = BinaryData.fromObject(model).toObject(AmazonS3CompatibleReadSettings.class);
    }
}
