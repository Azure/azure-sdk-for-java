// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AmazonS3CompatibleReadSettings;

public final class AmazonS3CompatibleReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AmazonS3CompatibleReadSettings model = BinaryData.fromString(
            "{\"type\":\"AmazonS3CompatibleReadSettings\",\"recursive\":\"dataccd\",\"wildcardFolderPath\":\"dataxybn\",\"wildcardFileName\":\"datahmpmeglolpot\",\"prefix\":\"datamb\",\"fileListPath\":\"dataqjrytymfnojjh\",\"enablePartitionDiscovery\":\"datanthjqgovviv\",\"partitionRootPath\":\"dataxytrafettwytavp\",\"deleteFilesAfterCompletion\":\"datalgyql\",\"modifiedDatetimeStart\":\"datalgspy\",\"modifiedDatetimeEnd\":\"dataapnhhvp\",\"maxConcurrentConnections\":\"datakourqviy\",\"disableMetricsCollection\":\"datasegwez\",\"\":{\"tdz\":\"dataoujtcp\",\"gzba\":\"datay\",\"gmnkrq\":\"datajckakikkkajmnvb\"}}")
            .toObject(AmazonS3CompatibleReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AmazonS3CompatibleReadSettings model
            = new AmazonS3CompatibleReadSettings().withMaxConcurrentConnections("datakourqviy")
                .withDisableMetricsCollection("datasegwez")
                .withRecursive("dataccd")
                .withWildcardFolderPath("dataxybn")
                .withWildcardFileName("datahmpmeglolpot")
                .withPrefix("datamb")
                .withFileListPath("dataqjrytymfnojjh")
                .withEnablePartitionDiscovery("datanthjqgovviv")
                .withPartitionRootPath("dataxytrafettwytavp")
                .withDeleteFilesAfterCompletion("datalgyql")
                .withModifiedDatetimeStart("datalgspy")
                .withModifiedDatetimeEnd("dataapnhhvp");
        model = BinaryData.fromObject(model).toObject(AmazonS3CompatibleReadSettings.class);
    }
}
