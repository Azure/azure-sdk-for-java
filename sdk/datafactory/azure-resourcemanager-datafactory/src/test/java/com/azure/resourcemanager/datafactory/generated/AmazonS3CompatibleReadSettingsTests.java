// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AmazonS3CompatibleReadSettings;

public final class AmazonS3CompatibleReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AmazonS3CompatibleReadSettings model = BinaryData.fromString(
            "{\"type\":\"ojgmobkaligo\",\"recursive\":\"databpiie\",\"wildcardFolderPath\":\"datagchsgotgwerbpob\",\"wildcardFileName\":\"datah\",\"prefix\":\"dataicgrxceivvm\",\"fileListPath\":\"datakllqh\",\"enablePartitionDiscovery\":\"datautr\",\"partitionRootPath\":\"datamztrnniarje\",\"deleteFilesAfterCompletion\":\"datahyxiqfoq\",\"modifiedDatetimeStart\":\"datasqykqfserlsai\",\"modifiedDatetimeEnd\":\"datahhetagwmzg\",\"maxConcurrentConnections\":\"datakehpdssvlubdp\",\"disableMetricsCollection\":\"datawxsxbxdkmixurce\",\"\":{\"kcnkghkr\":\"datamjqqauftghmtbu\",\"eayodrvwnqb\":\"datairshl\"}}")
            .toObject(AmazonS3CompatibleReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AmazonS3CompatibleReadSettings model
            = new AmazonS3CompatibleReadSettings().withMaxConcurrentConnections("datakehpdssvlubdp")
                .withDisableMetricsCollection("datawxsxbxdkmixurce")
                .withRecursive("databpiie")
                .withWildcardFolderPath("datagchsgotgwerbpob")
                .withWildcardFileName("datah")
                .withPrefix("dataicgrxceivvm")
                .withFileListPath("datakllqh")
                .withEnablePartitionDiscovery("datautr")
                .withPartitionRootPath("datamztrnniarje")
                .withDeleteFilesAfterCompletion("datahyxiqfoq")
                .withModifiedDatetimeStart("datasqykqfserlsai")
                .withModifiedDatetimeEnd("datahhetagwmzg");
        model = BinaryData.fromObject(model).toObject(AmazonS3CompatibleReadSettings.class);
    }
}
