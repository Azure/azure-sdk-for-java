// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.PrestoObjectDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class PrestoObjectDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrestoObjectDataset model = BinaryData.fromString(
            "{\"type\":\"iva\",\"typeProperties\":{\"tableName\":\"dataotypcjxh\",\"table\":\"datazlocjhzppdbr\",\"schema\":\"datacxbofpr\"},\"description\":\"sbfzl\",\"structure\":\"datajr\",\"schema\":\"datasfv\",\"linkedServiceName\":{\"referenceName\":\"ghqxtmblmf\",\"parameters\":{\"vel\":\"datau\"}},\"parameters\":{\"e\":{\"type\":\"Float\",\"defaultValue\":\"dataxjtezujtoudo\"},\"iexuwemtg\":{\"type\":\"Object\",\"defaultValue\":\"datavssrj\"},\"sxehaxi\":{\"type\":\"Bool\",\"defaultValue\":\"databymmcgsksc\"},\"ptbhm\":{\"type\":\"SecureString\",\"defaultValue\":\"datajxolknshgwa\"}},\"annotations\":[\"datamn\",\"databnatlnch\",\"datazcdkxo\"],\"folder\":{\"name\":\"zzvhbuj\"},\"\":{\"rbfbsdii\":\"dataophqwojdzccqtw\",\"xrvnhhmfsnqp\":\"datadzfbv\"}}")
            .toObject(PrestoObjectDataset.class);
        Assertions.assertEquals("sbfzl", model.description());
        Assertions.assertEquals("ghqxtmblmf", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.FLOAT, model.parameters().get("e").type());
        Assertions.assertEquals("zzvhbuj", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrestoObjectDataset model = new PrestoObjectDataset().withDescription("sbfzl")
            .withStructure("datajr")
            .withSchema("datasfv")
            .withLinkedServiceName(
                new LinkedServiceReference().withReferenceName("ghqxtmblmf").withParameters(mapOf("vel", "datau")))
            .withParameters(mapOf("e",
                new ParameterSpecification().withType(ParameterType.FLOAT).withDefaultValue("dataxjtezujtoudo"),
                "iexuwemtg", new ParameterSpecification().withType(ParameterType.OBJECT).withDefaultValue("datavssrj"),
                "sxehaxi", new ParameterSpecification().withType(ParameterType.BOOL).withDefaultValue("databymmcgsksc"),
                "ptbhm",
                new ParameterSpecification().withType(ParameterType.SECURE_STRING).withDefaultValue("datajxolknshgwa")))
            .withAnnotations(Arrays.asList("datamn", "databnatlnch", "datazcdkxo"))
            .withFolder(new DatasetFolder().withName("zzvhbuj"))
            .withTableName("dataotypcjxh")
            .withTable("datazlocjhzppdbr")
            .withSchemaTypePropertiesSchema("datacxbofpr");
        model = BinaryData.fromObject(model).toObject(PrestoObjectDataset.class);
        Assertions.assertEquals("sbfzl", model.description());
        Assertions.assertEquals("ghqxtmblmf", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.FLOAT, model.parameters().get("e").type());
        Assertions.assertEquals("zzvhbuj", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
