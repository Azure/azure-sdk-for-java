// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.SharePointOnlineListResourceDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SharePointOnlineListResourceDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SharePointOnlineListResourceDataset model = BinaryData.fromString(
            "{\"type\":\"SharePointOnlineListResource\",\"typeProperties\":{\"listName\":\"datafkryxs\"},\"description\":\"aknk\",\"structure\":\"datah\",\"schema\":\"datap\",\"linkedServiceName\":{\"referenceName\":\"vihbmwrv\",\"parameters\":{\"vxznirnygtixkg\":\"datarohulobkabhvxjua\",\"qdi\":\"dataobmkphvdlorxz\"}},\"parameters\":{\"e\":{\"type\":\"String\",\"defaultValue\":\"datatfcieil\"}},\"annotations\":[\"datakehldopjsxvbbwsg\",\"datakkmibnmdp\",\"datad\",\"datapwtgzwmzhcmrloqa\"],\"folder\":{\"name\":\"yzavky\"},\"\":{\"bngzldvvd\":\"dataudnmbj\",\"pmq\":\"dataoptythctoxo\",\"sfzsgzgus\":\"dataerwhemvids\"}}")
            .toObject(SharePointOnlineListResourceDataset.class);
        Assertions.assertEquals("aknk", model.description());
        Assertions.assertEquals("vihbmwrv", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.STRING, model.parameters().get("e").type());
        Assertions.assertEquals("yzavky", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SharePointOnlineListResourceDataset model = new SharePointOnlineListResourceDataset().withDescription("aknk")
            .withStructure("datah")
            .withSchema("datap")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("vihbmwrv")
                .withParameters(mapOf("vxznirnygtixkg", "datarohulobkabhvxjua", "qdi", "dataobmkphvdlorxz")))
            .withParameters(
                mapOf("e", new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("datatfcieil")))
            .withAnnotations(Arrays.asList("datakehldopjsxvbbwsg", "datakkmibnmdp", "datad", "datapwtgzwmzhcmrloqa"))
            .withFolder(new DatasetFolder().withName("yzavky"))
            .withListName("datafkryxs");
        model = BinaryData.fromObject(model).toObject(SharePointOnlineListResourceDataset.class);
        Assertions.assertEquals("aknk", model.description());
        Assertions.assertEquals("vihbmwrv", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.STRING, model.parameters().get("e").type());
        Assertions.assertEquals("yzavky", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
