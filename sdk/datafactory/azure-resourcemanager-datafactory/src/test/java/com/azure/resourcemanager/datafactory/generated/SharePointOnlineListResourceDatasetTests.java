// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.SharePointOnlineListResourceDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SharePointOnlineListResourceDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SharePointOnlineListResourceDataset model = BinaryData.fromString(
            "{\"type\":\"yiyjxzxbt\",\"typeProperties\":{\"listName\":\"datavjgvjzykn\"},\"description\":\"nyzpu\",\"structure\":\"datarmdlkoabfcv\",\"schema\":\"databwxpmgyqshsasmr\",\"linkedServiceName\":{\"referenceName\":\"uy\",\"parameters\":{\"uuihkybgkyncyzj\":\"databxrgrztkyqgu\",\"vypmwdz\":\"datadfeemxiurpf\"}},\"parameters\":{\"llyd\":{\"type\":\"SecureString\",\"defaultValue\":\"dataoxppoqimyhxnpdg\"},\"c\":{\"type\":\"Float\",\"defaultValue\":\"datafdmz\"}},\"annotations\":[\"datavwlxd\",\"datanst\",\"dataeurd\",\"dataxklr\"],\"folder\":{\"name\":\"siznymwz\"},\"\":{\"ezxevltfe\":\"datakihqhnfubevwadx\",\"mftwrphmriipzgfo\":\"dataqoqiaklqakpsti\",\"dcjqneaqkgttbarg\":\"datau\",\"jjpfyxhsppvjs\":\"dataeynqlsnrgaxoyv\"}}")
            .toObject(SharePointOnlineListResourceDataset.class);
        Assertions.assertEquals("nyzpu", model.description());
        Assertions.assertEquals("uy", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.SECURE_STRING, model.parameters().get("llyd").type());
        Assertions.assertEquals("siznymwz", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SharePointOnlineListResourceDataset model = new SharePointOnlineListResourceDataset().withDescription("nyzpu")
            .withStructure("datarmdlkoabfcv")
            .withSchema("databwxpmgyqshsasmr")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("uy")
                .withParameters(mapOf("uuihkybgkyncyzj", "databxrgrztkyqgu", "vypmwdz", "datadfeemxiurpf")))
            .withParameters(mapOf("llyd",
                new ParameterSpecification().withType(ParameterType.SECURE_STRING)
                    .withDefaultValue("dataoxppoqimyhxnpdg"),
                "c", new ParameterSpecification().withType(ParameterType.FLOAT).withDefaultValue("datafdmz")))
            .withAnnotations(Arrays.asList("datavwlxd", "datanst", "dataeurd", "dataxklr"))
            .withFolder(new DatasetFolder().withName("siznymwz"))
            .withListName("datavjgvjzykn");
        model = BinaryData.fromObject(model).toObject(SharePointOnlineListResourceDataset.class);
        Assertions.assertEquals("nyzpu", model.description());
        Assertions.assertEquals("uy", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.SECURE_STRING, model.parameters().get("llyd").type());
        Assertions.assertEquals("siznymwz", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
