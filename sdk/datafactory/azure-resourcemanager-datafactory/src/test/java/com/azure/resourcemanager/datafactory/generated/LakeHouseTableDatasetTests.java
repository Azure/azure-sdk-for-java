// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LakeHouseTableDataset;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class LakeHouseTableDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LakeHouseTableDataset model = BinaryData.fromString(
            "{\"type\":\"LakeHouseTable\",\"typeProperties\":{\"table\":\"dataocuzxllbpwa\"},\"description\":\"wettohgpz\",\"structure\":\"datayv\",\"schema\":\"datazbhizxpu\",\"linkedServiceName\":{\"referenceName\":\"dd\",\"parameters\":{\"mju\":\"dataf\",\"udhekaqni\":\"datauqnkushvl\",\"ygkxrlfojlclp\":\"datamidtvhjcgszfb\"}},\"parameters\":{\"rvykduumwbcu\":{\"type\":\"Bool\",\"defaultValue\":\"databod\"},\"pdxtsaujtc\":{\"type\":\"Bool\",\"defaultValue\":\"datae\"},\"vmlkwkzlinv\":{\"type\":\"Array\",\"defaultValue\":\"dataybolqoxuptsli\"},\"dekfxcsqmzdozktk\":{\"type\":\"SecureString\",\"defaultValue\":\"dataykxs\"}},\"annotations\":[\"datazeohplrgcnb\",\"datamhvqpkedaxk\"],\"folder\":{\"name\":\"rfjid\"},\"\":{\"vfyihuzsbpwn\":\"dataaweog\"}}")
            .toObject(LakeHouseTableDataset.class);
        Assertions.assertEquals("wettohgpz", model.description());
        Assertions.assertEquals("dd", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.BOOL, model.parameters().get("rvykduumwbcu").type());
        Assertions.assertEquals("rfjid", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LakeHouseTableDataset model = new LakeHouseTableDataset().withDescription("wettohgpz").withStructure("datayv")
            .withSchema("datazbhizxpu")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("dd").withParameters(
                mapOf("mju", "dataf", "udhekaqni", "datauqnkushvl", "ygkxrlfojlclp", "datamidtvhjcgszfb")))
            .withParameters(mapOf("rvykduumwbcu",
                new ParameterSpecification().withType(ParameterType.BOOL).withDefaultValue("databod"), "pdxtsaujtc",
                new ParameterSpecification().withType(ParameterType.BOOL).withDefaultValue("datae"), "vmlkwkzlinv",
                new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("dataybolqoxuptsli"),
                "dekfxcsqmzdozktk",
                new ParameterSpecification().withType(ParameterType.SECURE_STRING).withDefaultValue("dataykxs")))
            .withAnnotations(Arrays.asList("datazeohplrgcnb", "datamhvqpkedaxk"))
            .withFolder(new DatasetFolder().withName("rfjid")).withTable("dataocuzxllbpwa");
        model = BinaryData.fromObject(model).toObject(LakeHouseTableDataset.class);
        Assertions.assertEquals("wettohgpz", model.description());
        Assertions.assertEquals("dd", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.BOOL, model.parameters().get("rvykduumwbcu").type());
        Assertions.assertEquals("rfjid", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
