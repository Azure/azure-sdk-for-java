// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LakeHouseTableDataset;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class LakeHouseTableDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LakeHouseTableDataset model = BinaryData.fromString(
            "{\"type\":\"LakeHouseTable\",\"typeProperties\":{\"schema\":\"dataeogavfyihuz\",\"table\":\"datapwnyfjcypazwiimd\"},\"description\":\"gkooagr\",\"structure\":\"datapamesi\",\"schema\":\"dataqadewhuwxk\",\"linkedServiceName\":{\"referenceName\":\"xiatfam\",\"parameters\":{\"yfozwhomydxg\":\"dataifllxccprk\",\"zihirqvvketyd\":\"datauqbvfq\",\"rmh\":\"dataaqoktssgvqxer\"}},\"parameters\":{\"jlvihylrxsiy\":{\"type\":\"Bool\",\"defaultValue\":\"datab\"},\"tlqycfvernnk\":{\"type\":\"Object\",\"defaultValue\":\"dataiumt\"}},\"annotations\":[\"dataayqivb\",\"datagdr\",\"datagzetboyztgnmu\",\"datappwp\"],\"folder\":{\"name\":\"grmtgwhzbbdwrjen\"},\"\":{\"onm\":\"dataeiiewibdtpl\"}}")
            .toObject(LakeHouseTableDataset.class);
        Assertions.assertEquals("gkooagr", model.description());
        Assertions.assertEquals("xiatfam", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.BOOL, model.parameters().get("jlvihylrxsiy").type());
        Assertions.assertEquals("grmtgwhzbbdwrjen", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LakeHouseTableDataset model
            = new LakeHouseTableDataset().withDescription("gkooagr")
                .withStructure("datapamesi")
                .withSchema("dataqadewhuwxk")
                .withLinkedServiceName(new LinkedServiceReference().withReferenceName("xiatfam")
                    .withParameters(mapOf("yfozwhomydxg", "dataifllxccprk", "zihirqvvketyd", "datauqbvfq", "rmh",
                        "dataaqoktssgvqxer")))
                .withParameters(mapOf("jlvihylrxsiy",
                    new ParameterSpecification().withType(ParameterType.BOOL).withDefaultValue("datab"), "tlqycfvernnk",
                    new ParameterSpecification().withType(ParameterType.OBJECT).withDefaultValue("dataiumt")))
                .withAnnotations(Arrays.asList("dataayqivb", "datagdr", "datagzetboyztgnmu", "datappwp"))
                .withFolder(new DatasetFolder().withName("grmtgwhzbbdwrjen"))
                .withSchemaTypePropertiesSchema("dataeogavfyihuz")
                .withTable("datapwnyfjcypazwiimd");
        model = BinaryData.fromObject(model).toObject(LakeHouseTableDataset.class);
        Assertions.assertEquals("gkooagr", model.description());
        Assertions.assertEquals("xiatfam", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.BOOL, model.parameters().get("jlvihylrxsiy").type());
        Assertions.assertEquals("grmtgwhzbbdwrjen", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
