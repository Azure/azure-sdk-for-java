// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.GreenplumSource;

public final class GreenplumSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GreenplumSource model = BinaryData.fromString(
            "{\"type\":\"GreenplumSource\",\"query\":\"databrolqxloed\",\"queryTimeout\":\"datarvfrfsyqb\",\"additionalColumns\":\"datawujwowthvuepszzn\",\"sourceRetryCount\":\"datajnsp\",\"sourceRetryWait\":\"dataqo\",\"maxConcurrentConnections\":\"datautqt\",\"disableMetricsCollection\":\"dataivvnmavfzjwdwwnx\",\"\":{\"piwcgcwmsh\":\"datand\",\"pzclkatpuomga\":\"datapqxjxhdwjfx\",\"vcfbflyzcqomlybs\":\"datavcqnjjfm\"}}")
            .toObject(GreenplumSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GreenplumSource model = new GreenplumSource().withSourceRetryCount("datajnsp").withSourceRetryWait("dataqo")
            .withMaxConcurrentConnections("datautqt").withDisableMetricsCollection("dataivvnmavfzjwdwwnx")
            .withQueryTimeout("datarvfrfsyqb").withAdditionalColumns("datawujwowthvuepszzn")
            .withQuery("databrolqxloed");
        model = BinaryData.fromObject(model).toObject(GreenplumSource.class);
    }
}
