// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.GreenplumSource;

public final class GreenplumSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GreenplumSource model = BinaryData.fromString(
            "{\"type\":\"GreenplumSource\",\"query\":\"datauztb\",\"queryTimeout\":\"datatfmcnrgwgcsto\",\"additionalColumns\":\"dataveehmvr\",\"sourceRetryCount\":\"dataurpzry\",\"sourceRetryWait\":\"datafdhch\",\"maxConcurrentConnections\":\"datawahaxyrdlvb\",\"disableMetricsCollection\":\"datahfqsjzlckt\",\"\":{\"yhxgnlpjytle\":\"dataxtee\",\"krcohhuwzun\":\"dataymijhn\",\"b\":\"datazbdeyhwebh\",\"lynd\":\"dataocfvajmmdmb\"}}")
            .toObject(GreenplumSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GreenplumSource model = new GreenplumSource().withSourceRetryCount("dataurpzry")
            .withSourceRetryWait("datafdhch")
            .withMaxConcurrentConnections("datawahaxyrdlvb")
            .withDisableMetricsCollection("datahfqsjzlckt")
            .withQueryTimeout("datatfmcnrgwgcsto")
            .withAdditionalColumns("dataveehmvr")
            .withQuery("datauztb");
        model = BinaryData.fromObject(model).toObject(GreenplumSource.class);
    }
}
