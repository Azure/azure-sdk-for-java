// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.GreenplumSource;

public final class GreenplumSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GreenplumSource model =
            BinaryData
                .fromString(
                    "{\"type\":\"GreenplumSource\",\"query\":\"dataszbe\",\"queryTimeout\":\"datahxikrgokyngarwz\",\"additionalColumns\":\"datazjxgassmna\",\"sourceRetryCount\":\"datapolueylqysgmiix\",\"sourceRetryWait\":\"dataekcwec\",\"maxConcurrentConnections\":\"datatkdginm\",\"disableMetricsCollection\":\"datagp\",\"\":{\"wrwvbqv\":\"dataqccey\",\"iqfaxtljpyzcgugs\":\"datacqgqrsopq\",\"vslocdkpvv\":\"datapvyktfuhfaabi\",\"xnzjzashhiz\":\"dataqlkh\"}}")
                .toObject(GreenplumSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GreenplumSource model =
            new GreenplumSource()
                .withSourceRetryCount("datapolueylqysgmiix")
                .withSourceRetryWait("dataekcwec")
                .withMaxConcurrentConnections("datatkdginm")
                .withDisableMetricsCollection("datagp")
                .withQueryTimeout("datahxikrgokyngarwz")
                .withAdditionalColumns("datazjxgassmna")
                .withQuery("dataszbe");
        model = BinaryData.fromObject(model).toObject(GreenplumSource.class);
    }
}
