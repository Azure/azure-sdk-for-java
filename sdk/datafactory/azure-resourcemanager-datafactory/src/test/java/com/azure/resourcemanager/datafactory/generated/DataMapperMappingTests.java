// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.ConnectionType;
import com.azure.resourcemanager.datafactory.models.DataMapperMapping;
import com.azure.resourcemanager.datafactory.models.MapperAttributeMapping;
import com.azure.resourcemanager.datafactory.models.MapperAttributeMappings;
import com.azure.resourcemanager.datafactory.models.MapperAttributeReference;
import com.azure.resourcemanager.datafactory.models.MapperConnectionReference;
import com.azure.resourcemanager.datafactory.models.MappingType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DataMapperMappingTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataMapperMapping model = BinaryData.fromString(
            "{\"targetEntityName\":\"tkbtnqlrngl\",\"sourceEntityName\":\"biipsnawwlqkznx\",\"sourceConnectionReference\":{\"connectionName\":\"lxri\",\"type\":\"linkedservicetype\"},\"attributeMappingInfo\":{\"attributeMappings\":[{\"name\":\"qqoajxeiyglesrw\",\"type\":\"Aggregate\",\"functionName\":\"hdctrceqn\",\"expression\":\"rupobehd\",\"attributeReference\":{\"name\":\"zacvu\",\"entity\":\"pjpbibnzpp\",\"entityConnectionReference\":{\"connectionName\":\"ifexleqirccjcly\",\"type\":\"linkedservicetype\"}},\"attributeReferences\":[{\"name\":\"pjlvczuoda\",\"entity\":\"u\",\"entityConnectionReference\":{}},{\"name\":\"tepdjxqes\",\"entity\":\"ynu\",\"entityConnectionReference\":{}},{\"name\":\"pckaewse\",\"entity\":\"eskwxeg\",\"entityConnectionReference\":{}},{\"name\":\"rgfnz\",\"entity\":\"tmjtsghp\",\"entityConnectionReference\":{}}]},{\"name\":\"cp\",\"type\":\"Aggregate\",\"functionName\":\"zeq\",\"expression\":\"dldtzmpyp\",\"attributeReference\":{\"name\":\"pc\",\"entity\":\"hnuqndaizu\",\"entityConnectionReference\":{\"connectionName\":\"huytuszx\",\"type\":\"linkedservicetype\"}},\"attributeReferences\":[{\"name\":\"egw\",\"entity\":\"ukvzwydwttha\",\"entityConnectionReference\":{}},{\"name\":\"ksk\",\"entity\":\"vb\",\"entityConnectionReference\":{}},{\"name\":\"ajq\",\"entity\":\"kpeexpgeumilh\",\"entityConnectionReference\":{}},{\"name\":\"trdexyionofnin\",\"entity\":\"bzsx\",\"entityConnectionReference\":{}}]},{\"name\":\"qrs\",\"type\":\"Aggregate\",\"functionName\":\"bprt\",\"expression\":\"av\",\"attributeReference\":{\"name\":\"cyksivmfo\",\"entity\":\"rt\",\"entityConnectionReference\":{\"connectionName\":\"mkrftsjcwjjxsgm\",\"type\":\"linkedservicetype\"}},\"attributeReferences\":[{\"name\":\"dxkecifh\",\"entity\":\"jxwkloozrvtx\",\"entityConnectionReference\":{}},{\"name\":\"uf\",\"entity\":\"lcpx\",\"entityConnectionReference\":{}},{\"name\":\"ryeyngjgv\",\"entity\":\"uvp\",\"entityConnectionReference\":{}},{\"name\":\"lpmcrdc\",\"entity\":\"ljtiahxmfqryarv\",\"entityConnectionReference\":{}}]}]},\"sourceDenormalizeInfo\":\"dataqbglcjkaysp\"}")
            .toObject(DataMapperMapping.class);
        Assertions.assertEquals("tkbtnqlrngl", model.targetEntityName());
        Assertions.assertEquals("biipsnawwlqkznx", model.sourceEntityName());
        Assertions.assertEquals("lxri", model.sourceConnectionReference().connectionName());
        Assertions.assertEquals(ConnectionType.LINKEDSERVICETYPE, model.sourceConnectionReference().type());
        Assertions.assertEquals("qqoajxeiyglesrw", model.attributeMappingInfo().attributeMappings().get(0).name());
        Assertions.assertEquals(MappingType.AGGREGATE, model.attributeMappingInfo().attributeMappings().get(0).type());
        Assertions.assertEquals("hdctrceqn", model.attributeMappingInfo().attributeMappings().get(0).functionName());
        Assertions.assertEquals("rupobehd", model.attributeMappingInfo().attributeMappings().get(0).expression());
        Assertions.assertEquals("zacvu",
            model.attributeMappingInfo().attributeMappings().get(0).attributeReference().name());
        Assertions.assertEquals("pjpbibnzpp",
            model.attributeMappingInfo().attributeMappings().get(0).attributeReference().entity());
        Assertions.assertEquals("ifexleqirccjcly",
            model.attributeMappingInfo()
                .attributeMappings()
                .get(0)
                .attributeReference()
                .entityConnectionReference()
                .connectionName());
        Assertions.assertEquals(ConnectionType.LINKEDSERVICETYPE,
            model.attributeMappingInfo()
                .attributeMappings()
                .get(0)
                .attributeReference()
                .entityConnectionReference()
                .type());
        Assertions.assertEquals("pjlvczuoda",
            model.attributeMappingInfo().attributeMappings().get(0).attributeReferences().get(0).name());
        Assertions.assertEquals("u",
            model.attributeMappingInfo().attributeMappings().get(0).attributeReferences().get(0).entity());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataMapperMapping model = new DataMapperMapping().withTargetEntityName("tkbtnqlrngl")
            .withSourceEntityName("biipsnawwlqkznx")
            .withSourceConnectionReference(
                new MapperConnectionReference().withConnectionName("lxri").withType(ConnectionType.LINKEDSERVICETYPE))
            .withAttributeMappingInfo(new MapperAttributeMappings().withAttributeMappings(Arrays.asList(
                new MapperAttributeMapping().withName("qqoajxeiyglesrw")
                    .withType(MappingType.AGGREGATE)
                    .withFunctionName("hdctrceqn")
                    .withExpression("rupobehd")
                    .withAttributeReference(new MapperAttributeReference().withName("zacvu")
                        .withEntity("pjpbibnzpp")
                        .withEntityConnectionReference(
                            new MapperConnectionReference().withConnectionName("ifexleqirccjcly")
                                .withType(ConnectionType.LINKEDSERVICETYPE)))
                    .withAttributeReferences(Arrays.asList(
                        new MapperAttributeReference().withName("pjlvczuoda")
                            .withEntity("u")
                            .withEntityConnectionReference(new MapperConnectionReference()),
                        new MapperAttributeReference().withName("tepdjxqes")
                            .withEntity("ynu")
                            .withEntityConnectionReference(new MapperConnectionReference()),
                        new MapperAttributeReference().withName("pckaewse")
                            .withEntity("eskwxeg")
                            .withEntityConnectionReference(new MapperConnectionReference()),
                        new MapperAttributeReference().withName("rgfnz")
                            .withEntity("tmjtsghp")
                            .withEntityConnectionReference(new MapperConnectionReference()))),
                new MapperAttributeMapping().withName("cp")
                    .withType(MappingType.AGGREGATE)
                    .withFunctionName("zeq")
                    .withExpression("dldtzmpyp")
                    .withAttributeReference(new MapperAttributeReference().withName("pc")
                        .withEntity("hnuqndaizu")
                        .withEntityConnectionReference(new MapperConnectionReference().withConnectionName("huytuszx")
                            .withType(ConnectionType.LINKEDSERVICETYPE)))
                    .withAttributeReferences(Arrays.asList(
                        new MapperAttributeReference().withName("egw")
                            .withEntity("ukvzwydwttha")
                            .withEntityConnectionReference(new MapperConnectionReference()),
                        new MapperAttributeReference().withName("ksk")
                            .withEntity("vb")
                            .withEntityConnectionReference(new MapperConnectionReference()),
                        new MapperAttributeReference().withName("ajq")
                            .withEntity("kpeexpgeumilh")
                            .withEntityConnectionReference(new MapperConnectionReference()),
                        new MapperAttributeReference().withName("trdexyionofnin")
                            .withEntity("bzsx")
                            .withEntityConnectionReference(new MapperConnectionReference()))),
                new MapperAttributeMapping().withName("qrs")
                    .withType(MappingType.AGGREGATE)
                    .withFunctionName("bprt")
                    .withExpression("av")
                    .withAttributeReference(new MapperAttributeReference().withName("cyksivmfo")
                        .withEntity("rt")
                        .withEntityConnectionReference(
                            new MapperConnectionReference().withConnectionName("mkrftsjcwjjxsgm")
                                .withType(ConnectionType.LINKEDSERVICETYPE)))
                    .withAttributeReferences(Arrays.asList(
                        new MapperAttributeReference().withName("dxkecifh")
                            .withEntity("jxwkloozrvtx")
                            .withEntityConnectionReference(new MapperConnectionReference()),
                        new MapperAttributeReference().withName("uf")
                            .withEntity("lcpx")
                            .withEntityConnectionReference(new MapperConnectionReference()),
                        new MapperAttributeReference().withName("ryeyngjgv")
                            .withEntity("uvp")
                            .withEntityConnectionReference(new MapperConnectionReference()),
                        new MapperAttributeReference().withName("lpmcrdc")
                            .withEntity("ljtiahxmfqryarv")
                            .withEntityConnectionReference(new MapperConnectionReference()))))))
            .withSourceDenormalizeInfo("dataqbglcjkaysp");
        model = BinaryData.fromObject(model).toObject(DataMapperMapping.class);
        Assertions.assertEquals("tkbtnqlrngl", model.targetEntityName());
        Assertions.assertEquals("biipsnawwlqkznx", model.sourceEntityName());
        Assertions.assertEquals("lxri", model.sourceConnectionReference().connectionName());
        Assertions.assertEquals(ConnectionType.LINKEDSERVICETYPE, model.sourceConnectionReference().type());
        Assertions.assertEquals("qqoajxeiyglesrw", model.attributeMappingInfo().attributeMappings().get(0).name());
        Assertions.assertEquals(MappingType.AGGREGATE, model.attributeMappingInfo().attributeMappings().get(0).type());
        Assertions.assertEquals("hdctrceqn", model.attributeMappingInfo().attributeMappings().get(0).functionName());
        Assertions.assertEquals("rupobehd", model.attributeMappingInfo().attributeMappings().get(0).expression());
        Assertions.assertEquals("zacvu",
            model.attributeMappingInfo().attributeMappings().get(0).attributeReference().name());
        Assertions.assertEquals("pjpbibnzpp",
            model.attributeMappingInfo().attributeMappings().get(0).attributeReference().entity());
        Assertions.assertEquals("ifexleqirccjcly",
            model.attributeMappingInfo()
                .attributeMappings()
                .get(0)
                .attributeReference()
                .entityConnectionReference()
                .connectionName());
        Assertions.assertEquals(ConnectionType.LINKEDSERVICETYPE,
            model.attributeMappingInfo()
                .attributeMappings()
                .get(0)
                .attributeReference()
                .entityConnectionReference()
                .type());
        Assertions.assertEquals("pjlvczuoda",
            model.attributeMappingInfo().attributeMappings().get(0).attributeReferences().get(0).name());
        Assertions.assertEquals("u",
            model.attributeMappingInfo().attributeMappings().get(0).attributeReferences().get(0).entity());
    }
}
