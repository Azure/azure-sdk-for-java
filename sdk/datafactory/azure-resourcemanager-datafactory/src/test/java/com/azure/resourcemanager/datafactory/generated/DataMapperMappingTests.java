// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.ConnectionType;
import com.azure.resourcemanager.datafactory.models.DataMapperMapping;
import com.azure.resourcemanager.datafactory.models.MapperAttributeMapping;
import com.azure.resourcemanager.datafactory.models.MapperAttributeMappings;
import com.azure.resourcemanager.datafactory.models.MapperAttributeReference;
import com.azure.resourcemanager.datafactory.models.MapperConnectionReference;
import com.azure.resourcemanager.datafactory.models.MappingType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DataMapperMappingTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataMapperMapping model =
            BinaryData
                .fromString(
                    "{\"targetEntityName\":\"mhklbnl\",\"sourceEntityName\":\"vcb\",\"sourceConnectionReference\":{\"connectionName\":\"zyqu\",\"type\":\"linkedservicetype\"},\"attributeMappingInfo\":{\"attributeMappings\":[{\"name\":\"rp\",\"type\":\"Aggregate\",\"functionName\":\"yuuatvlmbjwcolbm\",\"expression\":\"b\",\"attributeReference\":{\"name\":\"pcpahprzrvxhmtf\",\"entity\":\"cnxzcmj\",\"entityConnectionReference\":{\"connectionName\":\"xnoqrxtdisn\",\"type\":\"linkedservicetype\"}},\"attributeReferences\":[{\"name\":\"mydidwhepfw\",\"entity\":\"jfdoesxxhm\",\"entityConnectionReference\":{}}]},{\"name\":\"bckyoikxk\",\"type\":\"Direct\",\"functionName\":\"gknjzr\",\"expression\":\"t\",\"attributeReference\":{\"name\":\"lvukaobrlb\",\"entity\":\"snbagnchjhg\",\"entityConnectionReference\":{\"connectionName\":\"owa\",\"type\":\"linkedservicetype\"}},\"attributeReferences\":[{\"name\":\"jymxcgqt\",\"entity\":\"drclssoljome\",\"entityConnectionReference\":{}},{\"name\":\"ycnlbvgjcodk\",\"entity\":\"ji\",\"entityConnectionReference\":{}}]}]},\"sourceDenormalizeInfo\":\"datas\"}")
                .toObject(DataMapperMapping.class);
        Assertions.assertEquals("mhklbnl", model.targetEntityName());
        Assertions.assertEquals("vcb", model.sourceEntityName());
        Assertions.assertEquals("zyqu", model.sourceConnectionReference().connectionName());
        Assertions.assertEquals(ConnectionType.LINKEDSERVICETYPE, model.sourceConnectionReference().type());
        Assertions.assertEquals("rp", model.attributeMappingInfo().attributeMappings().get(0).name());
        Assertions.assertEquals(MappingType.AGGREGATE, model.attributeMappingInfo().attributeMappings().get(0).type());
        Assertions
            .assertEquals("yuuatvlmbjwcolbm", model.attributeMappingInfo().attributeMappings().get(0).functionName());
        Assertions.assertEquals("b", model.attributeMappingInfo().attributeMappings().get(0).expression());
        Assertions
            .assertEquals(
                "pcpahprzrvxhmtf", model.attributeMappingInfo().attributeMappings().get(0).attributeReference().name());
        Assertions
            .assertEquals(
                "cnxzcmj", model.attributeMappingInfo().attributeMappings().get(0).attributeReference().entity());
        Assertions
            .assertEquals(
                "xnoqrxtdisn",
                model
                    .attributeMappingInfo()
                    .attributeMappings()
                    .get(0)
                    .attributeReference()
                    .entityConnectionReference()
                    .connectionName());
        Assertions
            .assertEquals(
                ConnectionType.LINKEDSERVICETYPE,
                model
                    .attributeMappingInfo()
                    .attributeMappings()
                    .get(0)
                    .attributeReference()
                    .entityConnectionReference()
                    .type());
        Assertions
            .assertEquals(
                "mydidwhepfw",
                model.attributeMappingInfo().attributeMappings().get(0).attributeReferences().get(0).name());
        Assertions
            .assertEquals(
                "jfdoesxxhm",
                model.attributeMappingInfo().attributeMappings().get(0).attributeReferences().get(0).entity());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataMapperMapping model =
            new DataMapperMapping()
                .withTargetEntityName("mhklbnl")
                .withSourceEntityName("vcb")
                .withSourceConnectionReference(
                    new MapperConnectionReference()
                        .withConnectionName("zyqu")
                        .withType(ConnectionType.LINKEDSERVICETYPE))
                .withAttributeMappingInfo(
                    new MapperAttributeMappings()
                        .withAttributeMappings(
                            Arrays
                                .asList(
                                    new MapperAttributeMapping()
                                        .withName("rp")
                                        .withType(MappingType.AGGREGATE)
                                        .withFunctionName("yuuatvlmbjwcolbm")
                                        .withExpression("b")
                                        .withAttributeReference(
                                            new MapperAttributeReference()
                                                .withName("pcpahprzrvxhmtf")
                                                .withEntity("cnxzcmj")
                                                .withEntityConnectionReference(
                                                    new MapperConnectionReference()
                                                        .withConnectionName("xnoqrxtdisn")
                                                        .withType(ConnectionType.LINKEDSERVICETYPE)))
                                        .withAttributeReferences(
                                            Arrays
                                                .asList(
                                                    new MapperAttributeReference()
                                                        .withName("mydidwhepfw")
                                                        .withEntity("jfdoesxxhm")
                                                        .withEntityConnectionReference(
                                                            new MapperConnectionReference()))),
                                    new MapperAttributeMapping()
                                        .withName("bckyoikxk")
                                        .withType(MappingType.DIRECT)
                                        .withFunctionName("gknjzr")
                                        .withExpression("t")
                                        .withAttributeReference(
                                            new MapperAttributeReference()
                                                .withName("lvukaobrlb")
                                                .withEntity("snbagnchjhg")
                                                .withEntityConnectionReference(
                                                    new MapperConnectionReference()
                                                        .withConnectionName("owa")
                                                        .withType(ConnectionType.LINKEDSERVICETYPE)))
                                        .withAttributeReferences(
                                            Arrays
                                                .asList(
                                                    new MapperAttributeReference()
                                                        .withName("jymxcgqt")
                                                        .withEntity("drclssoljome")
                                                        .withEntityConnectionReference(new MapperConnectionReference()),
                                                    new MapperAttributeReference()
                                                        .withName("ycnlbvgjcodk")
                                                        .withEntity("ji")
                                                        .withEntityConnectionReference(
                                                            new MapperConnectionReference()))))))
                .withSourceDenormalizeInfo("datas");
        model = BinaryData.fromObject(model).toObject(DataMapperMapping.class);
        Assertions.assertEquals("mhklbnl", model.targetEntityName());
        Assertions.assertEquals("vcb", model.sourceEntityName());
        Assertions.assertEquals("zyqu", model.sourceConnectionReference().connectionName());
        Assertions.assertEquals(ConnectionType.LINKEDSERVICETYPE, model.sourceConnectionReference().type());
        Assertions.assertEquals("rp", model.attributeMappingInfo().attributeMappings().get(0).name());
        Assertions.assertEquals(MappingType.AGGREGATE, model.attributeMappingInfo().attributeMappings().get(0).type());
        Assertions
            .assertEquals("yuuatvlmbjwcolbm", model.attributeMappingInfo().attributeMappings().get(0).functionName());
        Assertions.assertEquals("b", model.attributeMappingInfo().attributeMappings().get(0).expression());
        Assertions
            .assertEquals(
                "pcpahprzrvxhmtf", model.attributeMappingInfo().attributeMappings().get(0).attributeReference().name());
        Assertions
            .assertEquals(
                "cnxzcmj", model.attributeMappingInfo().attributeMappings().get(0).attributeReference().entity());
        Assertions
            .assertEquals(
                "xnoqrxtdisn",
                model
                    .attributeMappingInfo()
                    .attributeMappings()
                    .get(0)
                    .attributeReference()
                    .entityConnectionReference()
                    .connectionName());
        Assertions
            .assertEquals(
                ConnectionType.LINKEDSERVICETYPE,
                model
                    .attributeMappingInfo()
                    .attributeMappings()
                    .get(0)
                    .attributeReference()
                    .entityConnectionReference()
                    .type());
        Assertions
            .assertEquals(
                "mydidwhepfw",
                model.attributeMappingInfo().attributeMappings().get(0).attributeReferences().get(0).name());
        Assertions
            .assertEquals(
                "jfdoesxxhm",
                model.attributeMappingInfo().attributeMappings().get(0).attributeReferences().get(0).entity());
    }
}
