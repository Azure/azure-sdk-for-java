// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzureSqlDWTableDataset;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AzureSqlDWTableDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureSqlDWTableDataset model = BinaryData.fromString(
            "{\"type\":\"AzureSqlDWTable\",\"typeProperties\":{\"tableName\":\"dataqphkv\",\"schema\":\"datazadcrxyla\",\"table\":\"datadtyzvelffohur\"},\"description\":\"hjdfrwpsshrmnk\",\"structure\":\"datalpc\",\"schema\":\"dataogkscxj\",\"linkedServiceName\":{\"referenceName\":\"s\",\"parameters\":{\"qcowscuyfql\":\"dataspoebnx\",\"bqhsujkafu\":\"datam\"}},\"parameters\":{\"svgoocq\":{\"type\":\"Bool\",\"defaultValue\":\"datapwnikxkcajgrbrc\"},\"tm\":{\"type\":\"Bool\",\"defaultValue\":\"datamzlpcx\"},\"zfvwjdthkvpyeyoa\":{\"type\":\"Int\",\"defaultValue\":\"datarqic\"},\"kjr\":{\"type\":\"String\",\"defaultValue\":\"datampnqup\"}},\"annotations\":[\"dataky\"],\"folder\":{\"name\":\"bdx\"},\"\":{\"p\":\"datadcclcvqsr\",\"ry\":\"dataylcvwbzmfx\"}}")
            .toObject(AzureSqlDWTableDataset.class);
        Assertions.assertEquals("hjdfrwpsshrmnk", model.description());
        Assertions.assertEquals("s", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.BOOL, model.parameters().get("svgoocq").type());
        Assertions.assertEquals("bdx", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureSqlDWTableDataset model = new AzureSqlDWTableDataset().withDescription("hjdfrwpsshrmnk")
            .withStructure("datalpc")
            .withSchema("dataogkscxj")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("s")
                .withParameters(mapOf("qcowscuyfql", "dataspoebnx", "bqhsujkafu", "datam")))
            .withParameters(mapOf("svgoocq",
                new ParameterSpecification().withType(ParameterType.BOOL).withDefaultValue("datapwnikxkcajgrbrc"), "tm",
                new ParameterSpecification().withType(ParameterType.BOOL).withDefaultValue("datamzlpcx"),
                "zfvwjdthkvpyeyoa",
                new ParameterSpecification().withType(ParameterType.INT).withDefaultValue("datarqic"), "kjr",
                new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("datampnqup")))
            .withAnnotations(Arrays.asList("dataky"))
            .withFolder(new DatasetFolder().withName("bdx"))
            .withTableName("dataqphkv")
            .withSchemaTypePropertiesSchema("datazadcrxyla")
            .withTable("datadtyzvelffohur");
        model = BinaryData.fromObject(model).toObject(AzureSqlDWTableDataset.class);
        Assertions.assertEquals("hjdfrwpsshrmnk", model.description());
        Assertions.assertEquals("s", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.BOOL, model.parameters().get("svgoocq").type());
        Assertions.assertEquals("bdx", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
