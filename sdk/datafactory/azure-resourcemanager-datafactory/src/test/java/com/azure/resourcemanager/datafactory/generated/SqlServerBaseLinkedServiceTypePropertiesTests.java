// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties;

public final class SqlServerBaseLinkedServiceTypePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SqlServerBaseLinkedServiceTypeProperties model = BinaryData.fromString(
            "{\"server\":\"datamadkbxuip\",\"database\":\"dataawxugpubeqk\",\"encrypt\":\"datazmuzgueuyg\",\"trustServerCertificate\":\"datahauhe\",\"hostNameInCertificate\":\"dataswe\",\"applicationIntent\":\"datagxxzxwrnqwdjvl\",\"connectTimeout\":\"datazxyylwsfxqcmej\",\"connectRetryCount\":\"datajcbciuagakmxg\",\"connectRetryInterval\":\"datamavllp\",\"loadBalanceTimeout\":\"dataguzsyfwamhm\",\"commandTimeout\":\"dataxxb\",\"integratedSecurity\":\"datagwnompvy\",\"failoverPartner\":\"datacnzcu\",\"maxPoolSize\":\"datasalbjf\",\"minPoolSize\":\"dataexqfzmhkridipwc\",\"multipleActiveResultSets\":\"datannmpifjqhjenb\",\"multiSubnetFailover\":\"datapfpllosadjffllr\",\"packetSize\":\"datag\",\"pooling\":\"datayeok\"}")
            .toObject(SqlServerBaseLinkedServiceTypeProperties.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SqlServerBaseLinkedServiceTypeProperties model
            = new SqlServerBaseLinkedServiceTypeProperties().withServer("datamadkbxuip")
                .withDatabase("dataawxugpubeqk")
                .withEncrypt("datazmuzgueuyg")
                .withTrustServerCertificate("datahauhe")
                .withHostnameInCertificate("dataswe")
                .withApplicationIntent("datagxxzxwrnqwdjvl")
                .withConnectTimeout("datazxyylwsfxqcmej")
                .withConnectRetryCount("datajcbciuagakmxg")
                .withConnectRetryInterval("datamavllp")
                .withLoadBalanceTimeout("dataguzsyfwamhm")
                .withCommandTimeout("dataxxb")
                .withIntegratedSecurity("datagwnompvy")
                .withFailoverPartner("datacnzcu")
                .withMaxPoolSize("datasalbjf")
                .withMinPoolSize("dataexqfzmhkridipwc")
                .withMultipleActiveResultSets("datannmpifjqhjenb")
                .withMultiSubnetFailover("datapfpllosadjffllr")
                .withPacketSize("datag")
                .withPooling("datayeok");
        model = BinaryData.fromObject(model).toObject(SqlServerBaseLinkedServiceTypeProperties.class);
    }
}
