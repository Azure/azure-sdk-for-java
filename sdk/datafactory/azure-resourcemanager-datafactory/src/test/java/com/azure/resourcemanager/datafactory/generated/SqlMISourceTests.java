// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SqlMISource;
import com.azure.resourcemanager.datafactory.models.SqlPartitionSettings;

public final class SqlMISourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SqlMISource model = BinaryData.fromString(
            "{\"type\":\"SqlMISource\",\"sqlReaderQuery\":\"datardtrdukdmsktuv\",\"sqlReaderStoredProcedureName\":\"datazxtvytoyf\",\"storedProcedureParameters\":\"datagrzwdwdudxqeb\",\"isolationLevel\":\"datapsplwtlocseybv\",\"produceAdditionalTypes\":\"datacoznnjqxck\",\"partitionOption\":\"datakuuotlymybm\",\"partitionSettings\":{\"partitionColumnName\":\"datakxkmtuyn\",\"partitionUpperBound\":\"datap\",\"partitionLowerBound\":\"dataj\"},\"queryTimeout\":\"datasvfhqtqqshbip\",\"additionalColumns\":\"datauhujkz\",\"sourceRetryCount\":\"dataezgphipt\",\"sourceRetryWait\":\"dataqldnhwdfxgeccckk\",\"maxConcurrentConnections\":\"dataz\",\"disableMetricsCollection\":\"datas\",\"\":{\"pxdzmpjfbd\":\"datao\",\"iocqoydqyzhfny\":\"dataoawhbdxxnmyxz\",\"skt\":\"datagbwdsaqwywayjin\",\"ygyeyxmuwgn\":\"datarnknnql\"}}")
            .toObject(SqlMISource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SqlMISource model = new SqlMISource().withSourceRetryCount("dataezgphipt")
            .withSourceRetryWait("dataqldnhwdfxgeccckk")
            .withMaxConcurrentConnections("dataz")
            .withDisableMetricsCollection("datas")
            .withQueryTimeout("datasvfhqtqqshbip")
            .withAdditionalColumns("datauhujkz")
            .withSqlReaderQuery("datardtrdukdmsktuv")
            .withSqlReaderStoredProcedureName("datazxtvytoyf")
            .withStoredProcedureParameters("datagrzwdwdudxqeb")
            .withIsolationLevel("datapsplwtlocseybv")
            .withProduceAdditionalTypes("datacoznnjqxck")
            .withPartitionOption("datakuuotlymybm")
            .withPartitionSettings(new SqlPartitionSettings().withPartitionColumnName("datakxkmtuyn")
                .withPartitionUpperBound("datap")
                .withPartitionLowerBound("dataj"));
        model = BinaryData.fromObject(model).toObject(SqlMISource.class);
    }
}
