// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SqlMISource;
import com.azure.resourcemanager.datafactory.models.SqlPartitionSettings;

public final class SqlMISourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SqlMISource model = BinaryData.fromString(
            "{\"type\":\"SqlMISource\",\"sqlReaderQuery\":\"datajrfk\",\"sqlReaderStoredProcedureName\":\"datac\",\"storedProcedureParameters\":\"dataelokxklgl\",\"isolationLevel\":\"dataregjo\",\"produceAdditionalTypes\":\"datan\",\"partitionOption\":\"datasbmvrmenrcqi\",\"partitionSettings\":{\"partitionColumnName\":\"datavp\",\"partitionUpperBound\":\"dataduiuvingm\",\"partitionLowerBound\":\"dataqy\"},\"queryTimeout\":\"datayuqdz\",\"additionalColumns\":\"dataojz\",\"sourceRetryCount\":\"dataykfjga\",\"sourceRetryWait\":\"datayscky\",\"maxConcurrentConnections\":\"datayj\",\"disableMetricsCollection\":\"datamfwrqzizggvmuotc\",\"\":{\"rlt\":\"databfyjampvwxlkh\",\"yw\":\"dataipmnqrbyq\",\"wgylolvxw\":\"databowcjkarggvyu\"}}")
            .toObject(SqlMISource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SqlMISource model = new SqlMISource().withSourceRetryCount("dataykfjga")
            .withSourceRetryWait("datayscky")
            .withMaxConcurrentConnections("datayj")
            .withDisableMetricsCollection("datamfwrqzizggvmuotc")
            .withQueryTimeout("datayuqdz")
            .withAdditionalColumns("dataojz")
            .withSqlReaderQuery("datajrfk")
            .withSqlReaderStoredProcedureName("datac")
            .withStoredProcedureParameters("dataelokxklgl")
            .withIsolationLevel("dataregjo")
            .withProduceAdditionalTypes("datan")
            .withPartitionOption("datasbmvrmenrcqi")
            .withPartitionSettings(new SqlPartitionSettings().withPartitionColumnName("datavp")
                .withPartitionUpperBound("dataduiuvingm")
                .withPartitionLowerBound("dataqy"));
        model = BinaryData.fromObject(model).toObject(SqlMISource.class);
    }
}
