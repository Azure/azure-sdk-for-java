// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SqlMISource;
import com.azure.resourcemanager.datafactory.models.SqlPartitionSettings;

public final class SqlMISourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SqlMISource model = BinaryData.fromString(
            "{\"type\":\"SqlMISource\",\"sqlReaderQuery\":\"datad\",\"sqlReaderStoredProcedureName\":\"datalyhx\",\"storedProcedureParameters\":\"dataqoe\",\"isolationLevel\":\"databoqozxnuxamxikh\",\"produceAdditionalTypes\":\"dataikglynbqpeojecb\",\"partitionOption\":\"datagw\",\"partitionSettings\":{\"partitionColumnName\":\"datatnywgtsodnxeirjt\",\"partitionUpperBound\":\"dataimcfrhtzgd\",\"partitionLowerBound\":\"datao\"},\"queryTimeout\":\"dataqo\",\"additionalColumns\":\"datalp\",\"sourceRetryCount\":\"datapbzyqbggxcyra\",\"sourceRetryWait\":\"datazuaxtbr\",\"maxConcurrentConnections\":\"datayurxlpuwxslzq\",\"disableMetricsCollection\":\"datax\",\"\":{\"bm\":\"datarurtnwbjjysupckh\",\"aoofltb\":\"dataemohlshm\",\"ddcftnxyrt\":\"dataayvmwaejxzkqc\"}}")
            .toObject(SqlMISource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SqlMISource model = new SqlMISource().withSourceRetryCount("datapbzyqbggxcyra")
            .withSourceRetryWait("datazuaxtbr").withMaxConcurrentConnections("datayurxlpuwxslzq")
            .withDisableMetricsCollection("datax").withQueryTimeout("dataqo").withAdditionalColumns("datalp")
            .withSqlReaderQuery("datad").withSqlReaderStoredProcedureName("datalyhx")
            .withStoredProcedureParameters("dataqoe").withIsolationLevel("databoqozxnuxamxikh")
            .withProduceAdditionalTypes("dataikglynbqpeojecb").withPartitionOption("datagw")
            .withPartitionSettings(new SqlPartitionSettings().withPartitionColumnName("datatnywgtsodnxeirjt")
                .withPartitionUpperBound("dataimcfrhtzgd").withPartitionLowerBound("datao"));
        model = BinaryData.fromObject(model).toObject(SqlMISource.class);
    }
}
