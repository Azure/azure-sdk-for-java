// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.ConnectionType;
import com.azure.resourcemanager.datafactory.models.MapperAttributeReference;
import com.azure.resourcemanager.datafactory.models.MapperConnectionReference;
import org.junit.jupiter.api.Assertions;

public final class MapperAttributeReferenceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MapperAttributeReference model =
            BinaryData
                .fromString(
                    "{\"name\":\"oyjfqipu\",\"entity\":\"znclkfkeebgv\",\"entityConnectionReference\":{\"connectionName\":\"m\",\"type\":\"linkedservicetype\"}}")
                .toObject(MapperAttributeReference.class);
        Assertions.assertEquals("oyjfqipu", model.name());
        Assertions.assertEquals("znclkfkeebgv", model.entity());
        Assertions.assertEquals("m", model.entityConnectionReference().connectionName());
        Assertions.assertEquals(ConnectionType.LINKEDSERVICETYPE, model.entityConnectionReference().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MapperAttributeReference model =
            new MapperAttributeReference()
                .withName("oyjfqipu")
                .withEntity("znclkfkeebgv")
                .withEntityConnectionReference(
                    new MapperConnectionReference().withConnectionName("m").withType(ConnectionType.LINKEDSERVICETYPE));
        model = BinaryData.fromObject(model).toObject(MapperAttributeReference.class);
        Assertions.assertEquals("oyjfqipu", model.name());
        Assertions.assertEquals("znclkfkeebgv", model.entity());
        Assertions.assertEquals("m", model.entityConnectionReference().connectionName());
        Assertions.assertEquals(ConnectionType.LINKEDSERVICETYPE, model.entityConnectionReference().type());
    }
}
