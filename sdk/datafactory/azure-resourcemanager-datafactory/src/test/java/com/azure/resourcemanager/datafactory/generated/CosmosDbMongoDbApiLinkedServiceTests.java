// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.CosmosDbMongoDbApiLinkedService;
import com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class CosmosDbMongoDbApiLinkedServiceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CosmosDbMongoDbApiLinkedService model = BinaryData.fromString(
            "{\"type\":\"CosmosDbMongoDbApi\",\"typeProperties\":{\"isServerVersionAbove32\":\"datasgbpjj\",\"connectionString\":\"datablbk\",\"database\":\"dataknivwbddn\"},\"version\":\"ctkjcqhxd\",\"connectVia\":{\"referenceName\":\"ttqils\",\"parameters\":{\"hxsfweyleiyemj\":\"dataqtj\",\"rndqymloslqgs\":\"datapszekdqqwcspf\"}},\"description\":\"nqqzqdvgn\",\"parameters\":{\"rwphbuzm\":{\"type\":\"SecureString\",\"defaultValue\":\"dataoynya\"},\"kctpaiw\":{\"type\":\"SecureString\",\"defaultValue\":\"dataltlbm\"}},\"annotations\":[\"datawyx\"],\"\":{\"wjfkmnjtkswmyjd\":\"dataimwnuvjdywpfx\",\"kiguvvaitkcen\":\"datacknsojtmpdkcb\",\"ssctnppx\":\"datawg\",\"wugonysemunvzmvn\":\"dataeysqen\"}}")
            .toObject(CosmosDbMongoDbApiLinkedService.class);
        Assertions.assertEquals("ctkjcqhxd", model.version());
        Assertions.assertEquals("ttqils", model.connectVia().referenceName());
        Assertions.assertEquals("nqqzqdvgn", model.description());
        Assertions.assertEquals(ParameterType.SECURE_STRING, model.parameters().get("rwphbuzm").type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CosmosDbMongoDbApiLinkedService model = new CosmosDbMongoDbApiLinkedService().withVersion("ctkjcqhxd")
            .withConnectVia(new IntegrationRuntimeReference().withReferenceName("ttqils")
                .withParameters(mapOf("hxsfweyleiyemj", "dataqtj", "rndqymloslqgs", "datapszekdqqwcspf")))
            .withDescription("nqqzqdvgn")
            .withParameters(mapOf("rwphbuzm",
                new ParameterSpecification().withType(ParameterType.SECURE_STRING).withDefaultValue("dataoynya"),
                "kctpaiw",
                new ParameterSpecification().withType(ParameterType.SECURE_STRING).withDefaultValue("dataltlbm")))
            .withAnnotations(Arrays.asList("datawyx"))
            .withIsServerVersionAbove32("datasgbpjj")
            .withConnectionString("datablbk")
            .withDatabase("dataknivwbddn");
        model = BinaryData.fromObject(model).toObject(CosmosDbMongoDbApiLinkedService.class);
        Assertions.assertEquals("ctkjcqhxd", model.version());
        Assertions.assertEquals("ttqils", model.connectVia().referenceName());
        Assertions.assertEquals("nqqzqdvgn", model.description());
        Assertions.assertEquals(ParameterType.SECURE_STRING, model.parameters().get("rwphbuzm").type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
