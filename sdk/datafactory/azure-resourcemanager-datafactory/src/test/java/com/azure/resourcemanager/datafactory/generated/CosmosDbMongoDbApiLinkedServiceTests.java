// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.CosmosDbMongoDbApiLinkedService;
import com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class CosmosDbMongoDbApiLinkedServiceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CosmosDbMongoDbApiLinkedService model = BinaryData.fromString(
            "{\"type\":\"CosmosDbMongoDbApi\",\"typeProperties\":{\"isServerVersionAbove32\":\"databjzxrpxji\",\"connectionString\":\"dataaup\",\"database\":\"datarvdo\"},\"connectVia\":{\"referenceName\":\"aqng\",\"parameters\":{\"highnxhgmfrnk\":\"datagcwwuusjjhtcyzn\",\"arjteqlujmmknia\":\"datasvwq\"}},\"description\":\"sttximeztasflgme\",\"parameters\":{\"wvzapybdeea\":{\"type\":\"Bool\",\"defaultValue\":\"datalerpt\"},\"bacpleirjrkakm\":{\"type\":\"SecureString\",\"defaultValue\":\"databp\"},\"azlxlbdukidgqeyq\":{\"type\":\"String\",\"defaultValue\":\"dataub\"},\"e\":{\"type\":\"Array\",\"defaultValue\":\"datapkypbekpardoad\"}},\"annotations\":[\"datagyhbzmgzsyt\",\"datapfslrx\"],\"\":{\"bpiqfstkdl\":\"datasbqr\",\"fkzlch\":\"datajzijxefydck\",\"lxnnit\":\"datakiwpadnh\",\"tfrdlfewexbrvb\":\"dataug\"}}")
            .toObject(CosmosDbMongoDbApiLinkedService.class);
        Assertions.assertEquals("aqng", model.connectVia().referenceName());
        Assertions.assertEquals("sttximeztasflgme", model.description());
        Assertions.assertEquals(ParameterType.BOOL, model.parameters().get("wvzapybdeea").type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CosmosDbMongoDbApiLinkedService model = new CosmosDbMongoDbApiLinkedService()
            .withConnectVia(new IntegrationRuntimeReference().withReferenceName("aqng")
                .withParameters(mapOf("highnxhgmfrnk", "datagcwwuusjjhtcyzn", "arjteqlujmmknia", "datasvwq")))
            .withDescription("sttximeztasflgme")
            .withParameters(mapOf("wvzapybdeea",
                new ParameterSpecification().withType(ParameterType.BOOL).withDefaultValue("datalerpt"),
                "bacpleirjrkakm",
                new ParameterSpecification().withType(ParameterType.SECURE_STRING).withDefaultValue("databp"),
                "azlxlbdukidgqeyq",
                new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("dataub"), "e",
                new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("datapkypbekpardoad")))
            .withAnnotations(Arrays.asList("datagyhbzmgzsyt", "datapfslrx")).withIsServerVersionAbove32("databjzxrpxji")
            .withConnectionString("dataaup").withDatabase("datarvdo");
        model = BinaryData.fromObject(model).toObject(CosmosDbMongoDbApiLinkedService.class);
        Assertions.assertEquals("aqng", model.connectVia().referenceName());
        Assertions.assertEquals("sttximeztasflgme", model.description());
        Assertions.assertEquals(ParameterType.BOOL, model.parameters().get("wvzapybdeea").type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
