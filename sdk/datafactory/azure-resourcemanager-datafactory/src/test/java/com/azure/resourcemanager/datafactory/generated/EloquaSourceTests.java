// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.EloquaSource;

public final class EloquaSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EloquaSource model = BinaryData.fromString(
            "{\"type\":\"EloquaSource\",\"query\":\"datamkpcmtsbande\",\"queryTimeout\":\"datalvuewrljmlod\",\"additionalColumns\":\"datazvtfyqeogwbs\",\"sourceRetryCount\":\"dataiwxhc\",\"sourceRetryWait\":\"datafgqmdbazggrgao\",\"maxConcurrentConnections\":\"datatbwapoy\",\"disableMetricsCollection\":\"datairlydsdm\",\"\":{\"xubguly\":\"datadqacgyv\",\"ohuabduf\":\"datajkasxpp\"}}")
            .toObject(EloquaSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EloquaSource model = new EloquaSource().withSourceRetryCount("dataiwxhc")
            .withSourceRetryWait("datafgqmdbazggrgao")
            .withMaxConcurrentConnections("datatbwapoy")
            .withDisableMetricsCollection("datairlydsdm")
            .withQueryTimeout("datalvuewrljmlod")
            .withAdditionalColumns("datazvtfyqeogwbs")
            .withQuery("datamkpcmtsbande");
        model = BinaryData.fromObject(model).toObject(EloquaSource.class);
    }
}
