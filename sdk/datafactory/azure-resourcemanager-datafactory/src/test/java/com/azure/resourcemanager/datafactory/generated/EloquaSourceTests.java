// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.EloquaSource;

public final class EloquaSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EloquaSource model = BinaryData.fromString(
            "{\"type\":\"kjithx\",\"query\":\"dataqrc\",\"queryTimeout\":\"dataovljtrmlxrqllug\",\"additionalColumns\":\"datambwdkziwwb\",\"sourceRetryCount\":\"datavpkvc\",\"sourceRetryWait\":\"datawcfshhck\",\"maxConcurrentConnections\":\"datafm\",\"disableMetricsCollection\":\"dataprtk\",\"\":{\"cugwkuhqbwgmznv\":\"datawuep\",\"qkieyqpubw\":\"datawcnj\",\"cjrbsq\":\"datazxetx\"}}")
            .toObject(EloquaSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EloquaSource model = new EloquaSource().withSourceRetryCount("datavpkvc")
            .withSourceRetryWait("datawcfshhck")
            .withMaxConcurrentConnections("datafm")
            .withDisableMetricsCollection("dataprtk")
            .withQueryTimeout("dataovljtrmlxrqllug")
            .withAdditionalColumns("datambwdkziwwb")
            .withQuery("dataqrc");
        model = BinaryData.fromObject(model).toObject(EloquaSource.class);
    }
}
