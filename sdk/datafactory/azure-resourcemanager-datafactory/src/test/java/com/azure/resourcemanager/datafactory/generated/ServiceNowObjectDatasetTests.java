// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.ServiceNowObjectDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ServiceNowObjectDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServiceNowObjectDataset model = BinaryData.fromString(
            "{\"type\":\"yciwbnqinr\",\"typeProperties\":{\"tableName\":\"datamjogxgr\"},\"description\":\"vvmrn\",\"structure\":\"datadijoxqswsychdc\",\"schema\":\"datagcmpnc\",\"linkedServiceName\":{\"referenceName\":\"qbgbnoqnow\",\"parameters\":{\"wjekyq\":\"dataeytz\",\"polnvgpppdilbdvx\":\"datarv\",\"x\":\"datafhlzzgaps\"}},\"parameters\":{\"roy\":{\"type\":\"Float\",\"defaultValue\":\"datacrmzquuzywkgoux\"},\"scifrzcwuejmxlfz\":{\"type\":\"String\",\"defaultValue\":\"dataesywywnvgy\"},\"hchraunjovlx\":{\"type\":\"Int\",\"defaultValue\":\"datayrgr\"},\"tlhzkrazk\":{\"type\":\"String\",\"defaultValue\":\"datamvzpniqwxmrgmnk\"}},\"annotations\":[\"datayecznvzmsvznghe\"],\"folder\":{\"name\":\"ehgvmmnoyz\"},\"\":{\"fu\":\"datanypluzypkfc\"}}")
            .toObject(ServiceNowObjectDataset.class);
        Assertions.assertEquals("vvmrn", model.description());
        Assertions.assertEquals("qbgbnoqnow", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.FLOAT, model.parameters().get("roy").type());
        Assertions.assertEquals("ehgvmmnoyz", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServiceNowObjectDataset model = new ServiceNowObjectDataset().withDescription("vvmrn")
            .withStructure("datadijoxqswsychdc")
            .withSchema("datagcmpnc")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("qbgbnoqnow")
                .withParameters(mapOf("wjekyq", "dataeytz", "polnvgpppdilbdvx", "datarv", "x", "datafhlzzgaps")))
            .withParameters(mapOf("roy",
                new ParameterSpecification().withType(ParameterType.FLOAT).withDefaultValue("datacrmzquuzywkgoux"),
                "scifrzcwuejmxlfz",
                new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("dataesywywnvgy"),
                "hchraunjovlx", new ParameterSpecification().withType(ParameterType.INT).withDefaultValue("datayrgr"),
                "tlhzkrazk",
                new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("datamvzpniqwxmrgmnk")))
            .withAnnotations(Arrays.asList("datayecznvzmsvznghe"))
            .withFolder(new DatasetFolder().withName("ehgvmmnoyz"))
            .withTableName("datamjogxgr");
        model = BinaryData.fromObject(model).toObject(ServiceNowObjectDataset.class);
        Assertions.assertEquals("vvmrn", model.description());
        Assertions.assertEquals("qbgbnoqnow", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.FLOAT, model.parameters().get("roy").type());
        Assertions.assertEquals("ehgvmmnoyz", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
