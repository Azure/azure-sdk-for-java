// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DistcpSettings;
import com.azure.resourcemanager.datafactory.models.HdfsSource;

public final class HdfsSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HdfsSource model =
            BinaryData
                .fromString(
                    "{\"type\":\"HdfsSource\",\"recursive\":\"datay\",\"distcpSettings\":{\"resourceManagerEndpoint\":\"datacwu\",\"tempScriptPath\":\"dataanpoy\",\"distcpOptions\":\"datajonilnyhze\"},\"sourceRetryCount\":\"datatdcloq\",\"sourceRetryWait\":\"datazdb\",\"maxConcurrentConnections\":\"datae\",\"disableMetricsCollection\":\"datahfmzeufjzqaqeqc\",\"\":{\"vaoazfkykkcq\":\"dataqcwzytomnqcthgq\",\"lllzsqolckwhg\":\"datafnvjgixsjhinpyek\",\"xzdohfvxavhfhl\":\"datafbnnhwpnloi\"}}")
                .toObject(HdfsSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HdfsSource model =
            new HdfsSource()
                .withSourceRetryCount("datatdcloq")
                .withSourceRetryWait("datazdb")
                .withMaxConcurrentConnections("datae")
                .withDisableMetricsCollection("datahfmzeufjzqaqeqc")
                .withRecursive("datay")
                .withDistcpSettings(
                    new DistcpSettings()
                        .withResourceManagerEndpoint("datacwu")
                        .withTempScriptPath("dataanpoy")
                        .withDistcpOptions("datajonilnyhze"));
        model = BinaryData.fromObject(model).toObject(HdfsSource.class);
    }
}
