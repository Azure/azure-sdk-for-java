// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.OracleServiceCloudObjectDataset;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class OracleServiceCloudObjectDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OracleServiceCloudObjectDataset model = BinaryData.fromString(
            "{\"type\":\"shm\",\"typeProperties\":{\"tableName\":\"datacthype\"},\"description\":\"iscsdvkymktcw\",\"structure\":\"datavoxgzegnglafnfga\",\"schema\":\"dataghddc\",\"linkedServiceName\":{\"referenceName\":\"zwxuxorrutuhvem\",\"parameters\":{\"vwxlxo\":\"datassolqy\",\"vgdojcvzfcmxmjp\":\"datavrkqv\",\"xp\":\"dataakjdtuodocgquqxn\"}},\"parameters\":{\"kuzabrsoih\":{\"type\":\"Bool\",\"defaultValue\":\"dataniiontqikdipkxs\"},\"oadoh\":{\"type\":\"Array\",\"defaultValue\":\"datajdtacvsynssxylsu\"},\"qqnzk\":{\"type\":\"Int\",\"defaultValue\":\"dataiehkxgfu\"}},\"annotations\":[\"dataq\"],\"folder\":{\"name\":\"ipdnl\"},\"\":{\"pwwgzeylzp\":\"datatf\",\"o\":\"dataimxacrkt\",\"quarb\":\"datagynsixgzbbnug\",\"zbhg\":\"datauvqbeyxwrmupzpe\"}}")
            .toObject(OracleServiceCloudObjectDataset.class);
        Assertions.assertEquals("iscsdvkymktcw", model.description());
        Assertions.assertEquals("zwxuxorrutuhvem", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.BOOL, model.parameters().get("kuzabrsoih").type());
        Assertions.assertEquals("ipdnl", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OracleServiceCloudObjectDataset model = new OracleServiceCloudObjectDataset().withDescription("iscsdvkymktcw")
            .withStructure("datavoxgzegnglafnfga")
            .withSchema("dataghddc")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("zwxuxorrutuhvem")
                .withParameters(
                    mapOf("vwxlxo", "datassolqy", "vgdojcvzfcmxmjp", "datavrkqv", "xp", "dataakjdtuodocgquqxn")))
            .withParameters(mapOf("kuzabrsoih",
                new ParameterSpecification().withType(ParameterType.BOOL).withDefaultValue("dataniiontqikdipkxs"),
                "oadoh",
                new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("datajdtacvsynssxylsu"),
                "qqnzk", new ParameterSpecification().withType(ParameterType.INT).withDefaultValue("dataiehkxgfu")))
            .withAnnotations(Arrays.asList("dataq"))
            .withFolder(new DatasetFolder().withName("ipdnl"))
            .withTableName("datacthype");
        model = BinaryData.fromObject(model).toObject(OracleServiceCloudObjectDataset.class);
        Assertions.assertEquals("iscsdvkymktcw", model.description());
        Assertions.assertEquals("zwxuxorrutuhvem", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.BOOL, model.parameters().get("kuzabrsoih").type());
        Assertions.assertEquals("ipdnl", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
