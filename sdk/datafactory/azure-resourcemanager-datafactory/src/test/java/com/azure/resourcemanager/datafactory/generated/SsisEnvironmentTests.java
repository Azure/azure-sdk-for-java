// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SsisEnvironment;
import com.azure.resourcemanager.datafactory.models.SsisVariable;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SsisEnvironmentTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SsisEnvironment model = BinaryData.fromString(
            "{\"type\":\"Environment\",\"folderId\":2091655788926974870,\"variables\":[{\"id\":1139935650998469771,\"name\":\"muxppwpcfmgrmt\",\"description\":\"hzbbdwrjenco\",\"dataType\":\"ii\",\"sensitive\":false,\"value\":\"dtpljonmaj\",\"sensitiveValue\":\"bxxcdkhxjwtkftg\"}],\"id\":611124156830775043,\"name\":\"p\",\"description\":\"wsjpgb\"}")
            .toObject(SsisEnvironment.class);
        Assertions.assertEquals(611124156830775043L, model.id());
        Assertions.assertEquals("p", model.name());
        Assertions.assertEquals("wsjpgb", model.description());
        Assertions.assertEquals(2091655788926974870L, model.folderId());
        Assertions.assertEquals(1139935650998469771L, model.variables().get(0).id());
        Assertions.assertEquals("muxppwpcfmgrmt", model.variables().get(0).name());
        Assertions.assertEquals("hzbbdwrjenco", model.variables().get(0).description());
        Assertions.assertEquals("ii", model.variables().get(0).dataType());
        Assertions.assertEquals(false, model.variables().get(0).sensitive());
        Assertions.assertEquals("dtpljonmaj", model.variables().get(0).value());
        Assertions.assertEquals("bxxcdkhxjwtkftg", model.variables().get(0).sensitiveValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SsisEnvironment model = new SsisEnvironment().withId(611124156830775043L)
            .withName("p")
            .withDescription("wsjpgb")
            .withFolderId(2091655788926974870L)
            .withVariables(Arrays.asList(new SsisVariable().withId(1139935650998469771L)
                .withName("muxppwpcfmgrmt")
                .withDescription("hzbbdwrjenco")
                .withDataType("ii")
                .withSensitive(false)
                .withValue("dtpljonmaj")
                .withSensitiveValue("bxxcdkhxjwtkftg")));
        model = BinaryData.fromObject(model).toObject(SsisEnvironment.class);
        Assertions.assertEquals(611124156830775043L, model.id());
        Assertions.assertEquals("p", model.name());
        Assertions.assertEquals("wsjpgb", model.description());
        Assertions.assertEquals(2091655788926974870L, model.folderId());
        Assertions.assertEquals(1139935650998469771L, model.variables().get(0).id());
        Assertions.assertEquals("muxppwpcfmgrmt", model.variables().get(0).name());
        Assertions.assertEquals("hzbbdwrjenco", model.variables().get(0).description());
        Assertions.assertEquals("ii", model.variables().get(0).dataType());
        Assertions.assertEquals(false, model.variables().get(0).sensitive());
        Assertions.assertEquals("dtpljonmaj", model.variables().get(0).value());
        Assertions.assertEquals("bxxcdkhxjwtkftg", model.variables().get(0).sensitiveValue());
    }
}
