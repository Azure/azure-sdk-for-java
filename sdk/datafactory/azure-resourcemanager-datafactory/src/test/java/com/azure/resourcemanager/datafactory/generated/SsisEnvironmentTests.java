// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SsisEnvironment;
import com.azure.resourcemanager.datafactory.models.SsisVariable;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SsisEnvironmentTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SsisEnvironment model = BinaryData.fromString(
            "{\"type\":\"Environment\",\"folderId\":832771683225896076,\"variables\":[{\"id\":3326667507931302810,\"name\":\"ejdhrodyiitredd\",\"description\":\"goppybs\",\"dataType\":\"kgaxmhaszjietfst\",\"sensitive\":true,\"value\":\"vzcnlk\",\"sensitiveValue\":\"rjtkreiso\"},{\"id\":8273566367613483537,\"name\":\"mgrbkobmgwa\",\"description\":\"mqpaalwidt\",\"dataType\":\"wedj\",\"sensitive\":true,\"value\":\"ppgijn\",\"sensitiveValue\":\"ba\"},{\"id\":8583337090822703542,\"name\":\"gaxpy\",\"description\":\"mccqdss\",\"dataType\":\"gersdud\",\"sensitive\":false,\"value\":\"mnfgzmxtxfuhxy\",\"sensitiveValue\":\"fyzevcknglf\"}],\"id\":926387397922110716,\"name\":\"fysffrpjf\",\"description\":\"yx\"}")
            .toObject(SsisEnvironment.class);
        Assertions.assertEquals(926387397922110716L, model.id());
        Assertions.assertEquals("fysffrpjf", model.name());
        Assertions.assertEquals("yx", model.description());
        Assertions.assertEquals(832771683225896076L, model.folderId());
        Assertions.assertEquals(3326667507931302810L, model.variables().get(0).id());
        Assertions.assertEquals("ejdhrodyiitredd", model.variables().get(0).name());
        Assertions.assertEquals("goppybs", model.variables().get(0).description());
        Assertions.assertEquals("kgaxmhaszjietfst", model.variables().get(0).dataType());
        Assertions.assertEquals(true, model.variables().get(0).sensitive());
        Assertions.assertEquals("vzcnlk", model.variables().get(0).value());
        Assertions.assertEquals("rjtkreiso", model.variables().get(0).sensitiveValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SsisEnvironment model = new SsisEnvironment().withId(926387397922110716L).withName("fysffrpjf")
            .withDescription("yx").withFolderId(832771683225896076L)
            .withVariables(Arrays.asList(
                new SsisVariable().withId(3326667507931302810L).withName("ejdhrodyiitredd").withDescription("goppybs")
                    .withDataType("kgaxmhaszjietfst").withSensitive(true).withValue("vzcnlk")
                    .withSensitiveValue("rjtkreiso"),
                new SsisVariable().withId(8273566367613483537L).withName("mgrbkobmgwa").withDescription("mqpaalwidt")
                    .withDataType("wedj").withSensitive(true).withValue("ppgijn").withSensitiveValue("ba"),
                new SsisVariable().withId(8583337090822703542L).withName("gaxpy").withDescription("mccqdss")
                    .withDataType("gersdud").withSensitive(false).withValue("mnfgzmxtxfuhxy")
                    .withSensitiveValue("fyzevcknglf")));
        model = BinaryData.fromObject(model).toObject(SsisEnvironment.class);
        Assertions.assertEquals(926387397922110716L, model.id());
        Assertions.assertEquals("fysffrpjf", model.name());
        Assertions.assertEquals("yx", model.description());
        Assertions.assertEquals(832771683225896076L, model.folderId());
        Assertions.assertEquals(3326667507931302810L, model.variables().get(0).id());
        Assertions.assertEquals("ejdhrodyiitredd", model.variables().get(0).name());
        Assertions.assertEquals("goppybs", model.variables().get(0).description());
        Assertions.assertEquals("kgaxmhaszjietfst", model.variables().get(0).dataType());
        Assertions.assertEquals(true, model.variables().get(0).sensitive());
        Assertions.assertEquals("vzcnlk", model.variables().get(0).value());
        Assertions.assertEquals("rjtkreiso", model.variables().get(0).sensitiveValue());
    }
}
