// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SsisEnvironment;
import com.azure.resourcemanager.datafactory.models.SsisVariable;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SsisEnvironmentTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SsisEnvironment model = BinaryData.fromString(
            "{\"type\":\"Folder\",\"folderId\":6476730301086416593,\"variables\":[{\"id\":1857416707926036492,\"name\":\"zuwwzc\",\"description\":\"gbj\",\"dataType\":\"lnqalbsoqxaj\",\"sensitive\":false,\"value\":\"aibqjb\",\"sensitiveValue\":\"bwxuypcuriwll\"}],\"id\":7858141306545546483,\"name\":\"dqtzs\",\"description\":\"lwjxrymiysgh\"}")
            .toObject(SsisEnvironment.class);
        Assertions.assertEquals(7858141306545546483L, model.id());
        Assertions.assertEquals("dqtzs", model.name());
        Assertions.assertEquals("lwjxrymiysgh", model.description());
        Assertions.assertEquals(6476730301086416593L, model.folderId());
        Assertions.assertEquals(1857416707926036492L, model.variables().get(0).id());
        Assertions.assertEquals("zuwwzc", model.variables().get(0).name());
        Assertions.assertEquals("gbj", model.variables().get(0).description());
        Assertions.assertEquals("lnqalbsoqxaj", model.variables().get(0).dataType());
        Assertions.assertEquals(false, model.variables().get(0).sensitive());
        Assertions.assertEquals("aibqjb", model.variables().get(0).value());
        Assertions.assertEquals("bwxuypcuriwll", model.variables().get(0).sensitiveValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SsisEnvironment model = new SsisEnvironment().withId(7858141306545546483L)
            .withName("dqtzs")
            .withDescription("lwjxrymiysgh")
            .withFolderId(6476730301086416593L)
            .withVariables(Arrays.asList(new SsisVariable().withId(1857416707926036492L)
                .withName("zuwwzc")
                .withDescription("gbj")
                .withDataType("lnqalbsoqxaj")
                .withSensitive(false)
                .withValue("aibqjb")
                .withSensitiveValue("bwxuypcuriwll")));
        model = BinaryData.fromObject(model).toObject(SsisEnvironment.class);
        Assertions.assertEquals(7858141306545546483L, model.id());
        Assertions.assertEquals("dqtzs", model.name());
        Assertions.assertEquals("lwjxrymiysgh", model.description());
        Assertions.assertEquals(6476730301086416593L, model.folderId());
        Assertions.assertEquals(1857416707926036492L, model.variables().get(0).id());
        Assertions.assertEquals("zuwwzc", model.variables().get(0).name());
        Assertions.assertEquals("gbj", model.variables().get(0).description());
        Assertions.assertEquals("lnqalbsoqxaj", model.variables().get(0).dataType());
        Assertions.assertEquals(false, model.variables().get(0).sensitive());
        Assertions.assertEquals("aibqjb", model.variables().get(0).value());
        Assertions.assertEquals("bwxuypcuriwll", model.variables().get(0).sensitiveValue());
    }
}
