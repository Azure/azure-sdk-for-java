// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SsisEnvironment;
import com.azure.resourcemanager.datafactory.models.SsisVariable;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SsisEnvironmentTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SsisEnvironment model = BinaryData.fromString(
            "{\"type\":\"Environment\",\"folderId\":8944070795440540678,\"variables\":[{\"id\":8456784201907262272,\"name\":\"nwnlcfzfjdzkfth\",\"description\":\"dphdb\",\"dataType\":\"etfgkzqbvh\",\"sensitive\":false,\"value\":\"ymkgjsry\",\"sensitiveValue\":\"f\"},{\"id\":1063195116593218900,\"name\":\"pftkgmbmvxbiubz\",\"description\":\"psotbame\",\"dataType\":\"busnaq\",\"sensitive\":false,\"value\":\"uhyncppmmwhje\",\"sensitiveValue\":\"urgipv\"},{\"id\":9204988078857470987,\"name\":\"psmckgpxd\",\"description\":\"cqmguvdk\",\"dataType\":\"ihrfcowla\",\"sensitive\":true,\"value\":\"fywxjjylaqhxevf\",\"sensitiveValue\":\"rvjhwgkynxlwrj\"}],\"id\":1315044173320403578,\"name\":\"mcktkal\",\"description\":\"i\"}")
            .toObject(SsisEnvironment.class);
        Assertions.assertEquals(1315044173320403578L, model.id());
        Assertions.assertEquals("mcktkal", model.name());
        Assertions.assertEquals("i", model.description());
        Assertions.assertEquals(8944070795440540678L, model.folderId());
        Assertions.assertEquals(8456784201907262272L, model.variables().get(0).id());
        Assertions.assertEquals("nwnlcfzfjdzkfth", model.variables().get(0).name());
        Assertions.assertEquals("dphdb", model.variables().get(0).description());
        Assertions.assertEquals("etfgkzqbvh", model.variables().get(0).dataType());
        Assertions.assertEquals(false, model.variables().get(0).sensitive());
        Assertions.assertEquals("ymkgjsry", model.variables().get(0).value());
        Assertions.assertEquals("f", model.variables().get(0).sensitiveValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SsisEnvironment model = new SsisEnvironment().withId(1315044173320403578L)
            .withName("mcktkal")
            .withDescription("i")
            .withFolderId(8944070795440540678L)
            .withVariables(Arrays.asList(
                new SsisVariable().withId(8456784201907262272L)
                    .withName("nwnlcfzfjdzkfth")
                    .withDescription("dphdb")
                    .withDataType("etfgkzqbvh")
                    .withSensitive(false)
                    .withValue("ymkgjsry")
                    .withSensitiveValue("f"),
                new SsisVariable().withId(1063195116593218900L)
                    .withName("pftkgmbmvxbiubz")
                    .withDescription("psotbame")
                    .withDataType("busnaq")
                    .withSensitive(false)
                    .withValue("uhyncppmmwhje")
                    .withSensitiveValue("urgipv"),
                new SsisVariable().withId(9204988078857470987L)
                    .withName("psmckgpxd")
                    .withDescription("cqmguvdk")
                    .withDataType("ihrfcowla")
                    .withSensitive(true)
                    .withValue("fywxjjylaqhxevf")
                    .withSensitiveValue("rvjhwgkynxlwrj")));
        model = BinaryData.fromObject(model).toObject(SsisEnvironment.class);
        Assertions.assertEquals(1315044173320403578L, model.id());
        Assertions.assertEquals("mcktkal", model.name());
        Assertions.assertEquals("i", model.description());
        Assertions.assertEquals(8944070795440540678L, model.folderId());
        Assertions.assertEquals(8456784201907262272L, model.variables().get(0).id());
        Assertions.assertEquals("nwnlcfzfjdzkfth", model.variables().get(0).name());
        Assertions.assertEquals("dphdb", model.variables().get(0).description());
        Assertions.assertEquals("etfgkzqbvh", model.variables().get(0).dataType());
        Assertions.assertEquals(false, model.variables().get(0).sensitive());
        Assertions.assertEquals("ymkgjsry", model.variables().get(0).value());
        Assertions.assertEquals("f", model.variables().get(0).sensitiveValue());
    }
}
