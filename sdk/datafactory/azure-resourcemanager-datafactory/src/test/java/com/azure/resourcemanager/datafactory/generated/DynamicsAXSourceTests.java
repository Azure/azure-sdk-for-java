// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DynamicsAXSource;

public final class DynamicsAXSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DynamicsAXSource model = BinaryData.fromString(
            "{\"type\":\"DynamicsAXSource\",\"query\":\"datalyi\",\"httpRequestTimeout\":\"datazgmxqa\",\"queryTimeout\":\"dataypxgoypo\",\"additionalColumns\":\"dataoyyfysn\",\"sourceRetryCount\":\"datajnl\",\"sourceRetryWait\":\"datacmhonojese\",\"maxConcurrentConnections\":\"dataxel\",\"disableMetricsCollection\":\"dataxwmpziy\",\"\":{\"wpcutzlvx\":\"datajswedkfofyfwpu\",\"vddwgozr\":\"dataolvedzrjkrpor\",\"dyhcwcgvyuuse\":\"dataglkmgcxmkrldfo\"}}")
            .toObject(DynamicsAXSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DynamicsAXSource model = new DynamicsAXSource().withSourceRetryCount("datajnl")
            .withSourceRetryWait("datacmhonojese")
            .withMaxConcurrentConnections("dataxel")
            .withDisableMetricsCollection("dataxwmpziy")
            .withQueryTimeout("dataypxgoypo")
            .withAdditionalColumns("dataoyyfysn")
            .withQuery("datalyi")
            .withHttpRequestTimeout("datazgmxqa");
        model = BinaryData.fromObject(model).toObject(DynamicsAXSource.class);
    }
}
