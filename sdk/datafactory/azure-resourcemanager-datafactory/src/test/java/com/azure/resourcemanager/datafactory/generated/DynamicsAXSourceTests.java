// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DynamicsAXSource;

public final class DynamicsAXSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DynamicsAXSource model = BinaryData.fromString(
            "{\"type\":\"j\",\"query\":\"datatsgvvizayg\",\"httpRequestTimeout\":\"dataml\",\"queryTimeout\":\"dataijpayvlnzwicqopw\",\"additionalColumns\":\"datadleegwlhanyueizh\",\"sourceRetryCount\":\"datax\",\"sourceRetryWait\":\"datahxiotlfzbj\",\"maxConcurrentConnections\":\"datauqkb\",\"disableMetricsCollection\":\"dataicoaysargqkgaus\",\"\":{\"mlkxvfejdgojavqe\":\"datadyfyjee\",\"smnxcc\":\"dataekkvayyyowj\",\"hlokhmkqy\":\"datas\",\"ddwfhfjfato\":\"dataa\"}}")
            .toObject(DynamicsAXSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DynamicsAXSource model = new DynamicsAXSource().withSourceRetryCount("datax")
            .withSourceRetryWait("datahxiotlfzbj")
            .withMaxConcurrentConnections("datauqkb")
            .withDisableMetricsCollection("dataicoaysargqkgaus")
            .withQueryTimeout("dataijpayvlnzwicqopw")
            .withAdditionalColumns("datadleegwlhanyueizh")
            .withQuery("datatsgvvizayg")
            .withHttpRequestTimeout("dataml");
        model = BinaryData.fromObject(model).toObject(DynamicsAXSource.class);
    }
}
