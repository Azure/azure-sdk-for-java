// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DynamicsAXSource;

public final class DynamicsAXSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DynamicsAXSource model = BinaryData.fromString(
            "{\"type\":\"DynamicsAXSource\",\"query\":\"datarg\",\"httpRequestTimeout\":\"datayoh\",\"queryTimeout\":\"dataruvvlwhtfscoup\",\"additionalColumns\":\"dataeywbhxhawkwcf\",\"sourceRetryCount\":\"dataqexd\",\"sourceRetryWait\":\"datacvkwwjjotfun\",\"maxConcurrentConnections\":\"datauejxvrwalekqedof\",\"disableMetricsCollection\":\"databxmlai\",\"\":{\"ib\":\"datahlpf\",\"gzy\":\"datalmihvzdaycmen\",\"lvgqlexwqwbbell\":\"datal\"}}")
            .toObject(DynamicsAXSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DynamicsAXSource model = new DynamicsAXSource().withSourceRetryCount("dataqexd")
            .withSourceRetryWait("datacvkwwjjotfun").withMaxConcurrentConnections("datauejxvrwalekqedof")
            .withDisableMetricsCollection("databxmlai").withQueryTimeout("dataruvvlwhtfscoup")
            .withAdditionalColumns("dataeywbhxhawkwcf").withQuery("datarg").withHttpRequestTimeout("datayoh");
        model = BinaryData.fromObject(model).toObject(DynamicsAXSource.class);
    }
}
