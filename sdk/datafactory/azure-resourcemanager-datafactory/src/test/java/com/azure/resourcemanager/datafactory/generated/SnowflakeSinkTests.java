// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SnowflakeImportCopyCommand;
import com.azure.resourcemanager.datafactory.models.SnowflakeSink;
import java.util.HashMap;
import java.util.Map;

public final class SnowflakeSinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SnowflakeSink model = BinaryData.fromString(
            "{\"type\":\"SnowflakeSink\",\"preCopyScript\":\"datazqtimqics\",\"importSettings\":{\"type\":\"SnowflakeImportCopyCommand\",\"additionalCopyOptions\":{\"ujwntnfoqwu\":\"datapjcpdtktfpjkx\",\"pnsyedpyrp\":\"dataoraxbeam\",\"odifghdgsyhncxoq\":\"datapslcfwgrzzqf\",\"soxxoqyik\":\"datatjzdpllgllvkorg\"},\"additionalFormatOptions\":{\"mttxqxvmybqjlg\":\"datao\",\"sdccmdplhzjiqi\":\"datalf\"},\"storageIntegration\":\"dataiwrhmzkxrqzgshqx\",\"\":{\"fslawimhoaqj\":\"datanu\",\"mdaiv\":\"datalhlpz\",\"zdipnhbs\":\"datazqz\",\"mnoasyyadyf\":\"datarlrcc\"}},\"writeBatchSize\":\"datatllnzcmdgsvaek\",\"writeBatchTimeout\":\"datavwiwtykprrddben\",\"sinkRetryCount\":\"datahfszmxposmqscvy\",\"sinkRetryWait\":\"datadkpdleeslj\",\"maxConcurrentConnections\":\"datapsubxggknmvkniqo\",\"disableMetricsCollection\":\"datarcpsjeaz\",\"\":{\"sddy\":\"datacsbkmaluchbfrtaj\",\"nzp\":\"datadx\",\"fpggi\":\"datak\",\"wtkqofrkfccqj\":\"dataxsyufexivhjyxa\"}}")
            .toObject(SnowflakeSink.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SnowflakeSink model = new SnowflakeSink().withWriteBatchSize("datatllnzcmdgsvaek")
            .withWriteBatchTimeout("datavwiwtykprrddben")
            .withSinkRetryCount("datahfszmxposmqscvy")
            .withSinkRetryWait("datadkpdleeslj")
            .withMaxConcurrentConnections("datapsubxggknmvkniqo")
            .withDisableMetricsCollection("datarcpsjeaz")
            .withPreCopyScript("datazqtimqics")
            .withImportSettings(new SnowflakeImportCopyCommand()
                .withAdditionalCopyOptions(mapOf("ujwntnfoqwu", "datapjcpdtktfpjkx", "pnsyedpyrp", "dataoraxbeam",
                    "odifghdgsyhncxoq", "datapslcfwgrzzqf", "soxxoqyik", "datatjzdpllgllvkorg"))
                .withAdditionalFormatOptions(mapOf("mttxqxvmybqjlg", "datao", "sdccmdplhzjiqi", "datalf"))
                .withStorageIntegration("dataiwrhmzkxrqzgshqx"));
        model = BinaryData.fromObject(model).toObject(SnowflakeSink.class);
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
