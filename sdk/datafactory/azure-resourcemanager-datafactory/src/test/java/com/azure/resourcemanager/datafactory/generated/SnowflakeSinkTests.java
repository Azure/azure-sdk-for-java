// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SnowflakeImportCopyCommand;
import com.azure.resourcemanager.datafactory.models.SnowflakeSink;
import java.util.HashMap;
import java.util.Map;

public final class SnowflakeSinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SnowflakeSink model = BinaryData.fromString(
            "{\"type\":\"SnowflakeSink\",\"preCopyScript\":\"dataccqjenzloxazy\",\"importSettings\":{\"type\":\"SnowflakeImportCopyCommand\",\"additionalCopyOptions\":{\"wliitaieledmiup\":\"datavqaeyjozbdwflx\",\"pjlmsta\":\"datadletjiudcoktsgc\",\"k\":\"datagrebecxuuzeuklu\"},\"additionalFormatOptions\":{\"kttxvmbedvvmr\":\"dataamychwwrvvtj\",\"ai\":\"datanmgabfz\",\"plethekn\":\"datahylzwzhlbp\",\"xons\":\"datanamtvooaace\"},\"storageIntegration\":\"datactytytyrvtuxvzyw\",\"\":{\"dtv\":\"datammgbynvoy\",\"x\":\"datafqznvahpxdgyho\",\"wv\":\"dataptxvxf\",\"aztoias\":\"dataygc\"}},\"writeBatchSize\":\"datarihcamg\",\"writeBatchTimeout\":\"datatvkttitebmnx\",\"sinkRetryCount\":\"dataoadjooer\",\"sinkRetryWait\":\"datalzzmy\",\"maxConcurrentConnections\":\"datautqebpuoycawptxq\",\"disableMetricsCollection\":\"dataufdxpwj\",\"\":{\"cuk\":\"datavskpbuoc\",\"cepp\":\"datatcuvwwfgjjcaa\"}}")
            .toObject(SnowflakeSink.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SnowflakeSink model = new SnowflakeSink().withWriteBatchSize("datarihcamg")
            .withWriteBatchTimeout("datatvkttitebmnx")
            .withSinkRetryCount("dataoadjooer")
            .withSinkRetryWait("datalzzmy")
            .withMaxConcurrentConnections("datautqebpuoycawptxq")
            .withDisableMetricsCollection("dataufdxpwj")
            .withPreCopyScript("dataccqjenzloxazy")
            .withImportSettings(new SnowflakeImportCopyCommand()
                .withAdditionalCopyOptions(mapOf("wliitaieledmiup", "datavqaeyjozbdwflx", "pjlmsta",
                    "datadletjiudcoktsgc", "k", "datagrebecxuuzeuklu"))
                .withAdditionalFormatOptions(mapOf("kttxvmbedvvmr", "dataamychwwrvvtj", "ai", "datanmgabfz", "plethekn",
                    "datahylzwzhlbp", "xons", "datanamtvooaace"))
                .withStorageIntegration("datactytytyrvtuxvzyw"));
        model = BinaryData.fromObject(model).toObject(SnowflakeSink.class);
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
