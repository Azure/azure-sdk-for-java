// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.datafactory.DataFactoryManager;
import com.azure.resourcemanager.datafactory.models.ActivityOnInactiveMarkAs;
import com.azure.resourcemanager.datafactory.models.ActivityState;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.PipelineResource;
import com.azure.resourcemanager.datafactory.models.VariableType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PipelinesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"description\":\"xweuoklwtoecxndh\",\"activities\":[{\"type\":\"Activity\",\"name\":\"jcjocunanwutv\",\"description\":\"plhfwqdvd\",\"state\":\"Inactive\",\"onInactiveMarkAs\":\"Succeeded\",\"dependsOn\":[{\"activity\":\"ynbhltrmbhlhyqgf\",\"dependencyConditions\":[]}],\"userProperties\":[{\"name\":\"lr\",\"value\":\"datadqwpudvup\"},{\"name\":\"izztkl\",\"value\":\"datashdeehtjmdefkphs\"}],\"\":{\"opcnnpjulpw\":\"datavya\"}},{\"type\":\"Activity\",\"name\":\"mxwlwcurkfxzja\",\"description\":\"pbju\",\"state\":\"Active\",\"onInactiveMarkAs\":\"Skipped\",\"dependsOn\":[{\"activity\":\"uxmpnugujiw\",\"dependencyConditions\":[]},{\"activity\":\"duns\",\"dependencyConditions\":[]}],\"userProperties\":[{\"name\":\"obanxshltfghy\",\"value\":\"dataqxruqrobk\"},{\"name\":\"enpybuskvjb\",\"value\":\"datagkqudxvj\"},{\"name\":\"ndbinqqrkkgawn\",\"value\":\"dataeoeui\"}],\"\":{\"iskqxeclw\":\"datavaxyitnzpfdoete\",\"r\":\"dataso\"}},{\"type\":\"Activity\",\"name\":\"nfmxomupdqpcxiv\",\"description\":\"dvwmefjpoell\",\"state\":\"Active\",\"onInactiveMarkAs\":\"Failed\",\"dependsOn\":[{\"activity\":\"ltrztr\",\"dependencyConditions\":[]},{\"activity\":\"oyrjvrxyrxhfrsyc\",\"dependencyConditions\":[]},{\"activity\":\"qwefmqhtrzlvf\",\"dependencyConditions\":[]},{\"activity\":\"cphh\",\"dependencyConditions\":[]}],\"userProperties\":[{\"name\":\"awffrzgeobz\",\"value\":\"dataxzraihl\"}],\"\":{\"syceykvmlxhym\":\"dataojpnxzjrccy\"}}],\"parameters\":{\"tmpwzlb\":{\"type\":\"Bool\",\"defaultValue\":\"datapymroyygt\"},\"cfjw\":{\"type\":\"Bool\",\"defaultValue\":\"datavxdfkdwkhmno\"}},\"variables\":{\"zwrfdjx\":{\"type\":\"Array\",\"defaultValue\":\"datagmd\"},\"fisggoapxdmxwet\":{\"type\":\"Bool\",\"defaultValue\":\"datasmdrecrrbkmz\"},\"ctdxargqff\":{\"type\":\"String\",\"defaultValue\":\"dataxekql\"},\"lzbtqzjmi\":{\"type\":\"Bool\",\"defaultValue\":\"datafbfqw\"}},\"concurrency\":1818860634,\"annotations\":[\"dataf\"],\"runDimensions\":{\"ptsjecqwdosbsng\":\"datawumrfjj\"},\"folder\":{\"name\":\"cwdxvlk\"},\"policy\":{\"elapsedTimeMetric\":{\"duration\":\"datawrgr\"}}},\"name\":\"blrqeqcdikcqc\",\"type\":\"dtfthnjxid\",\"etag\":\"mm\",\"\":{\"kuqrrzuegin\":\"dataxgxtccmq\",\"racqmfji\":\"datalnteoapszxqnjxv\",\"oijtlhxlsxx\":\"datamcgz\"},\"id\":\"fgaicgqg\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DataFactoryManager manager = DataFactoryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PipelineResource response = manager.pipelines()
            .getWithResponse("iqq", "dgyshpvva", "vq", "wrchwdxdkvqqtfjj", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("fgaicgqg", response.id());
        Assertions.assertEquals("xweuoklwtoecxndh", response.description());
        Assertions.assertEquals("jcjocunanwutv", response.activities().get(0).name());
        Assertions.assertEquals("plhfwqdvd", response.activities().get(0).description());
        Assertions.assertEquals(ActivityState.INACTIVE, response.activities().get(0).state());
        Assertions.assertEquals(ActivityOnInactiveMarkAs.SUCCEEDED, response.activities().get(0).onInactiveMarkAs());
        Assertions.assertEquals("ynbhltrmbhlhyqgf", response.activities().get(0).dependsOn().get(0).activity());
        Assertions.assertEquals("lr", response.activities().get(0).userProperties().get(0).name());
        Assertions.assertEquals(ParameterType.BOOL, response.parameters().get("tmpwzlb").type());
        Assertions.assertEquals(VariableType.ARRAY, response.variables().get("zwrfdjx").type());
        Assertions.assertEquals(1818860634, response.concurrency());
        Assertions.assertEquals("cwdxvlk", response.folder().name());
    }
}
