// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.BlobEventTypes;
import com.azure.resourcemanager.datafactory.models.BlobEventsTrigger;
import com.azure.resourcemanager.datafactory.models.PipelineReference;
import com.azure.resourcemanager.datafactory.models.TriggerPipelineReference;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class BlobEventsTriggerTests {
    @Test
    public void testDeserialize() {
        BlobEventsTrigger model =
            BinaryData
                .fromString(
                    "{\"type\":\"BlobEventsTrigger\",\"typeProperties\":{\"blobPathBeginsWith\":\"gafxczvf\",\"blobPathEndsWith\":\"kwrt\",\"ignoreEmptyBlobs\":false,\"events\":[\"Microsoft.Storage.BlobCreated\",\"Microsoft.Storage.BlobDeleted\",\"Microsoft.Storage.BlobCreated\"],\"scope\":\"szrtlhpdhwynct\"},\"pipelines\":[{\"pipelineReference\":{\"referenceName\":\"njfmbbfnvjxit\",\"name\":\"vnk\"},\"parameters\":{}},{\"pipelineReference\":{\"referenceName\":\"lsmnihqlcoqksyi\",\"name\":\"hyxwbgbud\"},\"parameters\":{}},{\"pipelineReference\":{\"referenceName\":\"orbccqcdhth\",\"name\":\"vlirknuc\"},\"parameters\":{}},{\"pipelineReference\":{\"referenceName\":\"rdtnagzl\",\"name\":\"yaixihzqj\"},\"parameters\":{}}],\"description\":\"uy\",\"runtimeState\":\"Stopped\",\"annotations\":[],\"\":{}}")
                .toObject(BlobEventsTrigger.class);
        Assertions.assertEquals("uy", model.description());
        Assertions.assertEquals("njfmbbfnvjxit", model.pipelines().get(0).pipelineReference().referenceName());
        Assertions.assertEquals("vnk", model.pipelines().get(0).pipelineReference().name());
        Assertions.assertEquals("gafxczvf", model.blobPathBeginsWith());
        Assertions.assertEquals("kwrt", model.blobPathEndsWith());
        Assertions.assertEquals(false, model.ignoreEmptyBlobs());
        Assertions.assertEquals(BlobEventTypes.MICROSOFT_STORAGE_BLOB_CREATED, model.events().get(0));
        Assertions.assertEquals("szrtlhpdhwynct", model.scope());
    }

    @Test
    public void testSerialize() {
        BlobEventsTrigger model =
            new BlobEventsTrigger()
                .withDescription("uy")
                .withAnnotations(Arrays.asList())
                .withPipelines(
                    Arrays
                        .asList(
                            new TriggerPipelineReference()
                                .withPipelineReference(
                                    new PipelineReference().withReferenceName("njfmbbfnvjxit").withName("vnk"))
                                .withParameters(mapOf()),
                            new TriggerPipelineReference()
                                .withPipelineReference(
                                    new PipelineReference().withReferenceName("lsmnihqlcoqksyi").withName("hyxwbgbud"))
                                .withParameters(mapOf()),
                            new TriggerPipelineReference()
                                .withPipelineReference(
                                    new PipelineReference().withReferenceName("orbccqcdhth").withName("vlirknuc"))
                                .withParameters(mapOf()),
                            new TriggerPipelineReference()
                                .withPipelineReference(
                                    new PipelineReference().withReferenceName("rdtnagzl").withName("yaixihzqj"))
                                .withParameters(mapOf())))
                .withBlobPathBeginsWith("gafxczvf")
                .withBlobPathEndsWith("kwrt")
                .withIgnoreEmptyBlobs(false)
                .withEvents(
                    Arrays
                        .asList(
                            BlobEventTypes.MICROSOFT_STORAGE_BLOB_CREATED,
                            BlobEventTypes.MICROSOFT_STORAGE_BLOB_DELETED,
                            BlobEventTypes.MICROSOFT_STORAGE_BLOB_CREATED))
                .withScope("szrtlhpdhwynct");
        model = BinaryData.fromObject(model).toObject(BlobEventsTrigger.class);
        Assertions.assertEquals("uy", model.description());
        Assertions.assertEquals("njfmbbfnvjxit", model.pipelines().get(0).pipelineReference().referenceName());
        Assertions.assertEquals("vnk", model.pipelines().get(0).pipelineReference().name());
        Assertions.assertEquals("gafxczvf", model.blobPathBeginsWith());
        Assertions.assertEquals("kwrt", model.blobPathEndsWith());
        Assertions.assertEquals(false, model.ignoreEmptyBlobs());
        Assertions.assertEquals(BlobEventTypes.MICROSOFT_STORAGE_BLOB_CREATED, model.events().get(0));
        Assertions.assertEquals("szrtlhpdhwynct", model.scope());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
