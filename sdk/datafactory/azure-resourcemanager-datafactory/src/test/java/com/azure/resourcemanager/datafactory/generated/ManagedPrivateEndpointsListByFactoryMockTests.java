// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.datafactory.DataFactoryManager;
import com.azure.resourcemanager.datafactory.models.ManagedPrivateEndpointResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ManagedPrivateEndpointsListByFactoryMockTests {
    @Test
    public void testListByFactory() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"connectionState\":{\"actionsRequired\":\"ngxbkcir\",\"description\":\"ttzyruvgihwiezcf\",\"status\":\"jdplkuyo\"},\"fqdns\":[\"ftdljbjp\",\"vlgahpztvl\",\"ffymrzoupipdkgpt\",\"mym\"],\"groupId\":\"rtpznychwbzrbqpz\",\"isReserved\":false,\"privateLinkResourceId\":\"hbf\",\"provisioningState\":\"fytwrnvwaxmey\",\"\":{\"q\":\"datafqmhcqv\",\"ufuvt\":\"datazajdxmaim\",\"ieknxbcgnphe\":\"datapvwfll\",\"kekx\":\"datagkw\"}},\"name\":\"qvqpwz\",\"type\":\"tvmkjleela\",\"etag\":\"hgefvp\",\"id\":\"yvbyagqipr\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DataFactoryManager manager = DataFactoryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ManagedPrivateEndpointResource> response = manager.managedPrivateEndpoints()
            .listByFactory("jpy", "alt", "rhiinata", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("yvbyagqipr", response.iterator().next().id());
        Assertions.assertEquals("ftdljbjp", response.iterator().next().properties().fqdns().get(0));
        Assertions.assertEquals("rtpznychwbzrbqpz", response.iterator().next().properties().groupId());
        Assertions.assertEquals("hbf", response.iterator().next().properties().privateLinkResourceId());
    }
}
