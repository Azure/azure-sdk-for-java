// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.datafactory.DataFactoryManager;
import com.azure.resourcemanager.datafactory.models.ManagedPrivateEndpointResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ManagedPrivateEndpointsListByFactoryMockTests {
    @Test
    public void testListByFactory() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"connectionState\":{\"actionsRequired\":\"zpupkebwsesblsb\",\"description\":\"dfoprdytsgypvi\",\"status\":\"ooqzdoytnpkjp\"},\"fqdns\":[\"gnhzufhw\",\"tjnvrptqxksid\",\"jfh\"],\"groupId\":\"gizzrlx\",\"isReserved\":true,\"privateLinkResourceId\":\"xjqqozxtnowv\",\"provisioningState\":\"fypdxsy\",\"\":{\"mwvdmwaamqfeq\":\"datauueeokvq\",\"tqaomihrtbksd\":\"databjygnckeq\"}},\"name\":\"pxwficzzoxnl\",\"type\":\"xndsiqxzaolzko\",\"etag\":\"iragbbiukmkmthio\",\"id\":\"oh\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DataFactoryManager manager = DataFactoryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ManagedPrivateEndpointResource> response = manager.managedPrivateEndpoints()
            .listByFactory("twt", "kkhuusr", "utonp", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("oh", response.iterator().next().id());
        Assertions.assertEquals("gnhzufhw", response.iterator().next().properties().fqdns().get(0));
        Assertions.assertEquals("gizzrlx", response.iterator().next().properties().groupId());
        Assertions.assertEquals("xjqqozxtnowv", response.iterator().next().properties().privateLinkResourceId());
    }
}
