// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SalesforceV2Sink;
import com.azure.resourcemanager.datafactory.models.SalesforceV2SinkWriteBehavior;
import org.junit.jupiter.api.Assertions;

public final class SalesforceV2SinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SalesforceV2Sink model = BinaryData.fromString(
            "{\"type\":\"z\",\"writeBehavior\":\"Upsert\",\"externalIdFieldName\":\"datadqgavcwxwkjambf\",\"ignoreNullValues\":\"datasrxjfapiodsnz\",\"writeBatchSize\":\"dataqbgcxlg\",\"writeBatchTimeout\":\"dataxoymjx\",\"sinkRetryCount\":\"datantjhvcorobmqudz\",\"sinkRetryWait\":\"datazkkl\",\"maxConcurrentConnections\":\"datazkcygyqgvofhpgu\",\"disableMetricsCollection\":\"databkwwyfsqgass\",\"\":{\"ohpwnrmhlotknb\":\"dataazvrmulsje\",\"zqmudmefsxmdmlow\":\"datau\",\"meqirxwkomjsfkd\":\"datasixpwfvtwg\"}}")
            .toObject(SalesforceV2Sink.class);
        Assertions.assertEquals(SalesforceV2SinkWriteBehavior.UPSERT, model.writeBehavior());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SalesforceV2Sink model = new SalesforceV2Sink().withWriteBatchSize("dataqbgcxlg")
            .withWriteBatchTimeout("dataxoymjx")
            .withSinkRetryCount("datantjhvcorobmqudz")
            .withSinkRetryWait("datazkkl")
            .withMaxConcurrentConnections("datazkcygyqgvofhpgu")
            .withDisableMetricsCollection("databkwwyfsqgass")
            .withWriteBehavior(SalesforceV2SinkWriteBehavior.UPSERT)
            .withExternalIdFieldName("datadqgavcwxwkjambf")
            .withIgnoreNullValues("datasrxjfapiodsnz");
        model = BinaryData.fromObject(model).toObject(SalesforceV2Sink.class);
        Assertions.assertEquals(SalesforceV2SinkWriteBehavior.UPSERT, model.writeBehavior());
    }
}
