// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.CosmosDbSqlApiSource;

public final class CosmosDbSqlApiSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CosmosDbSqlApiSource model =
            BinaryData
                .fromString(
                    "{\"type\":\"CosmosDbSqlApiSource\",\"query\":\"datatrgyyjea\",\"pageSize\":\"datavjdunbaets\",\"preferredRegions\":\"datafegbvv\",\"detectDatetime\":\"datazygzrzubdtzs\",\"additionalColumns\":\"datahmhzpurnpkk\",\"sourceRetryCount\":\"datakzcfiosralbx\",\"sourceRetryWait\":\"dataxnluvcwuafbh\",\"maxConcurrentConnections\":\"dataaqf\",\"disableMetricsCollection\":\"datafpk\",\"\":{\"efvnvscyut\":\"databkvqogzawfoqdnxu\"}}")
                .toObject(CosmosDbSqlApiSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CosmosDbSqlApiSource model =
            new CosmosDbSqlApiSource()
                .withSourceRetryCount("datakzcfiosralbx")
                .withSourceRetryWait("dataxnluvcwuafbh")
                .withMaxConcurrentConnections("dataaqf")
                .withDisableMetricsCollection("datafpk")
                .withQuery("datatrgyyjea")
                .withPageSize("datavjdunbaets")
                .withPreferredRegions("datafegbvv")
                .withDetectDatetime("datazygzrzubdtzs")
                .withAdditionalColumns("datahmhzpurnpkk");
        model = BinaryData.fromObject(model).toObject(CosmosDbSqlApiSource.class);
    }
}
