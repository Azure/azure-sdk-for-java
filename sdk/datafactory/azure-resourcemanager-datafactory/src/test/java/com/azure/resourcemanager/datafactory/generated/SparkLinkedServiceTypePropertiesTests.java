// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.fluent.models.SparkLinkedServiceTypeProperties;
import com.azure.resourcemanager.datafactory.models.SecretBase;
import com.azure.resourcemanager.datafactory.models.SparkAuthenticationType;
import com.azure.resourcemanager.datafactory.models.SparkServerType;
import com.azure.resourcemanager.datafactory.models.SparkThriftTransportProtocol;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class SparkLinkedServiceTypePropertiesTests {
    @Test
    public void testDeserialize() {
        SparkLinkedServiceTypeProperties model =
            BinaryData
                .fromString(
                    "{\"serverType\":\"SharkServer\",\"thriftTransportProtocol\":\"Binary\",\"authenticationType\":\"WindowsAzureHDInsightService\",\"password\":{\"type\":\"SecretBase\"}}")
                .toObject(SparkLinkedServiceTypeProperties.class);
        Assertions.assertEquals(SparkServerType.SHARK_SERVER, model.serverType());
        Assertions.assertEquals(SparkThriftTransportProtocol.BINARY, model.thriftTransportProtocol());
        Assertions.assertEquals(SparkAuthenticationType.WINDOWS_AZURE_HDINSIGHT_SERVICE, model.authenticationType());
    }

    @Test
    public void testSerialize() {
        SparkLinkedServiceTypeProperties model =
            new SparkLinkedServiceTypeProperties()
                .withServerType(SparkServerType.SHARK_SERVER)
                .withThriftTransportProtocol(SparkThriftTransportProtocol.BINARY)
                .withAuthenticationType(SparkAuthenticationType.WINDOWS_AZURE_HDINSIGHT_SERVICE)
                .withPassword(new SecretBase());
        model = BinaryData.fromObject(model).toObject(SparkLinkedServiceTypeProperties.class);
        Assertions.assertEquals(SparkServerType.SHARK_SERVER, model.serverType());
        Assertions.assertEquals(SparkThriftTransportProtocol.BINARY, model.thriftTransportProtocol());
        Assertions.assertEquals(SparkAuthenticationType.WINDOWS_AZURE_HDINSIGHT_SERVICE, model.authenticationType());
    }
}
