// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.fluent.models.ManagedVirtualNetworkResourceInner;
import com.azure.resourcemanager.datafactory.models.ManagedVirtualNetwork;
import com.azure.resourcemanager.datafactory.models.ManagedVirtualNetworkListResponse;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ManagedVirtualNetworkListResponseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ManagedVirtualNetworkListResponse model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"vNetId\":\"yjtcvuwk\",\"alias\":\"iziesfuughtuq\",\"\":{\"cbuewmrswnjlxuz\":\"datajxeygtuhxu\",\"aqehg\":\"datahwpusxj\"}},\"name\":\"ohzjqatucoigeb\",\"type\":\"cnwfepbnwgfmxjg\",\"etag\":\"bjb\",\"id\":\"lfgtdysnaquflqbc\"},{\"properties\":{\"vNetId\":\"hamzjrwdkqze\",\"alias\":\"jleziunjx\",\"\":{\"qa\":\"dataantkwcegyamlbns\",\"m\":\"datajjvpilguooqja\",\"hrtdtpdelq\":\"dataitgueiookjbs\"}},\"name\":\"slmot\",\"type\":\"bnfxofvc\",\"etag\":\"gdirazf\",\"id\":\"ejwabmdujtmvco\"},{\"properties\":{\"vNetId\":\"xcmjurbu\",\"alias\":\"lkyqltqsrog\",\"\":{\"dfvclglxnfu\":\"datakffdjktsys\",\"ians\":\"datajtkbusqogsfika\"}},\"name\":\"rujtjiqxfzyjq\",\"type\":\"vwkpqh\",\"etag\":\"enuygbq\",\"id\":\"qekewvnqvcd\"}],\"nextLink\":\"uaucmf\"}")
            .toObject(ManagedVirtualNetworkListResponse.class);
        Assertions.assertEquals("lfgtdysnaquflqbc", model.value().get(0).id());
        Assertions.assertEquals("uaucmf", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ManagedVirtualNetworkListResponse model = new ManagedVirtualNetworkListResponse()
            .withValue(Arrays.asList(
                new ManagedVirtualNetworkResourceInner().withId("lfgtdysnaquflqbc")
                    .withProperties(new ManagedVirtualNetwork()
                        .withAdditionalProperties(mapOf("vNetId", "yjtcvuwk", "alias", "iziesfuughtuq"))),
                new ManagedVirtualNetworkResourceInner().withId("ejwabmdujtmvco")
                    .withProperties(new ManagedVirtualNetwork()
                        .withAdditionalProperties(mapOf("vNetId", "hamzjrwdkqze", "alias", "jleziunjx"))),
                new ManagedVirtualNetworkResourceInner().withId("qekewvnqvcd")
                    .withProperties(new ManagedVirtualNetwork()
                        .withAdditionalProperties(mapOf("vNetId", "xcmjurbu", "alias", "lkyqltqsrog")))))
            .withNextLink("uaucmf");
        model = BinaryData.fromObject(model).toObject(ManagedVirtualNetworkListResponse.class);
        Assertions.assertEquals("lfgtdysnaquflqbc", model.value().get(0).id());
        Assertions.assertEquals("uaucmf", model.nextLink());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
