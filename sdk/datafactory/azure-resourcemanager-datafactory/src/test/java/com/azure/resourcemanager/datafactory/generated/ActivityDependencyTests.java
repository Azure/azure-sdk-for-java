// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.ActivityDependency;
import com.azure.resourcemanager.datafactory.models.DependencyCondition;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ActivityDependencyTests {
    @Test
    public void testDeserialize() {
        ActivityDependency model =
            BinaryData
                .fromString(
                    "{\"activity\":\"q\",\"dependencyConditions\":[\"Succeeded\",\"Succeeded\",\"Skipped\"],\"\":{}}")
                .toObject(ActivityDependency.class);
        Assertions.assertEquals("q", model.activity());
        Assertions.assertEquals(DependencyCondition.SUCCEEDED, model.dependencyConditions().get(0));
    }

    @Test
    public void testSerialize() {
        ActivityDependency model =
            new ActivityDependency()
                .withActivity("q")
                .withDependencyConditions(
                    Arrays
                        .asList(
                            DependencyCondition.SUCCEEDED, DependencyCondition.SUCCEEDED, DependencyCondition.SKIPPED))
                .withAdditionalProperties(mapOf());
        model = BinaryData.fromObject(model).toObject(ActivityDependency.class);
        Assertions.assertEquals("q", model.activity());
        Assertions.assertEquals(DependencyCondition.SUCCEEDED, model.dependencyConditions().get(0));
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
