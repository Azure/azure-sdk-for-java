// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.core.util.serializer.JacksonAdapter;
import com.azure.core.util.serializer.SerializerEncoding;
import com.azure.resourcemanager.datafactory.fluent.models.SelfHostedIntegrationRuntimeNodeInner;
import com.azure.resourcemanager.datafactory.models.LinkedIntegrationRuntime;
import com.azure.resourcemanager.datafactory.models.SelfHostedIntegrationRuntimeStatus;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

public final class SelfHostedIntegrationRuntimeStatusTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SelfHostedIntegrationRuntimeStatus model = BinaryData.fromString(
            "{\"type\":\"SelfHosted\",\"typeProperties\":{\"createTime\":\"2021-04-28T10:27:33Z\",\"taskQueueId\":\"wzdlbbczt\",\"internalChannelEncryption\":\"NotSet\",\"version\":\"rkwsthpivoc\",\"nodes\":[{\"nodeName\":\"vnodqqzjbfy\",\"machineName\":\"swnfqdfwvsxfr\",\"hostServiceUri\":\"lypztuskpn\",\"status\":\"Limited\",\"capabilities\":{\"rskuffudbkvu\":\"oepjzaqbodswazb\",\"awowqsni\":\"ngjoasnz\",\"vukszkmxbh\":\"xwdqzu\"},\"versionStatus\":\"vvaeght\",\"version\":\"onxvnmcy\",\"registerTime\":\"2021-10-28T04:07:14Z\",\"lastConnectTime\":\"2021-07-08T22:30:50Z\",\"expiryTime\":\"2021-08-09T05:21:24Z\",\"lastStartTime\":\"2021-01-29T13:49:11Z\",\"lastStopTime\":\"2021-01-23T13:56:34Z\",\"lastUpdateResult\":\"Fail\",\"lastStartUpdateTime\":\"2021-01-17T05:54:21Z\",\"lastEndUpdateTime\":\"2021-03-01T14:02:39Z\",\"isActiveDispatcher\":false,\"concurrentJobsLimit\":1145006860,\"maxConcurrentJobs\":394829729,\"\":{\"owrmhm\":\"datavbksksmqm\",\"qaemo\":\"datafhfutjyxntmgtg\",\"cllqgn\":\"datagcaxjymdqrfvgicx\",\"xgdpivjkhcoscol\":\"dataydksvjf\"}},{\"nodeName\":\"hc\",\"machineName\":\"zooefzsdttbq\",\"hostServiceUri\":\"qdvwojvx\",\"status\":\"Offline\",\"capabilities\":{\"yga\":\"qxrqghotingzick\",\"elvyhvvpuqy\":\"yhpwmdkyfg\",\"cfwoolkugzowg\":\"pubbkhci\",\"zaupgblnag\":\"mix\"},\"versionStatus\":\"p\",\"version\":\"zhpqscuyileqjz\",\"registerTime\":\"2021-03-09T14:55:10Z\",\"lastConnectTime\":\"2021-02-24T03:30:44Z\",\"expiryTime\":\"2021-10-11T21:46:16Z\",\"lastStartTime\":\"2021-08-19T19:17:14Z\",\"lastStopTime\":\"2021-05-17T17:55:31Z\",\"lastUpdateResult\":\"None\",\"lastStartUpdateTime\":\"2021-01-30T03:45:35Z\",\"lastEndUpdateTime\":\"2021-08-02T18:20:46Z\",\"isActiveDispatcher\":false,\"concurrentJobsLimit\":26130312,\"maxConcurrentJobs\":1537409526,\"\":{\"nsmmphvk\":\"datavbjimzw\"}},{\"nodeName\":\"zw\",\"machineName\":\"yuoyj\",\"hostServiceUri\":\"wqd\",\"status\":\"Offline\",\"capabilities\":{\"ztpyaymhxlnmwa\":\"ofzrk\",\"yotpcvpahhpkvyq\":\"symnrtvqmima\"},\"versionStatus\":\"zxxzndwtomin\",\"version\":\"f\",\"registerTime\":\"2021-11-28T13:16:52Z\",\"lastConnectTime\":\"2021-12-10T13:41:30Z\",\"expiryTime\":\"2021-11-15T17:52Z\",\"lastStartTime\":\"2021-08-11T11:45:12Z\",\"lastStopTime\":\"2021-07-08T09:07:44Z\",\"lastUpdateResult\":\"Fail\",\"lastStartUpdateTime\":\"2021-10-17T11:43:55Z\",\"lastEndUpdateTime\":\"2021-09-27T20:36:56Z\",\"isActiveDispatcher\":true,\"concurrentJobsLimit\":202031960,\"maxConcurrentJobs\":1326494359,\"\":{\"lcbnrv\":\"dataccalirybytcaqpjo\",\"tq\":\"datayyhhsis\",\"teqiwd\":\"datarpa\",\"imkjzcx\":\"dataukaa\"}}],\"scheduledUpdateDate\":\"2021-05-08T07:13:08Z\",\"updateDelayOffset\":\"f\",\"localTimeZoneOffset\":\"ksijrjgyindexij\",\"capabilities\":{\"ddatopdtphvjgvjz\":\"yxuupze\",\"iyjxzxbthtnyzpu\":\"kngq\"},\"serviceUrls\":[\"mdlk\",\"abfcve\",\"bwxpmgyqshsasmr\"],\"autoUpdate\":\"On\",\"versionStatus\":\"t\",\"links\":[{\"name\":\"grz\",\"subscriptionId\":\"yqguauui\",\"dataFactoryName\":\"ybgk\",\"dataFactoryLocation\":\"cyzjndfeemxiur\",\"createTime\":\"2021-12-01T04:07:47Z\"},{\"name\":\"ypmw\",\"subscriptionId\":\"ajpcroxpp\",\"dataFactoryName\":\"imyhxnpdggllydu\",\"dataFactoryLocation\":\"fdmz\",\"createTime\":\"2021-11-22T21:54:50Z\"},{\"name\":\"zvwlxdjnstzeurd\",\"subscriptionId\":\"k\",\"dataFactoryName\":\"zatsiznymwzldp\",\"dataFactoryLocation\":\"hqhnfubevwadxcez\",\"createTime\":\"2021-01-12T12:51:04Z\"}],\"pushedVersion\":\"tfebqoqi\",\"latestVersion\":\"lqakpstifmftwrph\",\"autoUpdateETA\":\"2021-01-29T14:46:25Z\",\"selfContainedInteractiveAuthoringEnabled\":false},\"dataFactoryName\":\"gfofu\",\"state\":\"Limited\",\"\":{\"ttbargeeynqlsn\":\"dataneaqk\",\"pfyxhsppvjsduouo\":\"datagaxoyvgj\",\"eqeapaseqcppyp\":\"datatenqsomuo\",\"hndyvtoiqofz\":\"datareuwv\"}}")
            .toObject(SelfHostedIntegrationRuntimeStatus.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SelfHostedIntegrationRuntimeStatus model = new SelfHostedIntegrationRuntimeStatus()
            .withNodes(Arrays.asList(
                new SelfHostedIntegrationRuntimeNodeInner().withAdditionalProperties(mapOf("nodeName", "vnodqqzjbfy",
                    "lastStartUpdateTime", "2021-01-17T05:54:21Z", "lastConnectTime", "2021-07-08T22:30:50Z",
                    "capabilities",
                    JacksonAdapter.createDefaultSerializerAdapter().deserialize(
                        "{\"rskuffudbkvu\":\"oepjzaqbodswazb\",\"awowqsni\":\"ngjoasnz\",\"vukszkmxbh\":\"xwdqzu\"}",
                        Object.class, SerializerEncoding.JSON),
                    "hostServiceUri", "lypztuskpn", "registerTime", "2021-10-28T04:07:14Z", "maxConcurrentJobs",
                    394829729, "lastStopTime", "2021-01-23T13:56:34Z", "version", "onxvnmcy", "machineName",
                    "swnfqdfwvsxfr", "versionStatus", "vvaeght", "concurrentJobsLimit", 1145006860, "lastEndUpdateTime",
                    "2021-03-01T14:02:39Z", "expiryTime", "2021-08-09T05:21:24Z", "lastStartTime",
                    "2021-01-29T13:49:11Z", "lastUpdateResult", "Fail", "isActiveDispatcher", false, "status",
                    "Limited")),
                new SelfHostedIntegrationRuntimeNodeInner().withAdditionalProperties(mapOf("nodeName", "hc",
                    "lastStartUpdateTime", "2021-01-30T03:45:35Z", "lastConnectTime", "2021-02-24T03:30:44Z",
                    "capabilities",
                    JacksonAdapter.createDefaultSerializerAdapter().deserialize(
                        "{\"yga\":\"qxrqghotingzick\",\"elvyhvvpuqy\":\"yhpwmdkyfg\",\"cfwoolkugzowg\":\"pubbkhci\",\"zaupgblnag\":\"mix\"}",
                        Object.class, SerializerEncoding.JSON),
                    "hostServiceUri", "qdvwojvx", "registerTime", "2021-03-09T14:55:10Z", "maxConcurrentJobs",
                    1537409526, "lastStopTime", "2021-05-17T17:55:31Z", "version", "zhpqscuyileqjz", "machineName",
                    "zooefzsdttbq", "versionStatus", "p", "concurrentJobsLimit", 26130312, "lastEndUpdateTime",
                    "2021-08-02T18:20:46Z", "expiryTime", "2021-10-11T21:46:16Z", "lastStartTime",
                    "2021-08-19T19:17:14Z", "lastUpdateResult", "None", "isActiveDispatcher", false, "status",
                    "Offline")),
                new SelfHostedIntegrationRuntimeNodeInner()
                    .withAdditionalProperties(mapOf("nodeName", "zw", "lastStartUpdateTime", "2021-10-17T11:43:55Z",
                        "lastConnectTime", "2021-12-10T13:41:30Z", "capabilities",
                        JacksonAdapter.createDefaultSerializerAdapter().deserialize(
                            "{\"ztpyaymhxlnmwa\":\"ofzrk\",\"yotpcvpahhpkvyq\":\"symnrtvqmima\"}", Object.class,
                            SerializerEncoding.JSON),
                        "hostServiceUri", "wqd", "registerTime", "2021-11-28T13:16:52Z", "maxConcurrentJobs",
                        1326494359, "lastStopTime", "2021-07-08T09:07:44Z", "version", "f", "machineName", "yuoyj",
                        "versionStatus", "zxxzndwtomin", "concurrentJobsLimit", 202031960, "lastEndUpdateTime",
                        "2021-09-27T20:36:56Z", "expiryTime", "2021-11-15T17:52Z", "lastStartTime",
                        "2021-08-11T11:45:12Z", "lastUpdateResult", "Fail", "isActiveDispatcher", true, "status",
                        "Offline"))))
            .withLinks(Arrays.asList(new LinkedIntegrationRuntime(), new LinkedIntegrationRuntime(),
                new LinkedIntegrationRuntime()));
        model = BinaryData.fromObject(model).toObject(SelfHostedIntegrationRuntimeStatus.class);
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
