// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.RerunTumblingWindowTrigger;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RerunTumblingWindowTriggerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RerunTumblingWindowTrigger model = BinaryData.fromString(
            "{\"type\":\"RerunTumblingWindowTrigger\",\"typeProperties\":{\"parentTrigger\":\"datayulo\",\"requestedStartTime\":\"2021-04-21T03:19:05Z\",\"requestedEndTime\":\"2021-09-26T14:48:01Z\",\"rerunConcurrency\":1007731752},\"description\":\"cxmxfw\",\"runtimeState\":\"Disabled\",\"annotations\":[\"dataekbmwizish\",\"datamx\"],\"\":{\"kcyf\":\"datanmwiybleaota\",\"sjndbwwnlg\":\"dataxosnbwbcnf\",\"wlixh\":\"dataoubtehdccghdzq\",\"nhlsf\":\"dataotqsp\"}}")
            .toObject(RerunTumblingWindowTrigger.class);
        Assertions.assertEquals("cxmxfw", model.description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-21T03:19:05Z"), model.requestedStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-26T14:48:01Z"), model.requestedEndTime());
        Assertions.assertEquals(1007731752, model.rerunConcurrency());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RerunTumblingWindowTrigger model = new RerunTumblingWindowTrigger().withDescription("cxmxfw")
            .withAnnotations(Arrays.asList("dataekbmwizish", "datamx")).withParentTrigger("datayulo")
            .withRequestedStartTime(OffsetDateTime.parse("2021-04-21T03:19:05Z"))
            .withRequestedEndTime(OffsetDateTime.parse("2021-09-26T14:48:01Z")).withRerunConcurrency(1007731752);
        model = BinaryData.fromObject(model).toObject(RerunTumblingWindowTrigger.class);
        Assertions.assertEquals("cxmxfw", model.description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-21T03:19:05Z"), model.requestedStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-26T14:48:01Z"), model.requestedEndTime());
        Assertions.assertEquals(1007731752, model.rerunConcurrency());
    }
}
