// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.RerunTumblingWindowTrigger;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RerunTumblingWindowTriggerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RerunTumblingWindowTrigger model = BinaryData.fromString(
            "{\"type\":\"RerunTumblingWindowTrigger\",\"typeProperties\":{\"parentTrigger\":\"datauhnh\",\"requestedStartTime\":\"2021-05-06T07:37:22Z\",\"requestedEndTime\":\"2021-01-01T04:14:19Z\",\"rerunConcurrency\":440558025},\"description\":\"fuukildlaytviw\",\"runtimeState\":\"Stopped\",\"annotations\":[\"datazk\",\"dataidps\",\"dataklmytaeallsxfz\",\"datantssbzm\"],\"\":{\"nhmxkgxrf\":\"dataj\"}}")
            .toObject(RerunTumblingWindowTrigger.class);
        Assertions.assertEquals("fuukildlaytviw", model.description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-06T07:37:22Z"), model.requestedStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-01T04:14:19Z"), model.requestedEndTime());
        Assertions.assertEquals(440558025, model.rerunConcurrency());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RerunTumblingWindowTrigger model = new RerunTumblingWindowTrigger().withDescription("fuukildlaytviw")
            .withAnnotations(Arrays.asList("datazk", "dataidps", "dataklmytaeallsxfz", "datantssbzm"))
            .withParentTrigger("datauhnh")
            .withRequestedStartTime(OffsetDateTime.parse("2021-05-06T07:37:22Z"))
            .withRequestedEndTime(OffsetDateTime.parse("2021-01-01T04:14:19Z"))
            .withRerunConcurrency(440558025);
        model = BinaryData.fromObject(model).toObject(RerunTumblingWindowTrigger.class);
        Assertions.assertEquals("fuukildlaytviw", model.description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-06T07:37:22Z"), model.requestedStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-01T04:14:19Z"), model.requestedEndTime());
        Assertions.assertEquals(440558025, model.rerunConcurrency());
    }
}
