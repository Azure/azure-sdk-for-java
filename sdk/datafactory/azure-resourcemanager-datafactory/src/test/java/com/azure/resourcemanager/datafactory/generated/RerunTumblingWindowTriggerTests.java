// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.RerunTumblingWindowTrigger;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RerunTumblingWindowTriggerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RerunTumblingWindowTrigger model = BinaryData.fromString(
            "{\"type\":\"RerunTumblingWindowTrigger\",\"typeProperties\":{\"parentTrigger\":\"datapmsyhrvifurg\",\"requestedStartTime\":\"2021-02-04T22:48:43Z\",\"requestedEndTime\":\"2021-11-14T02:33:51Z\",\"rerunConcurrency\":1565427178},\"description\":\"fvuqi\",\"runtimeState\":\"Stopped\",\"annotations\":[\"datafghc\",\"dataiipnszrrmq\",\"datakxyawtdsn\"],\"\":{\"mdecryoffglwmkm\":\"datax\",\"lqnzxsdbfbkqi\":\"dataxusn\",\"ngrdu\":\"dataehxmztf\"}}")
            .toObject(RerunTumblingWindowTrigger.class);
        Assertions.assertEquals("fvuqi", model.description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-04T22:48:43Z"), model.requestedStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-14T02:33:51Z"), model.requestedEndTime());
        Assertions.assertEquals(1565427178, model.rerunConcurrency());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RerunTumblingWindowTrigger model = new RerunTumblingWindowTrigger().withDescription("fvuqi")
            .withAnnotations(Arrays.asList("datafghc", "dataiipnszrrmq", "datakxyawtdsn"))
            .withParentTrigger("datapmsyhrvifurg")
            .withRequestedStartTime(OffsetDateTime.parse("2021-02-04T22:48:43Z"))
            .withRequestedEndTime(OffsetDateTime.parse("2021-11-14T02:33:51Z"))
            .withRerunConcurrency(1565427178);
        model = BinaryData.fromObject(model).toObject(RerunTumblingWindowTrigger.class);
        Assertions.assertEquals("fvuqi", model.description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-04T22:48:43Z"), model.requestedStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-14T02:33:51Z"), model.requestedEndTime());
        Assertions.assertEquals(1565427178, model.rerunConcurrency());
    }
}
