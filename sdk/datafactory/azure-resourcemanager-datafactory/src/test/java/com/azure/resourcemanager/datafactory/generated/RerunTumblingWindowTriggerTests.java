// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.RerunTumblingWindowTrigger;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RerunTumblingWindowTriggerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RerunTumblingWindowTrigger model = BinaryData.fromString(
            "{\"type\":\"fllrieknxbcgn\",\"typeProperties\":{\"parentTrigger\":\"dataxmaimwufuv\",\"requestedStartTime\":\"2021-03-08T14:49:03Z\",\"requestedEndTime\":\"2021-08-11T21:21:34Z\",\"rerunConcurrency\":253054235},\"description\":\"engkwhkekxohq\",\"runtimeState\":\"Disabled\",\"annotations\":[\"dataoqtvmkjle\",\"datalakvhgefvpc\"],\"\":{\"dtcibbgijkw\":\"databyagqiprb\"}}")
            .toObject(RerunTumblingWindowTrigger.class);
        Assertions.assertEquals("engkwhkekxohq", model.description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-08T14:49:03Z"), model.requestedStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-11T21:21:34Z"), model.requestedEndTime());
        Assertions.assertEquals(253054235, model.rerunConcurrency());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RerunTumblingWindowTrigger model = new RerunTumblingWindowTrigger().withDescription("engkwhkekxohq")
            .withAnnotations(Arrays.asList("dataoqtvmkjle", "datalakvhgefvpc"))
            .withParentTrigger("dataxmaimwufuv")
            .withRequestedStartTime(OffsetDateTime.parse("2021-03-08T14:49:03Z"))
            .withRequestedEndTime(OffsetDateTime.parse("2021-08-11T21:21:34Z"))
            .withRerunConcurrency(253054235);
        model = BinaryData.fromObject(model).toObject(RerunTumblingWindowTrigger.class);
        Assertions.assertEquals("engkwhkekxohq", model.description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-08T14:49:03Z"), model.requestedStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-11T21:21:34Z"), model.requestedEndTime());
        Assertions.assertEquals(253054235, model.rerunConcurrency());
    }
}
