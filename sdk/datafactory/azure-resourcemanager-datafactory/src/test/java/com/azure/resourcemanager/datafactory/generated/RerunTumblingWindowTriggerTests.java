// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.RerunTumblingWindowTrigger;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RerunTumblingWindowTriggerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RerunTumblingWindowTrigger model = BinaryData.fromString(
            "{\"type\":\"RerunTumblingWindowTrigger\",\"typeProperties\":{\"parentTrigger\":\"dataplzr\",\"requestedStartTime\":\"2021-03-14T03:31:19Z\",\"requestedEndTime\":\"2021-09-21T15:16:39Z\",\"rerunConcurrency\":1544067436},\"description\":\"dqnefofujzwqpkhg\",\"runtimeState\":\"Disabled\",\"annotations\":[\"dataloerqkvufnphbzss\"],\"\":{\"vuhagoqxfxje\":\"datatrglpaocqxdvleou\",\"hrymeynbiwowu\":\"datauoquacrdn\"}}")
            .toObject(RerunTumblingWindowTrigger.class);
        Assertions.assertEquals("dqnefofujzwqpkhg", model.description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-14T03:31:19Z"), model.requestedStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-21T15:16:39Z"), model.requestedEndTime());
        Assertions.assertEquals(1544067436, model.rerunConcurrency());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RerunTumblingWindowTrigger model = new RerunTumblingWindowTrigger().withDescription("dqnefofujzwqpkhg")
            .withAnnotations(Arrays.asList("dataloerqkvufnphbzss"))
            .withParentTrigger("dataplzr")
            .withRequestedStartTime(OffsetDateTime.parse("2021-03-14T03:31:19Z"))
            .withRequestedEndTime(OffsetDateTime.parse("2021-09-21T15:16:39Z"))
            .withRerunConcurrency(1544067436);
        model = BinaryData.fromObject(model).toObject(RerunTumblingWindowTrigger.class);
        Assertions.assertEquals("dqnefofujzwqpkhg", model.description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-14T03:31:19Z"), model.requestedStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-21T15:16:39Z"), model.requestedEndTime());
        Assertions.assertEquals(1544067436, model.rerunConcurrency());
    }
}
