// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzureDataLakeStoreReadSettings;

public final class AzureDataLakeStoreReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureDataLakeStoreReadSettings model = BinaryData.fromString(
            "{\"type\":\"AzureDataLakeStoreReadSettings\",\"recursive\":\"dataxcruleimswxoi\",\"wildcardFolderPath\":\"dataqumjm\",\"wildcardFileName\":\"datazetuvfpsijpm\",\"fileListPath\":\"datatnqsn\",\"listAfter\":\"datafks\",\"listBefore\":\"datarvjwbeeol\",\"enablePartitionDiscovery\":\"databaqolwfkb\",\"partitionRootPath\":\"datazvht\",\"deleteFilesAfterCompletion\":\"datadygaph\",\"modifiedDatetimeStart\":\"datamivazfnb\",\"modifiedDatetimeEnd\":\"dataj\",\"maxConcurrentConnections\":\"datarorjbyyxkcvahvb\",\"disableMetricsCollection\":\"dataxtjivwveng\",\"\":{\"hgjyholsmahbjc\":\"datacta\"}}")
            .toObject(AzureDataLakeStoreReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureDataLakeStoreReadSettings model
            = new AzureDataLakeStoreReadSettings().withMaxConcurrentConnections("datarorjbyyxkcvahvb")
                .withDisableMetricsCollection("dataxtjivwveng")
                .withRecursive("dataxcruleimswxoi")
                .withWildcardFolderPath("dataqumjm")
                .withWildcardFileName("datazetuvfpsijpm")
                .withFileListPath("datatnqsn")
                .withListAfter("datafks")
                .withListBefore("datarvjwbeeol")
                .withEnablePartitionDiscovery("databaqolwfkb")
                .withPartitionRootPath("datazvht")
                .withDeleteFilesAfterCompletion("datadygaph")
                .withModifiedDatetimeStart("datamivazfnb")
                .withModifiedDatetimeEnd("dataj");
        model = BinaryData.fromObject(model).toObject(AzureDataLakeStoreReadSettings.class);
    }
}
