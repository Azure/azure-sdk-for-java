// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzureDataLakeStoreReadSettings;

public final class AzureDataLakeStoreReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureDataLakeStoreReadSettings model = BinaryData.fromString(
            "{\"type\":\"AzureDataLakeStoreReadSettings\",\"recursive\":\"datayosig\",\"wildcardFolderPath\":\"datanykjxq\",\"wildcardFileName\":\"datapeqgedpizjqp\",\"fileListPath\":\"dataturdiv\",\"listAfter\":\"datakwma\",\"listBefore\":\"dataxoqakvutedet\",\"enablePartitionDiscovery\":\"datakqud\",\"partitionRootPath\":\"datawcwjacdbkcehxahn\",\"deleteFilesAfterCompletion\":\"databav\",\"modifiedDatetimeStart\":\"datalfefbbv\",\"modifiedDatetimeEnd\":\"datalnnpafufwrerbnd\",\"maxConcurrentConnections\":\"datazfnstlavmdc\",\"disableMetricsCollection\":\"dataemvaajyitpyz\",\"\":{\"hvbvjyfdwaupjozg\":\"datahkswurzaqubr\",\"mxznfoa\":\"datayocgwkphilyznbbc\",\"ei\":\"datasjwiswznlbbht\",\"sazgnyf\":\"datafizbehvqaghltn\"}}")
            .toObject(AzureDataLakeStoreReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureDataLakeStoreReadSettings model
            = new AzureDataLakeStoreReadSettings().withMaxConcurrentConnections("datazfnstlavmdc")
                .withDisableMetricsCollection("dataemvaajyitpyz")
                .withRecursive("datayosig")
                .withWildcardFolderPath("datanykjxq")
                .withWildcardFileName("datapeqgedpizjqp")
                .withFileListPath("dataturdiv")
                .withListAfter("datakwma")
                .withListBefore("dataxoqakvutedet")
                .withEnablePartitionDiscovery("datakqud")
                .withPartitionRootPath("datawcwjacdbkcehxahn")
                .withDeleteFilesAfterCompletion("databav")
                .withModifiedDatetimeStart("datalfefbbv")
                .withModifiedDatetimeEnd("datalnnpafufwrerbnd");
        model = BinaryData.fromObject(model).toObject(AzureDataLakeStoreReadSettings.class);
    }
}
