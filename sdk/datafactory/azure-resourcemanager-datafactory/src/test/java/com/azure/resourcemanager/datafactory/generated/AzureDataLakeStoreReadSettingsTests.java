// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzureDataLakeStoreReadSettings;

public final class AzureDataLakeStoreReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureDataLakeStoreReadSettings model = BinaryData.fromString(
            "{\"type\":\"AzureDataLakeStoreReadSettings\",\"recursive\":\"datanhvdkqigppdqsqs\",\"wildcardFolderPath\":\"dataweaxthuhuruo\",\"wildcardFileName\":\"datayotapstkdbn\",\"fileListPath\":\"datapcuzexoymfku\",\"listAfter\":\"dataysgsqzpgrvf\",\"listBefore\":\"datayph\",\"enablePartitionDiscovery\":\"datarxrpahp\",\"partitionRootPath\":\"dataikfenmiflkyf\",\"deleteFilesAfterCompletion\":\"datalolnxhsupilh\",\"modifiedDatetimeStart\":\"dataabli\",\"modifiedDatetimeEnd\":\"dataoomgsejisydh\",\"maxConcurrentConnections\":\"datadxnkluqf\",\"disableMetricsCollection\":\"dataglftlqakie\",\"\":{\"xewcscuveljfarin\":\"datavprb\"}}")
            .toObject(AzureDataLakeStoreReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureDataLakeStoreReadSettings model
            = new AzureDataLakeStoreReadSettings().withMaxConcurrentConnections("datadxnkluqf")
                .withDisableMetricsCollection("dataglftlqakie")
                .withRecursive("datanhvdkqigppdqsqs")
                .withWildcardFolderPath("dataweaxthuhuruo")
                .withWildcardFileName("datayotapstkdbn")
                .withFileListPath("datapcuzexoymfku")
                .withListAfter("dataysgsqzpgrvf")
                .withListBefore("datayph")
                .withEnablePartitionDiscovery("datarxrpahp")
                .withPartitionRootPath("dataikfenmiflkyf")
                .withDeleteFilesAfterCompletion("datalolnxhsupilh")
                .withModifiedDatetimeStart("dataabli")
                .withModifiedDatetimeEnd("dataoomgsejisydh");
        model = BinaryData.fromObject(model).toObject(AzureDataLakeStoreReadSettings.class);
    }
}
