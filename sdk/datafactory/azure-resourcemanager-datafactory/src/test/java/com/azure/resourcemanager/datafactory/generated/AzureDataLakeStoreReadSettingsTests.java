// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzureDataLakeStoreReadSettings;

public final class AzureDataLakeStoreReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureDataLakeStoreReadSettings model = BinaryData.fromString(
            "{\"type\":\"AzureDataLakeStoreReadSettings\",\"recursive\":\"datachgjonrhdib\",\"wildcardFolderPath\":\"datapd\",\"wildcardFileName\":\"datatmeou\",\"fileListPath\":\"datavkcnqonjbbhw\",\"listAfter\":\"datallzykzpjjdsl\",\"listBefore\":\"datayejsgbpjjnblbkak\",\"enablePartitionDiscovery\":\"datavwbd\",\"partitionRootPath\":\"dataddctkjc\",\"deleteFilesAfterCompletion\":\"dataxdir\",\"modifiedDatetimeStart\":\"dataqilsbabqtjch\",\"modifiedDatetimeEnd\":\"datafwe\",\"maxConcurrentConnections\":\"dataeiyem\",\"disableMetricsCollection\":\"datapszekdqqwcspf\",\"\":{\"oslqgsdqnqqzq\":\"datadqym\"}}")
            .toObject(AzureDataLakeStoreReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureDataLakeStoreReadSettings model
            = new AzureDataLakeStoreReadSettings().withMaxConcurrentConnections("dataeiyem")
                .withDisableMetricsCollection("datapszekdqqwcspf")
                .withRecursive("datachgjonrhdib")
                .withWildcardFolderPath("datapd")
                .withWildcardFileName("datatmeou")
                .withFileListPath("datavkcnqonjbbhw")
                .withListAfter("datallzykzpjjdsl")
                .withListBefore("datayejsgbpjjnblbkak")
                .withEnablePartitionDiscovery("datavwbd")
                .withPartitionRootPath("dataddctkjc")
                .withDeleteFilesAfterCompletion("dataxdir")
                .withModifiedDatetimeStart("dataqilsbabqtjch")
                .withModifiedDatetimeEnd("datafwe");
        model = BinaryData.fromObject(model).toObject(AzureDataLakeStoreReadSettings.class);
    }
}
