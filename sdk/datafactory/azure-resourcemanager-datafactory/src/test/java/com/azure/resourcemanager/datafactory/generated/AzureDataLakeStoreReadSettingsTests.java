// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzureDataLakeStoreReadSettings;

public final class AzureDataLakeStoreReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureDataLakeStoreReadSettings model = BinaryData.fromString(
            "{\"type\":\"AzureDataLakeStoreReadSettings\",\"recursive\":\"datachrhcfeqjkacuxt\",\"wildcardFolderPath\":\"datackojqo\",\"wildcardFileName\":\"datawdh\",\"fileListPath\":\"datadosqvdoy\",\"listAfter\":\"datapzxushmltihsc\",\"listBefore\":\"datavkbc\",\"enablePartitionDiscovery\":\"datant\",\"partitionRootPath\":\"datazee\",\"deleteFilesAfterCompletion\":\"datapggsyeydctjne\",\"modifiedDatetimeStart\":\"datahztlzbw\",\"modifiedDatetimeEnd\":\"datavji\",\"maxConcurrentConnections\":\"datakgkh\",\"disableMetricsCollection\":\"datavb\",\"\":{\"ztlvsdm\":\"dataovhxstxs\"}}")
            .toObject(AzureDataLakeStoreReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureDataLakeStoreReadSettings model
            = new AzureDataLakeStoreReadSettings().withMaxConcurrentConnections("datakgkh")
                .withDisableMetricsCollection("datavb").withRecursive("datachrhcfeqjkacuxt")
                .withWildcardFolderPath("datackojqo").withWildcardFileName("datawdh").withFileListPath("datadosqvdoy")
                .withListAfter("datapzxushmltihsc").withListBefore("datavkbc").withEnablePartitionDiscovery("datant")
                .withPartitionRootPath("datazee").withDeleteFilesAfterCompletion("datapggsyeydctjne")
                .withModifiedDatetimeStart("datahztlzbw").withModifiedDatetimeEnd("datavji");
        model = BinaryData.fromObject(model).toObject(AzureDataLakeStoreReadSettings.class);
    }
}
