// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzureDataLakeStoreReadSettings;

public final class AzureDataLakeStoreReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureDataLakeStoreReadSettings model = BinaryData.fromString(
            "{\"type\":\"qggzahng\",\"recursive\":\"datatecsmocqwey\",\"wildcardFolderPath\":\"dataakettmfcxviwf\",\"wildcardFileName\":\"datajxxbsafqiwldu\",\"fileListPath\":\"datasyjzdasgkfz\",\"listAfter\":\"datahqomuzohnpkofklb\",\"listBefore\":\"dataln\",\"enablePartitionDiscovery\":\"dataffyvowlammvazv\",\"partitionRootPath\":\"dataie\",\"deleteFilesAfterCompletion\":\"datajunmgd\",\"modifiedDatetimeStart\":\"dataeivrhjxdnkgztfgc\",\"modifiedDatetimeEnd\":\"datavbreh\",\"maxConcurrentConnections\":\"dataseiidfpwbybmxf\",\"disableMetricsCollection\":\"datazgolfensibqi\",\"\":{\"ml\":\"datayjzvy\",\"vwr\":\"datasavzcz\"}}")
            .toObject(AzureDataLakeStoreReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureDataLakeStoreReadSettings model
            = new AzureDataLakeStoreReadSettings().withMaxConcurrentConnections("dataseiidfpwbybmxf")
                .withDisableMetricsCollection("datazgolfensibqi")
                .withRecursive("datatecsmocqwey")
                .withWildcardFolderPath("dataakettmfcxviwf")
                .withWildcardFileName("datajxxbsafqiwldu")
                .withFileListPath("datasyjzdasgkfz")
                .withListAfter("datahqomuzohnpkofklb")
                .withListBefore("dataln")
                .withEnablePartitionDiscovery("dataffyvowlammvazv")
                .withPartitionRootPath("dataie")
                .withDeleteFilesAfterCompletion("datajunmgd")
                .withModifiedDatetimeStart("dataeivrhjxdnkgztfgc")
                .withModifiedDatetimeEnd("datavbreh");
        model = BinaryData.fromObject(model).toObject(AzureDataLakeStoreReadSettings.class);
    }
}
