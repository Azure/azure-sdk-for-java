// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.MultiplePipelineTrigger;
import com.azure.resourcemanager.datafactory.models.PipelineReference;
import com.azure.resourcemanager.datafactory.models.TriggerPipelineReference;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class MultiplePipelineTriggerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MultiplePipelineTrigger model = BinaryData.fromString(
            "{\"type\":\"fmxomupdqpc\",\"pipelines\":[{\"pipelineReference\":{\"referenceName\":\"qgfimllra\",\"name\":\"wpudvuphizztklk\"},\"parameters\":{\"kphsk\":\"dataeehtjmde\",\"yafopc\":\"datai\",\"fxz\":\"datanpjulpwwmxwlwcur\",\"juki\":\"dataazep\"}},{\"pipelineReference\":{\"referenceName\":\"cvruxmp\",\"name\":\"guj\"},\"parameters\":{\"sjobanxshltfghyk\":\"dataduns\",\"pyb\":\"dataxruqrobkne\",\"gkqudxvj\":\"dataskvjb\"}},{\"pipelineReference\":{\"referenceName\":\"dbinqqrkkgawnae\",\"name\":\"ui\"},\"parameters\":{\"iskqxeclw\":\"datavaxyitnzpfdoete\",\"r\":\"dataso\"}}],\"description\":\"vktdvwmefjpoelly\",\"runtimeState\":\"Stopped\",\"annotations\":[\"datarltrztrloyrjvr\",\"datayr\",\"datahfrsyckqwefmq\"],\"\":{\"ffrzg\":\"datazlvfncphhlnba\",\"mxzraihlzgroj\":\"dataob\",\"jrccyysyceykvml\":\"datanx\",\"pp\":\"datahymceg\"}}")
            .toObject(MultiplePipelineTrigger.class);
        Assertions.assertEquals("vktdvwmefjpoelly", model.description());
        Assertions.assertEquals("qgfimllra", model.pipelines().get(0).pipelineReference().referenceName());
        Assertions.assertEquals("wpudvuphizztklk", model.pipelines().get(0).pipelineReference().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MultiplePipelineTrigger model = new MultiplePipelineTrigger().withDescription("vktdvwmefjpoelly")
            .withAnnotations(Arrays.asList("datarltrztrloyrjvr", "datayr", "datahfrsyckqwefmq"))
            .withPipelines(Arrays.asList(
                new TriggerPipelineReference()
                    .withPipelineReference(
                        new PipelineReference().withReferenceName("qgfimllra").withName("wpudvuphizztklk"))
                    .withParameters(mapOf("kphsk", "dataeehtjmde", "yafopc", "datai", "fxz", "datanpjulpwwmxwlwcur",
                        "juki", "dataazep")),
                new TriggerPipelineReference()
                    .withPipelineReference(new PipelineReference().withReferenceName("cvruxmp").withName("guj"))
                    .withParameters(
                        mapOf("sjobanxshltfghyk", "dataduns", "pyb", "dataxruqrobkne", "gkqudxvj", "dataskvjb")),
                new TriggerPipelineReference()
                    .withPipelineReference(new PipelineReference().withReferenceName("dbinqqrkkgawnae").withName("ui"))
                    .withParameters(mapOf("iskqxeclw", "datavaxyitnzpfdoete", "r", "dataso"))));
        model = BinaryData.fromObject(model).toObject(MultiplePipelineTrigger.class);
        Assertions.assertEquals("vktdvwmefjpoelly", model.description());
        Assertions.assertEquals("qgfimllra", model.pipelines().get(0).pipelineReference().referenceName());
        Assertions.assertEquals("wpudvuphizztklk", model.pipelines().get(0).pipelineReference().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
