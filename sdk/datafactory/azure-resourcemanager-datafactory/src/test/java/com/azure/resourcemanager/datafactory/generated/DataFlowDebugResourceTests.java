// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DataFlow;
import com.azure.resourcemanager.datafactory.models.DataFlowDebugResource;
import com.azure.resourcemanager.datafactory.models.DataFlowFolder;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DataFlowDebugResourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataFlowDebugResource model = BinaryData.fromString(
            "{\"properties\":{\"type\":\"bgdlfgtdysna\",\"description\":\"flq\",\"annotations\":[\"dataq\",\"dataamz\",\"datarwd\"],\"folder\":{\"name\":\"eqyj\"}},\"name\":\"zi\"}")
            .toObject(DataFlowDebugResource.class);
        Assertions.assertEquals("zi", model.name());
        Assertions.assertEquals("flq", model.properties().description());
        Assertions.assertEquals("eqyj", model.properties().folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataFlowDebugResource model = new DataFlowDebugResource().withName("zi")
            .withProperties(new DataFlow().withDescription("flq")
                .withAnnotations(Arrays.asList("dataq", "dataamz", "datarwd"))
                .withFolder(new DataFlowFolder().withName("eqyj")));
        model = BinaryData.fromObject(model).toObject(DataFlowDebugResource.class);
        Assertions.assertEquals("zi", model.name());
        Assertions.assertEquals("flq", model.properties().description());
        Assertions.assertEquals("eqyj", model.properties().folder().name());
    }
}
