// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.fluent.models.DatabricksNotebookActivityTypeProperties;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

public final class DatabricksNotebookActivityTypePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DatabricksNotebookActivityTypeProperties model = BinaryData.fromString(
            "{\"notebookPath\":\"datadxsphfjzxeswzg\",\"baseParameters\":{\"sjeolxbg\":\"datagggj\",\"twehvuttngatgl\":\"dataojoe\"},\"libraries\":[{\"eahypjqag\":\"datazguarkrfabf\"},{\"u\":\"datau\",\"mwae\":\"datalffpvdjfwsibplb\"},{\"hnhcxhf\":\"datab\",\"d\":\"datahabn\"}]}")
            .toObject(DatabricksNotebookActivityTypeProperties.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DatabricksNotebookActivityTypeProperties model
            = new DatabricksNotebookActivityTypeProperties().withNotebookPath("datadxsphfjzxeswzg")
                .withBaseParameters(mapOf("sjeolxbg", "datagggj", "twehvuttngatgl", "dataojoe"))
                .withLibraries(Arrays.asList(mapOf("eahypjqag", "datazguarkrfabf"),
                    mapOf("u", "datau", "mwae", "datalffpvdjfwsibplb"), mapOf("hnhcxhf", "datab", "d", "datahabn")));
        model = BinaryData.fromObject(model).toObject(DatabricksNotebookActivityTypeProperties.class);
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
