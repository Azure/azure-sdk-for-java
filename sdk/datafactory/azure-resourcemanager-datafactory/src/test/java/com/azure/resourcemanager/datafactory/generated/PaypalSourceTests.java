// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.PaypalSource;

public final class PaypalSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PaypalSource model = BinaryData.fromString(
            "{\"type\":\"PaypalSource\",\"query\":\"datavzd\",\"queryTimeout\":\"datakqajia\",\"additionalColumns\":\"datacyrdtrd\",\"sourceRetryCount\":\"datadmsktuvjh\",\"sourceRetryWait\":\"datatvyt\",\"maxConcurrentConnections\":\"datafbsgrzw\",\"disableMetricsCollection\":\"datadudxqebtrpsplwt\",\"\":{\"ckrnku\":\"dataseybvtgcoznnjq\",\"tuynugptfjpi\":\"dataotlymybmgmrkxk\",\"tqqshb\":\"datavfh\",\"zjsezgphip\":\"datapzhuhuj\"}}")
            .toObject(PaypalSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PaypalSource model = new PaypalSource().withSourceRetryCount("datadmsktuvjh").withSourceRetryWait("datatvyt")
            .withMaxConcurrentConnections("datafbsgrzw").withDisableMetricsCollection("datadudxqebtrpsplwt")
            .withQueryTimeout("datakqajia").withAdditionalColumns("datacyrdtrd").withQuery("datavzd");
        model = BinaryData.fromObject(model).toObject(PaypalSource.class);
    }
}
