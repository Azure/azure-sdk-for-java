// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.PaypalSource;

public final class PaypalSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PaypalSource model = BinaryData.fromString(
            "{\"type\":\"PaypalSource\",\"query\":\"datajjprd\",\"queryTimeout\":\"datablonlhtgexwjhicu\",\"additionalColumns\":\"dataavimxnhylwogtvl\",\"sourceRetryCount\":\"datagd\",\"sourceRetryWait\":\"datat\",\"maxConcurrentConnections\":\"datadxlfn\",\"disableMetricsCollection\":\"dataclkmggnzlfyxaiaf\",\"\":{\"uoayapzzcxkuusba\":\"dataxekfvycvhw\",\"yak\":\"datacassqeybdnz\",\"zkicxtumqinawct\":\"datarkohfqm\",\"kjnpe\":\"dataarboxaluoadmcv\"}}")
            .toObject(PaypalSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PaypalSource model = new PaypalSource().withSourceRetryCount("datagd").withSourceRetryWait("datat")
            .withMaxConcurrentConnections("datadxlfn").withDisableMetricsCollection("dataclkmggnzlfyxaiaf")
            .withQueryTimeout("datablonlhtgexwjhicu").withAdditionalColumns("dataavimxnhylwogtvl")
            .withQuery("datajjprd");
        model = BinaryData.fromObject(model).toObject(PaypalSource.class);
    }
}
