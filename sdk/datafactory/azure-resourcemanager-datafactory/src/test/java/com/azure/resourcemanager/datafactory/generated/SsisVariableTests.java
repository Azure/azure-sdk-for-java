// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SsisVariable;
import org.junit.jupiter.api.Assertions;

public final class SsisVariableTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SsisVariable model = BinaryData.fromString(
            "{\"id\":2100467242964547244,\"name\":\"lkkwbdekbvdu\",\"description\":\"kaadnxbssatpi\",\"dataType\":\"rqh\",\"sensitive\":false,\"value\":\"ccfgfvo\",\"sensitiveValue\":\"iyvrexitpz\"}")
            .toObject(SsisVariable.class);
        Assertions.assertEquals(2100467242964547244L, model.id());
        Assertions.assertEquals("lkkwbdekbvdu", model.name());
        Assertions.assertEquals("kaadnxbssatpi", model.description());
        Assertions.assertEquals("rqh", model.dataType());
        Assertions.assertEquals(false, model.sensitive());
        Assertions.assertEquals("ccfgfvo", model.value());
        Assertions.assertEquals("iyvrexitpz", model.sensitiveValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SsisVariable model = new SsisVariable().withId(2100467242964547244L)
            .withName("lkkwbdekbvdu")
            .withDescription("kaadnxbssatpi")
            .withDataType("rqh")
            .withSensitive(false)
            .withValue("ccfgfvo")
            .withSensitiveValue("iyvrexitpz");
        model = BinaryData.fromObject(model).toObject(SsisVariable.class);
        Assertions.assertEquals(2100467242964547244L, model.id());
        Assertions.assertEquals("lkkwbdekbvdu", model.name());
        Assertions.assertEquals("kaadnxbssatpi", model.description());
        Assertions.assertEquals("rqh", model.dataType());
        Assertions.assertEquals(false, model.sensitive());
        Assertions.assertEquals("ccfgfvo", model.value());
        Assertions.assertEquals("iyvrexitpz", model.sensitiveValue());
    }
}
