// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SsisVariable;
import org.junit.jupiter.api.Assertions;

public final class SsisVariableTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SsisVariable model = BinaryData.fromString(
            "{\"id\":6310282971839998498,\"name\":\"qdapydsfpzpjbs\",\"description\":\"bnrucq\",\"dataType\":\"yrnzmjrgfbmps\",\"sensitive\":true,\"value\":\"cstzuwbgaesmaxd\",\"sensitiveValue\":\"rwqtb\"}")
            .toObject(SsisVariable.class);
        Assertions.assertEquals(6310282971839998498L, model.id());
        Assertions.assertEquals("qdapydsfpzpjbs", model.name());
        Assertions.assertEquals("bnrucq", model.description());
        Assertions.assertEquals("yrnzmjrgfbmps", model.dataType());
        Assertions.assertEquals(true, model.sensitive());
        Assertions.assertEquals("cstzuwbgaesmaxd", model.value());
        Assertions.assertEquals("rwqtb", model.sensitiveValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SsisVariable model = new SsisVariable().withId(6310282971839998498L).withName("qdapydsfpzpjbs")
            .withDescription("bnrucq").withDataType("yrnzmjrgfbmps").withSensitive(true).withValue("cstzuwbgaesmaxd")
            .withSensitiveValue("rwqtb");
        model = BinaryData.fromObject(model).toObject(SsisVariable.class);
        Assertions.assertEquals(6310282971839998498L, model.id());
        Assertions.assertEquals("qdapydsfpzpjbs", model.name());
        Assertions.assertEquals("bnrucq", model.description());
        Assertions.assertEquals("yrnzmjrgfbmps", model.dataType());
        Assertions.assertEquals(true, model.sensitive());
        Assertions.assertEquals("cstzuwbgaesmaxd", model.value());
        Assertions.assertEquals("rwqtb", model.sensitiveValue());
    }
}
