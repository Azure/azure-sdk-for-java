// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SsisVariable;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class SsisVariableTests {
    @Test
    public void testDeserialize() {
        SsisVariable model =
            BinaryData
                .fromString(
                    "{\"id\":5615954883796554749,\"name\":\"ytpqsixymmpujiv\",\"description\":\"lkjuvsmbmslzoyov\",\"dataType\":\"dbpqvybefgvm\",\"sensitive\":true,\"value\":\"cvtlubseskvc\",\"sensitiveValue\":\"rtrh\"}")
                .toObject(SsisVariable.class);
        Assertions.assertEquals(5615954883796554749L, model.id());
        Assertions.assertEquals("ytpqsixymmpujiv", model.name());
        Assertions.assertEquals("lkjuvsmbmslzoyov", model.description());
        Assertions.assertEquals("dbpqvybefgvm", model.dataType());
        Assertions.assertEquals(true, model.sensitive());
        Assertions.assertEquals("cvtlubseskvc", model.value());
        Assertions.assertEquals("rtrh", model.sensitiveValue());
    }

    @Test
    public void testSerialize() {
        SsisVariable model =
            new SsisVariable()
                .withId(5615954883796554749L)
                .withName("ytpqsixymmpujiv")
                .withDescription("lkjuvsmbmslzoyov")
                .withDataType("dbpqvybefgvm")
                .withSensitive(true)
                .withValue("cvtlubseskvc")
                .withSensitiveValue("rtrh");
        model = BinaryData.fromObject(model).toObject(SsisVariable.class);
        Assertions.assertEquals(5615954883796554749L, model.id());
        Assertions.assertEquals("ytpqsixymmpujiv", model.name());
        Assertions.assertEquals("lkjuvsmbmslzoyov", model.description());
        Assertions.assertEquals("dbpqvybefgvm", model.dataType());
        Assertions.assertEquals(true, model.sensitive());
        Assertions.assertEquals("cvtlubseskvc", model.value());
        Assertions.assertEquals("rtrh", model.sensitiveValue());
    }
}
