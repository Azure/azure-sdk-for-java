// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SsisVariable;
import org.junit.jupiter.api.Assertions;

public final class SsisVariableTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SsisVariable model = BinaryData.fromString(
            "{\"id\":1109572290980895504,\"name\":\"hhwpufrspreyilq\",\"description\":\"kxkteoykqrqtxqog\",\"dataType\":\"dimnacklyrbv\",\"sensitive\":true,\"value\":\"expnphtqwfp\",\"sensitiveValue\":\"sbcxqiy\"}")
            .toObject(SsisVariable.class);
        Assertions.assertEquals(1109572290980895504L, model.id());
        Assertions.assertEquals("hhwpufrspreyilq", model.name());
        Assertions.assertEquals("kxkteoykqrqtxqog", model.description());
        Assertions.assertEquals("dimnacklyrbv", model.dataType());
        Assertions.assertEquals(true, model.sensitive());
        Assertions.assertEquals("expnphtqwfp", model.value());
        Assertions.assertEquals("sbcxqiy", model.sensitiveValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SsisVariable model = new SsisVariable().withId(1109572290980895504L).withName("hhwpufrspreyilq")
            .withDescription("kxkteoykqrqtxqog").withDataType("dimnacklyrbv").withSensitive(true)
            .withValue("expnphtqwfp").withSensitiveValue("sbcxqiy");
        model = BinaryData.fromObject(model).toObject(SsisVariable.class);
        Assertions.assertEquals(1109572290980895504L, model.id());
        Assertions.assertEquals("hhwpufrspreyilq", model.name());
        Assertions.assertEquals("kxkteoykqrqtxqog", model.description());
        Assertions.assertEquals("dimnacklyrbv", model.dataType());
        Assertions.assertEquals(true, model.sensitive());
        Assertions.assertEquals("expnphtqwfp", model.value());
        Assertions.assertEquals("sbcxqiy", model.sensitiveValue());
    }
}
