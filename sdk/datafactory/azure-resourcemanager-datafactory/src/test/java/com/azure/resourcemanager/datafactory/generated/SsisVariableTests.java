// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SsisVariable;
import org.junit.jupiter.api.Assertions;

public final class SsisVariableTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SsisVariable model = BinaryData.fromString(
            "{\"id\":6326328819934825145,\"name\":\"mubplzoepeqlhb\",\"description\":\"syizeqlctpqno\",\"dataType\":\"whgyzwfyfdb\",\"sensitive\":true,\"value\":\"lmikdsqqykgjjsmv\",\"sensitiveValue\":\"yqmlmwjwsmnwbm\"}")
            .toObject(SsisVariable.class);
        Assertions.assertEquals(6326328819934825145L, model.id());
        Assertions.assertEquals("mubplzoepeqlhb", model.name());
        Assertions.assertEquals("syizeqlctpqno", model.description());
        Assertions.assertEquals("whgyzwfyfdb", model.dataType());
        Assertions.assertEquals(true, model.sensitive());
        Assertions.assertEquals("lmikdsqqykgjjsmv", model.value());
        Assertions.assertEquals("yqmlmwjwsmnwbm", model.sensitiveValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SsisVariable model = new SsisVariable().withId(6326328819934825145L).withName("mubplzoepeqlhb")
            .withDescription("syizeqlctpqno").withDataType("whgyzwfyfdb").withSensitive(true)
            .withValue("lmikdsqqykgjjsmv").withSensitiveValue("yqmlmwjwsmnwbm");
        model = BinaryData.fromObject(model).toObject(SsisVariable.class);
        Assertions.assertEquals(6326328819934825145L, model.id());
        Assertions.assertEquals("mubplzoepeqlhb", model.name());
        Assertions.assertEquals("syizeqlctpqno", model.description());
        Assertions.assertEquals("whgyzwfyfdb", model.dataType());
        Assertions.assertEquals(true, model.sensitive());
        Assertions.assertEquals("lmikdsqqykgjjsmv", model.value());
        Assertions.assertEquals("yqmlmwjwsmnwbm", model.sensitiveValue());
    }
}
