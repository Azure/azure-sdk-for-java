// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DistcpSettings;
import com.azure.resourcemanager.datafactory.models.HdfsReadSettings;

public final class HdfsReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HdfsReadSettings model = BinaryData.fromString(
            "{\"type\":\"rmficqrdervtru\",\"recursive\":\"dataetdruugimviefbje\",\"wildcardFolderPath\":\"dataiyjkhjuuep\",\"wildcardFileName\":\"datauqwnajb\",\"fileListPath\":\"dataxqsvax\",\"enablePartitionDiscovery\":\"datawisdwtugadxupipg\",\"partitionRootPath\":\"datawiwhtjoxxllh\",\"modifiedDatetimeStart\":\"dataunnwm\",\"modifiedDatetimeEnd\":\"dataxyawxkd\",\"distcpSettings\":{\"resourceManagerEndpoint\":\"datavhyu\",\"tempScriptPath\":\"dataihapcqmcvur\",\"distcpOptions\":\"dataubljnizwztlcrxfi\"},\"deleteFilesAfterCompletion\":\"datafgxn\",\"maxConcurrentConnections\":\"datal\",\"disableMetricsCollection\":\"datartcsmpm\",\"\":{\"xcgcdfel\":\"dataxb\"}}")
            .toObject(HdfsReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HdfsReadSettings model = new HdfsReadSettings().withMaxConcurrentConnections("datal")
            .withDisableMetricsCollection("datartcsmpm")
            .withRecursive("dataetdruugimviefbje")
            .withWildcardFolderPath("dataiyjkhjuuep")
            .withWildcardFileName("datauqwnajb")
            .withFileListPath("dataxqsvax")
            .withEnablePartitionDiscovery("datawisdwtugadxupipg")
            .withPartitionRootPath("datawiwhtjoxxllh")
            .withModifiedDatetimeStart("dataunnwm")
            .withModifiedDatetimeEnd("dataxyawxkd")
            .withDistcpSettings(new DistcpSettings().withResourceManagerEndpoint("datavhyu")
                .withTempScriptPath("dataihapcqmcvur")
                .withDistcpOptions("dataubljnizwztlcrxfi"))
            .withDeleteFilesAfterCompletion("datafgxn");
        model = BinaryData.fromObject(model).toObject(HdfsReadSettings.class);
    }
}
