// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DistcpSettings;
import com.azure.resourcemanager.datafactory.models.HdfsReadSettings;

public final class HdfsReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HdfsReadSettings model = BinaryData.fromString(
            "{\"type\":\"HdfsReadSettings\",\"recursive\":\"datawhkwypbqnxpohcr\",\"wildcardFolderPath\":\"databajyuegsbuqdp\",\"wildcardFileName\":\"dataqec\",\"fileListPath\":\"datautxtidsxrexba\",\"enablePartitionDiscovery\":\"databm\",\"partitionRootPath\":\"dataopypcuom\",\"modifiedDatetimeStart\":\"dataucjznnowpvxuuvhw\",\"modifiedDatetimeEnd\":\"datame\",\"distcpSettings\":{\"resourceManagerEndpoint\":\"datahw\",\"tempScriptPath\":\"datayfkjdhlqtqjabw\",\"distcpOptions\":\"datapjy\"},\"deleteFilesAfterCompletion\":\"dataqyirupsuyq\",\"maxConcurrentConnections\":\"dataxnavxzpyaptex\",\"disableMetricsCollection\":\"datalqhewhcchexc\",\"\":{\"wggmitdwolfmfaz\":\"datayn\"}}")
            .toObject(HdfsReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HdfsReadSettings model = new HdfsReadSettings().withMaxConcurrentConnections("dataxnavxzpyaptex")
            .withDisableMetricsCollection("datalqhewhcchexc").withRecursive("datawhkwypbqnxpohcr")
            .withWildcardFolderPath("databajyuegsbuqdp").withWildcardFileName("dataqec")
            .withFileListPath("datautxtidsxrexba").withEnablePartitionDiscovery("databm")
            .withPartitionRootPath("dataopypcuom").withModifiedDatetimeStart("dataucjznnowpvxuuvhw")
            .withModifiedDatetimeEnd("datame")
            .withDistcpSettings(new DistcpSettings().withResourceManagerEndpoint("datahw")
                .withTempScriptPath("datayfkjdhlqtqjabw").withDistcpOptions("datapjy"))
            .withDeleteFilesAfterCompletion("dataqyirupsuyq");
        model = BinaryData.fromObject(model).toObject(HdfsReadSettings.class);
    }
}
