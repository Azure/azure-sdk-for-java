// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DistcpSettings;
import com.azure.resourcemanager.datafactory.models.HdfsReadSettings;

public final class HdfsReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HdfsReadSettings model = BinaryData.fromString(
            "{\"type\":\"HdfsReadSettings\",\"recursive\":\"dataawl\",\"wildcardFolderPath\":\"datawvrovjvjjuypcnb\",\"wildcardFileName\":\"databejmujz\",\"fileListPath\":\"datapspaxhfuwygssssj\",\"enablePartitionDiscovery\":\"datafep\",\"partitionRootPath\":\"datamssdvjvdcc\",\"modifiedDatetimeStart\":\"datazrdjfmmwkakyxy\",\"modifiedDatetimeEnd\":\"datadelr\",\"distcpSettings\":{\"resourceManagerEndpoint\":\"datamffvbhtueynx\",\"tempScriptPath\":\"dataxqnwce\",\"distcpOptions\":\"datasbncadfa\"},\"deleteFilesAfterCompletion\":\"dataebj\",\"maxConcurrentConnections\":\"datawwgverbywuuvei\",\"disableMetricsCollection\":\"databpzdwhxput\",\"\":{\"rw\":\"datal\"}}")
            .toObject(HdfsReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HdfsReadSettings model = new HdfsReadSettings().withMaxConcurrentConnections("datawwgverbywuuvei")
            .withDisableMetricsCollection("databpzdwhxput")
            .withRecursive("dataawl")
            .withWildcardFolderPath("datawvrovjvjjuypcnb")
            .withWildcardFileName("databejmujz")
            .withFileListPath("datapspaxhfuwygssssj")
            .withEnablePartitionDiscovery("datafep")
            .withPartitionRootPath("datamssdvjvdcc")
            .withModifiedDatetimeStart("datazrdjfmmwkakyxy")
            .withModifiedDatetimeEnd("datadelr")
            .withDistcpSettings(new DistcpSettings().withResourceManagerEndpoint("datamffvbhtueynx")
                .withTempScriptPath("dataxqnwce")
                .withDistcpOptions("datasbncadfa"))
            .withDeleteFilesAfterCompletion("dataebj");
        model = BinaryData.fromObject(model).toObject(HdfsReadSettings.class);
    }
}
