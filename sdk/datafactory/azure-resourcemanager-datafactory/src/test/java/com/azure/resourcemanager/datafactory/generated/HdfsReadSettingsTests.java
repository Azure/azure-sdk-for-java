// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DistcpSettings;
import com.azure.resourcemanager.datafactory.models.HdfsReadSettings;

public final class HdfsReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HdfsReadSettings model = BinaryData.fromString(
            "{\"type\":\"HdfsReadSettings\",\"recursive\":\"dataerxfe\",\"wildcardFolderPath\":\"datamzsekvsuzyowr\",\"wildcardFileName\":\"datavofrenuvp\",\"fileListPath\":\"dataltnyyeyj\",\"enablePartitionDiscovery\":\"datafpbxnretpg\",\"partitionRootPath\":\"datatohruqtximrxeyz\",\"modifiedDatetimeStart\":\"datanxb\",\"modifiedDatetimeEnd\":\"datayglfyfcsbkjhoxtb\",\"distcpSettings\":{\"resourceManagerEndpoint\":\"databpef\",\"tempScriptPath\":\"datajpnixd\",\"distcpOptions\":\"datajkfvmrnwgeaj\"},\"deleteFilesAfterCompletion\":\"datafeiiri\",\"maxConcurrentConnections\":\"datajdnknbt\",\"disableMetricsCollection\":\"datardep\",\"\":{\"onovfnob\":\"datazhkp\",\"mmzxpsrlbppjq\":\"datawhutvcdtgxsyfuh\"}}")
            .toObject(HdfsReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HdfsReadSettings model = new HdfsReadSettings().withMaxConcurrentConnections("datajdnknbt")
            .withDisableMetricsCollection("datardep").withRecursive("dataerxfe")
            .withWildcardFolderPath("datamzsekvsuzyowr").withWildcardFileName("datavofrenuvp")
            .withFileListPath("dataltnyyeyj").withEnablePartitionDiscovery("datafpbxnretpg")
            .withPartitionRootPath("datatohruqtximrxeyz").withModifiedDatetimeStart("datanxb")
            .withModifiedDatetimeEnd("datayglfyfcsbkjhoxtb")
            .withDistcpSettings(new DistcpSettings().withResourceManagerEndpoint("databpef")
                .withTempScriptPath("datajpnixd").withDistcpOptions("datajkfvmrnwgeaj"))
            .withDeleteFilesAfterCompletion("datafeiiri");
        model = BinaryData.fromObject(model).toObject(HdfsReadSettings.class);
    }
}
