// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DistcpSettings;
import com.azure.resourcemanager.datafactory.models.HdfsReadSettings;

public final class HdfsReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HdfsReadSettings model = BinaryData.fromString(
            "{\"type\":\"HdfsReadSettings\",\"recursive\":\"datafayyuqecwrtred\",\"wildcardFolderPath\":\"datazsnfgmohhcghvsmv\",\"wildcardFileName\":\"datapkymq\",\"fileListPath\":\"datavwfao\",\"enablePartitionDiscovery\":\"datalboawzplwghfg\",\"partitionRootPath\":\"dataarmtuprqtcxqkoh\",\"modifiedDatetimeStart\":\"datayajkdejpar\",\"modifiedDatetimeEnd\":\"datasbozfjbdyyxhjf\",\"distcpSettings\":{\"resourceManagerEndpoint\":\"databwmrdl\",\"tempScriptPath\":\"databklhwrikr\",\"distcpOptions\":\"dataj\"},\"deleteFilesAfterCompletion\":\"datagzffemryoia\",\"maxConcurrentConnections\":\"databz\",\"disableMetricsCollection\":\"datalc\",\"\":{\"iibxol\":\"datamvbhb\",\"ixr\":\"datainxxj\"}}")
            .toObject(HdfsReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HdfsReadSettings model = new HdfsReadSettings().withMaxConcurrentConnections("databz")
            .withDisableMetricsCollection("datalc")
            .withRecursive("datafayyuqecwrtred")
            .withWildcardFolderPath("datazsnfgmohhcghvsmv")
            .withWildcardFileName("datapkymq")
            .withFileListPath("datavwfao")
            .withEnablePartitionDiscovery("datalboawzplwghfg")
            .withPartitionRootPath("dataarmtuprqtcxqkoh")
            .withModifiedDatetimeStart("datayajkdejpar")
            .withModifiedDatetimeEnd("datasbozfjbdyyxhjf")
            .withDistcpSettings(new DistcpSettings().withResourceManagerEndpoint("databwmrdl")
                .withTempScriptPath("databklhwrikr")
                .withDistcpOptions("dataj"))
            .withDeleteFilesAfterCompletion("datagzffemryoia");
        model = BinaryData.fromObject(model).toObject(HdfsReadSettings.class);
    }
}
