// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DistcpSettings;
import com.azure.resourcemanager.datafactory.models.HdfsReadSettings;

public final class HdfsReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HdfsReadSettings model = BinaryData.fromString(
            "{\"type\":\"HdfsReadSettings\",\"recursive\":\"datamyfrmfclky\",\"wildcardFolderPath\":\"datajyafzzcbohbbavod\",\"wildcardFileName\":\"dataduabqbverbjcts\",\"fileListPath\":\"datavhxnjo\",\"enablePartitionDiscovery\":\"datapc\",\"partitionRootPath\":\"datadlppuk\",\"modifiedDatetimeStart\":\"datamnp\",\"modifiedDatetimeEnd\":\"datanm\",\"distcpSettings\":{\"resourceManagerEndpoint\":\"dataydhbefivozr\",\"tempScriptPath\":\"datazrikwiucvvr\",\"distcpOptions\":\"datapbjgozo\"},\"deleteFilesAfterCompletion\":\"dataamer\",\"maxConcurrentConnections\":\"datactrwrvnsc\",\"disableMetricsCollection\":\"datac\",\"\":{\"fajlgxrsn\":\"datawqqezt\"}}")
            .toObject(HdfsReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HdfsReadSettings model = new HdfsReadSettings().withMaxConcurrentConnections("datactrwrvnsc")
            .withDisableMetricsCollection("datac")
            .withRecursive("datamyfrmfclky")
            .withWildcardFolderPath("datajyafzzcbohbbavod")
            .withWildcardFileName("dataduabqbverbjcts")
            .withFileListPath("datavhxnjo")
            .withEnablePartitionDiscovery("datapc")
            .withPartitionRootPath("datadlppuk")
            .withModifiedDatetimeStart("datamnp")
            .withModifiedDatetimeEnd("datanm")
            .withDistcpSettings(new DistcpSettings().withResourceManagerEndpoint("dataydhbefivozr")
                .withTempScriptPath("datazrikwiucvvr")
                .withDistcpOptions("datapbjgozo"))
            .withDeleteFilesAfterCompletion("dataamer");
        model = BinaryData.fromObject(model).toObject(HdfsReadSettings.class);
    }
}
