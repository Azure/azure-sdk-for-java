// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DistcpSettings;
import com.azure.resourcemanager.datafactory.models.HdfsReadSettings;

public final class HdfsReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HdfsReadSettings model = BinaryData.fromString(
            "{\"type\":\"HdfsReadSettings\",\"recursive\":\"dataeajyifeiiriomjd\",\"wildcardFolderPath\":\"datanbtlxrdepqt\",\"wildcardFileName\":\"datahkpko\",\"fileListPath\":\"datavfno\",\"enablePartitionDiscovery\":\"datawhutvcdtgxsyfuh\",\"partitionRootPath\":\"datamzxpsrlbppjqcwc\",\"modifiedDatetimeStart\":\"dataaosk\",\"modifiedDatetimeEnd\":\"dataalljsoasxjjklm\",\"distcpSettings\":{\"resourceManagerEndpoint\":\"datagrosxfdxrc\",\"tempScriptPath\":\"datanmbb\",\"distcpOptions\":\"datauvdceo\"},\"deleteFilesAfterCompletion\":\"datavnomzlre\",\"maxConcurrentConnections\":\"datadskie\",\"disableMetricsCollection\":\"dataaenalepta\",\"\":{\"aodbhgxbadbo\":\"dataol\"}}")
            .toObject(HdfsReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HdfsReadSettings model = new HdfsReadSettings().withMaxConcurrentConnections("datadskie")
            .withDisableMetricsCollection("dataaenalepta")
            .withRecursive("dataeajyifeiiriomjd")
            .withWildcardFolderPath("datanbtlxrdepqt")
            .withWildcardFileName("datahkpko")
            .withFileListPath("datavfno")
            .withEnablePartitionDiscovery("datawhutvcdtgxsyfuh")
            .withPartitionRootPath("datamzxpsrlbppjqcwc")
            .withModifiedDatetimeStart("dataaosk")
            .withModifiedDatetimeEnd("dataalljsoasxjjklm")
            .withDistcpSettings(new DistcpSettings().withResourceManagerEndpoint("datagrosxfdxrc")
                .withTempScriptPath("datanmbb")
                .withDistcpOptions("datauvdceo"))
            .withDeleteFilesAfterCompletion("datavnomzlre");
        model = BinaryData.fromObject(model).toObject(HdfsReadSettings.class);
    }
}
