// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SsisParameter;
import org.junit.jupiter.api.Assertions;

public final class SsisParameterTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SsisParameter model = BinaryData.fromString(
            "{\"id\":3304004875475532508,\"name\":\"enpftk\",\"description\":\"bmvxbi\",\"dataType\":\"zghpsotbameir\",\"required\":true,\"sensitive\":true,\"designDefaultValue\":\"svr\",\"defaultValue\":\"hyncppmmwhje\",\"sensitiveDefaultValue\":\"urgipv\",\"valueType\":\"xlepsmck\",\"valueSet\":false,\"variable\":\"xgcqmguv\"}")
            .toObject(SsisParameter.class);
        Assertions.assertEquals(3304004875475532508L, model.id());
        Assertions.assertEquals("enpftk", model.name());
        Assertions.assertEquals("bmvxbi", model.description());
        Assertions.assertEquals("zghpsotbameir", model.dataType());
        Assertions.assertEquals(true, model.required());
        Assertions.assertEquals(true, model.sensitive());
        Assertions.assertEquals("svr", model.designDefaultValue());
        Assertions.assertEquals("hyncppmmwhje", model.defaultValue());
        Assertions.assertEquals("urgipv", model.sensitiveDefaultValue());
        Assertions.assertEquals("xlepsmck", model.valueType());
        Assertions.assertEquals(false, model.valueSet());
        Assertions.assertEquals("xgcqmguv", model.variable());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SsisParameter model = new SsisParameter().withId(3304004875475532508L).withName("enpftk")
            .withDescription("bmvxbi").withDataType("zghpsotbameir").withRequired(true).withSensitive(true)
            .withDesignDefaultValue("svr").withDefaultValue("hyncppmmwhje").withSensitiveDefaultValue("urgipv")
            .withValueType("xlepsmck").withValueSet(false).withVariable("xgcqmguv");
        model = BinaryData.fromObject(model).toObject(SsisParameter.class);
        Assertions.assertEquals(3304004875475532508L, model.id());
        Assertions.assertEquals("enpftk", model.name());
        Assertions.assertEquals("bmvxbi", model.description());
        Assertions.assertEquals("zghpsotbameir", model.dataType());
        Assertions.assertEquals(true, model.required());
        Assertions.assertEquals(true, model.sensitive());
        Assertions.assertEquals("svr", model.designDefaultValue());
        Assertions.assertEquals("hyncppmmwhje", model.defaultValue());
        Assertions.assertEquals("urgipv", model.sensitiveDefaultValue());
        Assertions.assertEquals("xlepsmck", model.valueType());
        Assertions.assertEquals(false, model.valueSet());
        Assertions.assertEquals("xgcqmguv", model.variable());
    }
}
