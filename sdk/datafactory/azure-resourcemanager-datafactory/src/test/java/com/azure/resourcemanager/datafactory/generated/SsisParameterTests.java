// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SsisParameter;
import org.junit.jupiter.api.Assertions;

public final class SsisParameterTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SsisParameter model = BinaryData.fromString(
            "{\"id\":7857305063837256009,\"name\":\"lbyzzcxs\",\"description\":\"aoymyckdpzb\",\"dataType\":\"bmljrjyfj\",\"required\":true,\"sensitive\":false,\"designDefaultValue\":\"kpsjldgnimq\",\"defaultValue\":\"cfqzxjziqcso\",\"sensitiveDefaultValue\":\"qtkpdcdefqoermg\",\"valueType\":\"nddaxaogsk\",\"valueSet\":true,\"variable\":\"mbipysehyyb\"}")
            .toObject(SsisParameter.class);
        Assertions.assertEquals(7857305063837256009L, model.id());
        Assertions.assertEquals("lbyzzcxs", model.name());
        Assertions.assertEquals("aoymyckdpzb", model.description());
        Assertions.assertEquals("bmljrjyfj", model.dataType());
        Assertions.assertEquals(true, model.required());
        Assertions.assertEquals(false, model.sensitive());
        Assertions.assertEquals("kpsjldgnimq", model.designDefaultValue());
        Assertions.assertEquals("cfqzxjziqcso", model.defaultValue());
        Assertions.assertEquals("qtkpdcdefqoermg", model.sensitiveDefaultValue());
        Assertions.assertEquals("nddaxaogsk", model.valueType());
        Assertions.assertEquals(true, model.valueSet());
        Assertions.assertEquals("mbipysehyyb", model.variable());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SsisParameter model
            = new SsisParameter().withId(7857305063837256009L).withName("lbyzzcxs").withDescription("aoymyckdpzb")
                .withDataType("bmljrjyfj").withRequired(true).withSensitive(false).withDesignDefaultValue("kpsjldgnimq")
                .withDefaultValue("cfqzxjziqcso").withSensitiveDefaultValue("qtkpdcdefqoermg")
                .withValueType("nddaxaogsk").withValueSet(true).withVariable("mbipysehyyb");
        model = BinaryData.fromObject(model).toObject(SsisParameter.class);
        Assertions.assertEquals(7857305063837256009L, model.id());
        Assertions.assertEquals("lbyzzcxs", model.name());
        Assertions.assertEquals("aoymyckdpzb", model.description());
        Assertions.assertEquals("bmljrjyfj", model.dataType());
        Assertions.assertEquals(true, model.required());
        Assertions.assertEquals(false, model.sensitive());
        Assertions.assertEquals("kpsjldgnimq", model.designDefaultValue());
        Assertions.assertEquals("cfqzxjziqcso", model.defaultValue());
        Assertions.assertEquals("qtkpdcdefqoermg", model.sensitiveDefaultValue());
        Assertions.assertEquals("nddaxaogsk", model.valueType());
        Assertions.assertEquals(true, model.valueSet());
        Assertions.assertEquals("mbipysehyyb", model.variable());
    }
}
