// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SsisParameter;
import org.junit.jupiter.api.Assertions;

public final class SsisParameterTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SsisParameter model = BinaryData.fromString(
            "{\"id\":1906673776222092606,\"name\":\"snq\",\"description\":\"efnakdmtpj\",\"dataType\":\"dlu\",\"required\":false,\"sensitive\":true,\"designDefaultValue\":\"xwtittlnvukvu\",\"defaultValue\":\"plugulynvpdv\",\"sensitiveDefaultValue\":\"qdapydsfpzpjbs\",\"valueType\":\"bnrucq\",\"valueSet\":true,\"variable\":\"nzmjr\"}")
            .toObject(SsisParameter.class);
        Assertions.assertEquals(1906673776222092606L, model.id());
        Assertions.assertEquals("snq", model.name());
        Assertions.assertEquals("efnakdmtpj", model.description());
        Assertions.assertEquals("dlu", model.dataType());
        Assertions.assertEquals(false, model.required());
        Assertions.assertEquals(true, model.sensitive());
        Assertions.assertEquals("xwtittlnvukvu", model.designDefaultValue());
        Assertions.assertEquals("plugulynvpdv", model.defaultValue());
        Assertions.assertEquals("qdapydsfpzpjbs", model.sensitiveDefaultValue());
        Assertions.assertEquals("bnrucq", model.valueType());
        Assertions.assertEquals(true, model.valueSet());
        Assertions.assertEquals("nzmjr", model.variable());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SsisParameter model = new SsisParameter().withId(1906673776222092606L)
            .withName("snq")
            .withDescription("efnakdmtpj")
            .withDataType("dlu")
            .withRequired(false)
            .withSensitive(true)
            .withDesignDefaultValue("xwtittlnvukvu")
            .withDefaultValue("plugulynvpdv")
            .withSensitiveDefaultValue("qdapydsfpzpjbs")
            .withValueType("bnrucq")
            .withValueSet(true)
            .withVariable("nzmjr");
        model = BinaryData.fromObject(model).toObject(SsisParameter.class);
        Assertions.assertEquals(1906673776222092606L, model.id());
        Assertions.assertEquals("snq", model.name());
        Assertions.assertEquals("efnakdmtpj", model.description());
        Assertions.assertEquals("dlu", model.dataType());
        Assertions.assertEquals(false, model.required());
        Assertions.assertEquals(true, model.sensitive());
        Assertions.assertEquals("xwtittlnvukvu", model.designDefaultValue());
        Assertions.assertEquals("plugulynvpdv", model.defaultValue());
        Assertions.assertEquals("qdapydsfpzpjbs", model.sensitiveDefaultValue());
        Assertions.assertEquals("bnrucq", model.valueType());
        Assertions.assertEquals(true, model.valueSet());
        Assertions.assertEquals("nzmjr", model.variable());
    }
}
