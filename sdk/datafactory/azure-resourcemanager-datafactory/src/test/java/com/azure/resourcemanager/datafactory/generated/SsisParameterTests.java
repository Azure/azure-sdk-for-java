// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SsisParameter;
import org.junit.jupiter.api.Assertions;

public final class SsisParameterTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SsisParameter model = BinaryData.fromString(
            "{\"id\":8191940074280365159,\"name\":\"lpumveybodhrvyk\",\"description\":\"umwbcu\",\"dataType\":\"vegpdxts\",\"required\":false,\"sensitive\":false,\"designDefaultValue\":\"ojybolqoxuptsli\",\"defaultValue\":\"mlkwk\",\"sensitiveDefaultValue\":\"invamtykxsz\",\"valueType\":\"kfxcsqmz\",\"valueSet\":true,\"variable\":\"tkdpczeohplrgcnb\"}")
            .toObject(SsisParameter.class);
        Assertions.assertEquals(8191940074280365159L, model.id());
        Assertions.assertEquals("lpumveybodhrvyk", model.name());
        Assertions.assertEquals("umwbcu", model.description());
        Assertions.assertEquals("vegpdxts", model.dataType());
        Assertions.assertEquals(false, model.required());
        Assertions.assertEquals(false, model.sensitive());
        Assertions.assertEquals("ojybolqoxuptsli", model.designDefaultValue());
        Assertions.assertEquals("mlkwk", model.defaultValue());
        Assertions.assertEquals("invamtykxsz", model.sensitiveDefaultValue());
        Assertions.assertEquals("kfxcsqmz", model.valueType());
        Assertions.assertEquals(true, model.valueSet());
        Assertions.assertEquals("tkdpczeohplrgcnb", model.variable());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SsisParameter model = new SsisParameter().withId(8191940074280365159L)
            .withName("lpumveybodhrvyk")
            .withDescription("umwbcu")
            .withDataType("vegpdxts")
            .withRequired(false)
            .withSensitive(false)
            .withDesignDefaultValue("ojybolqoxuptsli")
            .withDefaultValue("mlkwk")
            .withSensitiveDefaultValue("invamtykxsz")
            .withValueType("kfxcsqmz")
            .withValueSet(true)
            .withVariable("tkdpczeohplrgcnb");
        model = BinaryData.fromObject(model).toObject(SsisParameter.class);
        Assertions.assertEquals(8191940074280365159L, model.id());
        Assertions.assertEquals("lpumveybodhrvyk", model.name());
        Assertions.assertEquals("umwbcu", model.description());
        Assertions.assertEquals("vegpdxts", model.dataType());
        Assertions.assertEquals(false, model.required());
        Assertions.assertEquals(false, model.sensitive());
        Assertions.assertEquals("ojybolqoxuptsli", model.designDefaultValue());
        Assertions.assertEquals("mlkwk", model.defaultValue());
        Assertions.assertEquals("invamtykxsz", model.sensitiveDefaultValue());
        Assertions.assertEquals("kfxcsqmz", model.valueType());
        Assertions.assertEquals(true, model.valueSet());
        Assertions.assertEquals("tkdpczeohplrgcnb", model.variable());
    }
}
