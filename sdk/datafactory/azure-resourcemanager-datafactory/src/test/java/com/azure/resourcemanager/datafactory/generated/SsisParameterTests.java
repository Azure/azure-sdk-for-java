// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SsisParameter;
import org.junit.jupiter.api.Assertions;

public final class SsisParameterTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SsisParameter model = BinaryData.fromString(
            "{\"id\":4128209313466556237,\"name\":\"bsjtfqwlb\",\"description\":\"czzscgropuq\",\"dataType\":\"s\",\"required\":true,\"sensitive\":true,\"designDefaultValue\":\"yikqlyoorme\",\"defaultValue\":\"glq\",\"sensitiveDefaultValue\":\"ykckyhxuzn\",\"valueType\":\"piadjslv\",\"valueSet\":false,\"variable\":\"cdwbi\"}")
            .toObject(SsisParameter.class);
        Assertions.assertEquals(4128209313466556237L, model.id());
        Assertions.assertEquals("bsjtfqwlb", model.name());
        Assertions.assertEquals("czzscgropuq", model.description());
        Assertions.assertEquals("s", model.dataType());
        Assertions.assertEquals(true, model.required());
        Assertions.assertEquals(true, model.sensitive());
        Assertions.assertEquals("yikqlyoorme", model.designDefaultValue());
        Assertions.assertEquals("glq", model.defaultValue());
        Assertions.assertEquals("ykckyhxuzn", model.sensitiveDefaultValue());
        Assertions.assertEquals("piadjslv", model.valueType());
        Assertions.assertEquals(false, model.valueSet());
        Assertions.assertEquals("cdwbi", model.variable());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SsisParameter model = new SsisParameter().withId(4128209313466556237L)
            .withName("bsjtfqwlb")
            .withDescription("czzscgropuq")
            .withDataType("s")
            .withRequired(true)
            .withSensitive(true)
            .withDesignDefaultValue("yikqlyoorme")
            .withDefaultValue("glq")
            .withSensitiveDefaultValue("ykckyhxuzn")
            .withValueType("piadjslv")
            .withValueSet(false)
            .withVariable("cdwbi");
        model = BinaryData.fromObject(model).toObject(SsisParameter.class);
        Assertions.assertEquals(4128209313466556237L, model.id());
        Assertions.assertEquals("bsjtfqwlb", model.name());
        Assertions.assertEquals("czzscgropuq", model.description());
        Assertions.assertEquals("s", model.dataType());
        Assertions.assertEquals(true, model.required());
        Assertions.assertEquals(true, model.sensitive());
        Assertions.assertEquals("yikqlyoorme", model.designDefaultValue());
        Assertions.assertEquals("glq", model.defaultValue());
        Assertions.assertEquals("ykckyhxuzn", model.sensitiveDefaultValue());
        Assertions.assertEquals("piadjslv", model.valueType());
        Assertions.assertEquals(false, model.valueSet());
        Assertions.assertEquals("cdwbi", model.variable());
    }
}
