// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.PaypalObjectDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class PaypalObjectDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PaypalObjectDataset model = BinaryData.fromString(
            "{\"type\":\"ryhhe\",\"typeProperties\":{\"tableName\":\"datadc\"},\"description\":\"zhhllx\",\"structure\":\"datan\",\"schema\":\"dataxdjklfsd\",\"linkedServiceName\":{\"referenceName\":\"tkqiymmddslwnlg\",\"parameters\":{\"pybnnnlpqdn\":\"datahmk\",\"atupmrslwknrdvvm\":\"datas\",\"kdeetnne\":\"datajerndzzywxqraqx\"}},\"parameters\":{\"uxjmrzsxwasfwqj\":{\"type\":\"Float\",\"defaultValue\":\"dataks\"},\"r\":{\"type\":\"Int\",\"defaultValue\":\"datamfqdnppfcfgua\"},\"kgdwpj\":{\"type\":\"Int\",\"defaultValue\":\"datau\"}},\"annotations\":[\"dataukgctvnspjvsyydj\",\"datahdukcsqvyeegxhu\",\"dataojwumfjdymeqv\"],\"folder\":{\"name\":\"fyxdjspnonxem\"},\"\":{\"twvgc\":\"datazhn\",\"ypmjc\":\"datacvdjlwwefevtwll\",\"fwgkzuhk\":\"datay\",\"kckwbqwjyfmmkwa\":\"datahx\"}}")
            .toObject(PaypalObjectDataset.class);
        Assertions.assertEquals("zhhllx", model.description());
        Assertions.assertEquals("tkqiymmddslwnlg", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.FLOAT, model.parameters().get("uxjmrzsxwasfwqj").type());
        Assertions.assertEquals("fyxdjspnonxem", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PaypalObjectDataset model
            = new PaypalObjectDataset().withDescription("zhhllx")
                .withStructure("datan")
                .withSchema("dataxdjklfsd")
                .withLinkedServiceName(new LinkedServiceReference().withReferenceName("tkqiymmddslwnlg")
                    .withParameters(mapOf("pybnnnlpqdn", "datahmk", "atupmrslwknrdvvm", "datas", "kdeetnne",
                        "datajerndzzywxqraqx")))
                .withParameters(mapOf("uxjmrzsxwasfwqj",
                    new ParameterSpecification().withType(ParameterType.FLOAT).withDefaultValue("dataks"), "r",
                    new ParameterSpecification().withType(ParameterType.INT).withDefaultValue("datamfqdnppfcfgua"),
                    "kgdwpj", new ParameterSpecification().withType(ParameterType.INT).withDefaultValue("datau")))
                .withAnnotations(Arrays.asList("dataukgctvnspjvsyydj", "datahdukcsqvyeegxhu", "dataojwumfjdymeqv"))
                .withFolder(new DatasetFolder().withName("fyxdjspnonxem"))
                .withTableName("datadc");
        model = BinaryData.fromObject(model).toObject(PaypalObjectDataset.class);
        Assertions.assertEquals("zhhllx", model.description());
        Assertions.assertEquals("tkqiymmddslwnlg", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.FLOAT, model.parameters().get("uxjmrzsxwasfwqj").type());
        Assertions.assertEquals("fyxdjspnonxem", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
