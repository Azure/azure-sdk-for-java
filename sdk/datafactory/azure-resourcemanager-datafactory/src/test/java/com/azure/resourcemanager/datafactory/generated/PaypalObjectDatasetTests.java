// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.PaypalObjectDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class PaypalObjectDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PaypalObjectDataset model = BinaryData.fromString(
            "{\"type\":\"PaypalObject\",\"typeProperties\":{\"tableName\":\"dataamqobqehs\"},\"description\":\"htisyzfeoctr\",\"structure\":\"datawn\",\"schema\":\"datackze\",\"linkedServiceName\":{\"referenceName\":\"mbvwdxgy\",\"parameters\":{\"atkuhskegd\":\"dataxqzlmlnxr\",\"l\":\"datavvi\"}},\"parameters\":{\"pbusxy\":{\"type\":\"Int\",\"defaultValue\":\"dataxfzzjdm\"},\"kkbyg\":{\"type\":\"String\",\"defaultValue\":\"datazwplxzgzumnotii\"},\"wyshybbnhtt\":{\"type\":\"Array\",\"defaultValue\":\"dataq\"}},\"annotations\":[\"dataonzsurqcoj\",\"datasfzhzzcarciuoxyi\",\"datadthjfvnhwsgnsput\",\"datae\"],\"folder\":{\"name\":\"hnu\"},\"\":{\"h\":\"datajgbfbba\",\"vkbuxlepg\":\"dataxczzunfnbphcee\",\"tfsclgga\":\"datacnuqhqpvtw\"}}")
            .toObject(PaypalObjectDataset.class);
        Assertions.assertEquals("htisyzfeoctr", model.description());
        Assertions.assertEquals("mbvwdxgy", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.INT, model.parameters().get("pbusxy").type());
        Assertions.assertEquals("hnu", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PaypalObjectDataset model = new PaypalObjectDataset().withDescription("htisyzfeoctr")
            .withStructure("datawn")
            .withSchema("datackze")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("mbvwdxgy")
                .withParameters(mapOf("atkuhskegd", "dataxqzlmlnxr", "l", "datavvi")))
            .withParameters(mapOf("pbusxy",
                new ParameterSpecification().withType(ParameterType.INT).withDefaultValue("dataxfzzjdm"), "kkbyg",
                new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("datazwplxzgzumnotii"),
                "wyshybbnhtt", new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("dataq")))
            .withAnnotations(Arrays.asList("dataonzsurqcoj", "datasfzhzzcarciuoxyi", "datadthjfvnhwsgnsput", "datae"))
            .withFolder(new DatasetFolder().withName("hnu"))
            .withTableName("dataamqobqehs");
        model = BinaryData.fromObject(model).toObject(PaypalObjectDataset.class);
        Assertions.assertEquals("htisyzfeoctr", model.description());
        Assertions.assertEquals("mbvwdxgy", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.INT, model.parameters().get("pbusxy").type());
        Assertions.assertEquals("hnu", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
