// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.InformixSink;

public final class InformixSinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InformixSink model = BinaryData.fromString(
            "{\"type\":\"InformixSink\",\"preCopyScript\":\"dataozqqwiawbwzyvbui\",\"writeBatchSize\":\"dataysatoplqc\",\"writeBatchTimeout\":\"datasrlzwuqkprf\",\"sinkRetryCount\":\"datacowtoqfwbsbkob\",\"sinkRetryWait\":\"datassj\",\"maxConcurrentConnections\":\"datahfcxwrjbrxm\",\"disableMetricsCollection\":\"dataetttul\",\"\":{\"mosiskihf\":\"datajbhespf\"}}")
            .toObject(InformixSink.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InformixSink model = new InformixSink().withWriteBatchSize("dataysatoplqc")
            .withWriteBatchTimeout("datasrlzwuqkprf")
            .withSinkRetryCount("datacowtoqfwbsbkob")
            .withSinkRetryWait("datassj")
            .withMaxConcurrentConnections("datahfcxwrjbrxm")
            .withDisableMetricsCollection("dataetttul")
            .withPreCopyScript("dataozqqwiawbwzyvbui");
        model = BinaryData.fromObject(model).toObject(InformixSink.class);
    }
}
