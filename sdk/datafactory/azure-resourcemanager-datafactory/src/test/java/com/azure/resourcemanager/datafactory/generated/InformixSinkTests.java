// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.InformixSink;

public final class InformixSinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InformixSink model = BinaryData.fromString(
            "{\"type\":\"InformixSink\",\"preCopyScript\":\"datapddletjiud\",\"writeBatchSize\":\"dataktsgcypjlmsta\",\"writeBatchTimeout\":\"datarebecxuu\",\"sinkRetryCount\":\"dataukluukxejamyc\",\"sinkRetryWait\":\"datawrv\",\"maxConcurrentConnections\":\"datajxkttx\",\"disableMetricsCollection\":\"databedvvmrtnmgabfz\",\"\":{\"bpmpl\":\"dataihylzwzh\",\"knbnamtv\":\"datath\",\"fx\":\"dataoaac\",\"rvtuxv\":\"datansvjctytyt\"}}")
            .toObject(InformixSink.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InformixSink model = new InformixSink().withWriteBatchSize("dataktsgcypjlmsta")
            .withWriteBatchTimeout("datarebecxuu")
            .withSinkRetryCount("dataukluukxejamyc")
            .withSinkRetryWait("datawrv")
            .withMaxConcurrentConnections("datajxkttx")
            .withDisableMetricsCollection("databedvvmrtnmgabfz")
            .withPreCopyScript("datapddletjiud");
        model = BinaryData.fromObject(model).toObject(InformixSink.class);
    }
}
