// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.OracleTableDataset;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class OracleTableDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OracleTableDataset model = BinaryData.fromString(
            "{\"type\":\"OracleTable\",\"typeProperties\":{\"tableName\":\"databn\",\"schema\":\"datanv\",\"table\":\"datahfuzzlapyixlvz\"},\"description\":\"ulaebx\",\"structure\":\"datauq\",\"schema\":\"dataptessjlw\",\"linkedServiceName\":{\"referenceName\":\"tatpvblskxgxqay\",\"parameters\":{\"jbvyezjwjkqo\":\"datalkvcvwpvl\",\"ieyozvrcwfpucwnb\":\"databwh\"}},\"parameters\":{\"xtuuci\":{\"type\":\"String\",\"defaultValue\":\"datagzjvbxqcbgoa\"},\"mjfexulvoep\":{\"type\":\"String\",\"defaultValue\":\"datakdlhuduklbjoa\"},\"qoacbuqdgsap\":{\"type\":\"String\",\"defaultValue\":\"datarseianc\"}},\"annotations\":[\"datafgkxenvs\"],\"folder\":{\"name\":\"vya\"},\"\":{\"uuvu\":\"dataz\"}}")
            .toObject(OracleTableDataset.class);
        Assertions.assertEquals("ulaebx", model.description());
        Assertions.assertEquals("tatpvblskxgxqay", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.STRING, model.parameters().get("xtuuci").type());
        Assertions.assertEquals("vya", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OracleTableDataset model = new OracleTableDataset().withDescription("ulaebx")
            .withStructure("datauq")
            .withSchema("dataptessjlw")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("tatpvblskxgxqay")
                .withParameters(mapOf("jbvyezjwjkqo", "datalkvcvwpvl", "ieyozvrcwfpucwnb", "databwh")))
            .withParameters(mapOf("xtuuci",
                new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("datagzjvbxqcbgoa"),
                "mjfexulvoep",
                new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("datakdlhuduklbjoa"),
                "qoacbuqdgsap",
                new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("datarseianc")))
            .withAnnotations(Arrays.asList("datafgkxenvs"))
            .withFolder(new DatasetFolder().withName("vya"))
            .withTableName("databn")
            .withSchemaTypePropertiesSchema("datanv")
            .withTable("datahfuzzlapyixlvz");
        model = BinaryData.fromObject(model).toObject(OracleTableDataset.class);
        Assertions.assertEquals("ulaebx", model.description());
        Assertions.assertEquals("tatpvblskxgxqay", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.STRING, model.parameters().get("xtuuci").type());
        Assertions.assertEquals("vya", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
