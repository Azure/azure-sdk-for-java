// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.OracleTableDataset;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class OracleTableDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OracleTableDataset model = BinaryData.fromString(
            "{\"type\":\"OracleTable\",\"typeProperties\":{\"tableName\":\"datazsxagysokli\",\"schema\":\"datas\",\"table\":\"datavrrbnhy\"},\"description\":\"bhujcydyl\",\"structure\":\"dataxvpstizsyqagqll\",\"schema\":\"datar\",\"linkedServiceName\":{\"referenceName\":\"aidyl\",\"parameters\":{\"jrnogykugdl\":\"datatrrqwfyybptm\",\"gthkslgeu\":\"datavsa\"}},\"parameters\":{\"lajybdnb\":{\"type\":\"String\",\"defaultValue\":\"databfbxj\"},\"zdjmofsvpzxgny\":{\"type\":\"String\",\"defaultValue\":\"databtois\"},\"ymg\":{\"type\":\"String\",\"defaultValue\":\"dataymlf\"}},\"annotations\":[\"dataszcfyzqpeqreg\",\"dataurd\"],\"folder\":{\"name\":\"knxmaovrgihlnz\"},\"\":{\"yafwtyd\":\"datawvqkycjcgeipqxxs\",\"hg\":\"datamma\",\"adj\":\"datalejqzhpvhxp\",\"qscjpvqerqxk\":\"dataeullgfyog\"}}")
            .toObject(OracleTableDataset.class);
        Assertions.assertEquals("bhujcydyl", model.description());
        Assertions.assertEquals("aidyl", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.STRING, model.parameters().get("lajybdnb").type());
        Assertions.assertEquals("knxmaovrgihlnz", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OracleTableDataset model = new OracleTableDataset().withDescription("bhujcydyl")
            .withStructure("dataxvpstizsyqagqll")
            .withSchema("datar")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("aidyl")
                .withParameters(mapOf("jrnogykugdl", "datatrrqwfyybptm", "gthkslgeu", "datavsa")))
            .withParameters(mapOf("lajybdnb",
                new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("databfbxj"),
                "zdjmofsvpzxgny",
                new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("databtois"), "ymg",
                new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("dataymlf")))
            .withAnnotations(Arrays.asList("dataszcfyzqpeqreg", "dataurd"))
            .withFolder(new DatasetFolder().withName("knxmaovrgihlnz"))
            .withTableName("datazsxagysokli")
            .withSchemaTypePropertiesSchema("datas")
            .withTable("datavrrbnhy");
        model = BinaryData.fromObject(model).toObject(OracleTableDataset.class);
        Assertions.assertEquals("bhujcydyl", model.description());
        Assertions.assertEquals("aidyl", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.STRING, model.parameters().get("lajybdnb").type());
        Assertions.assertEquals("knxmaovrgihlnz", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
