// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.CouchbaseSource;

public final class CouchbaseSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CouchbaseSource model = BinaryData.fromString(
            "{\"type\":\"CouchbaseSource\",\"query\":\"dataxlkcw\",\"queryTimeout\":\"dataejssksgxykdepqcy\",\"additionalColumns\":\"datahwsxpzkmotgmd\",\"sourceRetryCount\":\"datawwqevbiuntp\",\"sourceRetryWait\":\"datamwjxlyce\",\"maxConcurrentConnections\":\"dataeqgywrauur\",\"disableMetricsCollection\":\"datad\",\"\":{\"rmiecfmqcxm\":\"datacnk\"}}")
            .toObject(CouchbaseSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CouchbaseSource model = new CouchbaseSource().withSourceRetryCount("datawwqevbiuntp")
            .withSourceRetryWait("datamwjxlyce")
            .withMaxConcurrentConnections("dataeqgywrauur")
            .withDisableMetricsCollection("datad")
            .withQueryTimeout("dataejssksgxykdepqcy")
            .withAdditionalColumns("datahwsxpzkmotgmd")
            .withQuery("dataxlkcw");
        model = BinaryData.fromObject(model).toObject(CouchbaseSource.class);
    }
}
