// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.CouchbaseSource;

public final class CouchbaseSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CouchbaseSource model =
            BinaryData
                .fromString(
                    "{\"type\":\"CouchbaseSource\",\"query\":\"datafeavz\",\"queryTimeout\":\"datammzisljxphwy\",\"additionalColumns\":\"datamcpfrakucgjreoac\",\"sourceRetryCount\":\"dataaboozxkdzmtkmn\",\"sourceRetryWait\":\"datafdemrc\",\"maxConcurrentConnections\":\"dataxgpkyetm\",\"disableMetricsCollection\":\"datahihixisdvyflkeqg\",\"\":{\"bwlxoczzzlf\":\"datasbtosiwcveqge\",\"thxswuomjdo\":\"datahwdaj\",\"niob\":\"dataufqhq\"}}")
                .toObject(CouchbaseSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CouchbaseSource model =
            new CouchbaseSource()
                .withSourceRetryCount("dataaboozxkdzmtkmn")
                .withSourceRetryWait("datafdemrc")
                .withMaxConcurrentConnections("dataxgpkyetm")
                .withDisableMetricsCollection("datahihixisdvyflkeqg")
                .withQueryTimeout("datammzisljxphwy")
                .withAdditionalColumns("datamcpfrakucgjreoac")
                .withQuery("datafeavz");
        model = BinaryData.fromObject(model).toObject(CouchbaseSource.class);
    }
}
