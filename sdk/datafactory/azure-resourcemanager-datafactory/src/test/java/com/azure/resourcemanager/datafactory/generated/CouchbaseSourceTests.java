// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.CouchbaseSource;

public final class CouchbaseSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CouchbaseSource model = BinaryData.fromString(
            "{\"type\":\"CouchbaseSource\",\"query\":\"datauyefhhdrm\",\"queryTimeout\":\"dataifgyxkgqwmpgh\",\"additionalColumns\":\"datacxqcbnkxhcodhxsb\",\"sourceRetryCount\":\"datalfw\",\"sourceRetryWait\":\"dataouuyzpaqjahjxged\",\"maxConcurrentConnections\":\"datazhofhk\",\"disableMetricsCollection\":\"datawtacgu\",\"\":{\"cmrgahs\":\"datardqrfassiii\",\"ieqonsbukznxd\":\"dataayyxgcgb\",\"oxtkmknacnfz\":\"datavqopxun\",\"gzfeyexbg\":\"dataytbhdjpagwszmw\"}}")
            .toObject(CouchbaseSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CouchbaseSource model = new CouchbaseSource().withSourceRetryCount("datalfw")
            .withSourceRetryWait("dataouuyzpaqjahjxged")
            .withMaxConcurrentConnections("datazhofhk")
            .withDisableMetricsCollection("datawtacgu")
            .withQueryTimeout("dataifgyxkgqwmpgh")
            .withAdditionalColumns("datacxqcbnkxhcodhxsb")
            .withQuery("datauyefhhdrm");
        model = BinaryData.fromObject(model).toObject(CouchbaseSource.class);
    }
}
