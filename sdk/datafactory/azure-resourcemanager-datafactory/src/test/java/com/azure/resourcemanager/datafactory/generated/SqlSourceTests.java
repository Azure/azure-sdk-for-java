// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SqlPartitionSettings;
import com.azure.resourcemanager.datafactory.models.SqlSource;

public final class SqlSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SqlSource model = BinaryData.fromString(
            "{\"type\":\"SqlSource\",\"sqlReaderQuery\":\"dataokqeuzslny\",\"sqlReaderStoredProcedureName\":\"datauywijnlpeczq\",\"storedProcedureParameters\":\"datamzkqydthf\",\"isolationLevel\":\"dataycmwvphrwuf\",\"partitionOption\":\"dataov\",\"partitionSettings\":{\"partitionColumnName\":\"datasqlekchjdh\",\"partitionUpperBound\":\"datakeif\",\"partitionLowerBound\":\"datatcownxiw\"},\"queryTimeout\":\"datatvbudbnu\",\"additionalColumns\":\"datamllyjelnhm\",\"sourceRetryCount\":\"datahxkofzxkqsle\",\"sourceRetryWait\":\"databam\",\"maxConcurrentConnections\":\"datanwgccgblepam\",\"disableMetricsCollection\":\"databaxdaoja\",\"\":{\"ljmj\":\"dataoxwqlnxvnm\"}}")
            .toObject(SqlSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SqlSource model = new SqlSource().withSourceRetryCount("datahxkofzxkqsle")
            .withSourceRetryWait("databam")
            .withMaxConcurrentConnections("datanwgccgblepam")
            .withDisableMetricsCollection("databaxdaoja")
            .withQueryTimeout("datatvbudbnu")
            .withAdditionalColumns("datamllyjelnhm")
            .withSqlReaderQuery("dataokqeuzslny")
            .withSqlReaderStoredProcedureName("datauywijnlpeczq")
            .withStoredProcedureParameters("datamzkqydthf")
            .withIsolationLevel("dataycmwvphrwuf")
            .withPartitionOption("dataov")
            .withPartitionSettings(new SqlPartitionSettings().withPartitionColumnName("datasqlekchjdh")
                .withPartitionUpperBound("datakeif")
                .withPartitionLowerBound("datatcownxiw"));
        model = BinaryData.fromObject(model).toObject(SqlSource.class);
    }
}
