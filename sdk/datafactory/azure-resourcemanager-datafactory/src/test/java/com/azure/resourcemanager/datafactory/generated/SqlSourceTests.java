// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SqlPartitionSettings;
import com.azure.resourcemanager.datafactory.models.SqlSource;

public final class SqlSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SqlSource model = BinaryData.fromString(
            "{\"type\":\"SqlSource\",\"sqlReaderQuery\":\"datadqvqfldaqoaopz\",\"sqlReaderStoredProcedureName\":\"datafw\",\"storedProcedureParameters\":\"datad\",\"isolationLevel\":\"dataxformfeedfqjne\",\"partitionOption\":\"dataxtesnhxphxo\",\"partitionSettings\":{\"partitionColumnName\":\"datavtpqttusuxxbzmpv\",\"partitionUpperBound\":\"dataijrnnwgrxzcn\",\"partitionLowerBound\":\"datauezxluimkwbwmg\"},\"queryTimeout\":\"dataqlsn\",\"additionalColumns\":\"datachpcjztziu\",\"sourceRetryCount\":\"datayvpcfvi\",\"sourceRetryWait\":\"dataxciunet\",\"maxConcurrentConnections\":\"datagd\",\"disableMetricsCollection\":\"datakletlwa\",\"\":{\"ftjdr\":\"databphxx\"}}")
            .toObject(SqlSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SqlSource model = new SqlSource().withSourceRetryCount("datayvpcfvi")
            .withSourceRetryWait("dataxciunet")
            .withMaxConcurrentConnections("datagd")
            .withDisableMetricsCollection("datakletlwa")
            .withQueryTimeout("dataqlsn")
            .withAdditionalColumns("datachpcjztziu")
            .withSqlReaderQuery("datadqvqfldaqoaopz")
            .withSqlReaderStoredProcedureName("datafw")
            .withStoredProcedureParameters("datad")
            .withIsolationLevel("dataxformfeedfqjne")
            .withPartitionOption("dataxtesnhxphxo")
            .withPartitionSettings(new SqlPartitionSettings().withPartitionColumnName("datavtpqttusuxxbzmpv")
                .withPartitionUpperBound("dataijrnnwgrxzcn")
                .withPartitionLowerBound("datauezxluimkwbwmg"));
        model = BinaryData.fromObject(model).toObject(SqlSource.class);
    }
}
