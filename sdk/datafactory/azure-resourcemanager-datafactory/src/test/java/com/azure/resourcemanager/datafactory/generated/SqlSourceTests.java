// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SqlPartitionSettings;
import com.azure.resourcemanager.datafactory.models.SqlSource;

public final class SqlSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SqlSource model = BinaryData.fromString(
            "{\"type\":\"gqgcnkghgczjxo\",\"sqlReaderQuery\":\"dataqzd\",\"sqlReaderStoredProcedureName\":\"datamyutzttroymi\",\"storedProcedureParameters\":\"datakuz\",\"isolationLevel\":\"datacegyztzhcfuwm\",\"partitionOption\":\"dataz\",\"partitionSettings\":{\"partitionColumnName\":\"datak\",\"partitionUpperBound\":\"dataoogflhhos\",\"partitionLowerBound\":\"datablyokjwss\"},\"queryTimeout\":\"datardg\",\"additionalColumns\":\"dataihnzvoeh\",\"sourceRetryCount\":\"dataigdwpg\",\"sourceRetryWait\":\"dataqh\",\"maxConcurrentConnections\":\"dataexnwxqw\",\"disableMetricsCollection\":\"dataaqlymmhzvnetecfy\",\"\":{\"wfpoaf\":\"datak\",\"kssygdvllbb\":\"datagkzgzxqwvvfkqb\",\"xygrniqnxpsebazb\":\"datafulvhpwp\",\"qgn\":\"datayrjr\"}}")
            .toObject(SqlSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SqlSource model = new SqlSource().withSourceRetryCount("dataigdwpg")
            .withSourceRetryWait("dataqh")
            .withMaxConcurrentConnections("dataexnwxqw")
            .withDisableMetricsCollection("dataaqlymmhzvnetecfy")
            .withQueryTimeout("datardg")
            .withAdditionalColumns("dataihnzvoeh")
            .withSqlReaderQuery("dataqzd")
            .withSqlReaderStoredProcedureName("datamyutzttroymi")
            .withStoredProcedureParameters("datakuz")
            .withIsolationLevel("datacegyztzhcfuwm")
            .withPartitionOption("dataz")
            .withPartitionSettings(new SqlPartitionSettings().withPartitionColumnName("datak")
                .withPartitionUpperBound("dataoogflhhos")
                .withPartitionLowerBound("datablyokjwss"));
        model = BinaryData.fromObject(model).toObject(SqlSource.class);
    }
}
