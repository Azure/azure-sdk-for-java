// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SqlPartitionSettings;
import com.azure.resourcemanager.datafactory.models.SqlSource;

public final class SqlSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SqlSource model = BinaryData.fromString(
            "{\"type\":\"SqlSource\",\"sqlReaderQuery\":\"dataiob\",\"sqlReaderStoredProcedureName\":\"datatpyemppwkry\",\"storedProcedureParameters\":\"datadqpkqf\",\"isolationLevel\":\"datahoiq\",\"partitionOption\":\"databhmy\",\"partitionSettings\":{\"partitionColumnName\":\"datamfyernc\",\"partitionUpperBound\":\"datagwiquka\",\"partitionLowerBound\":\"dataokeolzizfbunzm\"},\"queryTimeout\":\"datafttmjomuwl\",\"additionalColumns\":\"datajwkpznsfbi\",\"sourceRetryCount\":\"datafzgpvdlx\",\"sourceRetryWait\":\"dataotclcuxzllnwmgqc\",\"maxConcurrentConnections\":\"datagjequox\",\"disableMetricsCollection\":\"datagfspwhfhdguuvg\",\"\":{\"ytqzx\":\"datazvd\"}}")
            .toObject(SqlSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SqlSource model = new SqlSource().withSourceRetryCount("datafzgpvdlx")
            .withSourceRetryWait("dataotclcuxzllnwmgqc")
            .withMaxConcurrentConnections("datagjequox")
            .withDisableMetricsCollection("datagfspwhfhdguuvg")
            .withQueryTimeout("datafttmjomuwl")
            .withAdditionalColumns("datajwkpznsfbi")
            .withSqlReaderQuery("dataiob")
            .withSqlReaderStoredProcedureName("datatpyemppwkry")
            .withStoredProcedureParameters("datadqpkqf")
            .withIsolationLevel("datahoiq")
            .withPartitionOption("databhmy")
            .withPartitionSettings(new SqlPartitionSettings().withPartitionColumnName("datamfyernc")
                .withPartitionUpperBound("datagwiquka")
                .withPartitionLowerBound("dataokeolzizfbunzm"));
        model = BinaryData.fromObject(model).toObject(SqlSource.class);
    }
}
