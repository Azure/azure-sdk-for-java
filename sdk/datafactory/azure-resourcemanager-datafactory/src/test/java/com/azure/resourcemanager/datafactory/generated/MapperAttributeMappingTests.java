// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.ConnectionType;
import com.azure.resourcemanager.datafactory.models.MapperAttributeMapping;
import com.azure.resourcemanager.datafactory.models.MapperAttributeReference;
import com.azure.resourcemanager.datafactory.models.MapperConnectionReference;
import com.azure.resourcemanager.datafactory.models.MappingType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MapperAttributeMappingTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MapperAttributeMapping model = BinaryData.fromString(
            "{\"name\":\"ixlqfhefkwabsolr\",\"type\":\"Aggregate\",\"functionName\":\"lmgnlqxsjx\",\"expression\":\"lexhv\",\"attributeReference\":{\"name\":\"ozoolzq\",\"entity\":\"arkuzl\",\"entityConnectionReference\":{\"connectionName\":\"ndtsnxawqytll\",\"type\":\"linkedservicetype\"}},\"attributeReferences\":[{\"name\":\"ckze\",\"entity\":\"xak\",\"entityConnectionReference\":{\"connectionName\":\"wymxgaabjk\",\"type\":\"linkedservicetype\"}}]}")
            .toObject(MapperAttributeMapping.class);
        Assertions.assertEquals("ixlqfhefkwabsolr", model.name());
        Assertions.assertEquals(MappingType.AGGREGATE, model.type());
        Assertions.assertEquals("lmgnlqxsjx", model.functionName());
        Assertions.assertEquals("lexhv", model.expression());
        Assertions.assertEquals("ozoolzq", model.attributeReference().name());
        Assertions.assertEquals("arkuzl", model.attributeReference().entity());
        Assertions.assertEquals("ndtsnxawqytll",
            model.attributeReference().entityConnectionReference().connectionName());
        Assertions.assertEquals(ConnectionType.LINKEDSERVICETYPE,
            model.attributeReference().entityConnectionReference().type());
        Assertions.assertEquals("ckze", model.attributeReferences().get(0).name());
        Assertions.assertEquals("xak", model.attributeReferences().get(0).entity());
        Assertions.assertEquals("wymxgaabjk",
            model.attributeReferences().get(0).entityConnectionReference().connectionName());
        Assertions.assertEquals(ConnectionType.LINKEDSERVICETYPE,
            model.attributeReferences().get(0).entityConnectionReference().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MapperAttributeMapping model = new MapperAttributeMapping().withName("ixlqfhefkwabsolr")
            .withType(MappingType.AGGREGATE)
            .withFunctionName("lmgnlqxsjx")
            .withExpression("lexhv")
            .withAttributeReference(new MapperAttributeReference().withName("ozoolzq")
                .withEntity("arkuzl")
                .withEntityConnectionReference(new MapperConnectionReference().withConnectionName("ndtsnxawqytll")
                    .withType(ConnectionType.LINKEDSERVICETYPE)))
            .withAttributeReferences(Arrays.asList(new MapperAttributeReference().withName("ckze")
                .withEntity("xak")
                .withEntityConnectionReference(new MapperConnectionReference().withConnectionName("wymxgaabjk")
                    .withType(ConnectionType.LINKEDSERVICETYPE))));
        model = BinaryData.fromObject(model).toObject(MapperAttributeMapping.class);
        Assertions.assertEquals("ixlqfhefkwabsolr", model.name());
        Assertions.assertEquals(MappingType.AGGREGATE, model.type());
        Assertions.assertEquals("lmgnlqxsjx", model.functionName());
        Assertions.assertEquals("lexhv", model.expression());
        Assertions.assertEquals("ozoolzq", model.attributeReference().name());
        Assertions.assertEquals("arkuzl", model.attributeReference().entity());
        Assertions.assertEquals("ndtsnxawqytll",
            model.attributeReference().entityConnectionReference().connectionName());
        Assertions.assertEquals(ConnectionType.LINKEDSERVICETYPE,
            model.attributeReference().entityConnectionReference().type());
        Assertions.assertEquals("ckze", model.attributeReferences().get(0).name());
        Assertions.assertEquals("xak", model.attributeReferences().get(0).entity());
        Assertions.assertEquals("wymxgaabjk",
            model.attributeReferences().get(0).entityConnectionReference().connectionName());
        Assertions.assertEquals(ConnectionType.LINKEDSERVICETYPE,
            model.attributeReferences().get(0).entityConnectionReference().type());
    }
}
