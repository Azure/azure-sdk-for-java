// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.ConnectionType;
import com.azure.resourcemanager.datafactory.models.MapperAttributeMapping;
import com.azure.resourcemanager.datafactory.models.MapperAttributeReference;
import com.azure.resourcemanager.datafactory.models.MapperConnectionReference;
import com.azure.resourcemanager.datafactory.models.MappingType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MapperAttributeMappingTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MapperAttributeMapping model =
            BinaryData
                .fromString(
                    "{\"name\":\"czwciidjsllfryvd\",\"type\":\"Derived\",\"functionName\":\"dqacfrgnawbabgf\",\"expression\":\"t\",\"attributeReference\":{\"name\":\"fczlfsyqkfrbzgow\",\"entity\":\"qmje\",\"entityConnectionReference\":{\"connectionName\":\"xnyqgxhlusr\",\"type\":\"linkedservicetype\"}},\"attributeReferences\":[{\"name\":\"jceagb\",\"entity\":\"vl\",\"entityConnectionReference\":{\"connectionName\":\"ywzash\",\"type\":\"linkedservicetype\"}}]}")
                .toObject(MapperAttributeMapping.class);
        Assertions.assertEquals("czwciidjsllfryvd", model.name());
        Assertions.assertEquals(MappingType.DERIVED, model.type());
        Assertions.assertEquals("dqacfrgnawbabgf", model.functionName());
        Assertions.assertEquals("t", model.expression());
        Assertions.assertEquals("fczlfsyqkfrbzgow", model.attributeReference().name());
        Assertions.assertEquals("qmje", model.attributeReference().entity());
        Assertions.assertEquals("xnyqgxhlusr", model.attributeReference().entityConnectionReference().connectionName());
        Assertions
            .assertEquals(
                ConnectionType.LINKEDSERVICETYPE, model.attributeReference().entityConnectionReference().type());
        Assertions.assertEquals("jceagb", model.attributeReferences().get(0).name());
        Assertions.assertEquals("vl", model.attributeReferences().get(0).entity());
        Assertions
            .assertEquals("ywzash", model.attributeReferences().get(0).entityConnectionReference().connectionName());
        Assertions
            .assertEquals(
                ConnectionType.LINKEDSERVICETYPE,
                model.attributeReferences().get(0).entityConnectionReference().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MapperAttributeMapping model =
            new MapperAttributeMapping()
                .withName("czwciidjsllfryvd")
                .withType(MappingType.DERIVED)
                .withFunctionName("dqacfrgnawbabgf")
                .withExpression("t")
                .withAttributeReference(
                    new MapperAttributeReference()
                        .withName("fczlfsyqkfrbzgow")
                        .withEntity("qmje")
                        .withEntityConnectionReference(
                            new MapperConnectionReference()
                                .withConnectionName("xnyqgxhlusr")
                                .withType(ConnectionType.LINKEDSERVICETYPE)))
                .withAttributeReferences(
                    Arrays
                        .asList(
                            new MapperAttributeReference()
                                .withName("jceagb")
                                .withEntity("vl")
                                .withEntityConnectionReference(
                                    new MapperConnectionReference()
                                        .withConnectionName("ywzash")
                                        .withType(ConnectionType.LINKEDSERVICETYPE))));
        model = BinaryData.fromObject(model).toObject(MapperAttributeMapping.class);
        Assertions.assertEquals("czwciidjsllfryvd", model.name());
        Assertions.assertEquals(MappingType.DERIVED, model.type());
        Assertions.assertEquals("dqacfrgnawbabgf", model.functionName());
        Assertions.assertEquals("t", model.expression());
        Assertions.assertEquals("fczlfsyqkfrbzgow", model.attributeReference().name());
        Assertions.assertEquals("qmje", model.attributeReference().entity());
        Assertions.assertEquals("xnyqgxhlusr", model.attributeReference().entityConnectionReference().connectionName());
        Assertions
            .assertEquals(
                ConnectionType.LINKEDSERVICETYPE, model.attributeReference().entityConnectionReference().type());
        Assertions.assertEquals("jceagb", model.attributeReferences().get(0).name());
        Assertions.assertEquals("vl", model.attributeReferences().get(0).entity());
        Assertions
            .assertEquals("ywzash", model.attributeReferences().get(0).entityConnectionReference().connectionName());
        Assertions
            .assertEquals(
                ConnectionType.LINKEDSERVICETYPE,
                model.attributeReferences().get(0).entityConnectionReference().type());
    }
}
