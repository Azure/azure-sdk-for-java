// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.ConnectionType;
import com.azure.resourcemanager.datafactory.models.MapperAttributeMapping;
import com.azure.resourcemanager.datafactory.models.MapperAttributeReference;
import com.azure.resourcemanager.datafactory.models.MapperConnectionReference;
import com.azure.resourcemanager.datafactory.models.MappingType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MapperAttributeMappingTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MapperAttributeMapping model = BinaryData.fromString(
            "{\"name\":\"crunfhi\",\"type\":\"Derived\",\"functionName\":\"fbcpaqktkrumzu\",\"expression\":\"kyzbfvxovqkxiux\",\"attributeReference\":{\"name\":\"vqrnhyhlwcjsqgg\",\"entity\":\"ffbxrqrkij\",\"entityConnectionReference\":{\"connectionName\":\"qlsdxeqztvxwmw\",\"type\":\"linkedservicetype\"}},\"attributeReferences\":[{\"name\":\"na\",\"entity\":\"amecle\",\"entityConnectionReference\":{\"connectionName\":\"ulndhzyoeo\",\"type\":\"linkedservicetype\"}},{\"name\":\"llhsvidmyt\",\"entity\":\"nglxpn\",\"entityConnectionReference\":{\"connectionName\":\"oanfbcswqagyw\",\"type\":\"linkedservicetype\"}}]}")
            .toObject(MapperAttributeMapping.class);
        Assertions.assertEquals("crunfhi", model.name());
        Assertions.assertEquals(MappingType.DERIVED, model.type());
        Assertions.assertEquals("fbcpaqktkrumzu", model.functionName());
        Assertions.assertEquals("kyzbfvxovqkxiux", model.expression());
        Assertions.assertEquals("vqrnhyhlwcjsqgg", model.attributeReference().name());
        Assertions.assertEquals("ffbxrqrkij", model.attributeReference().entity());
        Assertions.assertEquals("qlsdxeqztvxwmw",
            model.attributeReference().entityConnectionReference().connectionName());
        Assertions.assertEquals(ConnectionType.LINKEDSERVICETYPE,
            model.attributeReference().entityConnectionReference().type());
        Assertions.assertEquals("na", model.attributeReferences().get(0).name());
        Assertions.assertEquals("amecle", model.attributeReferences().get(0).entity());
        Assertions.assertEquals("ulndhzyoeo",
            model.attributeReferences().get(0).entityConnectionReference().connectionName());
        Assertions.assertEquals(ConnectionType.LINKEDSERVICETYPE,
            model.attributeReferences().get(0).entityConnectionReference().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MapperAttributeMapping model = new MapperAttributeMapping().withName("crunfhi")
            .withType(MappingType.DERIVED)
            .withFunctionName("fbcpaqktkrumzu")
            .withExpression("kyzbfvxovqkxiux")
            .withAttributeReference(new MapperAttributeReference().withName("vqrnhyhlwcjsqgg")
                .withEntity("ffbxrqrkij")
                .withEntityConnectionReference(new MapperConnectionReference().withConnectionName("qlsdxeqztvxwmw")
                    .withType(ConnectionType.LINKEDSERVICETYPE)))
            .withAttributeReferences(Arrays.asList(
                new MapperAttributeReference().withName("na")
                    .withEntity("amecle")
                    .withEntityConnectionReference(new MapperConnectionReference().withConnectionName("ulndhzyoeo")
                        .withType(ConnectionType.LINKEDSERVICETYPE)),
                new MapperAttributeReference().withName("llhsvidmyt")
                    .withEntity("nglxpn")
                    .withEntityConnectionReference(new MapperConnectionReference().withConnectionName("oanfbcswqagyw")
                        .withType(ConnectionType.LINKEDSERVICETYPE))));
        model = BinaryData.fromObject(model).toObject(MapperAttributeMapping.class);
        Assertions.assertEquals("crunfhi", model.name());
        Assertions.assertEquals(MappingType.DERIVED, model.type());
        Assertions.assertEquals("fbcpaqktkrumzu", model.functionName());
        Assertions.assertEquals("kyzbfvxovqkxiux", model.expression());
        Assertions.assertEquals("vqrnhyhlwcjsqgg", model.attributeReference().name());
        Assertions.assertEquals("ffbxrqrkij", model.attributeReference().entity());
        Assertions.assertEquals("qlsdxeqztvxwmw",
            model.attributeReference().entityConnectionReference().connectionName());
        Assertions.assertEquals(ConnectionType.LINKEDSERVICETYPE,
            model.attributeReference().entityConnectionReference().type());
        Assertions.assertEquals("na", model.attributeReferences().get(0).name());
        Assertions.assertEquals("amecle", model.attributeReferences().get(0).entity());
        Assertions.assertEquals("ulndhzyoeo",
            model.attributeReferences().get(0).entityConnectionReference().connectionName());
        Assertions.assertEquals(ConnectionType.LINKEDSERVICETYPE,
            model.attributeReferences().get(0).entityConnectionReference().type());
    }
}
