// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.NetezzaPartitionSettings;
import com.azure.resourcemanager.datafactory.models.NetezzaSource;

public final class NetezzaSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetezzaSource model = BinaryData.fromString(
            "{\"type\":\"NetezzaSource\",\"query\":\"dataihnzvoeh\",\"partitionOption\":\"datagqgcnkghgczjxo\",\"partitionSettings\":{\"partitionColumnName\":\"datagdwpgmhqhvnexnw\",\"partitionUpperBound\":\"datawcxaqlym\",\"partitionLowerBound\":\"datazv\"},\"queryTimeout\":\"datatecfyusfkcwfpo\",\"additionalColumns\":\"datalgkzgzxqwv\",\"sourceRetryCount\":\"datakqbgkssygdvll\",\"sourceRetryWait\":\"datadfulvhpwpsxygrn\",\"maxConcurrentConnections\":\"datanxpsebazbtyrjr\",\"disableMetricsCollection\":\"datagn\",\"\":{\"ywh\":\"datarrapimtuojqzgyym\",\"o\":\"datadkjykvez\",\"z\":\"datatzd\"}}")
            .toObject(NetezzaSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetezzaSource model = new NetezzaSource().withSourceRetryCount("datakqbgkssygdvll")
            .withSourceRetryWait("datadfulvhpwpsxygrn")
            .withMaxConcurrentConnections("datanxpsebazbtyrjr")
            .withDisableMetricsCollection("datagn")
            .withQueryTimeout("datatecfyusfkcwfpo")
            .withAdditionalColumns("datalgkzgzxqwv")
            .withQuery("dataihnzvoeh")
            .withPartitionOption("datagqgcnkghgczjxo")
            .withPartitionSettings(new NetezzaPartitionSettings().withPartitionColumnName("datagdwpgmhqhvnexnw")
                .withPartitionUpperBound("datawcxaqlym")
                .withPartitionLowerBound("datazv"));
        model = BinaryData.fromObject(model).toObject(NetezzaSource.class);
    }
}
