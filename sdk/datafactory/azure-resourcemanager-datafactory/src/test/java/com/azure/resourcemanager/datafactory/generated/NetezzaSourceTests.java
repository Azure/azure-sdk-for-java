// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.NetezzaPartitionSettings;
import com.azure.resourcemanager.datafactory.models.NetezzaSource;

public final class NetezzaSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetezzaSource model = BinaryData.fromString(
            "{\"type\":\"NetezzaSource\",\"query\":\"dataiwcgcwmshlpq\",\"partitionOption\":\"dataxhdwjfxopzclka\",\"partitionSettings\":{\"partitionColumnName\":\"dataomgaivcqnjjf\",\"partitionUpperBound\":\"datavcfbflyzcqomlybs\",\"partitionLowerBound\":\"datao\"},\"queryTimeout\":\"datavtvbfpu\",\"additionalColumns\":\"dataobtdhum\",\"sourceRetryCount\":\"dataqwckapoetdfzjwje\",\"sourceRetryWait\":\"datalihanawipdqoz\",\"maxConcurrentConnections\":\"datalqzopvhwmtdbfrj\",\"disableMetricsCollection\":\"datavu\",\"\":{\"rd\":\"datasnfeag\"}}")
            .toObject(NetezzaSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetezzaSource model = new NetezzaSource().withSourceRetryCount("dataqwckapoetdfzjwje")
            .withSourceRetryWait("datalihanawipdqoz").withMaxConcurrentConnections("datalqzopvhwmtdbfrj")
            .withDisableMetricsCollection("datavu").withQueryTimeout("datavtvbfpu").withAdditionalColumns("dataobtdhum")
            .withQuery("dataiwcgcwmshlpq").withPartitionOption("dataxhdwjfxopzclka")
            .withPartitionSettings(new NetezzaPartitionSettings().withPartitionColumnName("dataomgaivcqnjjf")
                .withPartitionUpperBound("datavcfbflyzcqomlybs").withPartitionLowerBound("datao"));
        model = BinaryData.fromObject(model).toObject(NetezzaSource.class);
    }
}
