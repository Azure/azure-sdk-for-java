// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.NetezzaPartitionSettings;
import com.azure.resourcemanager.datafactory.models.NetezzaSource;

public final class NetezzaSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetezzaSource model = BinaryData.fromString(
            "{\"type\":\"NetezzaSource\",\"query\":\"datarnknnql\",\"partitionOption\":\"datagyeyxmuwgnwxtm\",\"partitionSettings\":{\"partitionColumnName\":\"dataencmos\",\"partitionUpperBound\":\"dataxlgz\",\"partitionLowerBound\":\"dataqxewsvqpifza\"},\"queryTimeout\":\"datatywap\",\"additionalColumns\":\"dataczprzrsqcu\",\"sourceRetryCount\":\"datanp\",\"sourceRetryWait\":\"dataqlanuhmsrnp\",\"maxConcurrentConnections\":\"dataaghoeqiwpdxpd\",\"disableMetricsCollection\":\"dataoajqxyplhsto\",\"\":{\"svpi\":\"databwl\"}}")
            .toObject(NetezzaSource.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetezzaSource model = new NetezzaSource().withSourceRetryCount("datanp")
            .withSourceRetryWait("dataqlanuhmsrnp")
            .withMaxConcurrentConnections("dataaghoeqiwpdxpd")
            .withDisableMetricsCollection("dataoajqxyplhsto")
            .withQueryTimeout("datatywap")
            .withAdditionalColumns("dataczprzrsqcu")
            .withQuery("datarnknnql")
            .withPartitionOption("datagyeyxmuwgnwxtm")
            .withPartitionSettings(new NetezzaPartitionSettings().withPartitionColumnName("dataencmos")
                .withPartitionUpperBound("dataxlgz")
                .withPartitionLowerBound("dataqxewsvqpifza"));
        model = BinaryData.fromObject(model).toObject(NetezzaSource.class);
    }
}
