// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.fluent.models.TumblingWindowTriggerTypeProperties;
import com.azure.resourcemanager.datafactory.models.DependencyReference;
import com.azure.resourcemanager.datafactory.models.RetryPolicy;
import com.azure.resourcemanager.datafactory.models.TumblingWindowFrequency;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class TumblingWindowTriggerTypePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TumblingWindowTriggerTypeProperties model = BinaryData.fromString(
            "{\"frequency\":\"Hour\",\"interval\":1864030718,\"startTime\":\"2021-07-18T12:19:55Z\",\"endTime\":\"2021-10-02T05:42:52Z\",\"delay\":\"datagonrrarznlrr\",\"maxConcurrency\":896190776,\"retryPolicy\":{\"count\":\"dataaejbmt\",\"intervalInSeconds\":519972716},\"dependsOn\":[{\"type\":\"DependencyReference\"},{\"type\":\"DependencyReference\"},{\"type\":\"DependencyReference\"},{\"type\":\"DependencyReference\"}]}")
            .toObject(TumblingWindowTriggerTypeProperties.class);
        Assertions.assertEquals(TumblingWindowFrequency.HOUR, model.frequency());
        Assertions.assertEquals(1864030718, model.interval());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-18T12:19:55Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-02T05:42:52Z"), model.endTime());
        Assertions.assertEquals(896190776, model.maxConcurrency());
        Assertions.assertEquals(519972716, model.retryPolicy().intervalInSeconds());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TumblingWindowTriggerTypeProperties model
            = new TumblingWindowTriggerTypeProperties().withFrequency(TumblingWindowFrequency.HOUR)
                .withInterval(1864030718)
                .withStartTime(OffsetDateTime.parse("2021-07-18T12:19:55Z"))
                .withEndTime(OffsetDateTime.parse("2021-10-02T05:42:52Z"))
                .withDelay("datagonrrarznlrr")
                .withMaxConcurrency(896190776)
                .withRetryPolicy(new RetryPolicy().withCount("dataaejbmt").withIntervalInSeconds(519972716))
                .withDependsOn(Arrays.asList(new DependencyReference(), new DependencyReference(),
                    new DependencyReference(), new DependencyReference()));
        model = BinaryData.fromObject(model).toObject(TumblingWindowTriggerTypeProperties.class);
        Assertions.assertEquals(TumblingWindowFrequency.HOUR, model.frequency());
        Assertions.assertEquals(1864030718, model.interval());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-18T12:19:55Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-02T05:42:52Z"), model.endTime());
        Assertions.assertEquals(896190776, model.maxConcurrency());
        Assertions.assertEquals(519972716, model.retryPolicy().intervalInSeconds());
    }
}
