// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.fluent.models.TumblingWindowTriggerTypeProperties;
import com.azure.resourcemanager.datafactory.models.DependencyReference;
import com.azure.resourcemanager.datafactory.models.RetryPolicy;
import com.azure.resourcemanager.datafactory.models.TumblingWindowFrequency;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class TumblingWindowTriggerTypePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TumblingWindowTriggerTypeProperties model = BinaryData.fromString(
            "{\"frequency\":\"Minute\",\"interval\":1685716291,\"startTime\":\"2021-03-02T03:51:14Z\",\"endTime\":\"2021-10-15T07:32:04Z\",\"delay\":\"datanlaklszbeutqfx\",\"maxConcurrency\":1561097036,\"retryPolicy\":{\"count\":\"datai\",\"intervalInSeconds\":1537689259},\"dependsOn\":[{\"type\":\"DependencyReference\"},{\"type\":\"DependencyReference\"},{\"type\":\"DependencyReference\"}]}")
            .toObject(TumblingWindowTriggerTypeProperties.class);
        Assertions.assertEquals(TumblingWindowFrequency.MINUTE, model.frequency());
        Assertions.assertEquals(1685716291, model.interval());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-02T03:51:14Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-15T07:32:04Z"), model.endTime());
        Assertions.assertEquals(1561097036, model.maxConcurrency());
        Assertions.assertEquals(1537689259, model.retryPolicy().intervalInSeconds());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TumblingWindowTriggerTypeProperties model
            = new TumblingWindowTriggerTypeProperties().withFrequency(TumblingWindowFrequency.MINUTE)
                .withInterval(1685716291).withStartTime(OffsetDateTime.parse("2021-03-02T03:51:14Z"))
                .withEndTime(OffsetDateTime.parse("2021-10-15T07:32:04Z")).withDelay("datanlaklszbeutqfx")
                .withMaxConcurrency(1561097036)
                .withRetryPolicy(new RetryPolicy().withCount("datai").withIntervalInSeconds(1537689259)).withDependsOn(
                    Arrays.asList(new DependencyReference(), new DependencyReference(), new DependencyReference()));
        model = BinaryData.fromObject(model).toObject(TumblingWindowTriggerTypeProperties.class);
        Assertions.assertEquals(TumblingWindowFrequency.MINUTE, model.frequency());
        Assertions.assertEquals(1685716291, model.interval());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-02T03:51:14Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-15T07:32:04Z"), model.endTime());
        Assertions.assertEquals(1561097036, model.maxConcurrency());
        Assertions.assertEquals(1537689259, model.retryPolicy().intervalInSeconds());
    }
}
