// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.fluent.models.TumblingWindowTriggerTypeProperties;
import com.azure.resourcemanager.datafactory.models.DependencyReference;
import com.azure.resourcemanager.datafactory.models.RetryPolicy;
import com.azure.resourcemanager.datafactory.models.TumblingWindowFrequency;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class TumblingWindowTriggerTypePropertiesTests {
    @Test
    public void testDeserialize() {
        TumblingWindowTriggerTypeProperties model =
            BinaryData
                .fromString(
                    "{\"frequency\":\"Hour\",\"interval\":798038402,\"startTime\":\"2021-04-09T01:35:46Z\",\"endTime\":\"2021-09-01T20:17:08Z\",\"maxConcurrency\":374312001,\"retryPolicy\":{\"intervalInSeconds\":1831794256},\"dependsOn\":[{\"type\":\"DependencyReference\"}]}")
                .toObject(TumblingWindowTriggerTypeProperties.class);
        Assertions.assertEquals(TumblingWindowFrequency.HOUR, model.frequency());
        Assertions.assertEquals(798038402, model.interval());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-09T01:35:46Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-01T20:17:08Z"), model.endTime());
        Assertions.assertEquals(374312001, model.maxConcurrency());
        Assertions.assertEquals(1831794256, model.retryPolicy().intervalInSeconds());
    }

    @Test
    public void testSerialize() {
        TumblingWindowTriggerTypeProperties model =
            new TumblingWindowTriggerTypeProperties()
                .withFrequency(TumblingWindowFrequency.HOUR)
                .withInterval(798038402)
                .withStartTime(OffsetDateTime.parse("2021-04-09T01:35:46Z"))
                .withEndTime(OffsetDateTime.parse("2021-09-01T20:17:08Z"))
                .withMaxConcurrency(374312001)
                .withRetryPolicy(new RetryPolicy().withIntervalInSeconds(1831794256))
                .withDependsOn(Arrays.asList(new DependencyReference()));
        model = BinaryData.fromObject(model).toObject(TumblingWindowTriggerTypeProperties.class);
        Assertions.assertEquals(TumblingWindowFrequency.HOUR, model.frequency());
        Assertions.assertEquals(798038402, model.interval());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-09T01:35:46Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-01T20:17:08Z"), model.endTime());
        Assertions.assertEquals(374312001, model.maxConcurrency());
        Assertions.assertEquals(1831794256, model.retryPolicy().intervalInSeconds());
    }
}
