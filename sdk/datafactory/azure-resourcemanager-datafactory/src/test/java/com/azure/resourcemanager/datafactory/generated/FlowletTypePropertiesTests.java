// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties;
import com.azure.resourcemanager.datafactory.models.DataFlowReference;
import com.azure.resourcemanager.datafactory.models.DataFlowReferenceType;
import com.azure.resourcemanager.datafactory.models.DataFlowSink;
import com.azure.resourcemanager.datafactory.models.DataFlowSource;
import com.azure.resourcemanager.datafactory.models.DatasetReference;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.Transformation;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class FlowletTypePropertiesTests {
    @Test
    public void testDeserialize() {
        FlowletTypeProperties model =
            BinaryData
                .fromString(
                    "{\"sources\":[{\"schemaLinkedService\":{\"referenceName\":\"xylfsb\",\"parameters\":{}},\"name\":\"adpysownbt\",\"description\":\"bugrj\",\"dataset\":{\"referenceName\":\"to\",\"parameters\":{}},\"linkedService\":{\"referenceName\":\"isofieypefojyqd\",\"parameters\":{}},\"flowlet\":{\"type\":\"DataFlowReference\",\"referenceName\":\"lcplc\",\"parameters\":{},\"\":{}}},{\"schemaLinkedService\":{\"referenceName\":\"ihlhzdsqtzb\",\"parameters\":{}},\"name\":\"gnowcjhfgmveca\",\"description\":\"xmwoteyowcluqo\",\"dataset\":{\"referenceName\":\"kqvgqouw\",\"parameters\":{}},\"linkedService\":{\"referenceName\":\"mpjw\",\"parameters\":{}},\"flowlet\":{\"type\":\"DataFlowReference\",\"referenceName\":\"ikf\",\"parameters\":{},\"\":{}}},{\"schemaLinkedService\":{\"referenceName\":\"fsphuagrttikt\",\"parameters\":{}},\"name\":\"sqczkvyklxubyj\",\"description\":\"fmmfblcqcu\",\"dataset\":{\"referenceName\":\"gqibrtalmetttw\",\"parameters\":{}},\"linkedService\":{\"referenceName\":\"lqxihhrmooiz\",\"parameters\":{}},\"flowlet\":{\"type\":\"DataFlowReference\",\"referenceName\":\"pxiutc\",\"parameters\":{},\"\":{}}},{\"schemaLinkedService\":{\"referenceName\":\"y\",\"parameters\":{}},\"name\":\"etoge\",\"description\":\"oxslh\",\"dataset\":{\"referenceName\":\"hlabrq\",\"parameters\":{}},\"linkedService\":{\"referenceName\":\"zjcjbtr\",\"parameters\":{}},\"flowlet\":{\"type\":\"DataFlowReference\",\"referenceName\":\"vvib\",\"parameters\":{},\"\":{}}}],\"sinks\":[{\"schemaLinkedService\":{\"referenceName\":\"qbeitpkxztmoob\",\"parameters\":{}},\"rejectedDataLinkedService\":{\"referenceName\":\"tidgfcwq\",\"parameters\":{}},\"name\":\"imaq\",\"description\":\"hemjy\",\"dataset\":{\"referenceName\":\"hujswtwkozzwcul\",\"parameters\":{}},\"linkedService\":{\"referenceName\":\"wpfaj\",\"parameters\":{}},\"flowlet\":{\"type\":\"DataFlowReference\",\"referenceName\":\"tlwtjjguktalhsn\",\"parameters\":{},\"\":{}}},{\"schemaLinkedService\":{\"referenceName\":\"xzrpo\",\"parameters\":{}},\"rejectedDataLinkedService\":{\"referenceName\":\"lnwiaaomylwe\",\"parameters\":{}},\"name\":\"ulcsethwwnpj\",\"description\":\"fz\",\"dataset\":{\"referenceName\":\"pchwa\",\"parameters\":{}},\"linkedService\":{\"referenceName\":\"ousnfepgfewe\",\"parameters\":{}},\"flowlet\":{\"type\":\"DataFlowReference\",\"referenceName\":\"xgncxyk\",\"parameters\":{},\"\":{}}},{\"schemaLinkedService\":{\"referenceName\":\"limmbcxf\",\"parameters\":{}},\"rejectedDataLinkedService\":{\"referenceName\":\"po\",\"parameters\":{}},\"name\":\"vxcjzhqizxfpxtgq\",\"description\":\"javftjuhdqa\",\"dataset\":{\"referenceName\":\"mtggu\",\"parameters\":{}},\"linkedService\":{\"referenceName\":\"jrajcivm\",\"parameters\":{}},\"flowlet\":{\"type\":\"DataFlowReference\",\"referenceName\":\"cf\",\"parameters\":{},\"\":{}}},{\"schemaLinkedService\":{\"referenceName\":\"kneuvyinzqo\",\"parameters\":{}},\"rejectedDataLinkedService\":{\"referenceName\":\"pgshoxgsgbpfgz\",\"parameters\":{}},\"name\":\"tx\",\"description\":\"flbqvgaq\",\"dataset\":{\"referenceName\":\"gafcqu\",\"parameters\":{}},\"linkedService\":{\"referenceName\":\"vetnwsdtutn\",\"parameters\":{}},\"flowlet\":{\"type\":\"DataFlowReference\",\"referenceName\":\"ycvuzhyrmewipmv\",\"parameters\":{},\"\":{}}}],\"transformations\":[{\"name\":\"uqgsj\",\"description\":\"undxgketw\",\"dataset\":{\"referenceName\":\"hzjhf\",\"parameters\":{}},\"linkedService\":{\"referenceName\":\"vvmu\",\"parameters\":{}},\"flowlet\":{\"type\":\"DataFlowReference\",\"referenceName\":\"uneqsxvmhf\",\"parameters\":{},\"\":{}}},{\"name\":\"yihsasbhudypohyu\",\"description\":\"slynsqyrpfoo\",\"dataset\":{\"referenceName\":\"lttymsjn\",\"parameters\":{}},\"linkedService\":{\"referenceName\":\"dnfwqzdzg\",\"parameters\":{}},\"flowlet\":{\"type\":\"DataFlowReference\",\"referenceName\":\"xhnfhqly\",\"parameters\":{},\"\":{}}},{\"name\":\"uwivkxoy\",\"description\":\"nbixxrti\",\"dataset\":{\"referenceName\":\"cpwpg\",\"parameters\":{}},\"linkedService\":{\"referenceName\":\"civtsoxfrkenxp\",\"parameters\":{}},\"flowlet\":{\"type\":\"DataFlowReference\",\"referenceName\":\"frpmpdnqqskaw\",\"parameters\":{},\"\":{}}},{\"name\":\"mmbnpqfrtql\",\"description\":\"megni\",\"dataset\":{\"referenceName\":\"vkxlz\",\"parameters\":{}},\"linkedService\":{\"referenceName\":\"rfe\",\"parameters\":{}},\"flowlet\":{\"type\":\"DataFlowReference\",\"referenceName\":\"lzxwhcansy\",\"parameters\":{},\"\":{}}}],\"script\":\"lwigdivbkbx\",\"scriptLines\":[\"fajuwas\"]}")
                .toObject(FlowletTypeProperties.class);
        Assertions.assertEquals("adpysownbt", model.sources().get(0).name());
        Assertions.assertEquals("bugrj", model.sources().get(0).description());
        Assertions.assertEquals("to", model.sources().get(0).dataset().referenceName());
        Assertions.assertEquals("isofieypefojyqd", model.sources().get(0).linkedService().referenceName());
        Assertions.assertEquals(DataFlowReferenceType.DATA_FLOW_REFERENCE, model.sources().get(0).flowlet().type());
        Assertions.assertEquals("lcplc", model.sources().get(0).flowlet().referenceName());
        Assertions.assertEquals("xylfsb", model.sources().get(0).schemaLinkedService().referenceName());
        Assertions.assertEquals("imaq", model.sinks().get(0).name());
        Assertions.assertEquals("hemjy", model.sinks().get(0).description());
        Assertions.assertEquals("hujswtwkozzwcul", model.sinks().get(0).dataset().referenceName());
        Assertions.assertEquals("wpfaj", model.sinks().get(0).linkedService().referenceName());
        Assertions.assertEquals(DataFlowReferenceType.DATA_FLOW_REFERENCE, model.sinks().get(0).flowlet().type());
        Assertions.assertEquals("tlwtjjguktalhsn", model.sinks().get(0).flowlet().referenceName());
        Assertions.assertEquals("qbeitpkxztmoob", model.sinks().get(0).schemaLinkedService().referenceName());
        Assertions.assertEquals("tidgfcwq", model.sinks().get(0).rejectedDataLinkedService().referenceName());
        Assertions.assertEquals("uqgsj", model.transformations().get(0).name());
        Assertions.assertEquals("undxgketw", model.transformations().get(0).description());
        Assertions.assertEquals("hzjhf", model.transformations().get(0).dataset().referenceName());
        Assertions.assertEquals("vvmu", model.transformations().get(0).linkedService().referenceName());
        Assertions
            .assertEquals(DataFlowReferenceType.DATA_FLOW_REFERENCE, model.transformations().get(0).flowlet().type());
        Assertions.assertEquals("uneqsxvmhf", model.transformations().get(0).flowlet().referenceName());
        Assertions.assertEquals("lwigdivbkbx", model.script());
        Assertions.assertEquals("fajuwas", model.scriptLines().get(0));
    }

    @Test
    public void testSerialize() {
        FlowletTypeProperties model =
            new FlowletTypeProperties()
                .withSources(
                    Arrays
                        .asList(
                            new DataFlowSource()
                                .withName("adpysownbt")
                                .withDescription("bugrj")
                                .withDataset(new DatasetReference().withReferenceName("to").withParameters(mapOf()))
                                .withLinkedService(
                                    new LinkedServiceReference()
                                        .withReferenceName("isofieypefojyqd")
                                        .withParameters(mapOf()))
                                .withFlowlet(
                                    new DataFlowReference()
                                        .withType(DataFlowReferenceType.DATA_FLOW_REFERENCE)
                                        .withReferenceName("lcplc")
                                        .withParameters(mapOf())
                                        .withAdditionalProperties(mapOf()))
                                .withSchemaLinkedService(
                                    new LinkedServiceReference().withReferenceName("xylfsb").withParameters(mapOf())),
                            new DataFlowSource()
                                .withName("gnowcjhfgmveca")
                                .withDescription("xmwoteyowcluqo")
                                .withDataset(
                                    new DatasetReference().withReferenceName("kqvgqouw").withParameters(mapOf()))
                                .withLinkedService(
                                    new LinkedServiceReference().withReferenceName("mpjw").withParameters(mapOf()))
                                .withFlowlet(
                                    new DataFlowReference()
                                        .withType(DataFlowReferenceType.DATA_FLOW_REFERENCE)
                                        .withReferenceName("ikf")
                                        .withParameters(mapOf())
                                        .withAdditionalProperties(mapOf()))
                                .withSchemaLinkedService(
                                    new LinkedServiceReference()
                                        .withReferenceName("ihlhzdsqtzb")
                                        .withParameters(mapOf())),
                            new DataFlowSource()
                                .withName("sqczkvyklxubyj")
                                .withDescription("fmmfblcqcu")
                                .withDataset(
                                    new DatasetReference().withReferenceName("gqibrtalmetttw").withParameters(mapOf()))
                                .withLinkedService(
                                    new LinkedServiceReference()
                                        .withReferenceName("lqxihhrmooiz")
                                        .withParameters(mapOf()))
                                .withFlowlet(
                                    new DataFlowReference()
                                        .withType(DataFlowReferenceType.DATA_FLOW_REFERENCE)
                                        .withReferenceName("pxiutc")
                                        .withParameters(mapOf())
                                        .withAdditionalProperties(mapOf()))
                                .withSchemaLinkedService(
                                    new LinkedServiceReference()
                                        .withReferenceName("fsphuagrttikt")
                                        .withParameters(mapOf())),
                            new DataFlowSource()
                                .withName("etoge")
                                .withDescription("oxslh")
                                .withDataset(new DatasetReference().withReferenceName("hlabrq").withParameters(mapOf()))
                                .withLinkedService(
                                    new LinkedServiceReference().withReferenceName("zjcjbtr").withParameters(mapOf()))
                                .withFlowlet(
                                    new DataFlowReference()
                                        .withType(DataFlowReferenceType.DATA_FLOW_REFERENCE)
                                        .withReferenceName("vvib")
                                        .withParameters(mapOf())
                                        .withAdditionalProperties(mapOf()))
                                .withSchemaLinkedService(
                                    new LinkedServiceReference().withReferenceName("y").withParameters(mapOf()))))
                .withSinks(
                    Arrays
                        .asList(
                            new DataFlowSink()
                                .withName("imaq")
                                .withDescription("hemjy")
                                .withDataset(
                                    new DatasetReference().withReferenceName("hujswtwkozzwcul").withParameters(mapOf()))
                                .withLinkedService(
                                    new LinkedServiceReference().withReferenceName("wpfaj").withParameters(mapOf()))
                                .withFlowlet(
                                    new DataFlowReference()
                                        .withType(DataFlowReferenceType.DATA_FLOW_REFERENCE)
                                        .withReferenceName("tlwtjjguktalhsn")
                                        .withParameters(mapOf())
                                        .withAdditionalProperties(mapOf()))
                                .withSchemaLinkedService(
                                    new LinkedServiceReference()
                                        .withReferenceName("qbeitpkxztmoob")
                                        .withParameters(mapOf()))
                                .withRejectedDataLinkedService(
                                    new LinkedServiceReference().withReferenceName("tidgfcwq").withParameters(mapOf())),
                            new DataFlowSink()
                                .withName("ulcsethwwnpj")
                                .withDescription("fz")
                                .withDataset(new DatasetReference().withReferenceName("pchwa").withParameters(mapOf()))
                                .withLinkedService(
                                    new LinkedServiceReference()
                                        .withReferenceName("ousnfepgfewe")
                                        .withParameters(mapOf()))
                                .withFlowlet(
                                    new DataFlowReference()
                                        .withType(DataFlowReferenceType.DATA_FLOW_REFERENCE)
                                        .withReferenceName("xgncxyk")
                                        .withParameters(mapOf())
                                        .withAdditionalProperties(mapOf()))
                                .withSchemaLinkedService(
                                    new LinkedServiceReference().withReferenceName("xzrpo").withParameters(mapOf()))
                                .withRejectedDataLinkedService(
                                    new LinkedServiceReference()
                                        .withReferenceName("lnwiaaomylwe")
                                        .withParameters(mapOf())),
                            new DataFlowSink()
                                .withName("vxcjzhqizxfpxtgq")
                                .withDescription("javftjuhdqa")
                                .withDataset(new DatasetReference().withReferenceName("mtggu").withParameters(mapOf()))
                                .withLinkedService(
                                    new LinkedServiceReference().withReferenceName("jrajcivm").withParameters(mapOf()))
                                .withFlowlet(
                                    new DataFlowReference()
                                        .withType(DataFlowReferenceType.DATA_FLOW_REFERENCE)
                                        .withReferenceName("cf")
                                        .withParameters(mapOf())
                                        .withAdditionalProperties(mapOf()))
                                .withSchemaLinkedService(
                                    new LinkedServiceReference().withReferenceName("limmbcxf").withParameters(mapOf()))
                                .withRejectedDataLinkedService(
                                    new LinkedServiceReference().withReferenceName("po").withParameters(mapOf())),
                            new DataFlowSink()
                                .withName("tx")
                                .withDescription("flbqvgaq")
                                .withDataset(new DatasetReference().withReferenceName("gafcqu").withParameters(mapOf()))
                                .withLinkedService(
                                    new LinkedServiceReference()
                                        .withReferenceName("vetnwsdtutn")
                                        .withParameters(mapOf()))
                                .withFlowlet(
                                    new DataFlowReference()
                                        .withType(DataFlowReferenceType.DATA_FLOW_REFERENCE)
                                        .withReferenceName("ycvuzhyrmewipmv")
                                        .withParameters(mapOf())
                                        .withAdditionalProperties(mapOf()))
                                .withSchemaLinkedService(
                                    new LinkedServiceReference()
                                        .withReferenceName("kneuvyinzqo")
                                        .withParameters(mapOf()))
                                .withRejectedDataLinkedService(
                                    new LinkedServiceReference()
                                        .withReferenceName("pgshoxgsgbpfgz")
                                        .withParameters(mapOf()))))
                .withTransformations(
                    Arrays
                        .asList(
                            new Transformation()
                                .withName("uqgsj")
                                .withDescription("undxgketw")
                                .withDataset(new DatasetReference().withReferenceName("hzjhf").withParameters(mapOf()))
                                .withLinkedService(
                                    new LinkedServiceReference().withReferenceName("vvmu").withParameters(mapOf()))
                                .withFlowlet(
                                    new DataFlowReference()
                                        .withType(DataFlowReferenceType.DATA_FLOW_REFERENCE)
                                        .withReferenceName("uneqsxvmhf")
                                        .withParameters(mapOf())
                                        .withAdditionalProperties(mapOf())),
                            new Transformation()
                                .withName("yihsasbhudypohyu")
                                .withDescription("slynsqyrpfoo")
                                .withDataset(
                                    new DatasetReference().withReferenceName("lttymsjn").withParameters(mapOf()))
                                .withLinkedService(
                                    new LinkedServiceReference().withReferenceName("dnfwqzdzg").withParameters(mapOf()))
                                .withFlowlet(
                                    new DataFlowReference()
                                        .withType(DataFlowReferenceType.DATA_FLOW_REFERENCE)
                                        .withReferenceName("xhnfhqly")
                                        .withParameters(mapOf())
                                        .withAdditionalProperties(mapOf())),
                            new Transformation()
                                .withName("uwivkxoy")
                                .withDescription("nbixxrti")
                                .withDataset(new DatasetReference().withReferenceName("cpwpg").withParameters(mapOf()))
                                .withLinkedService(
                                    new LinkedServiceReference()
                                        .withReferenceName("civtsoxfrkenxp")
                                        .withParameters(mapOf()))
                                .withFlowlet(
                                    new DataFlowReference()
                                        .withType(DataFlowReferenceType.DATA_FLOW_REFERENCE)
                                        .withReferenceName("frpmpdnqqskaw")
                                        .withParameters(mapOf())
                                        .withAdditionalProperties(mapOf())),
                            new Transformation()
                                .withName("mmbnpqfrtql")
                                .withDescription("megni")
                                .withDataset(new DatasetReference().withReferenceName("vkxlz").withParameters(mapOf()))
                                .withLinkedService(
                                    new LinkedServiceReference().withReferenceName("rfe").withParameters(mapOf()))
                                .withFlowlet(
                                    new DataFlowReference()
                                        .withType(DataFlowReferenceType.DATA_FLOW_REFERENCE)
                                        .withReferenceName("lzxwhcansy")
                                        .withParameters(mapOf())
                                        .withAdditionalProperties(mapOf()))))
                .withScript("lwigdivbkbx")
                .withScriptLines(Arrays.asList("fajuwas"));
        model = BinaryData.fromObject(model).toObject(FlowletTypeProperties.class);
        Assertions.assertEquals("adpysownbt", model.sources().get(0).name());
        Assertions.assertEquals("bugrj", model.sources().get(0).description());
        Assertions.assertEquals("to", model.sources().get(0).dataset().referenceName());
        Assertions.assertEquals("isofieypefojyqd", model.sources().get(0).linkedService().referenceName());
        Assertions.assertEquals(DataFlowReferenceType.DATA_FLOW_REFERENCE, model.sources().get(0).flowlet().type());
        Assertions.assertEquals("lcplc", model.sources().get(0).flowlet().referenceName());
        Assertions.assertEquals("xylfsb", model.sources().get(0).schemaLinkedService().referenceName());
        Assertions.assertEquals("imaq", model.sinks().get(0).name());
        Assertions.assertEquals("hemjy", model.sinks().get(0).description());
        Assertions.assertEquals("hujswtwkozzwcul", model.sinks().get(0).dataset().referenceName());
        Assertions.assertEquals("wpfaj", model.sinks().get(0).linkedService().referenceName());
        Assertions.assertEquals(DataFlowReferenceType.DATA_FLOW_REFERENCE, model.sinks().get(0).flowlet().type());
        Assertions.assertEquals("tlwtjjguktalhsn", model.sinks().get(0).flowlet().referenceName());
        Assertions.assertEquals("qbeitpkxztmoob", model.sinks().get(0).schemaLinkedService().referenceName());
        Assertions.assertEquals("tidgfcwq", model.sinks().get(0).rejectedDataLinkedService().referenceName());
        Assertions.assertEquals("uqgsj", model.transformations().get(0).name());
        Assertions.assertEquals("undxgketw", model.transformations().get(0).description());
        Assertions.assertEquals("hzjhf", model.transformations().get(0).dataset().referenceName());
        Assertions.assertEquals("vvmu", model.transformations().get(0).linkedService().referenceName());
        Assertions
            .assertEquals(DataFlowReferenceType.DATA_FLOW_REFERENCE, model.transformations().get(0).flowlet().type());
        Assertions.assertEquals("uneqsxvmhf", model.transformations().get(0).flowlet().referenceName());
        Assertions.assertEquals("lwigdivbkbx", model.script());
        Assertions.assertEquals("fajuwas", model.scriptLines().get(0));
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
