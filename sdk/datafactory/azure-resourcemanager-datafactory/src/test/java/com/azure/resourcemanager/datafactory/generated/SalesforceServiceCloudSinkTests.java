// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.SalesforceServiceCloudSink;
import com.azure.resourcemanager.datafactory.models.SalesforceSinkWriteBehavior;
import org.junit.jupiter.api.Assertions;

public final class SalesforceServiceCloudSinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SalesforceServiceCloudSink model = BinaryData.fromString(
            "{\"type\":\"af\",\"writeBehavior\":\"Upsert\",\"externalIdFieldName\":\"datakdpnq\",\"ignoreNullValues\":\"dataprlr\",\"writeBatchSize\":\"datacue\",\"writeBatchTimeout\":\"datasqmzeelitqvqyini\",\"sinkRetryCount\":\"datamccf\",\"sinkRetryWait\":\"databytzm\",\"maxConcurrentConnections\":\"datamesdcmgmv\",\"disableMetricsCollection\":\"datanfdhyr\",\"\":{\"uj\":\"dataaapsgyyufhcfeggy\"}}")
            .toObject(SalesforceServiceCloudSink.class);
        Assertions.assertEquals(SalesforceSinkWriteBehavior.UPSERT, model.writeBehavior());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SalesforceServiceCloudSink model = new SalesforceServiceCloudSink().withWriteBatchSize("datacue")
            .withWriteBatchTimeout("datasqmzeelitqvqyini")
            .withSinkRetryCount("datamccf")
            .withSinkRetryWait("databytzm")
            .withMaxConcurrentConnections("datamesdcmgmv")
            .withDisableMetricsCollection("datanfdhyr")
            .withWriteBehavior(SalesforceSinkWriteBehavior.UPSERT)
            .withExternalIdFieldName("datakdpnq")
            .withIgnoreNullValues("dataprlr");
        model = BinaryData.fromObject(model).toObject(SalesforceServiceCloudSink.class);
        Assertions.assertEquals(SalesforceSinkWriteBehavior.UPSERT, model.writeBehavior());
    }
}
