// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import com.azure.resourcemanager.datafactory.models.SalesforceV2ObjectDataset;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SalesforceV2ObjectDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SalesforceV2ObjectDataset model = BinaryData.fromString(
            "{\"type\":\"SalesforceV2Object\",\"typeProperties\":{\"objectApiName\":\"datap\",\"reportId\":\"datawsjpgb\"},\"description\":\"bxjh\",\"structure\":\"datatep\",\"schema\":\"dataunudmakkshrnaxk\",\"linkedServiceName\":{\"referenceName\":\"zkwohdigeyuocft\",\"parameters\":{\"vrnnbegrafeo\":\"dataodwqbaktvxerowu\",\"azhkqqsjkn\":\"datamtojxgdof\",\"zbwgpmdmwi\":\"dataq\",\"dargkwim\":\"dataevveswghhbqqhd\"}},\"parameters\":{\"irgkn\":{\"type\":\"Object\",\"defaultValue\":\"dataeuquuwczzcujwxvb\"},\"wdajyd\":{\"type\":\"String\",\"defaultValue\":\"datala\"}},\"annotations\":[\"datagipvspewyzhydt\"],\"folder\":{\"name\":\"trsdp\"},\"\":{\"eviccwbqysclwbj\":\"dataaigarmawokgc\",\"weofvsxauphzefi\":\"dataiynqryoi\",\"gtiivzkd\":\"dataeyydx\",\"ywmwtacrscfc\":\"dataexccwldgfq\"}}")
            .toObject(SalesforceV2ObjectDataset.class);
        Assertions.assertEquals("bxjh", model.description());
        Assertions.assertEquals("zkwohdigeyuocft", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.OBJECT, model.parameters().get("irgkn").type());
        Assertions.assertEquals("trsdp", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SalesforceV2ObjectDataset model = new SalesforceV2ObjectDataset().withDescription("bxjh")
            .withStructure("datatep")
            .withSchema("dataunudmakkshrnaxk")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("zkwohdigeyuocft")
                .withParameters(mapOf("vrnnbegrafeo", "dataodwqbaktvxerowu", "azhkqqsjkn", "datamtojxgdof",
                    "zbwgpmdmwi", "dataq", "dargkwim", "dataevveswghhbqqhd")))
            .withParameters(mapOf("irgkn",
                new ParameterSpecification().withType(ParameterType.OBJECT).withDefaultValue("dataeuquuwczzcujwxvb"),
                "wdajyd", new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("datala")))
            .withAnnotations(Arrays.asList("datagipvspewyzhydt"))
            .withFolder(new DatasetFolder().withName("trsdp"))
            .withObjectApiName("datap")
            .withReportId("datawsjpgb");
        model = BinaryData.fromObject(model).toObject(SalesforceV2ObjectDataset.class);
        Assertions.assertEquals("bxjh", model.description());
        Assertions.assertEquals("zkwohdigeyuocft", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.OBJECT, model.parameters().get("irgkn").type());
        Assertions.assertEquals("trsdp", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
