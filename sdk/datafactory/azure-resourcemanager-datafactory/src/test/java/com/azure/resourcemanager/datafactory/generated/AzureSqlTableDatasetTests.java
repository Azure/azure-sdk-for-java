// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzureSqlTableDataset;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AzureSqlTableDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureSqlTableDataset model = BinaryData.fromString(
            "{\"type\":\"AzureSqlTable\",\"typeProperties\":{\"tableName\":\"dataofuworimmovzwde\",\"schema\":\"datakmvhzfo\",\"table\":\"datanyrvaprtgelg\"},\"description\":\"wikfyaqandmym\",\"structure\":\"dataoqjum\",\"schema\":\"datasfbpbvzop\",\"linkedServiceName\":{\"referenceName\":\"x\",\"parameters\":{\"faxdtnqifbsa\":\"datavsmcwo\"}},\"parameters\":{\"mo\":{\"type\":\"SecureString\",\"defaultValue\":\"datauesu\"},\"boel\":{\"type\":\"Int\",\"defaultValue\":\"datajy\"},\"iuorinikc\":{\"type\":\"Int\",\"defaultValue\":\"datatwfld\"},\"mtmqrx\":{\"type\":\"Int\",\"defaultValue\":\"dataksriw\"}},\"annotations\":[\"datavvyczy\",\"datayubtgmbxiqah\",\"dataagpx\"],\"folder\":{\"name\":\"plnupoyryef\"},\"\":{\"lnomfpb\":\"dataovyzt\"}}")
            .toObject(AzureSqlTableDataset.class);
        Assertions.assertEquals("wikfyaqandmym", model.description());
        Assertions.assertEquals("x", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.SECURE_STRING, model.parameters().get("mo").type());
        Assertions.assertEquals("plnupoyryef", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureSqlTableDataset model = new AzureSqlTableDataset().withDescription("wikfyaqandmym")
            .withStructure("dataoqjum")
            .withSchema("datasfbpbvzop")
            .withLinkedServiceName(
                new LinkedServiceReference().withReferenceName("x").withParameters(mapOf("faxdtnqifbsa", "datavsmcwo")))
            .withParameters(mapOf("mo",
                new ParameterSpecification().withType(ParameterType.SECURE_STRING).withDefaultValue("datauesu"), "boel",
                new ParameterSpecification().withType(ParameterType.INT).withDefaultValue("datajy"), "iuorinikc",
                new ParameterSpecification().withType(ParameterType.INT).withDefaultValue("datatwfld"), "mtmqrx",
                new ParameterSpecification().withType(ParameterType.INT).withDefaultValue("dataksriw")))
            .withAnnotations(Arrays.asList("datavvyczy", "datayubtgmbxiqah", "dataagpx"))
            .withFolder(new DatasetFolder().withName("plnupoyryef"))
            .withTableName("dataofuworimmovzwde")
            .withSchemaTypePropertiesSchema("datakmvhzfo")
            .withTable("datanyrvaprtgelg");
        model = BinaryData.fromObject(model).toObject(AzureSqlTableDataset.class);
        Assertions.assertEquals("wikfyaqandmym", model.description());
        Assertions.assertEquals("x", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.SECURE_STRING, model.parameters().get("mo").type());
        Assertions.assertEquals("plnupoyryef", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
