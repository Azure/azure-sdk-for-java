// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AzureSqlTableDataset;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AzureSqlTableDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureSqlTableDataset model = BinaryData.fromString(
            "{\"type\":\"ihwpadhedbfobd\",\"typeProperties\":{\"tableName\":\"datacfddofxnfb\",\"schema\":\"datayyrqaedwov\",\"table\":\"dataytjgoeayokrw\"},\"description\":\"vothmkhjaoz\",\"structure\":\"datawfcn\",\"schema\":\"databpoelhscmyhrhjv\",\"linkedServiceName\":{\"referenceName\":\"zfq\",\"parameters\":{\"joevzzuf\":\"datandwpppqw\",\"krbuoggtdltlcuha\":\"datatdxmlynzlyvap\"}},\"parameters\":{\"tqkrvmhvbvvcpwtq\":{\"type\":\"String\",\"defaultValue\":\"dataaylzeohlps\"},\"ffetevrnt\":{\"type\":\"Array\",\"defaultValue\":\"datapnhmzy\"}},\"annotations\":[\"datawacycsyotctkhf\",\"datafsatvcsx\"],\"folder\":{\"name\":\"nmizhv\"},\"\":{\"obzgott\":\"dataqqwcublehhkp\",\"h\":\"dataksadzi\"}}")
            .toObject(AzureSqlTableDataset.class);
        Assertions.assertEquals("vothmkhjaoz", model.description());
        Assertions.assertEquals("zfq", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.STRING, model.parameters().get("tqkrvmhvbvvcpwtq").type());
        Assertions.assertEquals("nmizhv", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureSqlTableDataset model = new AzureSqlTableDataset().withDescription("vothmkhjaoz")
            .withStructure("datawfcn")
            .withSchema("databpoelhscmyhrhjv")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("zfq")
                .withParameters(mapOf("joevzzuf", "datandwpppqw", "krbuoggtdltlcuha", "datatdxmlynzlyvap")))
            .withParameters(mapOf("tqkrvmhvbvvcpwtq",
                new ParameterSpecification().withType(ParameterType.STRING).withDefaultValue("dataaylzeohlps"),
                "ffetevrnt", new ParameterSpecification().withType(ParameterType.ARRAY).withDefaultValue("datapnhmzy")))
            .withAnnotations(Arrays.asList("datawacycsyotctkhf", "datafsatvcsx"))
            .withFolder(new DatasetFolder().withName("nmizhv"))
            .withTableName("datacfddofxnfb")
            .withSchemaTypePropertiesSchema("datayyrqaedwov")
            .withTable("dataytjgoeayokrw");
        model = BinaryData.fromObject(model).toObject(AzureSqlTableDataset.class);
        Assertions.assertEquals("vothmkhjaoz", model.description());
        Assertions.assertEquals("zfq", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.STRING, model.parameters().get("tqkrvmhvbvvcpwtq").type());
        Assertions.assertEquals("nmizhv", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
