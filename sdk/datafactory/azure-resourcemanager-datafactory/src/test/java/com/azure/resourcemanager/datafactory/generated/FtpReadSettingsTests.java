// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.FtpReadSettings;

public final class FtpReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FtpReadSettings model = BinaryData.fromString(
            "{\"type\":\"FtpReadSettings\",\"recursive\":\"datajabzs\",\"wildcardFolderPath\":\"datauza\",\"wildcardFileName\":\"datakuthooa\",\"enablePartitionDiscovery\":\"datamszcwwvbxvibiv\",\"partitionRootPath\":\"dataryppmmtqxqiqae\",\"deleteFilesAfterCompletion\":\"datagqfcoraj\",\"fileListPath\":\"dataglkffgyfe\",\"useBinaryTransfer\":\"dataseceuvyn\",\"disableChunking\":\"databzcufxfyzqrs\",\"maxConcurrentConnections\":\"datamlsud\",\"disableMetricsCollection\":\"dataiycepjkllyeds\",\"\":{\"mwl\":\"databvirnxey\",\"hizwqz\":\"datapyidecff\",\"zsw\":\"datasqwjypiosz\"}}")
            .toObject(FtpReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FtpReadSettings model = new FtpReadSettings().withMaxConcurrentConnections("datamlsud")
            .withDisableMetricsCollection("dataiycepjkllyeds")
            .withRecursive("datajabzs")
            .withWildcardFolderPath("datauza")
            .withWildcardFileName("datakuthooa")
            .withEnablePartitionDiscovery("datamszcwwvbxvibiv")
            .withPartitionRootPath("dataryppmmtqxqiqae")
            .withDeleteFilesAfterCompletion("datagqfcoraj")
            .withFileListPath("dataglkffgyfe")
            .withUseBinaryTransfer("dataseceuvyn")
            .withDisableChunking("databzcufxfyzqrs");
        model = BinaryData.fromObject(model).toObject(FtpReadSettings.class);
    }
}
