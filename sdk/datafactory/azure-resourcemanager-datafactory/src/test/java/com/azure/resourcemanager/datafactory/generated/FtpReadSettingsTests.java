// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.FtpReadSettings;

public final class FtpReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FtpReadSettings model = BinaryData.fromString(
            "{\"type\":\"FtpReadSettings\",\"recursive\":\"datadqgy\",\"wildcardFolderPath\":\"dataulzguvckpdp\",\"wildcardFileName\":\"datanrjqskikqd\",\"enablePartitionDiscovery\":\"dataybqtlvofjjsetiz\",\"partitionRootPath\":\"datanadn\",\"deleteFilesAfterCompletion\":\"datasbpxlserqgxnh\",\"fileListPath\":\"dataccd\",\"useBinaryTransfer\":\"dataxybn\",\"disableChunking\":\"datahmpmeglolpot\",\"maxConcurrentConnections\":\"datamb\",\"disableMetricsCollection\":\"dataqjrytymfnojjh\",\"\":{\"y\":\"datathjqgovvivlr\",\"wyt\":\"datarafet\",\"luolgspyqsapnh\":\"datavpiilgy\"}}")
            .toObject(FtpReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FtpReadSettings model = new FtpReadSettings().withMaxConcurrentConnections("datamb")
            .withDisableMetricsCollection("dataqjrytymfnojjh").withRecursive("datadqgy")
            .withWildcardFolderPath("dataulzguvckpdp").withWildcardFileName("datanrjqskikqd")
            .withEnablePartitionDiscovery("dataybqtlvofjjsetiz").withPartitionRootPath("datanadn")
            .withDeleteFilesAfterCompletion("datasbpxlserqgxnh").withFileListPath("dataccd")
            .withUseBinaryTransfer("dataxybn").withDisableChunking("datahmpmeglolpot");
        model = BinaryData.fromObject(model).toObject(FtpReadSettings.class);
    }
}
