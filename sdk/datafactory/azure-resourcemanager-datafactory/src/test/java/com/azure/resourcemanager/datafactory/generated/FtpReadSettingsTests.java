// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.FtpReadSettings;

public final class FtpReadSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FtpReadSettings model = BinaryData.fromString(
            "{\"type\":\"FtpReadSettings\",\"recursive\":\"datammzxpsrlbppjq\",\"wildcardFolderPath\":\"datacpdaoskgtalljsoa\",\"wildcardFileName\":\"datajjklmpbgrosxfdx\",\"enablePartitionDiscovery\":\"datab\",\"partitionRootPath\":\"databbhluvdceouevno\",\"deleteFilesAfterCompletion\":\"datalreiw\",\"fileListPath\":\"datakiegtaenal\",\"useBinaryTransfer\":\"datataasqol\",\"disableChunking\":\"dataodbhgxba\",\"maxConcurrentConnections\":\"dataorqkmi\",\"disableMetricsCollection\":\"datag\",\"\":{\"iynlslg\":\"dataqwyxbatr\",\"pu\":\"dataifkdsclqwkddg\"}}")
            .toObject(FtpReadSettings.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FtpReadSettings model = new FtpReadSettings().withMaxConcurrentConnections("dataorqkmi")
            .withDisableMetricsCollection("datag")
            .withRecursive("datammzxpsrlbppjq")
            .withWildcardFolderPath("datacpdaoskgtalljsoa")
            .withWildcardFileName("datajjklmpbgrosxfdx")
            .withEnablePartitionDiscovery("datab")
            .withPartitionRootPath("databbhluvdceouevno")
            .withDeleteFilesAfterCompletion("datalreiw")
            .withFileListPath("datakiegtaenal")
            .withUseBinaryTransfer("datataasqol")
            .withDisableChunking("dataodbhgxba");
        model = BinaryData.fromObject(model).toObject(FtpReadSettings.class);
    }
}
