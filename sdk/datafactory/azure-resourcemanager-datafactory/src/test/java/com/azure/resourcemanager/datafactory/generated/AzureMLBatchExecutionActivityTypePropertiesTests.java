// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.fluent.models.AzureMLBatchExecutionActivityTypeProperties;
import com.azure.resourcemanager.datafactory.models.AzureMLWebServiceFile;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AzureMLBatchExecutionActivityTypePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureMLBatchExecutionActivityTypeProperties model = BinaryData.fromString(
            "{\"globalParameters\":{\"vinvzdnubs\":\"dataaqfqgmwdo\",\"ilbiwacxldho\":\"dataskgiy\",\"cvtbgznpx\":\"datacdpwxh\",\"zo\":\"dataxcshtlqhikmfzdlh\"},\"webServiceOutputs\":{\"tnyvigjbxhjpsgpr\":{\"filePath\":\"datauziaztmxwmjaevw\",\"linkedServiceName\":{\"referenceName\":\"dn\",\"parameters\":{\"vdykxg\":\"datakunhwdirtiyraqy\",\"bycraryxrttn\":\"datafhvhynsyhzysuoq\",\"tstlgdvvpxhdefy\":\"datajhjbfoemm\",\"jyqhcowouoih\":\"dataitbjmva\"}}},\"ni\":{\"filePath\":\"datampzb\",\"linkedServiceName\":{\"referenceName\":\"iakyflryhvph\",\"parameters\":{\"bgstmlhrziggcaz\":\"dataiyidzbpfwlxxwpy\"}}},\"fggheqllrp\":{\"filePath\":\"datakkengowcut\",\"linkedServiceName\":{\"referenceName\":\"hmxmjm\",\"parameters\":{\"iimennxvqjakqd\":\"dataich\",\"zuuguze\":\"datannef\"}}}},\"webServiceInputs\":{\"pdovlp\":{\"filePath\":\"dataxqfkrvmvdqhageh\",\"linkedServiceName\":{\"referenceName\":\"hqeqtlsi\",\"parameters\":{\"gwidgx\":\"datagtupkmvxeub\"}}},\"fxkud\":{\"filePath\":\"datamcmfvyhmivyblt\",\"linkedServiceName\":{\"referenceName\":\"akmtvoprg\",\"parameters\":{\"orxibw\":\"datay\"}}}}}")
            .toObject(AzureMLBatchExecutionActivityTypeProperties.class);
        Assertions.assertEquals("dn",
            model.webServiceOutputs().get("tnyvigjbxhjpsgpr").linkedServiceName().referenceName());
        Assertions.assertEquals("hqeqtlsi", model.webServiceInputs().get("pdovlp").linkedServiceName().referenceName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureMLBatchExecutionActivityTypeProperties model = new AzureMLBatchExecutionActivityTypeProperties()
            .withGlobalParameters(mapOf("vinvzdnubs", "dataaqfqgmwdo", "ilbiwacxldho", "dataskgiy", "cvtbgznpx",
                "datacdpwxh", "zo", "dataxcshtlqhikmfzdlh"))
            .withWebServiceOutputs(mapOf("tnyvigjbxhjpsgpr",
                new AzureMLWebServiceFile().withFilePath("datauziaztmxwmjaevw")
                    .withLinkedServiceName(new LinkedServiceReference().withReferenceName("dn")
                        .withParameters(mapOf("vdykxg", "datakunhwdirtiyraqy", "bycraryxrttn", "datafhvhynsyhzysuoq",
                            "tstlgdvvpxhdefy", "datajhjbfoemm", "jyqhcowouoih", "dataitbjmva"))),
                "ni",
                new AzureMLWebServiceFile().withFilePath("datampzb")
                    .withLinkedServiceName(new LinkedServiceReference().withReferenceName("iakyflryhvph")
                        .withParameters(mapOf("bgstmlhrziggcaz", "dataiyidzbpfwlxxwpy"))),
                "fggheqllrp",
                new AzureMLWebServiceFile().withFilePath("datakkengowcut")
                    .withLinkedServiceName(new LinkedServiceReference().withReferenceName("hmxmjm")
                        .withParameters(mapOf("iimennxvqjakqd", "dataich", "zuuguze", "datannef")))))
            .withWebServiceInputs(mapOf("pdovlp",
                new AzureMLWebServiceFile().withFilePath("dataxqfkrvmvdqhageh")
                    .withLinkedServiceName(new LinkedServiceReference().withReferenceName("hqeqtlsi")
                        .withParameters(mapOf("gwidgx", "datagtupkmvxeub"))),
                "fxkud",
                new AzureMLWebServiceFile().withFilePath("datamcmfvyhmivyblt")
                    .withLinkedServiceName(new LinkedServiceReference().withReferenceName("akmtvoprg")
                        .withParameters(mapOf("orxibw", "datay")))));
        model = BinaryData.fromObject(model).toObject(AzureMLBatchExecutionActivityTypeProperties.class);
        Assertions.assertEquals("dn",
            model.webServiceOutputs().get("tnyvigjbxhjpsgpr").linkedServiceName().referenceName());
        Assertions.assertEquals("hqeqtlsi", model.webServiceInputs().get("pdovlp").linkedServiceName().referenceName());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
