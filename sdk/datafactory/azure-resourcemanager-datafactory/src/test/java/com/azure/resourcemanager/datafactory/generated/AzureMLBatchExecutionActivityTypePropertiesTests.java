// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.fluent.models.AzureMLBatchExecutionActivityTypeProperties;
import com.azure.resourcemanager.datafactory.models.AzureMLWebServiceFile;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AzureMLBatchExecutionActivityTypePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureMLBatchExecutionActivityTypeProperties model =
            BinaryData
                .fromString(
                    "{\"globalParameters\":{\"vmixfqqm\":\"databcwfp\"},\"webServiceOutputs\":{\"pkevtofvqjrdyd\":{\"filePath\":\"datau\",\"linkedServiceName\":{\"referenceName\":\"fbrjmpdtzu\",\"parameters\":{\"qikouravdqe\":\"datarvpcwyn\",\"ma\":\"dataewgpmademlo\",\"hgdvgcgunqitzwn\":\"datakbmkkun\"}}}},\"webServiceInputs\":{\"krxajta\":{\"filePath\":\"datauppxdzpjewp\",\"linkedServiceName\":{\"referenceName\":\"lyszw\",\"parameters\":{\"tfgbxiao\":\"dataokgrnxly\",\"n\":\"datazrouwkkwtoxl\",\"keeeakzys\":\"datavealwdltstxronbz\"}}},\"zhiradklzg\":{\"filePath\":\"datadfqc\",\"linkedServiceName\":{\"referenceName\":\"jwkdwpcm\",\"parameters\":{\"gwxoreedor\":\"datarrkfhla\",\"qdmzsitrs\":\"dataiycvou\",\"mrjla\":\"datapucxigkpevtb\",\"z\":\"datadggwaldtelnvcfum\"}}},\"jfkuqvt\":{\"filePath\":\"dataqmmapxnoog\",\"linkedServiceName\":{\"referenceName\":\"fujecisicmez\",\"parameters\":{\"nljy\":\"datazpgy\",\"bcufhkrvxxzhqouo\":\"dataumpydk\",\"la\":\"datasczcksjwdwzfdfkg\",\"niybotuq\":\"datavmbsmxhsqdotbnf\"}}}}}")
                .toObject(AzureMLBatchExecutionActivityTypeProperties.class);
        Assertions
            .assertEquals(
                "fbrjmpdtzu", model.webServiceOutputs().get("pkevtofvqjrdyd").linkedServiceName().referenceName());
        Assertions.assertEquals("lyszw", model.webServiceInputs().get("krxajta").linkedServiceName().referenceName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureMLBatchExecutionActivityTypeProperties model =
            new AzureMLBatchExecutionActivityTypeProperties()
                .withGlobalParameters(mapOf("vmixfqqm", "databcwfp"))
                .withWebServiceOutputs(
                    mapOf(
                        "pkevtofvqjrdyd",
                        new AzureMLWebServiceFile()
                            .withFilePath("datau")
                            .withLinkedServiceName(
                                new LinkedServiceReference()
                                    .withReferenceName("fbrjmpdtzu")
                                    .withParameters(
                                        mapOf(
                                            "qikouravdqe",
                                            "datarvpcwyn",
                                            "ma",
                                            "dataewgpmademlo",
                                            "hgdvgcgunqitzwn",
                                            "datakbmkkun")))))
                .withWebServiceInputs(
                    mapOf(
                        "krxajta",
                        new AzureMLWebServiceFile()
                            .withFilePath("datauppxdzpjewp")
                            .withLinkedServiceName(
                                new LinkedServiceReference()
                                    .withReferenceName("lyszw")
                                    .withParameters(
                                        mapOf(
                                            "tfgbxiao",
                                            "dataokgrnxly",
                                            "n",
                                            "datazrouwkkwtoxl",
                                            "keeeakzys",
                                            "datavealwdltstxronbz"))),
                        "zhiradklzg",
                        new AzureMLWebServiceFile()
                            .withFilePath("datadfqc")
                            .withLinkedServiceName(
                                new LinkedServiceReference()
                                    .withReferenceName("jwkdwpcm")
                                    .withParameters(
                                        mapOf(
                                            "gwxoreedor",
                                            "datarrkfhla",
                                            "qdmzsitrs",
                                            "dataiycvou",
                                            "mrjla",
                                            "datapucxigkpevtb",
                                            "z",
                                            "datadggwaldtelnvcfum"))),
                        "jfkuqvt",
                        new AzureMLWebServiceFile()
                            .withFilePath("dataqmmapxnoog")
                            .withLinkedServiceName(
                                new LinkedServiceReference()
                                    .withReferenceName("fujecisicmez")
                                    .withParameters(
                                        mapOf(
                                            "nljy",
                                            "datazpgy",
                                            "bcufhkrvxxzhqouo",
                                            "dataumpydk",
                                            "la",
                                            "datasczcksjwdwzfdfkg",
                                            "niybotuq",
                                            "datavmbsmxhsqdotbnf")))));
        model = BinaryData.fromObject(model).toObject(AzureMLBatchExecutionActivityTypeProperties.class);
        Assertions
            .assertEquals(
                "fbrjmpdtzu", model.webServiceOutputs().get("pkevtofvqjrdyd").linkedServiceName().referenceName());
        Assertions.assertEquals("lyszw", model.webServiceInputs().get("krxajta").linkedServiceName().referenceName());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
