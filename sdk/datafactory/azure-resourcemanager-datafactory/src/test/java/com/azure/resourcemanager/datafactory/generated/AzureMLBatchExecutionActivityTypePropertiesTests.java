// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.fluent.models.AzureMLBatchExecutionActivityTypeProperties;
import com.azure.resourcemanager.datafactory.models.AzureMLWebServiceFile;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AzureMLBatchExecutionActivityTypePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureMLBatchExecutionActivityTypeProperties model = BinaryData.fromString(
            "{\"globalParameters\":{\"ovburvekbknr\":\"dataet\",\"qbyoyhfbbbhxly\":\"datakxcpnxdzpfzmdsly\"},\"webServiceOutputs\":{\"svhsieev\":{\"filePath\":\"datalqprhnchpets\",\"linkedServiceName\":{\"referenceName\":\"bfmttpz\",\"parameters\":{\"dusizsnhekpcnq\":\"datampu\"}}},\"qmaiegrxoo\":{\"filePath\":\"datamubzlmmctdkzp\",\"linkedServiceName\":{\"referenceName\":\"ud\",\"parameters\":{\"res\":\"datagxrsxvzwnuib\",\"w\":\"datajohrvkpnma\"}}}},\"webServiceInputs\":{\"oaallveezesdn\":{\"filePath\":\"datalmbuzkayfjzyco\",\"linkedServiceName\":{\"referenceName\":\"wjpyf\",\"parameters\":{\"hrl\":\"datamgw\",\"cvaibzbvkoxl\":\"dataosqlfvsvwauqxh\",\"fbiodgtziylp\":\"datatv\"}}},\"mddv\":{\"filePath\":\"datalkzzlokmrudepzl\",\"linkedServiceName\":{\"referenceName\":\"uzcwlbefjh\",\"parameters\":{\"txttahsojgf\":\"datapv\",\"fmgudkfoybih\":\"datay\",\"tkkufbi\":\"datapnkwt\"}}},\"vumvhpichsbzgwif\":{\"filePath\":\"dataub\",\"linkedServiceName\":{\"referenceName\":\"iomfflrnggwujy\",\"parameters\":{\"fmuwhgxvgkbffqsi\":\"datafsbmrgbnrnihx\",\"tyhd\":\"datalaubijvavqq\",\"atzgxtasryivlfbr\":\"datakd\"}}}}}")
            .toObject(AzureMLBatchExecutionActivityTypeProperties.class);
        Assertions.assertEquals("bfmttpz",
            model.webServiceOutputs().get("svhsieev").linkedServiceName().referenceName());
        Assertions.assertEquals("wjpyf",
            model.webServiceInputs().get("oaallveezesdn").linkedServiceName().referenceName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureMLBatchExecutionActivityTypeProperties model
            = new AzureMLBatchExecutionActivityTypeProperties()
                .withGlobalParameters(mapOf("ovburvekbknr", "dataet", "qbyoyhfbbbhxly", "datakxcpnxdzpfzmdsly"))
                .withWebServiceOutputs(mapOf("svhsieev",
                    new AzureMLWebServiceFile().withFilePath("datalqprhnchpets")
                        .withLinkedServiceName(new LinkedServiceReference().withReferenceName("bfmttpz")
                            .withParameters(mapOf("dusizsnhekpcnq", "datampu"))),
                    "qmaiegrxoo",
                    new AzureMLWebServiceFile().withFilePath("datamubzlmmctdkzp")
                        .withLinkedServiceName(new LinkedServiceReference().withReferenceName("ud")
                            .withParameters(mapOf("res", "datagxrsxvzwnuib", "w", "datajohrvkpnma")))))
                .withWebServiceInputs(mapOf("oaallveezesdn",
                    new AzureMLWebServiceFile().withFilePath("datalmbuzkayfjzyco")
                        .withLinkedServiceName(new LinkedServiceReference().withReferenceName("wjpyf")
                            .withParameters(mapOf("hrl", "datamgw", "cvaibzbvkoxl", "dataosqlfvsvwauqxh",
                                "fbiodgtziylp", "datatv"))),
                    "mddv",
                    new AzureMLWebServiceFile().withFilePath("datalkzzlokmrudepzl")
                        .withLinkedServiceName(new LinkedServiceReference().withReferenceName("uzcwlbefjh")
                            .withParameters(
                                mapOf("txttahsojgf", "datapv", "fmgudkfoybih", "datay", "tkkufbi", "datapnkwt"))),
                    "vumvhpichsbzgwif",
                    new AzureMLWebServiceFile().withFilePath("dataub")
                        .withLinkedServiceName(new LinkedServiceReference().withReferenceName("iomfflrnggwujy")
                            .withParameters(mapOf("fmuwhgxvgkbffqsi", "datafsbmrgbnrnihx", "tyhd", "datalaubijvavqq",
                                "atzgxtasryivlfbr", "datakd")))));
        model = BinaryData.fromObject(model).toObject(AzureMLBatchExecutionActivityTypeProperties.class);
        Assertions.assertEquals("bfmttpz",
            model.webServiceOutputs().get("svhsieev").linkedServiceName().referenceName());
        Assertions.assertEquals("wjpyf",
            model.webServiceInputs().get("oaallveezesdn").linkedServiceName().referenceName());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
