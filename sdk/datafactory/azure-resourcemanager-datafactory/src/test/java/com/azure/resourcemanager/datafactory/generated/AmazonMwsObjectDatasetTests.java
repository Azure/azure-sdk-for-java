// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.datafactory.models.AmazonMwsObjectDataset;
import com.azure.resourcemanager.datafactory.models.DatasetFolder;
import com.azure.resourcemanager.datafactory.models.LinkedServiceReference;
import com.azure.resourcemanager.datafactory.models.ParameterSpecification;
import com.azure.resourcemanager.datafactory.models.ParameterType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AmazonMwsObjectDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AmazonMwsObjectDataset model = BinaryData.fromString(
            "{\"type\":\"AmazonMWSObject\",\"typeProperties\":{\"tableName\":\"dataclz\"},\"description\":\"rdpuyytbpkrp\",\"structure\":\"dataqetp\",\"schema\":\"datanefnoafp\",\"linkedServiceName\":{\"referenceName\":\"nrxiyrxow\",\"parameters\":{\"frfa\":\"datafcmuajwblxphto\",\"ihtibufgz\":\"datatnnsvrfajy\",\"ctblfehb\":\"datazhl\"}},\"parameters\":{\"jxdumhycxonebld\":{\"type\":\"Int\",\"defaultValue\":\"datahrcmeq\"}},\"annotations\":[\"datamdfjwcngkwxjsj\",\"datauvohufzdtsrp\"],\"folder\":{\"name\":\"gzacrzhns\"},\"\":{\"uanbfulvc\":\"datagmgbhuqcz\"}}")
            .toObject(AmazonMwsObjectDataset.class);
        Assertions.assertEquals("rdpuyytbpkrp", model.description());
        Assertions.assertEquals("nrxiyrxow", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.INT, model.parameters().get("jxdumhycxonebld").type());
        Assertions.assertEquals("gzacrzhns", model.folder().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AmazonMwsObjectDataset model = new AmazonMwsObjectDataset().withDescription("rdpuyytbpkrp")
            .withStructure("dataqetp")
            .withSchema("datanefnoafp")
            .withLinkedServiceName(new LinkedServiceReference().withReferenceName("nrxiyrxow")
                .withParameters(
                    mapOf("frfa", "datafcmuajwblxphto", "ihtibufgz", "datatnnsvrfajy", "ctblfehb", "datazhl")))
            .withParameters(mapOf("jxdumhycxonebld",
                new ParameterSpecification().withType(ParameterType.INT).withDefaultValue("datahrcmeq")))
            .withAnnotations(Arrays.asList("datamdfjwcngkwxjsj", "datauvohufzdtsrp"))
            .withFolder(new DatasetFolder().withName("gzacrzhns"))
            .withTableName("dataclz");
        model = BinaryData.fromObject(model).toObject(AmazonMwsObjectDataset.class);
        Assertions.assertEquals("rdpuyytbpkrp", model.description());
        Assertions.assertEquals("nrxiyrxow", model.linkedServiceName().referenceName());
        Assertions.assertEquals(ParameterType.INT, model.parameters().get("jxdumhycxonebld").type());
        Assertions.assertEquals("gzacrzhns", model.folder().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
