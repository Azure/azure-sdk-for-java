// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Environment variable custom setup type properties.
 */
@Fluent
public final class EnvironmentVariableSetupTypeProperties
    implements JsonSerializable<EnvironmentVariableSetupTypeProperties> {
    /*
     * The name of the environment variable.
     */
    private String variableName;

    /*
     * The value of the environment variable.
     */
    private String variableValue;

    /**
     * Creates an instance of EnvironmentVariableSetupTypeProperties class.
     */
    public EnvironmentVariableSetupTypeProperties() {
    }

    /**
     * Get the variableName property: The name of the environment variable.
     * 
     * @return the variableName value.
     */
    public String variableName() {
        return this.variableName;
    }

    /**
     * Set the variableName property: The name of the environment variable.
     * 
     * @param variableName the variableName value to set.
     * @return the EnvironmentVariableSetupTypeProperties object itself.
     */
    public EnvironmentVariableSetupTypeProperties withVariableName(String variableName) {
        this.variableName = variableName;
        return this;
    }

    /**
     * Get the variableValue property: The value of the environment variable.
     * 
     * @return the variableValue value.
     */
    public String variableValue() {
        return this.variableValue;
    }

    /**
     * Set the variableValue property: The value of the environment variable.
     * 
     * @param variableValue the variableValue value to set.
     * @return the EnvironmentVariableSetupTypeProperties object itself.
     */
    public EnvironmentVariableSetupTypeProperties withVariableValue(String variableValue) {
        this.variableValue = variableValue;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (variableName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property variableName in model EnvironmentVariableSetupTypeProperties"));
        }
        if (variableValue() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property variableValue in model EnvironmentVariableSetupTypeProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(EnvironmentVariableSetupTypeProperties.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("variableName", this.variableName);
        jsonWriter.writeStringField("variableValue", this.variableValue);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EnvironmentVariableSetupTypeProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of EnvironmentVariableSetupTypeProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the EnvironmentVariableSetupTypeProperties.
     */
    public static EnvironmentVariableSetupTypeProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            EnvironmentVariableSetupTypeProperties deserializedEnvironmentVariableSetupTypeProperties
                = new EnvironmentVariableSetupTypeProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("variableName".equals(fieldName)) {
                    deserializedEnvironmentVariableSetupTypeProperties.variableName = reader.getString();
                } else if ("variableValue".equals(fieldName)) {
                    deserializedEnvironmentVariableSetupTypeProperties.variableValue = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedEnvironmentVariableSetupTypeProperties;
        });
    }
}
