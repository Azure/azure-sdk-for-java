// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * A copy activity Salesforce V2 source.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type")
@JsonTypeName("SalesforceV2Source")
@Fluent
public final class SalesforceV2Source extends TabularSource {
    /*
     * Database query. Type: string (or Expression with resultType string).
     */
    @JsonProperty(value = "SOQLQuery")
    private Object soqlQuery;

    /*
     * The read behavior for the operation. Default is query. Allowed values: query/queryAll. Type: string (or
     * Expression with resultType string).
     */
    @JsonProperty(value = "readBehavior")
    private Object readBehavior;

    /**
     * Creates an instance of SalesforceV2Source class.
     */
    public SalesforceV2Source() {
    }

    /**
     * Get the soqlQuery property: Database query. Type: string (or Expression with resultType string).
     * 
     * @return the soqlQuery value.
     */
    public Object soqlQuery() {
        return this.soqlQuery;
    }

    /**
     * Set the soqlQuery property: Database query. Type: string (or Expression with resultType string).
     * 
     * @param soqlQuery the soqlQuery value to set.
     * @return the SalesforceV2Source object itself.
     */
    public SalesforceV2Source withSoqlQuery(Object soqlQuery) {
        this.soqlQuery = soqlQuery;
        return this;
    }

    /**
     * Get the readBehavior property: The read behavior for the operation. Default is query. Allowed values:
     * query/queryAll. Type: string (or Expression with resultType string).
     * 
     * @return the readBehavior value.
     */
    public Object readBehavior() {
        return this.readBehavior;
    }

    /**
     * Set the readBehavior property: The read behavior for the operation. Default is query. Allowed values:
     * query/queryAll. Type: string (or Expression with resultType string).
     * 
     * @param readBehavior the readBehavior value to set.
     * @return the SalesforceV2Source object itself.
     */
    public SalesforceV2Source withReadBehavior(Object readBehavior) {
        this.readBehavior = readBehavior;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SalesforceV2Source withQueryTimeout(Object queryTimeout) {
        super.withQueryTimeout(queryTimeout);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SalesforceV2Source withAdditionalColumns(Object additionalColumns) {
        super.withAdditionalColumns(additionalColumns);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SalesforceV2Source withSourceRetryCount(Object sourceRetryCount) {
        super.withSourceRetryCount(sourceRetryCount);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SalesforceV2Source withSourceRetryWait(Object sourceRetryWait) {
        super.withSourceRetryWait(sourceRetryWait);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SalesforceV2Source withMaxConcurrentConnections(Object maxConcurrentConnections) {
        super.withMaxConcurrentConnections(maxConcurrentConnections);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SalesforceV2Source withDisableMetricsCollection(Object disableMetricsCollection) {
        super.withDisableMetricsCollection(disableMetricsCollection);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
