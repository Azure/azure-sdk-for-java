// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.datafactory.models.AzureMLWebServiceFile;
import java.io.IOException;
import java.util.Map;

/**
 * Azure ML Batch Execution activity properties.
 */
@Fluent
public final class AzureMLBatchExecutionActivityTypeProperties
    implements JsonSerializable<AzureMLBatchExecutionActivityTypeProperties> {
    /*
     * Key,Value pairs to be passed to the Azure ML Batch Execution Service endpoint. Keys must match the names of web
     * service parameters defined in the published Azure ML web service. Values will be passed in the GlobalParameters
     * property of the Azure ML batch execution request.
     */
    private Map<String, Object> globalParameters;

    /*
     * Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Outputs to AzureMLWebServiceFile objects
     * specifying the output Blob locations. This information will be passed in the WebServiceOutputs property of the
     * Azure ML batch execution request.
     */
    private Map<String, AzureMLWebServiceFile> webServiceOutputs;

    /*
     * Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Inputs to AzureMLWebServiceFile objects
     * specifying the input Blob locations.. This information will be passed in the WebServiceInputs property of the
     * Azure ML batch execution request.
     */
    private Map<String, AzureMLWebServiceFile> webServiceInputs;

    /**
     * Creates an instance of AzureMLBatchExecutionActivityTypeProperties class.
     */
    public AzureMLBatchExecutionActivityTypeProperties() {
    }

    /**
     * Get the globalParameters property: Key,Value pairs to be passed to the Azure ML Batch Execution Service endpoint.
     * Keys must match the names of web service parameters defined in the published Azure ML web service. Values will be
     * passed in the GlobalParameters property of the Azure ML batch execution request.
     * 
     * @return the globalParameters value.
     */
    public Map<String, Object> globalParameters() {
        return this.globalParameters;
    }

    /**
     * Set the globalParameters property: Key,Value pairs to be passed to the Azure ML Batch Execution Service endpoint.
     * Keys must match the names of web service parameters defined in the published Azure ML web service. Values will be
     * passed in the GlobalParameters property of the Azure ML batch execution request.
     * 
     * @param globalParameters the globalParameters value to set.
     * @return the AzureMLBatchExecutionActivityTypeProperties object itself.
     */
    public AzureMLBatchExecutionActivityTypeProperties withGlobalParameters(Map<String, Object> globalParameters) {
        this.globalParameters = globalParameters;
        return this;
    }

    /**
     * Get the webServiceOutputs property: Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Outputs
     * to AzureMLWebServiceFile objects specifying the output Blob locations. This information will be passed in the
     * WebServiceOutputs property of the Azure ML batch execution request.
     * 
     * @return the webServiceOutputs value.
     */
    public Map<String, AzureMLWebServiceFile> webServiceOutputs() {
        return this.webServiceOutputs;
    }

    /**
     * Set the webServiceOutputs property: Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Outputs
     * to AzureMLWebServiceFile objects specifying the output Blob locations. This information will be passed in the
     * WebServiceOutputs property of the Azure ML batch execution request.
     * 
     * @param webServiceOutputs the webServiceOutputs value to set.
     * @return the AzureMLBatchExecutionActivityTypeProperties object itself.
     */
    public AzureMLBatchExecutionActivityTypeProperties
        withWebServiceOutputs(Map<String, AzureMLWebServiceFile> webServiceOutputs) {
        this.webServiceOutputs = webServiceOutputs;
        return this;
    }

    /**
     * Get the webServiceInputs property: Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Inputs
     * to AzureMLWebServiceFile objects specifying the input Blob locations.. This information will be passed in the
     * WebServiceInputs property of the Azure ML batch execution request.
     * 
     * @return the webServiceInputs value.
     */
    public Map<String, AzureMLWebServiceFile> webServiceInputs() {
        return this.webServiceInputs;
    }

    /**
     * Set the webServiceInputs property: Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Inputs
     * to AzureMLWebServiceFile objects specifying the input Blob locations.. This information will be passed in the
     * WebServiceInputs property of the Azure ML batch execution request.
     * 
     * @param webServiceInputs the webServiceInputs value to set.
     * @return the AzureMLBatchExecutionActivityTypeProperties object itself.
     */
    public AzureMLBatchExecutionActivityTypeProperties
        withWebServiceInputs(Map<String, AzureMLWebServiceFile> webServiceInputs) {
        this.webServiceInputs = webServiceInputs;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (webServiceOutputs() != null) {
            webServiceOutputs().values().forEach(e -> {
                if (e != null) {
                    e.validate();
                }
            });
        }
        if (webServiceInputs() != null) {
            webServiceInputs().values().forEach(e -> {
                if (e != null) {
                    e.validate();
                }
            });
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeMapField("globalParameters", this.globalParameters,
            (writer, element) -> writer.writeUntyped(element));
        jsonWriter.writeMapField("webServiceOutputs", this.webServiceOutputs,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeMapField("webServiceInputs", this.webServiceInputs,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureMLBatchExecutionActivityTypeProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureMLBatchExecutionActivityTypeProperties if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzureMLBatchExecutionActivityTypeProperties.
     */
    public static AzureMLBatchExecutionActivityTypeProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureMLBatchExecutionActivityTypeProperties deserializedAzureMLBatchExecutionActivityTypeProperties
                = new AzureMLBatchExecutionActivityTypeProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("globalParameters".equals(fieldName)) {
                    Map<String, Object> globalParameters = reader.readMap(reader1 -> reader1.readUntyped());
                    deserializedAzureMLBatchExecutionActivityTypeProperties.globalParameters = globalParameters;
                } else if ("webServiceOutputs".equals(fieldName)) {
                    Map<String, AzureMLWebServiceFile> webServiceOutputs
                        = reader.readMap(reader1 -> AzureMLWebServiceFile.fromJson(reader1));
                    deserializedAzureMLBatchExecutionActivityTypeProperties.webServiceOutputs = webServiceOutputs;
                } else if ("webServiceInputs".equals(fieldName)) {
                    Map<String, AzureMLWebServiceFile> webServiceInputs
                        = reader.readMap(reader1 -> AzureMLWebServiceFile.fromJson(reader1));
                    deserializedAzureMLBatchExecutionActivityTypeProperties.webServiceInputs = webServiceInputs;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureMLBatchExecutionActivityTypeProperties;
        });
    }
}
