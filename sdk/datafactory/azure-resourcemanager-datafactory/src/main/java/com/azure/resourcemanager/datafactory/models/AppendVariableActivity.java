// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;

/** Append value for a Variable of type Array. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type")
@JsonTypeName("AppendVariable")
@JsonFlatten
@Fluent
public class AppendVariableActivity extends ControlActivity {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(AppendVariableActivity.class);

    /*
     * Name of the variable whose value needs to be appended to.
     */
    @JsonProperty(value = "typeProperties.variableName")
    private String variableName;

    /*
     * Value to be appended. Could be a static value or Expression
     */
    @JsonProperty(value = "typeProperties.value")
    private Object value;

    /**
     * Get the variableName property: Name of the variable whose value needs to be appended to.
     *
     * @return the variableName value.
     */
    public String variableName() {
        return this.variableName;
    }

    /**
     * Set the variableName property: Name of the variable whose value needs to be appended to.
     *
     * @param variableName the variableName value to set.
     * @return the AppendVariableActivity object itself.
     */
    public AppendVariableActivity withVariableName(String variableName) {
        this.variableName = variableName;
        return this;
    }

    /**
     * Get the value property: Value to be appended. Could be a static value or Expression.
     *
     * @return the value value.
     */
    public Object value() {
        return this.value;
    }

    /**
     * Set the value property: Value to be appended. Could be a static value or Expression.
     *
     * @param value the value value to set.
     * @return the AppendVariableActivity object itself.
     */
    public AppendVariableActivity withValue(Object value) {
        this.value = value;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AppendVariableActivity withName(String name) {
        super.withName(name);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AppendVariableActivity withDescription(String description) {
        super.withDescription(description);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AppendVariableActivity withDependsOn(List<ActivityDependency> dependsOn) {
        super.withDependsOn(dependsOn);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AppendVariableActivity withUserProperties(List<UserProperty> userProperties) {
        super.withUserProperties(userProperties);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
