// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Salesforce V2 object dataset properties.
 */
@Fluent
public final class SalesforceV2ObjectDatasetTypeProperties
    implements JsonSerializable<SalesforceV2ObjectDatasetTypeProperties> {
    /*
     * The Salesforce V2 object API name. Type: string (or Expression with resultType string).
     */
    private Object objectApiName;

    /*
     * The Salesforce V2 report Id. Type: string (or Expression with resultType string).
     */
    private Object reportId;

    /**
     * Creates an instance of SalesforceV2ObjectDatasetTypeProperties class.
     */
    public SalesforceV2ObjectDatasetTypeProperties() {
    }

    /**
     * Get the objectApiName property: The Salesforce V2 object API name. Type: string (or Expression with resultType
     * string).
     * 
     * @return the objectApiName value.
     */
    public Object objectApiName() {
        return this.objectApiName;
    }

    /**
     * Set the objectApiName property: The Salesforce V2 object API name. Type: string (or Expression with resultType
     * string).
     * 
     * @param objectApiName the objectApiName value to set.
     * @return the SalesforceV2ObjectDatasetTypeProperties object itself.
     */
    public SalesforceV2ObjectDatasetTypeProperties withObjectApiName(Object objectApiName) {
        this.objectApiName = objectApiName;
        return this;
    }

    /**
     * Get the reportId property: The Salesforce V2 report Id. Type: string (or Expression with resultType string).
     * 
     * @return the reportId value.
     */
    public Object reportId() {
        return this.reportId;
    }

    /**
     * Set the reportId property: The Salesforce V2 report Id. Type: string (or Expression with resultType string).
     * 
     * @param reportId the reportId value to set.
     * @return the SalesforceV2ObjectDatasetTypeProperties object itself.
     */
    public SalesforceV2ObjectDatasetTypeProperties withReportId(Object reportId) {
        this.reportId = reportId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeUntypedField("objectApiName", this.objectApiName);
        jsonWriter.writeUntypedField("reportId", this.reportId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SalesforceV2ObjectDatasetTypeProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SalesforceV2ObjectDatasetTypeProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SalesforceV2ObjectDatasetTypeProperties.
     */
    public static SalesforceV2ObjectDatasetTypeProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SalesforceV2ObjectDatasetTypeProperties deserializedSalesforceV2ObjectDatasetTypeProperties
                = new SalesforceV2ObjectDatasetTypeProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("objectApiName".equals(fieldName)) {
                    deserializedSalesforceV2ObjectDatasetTypeProperties.objectApiName = reader.readUntyped();
                } else if ("reportId".equals(fieldName)) {
                    deserializedSalesforceV2ObjectDatasetTypeProperties.reportId = reader.readUntyped();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSalesforceV2ObjectDatasetTypeProperties;
        });
    }
}
