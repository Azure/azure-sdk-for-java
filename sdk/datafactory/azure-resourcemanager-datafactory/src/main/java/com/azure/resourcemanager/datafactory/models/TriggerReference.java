// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Trigger reference type. */
@Fluent
public final class TriggerReference {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(TriggerReference.class);

    /*
     * Trigger reference type.
     */
    @JsonProperty(value = "type", required = true)
    private String type;

    /*
     * Reference trigger name.
     */
    @JsonProperty(value = "referenceName", required = true)
    private String referenceName;

    /** Creates an instance of TriggerReference class. */
    public TriggerReference() {
        type = "TriggerReference";
    }

    /**
     * Get the type property: Trigger reference type.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: Trigger reference type.
     *
     * @param type the type value to set.
     * @return the TriggerReference object itself.
     */
    public TriggerReference withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Get the referenceName property: Reference trigger name.
     *
     * @return the referenceName value.
     */
    public String referenceName() {
        return this.referenceName;
    }

    /**
     * Set the referenceName property: Reference trigger name.
     *
     * @param referenceName the referenceName value to set.
     * @return the TriggerReference object itself.
     */
    public TriggerReference withReferenceName(String referenceName) {
        this.referenceName = referenceName;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (referenceName() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property referenceName in model TriggerReference"));
        }
    }
}
