// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Salesforce object dataset properties.
 */
@Fluent
public final class SalesforceObjectDatasetTypeProperties
    implements JsonSerializable<SalesforceObjectDatasetTypeProperties> {
    /*
     * The Salesforce object API name. Type: string (or Expression with resultType string).
     */
    private Object objectApiName;

    /**
     * Creates an instance of SalesforceObjectDatasetTypeProperties class.
     */
    public SalesforceObjectDatasetTypeProperties() {
    }

    /**
     * Get the objectApiName property: The Salesforce object API name. Type: string (or Expression with resultType
     * string).
     * 
     * @return the objectApiName value.
     */
    public Object objectApiName() {
        return this.objectApiName;
    }

    /**
     * Set the objectApiName property: The Salesforce object API name. Type: string (or Expression with resultType
     * string).
     * 
     * @param objectApiName the objectApiName value to set.
     * @return the SalesforceObjectDatasetTypeProperties object itself.
     */
    public SalesforceObjectDatasetTypeProperties withObjectApiName(Object objectApiName) {
        this.objectApiName = objectApiName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeUntypedField("objectApiName", this.objectApiName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SalesforceObjectDatasetTypeProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SalesforceObjectDatasetTypeProperties if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SalesforceObjectDatasetTypeProperties.
     */
    public static SalesforceObjectDatasetTypeProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SalesforceObjectDatasetTypeProperties deserializedSalesforceObjectDatasetTypeProperties
                = new SalesforceObjectDatasetTypeProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("objectApiName".equals(fieldName)) {
                    deserializedSalesforceObjectDatasetTypeProperties.objectApiName = reader.readUntyped();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSalesforceObjectDatasetTypeProperties;
        });
    }
}
