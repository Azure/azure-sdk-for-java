// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.datafactory.models.AzureFunctionActivityMethod;
import java.io.IOException;
import java.util.Map;

/**
 * Azure Function activity type properties.
 */
@Fluent
public final class AzureFunctionActivityTypeProperties
    implements JsonSerializable<AzureFunctionActivityTypeProperties> {
    /*
     * Rest API method for target endpoint.
     */
    private AzureFunctionActivityMethod method;

    /*
     * Name of the Function that the Azure Function Activity will call. Type: string (or Expression with resultType
     * string)
     */
    private Object functionName;

    /*
     * Represents the headers that will be sent to the request. For example, to set the language and type on a request:
     * "headers" : { "Accept-Language": "en-us", "Content-Type": "application/json" }. Type: string (or Expression with
     * resultType string).
     */
    private Map<String, Object> headers;

    /*
     * Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET
     * method Type: string (or Expression with resultType string).
     */
    private Object body;

    /**
     * Creates an instance of AzureFunctionActivityTypeProperties class.
     */
    public AzureFunctionActivityTypeProperties() {
    }

    /**
     * Get the method property: Rest API method for target endpoint.
     * 
     * @return the method value.
     */
    public AzureFunctionActivityMethod method() {
        return this.method;
    }

    /**
     * Set the method property: Rest API method for target endpoint.
     * 
     * @param method the method value to set.
     * @return the AzureFunctionActivityTypeProperties object itself.
     */
    public AzureFunctionActivityTypeProperties withMethod(AzureFunctionActivityMethod method) {
        this.method = method;
        return this;
    }

    /**
     * Get the functionName property: Name of the Function that the Azure Function Activity will call. Type: string (or
     * Expression with resultType string).
     * 
     * @return the functionName value.
     */
    public Object functionName() {
        return this.functionName;
    }

    /**
     * Set the functionName property: Name of the Function that the Azure Function Activity will call. Type: string (or
     * Expression with resultType string).
     * 
     * @param functionName the functionName value to set.
     * @return the AzureFunctionActivityTypeProperties object itself.
     */
    public AzureFunctionActivityTypeProperties withFunctionName(Object functionName) {
        this.functionName = functionName;
        return this;
    }

    /**
     * Get the headers property: Represents the headers that will be sent to the request. For example, to set the
     * language and type on a request: "headers" : { "Accept-Language": "en-us", "Content-Type": "application/json" }.
     * Type: string (or Expression with resultType string).
     * 
     * @return the headers value.
     */
    public Map<String, Object> headers() {
        return this.headers;
    }

    /**
     * Set the headers property: Represents the headers that will be sent to the request. For example, to set the
     * language and type on a request: "headers" : { "Accept-Language": "en-us", "Content-Type": "application/json" }.
     * Type: string (or Expression with resultType string).
     * 
     * @param headers the headers value to set.
     * @return the AzureFunctionActivityTypeProperties object itself.
     */
    public AzureFunctionActivityTypeProperties withHeaders(Map<String, Object> headers) {
        this.headers = headers;
        return this;
    }

    /**
     * Get the body property: Represents the payload that will be sent to the endpoint. Required for POST/PUT method,
     * not allowed for GET method Type: string (or Expression with resultType string).
     * 
     * @return the body value.
     */
    public Object body() {
        return this.body;
    }

    /**
     * Set the body property: Represents the payload that will be sent to the endpoint. Required for POST/PUT method,
     * not allowed for GET method Type: string (or Expression with resultType string).
     * 
     * @param body the body value to set.
     * @return the AzureFunctionActivityTypeProperties object itself.
     */
    public AzureFunctionActivityTypeProperties withBody(Object body) {
        this.body = body;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (method() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property method in model AzureFunctionActivityTypeProperties"));
        }
        if (functionName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property functionName in model AzureFunctionActivityTypeProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(AzureFunctionActivityTypeProperties.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("method", this.method == null ? null : this.method.toString());
        jsonWriter.writeUntypedField("functionName", this.functionName);
        jsonWriter.writeMapField("headers", this.headers, (writer, element) -> writer.writeUntyped(element));
        jsonWriter.writeUntypedField("body", this.body);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureFunctionActivityTypeProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureFunctionActivityTypeProperties if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AzureFunctionActivityTypeProperties.
     */
    public static AzureFunctionActivityTypeProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureFunctionActivityTypeProperties deserializedAzureFunctionActivityTypeProperties
                = new AzureFunctionActivityTypeProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("method".equals(fieldName)) {
                    deserializedAzureFunctionActivityTypeProperties.method
                        = AzureFunctionActivityMethod.fromString(reader.getString());
                } else if ("functionName".equals(fieldName)) {
                    deserializedAzureFunctionActivityTypeProperties.functionName = reader.readUntyped();
                } else if ("headers".equals(fieldName)) {
                    Map<String, Object> headers = reader.readMap(reader1 -> reader1.readUntyped());
                    deserializedAzureFunctionActivityTypeProperties.headers = headers;
                } else if ("body".equals(fieldName)) {
                    deserializedAzureFunctionActivityTypeProperties.body = reader.readUntyped();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureFunctionActivityTypeProperties;
        });
    }
}
