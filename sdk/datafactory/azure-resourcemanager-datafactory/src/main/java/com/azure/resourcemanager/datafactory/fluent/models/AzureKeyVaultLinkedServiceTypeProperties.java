// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.datafactory.models.CredentialReference;
import java.io.IOException;

/**
 * Azure Key Vault linked service properties.
 */
@Fluent
public final class AzureKeyVaultLinkedServiceTypeProperties
    implements JsonSerializable<AzureKeyVaultLinkedServiceTypeProperties> {
    /*
     * The base URL of the Azure Key Vault. e.g. https://myakv.vault.azure.net Type: string (or Expression with
     * resultType string).
     */
    private Object baseUrl;

    /*
     * The credential reference containing authentication information.
     */
    private CredentialReference credential;

    /**
     * Creates an instance of AzureKeyVaultLinkedServiceTypeProperties class.
     */
    public AzureKeyVaultLinkedServiceTypeProperties() {
    }

    /**
     * Get the baseUrl property: The base URL of the Azure Key Vault. e.g. https://myakv.vault.azure.net Type: string
     * (or Expression with resultType string).
     * 
     * @return the baseUrl value.
     */
    public Object baseUrl() {
        return this.baseUrl;
    }

    /**
     * Set the baseUrl property: The base URL of the Azure Key Vault. e.g. https://myakv.vault.azure.net Type: string
     * (or Expression with resultType string).
     * 
     * @param baseUrl the baseUrl value to set.
     * @return the AzureKeyVaultLinkedServiceTypeProperties object itself.
     */
    public AzureKeyVaultLinkedServiceTypeProperties withBaseUrl(Object baseUrl) {
        this.baseUrl = baseUrl;
        return this;
    }

    /**
     * Get the credential property: The credential reference containing authentication information.
     * 
     * @return the credential value.
     */
    public CredentialReference credential() {
        return this.credential;
    }

    /**
     * Set the credential property: The credential reference containing authentication information.
     * 
     * @param credential the credential value to set.
     * @return the AzureKeyVaultLinkedServiceTypeProperties object itself.
     */
    public AzureKeyVaultLinkedServiceTypeProperties withCredential(CredentialReference credential) {
        this.credential = credential;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (baseUrl() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property baseUrl in model AzureKeyVaultLinkedServiceTypeProperties"));
        }
        if (credential() != null) {
            credential().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(AzureKeyVaultLinkedServiceTypeProperties.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeUntypedField("baseUrl", this.baseUrl);
        jsonWriter.writeJsonField("credential", this.credential);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureKeyVaultLinkedServiceTypeProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureKeyVaultLinkedServiceTypeProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AzureKeyVaultLinkedServiceTypeProperties.
     */
    public static AzureKeyVaultLinkedServiceTypeProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureKeyVaultLinkedServiceTypeProperties deserializedAzureKeyVaultLinkedServiceTypeProperties
                = new AzureKeyVaultLinkedServiceTypeProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("baseUrl".equals(fieldName)) {
                    deserializedAzureKeyVaultLinkedServiceTypeProperties.baseUrl = reader.readUntyped();
                } else if ("credential".equals(fieldName)) {
                    deserializedAzureKeyVaultLinkedServiceTypeProperties.credential
                        = CredentialReference.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureKeyVaultLinkedServiceTypeProperties;
        });
    }
}
