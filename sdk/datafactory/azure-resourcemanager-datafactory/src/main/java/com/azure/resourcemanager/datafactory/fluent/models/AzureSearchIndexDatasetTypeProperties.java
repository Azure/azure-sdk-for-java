// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Properties specific to this dataset type.
 */
@Fluent
public final class AzureSearchIndexDatasetTypeProperties
    implements JsonSerializable<AzureSearchIndexDatasetTypeProperties> {
    /*
     * The name of the Azure Search Index. Type: string (or Expression with resultType string).
     */
    private Object indexName;

    /**
     * Creates an instance of AzureSearchIndexDatasetTypeProperties class.
     */
    public AzureSearchIndexDatasetTypeProperties() {
    }

    /**
     * Get the indexName property: The name of the Azure Search Index. Type: string (or Expression with resultType
     * string).
     * 
     * @return the indexName value.
     */
    public Object indexName() {
        return this.indexName;
    }

    /**
     * Set the indexName property: The name of the Azure Search Index. Type: string (or Expression with resultType
     * string).
     * 
     * @param indexName the indexName value to set.
     * @return the AzureSearchIndexDatasetTypeProperties object itself.
     */
    public AzureSearchIndexDatasetTypeProperties withIndexName(Object indexName) {
        this.indexName = indexName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (indexName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property indexName in model AzureSearchIndexDatasetTypeProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(AzureSearchIndexDatasetTypeProperties.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeUntypedField("indexName", this.indexName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureSearchIndexDatasetTypeProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureSearchIndexDatasetTypeProperties if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AzureSearchIndexDatasetTypeProperties.
     */
    public static AzureSearchIndexDatasetTypeProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureSearchIndexDatasetTypeProperties deserializedAzureSearchIndexDatasetTypeProperties
                = new AzureSearchIndexDatasetTypeProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("indexName".equals(fieldName)) {
                    deserializedAzureSearchIndexDatasetTypeProperties.indexName = reader.readUntyped();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureSearchIndexDatasetTypeProperties;
        });
    }
}
