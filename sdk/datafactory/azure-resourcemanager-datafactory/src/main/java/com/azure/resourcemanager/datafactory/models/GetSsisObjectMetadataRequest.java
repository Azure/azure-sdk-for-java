// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The request payload of get SSIS object metadata.
 */
@Fluent
public final class GetSsisObjectMetadataRequest implements JsonSerializable<GetSsisObjectMetadataRequest> {
    /*
     * Metadata path.
     */
    private String metadataPath;

    /**
     * Creates an instance of GetSsisObjectMetadataRequest class.
     */
    public GetSsisObjectMetadataRequest() {
    }

    /**
     * Get the metadataPath property: Metadata path.
     * 
     * @return the metadataPath value.
     */
    public String metadataPath() {
        return this.metadataPath;
    }

    /**
     * Set the metadataPath property: Metadata path.
     * 
     * @param metadataPath the metadataPath value to set.
     * @return the GetSsisObjectMetadataRequest object itself.
     */
    public GetSsisObjectMetadataRequest withMetadataPath(String metadataPath) {
        this.metadataPath = metadataPath;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("metadataPath", this.metadataPath);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GetSsisObjectMetadataRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GetSsisObjectMetadataRequest if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the GetSsisObjectMetadataRequest.
     */
    public static GetSsisObjectMetadataRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            GetSsisObjectMetadataRequest deserializedGetSsisObjectMetadataRequest = new GetSsisObjectMetadataRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("metadataPath".equals(fieldName)) {
                    deserializedGetSsisObjectMetadataRequest.metadataPath = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedGetSsisObjectMetadataRequest;
        });
    }
}
