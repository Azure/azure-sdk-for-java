// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** The express custom setup of installing Azure PowerShell. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type")
@JsonTypeName("AzPowerShellSetup")
@JsonFlatten
@Fluent
public class AzPowerShellSetup extends CustomSetupBase {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(AzPowerShellSetup.class);

    /*
     * The required version of Azure PowerShell to install.
     */
    @JsonProperty(value = "typeProperties.version", required = true)
    private String version;

    /**
     * Get the version property: The required version of Azure PowerShell to install.
     *
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Set the version property: The required version of Azure PowerShell to install.
     *
     * @param version the version value to set.
     * @return the AzPowerShellSetup object itself.
     */
    public AzPowerShellSetup withVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (version() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property version in model AzPowerShellSetup"));
        }
    }
}
