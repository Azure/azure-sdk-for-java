// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Response body structure for creating data flow debug session.
 */
@Fluent
public final class CreateDataFlowDebugSessionResponseInner
    implements JsonSerializable<CreateDataFlowDebugSessionResponseInner> {
    /*
     * The state of the debug session.
     */
    private String status;

    /*
     * The ID of data flow debug session.
     */
    private String sessionId;

    /**
     * Creates an instance of CreateDataFlowDebugSessionResponseInner class.
     */
    public CreateDataFlowDebugSessionResponseInner() {
    }

    /**
     * Get the status property: The state of the debug session.
     * 
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Set the status property: The state of the debug session.
     * 
     * @param status the status value to set.
     * @return the CreateDataFlowDebugSessionResponseInner object itself.
     */
    public CreateDataFlowDebugSessionResponseInner withStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Get the sessionId property: The ID of data flow debug session.
     * 
     * @return the sessionId value.
     */
    public String sessionId() {
        return this.sessionId;
    }

    /**
     * Set the sessionId property: The ID of data flow debug session.
     * 
     * @param sessionId the sessionId value to set.
     * @return the CreateDataFlowDebugSessionResponseInner object itself.
     */
    public CreateDataFlowDebugSessionResponseInner withSessionId(String sessionId) {
        this.sessionId = sessionId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("status", this.status);
        jsonWriter.writeStringField("sessionId", this.sessionId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CreateDataFlowDebugSessionResponseInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CreateDataFlowDebugSessionResponseInner if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CreateDataFlowDebugSessionResponseInner.
     */
    public static CreateDataFlowDebugSessionResponseInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CreateDataFlowDebugSessionResponseInner deserializedCreateDataFlowDebugSessionResponseInner
                = new CreateDataFlowDebugSessionResponseInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("status".equals(fieldName)) {
                    deserializedCreateDataFlowDebugSessionResponseInner.status = reader.getString();
                } else if ("sessionId".equals(fieldName)) {
                    deserializedCreateDataFlowDebugSessionResponseInner.sessionId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCreateDataFlowDebugSessionResponseInner;
        });
    }
}
