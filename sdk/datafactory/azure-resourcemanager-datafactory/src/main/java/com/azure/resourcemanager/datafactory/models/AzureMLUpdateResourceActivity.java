// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;

/** Azure ML Update Resource management activity. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type")
@JsonTypeName("AzureMLUpdateResource")
@JsonFlatten
@Fluent
public class AzureMLUpdateResourceActivity extends ExecutionActivity {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(AzureMLUpdateResourceActivity.class);

    /*
     * Name of the Trained Model module in the Web Service experiment to be
     * updated. Type: string (or Expression with resultType string).
     */
    @JsonProperty(value = "typeProperties.trainedModelName", required = true)
    private Object trainedModelName;

    /*
     * Name of Azure Storage linked service holding the .ilearner file that
     * will be uploaded by the update operation.
     */
    @JsonProperty(value = "typeProperties.trainedModelLinkedServiceName", required = true)
    private LinkedServiceReference trainedModelLinkedServiceName;

    /*
     * The relative file path in trainedModelLinkedService to represent the
     * .ilearner file that will be uploaded by the update operation.  Type:
     * string (or Expression with resultType string).
     */
    @JsonProperty(value = "typeProperties.trainedModelFilePath", required = true)
    private Object trainedModelFilePath;

    /**
     * Get the trainedModelName property: Name of the Trained Model module in the Web Service experiment to be updated.
     * Type: string (or Expression with resultType string).
     *
     * @return the trainedModelName value.
     */
    public Object trainedModelName() {
        return this.trainedModelName;
    }

    /**
     * Set the trainedModelName property: Name of the Trained Model module in the Web Service experiment to be updated.
     * Type: string (or Expression with resultType string).
     *
     * @param trainedModelName the trainedModelName value to set.
     * @return the AzureMLUpdateResourceActivity object itself.
     */
    public AzureMLUpdateResourceActivity withTrainedModelName(Object trainedModelName) {
        this.trainedModelName = trainedModelName;
        return this;
    }

    /**
     * Get the trainedModelLinkedServiceName property: Name of Azure Storage linked service holding the .ilearner file
     * that will be uploaded by the update operation.
     *
     * @return the trainedModelLinkedServiceName value.
     */
    public LinkedServiceReference trainedModelLinkedServiceName() {
        return this.trainedModelLinkedServiceName;
    }

    /**
     * Set the trainedModelLinkedServiceName property: Name of Azure Storage linked service holding the .ilearner file
     * that will be uploaded by the update operation.
     *
     * @param trainedModelLinkedServiceName the trainedModelLinkedServiceName value to set.
     * @return the AzureMLUpdateResourceActivity object itself.
     */
    public AzureMLUpdateResourceActivity withTrainedModelLinkedServiceName(
        LinkedServiceReference trainedModelLinkedServiceName) {
        this.trainedModelLinkedServiceName = trainedModelLinkedServiceName;
        return this;
    }

    /**
     * Get the trainedModelFilePath property: The relative file path in trainedModelLinkedService to represent the
     * .ilearner file that will be uploaded by the update operation. Type: string (or Expression with resultType
     * string).
     *
     * @return the trainedModelFilePath value.
     */
    public Object trainedModelFilePath() {
        return this.trainedModelFilePath;
    }

    /**
     * Set the trainedModelFilePath property: The relative file path in trainedModelLinkedService to represent the
     * .ilearner file that will be uploaded by the update operation. Type: string (or Expression with resultType
     * string).
     *
     * @param trainedModelFilePath the trainedModelFilePath value to set.
     * @return the AzureMLUpdateResourceActivity object itself.
     */
    public AzureMLUpdateResourceActivity withTrainedModelFilePath(Object trainedModelFilePath) {
        this.trainedModelFilePath = trainedModelFilePath;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AzureMLUpdateResourceActivity withLinkedServiceName(LinkedServiceReference linkedServiceName) {
        super.withLinkedServiceName(linkedServiceName);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AzureMLUpdateResourceActivity withPolicy(ActivityPolicy policy) {
        super.withPolicy(policy);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AzureMLUpdateResourceActivity withName(String name) {
        super.withName(name);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AzureMLUpdateResourceActivity withDescription(String description) {
        super.withDescription(description);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AzureMLUpdateResourceActivity withDependsOn(List<ActivityDependency> dependsOn) {
        super.withDependsOn(dependsOn);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AzureMLUpdateResourceActivity withUserProperties(List<UserProperty> userProperties) {
        super.withUserProperties(userProperties);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (trainedModelName() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property trainedModelName in model AzureMLUpdateResourceActivity"));
        }
        if (trainedModelLinkedServiceName() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property trainedModelLinkedServiceName in model"
                            + " AzureMLUpdateResourceActivity"));
        } else {
            trainedModelLinkedServiceName().validate();
        }
        if (trainedModelFilePath() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property trainedModelFilePath in model AzureMLUpdateResourceActivity"));
        }
    }
}
