// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** A data flow transformation. */
@Fluent
public class Transformation {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(Transformation.class);

    /*
     * Transformation name.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /*
     * Transformation description.
     */
    @JsonProperty(value = "description")
    private String description;

    /**
     * Get the name property: Transformation name.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Transformation name.
     *
     * @param name the name value to set.
     * @return the Transformation object itself.
     */
    public Transformation withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the description property: Transformation description.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Transformation description.
     *
     * @param description the description value to set.
     * @return the Transformation object itself.
     */
    public Transformation withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (name() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property name in model Transformation"));
        }
    }
}
