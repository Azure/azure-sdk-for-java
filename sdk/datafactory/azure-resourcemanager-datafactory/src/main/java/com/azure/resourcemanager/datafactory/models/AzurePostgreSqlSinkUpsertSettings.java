// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Azure Database for PostgreSQL upsert option settings.
 */
@Fluent
public final class AzurePostgreSqlSinkUpsertSettings implements JsonSerializable<AzurePostgreSqlSinkUpsertSettings> {
    /*
     * Key column names for unique row identification. Type: array of strings (or Expression with resultType array of
     * strings).
     */
    private Object keys;

    /**
     * Creates an instance of AzurePostgreSqlSinkUpsertSettings class.
     */
    public AzurePostgreSqlSinkUpsertSettings() {
    }

    /**
     * Get the keys property: Key column names for unique row identification. Type: array of strings (or Expression with
     * resultType array of strings).
     * 
     * @return the keys value.
     */
    public Object keys() {
        return this.keys;
    }

    /**
     * Set the keys property: Key column names for unique row identification. Type: array of strings (or Expression with
     * resultType array of strings).
     * 
     * @param keys the keys value to set.
     * @return the AzurePostgreSqlSinkUpsertSettings object itself.
     */
    public AzurePostgreSqlSinkUpsertSettings withKeys(Object keys) {
        this.keys = keys;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        if (this.keys != null) {
            jsonWriter.writeUntypedField("keys", this.keys);
        }
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzurePostgreSqlSinkUpsertSettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzurePostgreSqlSinkUpsertSettings if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzurePostgreSqlSinkUpsertSettings.
     */
    public static AzurePostgreSqlSinkUpsertSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzurePostgreSqlSinkUpsertSettings deserializedAzurePostgreSqlSinkUpsertSettings
                = new AzurePostgreSqlSinkUpsertSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("keys".equals(fieldName)) {
                    deserializedAzurePostgreSqlSinkUpsertSettings.keys = reader.readUntyped();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzurePostgreSqlSinkUpsertSettings;
        });
    }
}
