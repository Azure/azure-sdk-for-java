// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.models.AmfId;
import com.azure.resourcemanager.mobilenetwork.models.Guti5G;
import com.azure.resourcemanager.mobilenetwork.models.PlmnId;
import org.junit.jupiter.api.Assertions;

public final class Guti5GTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Guti5G model = BinaryData.fromString(
            "{\"plmn\":{\"mcc\":\"jfpgpicrmn\",\"mnc\":\"hr\"},\"amfId\":{\"regionId\":185750645,\"setId\":1972611629,\"pointer\":1113568853},\"fivegTmsi\":13695929}")
            .toObject(Guti5G.class);
        Assertions.assertEquals("jfpgpicrmn", model.plmn().mcc());
        Assertions.assertEquals("hr", model.plmn().mnc());
        Assertions.assertEquals(185750645, model.amfId().regionId());
        Assertions.assertEquals(1972611629, model.amfId().setId());
        Assertions.assertEquals(1113568853, model.amfId().pointer());
        Assertions.assertEquals(13695929, model.fivegTmsi());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Guti5G model = new Guti5G().withPlmn(new PlmnId().withMcc("jfpgpicrmn").withMnc("hr"))
            .withAmfId(new AmfId().withRegionId(185750645).withSetId(1972611629).withPointer(1113568853))
            .withFivegTmsi(13695929);
        model = BinaryData.fromObject(model).toObject(Guti5G.class);
        Assertions.assertEquals("jfpgpicrmn", model.plmn().mcc());
        Assertions.assertEquals("hr", model.plmn().mnc());
        Assertions.assertEquals(185750645, model.amfId().regionId());
        Assertions.assertEquals(1972611629, model.amfId().setId());
        Assertions.assertEquals(1113568853, model.amfId().pointer());
        Assertions.assertEquals(13695929, model.fivegTmsi());
    }
}
