// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.fluent.models.RoutingInfoPropertiesFormat;
import com.azure.resourcemanager.mobilenetwork.models.AttachedDataNetworkResourceId;
import com.azure.resourcemanager.mobilenetwork.models.Ipv4Route;
import com.azure.resourcemanager.mobilenetwork.models.Ipv4RouteNextHop;
import com.azure.resourcemanager.mobilenetwork.models.UserPlaneDataRoutesItem;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RoutingInfoPropertiesFormatTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RoutingInfoPropertiesFormat model = BinaryData.fromString(
            "{\"controlPlaneAccessRoutes\":[{\"destination\":\"exkpzksmondjmq\",\"nextHops\":[{\"address\":\"pomgkopkwhojvp\",\"priority\":996289807},{\"address\":\"xysmoc\",\"priority\":1861395903},{\"address\":\"qvmkcxo\",\"priority\":109668081},{\"address\":\"helxprglya\",\"priority\":1462356590}]}],\"userPlaneAccessRoutes\":[{\"destination\":\"bcuejrjxgci\",\"nextHops\":[{\"address\":\"hos\",\"priority\":341443712}]},{\"destination\":\"rhzo\",\"nextHops\":[{\"address\":\"m\",\"priority\":812505700}]}],\"userPlaneDataRoutes\":[{\"attachedDataNetwork\":{\"id\":\"hwflu\"},\"routes\":[{\"destination\":\"mhrkwofyyvoqacp\",\"nextHops\":[{},{},{}]},{\"destination\":\"btgiwbwoenwas\",\"nextHops\":[{},{}]},{\"destination\":\"tkcnqxwb\",\"nextHops\":[{},{},{}]},{\"destination\":\"lpiujwaa\",\"nextHops\":[{},{},{}]}]},{\"attachedDataNetwork\":{\"id\":\"i\"},\"routes\":[{\"destination\":\"uqerpqlpqwc\",\"nextHops\":[{},{},{},{}]},{\"destination\":\"gbdbutauv\",\"nextHops\":[{},{},{},{}]},{\"destination\":\"uwhhmhykojoxafn\",\"nextHops\":[{},{}]}]}]}")
            .toObject(RoutingInfoPropertiesFormat.class);
        Assertions.assertEquals("exkpzksmondjmq", model.controlPlaneAccessRoutes().get(0).destination());
        Assertions.assertEquals("pomgkopkwhojvp", model.controlPlaneAccessRoutes().get(0).nextHops().get(0).address());
        Assertions.assertEquals(996289807, model.controlPlaneAccessRoutes().get(0).nextHops().get(0).priority());
        Assertions.assertEquals("bcuejrjxgci", model.userPlaneAccessRoutes().get(0).destination());
        Assertions.assertEquals("hos", model.userPlaneAccessRoutes().get(0).nextHops().get(0).address());
        Assertions.assertEquals(341443712, model.userPlaneAccessRoutes().get(0).nextHops().get(0).priority());
        Assertions.assertEquals("hwflu", model.userPlaneDataRoutes().get(0).attachedDataNetwork().id());
        Assertions.assertEquals("mhrkwofyyvoqacp", model.userPlaneDataRoutes().get(0).routes().get(0).destination());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RoutingInfoPropertiesFormat model
            = new RoutingInfoPropertiesFormat()
                .withControlPlaneAccessRoutes(
                    Arrays
                        .asList(new Ipv4Route().withDestination("exkpzksmondjmq")
                            .withNextHops(Arrays.asList(
                                new Ipv4RouteNextHop().withAddress("pomgkopkwhojvp").withPriority(996289807),
                                new Ipv4RouteNextHop().withAddress("xysmoc").withPriority(1861395903),
                                new Ipv4RouteNextHop().withAddress("qvmkcxo").withPriority(109668081),
                                new Ipv4RouteNextHop().withAddress("helxprglya").withPriority(1462356590)))))
                .withUserPlaneAccessRoutes(Arrays.asList(
                    new Ipv4Route().withDestination("bcuejrjxgci")
                        .withNextHops(Arrays.asList(new Ipv4RouteNextHop().withAddress("hos").withPriority(341443712))),
                    new Ipv4Route().withDestination("rhzo")
                        .withNextHops(Arrays.asList(new Ipv4RouteNextHop().withAddress("m").withPriority(812505700)))))
                .withUserPlaneDataRoutes(Arrays.asList(
                    new UserPlaneDataRoutesItem()
                        .withAttachedDataNetwork(new AttachedDataNetworkResourceId().withId("hwflu"))
                        .withRoutes(Arrays.asList(
                            new Ipv4Route().withDestination("mhrkwofyyvoqacp")
                                .withNextHops(Arrays.asList(new Ipv4RouteNextHop(), new Ipv4RouteNextHop(),
                                    new Ipv4RouteNextHop())),
                            new Ipv4Route().withDestination("btgiwbwoenwas")
                                .withNextHops(Arrays.asList(new Ipv4RouteNextHop(), new Ipv4RouteNextHop())),
                            new Ipv4Route().withDestination("tkcnqxwb")
                                .withNextHops(Arrays
                                    .asList(new Ipv4RouteNextHop(), new Ipv4RouteNextHop(), new Ipv4RouteNextHop())),
                            new Ipv4Route().withDestination("lpiujwaa")
                                .withNextHops(Arrays.asList(new Ipv4RouteNextHop(), new Ipv4RouteNextHop(),
                                    new Ipv4RouteNextHop())))),
                    new UserPlaneDataRoutesItem()
                        .withAttachedDataNetwork(new AttachedDataNetworkResourceId().withId("i"))
                        .withRoutes(Arrays.asList(
                            new Ipv4Route().withDestination("uqerpqlpqwc")
                                .withNextHops(Arrays.asList(new Ipv4RouteNextHop(), new Ipv4RouteNextHop(),
                                    new Ipv4RouteNextHop(), new Ipv4RouteNextHop())),
                            new Ipv4Route().withDestination("gbdbutauv")
                                .withNextHops(Arrays.asList(new Ipv4RouteNextHop(), new Ipv4RouteNextHop(),
                                    new Ipv4RouteNextHop(), new Ipv4RouteNextHop())),
                            new Ipv4Route().withDestination("uwhhmhykojoxafn")
                                .withNextHops(Arrays.asList(new Ipv4RouteNextHop(), new Ipv4RouteNextHop()))))));
        model = BinaryData.fromObject(model).toObject(RoutingInfoPropertiesFormat.class);
        Assertions.assertEquals("exkpzksmondjmq", model.controlPlaneAccessRoutes().get(0).destination());
        Assertions.assertEquals("pomgkopkwhojvp", model.controlPlaneAccessRoutes().get(0).nextHops().get(0).address());
        Assertions.assertEquals(996289807, model.controlPlaneAccessRoutes().get(0).nextHops().get(0).priority());
        Assertions.assertEquals("bcuejrjxgci", model.userPlaneAccessRoutes().get(0).destination());
        Assertions.assertEquals("hos", model.userPlaneAccessRoutes().get(0).nextHops().get(0).address());
        Assertions.assertEquals(341443712, model.userPlaneAccessRoutes().get(0).nextHops().get(0).priority());
        Assertions.assertEquals("hwflu", model.userPlaneDataRoutes().get(0).attachedDataNetwork().id());
        Assertions.assertEquals("mhrkwofyyvoqacp", model.userPlaneDataRoutes().get(0).routes().get(0).destination());
    }
}
