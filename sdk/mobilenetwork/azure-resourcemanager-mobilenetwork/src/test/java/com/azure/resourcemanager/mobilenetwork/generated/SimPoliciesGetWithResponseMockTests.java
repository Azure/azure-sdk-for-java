// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mobilenetwork.MobileNetworkManager;
import com.azure.resourcemanager.mobilenetwork.models.SimPolicy;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SimPoliciesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Accepted\",\"siteProvisioningState\":{\"odkadppyibngq\":\"Updating\",\"d\":\"Deleting\",\"rxwhydtlu\":\"Provisioned\"},\"ueAmbr\":{\"uplink\":\"vadswzs\",\"downlink\":\"uyem\"},\"defaultSlice\":{\"id\":\"owuowh\"},\"rfspIndex\":1035990638,\"registrationTimer\":1748294835,\"sliceConfigurations\":[{\"slice\":{\"id\":\"rmouvb\"},\"defaultDataNetwork\":{\"id\":\"gmokzkltrfowt\"},\"dataNetworkConfigurations\":[{\"dataNetwork\":{\"id\":\"rfmvlihcvjdrqcrj\"},\"sessionAmbr\":{\"uplink\":\"dhftukvhdxlwy\",\"downlink\":\"jbfqzdk\"},\"allowedServices\":[]},{\"dataNetwork\":{\"id\":\"njyixh\"},\"sessionAmbr\":{\"uplink\":\"fratqxmbjroumzz\",\"downlink\":\"valqjrhuzgfxo\"},\"allowedServices\":[]},{\"dataNetwork\":{\"id\":\"jtpusllywpvtiotz\"},\"sessionAmbr\":{\"uplink\":\"pdbollg\",\"downlink\":\"yfqiuasig\"},\"allowedServices\":[]}]}]},\"location\":\"wsocnequygdjbo\",\"tags\":{\"iuawvc\":\"mtqjkqevadrmm\",\"oqiqazugamx\":\"jzkxiidisczskos\",\"cekuz\":\"krrcoiisbamnpp\"},\"id\":\"dsbezaxyfu\",\"name\":\"zxuizhyhnepkpe\",\"type\":\"iarxqiubxdukec\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MobileNetworkManager manager = MobileNetworkManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SimPolicy response = manager.simPolicies()
            .getWithResponse("pkkwj", "jodqhykincn", "emehllizh", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("wsocnequygdjbo", response.location());
        Assertions.assertEquals("mtqjkqevadrmm", response.tags().get("iuawvc"));
        Assertions.assertEquals("vadswzs", response.ueAmbr().uplink());
        Assertions.assertEquals("uyem", response.ueAmbr().downlink());
        Assertions.assertEquals("owuowh", response.defaultSlice().id());
        Assertions.assertEquals(1035990638, response.rfspIndex());
        Assertions.assertEquals(1748294835, response.registrationTimer());
        Assertions.assertEquals("rmouvb", response.sliceConfigurations().get(0).slice().id());
        Assertions.assertEquals("gmokzkltrfowt", response.sliceConfigurations().get(0).defaultDataNetwork().id());
        Assertions.assertEquals("rfmvlihcvjdrqcrj",
            response.sliceConfigurations().get(0).dataNetworkConfigurations().get(0).dataNetwork().id());
        Assertions.assertEquals("dhftukvhdxlwy",
            response.sliceConfigurations().get(0).dataNetworkConfigurations().get(0).sessionAmbr().uplink());
        Assertions.assertEquals("jbfqzdk",
            response.sliceConfigurations().get(0).dataNetworkConfigurations().get(0).sessionAmbr().downlink());
    }
}
