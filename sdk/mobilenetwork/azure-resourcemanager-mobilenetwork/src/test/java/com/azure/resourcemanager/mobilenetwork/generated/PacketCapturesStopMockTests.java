// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mobilenetwork.MobileNetworkManager;
import com.azure.resourcemanager.mobilenetwork.models.AsyncOperationStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PacketCapturesStopMockTests {
    @Test
    public void testStop() throws Exception {
        String responseStr
            = "{\"id\":\"rkwpzdqtvhcspod\",\"name\":\"axsipietgb\",\"status\":\"bjfu\",\"resourceId\":\"moichdlpnfpubntn\",\"startTime\":\"2021-11-11T15:52:58Z\",\"endTime\":\"2021-09-14T09:27:45Z\",\"percentComplete\":7.7215321252880775,\"properties\":\"datawsaae\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MobileNetworkManager manager = MobileNetworkManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        AsyncOperationStatus response
            = manager.packetCaptures().stop("hqo", "oihiqak", "diw", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("rkwpzdqtvhcspod", response.id());
        Assertions.assertEquals("axsipietgb", response.name());
        Assertions.assertEquals("bjfu", response.status());
        Assertions.assertEquals("moichdlpnfpubntn", response.resourceId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-11T15:52:58Z"), response.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-14T09:27:45Z"), response.endTime());
        Assertions.assertEquals(7.7215321252880775D, response.percentComplete());
    }
}
