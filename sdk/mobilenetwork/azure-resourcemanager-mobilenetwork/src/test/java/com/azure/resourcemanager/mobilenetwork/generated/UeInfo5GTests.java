// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.models.Ambr;
import com.azure.resourcemanager.mobilenetwork.models.AmfId;
import com.azure.resourcemanager.mobilenetwork.models.GNbId;
import com.azure.resourcemanager.mobilenetwork.models.GlobalRanNodeId;
import com.azure.resourcemanager.mobilenetwork.models.Guti5G;
import com.azure.resourcemanager.mobilenetwork.models.PdnType;
import com.azure.resourcemanager.mobilenetwork.models.PlmnId;
import com.azure.resourcemanager.mobilenetwork.models.RrcEstablishmentCause;
import com.azure.resourcemanager.mobilenetwork.models.Snssai;
import com.azure.resourcemanager.mobilenetwork.models.UeConnectionInfo5G;
import com.azure.resourcemanager.mobilenetwork.models.UeInfo5G;
import com.azure.resourcemanager.mobilenetwork.models.UeInfo5GProperties;
import com.azure.resourcemanager.mobilenetwork.models.UeIpAddress;
import com.azure.resourcemanager.mobilenetwork.models.UeLocationInfo;
import com.azure.resourcemanager.mobilenetwork.models.UeQosFlow;
import com.azure.resourcemanager.mobilenetwork.models.UeSessionInfo5G;
import com.azure.resourcemanager.mobilenetwork.models.UeState;
import com.azure.resourcemanager.mobilenetwork.models.UeUsageSetting;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UeInfo5GTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UeInfo5G model = BinaryData.fromString(
            "{\"ratType\":\"5G\",\"info\":{\"supi\":\"m\",\"pei\":\"a\",\"fivegGuti\":{\"plmn\":{\"mcc\":\"wgck\",\"mnc\":\"ocxvdfffwafqr\"},\"amfId\":{\"regionId\":478345716,\"setId\":1019115621,\"pointer\":113317343},\"fivegTmsi\":1181286444},\"connectionInfo\":{\"locationInfo\":{\"locationType\":\"vehhrvkbunzozu\",\"tac\":\"hcxgkmoyx\",\"plmn\":{\"mcc\":\"dyuib\",\"mnc\":\"mfdn\"}},\"globalRanNodeId\":{\"plmnId\":{\"mcc\":\"zydvfvf\",\"mnc\":\"jnaeois\"},\"gNbId\":{\"bitLength\":716191050,\"gNBValue\":\"orffukiscv\"},\"ngeNbId\":\"zhwplefaxvxilc\",\"eNbId\":\"gnhnzeyq\",\"n3IwfId\":\"jjfzqlqhycavo\",\"wagfId\":\"gxdbeesmie\",\"tngfId\":\"lrariaawiu\",\"nid\":\"ydwqfbylyrf\"},\"perUeTnla\":\"agt\",\"amfUeNgapId\":143948817696336233,\"ranUeNgapId\":1125599847,\"lastVisitedTai\":\"qwogfnzjvus\",\"allowedNssai\":[{\"sst\":1215599551,\"sd\":\"ozuxylfsbtkadpys\"}],\"ueState\":\"Idle\",\"rrcEstablishmentCause\":\"MobileTerminatedData\",\"ueUsageSetting\":\"DataCentric\",\"lastActivityTime\":\"2021-04-26T21:54:32Z\"},\"sessionInfo\":[{\"pduSessionId\":792325056,\"dnn\":\"rj\",\"snssai\":{\"sst\":587108165,\"sd\":\"ojcmisofieyp\"},\"ueIpAddress\":{\"ipV4Addr\":\"ojyqdhcuplcplcw\"},\"pdnType\":\"IPV4\",\"ambr\":{\"uplink\":\"ihih\",\"downlink\":\"hzdsqtzbsrgnow\"},\"qosFlow\":[{\"qfi\":994844547,\"fiveqi\":1143830782,\"mbr\":{\"uplink\":\"mvec\",\"downlink\":\"ctxmwoteyowcluq\"},\"gbr\":{\"uplink\":\"ekqvgqouwif\",\"downlink\":\"mpjw\"}}]}]},\"lastReadAt\":\"2021-08-17T21:45:28Z\"}")
            .toObject(UeInfo5G.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-17T21:45:28Z"), model.lastReadAt());
        Assertions.assertEquals("m", model.info().supi());
        Assertions.assertEquals("a", model.info().pei());
        Assertions.assertEquals("wgck", model.info().fivegGuti().plmn().mcc());
        Assertions.assertEquals("ocxvdfffwafqr", model.info().fivegGuti().plmn().mnc());
        Assertions.assertEquals(478345716, model.info().fivegGuti().amfId().regionId());
        Assertions.assertEquals(1019115621, model.info().fivegGuti().amfId().setId());
        Assertions.assertEquals(113317343, model.info().fivegGuti().amfId().pointer());
        Assertions.assertEquals(1181286444, model.info().fivegGuti().fivegTmsi());
        Assertions.assertEquals("vehhrvkbunzozu", model.info().connectionInfo().locationInfo().locationType());
        Assertions.assertEquals("hcxgkmoyx", model.info().connectionInfo().locationInfo().tac());
        Assertions.assertEquals("dyuib", model.info().connectionInfo().locationInfo().plmn().mcc());
        Assertions.assertEquals("mfdn", model.info().connectionInfo().locationInfo().plmn().mnc());
        Assertions.assertEquals("zydvfvf", model.info().connectionInfo().globalRanNodeId().plmnId().mcc());
        Assertions.assertEquals("jnaeois", model.info().connectionInfo().globalRanNodeId().plmnId().mnc());
        Assertions.assertEquals(716191050, model.info().connectionInfo().globalRanNodeId().gNbId().bitLength());
        Assertions.assertEquals("orffukiscv", model.info().connectionInfo().globalRanNodeId().gNbId().gNBValue());
        Assertions.assertEquals("zhwplefaxvxilc", model.info().connectionInfo().globalRanNodeId().ngeNbId());
        Assertions.assertEquals("gnhnzeyq", model.info().connectionInfo().globalRanNodeId().eNbId());
        Assertions.assertEquals("jjfzqlqhycavo", model.info().connectionInfo().globalRanNodeId().n3IwfId());
        Assertions.assertEquals("gxdbeesmie", model.info().connectionInfo().globalRanNodeId().wagfId());
        Assertions.assertEquals("lrariaawiu", model.info().connectionInfo().globalRanNodeId().tngfId());
        Assertions.assertEquals("ydwqfbylyrf", model.info().connectionInfo().globalRanNodeId().nid());
        Assertions.assertEquals("agt", model.info().connectionInfo().perUeTnla());
        Assertions.assertEquals(143948817696336233L, model.info().connectionInfo().amfUeNgapId());
        Assertions.assertEquals(1125599847, model.info().connectionInfo().ranUeNgapId());
        Assertions.assertEquals("qwogfnzjvus", model.info().connectionInfo().lastVisitedTai());
        Assertions.assertEquals(1215599551, model.info().connectionInfo().allowedNssai().get(0).sst());
        Assertions.assertEquals("ozuxylfsbtkadpys", model.info().connectionInfo().allowedNssai().get(0).sd());
        Assertions.assertEquals(UeState.IDLE, model.info().connectionInfo().ueState());
        Assertions.assertEquals(RrcEstablishmentCause.MOBILE_TERMINATED_DATA,
            model.info().connectionInfo().rrcEstablishmentCause());
        Assertions.assertEquals(UeUsageSetting.DATA_CENTRIC, model.info().connectionInfo().ueUsageSetting());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-26T21:54:32Z"),
            model.info().connectionInfo().lastActivityTime());
        Assertions.assertEquals(792325056, model.info().sessionInfo().get(0).pduSessionId());
        Assertions.assertEquals("rj", model.info().sessionInfo().get(0).dnn());
        Assertions.assertEquals(587108165, model.info().sessionInfo().get(0).snssai().sst());
        Assertions.assertEquals("ojcmisofieyp", model.info().sessionInfo().get(0).snssai().sd());
        Assertions.assertEquals("ojyqdhcuplcplcw", model.info().sessionInfo().get(0).ueIpAddress().ipV4Addr());
        Assertions.assertEquals(PdnType.IPV4, model.info().sessionInfo().get(0).pdnType());
        Assertions.assertEquals("ihih", model.info().sessionInfo().get(0).ambr().uplink());
        Assertions.assertEquals("hzdsqtzbsrgnow", model.info().sessionInfo().get(0).ambr().downlink());
        Assertions.assertEquals(994844547, model.info().sessionInfo().get(0).qosFlow().get(0).qfi());
        Assertions.assertEquals(1143830782, model.info().sessionInfo().get(0).qosFlow().get(0).fiveqi());
        Assertions.assertEquals("mvec", model.info().sessionInfo().get(0).qosFlow().get(0).mbr().uplink());
        Assertions.assertEquals("ctxmwoteyowcluq", model.info().sessionInfo().get(0).qosFlow().get(0).mbr().downlink());
        Assertions.assertEquals("ekqvgqouwif", model.info().sessionInfo().get(0).qosFlow().get(0).gbr().uplink());
        Assertions.assertEquals("mpjw", model.info().sessionInfo().get(0).qosFlow().get(0).gbr().downlink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UeInfo5G model = new UeInfo5G().withLastReadAt(OffsetDateTime.parse("2021-08-17T21:45:28Z"))
            .withInfo(new UeInfo5GProperties().withSupi("m").withPei("a")
                .withFivegGuti(new Guti5G().withPlmn(new PlmnId().withMcc("wgck").withMnc("ocxvdfffwafqr"))
                    .withAmfId(new AmfId().withRegionId(478345716).withSetId(1019115621).withPointer(113317343))
                    .withFivegTmsi(1181286444))
                .withConnectionInfo(new UeConnectionInfo5G()
                    .withLocationInfo(new UeLocationInfo().withLocationType("vehhrvkbunzozu").withTac("hcxgkmoyx")
                        .withPlmn(new PlmnId().withMcc("dyuib").withMnc("mfdn")))
                    .withGlobalRanNodeId(
                        new GlobalRanNodeId().withPlmnId(new PlmnId().withMcc("zydvfvf").withMnc("jnaeois"))
                            .withGNbId(new GNbId().withBitLength(716191050).withGNBValue("orffukiscv"))
                            .withNgeNbId("zhwplefaxvxilc").withENbId("gnhnzeyq").withN3IwfId("jjfzqlqhycavo")
                            .withWagfId("gxdbeesmie").withTngfId("lrariaawiu").withNid("ydwqfbylyrf"))
                    .withPerUeTnla("agt").withAmfUeNgapId(143948817696336233L).withRanUeNgapId(1125599847)
                    .withLastVisitedTai("qwogfnzjvus")
                    .withAllowedNssai(Arrays.asList(new Snssai().withSst(1215599551).withSd("ozuxylfsbtkadpys")))
                    .withUeState(UeState.IDLE).withRrcEstablishmentCause(RrcEstablishmentCause.MOBILE_TERMINATED_DATA)
                    .withUeUsageSetting(UeUsageSetting.DATA_CENTRIC)
                    .withLastActivityTime(OffsetDateTime.parse("2021-04-26T21:54:32Z")))
                .withSessionInfo(Arrays.asList(new UeSessionInfo5G().withPduSessionId(792325056).withDnn("rj")
                    .withSnssai(new Snssai().withSst(587108165).withSd("ojcmisofieyp"))
                    .withUeIpAddress(new UeIpAddress().withIpV4Addr("ojyqdhcuplcplcw")).withPdnType(PdnType.IPV4)
                    .withAmbr(new Ambr().withUplink("ihih").withDownlink("hzdsqtzbsrgnow"))
                    .withQosFlow(Arrays.asList(new UeQosFlow().withQfi(994844547).withFiveqi(1143830782)
                        .withMbr(new Ambr().withUplink("mvec").withDownlink("ctxmwoteyowcluq"))
                        .withGbr(new Ambr().withUplink("ekqvgqouwif").withDownlink("mpjw")))))));
        model = BinaryData.fromObject(model).toObject(UeInfo5G.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-17T21:45:28Z"), model.lastReadAt());
        Assertions.assertEquals("m", model.info().supi());
        Assertions.assertEquals("a", model.info().pei());
        Assertions.assertEquals("wgck", model.info().fivegGuti().plmn().mcc());
        Assertions.assertEquals("ocxvdfffwafqr", model.info().fivegGuti().plmn().mnc());
        Assertions.assertEquals(478345716, model.info().fivegGuti().amfId().regionId());
        Assertions.assertEquals(1019115621, model.info().fivegGuti().amfId().setId());
        Assertions.assertEquals(113317343, model.info().fivegGuti().amfId().pointer());
        Assertions.assertEquals(1181286444, model.info().fivegGuti().fivegTmsi());
        Assertions.assertEquals("vehhrvkbunzozu", model.info().connectionInfo().locationInfo().locationType());
        Assertions.assertEquals("hcxgkmoyx", model.info().connectionInfo().locationInfo().tac());
        Assertions.assertEquals("dyuib", model.info().connectionInfo().locationInfo().plmn().mcc());
        Assertions.assertEquals("mfdn", model.info().connectionInfo().locationInfo().plmn().mnc());
        Assertions.assertEquals("zydvfvf", model.info().connectionInfo().globalRanNodeId().plmnId().mcc());
        Assertions.assertEquals("jnaeois", model.info().connectionInfo().globalRanNodeId().plmnId().mnc());
        Assertions.assertEquals(716191050, model.info().connectionInfo().globalRanNodeId().gNbId().bitLength());
        Assertions.assertEquals("orffukiscv", model.info().connectionInfo().globalRanNodeId().gNbId().gNBValue());
        Assertions.assertEquals("zhwplefaxvxilc", model.info().connectionInfo().globalRanNodeId().ngeNbId());
        Assertions.assertEquals("gnhnzeyq", model.info().connectionInfo().globalRanNodeId().eNbId());
        Assertions.assertEquals("jjfzqlqhycavo", model.info().connectionInfo().globalRanNodeId().n3IwfId());
        Assertions.assertEquals("gxdbeesmie", model.info().connectionInfo().globalRanNodeId().wagfId());
        Assertions.assertEquals("lrariaawiu", model.info().connectionInfo().globalRanNodeId().tngfId());
        Assertions.assertEquals("ydwqfbylyrf", model.info().connectionInfo().globalRanNodeId().nid());
        Assertions.assertEquals("agt", model.info().connectionInfo().perUeTnla());
        Assertions.assertEquals(143948817696336233L, model.info().connectionInfo().amfUeNgapId());
        Assertions.assertEquals(1125599847, model.info().connectionInfo().ranUeNgapId());
        Assertions.assertEquals("qwogfnzjvus", model.info().connectionInfo().lastVisitedTai());
        Assertions.assertEquals(1215599551, model.info().connectionInfo().allowedNssai().get(0).sst());
        Assertions.assertEquals("ozuxylfsbtkadpys", model.info().connectionInfo().allowedNssai().get(0).sd());
        Assertions.assertEquals(UeState.IDLE, model.info().connectionInfo().ueState());
        Assertions.assertEquals(RrcEstablishmentCause.MOBILE_TERMINATED_DATA,
            model.info().connectionInfo().rrcEstablishmentCause());
        Assertions.assertEquals(UeUsageSetting.DATA_CENTRIC, model.info().connectionInfo().ueUsageSetting());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-26T21:54:32Z"),
            model.info().connectionInfo().lastActivityTime());
        Assertions.assertEquals(792325056, model.info().sessionInfo().get(0).pduSessionId());
        Assertions.assertEquals("rj", model.info().sessionInfo().get(0).dnn());
        Assertions.assertEquals(587108165, model.info().sessionInfo().get(0).snssai().sst());
        Assertions.assertEquals("ojcmisofieyp", model.info().sessionInfo().get(0).snssai().sd());
        Assertions.assertEquals("ojyqdhcuplcplcw", model.info().sessionInfo().get(0).ueIpAddress().ipV4Addr());
        Assertions.assertEquals(PdnType.IPV4, model.info().sessionInfo().get(0).pdnType());
        Assertions.assertEquals("ihih", model.info().sessionInfo().get(0).ambr().uplink());
        Assertions.assertEquals("hzdsqtzbsrgnow", model.info().sessionInfo().get(0).ambr().downlink());
        Assertions.assertEquals(994844547, model.info().sessionInfo().get(0).qosFlow().get(0).qfi());
        Assertions.assertEquals(1143830782, model.info().sessionInfo().get(0).qosFlow().get(0).fiveqi());
        Assertions.assertEquals("mvec", model.info().sessionInfo().get(0).qosFlow().get(0).mbr().uplink());
        Assertions.assertEquals("ctxmwoteyowcluq", model.info().sessionInfo().get(0).qosFlow().get(0).mbr().downlink());
        Assertions.assertEquals("ekqvgqouwif", model.info().sessionInfo().get(0).qosFlow().get(0).gbr().uplink());
        Assertions.assertEquals("mpjw", model.info().sessionInfo().get(0).qosFlow().get(0).gbr().downlink());
    }
}
