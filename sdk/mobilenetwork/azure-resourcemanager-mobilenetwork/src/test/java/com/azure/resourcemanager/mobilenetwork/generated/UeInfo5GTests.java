// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.models.Ambr;
import com.azure.resourcemanager.mobilenetwork.models.AmfId;
import com.azure.resourcemanager.mobilenetwork.models.GlobalRanNodeId;
import com.azure.resourcemanager.mobilenetwork.models.GNbId;
import com.azure.resourcemanager.mobilenetwork.models.Guti5G;
import com.azure.resourcemanager.mobilenetwork.models.PdnType;
import com.azure.resourcemanager.mobilenetwork.models.PlmnId;
import com.azure.resourcemanager.mobilenetwork.models.RrcEstablishmentCause;
import com.azure.resourcemanager.mobilenetwork.models.Snssai;
import com.azure.resourcemanager.mobilenetwork.models.UeConnectionInfo5G;
import com.azure.resourcemanager.mobilenetwork.models.UeInfo5G;
import com.azure.resourcemanager.mobilenetwork.models.UeInfo5GProperties;
import com.azure.resourcemanager.mobilenetwork.models.UeIpAddress;
import com.azure.resourcemanager.mobilenetwork.models.UeLocationInfo;
import com.azure.resourcemanager.mobilenetwork.models.UeQosFlow;
import com.azure.resourcemanager.mobilenetwork.models.UeSessionInfo5G;
import com.azure.resourcemanager.mobilenetwork.models.UeState;
import com.azure.resourcemanager.mobilenetwork.models.UeUsageSetting;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UeInfo5GTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UeInfo5G model = BinaryData.fromString(
            "{\"ratType\":\"5G\",\"info\":{\"supi\":\"r\",\"pei\":\"iouaubrjt\",\"fivegGuti\":{\"plmn\":{\"mcc\":\"oq\",\"mnc\":\"fuojrngif\"},\"amfId\":{\"regionId\":2143335427,\"setId\":193344927,\"pointer\":1851238843},\"fivegTmsi\":2039990607},\"connectionInfo\":{\"locationInfo\":{\"locationType\":\"cb\",\"tac\":\"uimzdlyjd\",\"plmn\":{\"mcc\":\"qwmkyoquf\",\"mnc\":\"vruzslzojhpctfnm\"}},\"globalRanNodeId\":{\"plmnId\":{\"mcc\":\"xotngfdguge\",\"mnc\":\"zihgrkyu\"},\"gNbId\":{\"bitLength\":1979493256,\"gNBValue\":\"nmfpp\"},\"ngeNbId\":\"jee\",\"eNbId\":\"hyhsgzfczbg\",\"n3IwfId\":\"fgbegl\",\"wagfId\":\"leohibetnluankr\",\"tngfId\":\"xeeebtijvacvbmqz\",\"nid\":\"q\"},\"perUeTnla\":\"aj\",\"amfUeNgapId\":1787808266947774863,\"ranUeNgapId\":1379865960,\"lastVisitedTai\":\"cevehjkuyxoafg\",\"allowedNssai\":[{\"sst\":517079921,\"sd\":\"faey\"},{\"sst\":420432271,\"sd\":\"mfgvxirpghriypo\"}],\"ueState\":\"Deregistered\",\"rrcEstablishmentCause\":\"MobileTerminatedSignaling\",\"ueUsageSetting\":\"DataCentric\",\"lastActivityTime\":\"2021-07-23T20:19:42Z\"},\"sessionInfo\":[{\"pduSessionId\":1212152728,\"dnn\":\"rlpyznuciqdsmexi\",\"snssai\":{\"sst\":1547806900,\"sd\":\"fuxtyasiibmiybnn\"},\"ueIpAddress\":{\"ipV4Addr\":\"tgnljhnmgixhcmav\"},\"pdnType\":\"IPV4\",\"ambr\":{\"uplink\":\"foudor\",\"downlink\":\"cgyypro\"},\"qosFlow\":[{\"qfi\":812539177,\"fiveqi\":495460912,\"mbr\":{\"uplink\":\"ndm\",\"downlink\":\"xhugcm\"},\"gbr\":{\"uplink\":\"avlg\",\"downlink\":\"rb\"}}]},{\"pduSessionId\":1220118900,\"dnn\":\"tp\",\"snssai\":{\"sst\":1138245525,\"sd\":\"zfjltfvnzcyjto\"},\"ueIpAddress\":{\"ipV4Addr\":\"vopvp\"},\"pdnType\":\"IPV4\",\"ambr\":{\"uplink\":\"bzqgqqi\",\"downlink\":\"edsvqwthmk\"},\"qosFlow\":[{\"qfi\":1468707412,\"fiveqi\":1456487398,\"mbr\":{\"uplink\":\"sihsgqcwdhohsd\",\"downlink\":\"mcdzsufcohdxbz\"},\"gbr\":{\"uplink\":\"cmuapcvhd\",\"downlink\":\"evwqqxeyskonq\"}},{\"qfi\":76576423,\"fiveqi\":210446592,\"mbr\":{\"uplink\":\"fkbg\",\"downlink\":\"z\"},\"gbr\":{\"uplink\":\"wxeqocljmygvkzqk\",\"downlink\":\"jeokbzefezrxccz\"}},{\"qfi\":1049990644,\"fiveqi\":488183187,\"mbr\":{\"uplink\":\"e\",\"downlink\":\"pqxbkwvzgnzvdf\"},\"gbr\":{\"uplink\":\"d\",\"downlink\":\"xzmqpnodawop\"}}]},{\"pduSessionId\":1504593593,\"dnn\":\"ewjptmcg\",\"snssai\":{\"sst\":1766565045,\"sd\":\"stzelndlatut\"},\"ueIpAddress\":{\"ipV4Addr\":\"lbiojlvfhrb\"},\"pdnType\":\"IPV4\",\"ambr\":{\"uplink\":\"neqvcwwyyurmo\",\"downlink\":\"hppr\"},\"qosFlow\":[{\"qfi\":474630322,\"fiveqi\":1366759744,\"mbr\":{\"uplink\":\"okayzejnhlbkp\",\"downlink\":\"z\"},\"gbr\":{\"uplink\":\"piljhahzvech\",\"downlink\":\"dbn\"}}]}]},\"lastReadAt\":\"2020-12-27T13:48:38Z\"}")
            .toObject(UeInfo5G.class);
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-27T13:48:38Z"), model.lastReadAt());
        Assertions.assertEquals("r", model.info().supi());
        Assertions.assertEquals("iouaubrjt", model.info().pei());
        Assertions.assertEquals("oq", model.info().fivegGuti().plmn().mcc());
        Assertions.assertEquals("fuojrngif", model.info().fivegGuti().plmn().mnc());
        Assertions.assertEquals(2143335427, model.info().fivegGuti().amfId().regionId());
        Assertions.assertEquals(193344927, model.info().fivegGuti().amfId().setId());
        Assertions.assertEquals(1851238843, model.info().fivegGuti().amfId().pointer());
        Assertions.assertEquals(2039990607, model.info().fivegGuti().fivegTmsi());
        Assertions.assertEquals("cb", model.info().connectionInfo().locationInfo().locationType());
        Assertions.assertEquals("uimzdlyjd", model.info().connectionInfo().locationInfo().tac());
        Assertions.assertEquals("qwmkyoquf", model.info().connectionInfo().locationInfo().plmn().mcc());
        Assertions.assertEquals("vruzslzojhpctfnm", model.info().connectionInfo().locationInfo().plmn().mnc());
        Assertions.assertEquals("xotngfdguge", model.info().connectionInfo().globalRanNodeId().plmnId().mcc());
        Assertions.assertEquals("zihgrkyu", model.info().connectionInfo().globalRanNodeId().plmnId().mnc());
        Assertions.assertEquals(1979493256, model.info().connectionInfo().globalRanNodeId().gNbId().bitLength());
        Assertions.assertEquals("nmfpp", model.info().connectionInfo().globalRanNodeId().gNbId().gNBValue());
        Assertions.assertEquals("jee", model.info().connectionInfo().globalRanNodeId().ngeNbId());
        Assertions.assertEquals("hyhsgzfczbg", model.info().connectionInfo().globalRanNodeId().eNbId());
        Assertions.assertEquals("fgbegl", model.info().connectionInfo().globalRanNodeId().n3IwfId());
        Assertions.assertEquals("leohibetnluankr", model.info().connectionInfo().globalRanNodeId().wagfId());
        Assertions.assertEquals("xeeebtijvacvbmqz", model.info().connectionInfo().globalRanNodeId().tngfId());
        Assertions.assertEquals("q", model.info().connectionInfo().globalRanNodeId().nid());
        Assertions.assertEquals("aj", model.info().connectionInfo().perUeTnla());
        Assertions.assertEquals(1787808266947774863L, model.info().connectionInfo().amfUeNgapId());
        Assertions.assertEquals(1379865960, model.info().connectionInfo().ranUeNgapId());
        Assertions.assertEquals("cevehjkuyxoafg", model.info().connectionInfo().lastVisitedTai());
        Assertions.assertEquals(517079921, model.info().connectionInfo().allowedNssai().get(0).sst());
        Assertions.assertEquals("faey", model.info().connectionInfo().allowedNssai().get(0).sd());
        Assertions.assertEquals(UeState.DEREGISTERED, model.info().connectionInfo().ueState());
        Assertions.assertEquals(RrcEstablishmentCause.MOBILE_TERMINATED_SIGNALING,
            model.info().connectionInfo().rrcEstablishmentCause());
        Assertions.assertEquals(UeUsageSetting.DATA_CENTRIC, model.info().connectionInfo().ueUsageSetting());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-23T20:19:42Z"),
            model.info().connectionInfo().lastActivityTime());
        Assertions.assertEquals(1212152728, model.info().sessionInfo().get(0).pduSessionId());
        Assertions.assertEquals("rlpyznuciqdsmexi", model.info().sessionInfo().get(0).dnn());
        Assertions.assertEquals(1547806900, model.info().sessionInfo().get(0).snssai().sst());
        Assertions.assertEquals("fuxtyasiibmiybnn", model.info().sessionInfo().get(0).snssai().sd());
        Assertions.assertEquals("tgnljhnmgixhcmav", model.info().sessionInfo().get(0).ueIpAddress().ipV4Addr());
        Assertions.assertEquals(PdnType.IPV4, model.info().sessionInfo().get(0).pdnType());
        Assertions.assertEquals("foudor", model.info().sessionInfo().get(0).ambr().uplink());
        Assertions.assertEquals("cgyypro", model.info().sessionInfo().get(0).ambr().downlink());
        Assertions.assertEquals(812539177, model.info().sessionInfo().get(0).qosFlow().get(0).qfi());
        Assertions.assertEquals(495460912, model.info().sessionInfo().get(0).qosFlow().get(0).fiveqi());
        Assertions.assertEquals("ndm", model.info().sessionInfo().get(0).qosFlow().get(0).mbr().uplink());
        Assertions.assertEquals("xhugcm", model.info().sessionInfo().get(0).qosFlow().get(0).mbr().downlink());
        Assertions.assertEquals("avlg", model.info().sessionInfo().get(0).qosFlow().get(0).gbr().uplink());
        Assertions.assertEquals("rb", model.info().sessionInfo().get(0).qosFlow().get(0).gbr().downlink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UeInfo5G model = new UeInfo5G().withLastReadAt(OffsetDateTime.parse("2020-12-27T13:48:38Z"))
            .withInfo(new UeInfo5GProperties().withSupi("r")
                .withPei("iouaubrjt")
                .withFivegGuti(new Guti5G().withPlmn(new PlmnId().withMcc("oq").withMnc("fuojrngif"))
                    .withAmfId(new AmfId().withRegionId(2143335427).withSetId(193344927).withPointer(1851238843))
                    .withFivegTmsi(2039990607))
                .withConnectionInfo(new UeConnectionInfo5G()
                    .withLocationInfo(new UeLocationInfo().withLocationType("cb")
                        .withTac("uimzdlyjd")
                        .withPlmn(new PlmnId().withMcc("qwmkyoquf").withMnc("vruzslzojhpctfnm")))
                    .withGlobalRanNodeId(
                        new GlobalRanNodeId().withPlmnId(new PlmnId().withMcc("xotngfdguge").withMnc("zihgrkyu"))
                            .withGNbId(new GNbId().withBitLength(1979493256).withGNBValue("nmfpp"))
                            .withNgeNbId("jee")
                            .withENbId("hyhsgzfczbg")
                            .withN3IwfId("fgbegl")
                            .withWagfId("leohibetnluankr")
                            .withTngfId("xeeebtijvacvbmqz")
                            .withNid("q"))
                    .withPerUeTnla("aj")
                    .withAmfUeNgapId(1787808266947774863L)
                    .withRanUeNgapId(1379865960)
                    .withLastVisitedTai("cevehjkuyxoafg")
                    .withAllowedNssai(Arrays.asList(new Snssai().withSst(517079921).withSd("faey"),
                        new Snssai().withSst(420432271).withSd("mfgvxirpghriypo")))
                    .withUeState(UeState.DEREGISTERED)
                    .withRrcEstablishmentCause(RrcEstablishmentCause.MOBILE_TERMINATED_SIGNALING)
                    .withUeUsageSetting(UeUsageSetting.DATA_CENTRIC)
                    .withLastActivityTime(OffsetDateTime.parse("2021-07-23T20:19:42Z")))
                .withSessionInfo(
                    Arrays
                        .asList(
                            new UeSessionInfo5G().withPduSessionId(1212152728)
                                .withDnn("rlpyznuciqdsmexi")
                                .withSnssai(new Snssai().withSst(1547806900).withSd("fuxtyasiibmiybnn"))
                                .withUeIpAddress(new UeIpAddress().withIpV4Addr("tgnljhnmgixhcmav"))
                                .withPdnType(PdnType.IPV4)
                                .withAmbr(new Ambr().withUplink("foudor").withDownlink("cgyypro"))
                                .withQosFlow(Arrays.asList(new UeQosFlow().withQfi(812539177)
                                    .withFiveqi(495460912)
                                    .withMbr(new Ambr().withUplink("ndm").withDownlink("xhugcm"))
                                    .withGbr(new Ambr().withUplink("avlg").withDownlink("rb")))),
                            new UeSessionInfo5G().withPduSessionId(1220118900)
                                .withDnn("tp")
                                .withSnssai(new Snssai().withSst(1138245525).withSd("zfjltfvnzcyjto"))
                                .withUeIpAddress(new UeIpAddress().withIpV4Addr("vopvp"))
                                .withPdnType(PdnType.IPV4)
                                .withAmbr(new Ambr().withUplink("bzqgqqi").withDownlink("edsvqwthmk"))
                                .withQosFlow(
                                    Arrays
                                        .asList(
                                            new UeQosFlow().withQfi(1468707412)
                                                .withFiveqi(1456487398)
                                                .withMbr(new Ambr().withUplink("sihsgqcwdhohsd")
                                                    .withDownlink("mcdzsufcohdxbz"))
                                                .withGbr(
                                                    new Ambr().withUplink("cmuapcvhd").withDownlink("evwqqxeyskonq")),
                                            new UeQosFlow().withQfi(76576423)
                                                .withFiveqi(210446592)
                                                .withMbr(new Ambr().withUplink("fkbg").withDownlink("z"))
                                                .withGbr(new Ambr().withUplink("wxeqocljmygvkzqk")
                                                    .withDownlink("jeokbzefezrxccz")),
                                            new UeQosFlow().withQfi(1049990644)
                                                .withFiveqi(488183187)
                                                .withMbr(new Ambr().withUplink("e").withDownlink("pqxbkwvzgnzvdf"))
                                                .withGbr(new Ambr().withUplink("d").withDownlink("xzmqpnodawop")))),
                            new UeSessionInfo5G().withPduSessionId(1504593593)
                                .withDnn("ewjptmcg")
                                .withSnssai(new Snssai().withSst(1766565045).withSd("stzelndlatut"))
                                .withUeIpAddress(new UeIpAddress().withIpV4Addr("lbiojlvfhrb"))
                                .withPdnType(PdnType.IPV4)
                                .withAmbr(new Ambr().withUplink("neqvcwwyyurmo").withDownlink("hppr"))
                                .withQosFlow(Arrays.asList(new UeQosFlow().withQfi(474630322)
                                    .withFiveqi(1366759744)
                                    .withMbr(new Ambr().withUplink("okayzejnhlbkp").withDownlink("z"))
                                    .withGbr(new Ambr().withUplink("piljhahzvech").withDownlink("dbn")))))));
        model = BinaryData.fromObject(model).toObject(UeInfo5G.class);
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-27T13:48:38Z"), model.lastReadAt());
        Assertions.assertEquals("r", model.info().supi());
        Assertions.assertEquals("iouaubrjt", model.info().pei());
        Assertions.assertEquals("oq", model.info().fivegGuti().plmn().mcc());
        Assertions.assertEquals("fuojrngif", model.info().fivegGuti().plmn().mnc());
        Assertions.assertEquals(2143335427, model.info().fivegGuti().amfId().regionId());
        Assertions.assertEquals(193344927, model.info().fivegGuti().amfId().setId());
        Assertions.assertEquals(1851238843, model.info().fivegGuti().amfId().pointer());
        Assertions.assertEquals(2039990607, model.info().fivegGuti().fivegTmsi());
        Assertions.assertEquals("cb", model.info().connectionInfo().locationInfo().locationType());
        Assertions.assertEquals("uimzdlyjd", model.info().connectionInfo().locationInfo().tac());
        Assertions.assertEquals("qwmkyoquf", model.info().connectionInfo().locationInfo().plmn().mcc());
        Assertions.assertEquals("vruzslzojhpctfnm", model.info().connectionInfo().locationInfo().plmn().mnc());
        Assertions.assertEquals("xotngfdguge", model.info().connectionInfo().globalRanNodeId().plmnId().mcc());
        Assertions.assertEquals("zihgrkyu", model.info().connectionInfo().globalRanNodeId().plmnId().mnc());
        Assertions.assertEquals(1979493256, model.info().connectionInfo().globalRanNodeId().gNbId().bitLength());
        Assertions.assertEquals("nmfpp", model.info().connectionInfo().globalRanNodeId().gNbId().gNBValue());
        Assertions.assertEquals("jee", model.info().connectionInfo().globalRanNodeId().ngeNbId());
        Assertions.assertEquals("hyhsgzfczbg", model.info().connectionInfo().globalRanNodeId().eNbId());
        Assertions.assertEquals("fgbegl", model.info().connectionInfo().globalRanNodeId().n3IwfId());
        Assertions.assertEquals("leohibetnluankr", model.info().connectionInfo().globalRanNodeId().wagfId());
        Assertions.assertEquals("xeeebtijvacvbmqz", model.info().connectionInfo().globalRanNodeId().tngfId());
        Assertions.assertEquals("q", model.info().connectionInfo().globalRanNodeId().nid());
        Assertions.assertEquals("aj", model.info().connectionInfo().perUeTnla());
        Assertions.assertEquals(1787808266947774863L, model.info().connectionInfo().amfUeNgapId());
        Assertions.assertEquals(1379865960, model.info().connectionInfo().ranUeNgapId());
        Assertions.assertEquals("cevehjkuyxoafg", model.info().connectionInfo().lastVisitedTai());
        Assertions.assertEquals(517079921, model.info().connectionInfo().allowedNssai().get(0).sst());
        Assertions.assertEquals("faey", model.info().connectionInfo().allowedNssai().get(0).sd());
        Assertions.assertEquals(UeState.DEREGISTERED, model.info().connectionInfo().ueState());
        Assertions.assertEquals(RrcEstablishmentCause.MOBILE_TERMINATED_SIGNALING,
            model.info().connectionInfo().rrcEstablishmentCause());
        Assertions.assertEquals(UeUsageSetting.DATA_CENTRIC, model.info().connectionInfo().ueUsageSetting());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-23T20:19:42Z"),
            model.info().connectionInfo().lastActivityTime());
        Assertions.assertEquals(1212152728, model.info().sessionInfo().get(0).pduSessionId());
        Assertions.assertEquals("rlpyznuciqdsmexi", model.info().sessionInfo().get(0).dnn());
        Assertions.assertEquals(1547806900, model.info().sessionInfo().get(0).snssai().sst());
        Assertions.assertEquals("fuxtyasiibmiybnn", model.info().sessionInfo().get(0).snssai().sd());
        Assertions.assertEquals("tgnljhnmgixhcmav", model.info().sessionInfo().get(0).ueIpAddress().ipV4Addr());
        Assertions.assertEquals(PdnType.IPV4, model.info().sessionInfo().get(0).pdnType());
        Assertions.assertEquals("foudor", model.info().sessionInfo().get(0).ambr().uplink());
        Assertions.assertEquals("cgyypro", model.info().sessionInfo().get(0).ambr().downlink());
        Assertions.assertEquals(812539177, model.info().sessionInfo().get(0).qosFlow().get(0).qfi());
        Assertions.assertEquals(495460912, model.info().sessionInfo().get(0).qosFlow().get(0).fiveqi());
        Assertions.assertEquals("ndm", model.info().sessionInfo().get(0).qosFlow().get(0).mbr().uplink());
        Assertions.assertEquals("xhugcm", model.info().sessionInfo().get(0).qosFlow().get(0).mbr().downlink());
        Assertions.assertEquals("avlg", model.info().sessionInfo().get(0).qosFlow().get(0).gbr().uplink());
        Assertions.assertEquals("rb", model.info().sessionInfo().get(0).qosFlow().get(0).gbr().downlink());
    }
}
