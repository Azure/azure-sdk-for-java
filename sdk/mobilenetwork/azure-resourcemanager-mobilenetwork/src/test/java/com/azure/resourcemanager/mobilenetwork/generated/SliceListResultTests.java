// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.fluent.models.SliceInner;
import com.azure.resourcemanager.mobilenetwork.models.SliceListResult;
import com.azure.resourcemanager.mobilenetwork.models.Snssai;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SliceListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SliceListResult model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"provisioningState\":\"Accepted\",\"snssai\":{\"sst\":1098245078,\"sd\":\"lvidizozs\"},\"description\":\"ccxjm\"},\"location\":\"fdgnwncypuuwwlt\",\"tags\":{\"zzhmkd\":\"jctzenkei\",\"gsrboldforobw\":\"svflyhbxcudch\",\"hfovvacqpbtu\":\"lvizb\"},\"id\":\"dxe\",\"name\":\"zab\",\"type\":\"elawumu\"},{\"properties\":{\"provisioningState\":\"Failed\",\"snssai\":{\"sst\":46527363,\"sd\":\"wrrwoycqucw\"},\"description\":\"ahnomdrkywu\"},\"location\":\"svfuurutlwexxwl\",\"tags\":{\"q\":\"iexzsrzpge\",\"wwpgdakchzyvlixq\":\"yb\",\"bn\":\"rkcxkj\",\"swqrntvlwijp\":\"mysu\"},\"id\":\"ttexoqqpwcyyufmh\",\"name\":\"uncuw\",\"type\":\"qspkcdqzhlctd\"},{\"properties\":{\"provisioningState\":\"Deleting\",\"snssai\":{\"sst\":302400307,\"sd\":\"dyfpchrqbnj\"},\"description\":\"cgegydcwbo\"},\"location\":\"umvq\",\"tags\":{\"jtlo\":\"ihrraiouaub\",\"iflrzpasccbiu\":\"xfuojrn\",\"ufdvruz\":\"mzdlyjdfqwmkyo\",\"hpc\":\"lzo\"},\"id\":\"fnmdxotn\",\"name\":\"fdgugeyzi\",\"type\":\"grkyuizabsnmfpph\"}],\"nextLink\":\"eevy\"}")
                .toObject(SliceListResult.class);
        Assertions.assertEquals("fdgnwncypuuwwlt", model.value().get(0).location());
        Assertions.assertEquals("jctzenkei", model.value().get(0).tags().get("zzhmkd"));
        Assertions.assertEquals(1098245078, model.value().get(0).snssai().sst());
        Assertions.assertEquals("lvidizozs", model.value().get(0).snssai().sd());
        Assertions.assertEquals("ccxjm", model.value().get(0).description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SliceListResult model =
            new SliceListResult()
                .withValue(
                    Arrays
                        .asList(
                            new SliceInner()
                                .withLocation("fdgnwncypuuwwlt")
                                .withTags(
                                    mapOf(
                                        "zzhmkd",
                                        "jctzenkei",
                                        "gsrboldforobw",
                                        "svflyhbxcudch",
                                        "hfovvacqpbtu",
                                        "lvizb"))
                                .withSnssai(new Snssai().withSst(1098245078).withSd("lvidizozs"))
                                .withDescription("ccxjm"),
                            new SliceInner()
                                .withLocation("svfuurutlwexxwl")
                                .withTags(
                                    mapOf(
                                        "q",
                                        "iexzsrzpge",
                                        "wwpgdakchzyvlixq",
                                        "yb",
                                        "bn",
                                        "rkcxkj",
                                        "swqrntvlwijp",
                                        "mysu"))
                                .withSnssai(new Snssai().withSst(46527363).withSd("wrrwoycqucw"))
                                .withDescription("ahnomdrkywu"),
                            new SliceInner()
                                .withLocation("umvq")
                                .withTags(
                                    mapOf(
                                        "jtlo",
                                        "ihrraiouaub",
                                        "iflrzpasccbiu",
                                        "xfuojrn",
                                        "ufdvruz",
                                        "mzdlyjdfqwmkyo",
                                        "hpc",
                                        "lzo"))
                                .withSnssai(new Snssai().withSst(302400307).withSd("dyfpchrqbnj"))
                                .withDescription("cgegydcwbo")));
        model = BinaryData.fromObject(model).toObject(SliceListResult.class);
        Assertions.assertEquals("fdgnwncypuuwwlt", model.value().get(0).location());
        Assertions.assertEquals("jctzenkei", model.value().get(0).tags().get("zzhmkd"));
        Assertions.assertEquals(1098245078, model.value().get(0).snssai().sst());
        Assertions.assertEquals("lvidizozs", model.value().get(0).snssai().sd());
        Assertions.assertEquals("ccxjm", model.value().get(0).description());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
