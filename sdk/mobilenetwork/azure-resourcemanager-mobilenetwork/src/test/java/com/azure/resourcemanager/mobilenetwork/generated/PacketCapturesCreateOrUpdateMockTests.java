// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mobilenetwork.MobileNetworkManager;
import com.azure.resourcemanager.mobilenetwork.models.PacketCapture;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PacketCapturesCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Succeeded\",\"status\":\"Error\",\"reason\":\"ohhoucqpqojxcxz\",\"captureStartTime\":\"2021-07-20T00:10:21Z\",\"networkInterfaces\":[\"dzbenri\",\"cawetzqddt\"],\"bytesToCapturePerPacket\":2874714863507739239,\"totalBytesPerSession\":2672571811626083007,\"timeLimitInSeconds\":1441548942,\"outputFiles\":[\"uatmzwcjjncqtj\",\"mizvgbgatzuuvbx\",\"grebwggahttzlsw\"]},\"id\":\"jqfutlxj\",\"name\":\"qzasunwqrjzfrgqh\",\"type\":\"ohcmbu\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MobileNetworkManager manager = MobileNetworkManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PacketCapture response = manager.packetCaptures()
            .define("d")
            .withExistingPacketCoreControlPlane("nmbscbbx", "gdhxi")
            .withNetworkInterfaces(Arrays.asList("bmdnafcbqwre", "jelaqacigele", "hdbvqvwzkjop", "beonrlkwzdq"))
            .withBytesToCapturePerPacket(242190518706221422L)
            .withTotalBytesPerSession(8133324851660913956L)
            .withTimeLimitInSeconds(915634222)
            .create();

        Assertions.assertEquals("dzbenri", response.networkInterfaces().get(0));
        Assertions.assertEquals(2874714863507739239L, response.bytesToCapturePerPacket());
        Assertions.assertEquals(2672571811626083007L, response.totalBytesPerSession());
        Assertions.assertEquals(1441548942, response.timeLimitInSeconds());
    }
}
