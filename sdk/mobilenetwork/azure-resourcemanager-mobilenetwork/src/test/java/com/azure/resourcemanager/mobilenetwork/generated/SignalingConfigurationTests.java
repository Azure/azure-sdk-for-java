// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.models.NasEncryptionType;
import com.azure.resourcemanager.mobilenetwork.models.NasRerouteConfiguration;
import com.azure.resourcemanager.mobilenetwork.models.SignalingConfiguration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SignalingConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SignalingConfiguration model = BinaryData.fromString(
            "{\"nasReroute\":{\"macroMmeGroupId\":1205583230},\"nasEncryption\":[\"NEA1/EEA1\",\"NEA1/EEA1\",\"NEA2/EEA2\",\"NEA0/EEA0\"]}")
            .toObject(SignalingConfiguration.class);
        Assertions.assertEquals(1205583230, model.nasReroute().macroMmeGroupId());
        Assertions.assertEquals(NasEncryptionType.NEA1_EEA1, model.nasEncryption().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SignalingConfiguration model
            = new SignalingConfiguration().withNasReroute(new NasRerouteConfiguration().withMacroMmeGroupId(1205583230))
                .withNasEncryption(Arrays.asList(NasEncryptionType.NEA1_EEA1, NasEncryptionType.NEA1_EEA1,
                    NasEncryptionType.NEA2_EEA2, NasEncryptionType.NEA0_EEA0));
        model = BinaryData.fromObject(model).toObject(SignalingConfiguration.class);
        Assertions.assertEquals(1205583230, model.nasReroute().macroMmeGroupId());
        Assertions.assertEquals(NasEncryptionType.NEA1_EEA1, model.nasEncryption().get(0));
    }
}
