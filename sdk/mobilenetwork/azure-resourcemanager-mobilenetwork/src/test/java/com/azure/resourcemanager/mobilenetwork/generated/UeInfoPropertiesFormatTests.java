// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.models.DnnIpPair;
import com.azure.resourcemanager.mobilenetwork.models.RatType;
import com.azure.resourcemanager.mobilenetwork.models.UeInfoPropertiesFormat;
import com.azure.resourcemanager.mobilenetwork.models.UeIpAddress;
import com.azure.resourcemanager.mobilenetwork.models.UeState;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UeInfoPropertiesFormatTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UeInfoPropertiesFormat model = BinaryData.fromString(
            "{\"ratType\":\"5G\",\"ueState\":\"Deregistered\",\"ueIpAddresses\":[{\"dnn\":\"fonkphhqyikvyla\",\"ueIpAddress\":{\"ipV4Addr\":\"vluwmncsttij\"}}],\"lastReadAt\":\"2021-04-05T16:52:36Z\"}")
            .toObject(UeInfoPropertiesFormat.class);
        Assertions.assertEquals(RatType.FIVEG, model.ratType());
        Assertions.assertEquals(UeState.DEREGISTERED, model.ueState());
        Assertions.assertEquals("fonkphhqyikvyla", model.ueIpAddresses().get(0).dnn());
        Assertions.assertEquals("vluwmncsttij", model.ueIpAddresses().get(0).ueIpAddress().ipV4Addr());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-05T16:52:36Z"), model.lastReadAt());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UeInfoPropertiesFormat model
            = new UeInfoPropertiesFormat().withRatType(RatType.FIVEG).withUeState(UeState.DEREGISTERED)
                .withUeIpAddresses(Arrays.asList(new DnnIpPair().withDnn("fonkphhqyikvyla")
                    .withUeIpAddress(new UeIpAddress().withIpV4Addr("vluwmncsttij"))))
                .withLastReadAt(OffsetDateTime.parse("2021-04-05T16:52:36Z"));
        model = BinaryData.fromObject(model).toObject(UeInfoPropertiesFormat.class);
        Assertions.assertEquals(RatType.FIVEG, model.ratType());
        Assertions.assertEquals(UeState.DEREGISTERED, model.ueState());
        Assertions.assertEquals("fonkphhqyikvyla", model.ueIpAddresses().get(0).dnn());
        Assertions.assertEquals("vluwmncsttij", model.ueIpAddresses().get(0).ueIpAddress().ipV4Addr());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-05T16:52:36Z"), model.lastReadAt());
    }
}
