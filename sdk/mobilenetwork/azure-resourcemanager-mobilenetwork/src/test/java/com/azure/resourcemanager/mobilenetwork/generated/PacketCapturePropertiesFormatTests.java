// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.fluent.models.PacketCapturePropertiesFormat;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PacketCapturePropertiesFormatTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PacketCapturePropertiesFormat model = BinaryData.fromString(
            "{\"provisioningState\":\"Succeeded\",\"status\":\"Error\",\"reason\":\"buxwgip\",\"captureStartTime\":\"2021-08-16T19:25:13Z\",\"networkInterfaces\":[\"wkgshwa\"],\"bytesToCapturePerPacket\":9069419469544491752,\"totalBytesPerSession\":3330402846072067803,\"timeLimitInSeconds\":624724935,\"outputFiles\":[\"uttmrywnuzoqft\"]}")
            .toObject(PacketCapturePropertiesFormat.class);
        Assertions.assertEquals("wkgshwa", model.networkInterfaces().get(0));
        Assertions.assertEquals(9069419469544491752L, model.bytesToCapturePerPacket());
        Assertions.assertEquals(3330402846072067803L, model.totalBytesPerSession());
        Assertions.assertEquals(624724935, model.timeLimitInSeconds());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PacketCapturePropertiesFormat model
            = new PacketCapturePropertiesFormat().withNetworkInterfaces(Arrays.asList("wkgshwa"))
                .withBytesToCapturePerPacket(9069419469544491752L)
                .withTotalBytesPerSession(3330402846072067803L)
                .withTimeLimitInSeconds(624724935);
        model = BinaryData.fromObject(model).toObject(PacketCapturePropertiesFormat.class);
        Assertions.assertEquals("wkgshwa", model.networkInterfaces().get(0));
        Assertions.assertEquals(9069419469544491752L, model.bytesToCapturePerPacket());
        Assertions.assertEquals(3330402846072067803L, model.totalBytesPerSession());
        Assertions.assertEquals(624724935, model.timeLimitInSeconds());
    }
}
