// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.fluent.models.PacketCapturePropertiesFormat;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PacketCapturePropertiesFormatTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PacketCapturePropertiesFormat model = BinaryData.fromString(
            "{\"provisioningState\":\"Accepted\",\"status\":\"Error\",\"reason\":\"hfmvfaxkffe\",\"captureStartTime\":\"2021-05-15T04:16:32Z\",\"networkInterfaces\":[\"vmezy\",\"shxmzsbbzoggigrx\",\"burvjxxjnspy\",\"ptkoenkoukn\"],\"bytesToCapturePerPacket\":5351704758336650999,\"totalBytesPerSession\":5050642493378346293,\"timeLimitInSeconds\":133898645,\"outputFiles\":[\"ngkpocipazy\"]}")
            .toObject(PacketCapturePropertiesFormat.class);
        Assertions.assertEquals("vmezy", model.networkInterfaces().get(0));
        Assertions.assertEquals(5351704758336650999L, model.bytesToCapturePerPacket());
        Assertions.assertEquals(5050642493378346293L, model.totalBytesPerSession());
        Assertions.assertEquals(133898645, model.timeLimitInSeconds());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PacketCapturePropertiesFormat model = new PacketCapturePropertiesFormat()
            .withNetworkInterfaces(Arrays.asList("vmezy", "shxmzsbbzoggigrx", "burvjxxjnspy", "ptkoenkoukn"))
            .withBytesToCapturePerPacket(5351704758336650999L).withTotalBytesPerSession(5050642493378346293L)
            .withTimeLimitInSeconds(133898645);
        model = BinaryData.fromObject(model).toObject(PacketCapturePropertiesFormat.class);
        Assertions.assertEquals("vmezy", model.networkInterfaces().get(0));
        Assertions.assertEquals(5351704758336650999L, model.bytesToCapturePerPacket());
        Assertions.assertEquals(5050642493378346293L, model.totalBytesPerSession());
        Assertions.assertEquals(133898645, model.timeLimitInSeconds());
    }
}
