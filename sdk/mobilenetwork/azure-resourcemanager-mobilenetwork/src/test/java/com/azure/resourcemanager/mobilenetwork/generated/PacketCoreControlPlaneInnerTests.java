// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.fluent.models.PacketCoreControlPlaneInner;
import com.azure.resourcemanager.mobilenetwork.models.AuthenticationType;
import com.azure.resourcemanager.mobilenetwork.models.AzureStackEdgeDeviceResourceId;
import com.azure.resourcemanager.mobilenetwork.models.AzureStackHciClusterResourceId;
import com.azure.resourcemanager.mobilenetwork.models.BillingSku;
import com.azure.resourcemanager.mobilenetwork.models.ConnectedClusterResourceId;
import com.azure.resourcemanager.mobilenetwork.models.CoreNetworkType;
import com.azure.resourcemanager.mobilenetwork.models.CustomLocationResourceId;
import com.azure.resourcemanager.mobilenetwork.models.DesiredInstallationState;
import com.azure.resourcemanager.mobilenetwork.models.DiagnosticsUploadConfiguration;
import com.azure.resourcemanager.mobilenetwork.models.HttpsServerCertificate;
import com.azure.resourcemanager.mobilenetwork.models.Installation;
import com.azure.resourcemanager.mobilenetwork.models.InterfaceProperties;
import com.azure.resourcemanager.mobilenetwork.models.LocalDiagnosticsAccessConfiguration;
import com.azure.resourcemanager.mobilenetwork.models.ManagedServiceIdentity;
import com.azure.resourcemanager.mobilenetwork.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.mobilenetwork.models.PlatformConfiguration;
import com.azure.resourcemanager.mobilenetwork.models.PlatformType;
import com.azure.resourcemanager.mobilenetwork.models.SiteResourceId;
import com.azure.resourcemanager.mobilenetwork.models.UserAssignedIdentity;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class PacketCoreControlPlaneInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PacketCoreControlPlaneInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"provisioningState\":\"Deleting\",\"installation\":{\"desiredState\":\"Installed\",\"state\":\"Failed\",\"reinstallRequired\":\"NotRequired\",\"reasons\":[\"NoAttachedDataNetworks\"],\"operation\":{\"id\":\"zbinjeputtm\"}},\"sites\":[{\"id\":\"wnuzoqftiyqzrnkc\"},{\"id\":\"vyxlwhzlsicohoqq\"}],\"platform\":{\"type\":\"AKS-HCI\",\"azureStackEdgeDevice\":{\"id\":\"lryav\"},\"azureStackEdgeDevices\":[{\"id\":\"eun\"}],\"azureStackHciCluster\":{\"id\":\"qhgyxzkonocukok\"},\"connectedCluster\":{\"id\":\"axuconuq\"},\"customLocation\":{\"id\":\"fkbey\"}},\"coreNetworkTechnology\":\"5GC\",\"version\":\"mjmwvvjektcx\",\"installedVersion\":\"nhwlrsffrzpwvl\",\"rollbackVersion\":\"q\",\"controlPlaneAccessInterface\":{\"name\":\"iqylihkaetck\",\"ipv4Address\":\"fcivfsnkym\",\"ipv4Subnet\":\"tqhjfbebrjcx\",\"ipv4Gateway\":\"fuwutttxf\"},\"sku\":\"G1\",\"ueMtu\":871472535,\"localDiagnosticsAccess\":{\"authenticationType\":\"AAD\",\"httpsServerCertificate\":{\"certificateUrl\":\"phxepcyvahf\",\"provisioning\":{\"state\":\"Provisioned\",\"reason\":\"qxj\"}}},\"diagnosticsUpload\":{\"storageAccountContainerUrl\":\"ujqgidok\"},\"interopSettings\":\"dataljyoxgvcltb\"},\"identity\":{\"type\":\"None\",\"userAssignedIdentities\":{\"jeszzhbijhtxfv\":{\"principalId\":\"c330c655-1399-4955-b1a5-c0ba62de7208\",\"clientId\":\"e13960de-9eec-45fd-b2d7-080e69b1988a\"},\"fsm\":{\"principalId\":\"fb0c4583-9886-4f1b-867e-491afcb96d24\",\"clientId\":\"2eb5ce63-fb75-4141-a6bc-15e921f03ebf\"},\"hmpvecx\":{\"principalId\":\"a40433a6-0ad2-4389-b205-bc92efcaa173\",\"clientId\":\"a5591a44-c922-4b0f-891f-8408936af73f\"}}},\"location\":\"debfqkkrbmpukgri\",\"tags\":{\"ahmgkbrp\":\"zlfbxzpuzycispnq\",\"hibnuqqkpika\":\"y\",\"buynhijggm\":\"rgvtqag\"},\"id\":\"bfs\",\"name\":\"arbu\",\"type\":\"rcvpnazzmhjrunmp\"}")
                .toObject(PacketCoreControlPlaneInner.class);
        Assertions.assertEquals("debfqkkrbmpukgri", model.location());
        Assertions.assertEquals("zlfbxzpuzycispnq", model.tags().get("ahmgkbrp"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
        Assertions.assertEquals(DesiredInstallationState.INSTALLED, model.installation().desiredState());
        Assertions.assertEquals("wnuzoqftiyqzrnkc", model.sites().get(0).id());
        Assertions.assertEquals(PlatformType.AKS_HCI, model.platform().type());
        Assertions.assertEquals("lryav", model.platform().azureStackEdgeDevice().id());
        Assertions.assertEquals("qhgyxzkonocukok", model.platform().azureStackHciCluster().id());
        Assertions.assertEquals("axuconuq", model.platform().connectedCluster().id());
        Assertions.assertEquals("fkbey", model.platform().customLocation().id());
        Assertions.assertEquals(CoreNetworkType.FIVE_GC, model.coreNetworkTechnology());
        Assertions.assertEquals("mjmwvvjektcx", model.version());
        Assertions.assertEquals("iqylihkaetck", model.controlPlaneAccessInterface().name());
        Assertions.assertEquals("fcivfsnkym", model.controlPlaneAccessInterface().ipv4Address());
        Assertions.assertEquals("tqhjfbebrjcx", model.controlPlaneAccessInterface().ipv4Subnet());
        Assertions.assertEquals("fuwutttxf", model.controlPlaneAccessInterface().ipv4Gateway());
        Assertions.assertEquals(BillingSku.G1, model.sku());
        Assertions.assertEquals(871472535, model.ueMtu());
        Assertions.assertEquals(AuthenticationType.AAD, model.localDiagnosticsAccess().authenticationType());
        Assertions
            .assertEquals("phxepcyvahf", model.localDiagnosticsAccess().httpsServerCertificate().certificateUrl());
        Assertions.assertEquals("ujqgidok", model.diagnosticsUpload().storageAccountContainerUrl());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PacketCoreControlPlaneInner model =
            new PacketCoreControlPlaneInner()
                .withLocation("debfqkkrbmpukgri")
                .withTags(mapOf("ahmgkbrp", "zlfbxzpuzycispnq", "hibnuqqkpika", "y", "buynhijggm", "rgvtqag"))
                .withIdentity(
                    new ManagedServiceIdentity()
                        .withType(ManagedServiceIdentityType.NONE)
                        .withUserAssignedIdentities(
                            mapOf(
                                "jeszzhbijhtxfv",
                                new UserAssignedIdentity(),
                                "fsm",
                                new UserAssignedIdentity(),
                                "hmpvecx",
                                new UserAssignedIdentity())))
                .withInstallation(new Installation().withDesiredState(DesiredInstallationState.INSTALLED))
                .withSites(
                    Arrays
                        .asList(
                            new SiteResourceId().withId("wnuzoqftiyqzrnkc"),
                            new SiteResourceId().withId("vyxlwhzlsicohoqq")))
                .withPlatform(
                    new PlatformConfiguration()
                        .withType(PlatformType.AKS_HCI)
                        .withAzureStackEdgeDevice(new AzureStackEdgeDeviceResourceId().withId("lryav"))
                        .withAzureStackHciCluster(new AzureStackHciClusterResourceId().withId("qhgyxzkonocukok"))
                        .withConnectedCluster(new ConnectedClusterResourceId().withId("axuconuq"))
                        .withCustomLocation(new CustomLocationResourceId().withId("fkbey")))
                .withCoreNetworkTechnology(CoreNetworkType.FIVE_GC)
                .withVersion("mjmwvvjektcx")
                .withControlPlaneAccessInterface(
                    new InterfaceProperties()
                        .withName("iqylihkaetck")
                        .withIpv4Address("fcivfsnkym")
                        .withIpv4Subnet("tqhjfbebrjcx")
                        .withIpv4Gateway("fuwutttxf"))
                .withSku(BillingSku.G1)
                .withUeMtu(871472535)
                .withLocalDiagnosticsAccess(
                    new LocalDiagnosticsAccessConfiguration()
                        .withAuthenticationType(AuthenticationType.AAD)
                        .withHttpsServerCertificate(new HttpsServerCertificate().withCertificateUrl("phxepcyvahf")))
                .withDiagnosticsUpload(new DiagnosticsUploadConfiguration().withStorageAccountContainerUrl("ujqgidok"))
                .withInteropSettings("dataljyoxgvcltb");
        model = BinaryData.fromObject(model).toObject(PacketCoreControlPlaneInner.class);
        Assertions.assertEquals("debfqkkrbmpukgri", model.location());
        Assertions.assertEquals("zlfbxzpuzycispnq", model.tags().get("ahmgkbrp"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
        Assertions.assertEquals(DesiredInstallationState.INSTALLED, model.installation().desiredState());
        Assertions.assertEquals("wnuzoqftiyqzrnkc", model.sites().get(0).id());
        Assertions.assertEquals(PlatformType.AKS_HCI, model.platform().type());
        Assertions.assertEquals("lryav", model.platform().azureStackEdgeDevice().id());
        Assertions.assertEquals("qhgyxzkonocukok", model.platform().azureStackHciCluster().id());
        Assertions.assertEquals("axuconuq", model.platform().connectedCluster().id());
        Assertions.assertEquals("fkbey", model.platform().customLocation().id());
        Assertions.assertEquals(CoreNetworkType.FIVE_GC, model.coreNetworkTechnology());
        Assertions.assertEquals("mjmwvvjektcx", model.version());
        Assertions.assertEquals("iqylihkaetck", model.controlPlaneAccessInterface().name());
        Assertions.assertEquals("fcivfsnkym", model.controlPlaneAccessInterface().ipv4Address());
        Assertions.assertEquals("tqhjfbebrjcx", model.controlPlaneAccessInterface().ipv4Subnet());
        Assertions.assertEquals("fuwutttxf", model.controlPlaneAccessInterface().ipv4Gateway());
        Assertions.assertEquals(BillingSku.G1, model.sku());
        Assertions.assertEquals(871472535, model.ueMtu());
        Assertions.assertEquals(AuthenticationType.AAD, model.localDiagnosticsAccess().authenticationType());
        Assertions
            .assertEquals("phxepcyvahf", model.localDiagnosticsAccess().httpsServerCertificate().certificateUrl());
        Assertions.assertEquals("ujqgidok", model.diagnosticsUpload().storageAccountContainerUrl());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
