// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.fluent.models.UeInfoInner;
import com.azure.resourcemanager.mobilenetwork.models.DnnIpPair;
import com.azure.resourcemanager.mobilenetwork.models.RatType;
import com.azure.resourcemanager.mobilenetwork.models.UeInfoPropertiesFormat;
import com.azure.resourcemanager.mobilenetwork.models.UeIpAddress;
import com.azure.resourcemanager.mobilenetwork.models.UeState;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UeInfoInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UeInfoInner model = BinaryData.fromString(
            "{\"properties\":{\"ratType\":\"5G\",\"ueState\":\"Connected\",\"ueIpAddresses\":[{\"dnn\":\"mdy\",\"ueIpAddress\":{\"ipV4Addr\":\"wdigumbnraauz\"}}],\"lastReadAt\":\"2021-06-11T04:36:53Z\"},\"id\":\"a\",\"name\":\"ysdzhez\",\"type\":\"wva\"}")
            .toObject(UeInfoInner.class);
        Assertions.assertEquals(RatType.FIVEG, model.properties().ratType());
        Assertions.assertEquals(UeState.CONNECTED, model.properties().ueState());
        Assertions.assertEquals("mdy", model.properties().ueIpAddresses().get(0).dnn());
        Assertions.assertEquals("wdigumbnraauz", model.properties().ueIpAddresses().get(0).ueIpAddress().ipV4Addr());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-11T04:36:53Z"), model.properties().lastReadAt());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UeInfoInner model = new UeInfoInner()
            .withProperties(new UeInfoPropertiesFormat().withRatType(RatType.FIVEG).withUeState(UeState.CONNECTED)
                .withUeIpAddresses(Arrays.asList(
                    new DnnIpPair().withDnn("mdy").withUeIpAddress(new UeIpAddress().withIpV4Addr("wdigumbnraauz"))))
                .withLastReadAt(OffsetDateTime.parse("2021-06-11T04:36:53Z")));
        model = BinaryData.fromObject(model).toObject(UeInfoInner.class);
        Assertions.assertEquals(RatType.FIVEG, model.properties().ratType());
        Assertions.assertEquals(UeState.CONNECTED, model.properties().ueState());
        Assertions.assertEquals("mdy", model.properties().ueIpAddresses().get(0).dnn());
        Assertions.assertEquals("wdigumbnraauz", model.properties().ueIpAddresses().get(0).ueIpAddress().ipV4Addr());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-11T04:36:53Z"), model.properties().lastReadAt());
    }
}
