// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.fluent.models.PacketCoreControlPlaneVersionInner;
import com.azure.resourcemanager.mobilenetwork.models.ObsoleteVersion;
import com.azure.resourcemanager.mobilenetwork.models.Platform;
import com.azure.resourcemanager.mobilenetwork.models.PlatformType;
import com.azure.resourcemanager.mobilenetwork.models.RecommendedVersion;
import com.azure.resourcemanager.mobilenetwork.models.VersionState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PacketCoreControlPlaneVersionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PacketCoreControlPlaneVersionInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"provisioningState\":\"Accepted\",\"platforms\":[{\"platformType\":\"AKS-HCI\",\"versionState\":\"Unknown\",\"minimumPlatformSoftwareVersion\":\"grcfb\",\"maximumPlatformSoftwareVersion\":\"rmfqjhhkxbpvj\",\"recommendedVersion\":\"Recommended\",\"obsoleteVersion\":\"NotObsolete\"},{\"platformType\":\"AKS-HCI\",\"versionState\":\"Active\",\"minimumPlatformSoftwareVersion\":\"u\",\"maximumPlatformSoftwareVersion\":\"vkr\",\"recommendedVersion\":\"NotRecommended\",\"obsoleteVersion\":\"NotObsolete\"},{\"platformType\":\"AKS-HCI\",\"versionState\":\"ValidationFailed\",\"minimumPlatformSoftwareVersion\":\"jfauvjfdxxi\",\"maximumPlatformSoftwareVersion\":\"tvtc\",\"recommendedVersion\":\"Recommended\",\"obsoleteVersion\":\"NotObsolete\"}]},\"id\":\"oqmcbxvwvxyslq\",\"name\":\"hsfxoblytkb\",\"type\":\"mpew\"}")
                .toObject(PacketCoreControlPlaneVersionInner.class);
        Assertions.assertEquals(PlatformType.AKS_HCI, model.platforms().get(0).platformType());
        Assertions.assertEquals(VersionState.UNKNOWN, model.platforms().get(0).versionState());
        Assertions.assertEquals("grcfb", model.platforms().get(0).minimumPlatformSoftwareVersion());
        Assertions.assertEquals("rmfqjhhkxbpvj", model.platforms().get(0).maximumPlatformSoftwareVersion());
        Assertions.assertEquals(RecommendedVersion.RECOMMENDED, model.platforms().get(0).recommendedVersion());
        Assertions.assertEquals(ObsoleteVersion.NOT_OBSOLETE, model.platforms().get(0).obsoleteVersion());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PacketCoreControlPlaneVersionInner model =
            new PacketCoreControlPlaneVersionInner()
                .withPlatforms(
                    Arrays
                        .asList(
                            new Platform()
                                .withPlatformType(PlatformType.AKS_HCI)
                                .withVersionState(VersionState.UNKNOWN)
                                .withMinimumPlatformSoftwareVersion("grcfb")
                                .withMaximumPlatformSoftwareVersion("rmfqjhhkxbpvj")
                                .withRecommendedVersion(RecommendedVersion.RECOMMENDED)
                                .withObsoleteVersion(ObsoleteVersion.NOT_OBSOLETE),
                            new Platform()
                                .withPlatformType(PlatformType.AKS_HCI)
                                .withVersionState(VersionState.ACTIVE)
                                .withMinimumPlatformSoftwareVersion("u")
                                .withMaximumPlatformSoftwareVersion("vkr")
                                .withRecommendedVersion(RecommendedVersion.NOT_RECOMMENDED)
                                .withObsoleteVersion(ObsoleteVersion.NOT_OBSOLETE),
                            new Platform()
                                .withPlatformType(PlatformType.AKS_HCI)
                                .withVersionState(VersionState.VALIDATION_FAILED)
                                .withMinimumPlatformSoftwareVersion("jfauvjfdxxi")
                                .withMaximumPlatformSoftwareVersion("tvtc")
                                .withRecommendedVersion(RecommendedVersion.RECOMMENDED)
                                .withObsoleteVersion(ObsoleteVersion.NOT_OBSOLETE)));
        model = BinaryData.fromObject(model).toObject(PacketCoreControlPlaneVersionInner.class);
        Assertions.assertEquals(PlatformType.AKS_HCI, model.platforms().get(0).platformType());
        Assertions.assertEquals(VersionState.UNKNOWN, model.platforms().get(0).versionState());
        Assertions.assertEquals("grcfb", model.platforms().get(0).minimumPlatformSoftwareVersion());
        Assertions.assertEquals("rmfqjhhkxbpvj", model.platforms().get(0).maximumPlatformSoftwareVersion());
        Assertions.assertEquals(RecommendedVersion.RECOMMENDED, model.platforms().get(0).recommendedVersion());
        Assertions.assertEquals(ObsoleteVersion.NOT_OBSOLETE, model.platforms().get(0).obsoleteVersion());
    }
}
