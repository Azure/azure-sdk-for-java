// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.fluent.models.PacketCoreControlPlaneVersionInner;
import com.azure.resourcemanager.mobilenetwork.models.ObsoleteVersion;
import com.azure.resourcemanager.mobilenetwork.models.Platform;
import com.azure.resourcemanager.mobilenetwork.models.PlatformType;
import com.azure.resourcemanager.mobilenetwork.models.RecommendedVersion;
import com.azure.resourcemanager.mobilenetwork.models.VersionState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PacketCoreControlPlaneVersionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PacketCoreControlPlaneVersionInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"Accepted\",\"platforms\":[{\"platformType\":\"3P-AZURE-STACK-HCI\",\"versionState\":\"Deprecated\",\"minimumPlatformSoftwareVersion\":\"dy\",\"maximumPlatformSoftwareVersion\":\"rwyhqmibzyhwitsm\",\"recommendedVersion\":\"NotRecommended\",\"obsoleteVersion\":\"NotObsolete\",\"haUpgradesAvailable\":[\"dpumnzgmw\"]}]},\"id\":\"mabiknsorgjhxb\",\"name\":\"dtlwwrlkd\",\"type\":\"tncvokot\"}")
            .toObject(PacketCoreControlPlaneVersionInner.class);
        Assertions.assertEquals(PlatformType.THREE_P_AZURE_STACK_HCI, model.platforms().get(0).platformType());
        Assertions.assertEquals(VersionState.DEPRECATED, model.platforms().get(0).versionState());
        Assertions.assertEquals("dy", model.platforms().get(0).minimumPlatformSoftwareVersion());
        Assertions.assertEquals("rwyhqmibzyhwitsm", model.platforms().get(0).maximumPlatformSoftwareVersion());
        Assertions.assertEquals(RecommendedVersion.NOT_RECOMMENDED, model.platforms().get(0).recommendedVersion());
        Assertions.assertEquals(ObsoleteVersion.NOT_OBSOLETE, model.platforms().get(0).obsoleteVersion());
        Assertions.assertEquals("dpumnzgmw", model.platforms().get(0).haUpgradesAvailable().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PacketCoreControlPlaneVersionInner model = new PacketCoreControlPlaneVersionInner()
            .withPlatforms(Arrays.asList(new Platform().withPlatformType(PlatformType.THREE_P_AZURE_STACK_HCI)
                .withVersionState(VersionState.DEPRECATED)
                .withMinimumPlatformSoftwareVersion("dy")
                .withMaximumPlatformSoftwareVersion("rwyhqmibzyhwitsm")
                .withRecommendedVersion(RecommendedVersion.NOT_RECOMMENDED)
                .withObsoleteVersion(ObsoleteVersion.NOT_OBSOLETE)
                .withHaUpgradesAvailable(Arrays.asList("dpumnzgmw"))));
        model = BinaryData.fromObject(model).toObject(PacketCoreControlPlaneVersionInner.class);
        Assertions.assertEquals(PlatformType.THREE_P_AZURE_STACK_HCI, model.platforms().get(0).platformType());
        Assertions.assertEquals(VersionState.DEPRECATED, model.platforms().get(0).versionState());
        Assertions.assertEquals("dy", model.platforms().get(0).minimumPlatformSoftwareVersion());
        Assertions.assertEquals("rwyhqmibzyhwitsm", model.platforms().get(0).maximumPlatformSoftwareVersion());
        Assertions.assertEquals(RecommendedVersion.NOT_RECOMMENDED, model.platforms().get(0).recommendedVersion());
        Assertions.assertEquals(ObsoleteVersion.NOT_OBSOLETE, model.platforms().get(0).obsoleteVersion());
        Assertions.assertEquals("dpumnzgmw", model.platforms().get(0).haUpgradesAvailable().get(0));
    }
}
