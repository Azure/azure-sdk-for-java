// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.models.AttachedDataNetworkResourceId;
import com.azure.resourcemanager.mobilenetwork.models.Ipv4Route;
import com.azure.resourcemanager.mobilenetwork.models.Ipv4RouteNextHop;
import com.azure.resourcemanager.mobilenetwork.models.UserPlaneDataRoutesItem;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UserPlaneDataRoutesItemTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UserPlaneDataRoutesItem model = BinaryData.fromString(
            "{\"attachedDataNetwork\":{\"id\":\"dgvraeaeneq\"},\"routes\":[{\"destination\":\"rwlqu\",\"nextHops\":[{\"address\":\"qkacewii\",\"priority\":1703781779},{\"address\":\"bjibwwiftohq\",\"priority\":1205462118}]},{\"destination\":\"vksgplsaknynfsy\",\"nextHops\":[{\"address\":\"huopxodlqiynto\",\"priority\":1419616379},{\"address\":\"leosjswsrms\",\"priority\":1326847440},{\"address\":\"pzbchck\",\"priority\":664678880}]}]}")
            .toObject(UserPlaneDataRoutesItem.class);
        Assertions.assertEquals("dgvraeaeneq", model.attachedDataNetwork().id());
        Assertions.assertEquals("rwlqu", model.routes().get(0).destination());
        Assertions.assertEquals("qkacewii", model.routes().get(0).nextHops().get(0).address());
        Assertions.assertEquals(1703781779, model.routes().get(0).nextHops().get(0).priority());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UserPlaneDataRoutesItem model = new UserPlaneDataRoutesItem()
            .withAttachedDataNetwork(new AttachedDataNetworkResourceId().withId("dgvraeaeneq"))
            .withRoutes(Arrays.asList(
                new Ipv4Route().withDestination("rwlqu")
                    .withNextHops(Arrays.asList(new Ipv4RouteNextHop().withAddress("qkacewii").withPriority(1703781779),
                        new Ipv4RouteNextHop().withAddress("bjibwwiftohq").withPriority(1205462118))),
                new Ipv4Route().withDestination("vksgplsaknynfsy")
                    .withNextHops(
                        Arrays.asList(new Ipv4RouteNextHop().withAddress("huopxodlqiynto").withPriority(1419616379),
                            new Ipv4RouteNextHop().withAddress("leosjswsrms").withPriority(1326847440),
                            new Ipv4RouteNextHop().withAddress("pzbchck").withPriority(664678880)))));
        model = BinaryData.fromObject(model).toObject(UserPlaneDataRoutesItem.class);
        Assertions.assertEquals("dgvraeaeneq", model.attachedDataNetwork().id());
        Assertions.assertEquals("rwlqu", model.routes().get(0).destination());
        Assertions.assertEquals("qkacewii", model.routes().get(0).nextHops().get(0).address());
        Assertions.assertEquals(1703781779, model.routes().get(0).nextHops().get(0).priority());
    }
}
