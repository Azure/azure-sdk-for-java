// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mobilenetwork.MobileNetworkManager;
import com.azure.resourcemanager.mobilenetwork.models.PacketCapture;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PacketCapturesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Failed\",\"status\":\"Stopped\",\"reason\":\"mhwrb\",\"captureStartTime\":\"2021-03-14T13:08:25Z\",\"networkInterfaces\":[\"lubhvjg\"],\"bytesToCapturePerPacket\":2957202472038837356,\"totalBytesPerSession\":4743157131369519093,\"timeLimitInSeconds\":392377022,\"outputFiles\":[\"memhooclutnpq\"]},\"id\":\"mczjkm\",\"name\":\"ykyujxsg\",\"type\":\"hsrrryejylmbkz\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MobileNetworkManager manager = MobileNetworkManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PacketCapture response = manager.packetCaptures()
            .getWithResponse("rtws", "hv", "uic", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("lubhvjg", response.networkInterfaces().get(0));
        Assertions.assertEquals(2957202472038837356L, response.bytesToCapturePerPacket());
        Assertions.assertEquals(4743157131369519093L, response.totalBytesPerSession());
        Assertions.assertEquals(392377022, response.timeLimitInSeconds());
    }
}
