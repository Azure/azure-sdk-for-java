// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.models.IdentityAndTagsObject;
import com.azure.resourcemanager.mobilenetwork.models.ManagedServiceIdentity;
import com.azure.resourcemanager.mobilenetwork.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.mobilenetwork.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class IdentityAndTagsObjectTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IdentityAndTagsObject model = BinaryData.fromString(
            "{\"identity\":{\"type\":\"None\",\"userAssignedIdentities\":{\"nysounqe\":{\"principalId\":\"bef70479-23af-459e-8264-df53e79233bf\",\"clientId\":\"b30021b9-b4b4-46c0-90cc-adf0a022e26a\"},\"oaeupfhyhltrpmo\":{\"principalId\":\"661a74fc-5d69-4f85-babc-795d2c75ff87\",\"clientId\":\"24fb67b6-8554-4520-87b0-b653c5c68419\"},\"cma\":{\"principalId\":\"f3efc9fa-8274-4369-9467-280f33b2fc90\",\"clientId\":\"73273559-9bb9-4eef-af33-ef17417129cb\"}}},\"tags\":{\"aodsfcpkv\":\"kthfui\"}}")
            .toObject(IdentityAndTagsObject.class);
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
        Assertions.assertEquals("kthfui", model.tags().get("aodsfcpkv"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IdentityAndTagsObject model = new IdentityAndTagsObject()
            .withIdentity(new ManagedServiceIdentity().withType(ManagedServiceIdentityType.NONE)
                .withUserAssignedIdentities(mapOf("nysounqe", new UserAssignedIdentity(), "oaeupfhyhltrpmo",
                    new UserAssignedIdentity(), "cma", new UserAssignedIdentity())))
            .withTags(mapOf("aodsfcpkv", "kthfui"));
        model = BinaryData.fromObject(model).toObject(IdentityAndTagsObject.class);
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
        Assertions.assertEquals("kthfui", model.tags().get("aodsfcpkv"));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
