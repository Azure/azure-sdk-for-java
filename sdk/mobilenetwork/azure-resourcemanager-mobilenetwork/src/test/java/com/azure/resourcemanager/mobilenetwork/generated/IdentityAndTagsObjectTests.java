// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.models.IdentityAndTagsObject;
import com.azure.resourcemanager.mobilenetwork.models.ManagedServiceIdentity;
import com.azure.resourcemanager.mobilenetwork.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.mobilenetwork.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class IdentityAndTagsObjectTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IdentityAndTagsObject model = BinaryData.fromString(
            "{\"identity\":{\"type\":\"None\",\"userAssignedIdentities\":{\"ej\":{\"principalId\":\"3d1d87f1-574c-4cb4-98a4-ed37a6219a8c\",\"clientId\":\"3dbd3888-9c05-4c1e-b5a5-27f5ee6a8834\"},\"orxzdmohctbqvud\":{\"principalId\":\"373b5de1-1fd3-4520-9c66-38c87d783a16\",\"clientId\":\"9f65f968-592f-4392-8bba-4df773d0e821\"},\"ndnvo\":{\"principalId\":\"d5218b7a-78c6-4c2b-9c84-4fbe154986e1\",\"clientId\":\"5db7dcda-5d14-4012-89bc-0884d3fb93da\"}}},\"tags\":{\"dyggdtjixhbku\":\"jjugwdkcglhslaz\",\"fyexfwhy\":\"fqweykhmene\",\"amdecte\":\"cibvyvdcsitynn\"}}")
            .toObject(IdentityAndTagsObject.class);
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
        Assertions.assertEquals("jjugwdkcglhslaz", model.tags().get("dyggdtjixhbku"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IdentityAndTagsObject model = new IdentityAndTagsObject()
            .withIdentity(new ManagedServiceIdentity().withType(ManagedServiceIdentityType.NONE)
                .withUserAssignedIdentities(mapOf("ej", new UserAssignedIdentity(), "orxzdmohctbqvud",
                    new UserAssignedIdentity(), "ndnvo", new UserAssignedIdentity())))
            .withTags(
                mapOf("dyggdtjixhbku", "jjugwdkcglhslaz", "fyexfwhy", "fqweykhmene", "amdecte", "cibvyvdcsitynn"));
        model = BinaryData.fromObject(model).toObject(IdentityAndTagsObject.class);
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
        Assertions.assertEquals("jjugwdkcglhslaz", model.tags().get("dyggdtjixhbku"));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
