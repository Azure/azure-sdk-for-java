// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.models.IdentityAndTagsObject;
import com.azure.resourcemanager.mobilenetwork.models.ManagedServiceIdentity;
import com.azure.resourcemanager.mobilenetwork.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.mobilenetwork.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class IdentityAndTagsObjectTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IdentityAndTagsObject model =
            BinaryData
                .fromString(
                    "{\"identity\":{\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"xy\":{\"principalId\":\"e3e6e0cb-585a-49cb-a745-dfd0da3d2013\",\"clientId\":\"ae588393-1176-4f2d-b94b-7169558bf377\"},\"oyrxvwfudwpzntxh\":{\"principalId\":\"6c89282a-6a95-4223-8c89-b7b28007fd44\",\"clientId\":\"603dd9e9-151e-477e-9387-9f7bda37672d\"},\"lrqjbhckfr\":{\"principalId\":\"c56d3585-fe1c-42f8-b14b-3e6371b61bc7\",\"clientId\":\"b5c86b40-5c29-4017-beea-72410d4c07bc\"}}},\"tags\":{\"uzbpzkafku\":\"xsbkyvpyca\",\"rnwb\":\"b\"}}")
                .toObject(IdentityAndTagsObject.class);
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("xsbkyvpyca", model.tags().get("uzbpzkafku"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IdentityAndTagsObject model =
            new IdentityAndTagsObject()
                .withIdentity(
                    new ManagedServiceIdentity()
                        .withType(ManagedServiceIdentityType.USER_ASSIGNED)
                        .withUserAssignedIdentities(
                            mapOf(
                                "xy",
                                new UserAssignedIdentity(),
                                "oyrxvwfudwpzntxh",
                                new UserAssignedIdentity(),
                                "lrqjbhckfr",
                                new UserAssignedIdentity())))
                .withTags(mapOf("uzbpzkafku", "xsbkyvpyca", "rnwb", "b"));
        model = BinaryData.fromObject(model).toObject(IdentityAndTagsObject.class);
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("xsbkyvpyca", model.tags().get("uzbpzkafku"));
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
