// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.models.IdentityAndTagsObject;
import com.azure.resourcemanager.mobilenetwork.models.ManagedServiceIdentity;
import com.azure.resourcemanager.mobilenetwork.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.mobilenetwork.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class IdentityAndTagsObjectTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IdentityAndTagsObject model = BinaryData.fromString(
            "{\"identity\":{\"type\":\"None\",\"userAssignedIdentities\":{\"ej\":{\"principalId\":\"f7edf531-b45e-43e9-a23a-9b1d26320344\",\"clientId\":\"0a1d3872-fc36-4817-867b-74e21aea2502\"},\"orxzdmohctbqvud\":{\"principalId\":\"ea7eaebb-383e-466b-a12c-d21be283a83a\",\"clientId\":\"837149ae-579e-42c5-8ef8-aa00dabef93f\"},\"ndnvo\":{\"principalId\":\"6b4d70fa-4b0b-4e44-895d-1c86a6b60cbe\",\"clientId\":\"81a2622e-3074-4d4b-b75f-6958ef6d7750\"}}},\"tags\":{\"dyggdtjixhbku\":\"jjugwdkcglhslaz\",\"fyexfwhy\":\"fqweykhmene\",\"amdecte\":\"cibvyvdcsitynn\"}}")
            .toObject(IdentityAndTagsObject.class);
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
        Assertions.assertEquals("jjugwdkcglhslaz", model.tags().get("dyggdtjixhbku"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IdentityAndTagsObject model = new IdentityAndTagsObject()
            .withIdentity(new ManagedServiceIdentity().withType(ManagedServiceIdentityType.NONE)
                .withUserAssignedIdentities(mapOf("ej", new UserAssignedIdentity(), "orxzdmohctbqvud",
                    new UserAssignedIdentity(), "ndnvo", new UserAssignedIdentity())))
            .withTags(
                mapOf("dyggdtjixhbku", "jjugwdkcglhslaz", "fyexfwhy", "fqweykhmene", "amdecte", "cibvyvdcsitynn"));
        model = BinaryData.fromObject(model).toObject(IdentityAndTagsObject.class);
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.identity().type());
        Assertions.assertEquals("jjugwdkcglhslaz", model.tags().get("dyggdtjixhbku"));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
