// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.fluent.models.PacketCoreDataPlanePropertiesFormat;
import com.azure.resourcemanager.mobilenetwork.models.InterfaceProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PacketCoreDataPlanePropertiesFormatTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PacketCoreDataPlanePropertiesFormat model = BinaryData.fromString(
            "{\"provisioningState\":\"Deleted\",\"userPlaneAccessInterface\":{\"name\":\"vwiwubmwmbesld\",\"ipv4Address\":\"wwtppj\",\"ipv4Subnet\":\"cxogaokonzm\",\"ipv4Gateway\":\"ikvmkqzeqqk\"},\"userPlaneAccessVirtualIpv4Addresses\":[\"fzxmhhvhgureodkw\"]}")
            .toObject(PacketCoreDataPlanePropertiesFormat.class);
        Assertions.assertEquals("vwiwubmwmbesld", model.userPlaneAccessInterface().name());
        Assertions.assertEquals("wwtppj", model.userPlaneAccessInterface().ipv4Address());
        Assertions.assertEquals("cxogaokonzm", model.userPlaneAccessInterface().ipv4Subnet());
        Assertions.assertEquals("ikvmkqzeqqk", model.userPlaneAccessInterface().ipv4Gateway());
        Assertions.assertEquals("fzxmhhvhgureodkw", model.userPlaneAccessVirtualIpv4Addresses().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PacketCoreDataPlanePropertiesFormat model = new PacketCoreDataPlanePropertiesFormat()
            .withUserPlaneAccessInterface(new InterfaceProperties().withName("vwiwubmwmbesld").withIpv4Address("wwtppj")
                .withIpv4Subnet("cxogaokonzm").withIpv4Gateway("ikvmkqzeqqk"))
            .withUserPlaneAccessVirtualIpv4Addresses(Arrays.asList("fzxmhhvhgureodkw"));
        model = BinaryData.fromObject(model).toObject(PacketCoreDataPlanePropertiesFormat.class);
        Assertions.assertEquals("vwiwubmwmbesld", model.userPlaneAccessInterface().name());
        Assertions.assertEquals("wwtppj", model.userPlaneAccessInterface().ipv4Address());
        Assertions.assertEquals("cxogaokonzm", model.userPlaneAccessInterface().ipv4Subnet());
        Assertions.assertEquals("ikvmkqzeqqk", model.userPlaneAccessInterface().ipv4Gateway());
        Assertions.assertEquals("fzxmhhvhgureodkw", model.userPlaneAccessVirtualIpv4Addresses().get(0));
    }
}
