// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.fluent.models.PacketCoreDataPlanePropertiesFormat;
import com.azure.resourcemanager.mobilenetwork.models.InterfaceProperties;
import org.junit.jupiter.api.Assertions;

public final class PacketCoreDataPlanePropertiesFormatTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PacketCoreDataPlanePropertiesFormat model =
            BinaryData
                .fromString(
                    "{\"provisioningState\":\"Deleted\",\"userPlaneAccessInterface\":{\"name\":\"fv\",\"ipv4Address\":\"fy\",\"ipv4Subnet\":\"bpfvm\",\"ipv4Gateway\":\"hrfou\"}}")
                .toObject(PacketCoreDataPlanePropertiesFormat.class);
        Assertions.assertEquals("fv", model.userPlaneAccessInterface().name());
        Assertions.assertEquals("fy", model.userPlaneAccessInterface().ipv4Address());
        Assertions.assertEquals("bpfvm", model.userPlaneAccessInterface().ipv4Subnet());
        Assertions.assertEquals("hrfou", model.userPlaneAccessInterface().ipv4Gateway());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PacketCoreDataPlanePropertiesFormat model =
            new PacketCoreDataPlanePropertiesFormat()
                .withUserPlaneAccessInterface(
                    new InterfaceProperties()
                        .withName("fv")
                        .withIpv4Address("fy")
                        .withIpv4Subnet("bpfvm")
                        .withIpv4Gateway("hrfou"));
        model = BinaryData.fromObject(model).toObject(PacketCoreDataPlanePropertiesFormat.class);
        Assertions.assertEquals("fv", model.userPlaneAccessInterface().name());
        Assertions.assertEquals("fy", model.userPlaneAccessInterface().ipv4Address());
        Assertions.assertEquals("bpfvm", model.userPlaneAccessInterface().ipv4Subnet());
        Assertions.assertEquals("hrfou", model.userPlaneAccessInterface().ipv4Gateway());
    }
}
