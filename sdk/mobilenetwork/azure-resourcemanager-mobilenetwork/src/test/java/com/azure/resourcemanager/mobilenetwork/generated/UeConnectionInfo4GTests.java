// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.models.GNbId;
import com.azure.resourcemanager.mobilenetwork.models.GlobalRanNodeId;
import com.azure.resourcemanager.mobilenetwork.models.PlmnId;
import com.azure.resourcemanager.mobilenetwork.models.RrcEstablishmentCause;
import com.azure.resourcemanager.mobilenetwork.models.UeConnectionInfo4G;
import com.azure.resourcemanager.mobilenetwork.models.UeLocationInfo;
import com.azure.resourcemanager.mobilenetwork.models.UeState;
import com.azure.resourcemanager.mobilenetwork.models.UeUsageSetting;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class UeConnectionInfo4GTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UeConnectionInfo4G model = BinaryData.fromString(
            "{\"locationInfo\":{\"locationType\":\"s\",\"tac\":\"njlx\",\"plmn\":{\"mcc\":\"zrhwp\",\"mnc\":\"sxjb\"}},\"globalRanNodeId\":{\"plmnId\":{\"mcc\":\"qehgpd\",\"mnc\":\"hzjqatucoige\"},\"gNbId\":{\"bitLength\":1751850154,\"gNBValue\":\"wfepbnwgfmx\"},\"ngeNbId\":\"cgbjbgdlfgt\",\"eNbId\":\"snaquf\",\"n3IwfId\":\"bctqhamzjrwd\",\"wagfId\":\"zeqyjleziun\",\"tngfId\":\"dfzantkwcegy\",\"nid\":\"lbnseqac\"},\"perUeTnla\":\"vpilg\",\"mmeS1apId\":1863370617,\"enbS1apId\":471177437,\"lastVisitedTai\":\"jagmdi\",\"ueState\":\"Connected\",\"rrcEstablishmentCause\":\"MobileTerminatedData\",\"ueUsageSetting\":\"DataCentric\",\"lastActivityTime\":\"2021-10-04T09:01:28Z\"}")
            .toObject(UeConnectionInfo4G.class);
        Assertions.assertEquals("s", model.locationInfo().locationType());
        Assertions.assertEquals("njlx", model.locationInfo().tac());
        Assertions.assertEquals("zrhwp", model.locationInfo().plmn().mcc());
        Assertions.assertEquals("sxjb", model.locationInfo().plmn().mnc());
        Assertions.assertEquals("qehgpd", model.globalRanNodeId().plmnId().mcc());
        Assertions.assertEquals("hzjqatucoige", model.globalRanNodeId().plmnId().mnc());
        Assertions.assertEquals(1751850154, model.globalRanNodeId().gNbId().bitLength());
        Assertions.assertEquals("wfepbnwgfmx", model.globalRanNodeId().gNbId().gNBValue());
        Assertions.assertEquals("cgbjbgdlfgt", model.globalRanNodeId().ngeNbId());
        Assertions.assertEquals("snaquf", model.globalRanNodeId().eNbId());
        Assertions.assertEquals("bctqhamzjrwd", model.globalRanNodeId().n3IwfId());
        Assertions.assertEquals("zeqyjleziun", model.globalRanNodeId().wagfId());
        Assertions.assertEquals("dfzantkwcegy", model.globalRanNodeId().tngfId());
        Assertions.assertEquals("lbnseqac", model.globalRanNodeId().nid());
        Assertions.assertEquals("vpilg", model.perUeTnla());
        Assertions.assertEquals(1863370617, model.mmeS1ApId());
        Assertions.assertEquals(471177437, model.enbS1ApId());
        Assertions.assertEquals("jagmdi", model.lastVisitedTai());
        Assertions.assertEquals(UeState.CONNECTED, model.ueState());
        Assertions.assertEquals(RrcEstablishmentCause.MOBILE_TERMINATED_DATA, model.rrcEstablishmentCause());
        Assertions.assertEquals(UeUsageSetting.DATA_CENTRIC, model.ueUsageSetting());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-04T09:01:28Z"), model.lastActivityTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UeConnectionInfo4G model = new UeConnectionInfo4G()
            .withLocationInfo(new UeLocationInfo().withLocationType("s")
                .withTac("njlx")
                .withPlmn(new PlmnId().withMcc("zrhwp").withMnc("sxjb")))
            .withGlobalRanNodeId(
                new GlobalRanNodeId().withPlmnId(new PlmnId().withMcc("qehgpd").withMnc("hzjqatucoige"))
                    .withGNbId(new GNbId().withBitLength(1751850154).withGNBValue("wfepbnwgfmx"))
                    .withNgeNbId("cgbjbgdlfgt")
                    .withENbId("snaquf")
                    .withN3IwfId("bctqhamzjrwd")
                    .withWagfId("zeqyjleziun")
                    .withTngfId("dfzantkwcegy")
                    .withNid("lbnseqac"))
            .withPerUeTnla("vpilg")
            .withMmeS1ApId(1863370617)
            .withEnbS1ApId(471177437)
            .withLastVisitedTai("jagmdi")
            .withUeState(UeState.CONNECTED)
            .withRrcEstablishmentCause(RrcEstablishmentCause.MOBILE_TERMINATED_DATA)
            .withUeUsageSetting(UeUsageSetting.DATA_CENTRIC)
            .withLastActivityTime(OffsetDateTime.parse("2021-10-04T09:01:28Z"));
        model = BinaryData.fromObject(model).toObject(UeConnectionInfo4G.class);
        Assertions.assertEquals("s", model.locationInfo().locationType());
        Assertions.assertEquals("njlx", model.locationInfo().tac());
        Assertions.assertEquals("zrhwp", model.locationInfo().plmn().mcc());
        Assertions.assertEquals("sxjb", model.locationInfo().plmn().mnc());
        Assertions.assertEquals("qehgpd", model.globalRanNodeId().plmnId().mcc());
        Assertions.assertEquals("hzjqatucoige", model.globalRanNodeId().plmnId().mnc());
        Assertions.assertEquals(1751850154, model.globalRanNodeId().gNbId().bitLength());
        Assertions.assertEquals("wfepbnwgfmx", model.globalRanNodeId().gNbId().gNBValue());
        Assertions.assertEquals("cgbjbgdlfgt", model.globalRanNodeId().ngeNbId());
        Assertions.assertEquals("snaquf", model.globalRanNodeId().eNbId());
        Assertions.assertEquals("bctqhamzjrwd", model.globalRanNodeId().n3IwfId());
        Assertions.assertEquals("zeqyjleziun", model.globalRanNodeId().wagfId());
        Assertions.assertEquals("dfzantkwcegy", model.globalRanNodeId().tngfId());
        Assertions.assertEquals("lbnseqac", model.globalRanNodeId().nid());
        Assertions.assertEquals("vpilg", model.perUeTnla());
        Assertions.assertEquals(1863370617, model.mmeS1ApId());
        Assertions.assertEquals(471177437, model.enbS1ApId());
        Assertions.assertEquals("jagmdi", model.lastVisitedTai());
        Assertions.assertEquals(UeState.CONNECTED, model.ueState());
        Assertions.assertEquals(RrcEstablishmentCause.MOBILE_TERMINATED_DATA, model.rrcEstablishmentCause());
        Assertions.assertEquals(UeUsageSetting.DATA_CENTRIC, model.ueUsageSetting());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-04T09:01:28Z"), model.lastActivityTime());
    }
}
