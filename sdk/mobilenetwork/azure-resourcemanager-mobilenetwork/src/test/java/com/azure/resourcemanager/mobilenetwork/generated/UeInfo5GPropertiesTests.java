// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.models.Ambr;
import com.azure.resourcemanager.mobilenetwork.models.AmfId;
import com.azure.resourcemanager.mobilenetwork.models.GlobalRanNodeId;
import com.azure.resourcemanager.mobilenetwork.models.GNbId;
import com.azure.resourcemanager.mobilenetwork.models.Guti5G;
import com.azure.resourcemanager.mobilenetwork.models.PdnType;
import com.azure.resourcemanager.mobilenetwork.models.PlmnId;
import com.azure.resourcemanager.mobilenetwork.models.RrcEstablishmentCause;
import com.azure.resourcemanager.mobilenetwork.models.Snssai;
import com.azure.resourcemanager.mobilenetwork.models.UeConnectionInfo5G;
import com.azure.resourcemanager.mobilenetwork.models.UeInfo5GProperties;
import com.azure.resourcemanager.mobilenetwork.models.UeIpAddress;
import com.azure.resourcemanager.mobilenetwork.models.UeLocationInfo;
import com.azure.resourcemanager.mobilenetwork.models.UeQosFlow;
import com.azure.resourcemanager.mobilenetwork.models.UeSessionInfo5G;
import com.azure.resourcemanager.mobilenetwork.models.UeState;
import com.azure.resourcemanager.mobilenetwork.models.UeUsageSetting;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UeInfo5GPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UeInfo5GProperties model = BinaryData.fromString(
            "{\"supi\":\"hol\",\"pei\":\"jwiuubwefqsfapaq\",\"fivegGuti\":{\"plmn\":{\"mcc\":\"ferr\",\"mnc\":\"wexjkmfxapjwogq\"},\"amfId\":{\"regionId\":1688417232,\"setId\":211935178,\"pointer\":1928590225},\"fivegTmsi\":775989398},\"connectionInfo\":{\"locationInfo\":{\"locationType\":\"cdabtqwpwya\",\"tac\":\"bzasqbucljgkyexa\",\"plmn\":{\"mcc\":\"guyaip\",\"mnc\":\"dsdaultxijjumf\"}},\"globalRanNodeId\":{\"plmnId\":{\"mcc\":\"waz\",\"mnc\":\"nqnm\"},\"gNbId\":{\"bitLength\":820423242,\"gNBValue\":\"qdqx\"},\"ngeNbId\":\"jw\",\"eNbId\":\"yfu\",\"n3IwfId\":\"zsvtuikzhajqgl\",\"wagfId\":\"hm\",\"tngfId\":\"qryxyn\",\"nid\":\"zrdpsovwxznptgoe\"},\"perUeTnla\":\"bbabp\",\"amfUeNgapId\":1595321596345688459,\"ranUeNgapId\":82233778,\"lastVisitedTai\":\"lkvn\",\"allowedNssai\":[{\"sst\":1320093215,\"sd\":\"gjkskyrioov\"},{\"sst\":1559336923,\"sd\":\"sxwaabzm\"},{\"sst\":300950097,\"sd\":\"ygznmmaxrizk\"}],\"ueState\":\"Detached\",\"rrcEstablishmentCause\":\"Emergency\",\"ueUsageSetting\":\"DataCentric\",\"lastActivityTime\":\"2021-06-22T09:26:41Z\"},\"sessionInfo\":[{\"pduSessionId\":1598231142,\"dnn\":\"lnelxieixynl\",\"snssai\":{\"sst\":1686752311,\"sd\":\"cwcrojphs\"},\"ueIpAddress\":{\"ipV4Addr\":\"cawjutifdwfmvi\"},\"pdnType\":\"IPV4\",\"ambr\":{\"uplink\":\"rqjb\",\"downlink\":\"tzh\"},\"qosFlow\":[{\"qfi\":864075629,\"fiveqi\":1071081064,\"mbr\":{\"uplink\":\"afhonqj\",\"downlink\":\"jeick\"},\"gbr\":{\"uplink\":\"vcpopmxe\",\"downlink\":\"nwcl\"}},{\"qfi\":1288508818,\"fiveqi\":128430456,\"mbr\":{\"uplink\":\"dexxmlfmkqscazua\",\"downlink\":\"xtzx\"},\"gbr\":{\"uplink\":\"amwabzxrvxcushsp\",\"downlink\":\"aivmxyasflvgs\"}},{\"qfi\":1789512101,\"fiveqi\":826140742,\"mbr\":{\"uplink\":\"wakoihkn\",\"downlink\":\"mjblmljhlny\"},\"gbr\":{\"uplink\":\"otqyry\",\"downlink\":\"zcbmqqvxmvwf\"}}]}]}")
            .toObject(UeInfo5GProperties.class);
        Assertions.assertEquals("hol", model.supi());
        Assertions.assertEquals("jwiuubwefqsfapaq", model.pei());
        Assertions.assertEquals("ferr", model.fivegGuti().plmn().mcc());
        Assertions.assertEquals("wexjkmfxapjwogq", model.fivegGuti().plmn().mnc());
        Assertions.assertEquals(1688417232, model.fivegGuti().amfId().regionId());
        Assertions.assertEquals(211935178, model.fivegGuti().amfId().setId());
        Assertions.assertEquals(1928590225, model.fivegGuti().amfId().pointer());
        Assertions.assertEquals(775989398, model.fivegGuti().fivegTmsi());
        Assertions.assertEquals("cdabtqwpwya", model.connectionInfo().locationInfo().locationType());
        Assertions.assertEquals("bzasqbucljgkyexa", model.connectionInfo().locationInfo().tac());
        Assertions.assertEquals("guyaip", model.connectionInfo().locationInfo().plmn().mcc());
        Assertions.assertEquals("dsdaultxijjumf", model.connectionInfo().locationInfo().plmn().mnc());
        Assertions.assertEquals("waz", model.connectionInfo().globalRanNodeId().plmnId().mcc());
        Assertions.assertEquals("nqnm", model.connectionInfo().globalRanNodeId().plmnId().mnc());
        Assertions.assertEquals(820423242, model.connectionInfo().globalRanNodeId().gNbId().bitLength());
        Assertions.assertEquals("qdqx", model.connectionInfo().globalRanNodeId().gNbId().gNBValue());
        Assertions.assertEquals("jw", model.connectionInfo().globalRanNodeId().ngeNbId());
        Assertions.assertEquals("yfu", model.connectionInfo().globalRanNodeId().eNbId());
        Assertions.assertEquals("zsvtuikzhajqgl", model.connectionInfo().globalRanNodeId().n3IwfId());
        Assertions.assertEquals("hm", model.connectionInfo().globalRanNodeId().wagfId());
        Assertions.assertEquals("qryxyn", model.connectionInfo().globalRanNodeId().tngfId());
        Assertions.assertEquals("zrdpsovwxznptgoe", model.connectionInfo().globalRanNodeId().nid());
        Assertions.assertEquals("bbabp", model.connectionInfo().perUeTnla());
        Assertions.assertEquals(1595321596345688459L, model.connectionInfo().amfUeNgapId());
        Assertions.assertEquals(82233778, model.connectionInfo().ranUeNgapId());
        Assertions.assertEquals("lkvn", model.connectionInfo().lastVisitedTai());
        Assertions.assertEquals(1320093215, model.connectionInfo().allowedNssai().get(0).sst());
        Assertions.assertEquals("gjkskyrioov", model.connectionInfo().allowedNssai().get(0).sd());
        Assertions.assertEquals(UeState.DETACHED, model.connectionInfo().ueState());
        Assertions.assertEquals(RrcEstablishmentCause.EMERGENCY, model.connectionInfo().rrcEstablishmentCause());
        Assertions.assertEquals(UeUsageSetting.DATA_CENTRIC, model.connectionInfo().ueUsageSetting());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-22T09:26:41Z"),
            model.connectionInfo().lastActivityTime());
        Assertions.assertEquals(1598231142, model.sessionInfo().get(0).pduSessionId());
        Assertions.assertEquals("lnelxieixynl", model.sessionInfo().get(0).dnn());
        Assertions.assertEquals(1686752311, model.sessionInfo().get(0).snssai().sst());
        Assertions.assertEquals("cwcrojphs", model.sessionInfo().get(0).snssai().sd());
        Assertions.assertEquals("cawjutifdwfmvi", model.sessionInfo().get(0).ueIpAddress().ipV4Addr());
        Assertions.assertEquals(PdnType.IPV4, model.sessionInfo().get(0).pdnType());
        Assertions.assertEquals("rqjb", model.sessionInfo().get(0).ambr().uplink());
        Assertions.assertEquals("tzh", model.sessionInfo().get(0).ambr().downlink());
        Assertions.assertEquals(864075629, model.sessionInfo().get(0).qosFlow().get(0).qfi());
        Assertions.assertEquals(1071081064, model.sessionInfo().get(0).qosFlow().get(0).fiveqi());
        Assertions.assertEquals("afhonqj", model.sessionInfo().get(0).qosFlow().get(0).mbr().uplink());
        Assertions.assertEquals("jeick", model.sessionInfo().get(0).qosFlow().get(0).mbr().downlink());
        Assertions.assertEquals("vcpopmxe", model.sessionInfo().get(0).qosFlow().get(0).gbr().uplink());
        Assertions.assertEquals("nwcl", model.sessionInfo().get(0).qosFlow().get(0).gbr().downlink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UeInfo5GProperties model = new UeInfo5GProperties().withSupi("hol")
            .withPei("jwiuubwefqsfapaq")
            .withFivegGuti(new Guti5G().withPlmn(new PlmnId().withMcc("ferr").withMnc("wexjkmfxapjwogq"))
                .withAmfId(new AmfId().withRegionId(1688417232).withSetId(211935178).withPointer(1928590225))
                .withFivegTmsi(775989398))
            .withConnectionInfo(new UeConnectionInfo5G()
                .withLocationInfo(new UeLocationInfo().withLocationType("cdabtqwpwya")
                    .withTac("bzasqbucljgkyexa")
                    .withPlmn(new PlmnId().withMcc("guyaip").withMnc("dsdaultxijjumf")))
                .withGlobalRanNodeId(new GlobalRanNodeId().withPlmnId(new PlmnId().withMcc("waz").withMnc("nqnm"))
                    .withGNbId(new GNbId().withBitLength(820423242).withGNBValue("qdqx"))
                    .withNgeNbId("jw")
                    .withENbId("yfu")
                    .withN3IwfId("zsvtuikzhajqgl")
                    .withWagfId("hm")
                    .withTngfId("qryxyn")
                    .withNid("zrdpsovwxznptgoe"))
                .withPerUeTnla("bbabp")
                .withAmfUeNgapId(1595321596345688459L)
                .withRanUeNgapId(82233778)
                .withLastVisitedTai("lkvn")
                .withAllowedNssai(Arrays.asList(new Snssai().withSst(1320093215).withSd("gjkskyrioov"),
                    new Snssai().withSst(1559336923).withSd("sxwaabzm"),
                    new Snssai().withSst(300950097).withSd("ygznmmaxrizk")))
                .withUeState(UeState.DETACHED)
                .withRrcEstablishmentCause(RrcEstablishmentCause.EMERGENCY)
                .withUeUsageSetting(UeUsageSetting.DATA_CENTRIC)
                .withLastActivityTime(OffsetDateTime.parse("2021-06-22T09:26:41Z")))
            .withSessionInfo(Arrays.asList(new UeSessionInfo5G().withPduSessionId(1598231142)
                .withDnn("lnelxieixynl")
                .withSnssai(new Snssai().withSst(1686752311).withSd("cwcrojphs"))
                .withUeIpAddress(new UeIpAddress().withIpV4Addr("cawjutifdwfmvi"))
                .withPdnType(PdnType.IPV4)
                .withAmbr(new Ambr().withUplink("rqjb").withDownlink("tzh"))
                .withQosFlow(Arrays.asList(
                    new UeQosFlow().withQfi(864075629)
                        .withFiveqi(1071081064)
                        .withMbr(new Ambr().withUplink("afhonqj").withDownlink("jeick"))
                        .withGbr(new Ambr().withUplink("vcpopmxe").withDownlink("nwcl")),
                    new UeQosFlow().withQfi(1288508818)
                        .withFiveqi(128430456)
                        .withMbr(new Ambr().withUplink("dexxmlfmkqscazua").withDownlink("xtzx"))
                        .withGbr(new Ambr().withUplink("amwabzxrvxcushsp").withDownlink("aivmxyasflvgs")),
                    new UeQosFlow().withQfi(1789512101)
                        .withFiveqi(826140742)
                        .withMbr(new Ambr().withUplink("wakoihkn").withDownlink("mjblmljhlny"))
                        .withGbr(new Ambr().withUplink("otqyry").withDownlink("zcbmqqvxmvwf"))))));
        model = BinaryData.fromObject(model).toObject(UeInfo5GProperties.class);
        Assertions.assertEquals("hol", model.supi());
        Assertions.assertEquals("jwiuubwefqsfapaq", model.pei());
        Assertions.assertEquals("ferr", model.fivegGuti().plmn().mcc());
        Assertions.assertEquals("wexjkmfxapjwogq", model.fivegGuti().plmn().mnc());
        Assertions.assertEquals(1688417232, model.fivegGuti().amfId().regionId());
        Assertions.assertEquals(211935178, model.fivegGuti().amfId().setId());
        Assertions.assertEquals(1928590225, model.fivegGuti().amfId().pointer());
        Assertions.assertEquals(775989398, model.fivegGuti().fivegTmsi());
        Assertions.assertEquals("cdabtqwpwya", model.connectionInfo().locationInfo().locationType());
        Assertions.assertEquals("bzasqbucljgkyexa", model.connectionInfo().locationInfo().tac());
        Assertions.assertEquals("guyaip", model.connectionInfo().locationInfo().plmn().mcc());
        Assertions.assertEquals("dsdaultxijjumf", model.connectionInfo().locationInfo().plmn().mnc());
        Assertions.assertEquals("waz", model.connectionInfo().globalRanNodeId().plmnId().mcc());
        Assertions.assertEquals("nqnm", model.connectionInfo().globalRanNodeId().plmnId().mnc());
        Assertions.assertEquals(820423242, model.connectionInfo().globalRanNodeId().gNbId().bitLength());
        Assertions.assertEquals("qdqx", model.connectionInfo().globalRanNodeId().gNbId().gNBValue());
        Assertions.assertEquals("jw", model.connectionInfo().globalRanNodeId().ngeNbId());
        Assertions.assertEquals("yfu", model.connectionInfo().globalRanNodeId().eNbId());
        Assertions.assertEquals("zsvtuikzhajqgl", model.connectionInfo().globalRanNodeId().n3IwfId());
        Assertions.assertEquals("hm", model.connectionInfo().globalRanNodeId().wagfId());
        Assertions.assertEquals("qryxyn", model.connectionInfo().globalRanNodeId().tngfId());
        Assertions.assertEquals("zrdpsovwxznptgoe", model.connectionInfo().globalRanNodeId().nid());
        Assertions.assertEquals("bbabp", model.connectionInfo().perUeTnla());
        Assertions.assertEquals(1595321596345688459L, model.connectionInfo().amfUeNgapId());
        Assertions.assertEquals(82233778, model.connectionInfo().ranUeNgapId());
        Assertions.assertEquals("lkvn", model.connectionInfo().lastVisitedTai());
        Assertions.assertEquals(1320093215, model.connectionInfo().allowedNssai().get(0).sst());
        Assertions.assertEquals("gjkskyrioov", model.connectionInfo().allowedNssai().get(0).sd());
        Assertions.assertEquals(UeState.DETACHED, model.connectionInfo().ueState());
        Assertions.assertEquals(RrcEstablishmentCause.EMERGENCY, model.connectionInfo().rrcEstablishmentCause());
        Assertions.assertEquals(UeUsageSetting.DATA_CENTRIC, model.connectionInfo().ueUsageSetting());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-22T09:26:41Z"),
            model.connectionInfo().lastActivityTime());
        Assertions.assertEquals(1598231142, model.sessionInfo().get(0).pduSessionId());
        Assertions.assertEquals("lnelxieixynl", model.sessionInfo().get(0).dnn());
        Assertions.assertEquals(1686752311, model.sessionInfo().get(0).snssai().sst());
        Assertions.assertEquals("cwcrojphs", model.sessionInfo().get(0).snssai().sd());
        Assertions.assertEquals("cawjutifdwfmvi", model.sessionInfo().get(0).ueIpAddress().ipV4Addr());
        Assertions.assertEquals(PdnType.IPV4, model.sessionInfo().get(0).pdnType());
        Assertions.assertEquals("rqjb", model.sessionInfo().get(0).ambr().uplink());
        Assertions.assertEquals("tzh", model.sessionInfo().get(0).ambr().downlink());
        Assertions.assertEquals(864075629, model.sessionInfo().get(0).qosFlow().get(0).qfi());
        Assertions.assertEquals(1071081064, model.sessionInfo().get(0).qosFlow().get(0).fiveqi());
        Assertions.assertEquals("afhonqj", model.sessionInfo().get(0).qosFlow().get(0).mbr().uplink());
        Assertions.assertEquals("jeick", model.sessionInfo().get(0).qosFlow().get(0).mbr().downlink());
        Assertions.assertEquals("vcpopmxe", model.sessionInfo().get(0).qosFlow().get(0).gbr().uplink());
        Assertions.assertEquals("nwcl", model.sessionInfo().get(0).qosFlow().get(0).gbr().downlink());
    }
}
