// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.fluent.models.Snssai;
import com.azure.resourcemanager.mobilenetwork.fluent.models.UeInfo5GProperties;
import com.azure.resourcemanager.mobilenetwork.models.PdnType;
import com.azure.resourcemanager.mobilenetwork.models.RrcEstablishmentCause;
import com.azure.resourcemanager.mobilenetwork.models.UeQosFlow;
import com.azure.resourcemanager.mobilenetwork.models.UeSessionInfo5G;
import com.azure.resourcemanager.mobilenetwork.models.UeState;
import com.azure.resourcemanager.mobilenetwork.models.UeUsageSetting;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UeInfo5GPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UeInfo5GProperties model = BinaryData.fromString(
            "{\"supi\":\"qikfxcv\",\"pei\":\"fsphuagrttikt\",\"fivegGuti\":{\"plmn\":{\"mcc\":\"usqczkvy\",\"mnc\":\"lxubyj\"},\"amfId\":{\"regionId\":490127820,\"setId\":472498299,\"pointer\":1774375239},\"fivegTmsi\":716445965},\"connectionInfo\":{\"locationInfo\":{\"locationType\":\"lcqcuubgqibrt\",\"tac\":\"lmetttwgdslqxi\",\"plmn\":{\"mcc\":\"hrmooi\",\"mnc\":\"qseypxiutcxa\"}},\"globalRanNodeId\":{\"plmnId\":{\"mcc\":\"zhyrpeto\",\"mnc\":\"e\"},\"gNbId\":{\"bitLength\":1642454169,\"gNBValue\":\"lhvnhlab\"},\"ngeNbId\":\"nk\",\"eNbId\":\"jcjbt\",\"n3IwfId\":\"aehvvibrxjjstoq\",\"wagfId\":\"it\",\"tngfId\":\"xztmo\",\"nid\":\"klf\"},\"perUeTnla\":\"dgfcwqmp\",\"amfUeNgapId\":2829270092150598933,\"ranUeNgapId\":1479549397,\"lastVisitedTai\":\"zhe\",\"allowedNssai\":[{\"sst\":107725068,\"sd\":\"hujswtwkozzwcul\"},{\"sst\":1771791056,\"sd\":\"wpfaj\"},{\"sst\":654985035,\"sd\":\"ltlwtjjguktalhs\"},{\"sst\":2060151419,\"sd\":\"cdmxzrpoaiml\"}],\"ueState\":\"Detached\",\"rrcEstablishmentCause\":\"Emergency\",\"ueUsageSetting\":\"VoiceCentric\",\"lastActivityTime\":\"2021-12-05T18:05:26Z\"},\"sessionInfo\":[{\"pduSessionId\":1405503758,\"dnn\":\"eazulcs\",\"snssai\":{\"sst\":1226042956,\"sd\":\"wwnpj\"},\"ueIpAddress\":{\"ipV4Addr\":\"fz\"},\"pdnType\":\"IPV4\",\"ambr\":{\"uplink\":\"pchwa\",\"downlink\":\"fb\"},\"qosFlow\":[{\"qfi\":1658070092,\"fiveqi\":1497864768,\"mbr\":{\"uplink\":\"epgfew\",\"downlink\":\"twly\"},\"gbr\":{\"uplink\":\"ncxykxhdjhlimm\",\"downlink\":\"cxfhbcporxv\"}},{\"qfi\":1548715838,\"fiveqi\":637127144,\"mbr\":{\"uplink\":\"hqizxfpxtgqscj\",\"downlink\":\"vftjuhd\"},\"gbr\":{\"uplink\":\"zkmtgguwpijrajci\",\"downlink\":\"m\"}},{\"qfi\":1977689221,\"fiveqi\":1010868676,\"mbr\":{\"uplink\":\"cf\",\"downlink\":\"wrxgkneuvy\"},\"gbr\":{\"uplink\":\"zqodfvpgshox\",\"downlink\":\"sgbpfgzdjtx\"}}]}]}")
            .toObject(UeInfo5GProperties.class);
        Assertions.assertEquals("qikfxcv", model.supi());
        Assertions.assertEquals("fsphuagrttikt", model.pei());
        Assertions.assertEquals(1405503758, model.sessionInfo().get(0).pduSessionId());
        Assertions.assertEquals("eazulcs", model.sessionInfo().get(0).dnn());
        Assertions.assertEquals(PdnType.IPV4, model.sessionInfo().get(0).pdnType());
        Assertions.assertEquals(1658070092, model.sessionInfo().get(0).qosFlow().get(0).qfi());
        Assertions.assertEquals(1497864768, model.sessionInfo().get(0).qosFlow().get(0).fiveqi());
        Assertions.assertEquals("epgfew", model.sessionInfo().get(0).qosFlow().get(0).uplink());
        Assertions.assertEquals("twly", model.sessionInfo().get(0).qosFlow().get(0).downlink());
        Assertions.assertEquals("ncxykxhdjhlimm", model.sessionInfo().get(0).qosFlow().get(0).uplinkGbrUplink());
        Assertions.assertEquals("cxfhbcporxv", model.sessionInfo().get(0).qosFlow().get(0).downlinkGbrDownlink());
        Assertions.assertEquals(1226042956, model.sessionInfo().get(0).sst());
        Assertions.assertEquals("wwnpj", model.sessionInfo().get(0).sd());
        Assertions.assertEquals("fz", model.sessionInfo().get(0).ipV4Addr());
        Assertions.assertEquals("pchwa", model.sessionInfo().get(0).uplink());
        Assertions.assertEquals("fb", model.sessionInfo().get(0).downlink());
        Assertions.assertEquals(716445965, model.fivegTmsi());
        Assertions.assertEquals("usqczkvy", model.mcc());
        Assertions.assertEquals("lxubyj", model.mnc());
        Assertions.assertEquals(490127820, model.regionId());
        Assertions.assertEquals(472498299, model.setId());
        Assertions.assertEquals(1774375239, model.pointer());
        Assertions.assertEquals("dgfcwqmp", model.perUeTnla());
        Assertions.assertEquals(2829270092150598933L, model.amfUeNgapId());
        Assertions.assertEquals(1479549397, model.ranUeNgapId());
        Assertions.assertEquals("zhe", model.lastVisitedTai());
        Assertions.assertEquals(107725068, model.allowedNssai().get(0).sst());
        Assertions.assertEquals("hujswtwkozzwcul", model.allowedNssai().get(0).sd());
        Assertions.assertEquals(UeState.DETACHED, model.ueState());
        Assertions.assertEquals(RrcEstablishmentCause.EMERGENCY, model.rrcEstablishmentCause());
        Assertions.assertEquals(UeUsageSetting.VOICE_CENTRIC, model.ueUsageSetting());
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-05T18:05:26Z"), model.lastActivityTime());
        Assertions.assertEquals("lcqcuubgqibrt", model.locationType());
        Assertions.assertEquals("lmetttwgdslqxi", model.tac());
        Assertions.assertEquals("hrmooi", model.mccConnectionInfoMcc());
        Assertions.assertEquals("qseypxiutcxa", model.mncConnectionInfoMnc());
        Assertions.assertEquals("nk", model.ngeNbId());
        Assertions.assertEquals("jcjbt", model.eNbId());
        Assertions.assertEquals("aehvvibrxjjstoq", model.n3IwfId());
        Assertions.assertEquals("it", model.wagfId());
        Assertions.assertEquals("xztmo", model.tngfId());
        Assertions.assertEquals("klf", model.nid());
        Assertions.assertEquals("zhyrpeto", model.mccGlobalRanNodeIdMcc());
        Assertions.assertEquals("e", model.mncGlobalRanNodeIdMnc());
        Assertions.assertEquals(1642454169, model.bitLength());
        Assertions.assertEquals("lhvnhlab", model.gNBValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UeInfo5GProperties model = new UeInfo5GProperties().withSupi("qikfxcv").withPei("fsphuagrttikt")
            .withSessionInfo(Arrays.asList(new UeSessionInfo5G().withPduSessionId(1405503758).withDnn("eazulcs")
                .withPdnType(PdnType.IPV4)
                .withQosFlow(Arrays.asList(
                    new UeQosFlow().withQfi(1658070092).withFiveqi(1497864768).withUplink("epgfew").withDownlink("twly")
                        .withUplinkGbrUplink("ncxykxhdjhlimm").withDownlinkGbrDownlink("cxfhbcporxv"),
                    new UeQosFlow().withQfi(1548715838).withFiveqi(637127144).withUplink("hqizxfpxtgqscj")
                        .withDownlink("vftjuhd").withUplinkGbrUplink("zkmtgguwpijrajci").withDownlinkGbrDownlink("m"),
                    new UeQosFlow().withQfi(1977689221).withFiveqi(1010868676).withUplink("cf")
                        .withDownlink("wrxgkneuvy").withUplinkGbrUplink("zqodfvpgshox")
                        .withDownlinkGbrDownlink("sgbpfgzdjtx")))
                .withSst(1226042956).withSd("wwnpj").withIpV4Addr("fz").withUplink("pchwa").withDownlink("fb")))
            .withFivegTmsi(716445965).withMcc("usqczkvy").withMnc("lxubyj").withRegionId(490127820).withSetId(472498299)
            .withPointer(1774375239).withPerUeTnla("dgfcwqmp").withAmfUeNgapId(2829270092150598933L)
            .withRanUeNgapId(1479549397).withLastVisitedTai("zhe")
            .withAllowedNssai(Arrays.asList(new Snssai().withSst(107725068).withSd("hujswtwkozzwcul"),
                new Snssai().withSst(1771791056).withSd("wpfaj"),
                new Snssai().withSst(654985035).withSd("ltlwtjjguktalhs"),
                new Snssai().withSst(2060151419).withSd("cdmxzrpoaiml")))
            .withUeState(UeState.DETACHED).withRrcEstablishmentCause(RrcEstablishmentCause.EMERGENCY)
            .withUeUsageSetting(UeUsageSetting.VOICE_CENTRIC)
            .withLastActivityTime(OffsetDateTime.parse("2021-12-05T18:05:26Z")).withLocationType("lcqcuubgqibrt")
            .withTac("lmetttwgdslqxi").withMccConnectionInfoMcc("hrmooi").withMncConnectionInfoMnc("qseypxiutcxa")
            .withNgeNbId("nk").withENbId("jcjbt").withN3IwfId("aehvvibrxjjstoq").withWagfId("it").withTngfId("xztmo")
            .withNid("klf").withMccGlobalRanNodeIdMcc("zhyrpeto").withMncGlobalRanNodeIdMnc("e")
            .withBitLength(1642454169).withGNBValue("lhvnhlab");
        model = BinaryData.fromObject(model).toObject(UeInfo5GProperties.class);
        Assertions.assertEquals("qikfxcv", model.supi());
        Assertions.assertEquals("fsphuagrttikt", model.pei());
        Assertions.assertEquals(1405503758, model.sessionInfo().get(0).pduSessionId());
        Assertions.assertEquals("eazulcs", model.sessionInfo().get(0).dnn());
        Assertions.assertEquals(PdnType.IPV4, model.sessionInfo().get(0).pdnType());
        Assertions.assertEquals(1658070092, model.sessionInfo().get(0).qosFlow().get(0).qfi());
        Assertions.assertEquals(1497864768, model.sessionInfo().get(0).qosFlow().get(0).fiveqi());
        Assertions.assertEquals("epgfew", model.sessionInfo().get(0).qosFlow().get(0).uplink());
        Assertions.assertEquals("twly", model.sessionInfo().get(0).qosFlow().get(0).downlink());
        Assertions.assertEquals("ncxykxhdjhlimm", model.sessionInfo().get(0).qosFlow().get(0).uplinkGbrUplink());
        Assertions.assertEquals("cxfhbcporxv", model.sessionInfo().get(0).qosFlow().get(0).downlinkGbrDownlink());
        Assertions.assertEquals(1226042956, model.sessionInfo().get(0).sst());
        Assertions.assertEquals("wwnpj", model.sessionInfo().get(0).sd());
        Assertions.assertEquals("fz", model.sessionInfo().get(0).ipV4Addr());
        Assertions.assertEquals("pchwa", model.sessionInfo().get(0).uplink());
        Assertions.assertEquals("fb", model.sessionInfo().get(0).downlink());
        Assertions.assertEquals(716445965, model.fivegTmsi());
        Assertions.assertEquals("usqczkvy", model.mcc());
        Assertions.assertEquals("lxubyj", model.mnc());
        Assertions.assertEquals(490127820, model.regionId());
        Assertions.assertEquals(472498299, model.setId());
        Assertions.assertEquals(1774375239, model.pointer());
        Assertions.assertEquals("dgfcwqmp", model.perUeTnla());
        Assertions.assertEquals(2829270092150598933L, model.amfUeNgapId());
        Assertions.assertEquals(1479549397, model.ranUeNgapId());
        Assertions.assertEquals("zhe", model.lastVisitedTai());
        Assertions.assertEquals(107725068, model.allowedNssai().get(0).sst());
        Assertions.assertEquals("hujswtwkozzwcul", model.allowedNssai().get(0).sd());
        Assertions.assertEquals(UeState.DETACHED, model.ueState());
        Assertions.assertEquals(RrcEstablishmentCause.EMERGENCY, model.rrcEstablishmentCause());
        Assertions.assertEquals(UeUsageSetting.VOICE_CENTRIC, model.ueUsageSetting());
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-05T18:05:26Z"), model.lastActivityTime());
        Assertions.assertEquals("lcqcuubgqibrt", model.locationType());
        Assertions.assertEquals("lmetttwgdslqxi", model.tac());
        Assertions.assertEquals("hrmooi", model.mccConnectionInfoMcc());
        Assertions.assertEquals("qseypxiutcxa", model.mncConnectionInfoMnc());
        Assertions.assertEquals("nk", model.ngeNbId());
        Assertions.assertEquals("jcjbt", model.eNbId());
        Assertions.assertEquals("aehvvibrxjjstoq", model.n3IwfId());
        Assertions.assertEquals("it", model.wagfId());
        Assertions.assertEquals("xztmo", model.tngfId());
        Assertions.assertEquals("klf", model.nid());
        Assertions.assertEquals("zhyrpeto", model.mccGlobalRanNodeIdMcc());
        Assertions.assertEquals("e", model.mncGlobalRanNodeIdMnc());
        Assertions.assertEquals(1642454169, model.bitLength());
        Assertions.assertEquals("lhvnhlab", model.gNBValue());
    }
}
