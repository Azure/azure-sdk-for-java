// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.models.Ambr;
import com.azure.resourcemanager.mobilenetwork.models.DataNetworkConfiguration;
import com.azure.resourcemanager.mobilenetwork.models.DataNetworkResourceId;
import com.azure.resourcemanager.mobilenetwork.models.PduSessionType;
import com.azure.resourcemanager.mobilenetwork.models.PreemptionCapability;
import com.azure.resourcemanager.mobilenetwork.models.PreemptionVulnerability;
import com.azure.resourcemanager.mobilenetwork.models.ServiceResourceId;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DataNetworkConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataNetworkConfiguration model =
            BinaryData
                .fromString(
                    "{\"dataNetwork\":{\"id\":\"hihihlhzdsqtzbsr\"},\"sessionAmbr\":{\"uplink\":\"nowc\",\"downlink\":\"hfgmvecactxm\"},\"5qi\":2043767833,\"allocationAndRetentionPriorityLevel\":966273213,\"preemptionCapability\":\"MayPreempt\",\"preemptionVulnerability\":\"Preemptable\",\"defaultSessionType\":\"IPv6\",\"additionalAllowedSessionTypes\":[\"IPv6\",\"IPv4\"],\"allowedServices\":[{\"id\":\"vgqouwifzmpj\"},{\"id\":\"yivqikfxcvhrfsp\"}],\"maximumNumberOfBufferedPackets\":754601836}")
                .toObject(DataNetworkConfiguration.class);
        Assertions.assertEquals("hihihlhzdsqtzbsr", model.dataNetwork().id());
        Assertions.assertEquals("nowc", model.sessionAmbr().uplink());
        Assertions.assertEquals("hfgmvecactxm", model.sessionAmbr().downlink());
        Assertions.assertEquals(2043767833, model.fiveQi());
        Assertions.assertEquals(966273213, model.allocationAndRetentionPriorityLevel());
        Assertions.assertEquals(PreemptionCapability.MAY_PREEMPT, model.preemptionCapability());
        Assertions.assertEquals(PreemptionVulnerability.PREEMPTABLE, model.preemptionVulnerability());
        Assertions.assertEquals(PduSessionType.IPV6, model.defaultSessionType());
        Assertions.assertEquals(PduSessionType.IPV6, model.additionalAllowedSessionTypes().get(0));
        Assertions.assertEquals("vgqouwifzmpj", model.allowedServices().get(0).id());
        Assertions.assertEquals(754601836, model.maximumNumberOfBufferedPackets());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataNetworkConfiguration model =
            new DataNetworkConfiguration()
                .withDataNetwork(new DataNetworkResourceId().withId("hihihlhzdsqtzbsr"))
                .withSessionAmbr(new Ambr().withUplink("nowc").withDownlink("hfgmvecactxm"))
                .withFiveQi(2043767833)
                .withAllocationAndRetentionPriorityLevel(966273213)
                .withPreemptionCapability(PreemptionCapability.MAY_PREEMPT)
                .withPreemptionVulnerability(PreemptionVulnerability.PREEMPTABLE)
                .withDefaultSessionType(PduSessionType.IPV6)
                .withAdditionalAllowedSessionTypes(Arrays.asList(PduSessionType.IPV6, PduSessionType.IPV4))
                .withAllowedServices(
                    Arrays
                        .asList(
                            new ServiceResourceId().withId("vgqouwifzmpj"),
                            new ServiceResourceId().withId("yivqikfxcvhrfsp")))
                .withMaximumNumberOfBufferedPackets(754601836);
        model = BinaryData.fromObject(model).toObject(DataNetworkConfiguration.class);
        Assertions.assertEquals("hihihlhzdsqtzbsr", model.dataNetwork().id());
        Assertions.assertEquals("nowc", model.sessionAmbr().uplink());
        Assertions.assertEquals("hfgmvecactxm", model.sessionAmbr().downlink());
        Assertions.assertEquals(2043767833, model.fiveQi());
        Assertions.assertEquals(966273213, model.allocationAndRetentionPriorityLevel());
        Assertions.assertEquals(PreemptionCapability.MAY_PREEMPT, model.preemptionCapability());
        Assertions.assertEquals(PreemptionVulnerability.PREEMPTABLE, model.preemptionVulnerability());
        Assertions.assertEquals(PduSessionType.IPV6, model.defaultSessionType());
        Assertions.assertEquals(PduSessionType.IPV6, model.additionalAllowedSessionTypes().get(0));
        Assertions.assertEquals("vgqouwifzmpj", model.allowedServices().get(0).id());
        Assertions.assertEquals(754601836, model.maximumNumberOfBufferedPackets());
    }
}
