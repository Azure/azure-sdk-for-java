// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.fluent.models.UeInfoInner;
import com.azure.resourcemanager.mobilenetwork.models.DnnIpPair;
import com.azure.resourcemanager.mobilenetwork.models.RatType;
import com.azure.resourcemanager.mobilenetwork.models.UeInfoList;
import com.azure.resourcemanager.mobilenetwork.models.UeInfoPropertiesFormat;
import com.azure.resourcemanager.mobilenetwork.models.UeIpAddress;
import com.azure.resourcemanager.mobilenetwork.models.UeState;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UeInfoListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UeInfoList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"ratType\":\"4G\",\"ueState\":\"Connected\",\"ueIpAddresses\":[{\"dnn\":\"aecxndtic\",\"ueIpAddress\":{}}],\"lastReadAt\":\"2021-12-05T04:32:03Z\"},\"id\":\"mlqtmldgxob\",\"name\":\"irclnpk\",\"type\":\"iayz\"}],\"nextLink\":\"ykhyawfvjlboxqvk\"}")
            .toObject(UeInfoList.class);
        Assertions.assertEquals(RatType.FOURG, model.value().get(0).properties().ratType());
        Assertions.assertEquals(UeState.CONNECTED, model.value().get(0).properties().ueState());
        Assertions.assertEquals("aecxndtic", model.value().get(0).properties().ueIpAddresses().get(0).dnn());
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-05T04:32:03Z"),
            model.value().get(0).properties().lastReadAt());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UeInfoList model = new UeInfoList().withValue(Arrays.asList(new UeInfoInner()
            .withProperties(new UeInfoPropertiesFormat().withRatType(RatType.FOURG).withUeState(UeState.CONNECTED)
                .withUeIpAddresses(
                    Arrays.asList(new DnnIpPair().withDnn("aecxndtic").withUeIpAddress(new UeIpAddress())))
                .withLastReadAt(OffsetDateTime.parse("2021-12-05T04:32:03Z")))));
        model = BinaryData.fromObject(model).toObject(UeInfoList.class);
        Assertions.assertEquals(RatType.FOURG, model.value().get(0).properties().ratType());
        Assertions.assertEquals(UeState.CONNECTED, model.value().get(0).properties().ueState());
        Assertions.assertEquals("aecxndtic", model.value().get(0).properties().ueIpAddresses().get(0).dnn());
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-05T04:32:03Z"),
            model.value().get(0).properties().lastReadAt());
    }
}
