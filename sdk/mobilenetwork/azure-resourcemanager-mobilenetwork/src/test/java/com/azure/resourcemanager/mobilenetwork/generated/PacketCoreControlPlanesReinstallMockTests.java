// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mobilenetwork.MobileNetworkManager;
import com.azure.resourcemanager.mobilenetwork.models.AsyncOperationStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PacketCoreControlPlanesReinstallMockTests {
    @Test
    public void testReinstall() throws Exception {
        String responseStr
            = "{\"id\":\"ueq\",\"name\":\"wmgn\",\"status\":\"b\",\"resourceId\":\"bbxi\",\"startTime\":\"2021-03-27T01:36:05Z\",\"endTime\":\"2021-10-09T23:24:03Z\",\"percentComplete\":2.684475263142383,\"properties\":\"datapedbwdpyqy\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MobileNetworkManager manager = MobileNetworkManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        AsyncOperationStatus response
            = manager.packetCoreControlPlanes().reinstall("jqoyueayfbpcm", "plby", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ueq", response.id());
        Assertions.assertEquals("wmgn", response.name());
        Assertions.assertEquals("b", response.status());
        Assertions.assertEquals("bbxi", response.resourceId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-27T01:36:05Z"), response.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-09T23:24:03Z"), response.endTime());
        Assertions.assertEquals(2.684475263142383D, response.percentComplete());
    }
}
