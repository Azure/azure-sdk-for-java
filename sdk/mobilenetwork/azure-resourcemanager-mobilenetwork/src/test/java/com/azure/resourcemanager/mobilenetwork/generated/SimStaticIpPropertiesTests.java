// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.models.AttachedDataNetworkResourceId;
import com.azure.resourcemanager.mobilenetwork.models.SimStaticIpProperties;
import com.azure.resourcemanager.mobilenetwork.models.SimStaticIpPropertiesStaticIp;
import com.azure.resourcemanager.mobilenetwork.models.SliceResourceId;
import org.junit.jupiter.api.Assertions;

public final class SimStaticIpPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SimStaticIpProperties model =
            BinaryData
                .fromString(
                    "{\"attachedDataNetwork\":{\"id\":\"w\"},\"slice\":{\"id\":\"nfqn\"},\"staticIp\":{\"ipv4Address\":\"psxjvf\"}}")
                .toObject(SimStaticIpProperties.class);
        Assertions.assertEquals("w", model.attachedDataNetwork().id());
        Assertions.assertEquals("nfqn", model.slice().id());
        Assertions.assertEquals("psxjvf", model.staticIp().ipv4Address());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SimStaticIpProperties model =
            new SimStaticIpProperties()
                .withAttachedDataNetwork(new AttachedDataNetworkResourceId().withId("w"))
                .withSlice(new SliceResourceId().withId("nfqn"))
                .withStaticIp(new SimStaticIpPropertiesStaticIp().withIpv4Address("psxjvf"));
        model = BinaryData.fromObject(model).toObject(SimStaticIpProperties.class);
        Assertions.assertEquals("w", model.attachedDataNetwork().id());
        Assertions.assertEquals("nfqn", model.slice().id());
        Assertions.assertEquals("psxjvf", model.staticIp().ipv4Address());
    }
}
