// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.fluent.models.DataNetworkInner;
import com.azure.resourcemanager.mobilenetwork.models.DataNetworkListResult;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class DataNetworkListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataNetworkListResult model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"provisioningState\":\"Unknown\",\"description\":\"fqpte\"},\"location\":\"zzvypyqrimzinp\",\"tags\":{\"crmnohjtckwhds\":\"jdkirsoodqx\"},\"id\":\"ifiyipjxsqwpgrj\",\"name\":\"znorcj\",\"type\":\"vsnb\"},{\"properties\":{\"provisioningState\":\"Canceled\",\"description\":\"nmoc\"},\"location\":\"ysh\",\"tags\":{\"javbqidtqajz\":\"afbljjgpbtoqcjmk\"},\"id\":\"ulpkudjkrl\",\"name\":\"hbzhfepg\",\"type\":\"gqexzlocxs\"}],\"nextLink\":\"aierhhb\"}")
                .toObject(DataNetworkListResult.class);
        Assertions.assertEquals("zzvypyqrimzinp", model.value().get(0).location());
        Assertions.assertEquals("jdkirsoodqx", model.value().get(0).tags().get("crmnohjtckwhds"));
        Assertions.assertEquals("fqpte", model.value().get(0).description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataNetworkListResult model =
            new DataNetworkListResult()
                .withValue(
                    Arrays
                        .asList(
                            new DataNetworkInner()
                                .withLocation("zzvypyqrimzinp")
                                .withTags(mapOf("crmnohjtckwhds", "jdkirsoodqx"))
                                .withDescription("fqpte"),
                            new DataNetworkInner()
                                .withLocation("ysh")
                                .withTags(mapOf("javbqidtqajz", "afbljjgpbtoqcjmk"))
                                .withDescription("nmoc")));
        model = BinaryData.fromObject(model).toObject(DataNetworkListResult.class);
        Assertions.assertEquals("zzvypyqrimzinp", model.value().get(0).location());
        Assertions.assertEquals("jdkirsoodqx", model.value().get(0).tags().get("crmnohjtckwhds"));
        Assertions.assertEquals("fqpte", model.value().get(0).description());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
