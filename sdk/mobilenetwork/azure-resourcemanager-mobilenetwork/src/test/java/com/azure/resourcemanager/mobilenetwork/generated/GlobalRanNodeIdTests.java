// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mobilenetwork.fluent.models.GlobalRanNodeId;
import org.junit.jupiter.api.Assertions;

public final class GlobalRanNodeIdTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GlobalRanNodeId model = BinaryData.fromString(
            "{\"plmnId\":{\"mcc\":\"mtk\",\"mnc\":\"bo\"},\"gNbId\":{\"bitLength\":1558773691,\"gNBValue\":\"dxzxhi\"},\"ngeNbId\":\"rbbcevq\",\"eNbId\":\"tltdhlfkqojpy\",\"n3IwfId\":\"gtrd\",\"wagfId\":\"ifmzzsd\",\"tngfId\":\"brn\",\"nid\":\"u\"}")
            .toObject(GlobalRanNodeId.class);
        Assertions.assertEquals("rbbcevq", model.ngeNbId());
        Assertions.assertEquals("tltdhlfkqojpy", model.eNbId());
        Assertions.assertEquals("gtrd", model.n3IwfId());
        Assertions.assertEquals("ifmzzsd", model.wagfId());
        Assertions.assertEquals("brn", model.tngfId());
        Assertions.assertEquals("u", model.nid());
        Assertions.assertEquals("mtk", model.mcc());
        Assertions.assertEquals("bo", model.mnc());
        Assertions.assertEquals(1558773691, model.bitLength());
        Assertions.assertEquals("dxzxhi", model.gNBValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GlobalRanNodeId model = new GlobalRanNodeId().withNgeNbId("rbbcevq").withENbId("tltdhlfkqojpy")
            .withN3IwfId("gtrd").withWagfId("ifmzzsd").withTngfId("brn").withNid("u").withMcc("mtk").withMnc("bo")
            .withBitLength(1558773691).withGNBValue("dxzxhi");
        model = BinaryData.fromObject(model).toObject(GlobalRanNodeId.class);
        Assertions.assertEquals("rbbcevq", model.ngeNbId());
        Assertions.assertEquals("tltdhlfkqojpy", model.eNbId());
        Assertions.assertEquals("gtrd", model.n3IwfId());
        Assertions.assertEquals("ifmzzsd", model.wagfId());
        Assertions.assertEquals("brn", model.tngfId());
        Assertions.assertEquals("u", model.nid());
        Assertions.assertEquals("mtk", model.mcc());
        Assertions.assertEquals("bo", model.mnc());
        Assertions.assertEquals(1558773691, model.bitLength());
        Assertions.assertEquals("dxzxhi", model.gNBValue());
    }
}
