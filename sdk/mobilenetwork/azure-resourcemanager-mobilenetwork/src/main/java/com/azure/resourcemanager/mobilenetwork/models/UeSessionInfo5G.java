// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * UE Session Info for 5G.
 */
@Fluent
public final class UeSessionInfo5G implements JsonSerializable<UeSessionInfo5G> {
    /*
     * PDU session identifier
     */
    private int pduSessionId;

    /*
     * Data network name
     */
    private String dnn;

    /*
     * Single-network slice selection assistance information (S-NSSAI).
     */
    private Snssai snssai;

    /*
     * UE IP address
     */
    private UeIpAddress ueIpAddress;

    /*
     * Packet Data Network Type
     */
    private PdnType pdnType;

    /*
     * Aggregate maximum bit rate.
     */
    private Ambr ambr;

    /*
     * The qosFlow property.
     */
    private List<UeQosFlow> qosFlow;

    /**
     * Creates an instance of UeSessionInfo5G class.
     */
    public UeSessionInfo5G() {
    }

    /**
     * Get the pduSessionId property: PDU session identifier.
     * 
     * @return the pduSessionId value.
     */
    public int pduSessionId() {
        return this.pduSessionId;
    }

    /**
     * Set the pduSessionId property: PDU session identifier.
     * 
     * @param pduSessionId the pduSessionId value to set.
     * @return the UeSessionInfo5G object itself.
     */
    public UeSessionInfo5G withPduSessionId(int pduSessionId) {
        this.pduSessionId = pduSessionId;
        return this;
    }

    /**
     * Get the dnn property: Data network name.
     * 
     * @return the dnn value.
     */
    public String dnn() {
        return this.dnn;
    }

    /**
     * Set the dnn property: Data network name.
     * 
     * @param dnn the dnn value to set.
     * @return the UeSessionInfo5G object itself.
     */
    public UeSessionInfo5G withDnn(String dnn) {
        this.dnn = dnn;
        return this;
    }

    /**
     * Get the snssai property: Single-network slice selection assistance information (S-NSSAI).
     * 
     * @return the snssai value.
     */
    public Snssai snssai() {
        return this.snssai;
    }

    /**
     * Set the snssai property: Single-network slice selection assistance information (S-NSSAI).
     * 
     * @param snssai the snssai value to set.
     * @return the UeSessionInfo5G object itself.
     */
    public UeSessionInfo5G withSnssai(Snssai snssai) {
        this.snssai = snssai;
        return this;
    }

    /**
     * Get the ueIpAddress property: UE IP address.
     * 
     * @return the ueIpAddress value.
     */
    public UeIpAddress ueIpAddress() {
        return this.ueIpAddress;
    }

    /**
     * Set the ueIpAddress property: UE IP address.
     * 
     * @param ueIpAddress the ueIpAddress value to set.
     * @return the UeSessionInfo5G object itself.
     */
    public UeSessionInfo5G withUeIpAddress(UeIpAddress ueIpAddress) {
        this.ueIpAddress = ueIpAddress;
        return this;
    }

    /**
     * Get the pdnType property: Packet Data Network Type.
     * 
     * @return the pdnType value.
     */
    public PdnType pdnType() {
        return this.pdnType;
    }

    /**
     * Set the pdnType property: Packet Data Network Type.
     * 
     * @param pdnType the pdnType value to set.
     * @return the UeSessionInfo5G object itself.
     */
    public UeSessionInfo5G withPdnType(PdnType pdnType) {
        this.pdnType = pdnType;
        return this;
    }

    /**
     * Get the ambr property: Aggregate maximum bit rate.
     * 
     * @return the ambr value.
     */
    public Ambr ambr() {
        return this.ambr;
    }

    /**
     * Set the ambr property: Aggregate maximum bit rate.
     * 
     * @param ambr the ambr value to set.
     * @return the UeSessionInfo5G object itself.
     */
    public UeSessionInfo5G withAmbr(Ambr ambr) {
        this.ambr = ambr;
        return this;
    }

    /**
     * Get the qosFlow property: The qosFlow property.
     * 
     * @return the qosFlow value.
     */
    public List<UeQosFlow> qosFlow() {
        return this.qosFlow;
    }

    /**
     * Set the qosFlow property: The qosFlow property.
     * 
     * @param qosFlow the qosFlow value to set.
     * @return the UeSessionInfo5G object itself.
     */
    public UeSessionInfo5G withQosFlow(List<UeQosFlow> qosFlow) {
        this.qosFlow = qosFlow;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (dnn() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property dnn in model UeSessionInfo5G"));
        }
        if (snssai() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property snssai in model UeSessionInfo5G"));
        } else {
            snssai().validate();
        }
        if (ueIpAddress() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property ueIpAddress in model UeSessionInfo5G"));
        } else {
            ueIpAddress().validate();
        }
        if (pdnType() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property pdnType in model UeSessionInfo5G"));
        }
        if (ambr() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property ambr in model UeSessionInfo5G"));
        } else {
            ambr().validate();
        }
        if (qosFlow() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property qosFlow in model UeSessionInfo5G"));
        } else {
            qosFlow().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(UeSessionInfo5G.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeIntField("pduSessionId", this.pduSessionId);
        jsonWriter.writeStringField("dnn", this.dnn);
        jsonWriter.writeJsonField("snssai", this.snssai);
        jsonWriter.writeJsonField("ueIpAddress", this.ueIpAddress);
        jsonWriter.writeStringField("pdnType", this.pdnType == null ? null : this.pdnType.toString());
        jsonWriter.writeJsonField("ambr", this.ambr);
        jsonWriter.writeArrayField("qosFlow", this.qosFlow, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of UeSessionInfo5G from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of UeSessionInfo5G if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the UeSessionInfo5G.
     */
    public static UeSessionInfo5G fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            UeSessionInfo5G deserializedUeSessionInfo5G = new UeSessionInfo5G();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("pduSessionId".equals(fieldName)) {
                    deserializedUeSessionInfo5G.pduSessionId = reader.getInt();
                } else if ("dnn".equals(fieldName)) {
                    deserializedUeSessionInfo5G.dnn = reader.getString();
                } else if ("snssai".equals(fieldName)) {
                    deserializedUeSessionInfo5G.snssai = Snssai.fromJson(reader);
                } else if ("ueIpAddress".equals(fieldName)) {
                    deserializedUeSessionInfo5G.ueIpAddress = UeIpAddress.fromJson(reader);
                } else if ("pdnType".equals(fieldName)) {
                    deserializedUeSessionInfo5G.pdnType = PdnType.fromString(reader.getString());
                } else if ("ambr".equals(fieldName)) {
                    deserializedUeSessionInfo5G.ambr = Ambr.fromJson(reader);
                } else if ("qosFlow".equals(fieldName)) {
                    List<UeQosFlow> qosFlow = reader.readArray(reader1 -> UeQosFlow.fromJson(reader1));
                    deserializedUeSessionInfo5G.qosFlow = qosFlow;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedUeSessionInfo5G;
        });
    }
}
