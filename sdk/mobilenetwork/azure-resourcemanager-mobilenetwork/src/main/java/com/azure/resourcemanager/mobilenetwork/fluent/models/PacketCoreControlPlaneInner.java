// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.mobilenetwork.models.CoreNetworkType;
import com.azure.resourcemanager.mobilenetwork.models.CustomLocationResourceId;
import com.azure.resourcemanager.mobilenetwork.models.InterfaceProperties;
import com.azure.resourcemanager.mobilenetwork.models.MobileNetworkResourceId;
import com.azure.resourcemanager.mobilenetwork.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Packet core control plane resource. */
@Fluent
public final class PacketCoreControlPlaneInner extends Resource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(PacketCoreControlPlaneInner.class);

    /*
     * Packet core control plane Properties.
     */
    @JsonProperty(value = "properties", required = true)
    private PacketCoreControlPlanePropertiesFormat innerProperties = new PacketCoreControlPlanePropertiesFormat();

    /*
     * Metadata pertaining to creation and last modification of the resource.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData innerSystemData;

    /**
     * Get the innerProperties property: Packet core control plane Properties.
     *
     * @return the innerProperties value.
     */
    private PacketCoreControlPlanePropertiesFormat innerProperties() {
        return this.innerProperties;
    }

//    /**
//     * Get the innerSystemData property: Metadata pertaining to creation and last modification of the resource.
//     *
//     * @return the innerSystemData value.
//     */
//    private SystemData innerSystemData() {
//        return this.innerSystemData;
//    }

    /** {@inheritDoc} */
    @Override
    public PacketCoreControlPlaneInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public PacketCoreControlPlaneInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning state of the packet core control plane resource.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the mobileNetwork property: Mobile network that this packet core control plane belongs to.
     *
     * @return the mobileNetwork value.
     */
    public MobileNetworkResourceId mobileNetwork() {
        return this.innerProperties() == null ? null : this.innerProperties().mobileNetwork();
    }

    /**
     * Set the mobileNetwork property: Mobile network that this packet core control plane belongs to.
     *
     * @param mobileNetwork the mobileNetwork value to set.
     * @return the PacketCoreControlPlaneInner object itself.
     */
    public PacketCoreControlPlaneInner withMobileNetwork(MobileNetworkResourceId mobileNetwork) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PacketCoreControlPlanePropertiesFormat();
        }
        this.innerProperties().withMobileNetwork(mobileNetwork);
        return this;
    }

    /**
     * Get the customLocation property: Azure ARC custom location where the packet core is deployed.
     *
     * @return the customLocation value.
     */
    public CustomLocationResourceId customLocation() {
        return this.innerProperties() == null ? null : this.innerProperties().customLocation();
    }

    /**
     * Set the customLocation property: Azure ARC custom location where the packet core is deployed.
     *
     * @param customLocation the customLocation value to set.
     * @return the PacketCoreControlPlaneInner object itself.
     */
    public PacketCoreControlPlaneInner withCustomLocation(CustomLocationResourceId customLocation) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PacketCoreControlPlanePropertiesFormat();
        }
        this.innerProperties().withCustomLocation(customLocation);
        return this;
    }

    /**
     * Get the coreNetworkTechnology property: The core network technology generation.
     *
     * @return the coreNetworkTechnology value.
     */
    public CoreNetworkType coreNetworkTechnology() {
        return this.innerProperties() == null ? null : this.innerProperties().coreNetworkTechnology();
    }

    /**
     * Set the coreNetworkTechnology property: The core network technology generation.
     *
     * @param coreNetworkTechnology the coreNetworkTechnology value to set.
     * @return the PacketCoreControlPlaneInner object itself.
     */
    public PacketCoreControlPlaneInner withCoreNetworkTechnology(CoreNetworkType coreNetworkTechnology) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PacketCoreControlPlanePropertiesFormat();
        }
        this.innerProperties().withCoreNetworkTechnology(coreNetworkTechnology);
        return this;
    }

    /**
     * Get the version property: The version of the packet core software that is deployed.
     *
     * @return the version value.
     */
    public String version() {
        return this.innerProperties() == null ? null : this.innerProperties().version();
    }

    /**
     * Set the version property: The version of the packet core software that is deployed.
     *
     * @param version the version value to set.
     * @return the PacketCoreControlPlaneInner object itself.
     */
    public PacketCoreControlPlaneInner withVersion(String version) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PacketCoreControlPlanePropertiesFormat();
        }
        this.innerProperties().withVersion(version);
        return this;
    }

    /**
     * Get the controlPlaneAccessInterface property: The control plane interface on the access network. In 5G networks
     * this is called as N2 interface whereas in 4G networks this is called as S1-MME interface.
     *
     * @return the controlPlaneAccessInterface value.
     */
    public InterfaceProperties controlPlaneAccessInterface() {
        return this.innerProperties() == null ? null : this.innerProperties().controlPlaneAccessInterface();
    }

    /**
     * Set the controlPlaneAccessInterface property: The control plane interface on the access network. In 5G networks
     * this is called as N2 interface whereas in 4G networks this is called as S1-MME interface.
     *
     * @param controlPlaneAccessInterface the controlPlaneAccessInterface value to set.
     * @return the PacketCoreControlPlaneInner object itself.
     */
    public PacketCoreControlPlaneInner withControlPlaneAccessInterface(
        InterfaceProperties controlPlaneAccessInterface) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PacketCoreControlPlanePropertiesFormat();
        }
        this.innerProperties().withControlPlaneAccessInterface(controlPlaneAccessInterface);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property innerProperties in model PacketCoreControlPlaneInner"));
        } else {
            innerProperties().validate();
        }
    }
}
