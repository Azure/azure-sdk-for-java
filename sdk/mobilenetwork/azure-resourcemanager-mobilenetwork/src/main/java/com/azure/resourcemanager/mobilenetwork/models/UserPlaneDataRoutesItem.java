// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The UserPlaneDataRoutesItem model.
 */
@Fluent
public final class UserPlaneDataRoutesItem {
    /*
     * Reference to an attached data network resource.
     */
    @JsonProperty(value = "attachedDataNetwork")
    private AttachedDataNetworkResourceId attachedDataNetwork;

    /*
     * A list of IPv4 routes.
     */
    @JsonProperty(value = "routes")
    private List<Ipv4Route> routes;

    /**
     * Creates an instance of UserPlaneDataRoutesItem class.
     */
    public UserPlaneDataRoutesItem() {
    }

    /**
     * Get the attachedDataNetwork property: Reference to an attached data network resource.
     * 
     * @return the attachedDataNetwork value.
     */
    public AttachedDataNetworkResourceId attachedDataNetwork() {
        return this.attachedDataNetwork;
    }

    /**
     * Set the attachedDataNetwork property: Reference to an attached data network resource.
     * 
     * @param attachedDataNetwork the attachedDataNetwork value to set.
     * @return the UserPlaneDataRoutesItem object itself.
     */
    public UserPlaneDataRoutesItem withAttachedDataNetwork(AttachedDataNetworkResourceId attachedDataNetwork) {
        this.attachedDataNetwork = attachedDataNetwork;
        return this;
    }

    /**
     * Get the routes property: A list of IPv4 routes.
     * 
     * @return the routes value.
     */
    public List<Ipv4Route> routes() {
        return this.routes;
    }

    /**
     * Set the routes property: A list of IPv4 routes.
     * 
     * @param routes the routes value to set.
     * @return the UserPlaneDataRoutesItem object itself.
     */
    public UserPlaneDataRoutesItem withRoutes(List<Ipv4Route> routes) {
        this.routes = routes;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (attachedDataNetwork() != null) {
            attachedDataNetwork().validate();
        }
        if (routes() != null) {
            routes().forEach(e -> e.validate());
        }
    }
}
