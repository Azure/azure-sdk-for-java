// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * AMF identifier.
 */
@Fluent
public final class AmfId implements JsonSerializable<AmfId> {
    /*
     * AMF region identifier
     */
    private int regionId;

    /*
     * AMF set identifier
     */
    private int setId;

    /*
     * AMF pointer
     */
    private int pointer;

    /**
     * Creates an instance of AmfId class.
     */
    public AmfId() {
    }

    /**
     * Get the regionId property: AMF region identifier.
     * 
     * @return the regionId value.
     */
    public int regionId() {
        return this.regionId;
    }

    /**
     * Set the regionId property: AMF region identifier.
     * 
     * @param regionId the regionId value to set.
     * @return the AmfId object itself.
     */
    public AmfId withRegionId(int regionId) {
        this.regionId = regionId;
        return this;
    }

    /**
     * Get the setId property: AMF set identifier.
     * 
     * @return the setId value.
     */
    public int setId() {
        return this.setId;
    }

    /**
     * Set the setId property: AMF set identifier.
     * 
     * @param setId the setId value to set.
     * @return the AmfId object itself.
     */
    public AmfId withSetId(int setId) {
        this.setId = setId;
        return this;
    }

    /**
     * Get the pointer property: AMF pointer.
     * 
     * @return the pointer value.
     */
    public int pointer() {
        return this.pointer;
    }

    /**
     * Set the pointer property: AMF pointer.
     * 
     * @param pointer the pointer value to set.
     * @return the AmfId object itself.
     */
    public AmfId withPointer(int pointer) {
        this.pointer = pointer;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeIntField("regionId", this.regionId);
        jsonWriter.writeIntField("setId", this.setId);
        jsonWriter.writeIntField("pointer", this.pointer);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AmfId from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AmfId if the JsonReader was pointing to an instance of it, or null if it was pointing to
     * JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AmfId.
     */
    public static AmfId fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AmfId deserializedAmfId = new AmfId();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("regionId".equals(fieldName)) {
                    deserializedAmfId.regionId = reader.getInt();
                } else if ("setId".equals(fieldName)) {
                    deserializedAmfId.setId = reader.getInt();
                } else if ("pointer".equals(fieldName)) {
                    deserializedAmfId.pointer = reader.getInt();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAmfId;
        });
    }
}
