// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.mobilenetwork.fluent.models.SimInner;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of Sim. */
public interface Sim {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the provisioningState property: The provisioning state of the sim resource.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the configurationState property: The configuration state of the sim resource - complete or incomplete.
     *
     * @return the configurationState value.
     */
    ConfigurationState configurationState();

    /**
     * Gets the internationalMobileSubscriberIdentity property: The International Mobile Subscriber Identity (IMSI) for
     * the sim.
     *
     * @return the internationalMobileSubscriberIdentity value.
     */
    String internationalMobileSubscriberIdentity();

    /**
     * Gets the integratedCircuitCardIdentifier property: The Integrated Circuit Card ID (ICC Id) for the sim.
     *
     * @return the integratedCircuitCardIdentifier value.
     */
    String integratedCircuitCardIdentifier();

    /**
     * Gets the authenticationKey property: The ki value for the sim.
     *
     * @return the authenticationKey value.
     */
    String authenticationKey();

    /**
     * Gets the operatorKeyCode property: The Opc value for the sim.
     *
     * @return the operatorKeyCode value.
     */
    String operatorKeyCode();

    /**
     * Gets the mobileNetwork property: Mobile network that this sim belongs to.
     *
     * @return the mobileNetwork value.
     */
    MobileNetworkResourceId mobileNetwork();

    /**
     * Gets the deviceType property: An optional free-form text field that can be used to record the device type this
     * sim is associated with, for example 'Video camera'. The Azure portal allows Sims to be grouped and filtered based
     * on this value.
     *
     * @return the deviceType value.
     */
    String deviceType();

    /**
     * Gets the simPolicy property: The simPolicy used by this sim.
     *
     * @return the simPolicy value.
     */
    SimPolicyResourceId simPolicy();

    /**
     * Gets the staticIpConfiguration property: A list of static IP addresses assigned to this sim. Each address is
     * assigned at a defined network scope, made up of {attached data network, slice}.
     *
     * @return the staticIpConfiguration value.
     */
    List<SimStaticIpProperties> staticIpConfiguration();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.mobilenetwork.fluent.models.SimInner object.
     *
     * @return the inner object.
     */
    SimInner innerModel();

    /** The entirety of the Sim definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithInternationalMobileSubscriberIdentity,
            DefinitionStages.WithCreate {
    }
    /** The Sim definition stages. */
    interface DefinitionStages {
        /** The first stage of the Sim definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the Sim definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the Sim definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithInternationalMobileSubscriberIdentity withExistingResourceGroup(String resourceGroupName);
        }
        /** The stage of the Sim definition allowing to specify internationalMobileSubscriberIdentity. */
        interface WithInternationalMobileSubscriberIdentity {
            /**
             * Specifies the internationalMobileSubscriberIdentity property: The International Mobile Subscriber
             * Identity (IMSI) for the sim..
             *
             * @param internationalMobileSubscriberIdentity The International Mobile Subscriber Identity (IMSI) for the
             *     sim.
             * @return the next definition stage.
             */
            WithCreate withInternationalMobileSubscriberIdentity(String internationalMobileSubscriberIdentity);
        }
        /**
         * The stage of the Sim definition which contains all the minimum required properties for the resource to be
         * created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithIntegratedCircuitCardIdentifier,
                DefinitionStages.WithAuthenticationKey,
                DefinitionStages.WithOperatorKeyCode,
                DefinitionStages.WithMobileNetwork,
                DefinitionStages.WithDeviceType,
                DefinitionStages.WithSimPolicy,
                DefinitionStages.WithStaticIpConfiguration {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            Sim create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Sim create(Context context);
        }
        /** The stage of the Sim definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the Sim definition allowing to specify integratedCircuitCardIdentifier. */
        interface WithIntegratedCircuitCardIdentifier {
            /**
             * Specifies the integratedCircuitCardIdentifier property: The Integrated Circuit Card ID (ICC Id) for the
             * sim..
             *
             * @param integratedCircuitCardIdentifier The Integrated Circuit Card ID (ICC Id) for the sim.
             * @return the next definition stage.
             */
            WithCreate withIntegratedCircuitCardIdentifier(String integratedCircuitCardIdentifier);
        }
        /** The stage of the Sim definition allowing to specify authenticationKey. */
        interface WithAuthenticationKey {
            /**
             * Specifies the authenticationKey property: The ki value for the sim..
             *
             * @param authenticationKey The ki value for the sim.
             * @return the next definition stage.
             */
            WithCreate withAuthenticationKey(String authenticationKey);
        }
        /** The stage of the Sim definition allowing to specify operatorKeyCode. */
        interface WithOperatorKeyCode {
            /**
             * Specifies the operatorKeyCode property: The Opc value for the sim..
             *
             * @param operatorKeyCode The Opc value for the sim.
             * @return the next definition stage.
             */
            WithCreate withOperatorKeyCode(String operatorKeyCode);
        }
        /** The stage of the Sim definition allowing to specify mobileNetwork. */
        interface WithMobileNetwork {
            /**
             * Specifies the mobileNetwork property: Mobile network that this sim belongs to.
             *
             * @param mobileNetwork Mobile network that this sim belongs to.
             * @return the next definition stage.
             */
            WithCreate withMobileNetwork(MobileNetworkResourceId mobileNetwork);
        }
        /** The stage of the Sim definition allowing to specify deviceType. */
        interface WithDeviceType {
            /**
             * Specifies the deviceType property: An optional free-form text field that can be used to record the device
             * type this sim is associated with, for example 'Video camera'. The Azure portal allows Sims to be grouped
             * and filtered based on this value..
             *
             * @param deviceType An optional free-form text field that can be used to record the device type this sim is
             *     associated with, for example 'Video camera'. The Azure portal allows Sims to be grouped and filtered
             *     based on this value.
             * @return the next definition stage.
             */
            WithCreate withDeviceType(String deviceType);
        }
        /** The stage of the Sim definition allowing to specify simPolicy. */
        interface WithSimPolicy {
            /**
             * Specifies the simPolicy property: The simPolicy used by this sim..
             *
             * @param simPolicy The simPolicy used by this sim.
             * @return the next definition stage.
             */
            WithCreate withSimPolicy(SimPolicyResourceId simPolicy);
        }
        /** The stage of the Sim definition allowing to specify staticIpConfiguration. */
        interface WithStaticIpConfiguration {
            /**
             * Specifies the staticIpConfiguration property: A list of static IP addresses assigned to this sim. Each
             * address is assigned at a defined network scope, made up of {attached data network, slice}..
             *
             * @param staticIpConfiguration A list of static IP addresses assigned to this sim. Each address is assigned
             *     at a defined network scope, made up of {attached data network, slice}.
             * @return the next definition stage.
             */
            WithCreate withStaticIpConfiguration(List<SimStaticIpProperties> staticIpConfiguration);
        }
    }
    /**
     * Begins update for the Sim resource.
     *
     * @return the stage of resource update.
     */
    Sim.Update update();

    /** The template for Sim update. */
    interface Update extends UpdateStages.WithTags {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        Sim apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Sim apply(Context context);
    }
    /** The Sim update stages. */
    interface UpdateStages {
        /** The stage of the Sim update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    Sim refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Sim refresh(Context context);
}
