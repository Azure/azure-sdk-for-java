// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * QoS Flow.
 */
@Fluent
public final class UeQosFlow implements JsonSerializable<UeQosFlow> {
    /*
     * Qos Flow Identifier
     */
    private int qfi;

    /*
     * 5G QoS Identifier.
     */
    private int fiveqi;

    /*
     * Maximum Bit Rate
     */
    private Ambr mbr;

    /*
     * Guaranteed Bit Rate
     */
    private Ambr gbr;

    /**
     * Creates an instance of UeQosFlow class.
     */
    public UeQosFlow() {
    }

    /**
     * Get the qfi property: Qos Flow Identifier.
     * 
     * @return the qfi value.
     */
    public int qfi() {
        return this.qfi;
    }

    /**
     * Set the qfi property: Qos Flow Identifier.
     * 
     * @param qfi the qfi value to set.
     * @return the UeQosFlow object itself.
     */
    public UeQosFlow withQfi(int qfi) {
        this.qfi = qfi;
        return this;
    }

    /**
     * Get the fiveqi property: 5G QoS Identifier.
     * 
     * @return the fiveqi value.
     */
    public int fiveqi() {
        return this.fiveqi;
    }

    /**
     * Set the fiveqi property: 5G QoS Identifier.
     * 
     * @param fiveqi the fiveqi value to set.
     * @return the UeQosFlow object itself.
     */
    public UeQosFlow withFiveqi(int fiveqi) {
        this.fiveqi = fiveqi;
        return this;
    }

    /**
     * Get the mbr property: Maximum Bit Rate.
     * 
     * @return the mbr value.
     */
    public Ambr mbr() {
        return this.mbr;
    }

    /**
     * Set the mbr property: Maximum Bit Rate.
     * 
     * @param mbr the mbr value to set.
     * @return the UeQosFlow object itself.
     */
    public UeQosFlow withMbr(Ambr mbr) {
        this.mbr = mbr;
        return this;
    }

    /**
     * Get the gbr property: Guaranteed Bit Rate.
     * 
     * @return the gbr value.
     */
    public Ambr gbr() {
        return this.gbr;
    }

    /**
     * Set the gbr property: Guaranteed Bit Rate.
     * 
     * @param gbr the gbr value to set.
     * @return the UeQosFlow object itself.
     */
    public UeQosFlow withGbr(Ambr gbr) {
        this.gbr = gbr;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (mbr() != null) {
            mbr().validate();
        }
        if (gbr() != null) {
            gbr().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeIntField("qfi", this.qfi);
        jsonWriter.writeIntField("fiveqi", this.fiveqi);
        jsonWriter.writeJsonField("mbr", this.mbr);
        jsonWriter.writeJsonField("gbr", this.gbr);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of UeQosFlow from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of UeQosFlow if the JsonReader was pointing to an instance of it, or null if it was pointing
     * to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the UeQosFlow.
     */
    public static UeQosFlow fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            UeQosFlow deserializedUeQosFlow = new UeQosFlow();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("qfi".equals(fieldName)) {
                    deserializedUeQosFlow.qfi = reader.getInt();
                } else if ("fiveqi".equals(fieldName)) {
                    deserializedUeQosFlow.fiveqi = reader.getInt();
                } else if ("mbr".equals(fieldName)) {
                    deserializedUeQosFlow.mbr = Ambr.fromJson(reader);
                } else if ("gbr".equals(fieldName)) {
                    deserializedUeQosFlow.gbr = Ambr.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedUeQosFlow;
        });
    }
}
