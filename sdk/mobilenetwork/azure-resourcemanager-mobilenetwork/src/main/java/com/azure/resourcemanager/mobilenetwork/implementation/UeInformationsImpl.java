// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.mobilenetwork.fluent.UeInformationsClient;
import com.azure.resourcemanager.mobilenetwork.fluent.models.UeInfoInner;
import com.azure.resourcemanager.mobilenetwork.models.UeInfo;
import com.azure.resourcemanager.mobilenetwork.models.UeInformations;

public final class UeInformationsImpl implements UeInformations {
    private static final ClientLogger LOGGER = new ClientLogger(UeInformationsImpl.class);

    private final UeInformationsClient innerClient;

    private final com.azure.resourcemanager.mobilenetwork.MobileNetworkManager serviceManager;

    public UeInformationsImpl(UeInformationsClient innerClient,
        com.azure.resourcemanager.mobilenetwork.MobileNetworkManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<UeInfo> list(String resourceGroupName, String packetCoreControlPlaneName) {
        PagedIterable<UeInfoInner> inner = this.serviceClient().list(resourceGroupName, packetCoreControlPlaneName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new UeInfoImpl(inner1, this.manager()));
    }

    public PagedIterable<UeInfo> list(String resourceGroupName, String packetCoreControlPlaneName, Context context) {
        PagedIterable<UeInfoInner> inner
            = this.serviceClient().list(resourceGroupName, packetCoreControlPlaneName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new UeInfoImpl(inner1, this.manager()));
    }

    private UeInformationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.mobilenetwork.MobileNetworkManager manager() {
        return this.serviceManager;
    }
}
