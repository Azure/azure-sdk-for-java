// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Configuration for sending packet core events to Azure Event Hub.
 */
@Fluent
public final class EventHubConfiguration {
    /*
     * Resource ID  of Azure Event Hub to send packet core events to.
     */
    @JsonProperty(value = "id", required = true)
    private String id;

    /*
     * The duration (in seconds) between UE usage reports.
     */
    @JsonProperty(value = "reportingInterval")
    private Integer reportingInterval;

    /**
     * Creates an instance of EventHubConfiguration class.
     */
    public EventHubConfiguration() {
    }

    /**
     * Get the id property: Resource ID of Azure Event Hub to send packet core events to.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: Resource ID of Azure Event Hub to send packet core events to.
     * 
     * @param id the id value to set.
     * @return the EventHubConfiguration object itself.
     */
    public EventHubConfiguration withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the reportingInterval property: The duration (in seconds) between UE usage reports.
     * 
     * @return the reportingInterval value.
     */
    public Integer reportingInterval() {
        return this.reportingInterval;
    }

    /**
     * Set the reportingInterval property: The duration (in seconds) between UE usage reports.
     * 
     * @param reportingInterval the reportingInterval value to set.
     * @return the EventHubConfiguration object itself.
     */
    public EventHubConfiguration withReportingInterval(Integer reportingInterval) {
        this.reportingInterval = reportingInterval;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (id() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property id in model EventHubConfiguration"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(EventHubConfiguration.class);
}
