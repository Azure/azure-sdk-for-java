// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UE Session Info for 4G.
 */
@Fluent
public final class UeSessionInfo4G {
    /*
     * EPS bearer identifier
     */
    @JsonProperty(value = "ebi", required = true)
    private int ebi;

    /*
     * Access point name
     */
    @JsonProperty(value = "apn", required = true)
    private String apn;

    /*
     * UE IP address
     */
    @JsonProperty(value = "ueIpAddress", required = true)
    private UeIpAddress ueIpAddress;

    /*
     * Packet Data Network Type
     */
    @JsonProperty(value = "pdnType", required = true)
    private PdnType pdnType;

    /**
     * Creates an instance of UeSessionInfo4G class.
     */
    public UeSessionInfo4G() {
    }

    /**
     * Get the ebi property: EPS bearer identifier.
     * 
     * @return the ebi value.
     */
    public int ebi() {
        return this.ebi;
    }

    /**
     * Set the ebi property: EPS bearer identifier.
     * 
     * @param ebi the ebi value to set.
     * @return the UeSessionInfo4G object itself.
     */
    public UeSessionInfo4G withEbi(int ebi) {
        this.ebi = ebi;
        return this;
    }

    /**
     * Get the apn property: Access point name.
     * 
     * @return the apn value.
     */
    public String apn() {
        return this.apn;
    }

    /**
     * Set the apn property: Access point name.
     * 
     * @param apn the apn value to set.
     * @return the UeSessionInfo4G object itself.
     */
    public UeSessionInfo4G withApn(String apn) {
        this.apn = apn;
        return this;
    }

    /**
     * Get the ueIpAddress property: UE IP address.
     * 
     * @return the ueIpAddress value.
     */
    public UeIpAddress ueIpAddress() {
        return this.ueIpAddress;
    }

    /**
     * Set the ueIpAddress property: UE IP address.
     * 
     * @param ueIpAddress the ueIpAddress value to set.
     * @return the UeSessionInfo4G object itself.
     */
    public UeSessionInfo4G withUeIpAddress(UeIpAddress ueIpAddress) {
        this.ueIpAddress = ueIpAddress;
        return this;
    }

    /**
     * Get the pdnType property: Packet Data Network Type.
     * 
     * @return the pdnType value.
     */
    public PdnType pdnType() {
        return this.pdnType;
    }

    /**
     * Set the pdnType property: Packet Data Network Type.
     * 
     * @param pdnType the pdnType value to set.
     * @return the UeSessionInfo4G object itself.
     */
    public UeSessionInfo4G withPdnType(PdnType pdnType) {
        this.pdnType = pdnType;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (apn() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property apn in model UeSessionInfo4G"));
        }
        if (ueIpAddress() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property ueIpAddress in model UeSessionInfo4G"));
        } else {
            ueIpAddress().validate();
        }
        if (pdnType() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property pdnType in model UeSessionInfo4G"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(UeSessionInfo4G.class);
}
