// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * UE Information properties for 5G.
 */
@Fluent
public final class UeInfo5GProperties {
    /*
     * Subscription Permanent Identifier
     */
    @JsonProperty(value = "supi", required = true)
    private String supi;

    /*
     * Permanent Equipment Identifier
     */
    @JsonProperty(value = "pei")
    private String pei;

    /*
     * 5G GUTI
     */
    @JsonProperty(value = "fivegGuti", required = true)
    private Guti5G fivegGuti;

    /*
     * UE Connection Info for 5G.
     */
    @JsonProperty(value = "connectionInfo")
    private UeConnectionInfo5G connectionInfo;

    /*
     * The sessionInfo property.
     */
    @JsonProperty(value = "sessionInfo")
    private List<UeSessionInfo5G> sessionInfo;

    /**
     * Creates an instance of UeInfo5GProperties class.
     */
    public UeInfo5GProperties() {
    }

    /**
     * Get the supi property: Subscription Permanent Identifier.
     * 
     * @return the supi value.
     */
    public String supi() {
        return this.supi;
    }

    /**
     * Set the supi property: Subscription Permanent Identifier.
     * 
     * @param supi the supi value to set.
     * @return the UeInfo5GProperties object itself.
     */
    public UeInfo5GProperties withSupi(String supi) {
        this.supi = supi;
        return this;
    }

    /**
     * Get the pei property: Permanent Equipment Identifier.
     * 
     * @return the pei value.
     */
    public String pei() {
        return this.pei;
    }

    /**
     * Set the pei property: Permanent Equipment Identifier.
     * 
     * @param pei the pei value to set.
     * @return the UeInfo5GProperties object itself.
     */
    public UeInfo5GProperties withPei(String pei) {
        this.pei = pei;
        return this;
    }

    /**
     * Get the fivegGuti property: 5G GUTI.
     * 
     * @return the fivegGuti value.
     */
    public Guti5G fivegGuti() {
        return this.fivegGuti;
    }

    /**
     * Set the fivegGuti property: 5G GUTI.
     * 
     * @param fivegGuti the fivegGuti value to set.
     * @return the UeInfo5GProperties object itself.
     */
    public UeInfo5GProperties withFivegGuti(Guti5G fivegGuti) {
        this.fivegGuti = fivegGuti;
        return this;
    }

    /**
     * Get the connectionInfo property: UE Connection Info for 5G.
     * 
     * @return the connectionInfo value.
     */
    public UeConnectionInfo5G connectionInfo() {
        return this.connectionInfo;
    }

    /**
     * Set the connectionInfo property: UE Connection Info for 5G.
     * 
     * @param connectionInfo the connectionInfo value to set.
     * @return the UeInfo5GProperties object itself.
     */
    public UeInfo5GProperties withConnectionInfo(UeConnectionInfo5G connectionInfo) {
        this.connectionInfo = connectionInfo;
        return this;
    }

    /**
     * Get the sessionInfo property: The sessionInfo property.
     * 
     * @return the sessionInfo value.
     */
    public List<UeSessionInfo5G> sessionInfo() {
        return this.sessionInfo;
    }

    /**
     * Set the sessionInfo property: The sessionInfo property.
     * 
     * @param sessionInfo the sessionInfo value to set.
     * @return the UeInfo5GProperties object itself.
     */
    public UeInfo5GProperties withSessionInfo(List<UeSessionInfo5G> sessionInfo) {
        this.sessionInfo = sessionInfo;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (supi() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property supi in model UeInfo5GProperties"));
        }
        if (fivegGuti() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property fivegGuti in model UeInfo5GProperties"));
        } else {
            fivegGuti().validate();
        }
        if (connectionInfo() != null) {
            connectionInfo().validate();
        }
        if (sessionInfo() != null) {
            sessionInfo().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(UeInfo5GProperties.class);
}
