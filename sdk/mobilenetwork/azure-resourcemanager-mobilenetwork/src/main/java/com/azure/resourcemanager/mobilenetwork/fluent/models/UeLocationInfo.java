// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UE Location Info properties.
 */
@Fluent
public final class UeLocationInfo {
    /*
     * Location Type
     */
    @JsonProperty(value = "locationType", required = true)
    private String locationType;

    /*
     * Type Allocation Code of UE
     */
    @JsonProperty(value = "tac", required = true)
    private String tac;

    /*
     * PLMN Identifier
     */
    @JsonProperty(value = "plmn", required = true)
    private PlmnId innerPlmn = new PlmnId();

    /**
     * Creates an instance of UeLocationInfo class.
     */
    public UeLocationInfo() {
    }

    /**
     * Get the locationType property: Location Type.
     * 
     * @return the locationType value.
     */
    public String locationType() {
        return this.locationType;
    }

    /**
     * Set the locationType property: Location Type.
     * 
     * @param locationType the locationType value to set.
     * @return the UeLocationInfo object itself.
     */
    public UeLocationInfo withLocationType(String locationType) {
        this.locationType = locationType;
        return this;
    }

    /**
     * Get the tac property: Type Allocation Code of UE.
     * 
     * @return the tac value.
     */
    public String tac() {
        return this.tac;
    }

    /**
     * Set the tac property: Type Allocation Code of UE.
     * 
     * @param tac the tac value to set.
     * @return the UeLocationInfo object itself.
     */
    public UeLocationInfo withTac(String tac) {
        this.tac = tac;
        return this;
    }

    /**
     * Get the innerPlmn property: PLMN Identifier.
     * 
     * @return the innerPlmn value.
     */
    private PlmnId innerPlmn() {
        return this.innerPlmn;
    }

    /**
     * Get the mcc property: Mobile country code (MCC).
     * 
     * @return the mcc value.
     */
    public String mcc() {
        return this.innerPlmn() == null ? null : this.innerPlmn().mcc();
    }

    /**
     * Set the mcc property: Mobile country code (MCC).
     * 
     * @param mcc the mcc value to set.
     * @return the UeLocationInfo object itself.
     */
    public UeLocationInfo withMcc(String mcc) {
        if (this.innerPlmn() == null) {
            this.innerPlmn = new PlmnId();
        }
        this.innerPlmn().withMcc(mcc);
        return this;
    }

    /**
     * Get the mnc property: Mobile network code (MNC).
     * 
     * @return the mnc value.
     */
    public String mnc() {
        return this.innerPlmn() == null ? null : this.innerPlmn().mnc();
    }

    /**
     * Set the mnc property: Mobile network code (MNC).
     * 
     * @param mnc the mnc value to set.
     * @return the UeLocationInfo object itself.
     */
    public UeLocationInfo withMnc(String mnc) {
        if (this.innerPlmn() == null) {
            this.innerPlmn = new PlmnId();
        }
        this.innerPlmn().withMnc(mnc);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (locationType() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property locationType in model UeLocationInfo"));
        }
        if (tac() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property tac in model UeLocationInfo"));
        }
        if (innerPlmn() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property innerPlmn in model UeLocationInfo"));
        } else {
            innerPlmn().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(UeLocationInfo.class);
}
