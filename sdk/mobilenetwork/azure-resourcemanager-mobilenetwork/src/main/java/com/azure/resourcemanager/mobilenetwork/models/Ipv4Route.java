// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * An IPv4 route.
 */
@Fluent
public final class Ipv4Route {
    /*
     * The destination IPv4 prefix.
     */
    @JsonProperty(value = "destination")
    private String destination;

    /*
     * A list of next hops for the destination.
     */
    @JsonProperty(value = "nextHops")
    private List<Ipv4RouteNextHop> nextHops;

    /**
     * Creates an instance of Ipv4Route class.
     */
    public Ipv4Route() {
    }

    /**
     * Get the destination property: The destination IPv4 prefix.
     * 
     * @return the destination value.
     */
    public String destination() {
        return this.destination;
    }

    /**
     * Set the destination property: The destination IPv4 prefix.
     * 
     * @param destination the destination value to set.
     * @return the Ipv4Route object itself.
     */
    public Ipv4Route withDestination(String destination) {
        this.destination = destination;
        return this;
    }

    /**
     * Get the nextHops property: A list of next hops for the destination.
     * 
     * @return the nextHops value.
     */
    public List<Ipv4RouteNextHop> nextHops() {
        return this.nextHops;
    }

    /**
     * Set the nextHops property: A list of next hops for the destination.
     * 
     * @param nextHops the nextHops value to set.
     * @return the Ipv4Route object itself.
     */
    public Ipv4Route withNextHops(List<Ipv4RouteNextHop> nextHops) {
        this.nextHops = nextHops;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (nextHops() != null) {
            nextHops().forEach(e -> e.validate());
        }
    }
}
