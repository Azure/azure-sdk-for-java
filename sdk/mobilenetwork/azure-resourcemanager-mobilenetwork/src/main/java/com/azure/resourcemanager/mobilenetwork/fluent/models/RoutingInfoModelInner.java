// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.mobilenetwork.models.Ipv4Route;
import com.azure.resourcemanager.mobilenetwork.models.UserPlaneDataRoutesItem;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Routing information.
 */
@Fluent
public final class RoutingInfoModelInner extends ProxyResource {
    /*
     * Routing information properties
     */
    @JsonProperty(value = "properties", required = true)
    private RoutingInfoPropertiesFormat innerProperties = new RoutingInfoPropertiesFormat();

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of RoutingInfoModelInner class.
     */
    public RoutingInfoModelInner() {
    }

    /**
     * Get the innerProperties property: Routing information properties.
     * 
     * @return the innerProperties value.
     */
    private RoutingInfoPropertiesFormat innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the controlPlaneAccessRoutes property: A list of IPv4 routes.
     * 
     * @return the controlPlaneAccessRoutes value.
     */
    public List<Ipv4Route> controlPlaneAccessRoutes() {
        return this.innerProperties() == null ? null : this.innerProperties().controlPlaneAccessRoutes();
    }

    /**
     * Set the controlPlaneAccessRoutes property: A list of IPv4 routes.
     * 
     * @param controlPlaneAccessRoutes the controlPlaneAccessRoutes value to set.
     * @return the RoutingInfoModelInner object itself.
     */
    public RoutingInfoModelInner withControlPlaneAccessRoutes(List<Ipv4Route> controlPlaneAccessRoutes) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RoutingInfoPropertiesFormat();
        }
        this.innerProperties().withControlPlaneAccessRoutes(controlPlaneAccessRoutes);
        return this;
    }

    /**
     * Get the userPlaneAccessRoutes property: A list of IPv4 routes.
     * 
     * @return the userPlaneAccessRoutes value.
     */
    public List<Ipv4Route> userPlaneAccessRoutes() {
        return this.innerProperties() == null ? null : this.innerProperties().userPlaneAccessRoutes();
    }

    /**
     * Set the userPlaneAccessRoutes property: A list of IPv4 routes.
     * 
     * @param userPlaneAccessRoutes the userPlaneAccessRoutes value to set.
     * @return the RoutingInfoModelInner object itself.
     */
    public RoutingInfoModelInner withUserPlaneAccessRoutes(List<Ipv4Route> userPlaneAccessRoutes) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RoutingInfoPropertiesFormat();
        }
        this.innerProperties().withUserPlaneAccessRoutes(userPlaneAccessRoutes);
        return this;
    }

    /**
     * Get the userPlaneDataRoutes property: A list of attached data networks and their IPv4 routes.
     * 
     * @return the userPlaneDataRoutes value.
     */
    public List<UserPlaneDataRoutesItem> userPlaneDataRoutes() {
        return this.innerProperties() == null ? null : this.innerProperties().userPlaneDataRoutes();
    }

    /**
     * Set the userPlaneDataRoutes property: A list of attached data networks and their IPv4 routes.
     * 
     * @param userPlaneDataRoutes the userPlaneDataRoutes value to set.
     * @return the RoutingInfoModelInner object itself.
     */
    public RoutingInfoModelInner withUserPlaneDataRoutes(List<UserPlaneDataRoutesItem> userPlaneDataRoutes) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RoutingInfoPropertiesFormat();
        }
        this.innerProperties().withUserPlaneDataRoutes(userPlaneDataRoutes);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property innerProperties in model RoutingInfoModelInner"));
        } else {
            innerProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(RoutingInfoModelInner.class);
}
