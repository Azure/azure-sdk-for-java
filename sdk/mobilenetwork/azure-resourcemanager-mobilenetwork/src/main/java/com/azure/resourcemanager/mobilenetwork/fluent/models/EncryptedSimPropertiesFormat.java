// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.mobilenetwork.models.CommonSimPropertiesFormat;
import com.azure.resourcemanager.mobilenetwork.models.SimPolicyResourceId;
import com.azure.resourcemanager.mobilenetwork.models.SimStaticIpProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Encrypted SIM properties. */
@Fluent
public final class EncryptedSimPropertiesFormat extends CommonSimPropertiesFormat {
    /*
     * The encrypted SIM credentials.
     */
    @JsonProperty(value = "encryptedCredentials")
    private String encryptedCredentials;

    /** Creates an instance of EncryptedSimPropertiesFormat class. */
    public EncryptedSimPropertiesFormat() {
    }

    /**
     * Get the encryptedCredentials property: The encrypted SIM credentials.
     *
     * @return the encryptedCredentials value.
     */
    public String encryptedCredentials() {
        return this.encryptedCredentials;
    }

    /**
     * Set the encryptedCredentials property: The encrypted SIM credentials.
     *
     * @param encryptedCredentials the encryptedCredentials value to set.
     * @return the EncryptedSimPropertiesFormat object itself.
     */
    public EncryptedSimPropertiesFormat withEncryptedCredentials(String encryptedCredentials) {
        this.encryptedCredentials = encryptedCredentials;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public EncryptedSimPropertiesFormat withInternationalMobileSubscriberIdentity(
        String internationalMobileSubscriberIdentity) {
        super.withInternationalMobileSubscriberIdentity(internationalMobileSubscriberIdentity);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public EncryptedSimPropertiesFormat withIntegratedCircuitCardIdentifier(String integratedCircuitCardIdentifier) {
        super.withIntegratedCircuitCardIdentifier(integratedCircuitCardIdentifier);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public EncryptedSimPropertiesFormat withDeviceType(String deviceType) {
        super.withDeviceType(deviceType);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public EncryptedSimPropertiesFormat withSimPolicy(SimPolicyResourceId simPolicy) {
        super.withSimPolicy(simPolicy);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public EncryptedSimPropertiesFormat withStaticIpConfiguration(List<SimStaticIpProperties> staticIpConfiguration) {
        super.withStaticIpConfiguration(staticIpConfiguration);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
