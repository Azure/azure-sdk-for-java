{
  "digestFormatVersion": 2,
  "dtdlVersions": [
    2,
    3
  ],
  "contexts": {
    "dtmi:dtdl:context;2": {
      "Array": "dtmi:dtdl:class:Array;2",
      "Boolean": "dtmi:dtdl:class:Boolean;2",
      "ComplexSchema": "dtmi:dtdl:class:ComplexSchema;2",
      "Command": "dtmi:dtdl:class:Command;2",
      "CommandPayload": "dtmi:dtdl:class:CommandPayload;2",
      "CommandType": "dtmi:dtdl:class:CommandType;2",
      "Component": "dtmi:dtdl:class:Component;2",
      "Content": "dtmi:dtdl:class:Content;2",
      "Date": "dtmi:dtdl:class:Date;2",
      "DateTime": "dtmi:dtdl:class:DateTime;2",
      "Double": "dtmi:dtdl:class:Double;2",
      "Duration": "dtmi:dtdl:class:Duration;2",
      "Entity": "dtmi:dtdl:class:Entity;2",
      "Enum": "dtmi:dtdl:class:Enum;2",
      "EnumValue": "dtmi:dtdl:class:EnumValue;2",
      "Field": "dtmi:dtdl:class:Field;2",
      "Float": "dtmi:dtdl:class:Float;2",
      "Integer": "dtmi:dtdl:class:Integer;2",
      "Interface": "dtmi:dtdl:class:Interface;2",
      "Long": "dtmi:dtdl:class:Long;2",
      "Map": "dtmi:dtdl:class:Map;2",
      "MapKey": "dtmi:dtdl:class:MapKey;2",
      "MapValue": "dtmi:dtdl:class:MapValue;2",
      "NamedEntity": "dtmi:dtdl:class:NamedEntity;2",
      "NumericSchema": "dtmi:dtdl:class:NumericSchema;2",
      "Object": "dtmi:dtdl:class:Object;2",
      "PrimitiveSchema": "dtmi:dtdl:class:PrimitiveSchema;2",
      "Property": "dtmi:dtdl:class:Property;2",
      "Relationship": "dtmi:dtdl:class:Relationship;2",
      "Schema": "dtmi:dtdl:class:Schema;2",
      "SchemaField": "dtmi:dtdl:class:SchemaField;2",
      "SemanticType": "dtmi:dtdl:class:SemanticType;2",
      "SemanticUnit": "dtmi:dtdl:class:SemanticUnit;2",
      "String": "dtmi:dtdl:class:String;2",
      "Telemetry": "dtmi:dtdl:class:Telemetry;2",
      "TemporalSchema": "dtmi:dtdl:class:TemporalSchema;2",
      "Time": "dtmi:dtdl:class:Time;2",
      "Unit": "dtmi:dtdl:class:Unit;2",
      "UnitAttribute": "dtmi:dtdl:class:UnitAttribute;2",
      "RatioUnit": "dtmi:standard:class:RatioUnit;2",
      "DecimalUnit": "dtmi:standard:class:DecimalUnit;2",
      "DecimalPrefix": "dtmi:standard:class:DecimalPrefix;2",
      "BinaryUnit": "dtmi:standard:class:BinaryUnit;2",
      "BinaryPrefix": "dtmi:standard:class:BinaryPrefix;2",
      "QuantitativeType": "dtmi:standard:class:QuantitativeType;2",
      "Acceleration": "dtmi:standard:class:Acceleration;2",
      "Angle": "dtmi:standard:class:Angle;2",
      "AngularAcceleration": "dtmi:standard:class:AngularAcceleration;2",
      "AngularVelocity": "dtmi:standard:class:AngularVelocity;2",
      "Area": "dtmi:standard:class:Area;2",
      "Capacitance": "dtmi:standard:class:Capacitance;2",
      "Current": "dtmi:standard:class:Current;2",
      "DataRate": "dtmi:standard:class:DataRate;2",
      "DataSize": "dtmi:standard:class:DataSize;2",
      "Density": "dtmi:standard:class:Density;2",
      "Distance": "dtmi:standard:class:Distance;2",
      "ElectricCharge": "dtmi:standard:class:ElectricCharge;2",
      "Energy": "dtmi:standard:class:Energy;2",
      "Force": "dtmi:standard:class:Force;2",
      "Frequency": "dtmi:standard:class:Frequency;2",
      "Humidity": "dtmi:standard:class:Humidity;2",
      "Illuminance": "dtmi:standard:class:Illuminance;2",
      "Inductance": "dtmi:standard:class:Inductance;2",
      "Latitude": "dtmi:standard:class:Latitude;2",
      "Longitude": "dtmi:standard:class:Longitude;2",
      "Length": "dtmi:standard:class:Length;2",
      "Luminance": "dtmi:standard:class:Luminance;2",
      "Luminosity": "dtmi:standard:class:Luminosity;2",
      "LuminousFlux": "dtmi:standard:class:LuminousFlux;2",
      "LuminousIntensity": "dtmi:standard:class:LuminousIntensity;2",
      "MagneticFlux": "dtmi:standard:class:MagneticFlux;2",
      "MagneticInduction": "dtmi:standard:class:MagneticInduction;2",
      "Mass": "dtmi:standard:class:Mass;2",
      "MassFlowRate": "dtmi:standard:class:MassFlowRate;2",
      "Power": "dtmi:standard:class:Power;2",
      "Pressure": "dtmi:standard:class:Pressure;2",
      "RelativeHumidity": "dtmi:standard:class:RelativeHumidity;2",
      "Resistance": "dtmi:standard:class:Resistance;2",
      "SoundPressure": "dtmi:standard:class:SoundPressure;2",
      "Temperature": "dtmi:standard:class:Temperature;2",
      "Thrust": "dtmi:standard:class:Thrust;2",
      "TimeSpan": "dtmi:standard:class:TimeSpan;2",
      "Torque": "dtmi:standard:class:Torque;2",
      "Velocity": "dtmi:standard:class:Velocity;2",
      "Voltage": "dtmi:standard:class:Voltage;2",
      "Volume": "dtmi:standard:class:Volume;2",
      "VolumeFlowRate": "dtmi:standard:class:VolumeFlowRate;2",
      "AccelerationUnit": "dtmi:standard:class:AccelerationUnit;2",
      "AngleUnit": "dtmi:standard:class:AngleUnit;2",
      "AngularAccelerationUnit": "dtmi:standard:class:AngularAccelerationUnit;2",
      "AngularVelocityUnit": "dtmi:standard:class:AngularVelocityUnit;2",
      "AreaUnit": "dtmi:standard:class:AreaUnit;2",
      "CapacitanceUnit": "dtmi:standard:class:CapacitanceUnit;2",
      "ChargeUnit": "dtmi:standard:class:ChargeUnit;2",
      "CurrentUnit": "dtmi:standard:class:CurrentUnit;2",
      "DataRateUnit": "dtmi:standard:class:DataRateUnit;2",
      "DataSizeUnit": "dtmi:standard:class:DataSizeUnit;2",
      "DensityUnit": "dtmi:standard:class:DensityUnit;2",
      "EnergyUnit": "dtmi:standard:class:EnergyUnit;2",
      "ForceUnit": "dtmi:standard:class:ForceUnit;2",
      "FrequencyUnit": "dtmi:standard:class:FrequencyUnit;2",
      "IlluminanceUnit": "dtmi:standard:class:IlluminanceUnit;2",
      "InductanceUnit": "dtmi:standard:class:InductanceUnit;2",
      "LengthUnit": "dtmi:standard:class:LengthUnit;2",
      "LuminanceUnit": "dtmi:standard:class:LuminanceUnit;2",
      "LuminousFluxUnit": "dtmi:standard:class:LuminousFluxUnit;2",
      "LuminousIntensityUnit": "dtmi:standard:class:LuminousIntensityUnit;2",
      "MagneticFluxUnit": "dtmi:standard:class:MagneticFluxUnit;2",
      "MagneticInductionUnit": "dtmi:standard:class:MagneticInductionUnit;2",
      "MassUnit": "dtmi:standard:class:MassUnit;2",
      "MassFlowRateUnit": "dtmi:standard:class:MassFlowRateUnit;2",
      "PowerUnit": "dtmi:standard:class:PowerUnit;2",
      "PressureUnit": "dtmi:standard:class:PressureUnit;2",
      "ResistanceUnit": "dtmi:standard:class:ResistanceUnit;2",
      "SoundPressureUnit": "dtmi:standard:class:SoundPressureUnit;2",
      "TemperatureUnit": "dtmi:standard:class:TemperatureUnit;2",
      "TimeUnit": "dtmi:standard:class:TimeUnit;2",
      "TorqueUnit": "dtmi:standard:class:TorqueUnit;2",
      "Unitless": "dtmi:standard:class:Unitless;2",
      "VelocityUnit": "dtmi:standard:class:VelocityUnit;2",
      "VoltageUnit": "dtmi:standard:class:VoltageUnit;2",
      "VolumeUnit": "dtmi:standard:class:VolumeUnit;2",
      "VolumeFlowRateUnit": "dtmi:standard:class:VolumeFlowRateUnit;2",
      "baseUnit": "dtmi:dtdl:property:baseUnit;2",
      "bottomUnit": "dtmi:dtdl:property:bottomUnit;2",
      "commandType": "dtmi:dtdl:property:commandType;2",
      "comment": "dtmi:dtdl:property:comment;2",
      "contents": "dtmi:dtdl:property:contents;2",
      "description": "dtmi:dtdl:property:description;2",
      "displayName": "dtmi:dtdl:property:displayName;2",
      "elementSchema": "dtmi:dtdl:property:elementSchema;2",
      "enumValue": "dtmi:dtdl:property:enumValue;2",
      "enumValues": "dtmi:dtdl:property:enumValues;2",
      "exponent": "dtmi:dtdl:property:exponent;2",
      "extends": "dtmi:dtdl:property:extends;2",
      "fields": "dtmi:dtdl:property:fields;2",
      "languageVersion": "dtmi:dtdl:property:languageVersion;2",
      "mapKey": "dtmi:dtdl:property:mapKey;2",
      "mapValue": "dtmi:dtdl:property:mapValue;2",
      "maxMultiplicity": "dtmi:dtdl:property:maxMultiplicity;2",
      "minMultiplicity": "dtmi:dtdl:property:minMultiplicity;2",
      "name": "dtmi:dtdl:property:name;2",
      "prefix": "dtmi:dtdl:property:prefix;2",
      "properties": "dtmi:dtdl:property:properties;2",
      "request": "dtmi:dtdl:property:request;2",
      "response": "dtmi:dtdl:property:response;2",
      "schema": "dtmi:dtdl:property:schema;2",
      "schemas": "dtmi:dtdl:property:schemas;2",
      "symbol": "dtmi:dtdl:property:symbol;2",
      "target": "dtmi:dtdl:property:target;2",
      "topUnit": "dtmi:dtdl:property:topUnit;2",
      "unit": "dtmi:dtdl:property:unit;2",
      "valueSchema": "dtmi:dtdl:property:valueSchema;2",
      "writable": "dtmi:dtdl:property:writable;2",
      "asynchronous": "dtmi:dtdl:instance:CommandType:asynchronous;2",
      "synchronous": "dtmi:dtdl:instance:CommandType:synchronous;2",
      "boolean": "dtmi:dtdl:instance:Schema:boolean;2",
      "date": "dtmi:dtdl:instance:Schema:date;2",
      "dateTime": "dtmi:dtdl:instance:Schema:dateTime;2",
      "double": "dtmi:dtdl:instance:Schema:double;2",
      "duration": "dtmi:dtdl:instance:Schema:duration;2",
      "float": "dtmi:dtdl:instance:Schema:float;2",
      "integer": "dtmi:dtdl:instance:Schema:integer;2",
      "long": "dtmi:dtdl:instance:Schema:long;2",
      "string": "dtmi:dtdl:instance:Schema:string;2",
      "time": "dtmi:dtdl:instance:Schema:time;2",
      "deci": "dtmi:standard:unitprefix:deci;2",
      "centi": "dtmi:standard:unitprefix:centi;2",
      "milli": "dtmi:standard:unitprefix:milli;2",
      "micro": "dtmi:standard:unitprefix:micro;2",
      "nano": "dtmi:standard:unitprefix:nano;2",
      "pico": "dtmi:standard:unitprefix:pico;2",
      "femto": "dtmi:standard:unitprefix:femto;2",
      "atto": "dtmi:standard:unitprefix:atto;2",
      "zepto": "dtmi:standard:unitprefix:zepto;2",
      "yocto": "dtmi:standard:unitprefix:yocto;2",
      "deka": "dtmi:standard:unitprefix:deka;2",
      "hecto": "dtmi:standard:unitprefix:hecto;2",
      "kilo": "dtmi:standard:unitprefix:kilo;2",
      "mega": "dtmi:standard:unitprefix:mega;2",
      "giga": "dtmi:standard:unitprefix:giga;2",
      "tera": "dtmi:standard:unitprefix:tera;2",
      "peta": "dtmi:standard:unitprefix:peta;2",
      "exa": "dtmi:standard:unitprefix:exa;2",
      "zetta": "dtmi:standard:unitprefix:zetta;2",
      "yotta": "dtmi:standard:unitprefix:yotta;2",
      "kibi": "dtmi:standard:unitprefix:kibi;2",
      "mebi": "dtmi:standard:unitprefix:mebi;2",
      "gibi": "dtmi:standard:unitprefix:gibi;2",
      "tebi": "dtmi:standard:unitprefix:tebi;2",
      "pebi": "dtmi:standard:unitprefix:pebi;2",
      "exbi": "dtmi:standard:unitprefix:exbi;2",
      "zebi": "dtmi:standard:unitprefix:zebi;2",
      "yobi": "dtmi:standard:unitprefix:yobi;2",
      "metrePerSecondSquared": "dtmi:standard:unit:metrePerSecondSquared;2",
      "centimetrePerSecondSquared": "dtmi:standard:unit:centimetrePerSecondSquared;2",
      "gForce": "dtmi:standard:unit:gForce;2",
      "radian": "dtmi:standard:unit:radian;2",
      "degreeOfArc": "dtmi:standard:unit:degreeOfArc;2",
      "minuteOfArc": "dtmi:standard:unit:minuteOfArc;2",
      "secondOfArc": "dtmi:standard:unit:secondOfArc;2",
      "turn": "dtmi:standard:unit:turn;2",
      "radianPerSecondSquared": "dtmi:standard:unit:radianPerSecondSquared;2",
      "radianPerSecond": "dtmi:standard:unit:radianPerSecond;2",
      "degreePerSecond": "dtmi:standard:unit:degreePerSecond;2",
      "revolutionPerSecond": "dtmi:standard:unit:revolutionPerSecond;2",
      "revolutionPerMinute": "dtmi:standard:unit:revolutionPerMinute;2",
      "squareMetre": "dtmi:standard:unit:squareMetre;2",
      "squareCentimetre": "dtmi:standard:unit:squareCentimetre;2",
      "squareMillimetre": "dtmi:standard:unit:squareMillimetre;2",
      "squareKilometre": "dtmi:standard:unit:squareKilometre;2",
      "hectare": "dtmi:standard:unit:hectare;2",
      "squareFoot": "dtmi:standard:unit:squareFoot;2",
      "squareInch": "dtmi:standard:unit:squareInch;2",
      "acre": "dtmi:standard:unit:acre;2",
      "farad": "dtmi:standard:unit:farad;2",
      "millifarad": "dtmi:standard:unit:millifarad;2",
      "microfarad": "dtmi:standard:unit:microfarad;2",
      "nanofarad": "dtmi:standard:unit:nanofarad;2",
      "picofarad": "dtmi:standard:unit:picofarad;2",
      "coulomb": "dtmi:standard:unit:coulomb;2",
      "ampere": "dtmi:standard:unit:ampere;2",
      "microampere": "dtmi:standard:unit:microampere;2",
      "milliampere": "dtmi:standard:unit:milliampere;2",
      "bitPerSecond": "dtmi:standard:unit:bitPerSecond;2",
      "kibibitPerSecond": "dtmi:standard:unit:kibibitPerSecond;2",
      "mebibitPerSecond": "dtmi:standard:unit:mebibitPerSecond;2",
      "gibibitPerSecond": "dtmi:standard:unit:gibibitPerSecond;2",
      "tebibitPerSecond": "dtmi:standard:unit:tebibitPerSecond;2",
      "exbibitPerSecond": "dtmi:standard:unit:exbibitPerSecond;2",
      "zebibitPerSecond": "dtmi:standard:unit:zebibitPerSecond;2",
      "yobibitPerSecond": "dtmi:standard:unit:yobibitPerSecond;2",
      "bytePerSecond": "dtmi:standard:unit:bytePerSecond;2",
      "kibibytePerSecond": "dtmi:standard:unit:kibibytePerSecond;2",
      "mebibytePerSecond": "dtmi:standard:unit:mebibytePerSecond;2",
      "gibibytePerSecond": "dtmi:standard:unit:gibibytePerSecond;2",
      "tebibytePerSecond": "dtmi:standard:unit:tebibytePerSecond;2",
      "exbibytePerSecond": "dtmi:standard:unit:exbibytePerSecond;2",
      "zebibytePerSecond": "dtmi:standard:unit:zebibytePerSecond;2",
      "yobibytePerSecond": "dtmi:standard:unit:yobibytePerSecond;2",
      "bit": "dtmi:standard:unit:bit;2",
      "kibibit": "dtmi:standard:unit:kibibit;2",
      "mebibit": "dtmi:standard:unit:mebibit;2",
      "gibibit": "dtmi:standard:unit:gibibit;2",
      "tebibit": "dtmi:standard:unit:tebibit;2",
      "exbibit": "dtmi:standard:unit:exbibit;2",
      "zebibit": "dtmi:standard:unit:zebibit;2",
      "yobibit": "dtmi:standard:unit:yobibit;2",
      "byte": "dtmi:standard:unit:byte;2",
      "kibibyte": "dtmi:standard:unit:kibibyte;2",
      "mebibyte": "dtmi:standard:unit:mebibyte;2",
      "gibibyte": "dtmi:standard:unit:gibibyte;2",
      "tebibyte": "dtmi:standard:unit:tebibyte;2",
      "exbibyte": "dtmi:standard:unit:exbibyte;2",
      "zebibyte": "dtmi:standard:unit:zebibyte;2",
      "yobibyte": "dtmi:standard:unit:yobibyte;2",
      "kilogramPerCubicMetre": "dtmi:standard:unit:kilogramPerCubicMetre;2",
      "gramPerCubicMetre": "dtmi:standard:unit:gramPerCubicMetre;2",
      "joule": "dtmi:standard:unit:joule;2",
      "kilojoule": "dtmi:standard:unit:kilojoule;2",
      "megajoule": "dtmi:standard:unit:megajoule;2",
      "gigajoule": "dtmi:standard:unit:gigajoule;2",
      "electronvolt": "dtmi:standard:unit:electronvolt;2",
      "megaelectronvolt": "dtmi:standard:unit:megaelectronvolt;2",
      "kilowattHour": "dtmi:standard:unit:kilowattHour;2",
      "newton": "dtmi:standard:unit:newton;2",
      "pound": "dtmi:standard:unit:pound;2",
      "ounce": "dtmi:standard:unit:ounce;2",
      "ton": "dtmi:standard:unit:ton;2",
      "hertz": "dtmi:standard:unit:hertz;2",
      "kilohertz": "dtmi:standard:unit:kilohertz;2",
      "megahertz": "dtmi:standard:unit:megahertz;2",
      "gigahertz": "dtmi:standard:unit:gigahertz;2",
      "lux": "dtmi:standard:unit:lux;2",
      "footcandle": "dtmi:standard:unit:footcandle;2",
      "henry": "dtmi:standard:unit:henry;2",
      "millihenry": "dtmi:standard:unit:millihenry;2",
      "microhenry": "dtmi:standard:unit:microhenry;2",
      "metre": "dtmi:standard:unit:metre;2",
      "centimetre": "dtmi:standard:unit:centimetre;2",
      "millimetre": "dtmi:standard:unit:millimetre;2",
      "micrometre": "dtmi:standard:unit:micrometre;2",
      "nanometre": "dtmi:standard:unit:nanometre;2",
      "kilometre": "dtmi:standard:unit:kilometre;2",
      "foot": "dtmi:standard:unit:foot;2",
      "inch": "dtmi:standard:unit:inch;2",
      "mile": "dtmi:standard:unit:mile;2",
      "nauticalMile": "dtmi:standard:unit:nauticalMile;2",
      "astronomicalUnit": "dtmi:standard:unit:astronomicalUnit;2",
      "candelaPerSquareMetre": "dtmi:standard:unit:candelaPerSquareMetre;2",
      "lumen": "dtmi:standard:unit:lumen;2",
      "candela": "dtmi:standard:unit:candela;2",
      "weber": "dtmi:standard:unit:weber;2",
      "maxwell": "dtmi:standard:unit:maxwell;2",
      "tesla": "dtmi:standard:unit:tesla;2",
      "kilogram": "dtmi:standard:unit:kilogram;2",
      "gram": "dtmi:standard:unit:gram;2",
      "milligram": "dtmi:standard:unit:milligram;2",
      "microgram": "dtmi:standard:unit:microgram;2",
      "tonne": "dtmi:standard:unit:tonne;2",
      "slug": "dtmi:standard:unit:slug;2",
      "gramPerSecond": "dtmi:standard:unit:gramPerSecond;2",
      "kilogramPerSecond": "dtmi:standard:unit:kilogramPerSecond;2",
      "gramPerHour": "dtmi:standard:unit:gramPerHour;2",
      "kilogramPerHour": "dtmi:standard:unit:kilogramPerHour;2",
      "watt": "dtmi:standard:unit:watt;2",
      "microwatt": "dtmi:standard:unit:microwatt;2",
      "milliwatt": "dtmi:standard:unit:milliwatt;2",
      "kilowatt": "dtmi:standard:unit:kilowatt;2",
      "megawatt": "dtmi:standard:unit:megawatt;2",
      "gigawatt": "dtmi:standard:unit:gigawatt;2",
      "horsepower": "dtmi:standard:unit:horsepower;2",
      "kilowattHourPerYear": "dtmi:standard:unit:kilowattHourPerYear;2",
      "pascal": "dtmi:standard:unit:pascal;2",
      "kilopascal": "dtmi:standard:unit:kilopascal;2",
      "bar": "dtmi:standard:unit:bar;2",
      "millibar": "dtmi:standard:unit:millibar;2",
      "millimetresOfMercury": "dtmi:standard:unit:millimetresOfMercury;2",
      "poundPerSquareInch": "dtmi:standard:unit:poundPerSquareInch;2",
      "inchesOfMercury": "dtmi:standard:unit:inchesOfMercury;2",
      "inchesOfWater": "dtmi:standard:unit:inchesOfWater;2",
      "ohm": "dtmi:standard:unit:ohm;2",
      "milliohm": "dtmi:standard:unit:milliohm;2",
      "kiloohm": "dtmi:standard:unit:kiloohm;2",
      "megaohm": "dtmi:standard:unit:megaohm;2",
      "decibel": "dtmi:standard:unit:decibel;2",
      "bel": "dtmi:standard:unit:bel;2",
      "kelvin": "dtmi:standard:unit:kelvin;2",
      "degreeCelsius": "dtmi:standard:unit:degreeCelsius;2",
      "degreeFahrenheit": "dtmi:standard:unit:degreeFahrenheit;2",
      "second": "dtmi:standard:unit:second;2",
      "millisecond": "dtmi:standard:unit:millisecond;2",
      "microsecond": "dtmi:standard:unit:microsecond;2",
      "nanosecond": "dtmi:standard:unit:nanosecond;2",
      "minute": "dtmi:standard:unit:minute;2",
      "hour": "dtmi:standard:unit:hour;2",
      "day": "dtmi:standard:unit:day;2",
      "year": "dtmi:standard:unit:year;2",
      "unity": "dtmi:standard:unit:unity;2",
      "percent": "dtmi:standard:unit:percent;2",
      "newtonMetre": "dtmi:standard:unit:newtonMetre;2",
      "metrePerSecond": "dtmi:standard:unit:metrePerSecond;2",
      "centimetrePerSecond": "dtmi:standard:unit:centimetrePerSecond;2",
      "kilometrePerSecond": "dtmi:standard:unit:kilometrePerSecond;2",
      "metrePerHour": "dtmi:standard:unit:metrePerHour;2",
      "kilometrePerHour": "dtmi:standard:unit:kilometrePerHour;2",
      "milePerHour": "dtmi:standard:unit:milePerHour;2",
      "milePerSecond": "dtmi:standard:unit:milePerSecond;2",
      "knot": "dtmi:standard:unit:knot;2",
      "volt": "dtmi:standard:unit:volt;2",
      "millivolt": "dtmi:standard:unit:millivolt;2",
      "microvolt": "dtmi:standard:unit:microvolt;2",
      "kilovolt": "dtmi:standard:unit:kilovolt;2",
      "megavolt": "dtmi:standard:unit:megavolt;2",
      "cubicMetre": "dtmi:standard:unit:cubicMetre;2",
      "cubicCentimetre": "dtmi:standard:unit:cubicCentimetre;2",
      "litre": "dtmi:standard:unit:litre;2",
      "millilitre": "dtmi:standard:unit:millilitre;2",
      "cubicFoot": "dtmi:standard:unit:cubicFoot;2",
      "cubicInch": "dtmi:standard:unit:cubicInch;2",
      "fluidOunce": "dtmi:standard:unit:fluidOunce;2",
      "gallon": "dtmi:standard:unit:gallon;2",
      "litrePerSecond": "dtmi:standard:unit:litrePerSecond;2",
      "millilitrePerSecond": "dtmi:standard:unit:millilitrePerSecond;2",
      "litrePerHour": "dtmi:standard:unit:litrePerHour;2",
      "millilitrePerHour": "dtmi:standard:unit:millilitrePerHour;2",
      "point": "dtmi:standard:schema:geospatial:point;2",
      "multiPoint": "dtmi:standard:schema:geospatial:multiPoint;2",
      "lineString": "dtmi:standard:schema:geospatial:lineString;2",
      "multiLineString": "dtmi:standard:schema:geospatial:multiLineString;2",
      "polygon": "dtmi:standard:schema:geospatial:polygon;2",
      "multiPolygon": "dtmi:standard:schema:geospatial:multiPolygon;2"
    },
    "dtmi:dtdl:context;3": {
      "AdjunctType": "dtmi:dtdl:class:AdjunctType;3",
      "Array": "dtmi:dtdl:class:Array;3",
      "Boolean": "dtmi:dtdl:class:Boolean;3",
      "ComplexSchema": "dtmi:dtdl:class:ComplexSchema;3",
      "Command": "dtmi:dtdl:class:Command;3",
      "CommandPayload": "dtmi:dtdl:class:CommandPayload;3",
      "CommandRequest": "dtmi:dtdl:class:CommandRequest;3",
      "CommandResponse": "dtmi:dtdl:class:CommandResponse;3",
      "CommandType": "dtmi:dtdl:class:CommandType;3",
      "Component": "dtmi:dtdl:class:Component;3",
      "Content": "dtmi:dtdl:class:Content;3",
      "Date": "dtmi:dtdl:class:Date;3",
      "DateTime": "dtmi:dtdl:class:DateTime;3",
      "Double": "dtmi:dtdl:class:Double;3",
      "Duration": "dtmi:dtdl:class:Duration;3",
      "Entity": "dtmi:dtdl:class:Entity;3",
      "Enum": "dtmi:dtdl:class:Enum;3",
      "EnumValue": "dtmi:dtdl:class:EnumValue;3",
      "Field": "dtmi:dtdl:class:Field;3",
      "Float": "dtmi:dtdl:class:Float;3",
      "Integer": "dtmi:dtdl:class:Integer;3",
      "Interface": "dtmi:dtdl:class:Interface;3",
      "LatentType": "dtmi:dtdl:class:LatentType;3",
      "Long": "dtmi:dtdl:class:Long;3",
      "Map": "dtmi:dtdl:class:Map;3",
      "MapKey": "dtmi:dtdl:class:MapKey;3",
      "MapValue": "dtmi:dtdl:class:MapValue;3",
      "NamedEntity": "dtmi:dtdl:class:NamedEntity;3",
      "NamedLatentType": "dtmi:dtdl:class:NamedLatentType;3",
      "NumericSchema": "dtmi:dtdl:class:NumericSchema;3",
      "Object": "dtmi:dtdl:class:Object;3",
      "PrimitiveSchema": "dtmi:dtdl:class:PrimitiveSchema;3",
      "Property": "dtmi:dtdl:class:Property;3",
      "Relationship": "dtmi:dtdl:class:Relationship;3",
      "Schema": "dtmi:dtdl:class:Schema;3",
      "SchemaField": "dtmi:dtdl:class:SchemaField;3",
      "SemanticType": "dtmi:dtdl:class:SemanticType;3",
      "SemanticUnit": "dtmi:dtdl:class:SemanticUnit;3",
      "String": "dtmi:dtdl:class:String;3",
      "Telemetry": "dtmi:dtdl:class:Telemetry;3",
      "TemporalSchema": "dtmi:dtdl:class:TemporalSchema;3",
      "Time": "dtmi:dtdl:class:Time;3",
      "Unit": "dtmi:dtdl:class:Unit;3",
      "UnitAttribute": "dtmi:dtdl:class:UnitAttribute;3",
      "RatioUnit": "dtmi:standard:class:RatioUnit;3",
      "DecimalUnit": "dtmi:standard:class:DecimalUnit;3",
      "DecimalPrefix": "dtmi:standard:class:DecimalPrefix;3",
      "BinaryUnit": "dtmi:standard:class:BinaryUnit;3",
      "BinaryPrefix": "dtmi:standard:class:BinaryPrefix;3",
      "QuantitativeType": "dtmi:standard:class:QuantitativeType;3",
      "Acceleration": "dtmi:standard:class:Acceleration;3",
      "Angle": "dtmi:standard:class:Angle;3",
      "AngularAcceleration": "dtmi:standard:class:AngularAcceleration;3",
      "AngularVelocity": "dtmi:standard:class:AngularVelocity;3",
      "Area": "dtmi:standard:class:Area;3",
      "Capacitance": "dtmi:standard:class:Capacitance;3",
      "Current": "dtmi:standard:class:Current;3",
      "DataRate": "dtmi:standard:class:DataRate;3",
      "DataSize": "dtmi:standard:class:DataSize;3",
      "Density": "dtmi:standard:class:Density;3",
      "Distance": "dtmi:standard:class:Distance;3",
      "ElectricCharge": "dtmi:standard:class:ElectricCharge;3",
      "Energy": "dtmi:standard:class:Energy;3",
      "Force": "dtmi:standard:class:Force;3",
      "Frequency": "dtmi:standard:class:Frequency;3",
      "Humidity": "dtmi:standard:class:Humidity;3",
      "Illuminance": "dtmi:standard:class:Illuminance;3",
      "Inductance": "dtmi:standard:class:Inductance;3",
      "Latitude": "dtmi:standard:class:Latitude;3",
      "Longitude": "dtmi:standard:class:Longitude;3",
      "Length": "dtmi:standard:class:Length;3",
      "Luminance": "dtmi:standard:class:Luminance;3",
      "Luminosity": "dtmi:standard:class:Luminosity;3",
      "LuminousFlux": "dtmi:standard:class:LuminousFlux;3",
      "LuminousIntensity": "dtmi:standard:class:LuminousIntensity;3",
      "MagneticFlux": "dtmi:standard:class:MagneticFlux;3",
      "MagneticInduction": "dtmi:standard:class:MagneticInduction;3",
      "Mass": "dtmi:standard:class:Mass;3",
      "MassFlowRate": "dtmi:standard:class:MassFlowRate;3",
      "Power": "dtmi:standard:class:Power;3",
      "Pressure": "dtmi:standard:class:Pressure;3",
      "RelativeHumidity": "dtmi:standard:class:RelativeHumidity;3",
      "Resistance": "dtmi:standard:class:Resistance;3",
      "SoundPressure": "dtmi:standard:class:SoundPressure;3",
      "Temperature": "dtmi:standard:class:Temperature;3",
      "Thrust": "dtmi:standard:class:Thrust;3",
      "TimeSpan": "dtmi:standard:class:TimeSpan;3",
      "Torque": "dtmi:standard:class:Torque;3",
      "Velocity": "dtmi:standard:class:Velocity;3",
      "Voltage": "dtmi:standard:class:Voltage;3",
      "Volume": "dtmi:standard:class:Volume;3",
      "VolumeFlowRate": "dtmi:standard:class:VolumeFlowRate;3",
      "AccelerationUnit": "dtmi:standard:class:AccelerationUnit;3",
      "AngleUnit": "dtmi:standard:class:AngleUnit;3",
      "AngularAccelerationUnit": "dtmi:standard:class:AngularAccelerationUnit;3",
      "AngularVelocityUnit": "dtmi:standard:class:AngularVelocityUnit;3",
      "AreaUnit": "dtmi:standard:class:AreaUnit;3",
      "CapacitanceUnit": "dtmi:standard:class:CapacitanceUnit;3",
      "ChargeUnit": "dtmi:standard:class:ChargeUnit;3",
      "CurrentUnit": "dtmi:standard:class:CurrentUnit;3",
      "DataRateUnit": "dtmi:standard:class:DataRateUnit;3",
      "DataSizeUnit": "dtmi:standard:class:DataSizeUnit;3",
      "DensityUnit": "dtmi:standard:class:DensityUnit;3",
      "EnergyUnit": "dtmi:standard:class:EnergyUnit;3",
      "ForceUnit": "dtmi:standard:class:ForceUnit;3",
      "FrequencyUnit": "dtmi:standard:class:FrequencyUnit;3",
      "IlluminanceUnit": "dtmi:standard:class:IlluminanceUnit;3",
      "InductanceUnit": "dtmi:standard:class:InductanceUnit;3",
      "LengthUnit": "dtmi:standard:class:LengthUnit;3",
      "LuminanceUnit": "dtmi:standard:class:LuminanceUnit;3",
      "LuminousFluxUnit": "dtmi:standard:class:LuminousFluxUnit;3",
      "LuminousIntensityUnit": "dtmi:standard:class:LuminousIntensityUnit;3",
      "MagneticFluxUnit": "dtmi:standard:class:MagneticFluxUnit;3",
      "MagneticInductionUnit": "dtmi:standard:class:MagneticInductionUnit;3",
      "MassUnit": "dtmi:standard:class:MassUnit;3",
      "MassFlowRateUnit": "dtmi:standard:class:MassFlowRateUnit;3",
      "PowerUnit": "dtmi:standard:class:PowerUnit;3",
      "PressureUnit": "dtmi:standard:class:PressureUnit;3",
      "ResistanceUnit": "dtmi:standard:class:ResistanceUnit;3",
      "SoundPressureUnit": "dtmi:standard:class:SoundPressureUnit;3",
      "TemperatureUnit": "dtmi:standard:class:TemperatureUnit;3",
      "TimeUnit": "dtmi:standard:class:TimeUnit;3",
      "TorqueUnit": "dtmi:standard:class:TorqueUnit;3",
      "Unitless": "dtmi:standard:class:Unitless;3",
      "VelocityUnit": "dtmi:standard:class:VelocityUnit;3",
      "VoltageUnit": "dtmi:standard:class:VoltageUnit;3",
      "VolumeUnit": "dtmi:standard:class:VolumeUnit;3",
      "VolumeFlowRateUnit": "dtmi:standard:class:VolumeFlowRateUnit;3",
      "baseUnit": "dtmi:dtdl:property:baseUnit;3",
      "bottomUnit": "dtmi:dtdl:property:bottomUnit;3",
      "commandType": "dtmi:dtdl:property:commandType;3",
      "comment": "dtmi:dtdl:property:comment;3",
      "contents": "dtmi:dtdl:property:contents;3",
      "description": "dtmi:dtdl:property:description;3",
      "displayName": "dtmi:dtdl:property:displayName;3",
      "elementSchema": "dtmi:dtdl:property:elementSchema;3",
      "enumValue": "dtmi:dtdl:property:enumValue;3",
      "enumValues": "dtmi:dtdl:property:enumValues;3",
      "exponent": "dtmi:dtdl:property:exponent;3",
      "extends": "dtmi:dtdl:property:extends;3",
      "fields": "dtmi:dtdl:property:fields;3",
      "languageVersion": "dtmi:dtdl:property:languageVersion;3",
      "mapKey": "dtmi:dtdl:property:mapKey;3",
      "mapValue": "dtmi:dtdl:property:mapValue;3",
      "maxMultiplicity": "dtmi:dtdl:property:maxMultiplicity;3",
      "minMultiplicity": "dtmi:dtdl:property:minMultiplicity;3",
      "name": "dtmi:dtdl:property:name;3",
      "prefix": "dtmi:dtdl:property:prefix;3",
      "properties": "dtmi:dtdl:property:properties;3",
      "request": "dtmi:dtdl:property:request;3",
      "response": "dtmi:dtdl:property:response;3",
      "schema": "dtmi:dtdl:property:schema;3",
      "schemas": "dtmi:dtdl:property:schemas;3",
      "symbol": "dtmi:dtdl:property:symbol;3",
      "target": "dtmi:dtdl:property:target;3",
      "topUnit": "dtmi:dtdl:property:topUnit;3",
      "unit": "dtmi:dtdl:property:unit;3",
      "valueSchema": "dtmi:dtdl:property:valueSchema;3",
      "writable": "dtmi:dtdl:property:writable;3",
      "asynchronous": "dtmi:dtdl:instance:CommandType:asynchronous;3",
      "synchronous": "dtmi:dtdl:instance:CommandType:synchronous;3",
      "boolean": "dtmi:dtdl:instance:Schema:boolean;3",
      "date": "dtmi:dtdl:instance:Schema:date;3",
      "dateTime": "dtmi:dtdl:instance:Schema:dateTime;3",
      "double": "dtmi:dtdl:instance:Schema:double;3",
      "duration": "dtmi:dtdl:instance:Schema:duration;3",
      "float": "dtmi:dtdl:instance:Schema:float;3",
      "integer": "dtmi:dtdl:instance:Schema:integer;3",
      "long": "dtmi:dtdl:instance:Schema:long;3",
      "string": "dtmi:dtdl:instance:Schema:string;3",
      "time": "dtmi:dtdl:instance:Schema:time;3",
      "deci": "dtmi:standard:unitprefix:deci;3",
      "centi": "dtmi:standard:unitprefix:centi;3",
      "milli": "dtmi:standard:unitprefix:milli;3",
      "micro": "dtmi:standard:unitprefix:micro;3",
      "nano": "dtmi:standard:unitprefix:nano;3",
      "pico": "dtmi:standard:unitprefix:pico;3",
      "femto": "dtmi:standard:unitprefix:femto;3",
      "atto": "dtmi:standard:unitprefix:atto;3",
      "zepto": "dtmi:standard:unitprefix:zepto;3",
      "yocto": "dtmi:standard:unitprefix:yocto;3",
      "deka": "dtmi:standard:unitprefix:deka;3",
      "hecto": "dtmi:standard:unitprefix:hecto;3",
      "kilo": "dtmi:standard:unitprefix:kilo;3",
      "mega": "dtmi:standard:unitprefix:mega;3",
      "giga": "dtmi:standard:unitprefix:giga;3",
      "tera": "dtmi:standard:unitprefix:tera;3",
      "peta": "dtmi:standard:unitprefix:peta;3",
      "exa": "dtmi:standard:unitprefix:exa;3",
      "zetta": "dtmi:standard:unitprefix:zetta;3",
      "yotta": "dtmi:standard:unitprefix:yotta;3",
      "kibi": "dtmi:standard:unitprefix:kibi;3",
      "mebi": "dtmi:standard:unitprefix:mebi;3",
      "gibi": "dtmi:standard:unitprefix:gibi;3",
      "tebi": "dtmi:standard:unitprefix:tebi;3",
      "pebi": "dtmi:standard:unitprefix:pebi;3",
      "exbi": "dtmi:standard:unitprefix:exbi;3",
      "zebi": "dtmi:standard:unitprefix:zebi;3",
      "yobi": "dtmi:standard:unitprefix:yobi;3",
      "metrePerSecondSquared": "dtmi:standard:unit:metrePerSecondSquared;3",
      "centimetrePerSecondSquared": "dtmi:standard:unit:centimetrePerSecondSquared;3",
      "gForce": "dtmi:standard:unit:gForce;3",
      "radian": "dtmi:standard:unit:radian;3",
      "degreeOfArc": "dtmi:standard:unit:degreeOfArc;3",
      "minuteOfArc": "dtmi:standard:unit:minuteOfArc;3",
      "secondOfArc": "dtmi:standard:unit:secondOfArc;3",
      "turn": "dtmi:standard:unit:turn;3",
      "radianPerSecondSquared": "dtmi:standard:unit:radianPerSecondSquared;3",
      "radianPerSecond": "dtmi:standard:unit:radianPerSecond;3",
      "degreePerSecond": "dtmi:standard:unit:degreePerSecond;3",
      "revolutionPerSecond": "dtmi:standard:unit:revolutionPerSecond;3",
      "revolutionPerMinute": "dtmi:standard:unit:revolutionPerMinute;3",
      "squareMetre": "dtmi:standard:unit:squareMetre;3",
      "squareCentimetre": "dtmi:standard:unit:squareCentimetre;3",
      "squareMillimetre": "dtmi:standard:unit:squareMillimetre;3",
      "squareKilometre": "dtmi:standard:unit:squareKilometre;3",
      "hectare": "dtmi:standard:unit:hectare;3",
      "squareFoot": "dtmi:standard:unit:squareFoot;3",
      "squareInch": "dtmi:standard:unit:squareInch;3",
      "acre": "dtmi:standard:unit:acre;3",
      "farad": "dtmi:standard:unit:farad;3",
      "millifarad": "dtmi:standard:unit:millifarad;3",
      "microfarad": "dtmi:standard:unit:microfarad;3",
      "nanofarad": "dtmi:standard:unit:nanofarad;3",
      "picofarad": "dtmi:standard:unit:picofarad;3",
      "coulomb": "dtmi:standard:unit:coulomb;3",
      "ampere": "dtmi:standard:unit:ampere;3",
      "microampere": "dtmi:standard:unit:microampere;3",
      "milliampere": "dtmi:standard:unit:milliampere;3",
      "bitPerSecond": "dtmi:standard:unit:bitPerSecond;3",
      "kibibitPerSecond": "dtmi:standard:unit:kibibitPerSecond;3",
      "mebibitPerSecond": "dtmi:standard:unit:mebibitPerSecond;3",
      "gibibitPerSecond": "dtmi:standard:unit:gibibitPerSecond;3",
      "tebibitPerSecond": "dtmi:standard:unit:tebibitPerSecond;3",
      "exbibitPerSecond": "dtmi:standard:unit:exbibitPerSecond;3",
      "zebibitPerSecond": "dtmi:standard:unit:zebibitPerSecond;3",
      "yobibitPerSecond": "dtmi:standard:unit:yobibitPerSecond;3",
      "bytePerSecond": "dtmi:standard:unit:bytePerSecond;3",
      "kibibytePerSecond": "dtmi:standard:unit:kibibytePerSecond;3",
      "mebibytePerSecond": "dtmi:standard:unit:mebibytePerSecond;3",
      "gibibytePerSecond": "dtmi:standard:unit:gibibytePerSecond;3",
      "tebibytePerSecond": "dtmi:standard:unit:tebibytePerSecond;3",
      "exbibytePerSecond": "dtmi:standard:unit:exbibytePerSecond;3",
      "zebibytePerSecond": "dtmi:standard:unit:zebibytePerSecond;3",
      "yobibytePerSecond": "dtmi:standard:unit:yobibytePerSecond;3",
      "bit": "dtmi:standard:unit:bit;3",
      "kibibit": "dtmi:standard:unit:kibibit;3",
      "mebibit": "dtmi:standard:unit:mebibit;3",
      "gibibit": "dtmi:standard:unit:gibibit;3",
      "tebibit": "dtmi:standard:unit:tebibit;3",
      "exbibit": "dtmi:standard:unit:exbibit;3",
      "zebibit": "dtmi:standard:unit:zebibit;3",
      "yobibit": "dtmi:standard:unit:yobibit;3",
      "byte": "dtmi:standard:unit:byte;3",
      "kibibyte": "dtmi:standard:unit:kibibyte;3",
      "mebibyte": "dtmi:standard:unit:mebibyte;3",
      "gibibyte": "dtmi:standard:unit:gibibyte;3",
      "tebibyte": "dtmi:standard:unit:tebibyte;3",
      "exbibyte": "dtmi:standard:unit:exbibyte;3",
      "zebibyte": "dtmi:standard:unit:zebibyte;3",
      "yobibyte": "dtmi:standard:unit:yobibyte;3",
      "kilogramPerCubicMetre": "dtmi:standard:unit:kilogramPerCubicMetre;3",
      "gramPerCubicMetre": "dtmi:standard:unit:gramPerCubicMetre;3",
      "joule": "dtmi:standard:unit:joule;3",
      "kilojoule": "dtmi:standard:unit:kilojoule;3",
      "megajoule": "dtmi:standard:unit:megajoule;3",
      "gigajoule": "dtmi:standard:unit:gigajoule;3",
      "electronvolt": "dtmi:standard:unit:electronvolt;3",
      "megaelectronvolt": "dtmi:standard:unit:megaelectronvolt;3",
      "kilowattHour": "dtmi:standard:unit:kilowattHour;3",
      "newton": "dtmi:standard:unit:newton;3",
      "pound": "dtmi:standard:unit:pound;3",
      "ounce": "dtmi:standard:unit:ounce;3",
      "ton": "dtmi:standard:unit:ton;3",
      "hertz": "dtmi:standard:unit:hertz;3",
      "kilohertz": "dtmi:standard:unit:kilohertz;3",
      "megahertz": "dtmi:standard:unit:megahertz;3",
      "gigahertz": "dtmi:standard:unit:gigahertz;3",
      "lux": "dtmi:standard:unit:lux;3",
      "footcandle": "dtmi:standard:unit:footcandle;3",
      "henry": "dtmi:standard:unit:henry;3",
      "millihenry": "dtmi:standard:unit:millihenry;3",
      "microhenry": "dtmi:standard:unit:microhenry;3",
      "metre": "dtmi:standard:unit:metre;3",
      "centimetre": "dtmi:standard:unit:centimetre;3",
      "millimetre": "dtmi:standard:unit:millimetre;3",
      "micrometre": "dtmi:standard:unit:micrometre;3",
      "nanometre": "dtmi:standard:unit:nanometre;3",
      "kilometre": "dtmi:standard:unit:kilometre;3",
      "foot": "dtmi:standard:unit:foot;3",
      "inch": "dtmi:standard:unit:inch;3",
      "mile": "dtmi:standard:unit:mile;3",
      "nauticalMile": "dtmi:standard:unit:nauticalMile;3",
      "astronomicalUnit": "dtmi:standard:unit:astronomicalUnit;3",
      "candelaPerSquareMetre": "dtmi:standard:unit:candelaPerSquareMetre;3",
      "lumen": "dtmi:standard:unit:lumen;3",
      "candela": "dtmi:standard:unit:candela;3",
      "weber": "dtmi:standard:unit:weber;3",
      "maxwell": "dtmi:standard:unit:maxwell;3",
      "tesla": "dtmi:standard:unit:tesla;3",
      "kilogram": "dtmi:standard:unit:kilogram;3",
      "gram": "dtmi:standard:unit:gram;3",
      "milligram": "dtmi:standard:unit:milligram;3",
      "microgram": "dtmi:standard:unit:microgram;3",
      "tonne": "dtmi:standard:unit:tonne;3",
      "slug": "dtmi:standard:unit:slug;3",
      "gramPerSecond": "dtmi:standard:unit:gramPerSecond;3",
      "kilogramPerSecond": "dtmi:standard:unit:kilogramPerSecond;3",
      "gramPerHour": "dtmi:standard:unit:gramPerHour;3",
      "kilogramPerHour": "dtmi:standard:unit:kilogramPerHour;3",
      "watt": "dtmi:standard:unit:watt;3",
      "microwatt": "dtmi:standard:unit:microwatt;3",
      "milliwatt": "dtmi:standard:unit:milliwatt;3",
      "kilowatt": "dtmi:standard:unit:kilowatt;3",
      "megawatt": "dtmi:standard:unit:megawatt;3",
      "gigawatt": "dtmi:standard:unit:gigawatt;3",
      "horsepower": "dtmi:standard:unit:horsepower;3",
      "kilowattHourPerYear": "dtmi:standard:unit:kilowattHourPerYear;3",
      "pascal": "dtmi:standard:unit:pascal;3",
      "kilopascal": "dtmi:standard:unit:kilopascal;3",
      "bar": "dtmi:standard:unit:bar;3",
      "millibar": "dtmi:standard:unit:millibar;3",
      "millimetresOfMercury": "dtmi:standard:unit:millimetresOfMercury;3",
      "poundPerSquareInch": "dtmi:standard:unit:poundPerSquareInch;3",
      "inchesOfMercury": "dtmi:standard:unit:inchesOfMercury;3",
      "inchesOfWater": "dtmi:standard:unit:inchesOfWater;3",
      "ohm": "dtmi:standard:unit:ohm;3",
      "milliohm": "dtmi:standard:unit:milliohm;3",
      "kiloohm": "dtmi:standard:unit:kiloohm;3",
      "megaohm": "dtmi:standard:unit:megaohm;3",
      "decibel": "dtmi:standard:unit:decibel;3",
      "bel": "dtmi:standard:unit:bel;3",
      "kelvin": "dtmi:standard:unit:kelvin;3",
      "degreeCelsius": "dtmi:standard:unit:degreeCelsius;3",
      "degreeFahrenheit": "dtmi:standard:unit:degreeFahrenheit;3",
      "second": "dtmi:standard:unit:second;3",
      "millisecond": "dtmi:standard:unit:millisecond;3",
      "microsecond": "dtmi:standard:unit:microsecond;3",
      "nanosecond": "dtmi:standard:unit:nanosecond;3",
      "minute": "dtmi:standard:unit:minute;3",
      "hour": "dtmi:standard:unit:hour;3",
      "day": "dtmi:standard:unit:day;3",
      "year": "dtmi:standard:unit:year;3",
      "unity": "dtmi:standard:unit:unity;3",
      "percent": "dtmi:standard:unit:percent;3",
      "newtonMetre": "dtmi:standard:unit:newtonMetre;3",
      "metrePerSecond": "dtmi:standard:unit:metrePerSecond;3",
      "centimetrePerSecond": "dtmi:standard:unit:centimetrePerSecond;3",
      "kilometrePerSecond": "dtmi:standard:unit:kilometrePerSecond;3",
      "metrePerHour": "dtmi:standard:unit:metrePerHour;3",
      "kilometrePerHour": "dtmi:standard:unit:kilometrePerHour;3",
      "milePerHour": "dtmi:standard:unit:milePerHour;3",
      "milePerSecond": "dtmi:standard:unit:milePerSecond;3",
      "knot": "dtmi:standard:unit:knot;3",
      "volt": "dtmi:standard:unit:volt;3",
      "millivolt": "dtmi:standard:unit:millivolt;3",
      "microvolt": "dtmi:standard:unit:microvolt;3",
      "kilovolt": "dtmi:standard:unit:kilovolt;3",
      "megavolt": "dtmi:standard:unit:megavolt;3",
      "cubicMetre": "dtmi:standard:unit:cubicMetre;3",
      "cubicCentimetre": "dtmi:standard:unit:cubicCentimetre;3",
      "litre": "dtmi:standard:unit:litre;3",
      "millilitre": "dtmi:standard:unit:millilitre;3",
      "cubicFoot": "dtmi:standard:unit:cubicFoot;3",
      "cubicInch": "dtmi:standard:unit:cubicInch;3",
      "fluidOunce": "dtmi:standard:unit:fluidOunce;3",
      "gallon": "dtmi:standard:unit:gallon;3",
      "litrePerSecond": "dtmi:standard:unit:litrePerSecond;3",
      "millilitrePerSecond": "dtmi:standard:unit:millilitrePerSecond;3",
      "litrePerHour": "dtmi:standard:unit:litrePerHour;3",
      "millilitrePerHour": "dtmi:standard:unit:millilitrePerHour;3",
      "point": "dtmi:standard:schema:geospatial:point;3",
      "multiPoint": "dtmi:standard:schema:geospatial:multiPoint;3",
      "lineString": "dtmi:standard:schema:geospatial:lineString;3",
      "multiLineString": "dtmi:standard:schema:geospatial:multiLineString;3",
      "polygon": "dtmi:standard:schema:geospatial:polygon;3",
      "multiPolygon": "dtmi:standard:schema:geospatial:multiPolygon;3"
    },
    "dtmi:iotcentral:context;2": {
      "State": "dtmi:iotcentral:class:State;2",
      "Event": "dtmi:iotcentral:class:Event;2",
      "Location": "dtmi:iotcentral:class:Location;2",
      "VelocityVector": "dtmi:iotcentral:class:VelocityVector;2",
      "AccelerationVector": "dtmi:iotcentral:class:AccelerationVector;2",
      "vector": "dtmi:iotcentral:schema:vector;2",
      "geopoint": "dtmi:iotcentral:schema:geopoint;2"
    },
    "dtmi:iotcentral:context;3": {
      "State": "dtmi:iotcentral:class:State;3",
      "Event": "dtmi:iotcentral:class:Event;3",
      "Location": "dtmi:iotcentral:class:Location;3",
      "VelocityVector": "dtmi:iotcentral:class:VelocityVector;3",
      "AccelerationVector": "dtmi:iotcentral:class:AccelerationVector;3",
      "vector": "dtmi:iotcentral:schema:vector;3",
      "geopoint": "dtmi:iotcentral:schema:geopoint;3"
    },
    "dtmi:dtdl:extension:layering;1": {
      "Layer": "dtmi:dtdl:extension:layering:v1:Layer"
    },
    "dtmi:dtdl:extension:initialization;1": {
      "Initialized": "dtmi:dtdl:extension:initialization:v1:Initialized",
      "initialValue": "dtmi:dtdl:extension:initialization:v1:Initialized:initialValue"
    },
    "dtmi:dtdl:extension:historization;1": {
      "Historized": "dtmi:dtdl:extension:historization:v1:Historized"
    },
    "dtmi:dtdl:extension:historization;2": {
      "Historized": "dtmi:dtdl:extension:historization:v2:Historized"
    }
  },
  "baseClass": "Entity",
  "partitionClasses": [
    "Interface"
  ],
  "rootableClasses": {
    "2": [
      "Interface"
    ],
    "3": [
      "Interface"
    ]
  },
  "identifierDefinition": {
    "Interface": {
      "2": {
        "maxLength": 128
      },
      "3": {
        "maxLength": 128
      }
    },
    "2": {
      "pattern": "^dtmi:[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?(?::[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?)*;[1-9][0-9]{0,8}$",
      "maxLength": 2048
    },
    "3": {
      "pattern": "^dtmi:[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?(?::[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?)*(?:;[1-9][0-9]{0,8}(?:\\.[1-9][0-9]{0,5})?)?(?:#(?:[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?)?)?$",
      "maxLength": 2048
    }
  },
  "identifierReference": {
    "2": {
      "pattern": "^dtmi:[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?(?::[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?)*;[1-9][0-9]{0,8}$",
      "maxLength": 2048
    },
    "3": {
      "pattern": "^dtmi:[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?(?::[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?)*(?:;[1-9][0-9]{0,8}(?:\\.[1-9][0-9]{0,5})?)?$",
      "maxLength": 2048
    }
  },
  "dtdlVersionsAllowingLocalTerms": [
    3
  ],
  "extensionKinds": [
    "None",
    "SemanticType",
    "SemanticUnit",
    "Unit",
    "UnitAttribute",
    "AdjunctType",
    "LatentType",
    "NamedLatentType"
  ],
  "extensibleMaterialClasses": {
    "2": [
      "Unit",
      "UnitAttribute"
    ],
    "3": [
      "LatentType",
      "NamedLatentType",
      "Unit",
      "UnitAttribute"
    ]
  },
  "materialClasses": {
    "Array": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "ComplexSchema",
      "instance": {
        "criteriaText": "is a JSON array that conforms to the specific Array element defined in the model",
        "2": {
          "element": {
            "jsonType": "array"
          },
          "eachChild": {
            "instanceOf": [
              "elementSchema"
            ]
          }
        },
        "3": {
          "element": {
            "jsonType": "array"
          },
          "eachChild": {
            "instanceOf": [
              "elementSchema"
            ]
          }
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Array",
        "dtmi:dtdl:class:ComplexSchema",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Array"
        ],
        "3": [
          "Array"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Array.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Array."
      },
      "badTypeActionFormat": {
        "2": "Provide a value for property '{property}' with @type Array.",
        "3": "Provide a value for property '{property}' with @type Array."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "elementSchema": {
          "_": {
            "literal": false,
            "class": "Schema",
            "abstract": true,
            "plural": false,
            "optional": false,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              3,
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        }
      }
    },
    "Boolean": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "PrimitiveSchema",
      "instance": {
        "criteriaText": "is a boolean value",
        "2": {
          "element": {
            "jsonType": "boolean"
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "jsonType": "boolean"
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Boolean",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Boolean"
        ],
        "3": [
          "Boolean"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Boolean"
        ],
        "3": [
          "Boolean"
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "standardElementIds": {
        "2": [
          "dtmi:dtdl:instance:Schema:boolean;2"
        ],
        "3": [
          "dtmi:dtdl:instance:Schema:boolean;3"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Choose the following value for property '{property}': boolean.",
        "3": "Choose the following value for property '{property}': boolean."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        }
      }
    },
    "Command": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "Content",
      "typeIds": [
        "dtmi:dtdl:class:Command",
        "dtmi:dtdl:class:Content",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity"
      ],
      "concreteSubclasses": {
        "2": [
          "Command"
        ],
        "3": [
          "Command"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Command.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Command."
      },
      "badTypeActionFormat": {
        "2": "Provide a value for property '{property}' with @type Command.",
        "3": "Provide a value for property '{property}' with @type Command."
      },
      "properties": {
        "commandType": {
          "_": {
            "literal": false,
            "class": "CommandType",
            "abstract": false,
            "plural": false,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": true,
            "allowed": true,
            "class": "CommandType",
            "versions": [
              2
            ],
            "maxCount": 1,
            "typeRequired": true
          },
          "3": {
            "idRequired": true,
            "allowed": true,
            "class": "CommandType",
            "versions": [
              3
            ],
            "maxCount": 1,
            "typeRequired": true
          }
        },
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": true
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          }
        },
        "request": {
          "_": {
            "literal": false,
            "class": "CommandPayload",
            "abstract": false,
            "plural": false,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "CommandPayload",
            "versions": [
              2
            ],
            "maxCount": 1,
            "typeRequired": false
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "CommandRequest",
            "versions": [
              3
            ],
            "maxCount": 1,
            "typeRequired": false
          }
        },
        "response": {
          "_": {
            "literal": false,
            "class": "CommandPayload",
            "abstract": false,
            "plural": false,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "CommandPayload",
            "versions": [
              2
            ],
            "maxCount": 1,
            "typeRequired": false
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "CommandResponse",
            "versions": [
              3
            ],
            "maxCount": 1,
            "typeRequired": false
          }
        }
      }
    },
    "CommandPayload": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "SchemaField",
      "typeIds": [
        "dtmi:dtdl:class:CommandPayload",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity",
        "dtmi:dtdl:class:SchemaField"
      ],
      "concreteSubclasses": {
        "2": [
          "CommandPayload"
        ],
        "3": [
          "CommandRequest",
          "CommandResponse"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of CommandPayload.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of CommandRequest or CommandResponse."
      },
      "badTypeActionFormat": {
        "2": "Provide a value for property '{property}' with @type CommandPayload.",
        "3": "Provide a value for property '{property}' with @type CommandRequest or CommandResponse."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          }
        },
        "schema": {
          "_": {
            "literal": false,
            "class": "Schema",
            "abstract": true,
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              3,
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true
          }
        }
      }
    },
    "CommandType": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "Entity",
      "typeIds": [
        "dtmi:dtdl:class:CommandType",
        "dtmi:dtdl:class:Entity"
      ],
      "concreteSubclasses": {
        "2": [
          "CommandType"
        ],
        "3": [
          "CommandType"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "CommandType"
        ],
        "3": [
          "CommandType"
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "standardElementIds": {
        "2": [
          "dtmi:dtdl:instance:CommandType:asynchronous;2",
          "dtmi:dtdl:instance:CommandType:synchronous;2"
        ],
        "3": [
          "dtmi:dtdl:instance:CommandType:asynchronous;3",
          "dtmi:dtdl:instance:CommandType:synchronous;3"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Choose one of the following values for property '{property}': asynchronous, synchronous.",
        "3": "Choose one of the following values for property '{property}': asynchronous, synchronous."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        }
      }
    },
    "ComplexSchema": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": true,
      "overt": false,
      "partition": false,
      "parentClass": "Schema",
      "typeIds": [
        "dtmi:dtdl:class:ComplexSchema",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Array",
          "Enum",
          "Map",
          "Object"
        ],
        "3": [
          "Array",
          "Enum",
          "Map",
          "Object"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Array, Enum, Map, or Object.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Array, Enum, Map, or Object."
      },
      "badTypeActionFormat": {
        "2": "Provide a value for property '{property}' with @type in the set of allowable types.",
        "3": "Provide a value for property '{property}' with @type in the set of allowable types."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        }
      }
    },
    "Component": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "Content",
      "typeIds": [
        "dtmi:dtdl:class:Component",
        "dtmi:dtdl:class:Content",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity"
      ],
      "concreteSubclasses": {
        "2": [
          "Component"
        ],
        "3": [
          "Component"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Component.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Component."
      },
      "badTypeActionFormat": {
        "2": "Provide a value for property '{property}' with @type Component.",
        "3": "Provide a value for property '{property}' with @type Component."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": true
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          }
        },
        "schema": {
          "_": {
            "literal": false,
            "class": "Interface",
            "abstract": false,
            "plural": false,
            "optional": false,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": true,
            "allowed": true,
            "class": "Interface",
            "versions": [
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true
          },
          "3": {
            "idRequired": true,
            "allowed": true,
            "class": "Interface",
            "versions": [
              3,
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true
          }
        }
      }
    },
    "Content": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": true,
      "overt": false,
      "partition": false,
      "parentClass": "NamedEntity",
      "typeIds": [
        "dtmi:dtdl:class:Content",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity"
      ],
      "concreteSubclasses": {
        "2": [
          "Command",
          "Component",
          "Property",
          "Relationship",
          "Telemetry"
        ],
        "3": [
          "Command",
          "Component",
          "Property",
          "Relationship",
          "Telemetry"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Command, Component, Property, Relationship, or Telemetry.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Command, Component, Property, Relationship, or Telemetry."
      },
      "badTypeActionFormat": {
        "2": "Provide a value for property '{property}' with @type in the set of allowable types.",
        "3": "Provide a value for property '{property}' with @type in the set of allowable types."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": true
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          }
        }
      }
    },
    "Date": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "TemporalSchema",
      "instance": {
        "criteriaText": "is a string value that conforms to the RFC 3339 definition of 'date'",
        "2": {
          "element": {
            "jsonType": "string",
            "datatype": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "jsonType": "string",
            "datatype": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Date",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema",
        "dtmi:dtdl:class:TemporalSchema"
      ],
      "concreteSubclasses": {
        "2": [
          "Date"
        ],
        "3": [
          "Date"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Date"
        ],
        "3": [
          "Date"
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "standardElementIds": {
        "2": [
          "dtmi:dtdl:instance:Schema:date;2"
        ],
        "3": [
          "dtmi:dtdl:instance:Schema:date;3"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Choose the following value for property '{property}': date.",
        "3": "Choose the following value for property '{property}': date."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        }
      }
    },
    "DateTime": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "TemporalSchema",
      "instance": {
        "criteriaText": "is a string value that conforms to the RFC 3339 definition of 'dateTime'",
        "2": {
          "element": {
            "jsonType": "string",
            "datatype": "dateTime",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(?:\\.[0-9]+)?(?:Z|(?:\\+|\\-)[0-9]{2}:[0-9]{2})$"
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "jsonType": "string",
            "datatype": "dateTime",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(?:\\.[0-9]+)?(?:Z|(?:\\+|\\-)[0-9]{2}:[0-9]{2})$"
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:DateTime",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema",
        "dtmi:dtdl:class:TemporalSchema"
      ],
      "concreteSubclasses": {
        "2": [
          "DateTime"
        ],
        "3": [
          "DateTime"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "DateTime"
        ],
        "3": [
          "DateTime"
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "standardElementIds": {
        "2": [
          "dtmi:dtdl:instance:Schema:dateTime;2"
        ],
        "3": [
          "dtmi:dtdl:instance:Schema:dateTime;3"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Choose the following value for property '{property}': dateTime.",
        "3": "Choose the following value for property '{property}': dateTime."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        }
      }
    },
    "Double": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "NumericSchema",
      "instance": {
        "criteriaText": "is a numeric value that conforms to the XSD definition of 'double'",
        "2": {
          "element": {
            "jsonType": "number",
            "datatype": "double"
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "jsonType": "number",
            "datatype": "double"
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Double",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NumericSchema",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Double"
        ],
        "3": [
          "Double"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Double"
        ],
        "3": [
          "Double"
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "standardElementIds": {
        "2": [
          "dtmi:dtdl:instance:Schema:double;2"
        ],
        "3": [
          "dtmi:dtdl:instance:Schema:double;3"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Choose the following value for property '{property}': double.",
        "3": "Choose the following value for property '{property}': double."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        }
      }
    },
    "Duration": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "TemporalSchema",
      "instance": {
        "criteriaText": "is a string value that conforms to the ISO 8601 definition of 'duration'",
        "2": {
          "element": {
            "jsonType": "string",
            "datatype": "duration",
            "pattern": "^P(?!$)(?:(?:\\d+Y)|(?:\\d+\\.\\d+Y$))?(?:(?:\\d+M)|(?:\\d+\\.\\d+M$))?(?:(?:\\d+D)|(?:\\d+\\.\\d+D$))?(?:T(?!$)(?:(?:\\d+H)|(?:\\d+\\.\\d+H$))?(?:(?:\\d+M)|(?:\\d+\\.\\d+M$))?(?:\\d+(?:\\.\\d+)?S)?)?$"
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "jsonType": "string",
            "datatype": "duration",
            "pattern": "^P(?!$)(?:(?:\\d+Y)|(?:\\d+\\.\\d+Y$))?(?:(?:\\d+M)|(?:\\d+\\.\\d+M$))?(?:(?:\\d+D)|(?:\\d+\\.\\d+D$))?(?:T(?!$)(?:(?:\\d+H)|(?:\\d+\\.\\d+H$))?(?:(?:\\d+M)|(?:\\d+\\.\\d+M$))?(?:\\d+(?:\\.\\d+)?S)?)?$"
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Duration",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema",
        "dtmi:dtdl:class:TemporalSchema"
      ],
      "concreteSubclasses": {
        "2": [
          "Duration"
        ],
        "3": [
          "Duration"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Duration"
        ],
        "3": [
          "Duration"
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "standardElementIds": {
        "2": [
          "dtmi:dtdl:instance:Schema:duration;2"
        ],
        "3": [
          "dtmi:dtdl:instance:Schema:duration;3"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Choose the following value for property '{property}': duration.",
        "3": "Choose the following value for property '{property}': duration."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        }
      }
    },
    "Entity": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": true,
      "overt": false,
      "partition": false,
      "parentClass": null,
      "typeIds": [
        "dtmi:dtdl:class:Entity"
      ],
      "concreteSubclasses": {
        "2": [
          "Array",
          "Boolean",
          "Command",
          "CommandPayload",
          "CommandType",
          "Component",
          "Date",
          "DateTime",
          "Double",
          "Duration",
          "Enum",
          "EnumValue",
          "Field",
          "Float",
          "Integer",
          "Interface",
          "Long",
          "Map",
          "MapKey",
          "MapValue",
          "Object",
          "Property",
          "Relationship",
          "String",
          "Telemetry",
          "Time"
        ],
        "3": [
          "Array",
          "Boolean",
          "Command",
          "CommandRequest",
          "CommandResponse",
          "CommandType",
          "Component",
          "Date",
          "DateTime",
          "Double",
          "Duration",
          "Enum",
          "EnumValue",
          "Field",
          "Float",
          "Integer",
          "Interface",
          "Long",
          "Map",
          "MapKey",
          "MapValue",
          "Object",
          "Property",
          "Relationship",
          "String",
          "Telemetry",
          "Time"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Boolean",
          "CommandType",
          "Date",
          "DateTime",
          "Double",
          "Duration",
          "Float",
          "Integer",
          "Long",
          "String",
          "Time"
        ],
        "3": [
          "Boolean",
          "CommandType",
          "Date",
          "DateTime",
          "Double",
          "Duration",
          "Float",
          "Integer",
          "Long",
          "String",
          "Time"
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [
          "Unit",
          "UnitAttribute"
        ],
        "3": [
          "LatentType",
          "NamedLatentType",
          "Unit",
          "UnitAttribute"
        ]
      },
      "badTypeCauseFormat": {
        "2": "Top-level element{secondaryId:e} does not have @type of Array, Command, CommandPayload, Component, Enum, EnumValue, Field, Interface, Map, MapKey, MapValue, Object, Property, Relationship, or Telemetry.",
        "3": "Top-level element{secondaryId:e} does not have @type of Array, Command, CommandRequest, CommandResponse, Component, Enum, EnumValue, Field, Interface, Map, MapKey, MapValue, Object, Property, Relationship, or Telemetry."
      },
      "badTypeActionFormat": {
        "2": "Provide a @type in the set of allowable types.",
        "3": "Provide a @type in the set of allowable types."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        }
      }
    },
    "Enum": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "ComplexSchema",
      "instance": {
        "criteriaText": "conforms to the specific Enum element defined in the model",
        "2": {
          "element": {
            "instanceOf": [
              "valueSchema",
              "enumValues"
            ]
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "instanceOf": [
              "valueSchema",
              "enumValues"
            ]
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:ComplexSchema",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:Enum",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Enum"
        ],
        "3": [
          "Enum"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Enum.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Enum."
      },
      "badTypeActionFormat": {
        "2": "Provide a value for property '{property}' with @type Enum.",
        "3": "Provide a value for property '{property}' with @type Enum."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "enumValues": {
          "_": {
            "literal": false,
            "class": "EnumValue",
            "abstract": false,
            "plural": true,
            "optional": false,
            "dtmiSegment": "name",
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "EnumValue",
            "versions": [
              2
            ],
            "maxCount": 100,
            "minCount": 1,
            "typeRequired": false,
            "uniqueProperties": [
              "name",
              "enumValue"
            ]
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "EnumValue",
            "versions": [
              3
            ],
            "maxCount": 100,
            "minCount": 1,
            "typeRequired": false,
            "uniqueProperties": [
              "name",
              "enumValue"
            ]
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        },
        "valueSchema": {
          "_": {
            "literal": false,
            "class": "PrimitiveSchema",
            "abstract": true,
            "plural": false,
            "optional": false,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": true,
            "allowed": true,
            "class": "PrimitiveSchema",
            "versions": [
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "values": [
              "integer",
              "string"
            ],
            "typeRequired": true
          },
          "3": {
            "idRequired": true,
            "allowed": true,
            "class": "PrimitiveSchema",
            "versions": [
              3
            ],
            "maxCount": 1,
            "minCount": 1,
            "values": [
              "integer",
              "string"
            ],
            "typeRequired": true
          }
        }
      }
    },
    "EnumValue": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "NamedEntity",
      "instance": {
        "criteriaText": "conforms to the specific EnumValue element defined in the model",
        "2": {
          "element": {
            "hasValue": "enumValue"
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "hasValue": "enumValue"
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:EnumValue",
        "dtmi:dtdl:class:NamedEntity"
      ],
      "concreteSubclasses": {
        "2": [
          "EnumValue"
        ],
        "3": [
          "EnumValue"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of EnumValue.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of EnumValue."
      },
      "badTypeActionFormat": {
        "2": "Provide a value for property '{property}' with @type EnumValue.",
        "3": "Provide a value for property '{property}' with @type EnumValue."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "enumValue": {
          "_": {
            "literal": true,
            "abstract": false,
            "plural": false,
            "optional": false,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": true
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          }
        }
      }
    },
    "Field": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "SchemaField",
      "instance": {
        "criteriaText": "conforms to the specific Field element defined in the model",
        "2": {
          "element": {
            "instanceOf": [
              "schema"
            ],
            "nameHasValue": "name"
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "instanceOf": [
              "schema"
            ],
            "nameHasValue": "name"
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:Field",
        "dtmi:dtdl:class:NamedEntity",
        "dtmi:dtdl:class:SchemaField"
      ],
      "concreteSubclasses": {
        "2": [
          "Field"
        ],
        "3": [
          "Field"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Field.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Field."
      },
      "badTypeActionFormat": {
        "2": "Provide a value for property '{property}' with @type Field.",
        "3": "Provide a value for property '{property}' with @type Field."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": true
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          }
        },
        "schema": {
          "_": {
            "literal": false,
            "class": "Schema",
            "abstract": true,
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              3,
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true
          }
        }
      }
    },
    "Float": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "NumericSchema",
      "instance": {
        "criteriaText": "is a numeric value that conforms to the XSD definition of 'float'",
        "2": {
          "element": {
            "jsonType": "number",
            "datatype": "float"
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "jsonType": "number",
            "datatype": "float"
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:Float",
        "dtmi:dtdl:class:NumericSchema",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Float"
        ],
        "3": [
          "Float"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Float"
        ],
        "3": [
          "Float"
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "standardElementIds": {
        "2": [
          "dtmi:dtdl:instance:Schema:float;2"
        ],
        "3": [
          "dtmi:dtdl:instance:Schema:float;3"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Choose the following value for property '{property}': float.",
        "3": "Choose the following value for property '{property}': float."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        }
      }
    },
    "Integer": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "NumericSchema",
      "instance": {
        "criteriaText": "is a numeric value that conforms to the XSD definition of 'int'",
        "2": {
          "element": {
            "jsonType": "number",
            "datatype": "int"
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "jsonType": "number",
            "datatype": "int"
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:Integer",
        "dtmi:dtdl:class:NumericSchema",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Integer"
        ],
        "3": [
          "Integer"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Integer"
        ],
        "3": [
          "Integer"
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "standardElementIds": {
        "2": [
          "dtmi:dtdl:instance:Schema:integer;2"
        ],
        "3": [
          "dtmi:dtdl:instance:Schema:integer;3"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Choose the following value for property '{property}': integer.",
        "3": "Choose the following value for property '{property}': integer."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        }
      }
    },
    "Interface": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": true,
      "parentClass": "Entity",
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:Interface"
      ],
      "concreteSubclasses": {
        "2": [
          "Interface"
        ],
        "3": [
          "Interface"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Interface.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Interface."
      },
      "badTypeActionFormat": {
        "2": "Provide a value for property '{property}' with @type Interface.",
        "3": "Provide a value for property '{property}' with @type Interface."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "contents": {
          "_": {
            "literal": false,
            "class": "Content",
            "abstract": true,
            "plural": true,
            "optional": true,
            "dtmiSegment": "name",
            "inherited": false,
            "shadowed": true,
            "isKey": false,
            "isSeg": false,
            "dictionaryKey": "name"
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "Content",
            "versions": [
              2
            ],
            "maxCount": 300,
            "typeRequired": true,
            "uniqueProperties": [
              "name"
            ]
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "Content",
            "versions": [
              3,
              2
            ],
            "maxCount": 300,
            "typeRequired": true,
            "uniqueProperties": [
              "name"
            ]
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "extends": {
          "_": {
            "literal": false,
            "class": "Interface",
            "abstract": false,
            "plural": true,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": true,
            "allowed": true,
            "class": "Interface",
            "versions": [
              2
            ],
            "maxCount": 2,
            "typeRequired": true
          },
          "3": {
            "idRequired": true,
            "allowed": true,
            "class": "Interface",
            "versions": [
              3,
              2
            ],
            "maxCount": 2,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        },
        "schemas": {
          "_": {
            "literal": false,
            "class": "ComplexSchema",
            "abstract": true,
            "plural": true,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": true,
            "allowed": true,
            "class": "ComplexSchema",
            "versions": [
              2
            ],
            "typeRequired": true
          },
          "3": {
            "idRequired": true,
            "allowed": true,
            "class": "ComplexSchema",
            "versions": [
              3
            ],
            "typeRequired": true
          }
        }
      }
    },
    "Long": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "NumericSchema",
      "instance": {
        "criteriaText": "is a numeric value that conforms to the XSD definition of 'long'",
        "2": {
          "element": {
            "jsonType": "number",
            "datatype": "long"
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "jsonType": "number",
            "datatype": "long"
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:Long",
        "dtmi:dtdl:class:NumericSchema",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Long"
        ],
        "3": [
          "Long"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Long"
        ],
        "3": [
          "Long"
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "standardElementIds": {
        "2": [
          "dtmi:dtdl:instance:Schema:long;2"
        ],
        "3": [
          "dtmi:dtdl:instance:Schema:long;3"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Choose the following value for property '{property}': long.",
        "3": "Choose the following value for property '{property}': long."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        }
      }
    },
    "Map": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "ComplexSchema",
      "instance": {
        "criteriaText": "is a JSON object that conforms to the specific Map element defined in the model",
        "2": {
          "element": {
            "jsonType": "object"
          },
          "eachChild": {
            "instanceOf": [
              "mapValue"
            ]
          }
        },
        "3": {
          "element": {
            "jsonType": "object"
          },
          "eachChild": {
            "instanceOf": [
              "mapValue"
            ]
          }
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:ComplexSchema",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:Map",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Map"
        ],
        "3": [
          "Map"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Map.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Map."
      },
      "badTypeActionFormat": {
        "2": "Provide a value for property '{property}' with @type Map.",
        "3": "Provide a value for property '{property}' with @type Map."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        },
        "mapKey": {
          "_": {
            "literal": false,
            "class": "MapKey",
            "abstract": false,
            "plural": false,
            "optional": false,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "MapKey",
            "versions": [
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": false
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "MapKey",
            "versions": [
              3
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": false
          }
        },
        "mapValue": {
          "_": {
            "literal": false,
            "class": "MapValue",
            "abstract": false,
            "plural": false,
            "optional": false,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "MapValue",
            "versions": [
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": false
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "MapValue",
            "versions": [
              3
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": false
          }
        }
      }
    },
    "MapKey": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "NamedEntity",
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:MapKey",
        "dtmi:dtdl:class:NamedEntity"
      ],
      "concreteSubclasses": {
        "2": [
          "MapKey"
        ],
        "3": [
          "MapKey"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of MapKey.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of MapKey."
      },
      "badTypeActionFormat": {
        "2": "Provide a value for property '{property}' with @type MapKey.",
        "3": "Provide a value for property '{property}' with @type MapKey."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          }
        },
        "schema": {
          "_": {
            "literal": false,
            "class": "String",
            "abstract": false,
            "plural": false,
            "optional": false,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": true,
            "allowed": true,
            "class": "String",
            "versions": [
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true
          },
          "3": {
            "idRequired": true,
            "allowed": true,
            "class": "String",
            "versions": [
              3
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true
          }
        }
      }
    },
    "MapValue": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "SchemaField",
      "instance": {
        "criteriaText": "conforms to the specific MapValue element defined in the model",
        "2": {
          "element": {
            "instanceOf": [
              "schema"
            ]
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "instanceOf": [
              "schema"
            ]
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:MapValue",
        "dtmi:dtdl:class:NamedEntity",
        "dtmi:dtdl:class:SchemaField"
      ],
      "concreteSubclasses": {
        "2": [
          "MapValue"
        ],
        "3": [
          "MapValue"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of MapValue.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of MapValue."
      },
      "badTypeActionFormat": {
        "2": "Provide a value for property '{property}' with @type MapValue.",
        "3": "Provide a value for property '{property}' with @type MapValue."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          }
        },
        "schema": {
          "_": {
            "literal": false,
            "class": "Schema",
            "abstract": true,
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              3,
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true
          }
        }
      }
    },
    "NamedEntity": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": true,
      "overt": false,
      "partition": false,
      "parentClass": "Entity",
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity"
      ],
      "concreteSubclasses": {
        "2": [
          "Command",
          "CommandPayload",
          "Component",
          "EnumValue",
          "Field",
          "MapKey",
          "MapValue",
          "Property",
          "Relationship",
          "Telemetry"
        ],
        "3": [
          "Command",
          "CommandRequest",
          "CommandResponse",
          "Component",
          "EnumValue",
          "Field",
          "MapKey",
          "MapValue",
          "Property",
          "Relationship",
          "Telemetry"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [
          "UnitAttribute"
        ],
        "3": [
          "NamedLatentType",
          "UnitAttribute"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Command, CommandPayload, Component, EnumValue, Field, MapKey, MapValue, Property, Relationship, or Telemetry.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Command, CommandRequest, CommandResponse, Component, EnumValue, Field, MapKey, MapValue, Property, Relationship, or Telemetry."
      },
      "badTypeActionFormat": {
        "2": "Provide a value for property '{property}' with @type in the set of allowable types.",
        "3": "Provide a value for property '{property}' with @type in the set of allowable types."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          }
        }
      }
    },
    "NumericSchema": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": true,
      "overt": false,
      "partition": false,
      "parentClass": "PrimitiveSchema",
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NumericSchema",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Double",
          "Float",
          "Integer",
          "Long"
        ],
        "3": [
          "Double",
          "Float",
          "Integer",
          "Long"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Double",
          "Float",
          "Integer",
          "Long"
        ],
        "3": [
          "Double",
          "Float",
          "Integer",
          "Long"
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Choose one of the following values for property '{property}': double, float, integer, long.",
        "3": "Choose one of the following values for property '{property}': double, float, integer, long."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        }
      }
    },
    "Object": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "ComplexSchema",
      "instance": {
        "criteriaText": "is a JSON object that conforms to the specific Object element defined in the model",
        "2": {
          "element": {
            "jsonType": "object"
          },
          "eachChild": {
            "instanceOf": [
              "fields"
            ]
          }
        },
        "3": {
          "element": {
            "jsonType": "object"
          },
          "eachChild": {
            "instanceOf": [
              "fields"
            ]
          }
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:ComplexSchema",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:Object",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Object"
        ],
        "3": [
          "Object"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Object.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Object."
      },
      "badTypeActionFormat": {
        "2": "Provide a value for property '{property}' with @type Object.",
        "3": "Provide a value for property '{property}' with @type Object."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "fields": {
          "_": {
            "literal": false,
            "class": "Field",
            "abstract": false,
            "plural": true,
            "optional": false,
            "dtmiSegment": "name",
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "Field",
            "versions": [
              2
            ],
            "maxCount": 30,
            "minCount": 1,
            "typeRequired": false,
            "uniqueProperties": [
              "name"
            ]
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "Field",
            "versions": [
              3
            ],
            "maxCount": 30,
            "minCount": 1,
            "typeRequired": false,
            "uniqueProperties": [
              "name"
            ]
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        }
      }
    },
    "PrimitiveSchema": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": true,
      "overt": false,
      "partition": false,
      "parentClass": "Schema",
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Boolean",
          "Date",
          "DateTime",
          "Double",
          "Duration",
          "Float",
          "Integer",
          "Long",
          "String",
          "Time"
        ],
        "3": [
          "Boolean",
          "Date",
          "DateTime",
          "Double",
          "Duration",
          "Float",
          "Integer",
          "Long",
          "String",
          "Time"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Boolean",
          "Date",
          "DateTime",
          "Double",
          "Duration",
          "Float",
          "Integer",
          "Long",
          "String",
          "Time"
        ],
        "3": [
          "Boolean",
          "Date",
          "DateTime",
          "Double",
          "Duration",
          "Float",
          "Integer",
          "Long",
          "String",
          "Time"
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Choose one of the following values for property '{property}': boolean, date, dateTime, double, duration, float, integer, long, string, time.",
        "3": "Choose one of the following values for property '{property}': boolean, date, dateTime, double, duration, float, integer, long, string, time."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        }
      }
    },
    "Property": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "Content",
      "typeIds": [
        "dtmi:dtdl:class:Content",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity",
        "dtmi:dtdl:class:Property"
      ],
      "concreteSubclasses": {
        "2": [
          "Property"
        ],
        "3": [
          "Property"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Property.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Property."
      },
      "badTypeActionFormat": {
        "2": "Provide a value for property '{property}' with @type Property.",
        "3": "Provide a value for property '{property}' with @type Property."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": true
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          }
        },
        "schema": {
          "_": {
            "literal": false,
            "class": "Schema",
            "abstract": true,
            "plural": false,
            "optional": false,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              3,
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true
          }
        },
        "writable": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "boolean",
            "plural": false,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "typeRequired": true
          }
        }
      }
    },
    "Relationship": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "Content",
      "typeIds": [
        "dtmi:dtdl:class:Content",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity",
        "dtmi:dtdl:class:Relationship"
      ],
      "concreteSubclasses": {
        "2": [
          "Relationship"
        ],
        "3": [
          "Relationship"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Relationship.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Relationship."
      },
      "badTypeActionFormat": {
        "2": "Provide a value for property '{property}' with @type Relationship.",
        "3": "Provide a value for property '{property}' with @type Relationship."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        },
        "maxMultiplicity": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxInclusive": 500,
            "minInclusive": 1,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxInclusive": 500,
            "minInclusive": 1,
            "typeRequired": true
          }
        },
        "minMultiplicity": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxInclusive": 0,
            "minInclusive": 0,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxInclusive": 0,
            "minInclusive": 0,
            "typeRequired": true
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": true
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          }
        },
        "properties": {
          "_": {
            "literal": false,
            "class": "Property",
            "abstract": false,
            "plural": true,
            "optional": true,
            "dtmiSegment": "name",
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "Property",
            "versions": [
              2
            ],
            "maxCount": 300,
            "typeRequired": true,
            "uniqueProperties": [
              "name"
            ]
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "Property",
            "versions": [
              3,
              2
            ],
            "maxCount": 300,
            "typeRequired": true,
            "uniqueProperties": [
              "name"
            ]
          }
        },
        "target": {
          "_": {
            "literal": false,
            "abstract": false,
            "plural": false,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": true,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 2048,
            "pattern": "^dtmi:[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?(?::[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?)*;[1-9][0-9]{0,8}$",
            "typeRequired": true
          },
          "3": {
            "idRequired": true,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 2048,
            "pattern": "^dtmi:[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?(?::[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?)*(?:;[1-9][0-9]{0,8}(?:\\.[1-9][0-9]{0,5})?)?$",
            "typeRequired": true
          }
        },
        "writable": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "boolean",
            "plural": false,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "typeRequired": true
          }
        }
      }
    },
    "Schema": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": true,
      "overt": false,
      "partition": false,
      "parentClass": "Entity",
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Array",
          "Boolean",
          "Date",
          "DateTime",
          "Double",
          "Duration",
          "Enum",
          "Float",
          "Integer",
          "Long",
          "Map",
          "Object",
          "String",
          "Time"
        ],
        "3": [
          "Array",
          "Boolean",
          "Date",
          "DateTime",
          "Double",
          "Duration",
          "Enum",
          "Float",
          "Integer",
          "Long",
          "Map",
          "Object",
          "String",
          "Time"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Boolean",
          "Date",
          "DateTime",
          "Double",
          "Duration",
          "Float",
          "Integer",
          "Long",
          "String",
          "Time"
        ],
        "3": [
          "Boolean",
          "Date",
          "DateTime",
          "Double",
          "Duration",
          "Float",
          "Integer",
          "Long",
          "String",
          "Time"
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Array, Enum, Map, or Object, nor is it a standard value for this property.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Array, Enum, Map, or Object, nor is it a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Provide a value for property '{property}' with @type in the set of allowable types, or choose one of the following values for property '{property}': boolean, date, dateTime, double, duration, float, integer, long, string, time.",
        "3": "Provide a value for property '{property}' with @type in the set of allowable types, or choose one of the following values for property '{property}': boolean, date, dateTime, double, duration, float, integer, long, string, time."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        }
      }
    },
    "SchemaField": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": true,
      "overt": false,
      "partition": false,
      "parentClass": "NamedEntity",
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity",
        "dtmi:dtdl:class:SchemaField"
      ],
      "concreteSubclasses": {
        "2": [
          "CommandPayload",
          "Field",
          "MapValue"
        ],
        "3": [
          "CommandRequest",
          "CommandResponse",
          "Field",
          "MapValue"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of CommandPayload, Field, or MapValue.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of CommandRequest, CommandResponse, Field, or MapValue."
      },
      "badTypeActionFormat": {
        "2": "Provide a value for property '{property}' with @type in the set of allowable types.",
        "3": "Provide a value for property '{property}' with @type in the set of allowable types."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          }
        },
        "schema": {
          "_": {
            "literal": false,
            "class": "Schema",
            "abstract": true,
            "plural": false,
            "optional": false,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              3,
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true
          }
        }
      }
    },
    "String": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "PrimitiveSchema",
      "instance": {
        "criteriaText": "is a string value",
        "2": {
          "element": {
            "jsonType": "string"
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "jsonType": "string"
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema",
        "dtmi:dtdl:class:String"
      ],
      "concreteSubclasses": {
        "2": [
          "String"
        ],
        "3": [
          "String"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "String"
        ],
        "3": [
          "String"
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "standardElementIds": {
        "2": [
          "dtmi:dtdl:instance:Schema:string;2"
        ],
        "3": [
          "dtmi:dtdl:instance:Schema:string;3"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Choose the following value for property '{property}': string.",
        "3": "Choose the following value for property '{property}': string."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        }
      }
    },
    "Telemetry": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "Content",
      "typeIds": [
        "dtmi:dtdl:class:Content",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity",
        "dtmi:dtdl:class:Telemetry"
      ],
      "concreteSubclasses": {
        "2": [
          "Telemetry"
        ],
        "3": [
          "Telemetry"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Telemetry.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Telemetry."
      },
      "badTypeActionFormat": {
        "2": "Provide a value for property '{property}' with @type Telemetry.",
        "3": "Provide a value for property '{property}' with @type Telemetry."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": true
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          }
        },
        "schema": {
          "_": {
            "literal": false,
            "class": "Schema",
            "abstract": true,
            "plural": false,
            "optional": false,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              3,
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true
          }
        }
      }
    },
    "TemporalSchema": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": true,
      "overt": false,
      "partition": false,
      "parentClass": "PrimitiveSchema",
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema",
        "dtmi:dtdl:class:TemporalSchema"
      ],
      "concreteSubclasses": {
        "2": [
          "Date",
          "DateTime",
          "Duration",
          "Time"
        ],
        "3": [
          "Date",
          "DateTime",
          "Duration",
          "Time"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Date",
          "DateTime",
          "Duration",
          "Time"
        ],
        "3": [
          "Date",
          "DateTime",
          "Duration",
          "Time"
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Choose one of the following values for property '{property}': date, dateTime, duration, time.",
        "3": "Choose one of the following values for property '{property}': date, dateTime, duration, time."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        }
      }
    },
    "Time": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "TemporalSchema",
      "instance": {
        "criteriaText": "is a string value that conforms to the RFC 3339 definition of 'time'",
        "2": {
          "element": {
            "jsonType": "string",
            "datatype": "time",
            "pattern": "^[0-9]{2}:[0-9]{2}:[0-9]{2}(?:\\.[0-9]+)?(?:Z|(?:\\+|\\-)[0-9]{2}:[0-9]{2})$"
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "jsonType": "string",
            "datatype": "time",
            "pattern": "^[0-9]{2}:[0-9]{2}:[0-9]{2}(?:\\.[0-9]+)?(?:Z|(?:\\+|\\-)[0-9]{2}:[0-9]{2})$"
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema",
        "dtmi:dtdl:class:TemporalSchema",
        "dtmi:dtdl:class:Time"
      ],
      "concreteSubclasses": {
        "2": [
          "Time"
        ],
        "3": [
          "Time"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Time"
        ],
        "3": [
          "Time"
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "standardElementIds": {
        "2": [
          "dtmi:dtdl:instance:Schema:time;2"
        ],
        "3": [
          "dtmi:dtdl:instance:Schema:time;3"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Choose the following value for property '{property}': time.",
        "3": "Choose the following value for property '{property}': time."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        }
      }
    },
    "Unit": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": false,
      "partition": false,
      "parentClass": "Entity",
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:Unit"
      ],
      "concreteSubclasses": {
        "2": [],
        "3": []
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [
          "Unit"
        ],
        "3": [
          "Unit"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Choose a value for property '{property}' whose type is a subtype of Unit.",
        "3": "Choose a value for property '{property}' whose type is a subtype of Unit."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        },
        "symbol": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "typeRequired": true
          }
        }
      }
    },
    "UnitAttribute": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": false,
      "partition": false,
      "parentClass": "NamedEntity",
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity",
        "dtmi:dtdl:class:UnitAttribute"
      ],
      "concreteSubclasses": {
        "2": [],
        "3": []
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [
          "UnitAttribute"
        ],
        "3": [
          "UnitAttribute"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Choose a value for property '{property}' whose type is a subtype of UnitAttribute.",
        "3": "Choose a value for property '{property}' whose type is a subtype of UnitAttribute."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          }
        }
      }
    },
    "CommandRequest": {
      "dtdlVersions": [
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "CommandPayload",
      "typeIds": [
        "dtmi:dtdl:class:CommandPayload",
        "dtmi:dtdl:class:CommandRequest",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity",
        "dtmi:dtdl:class:SchemaField"
      ],
      "concreteSubclasses": {
        "3": [
          "CommandRequest"
        ]
      },
      "elementalSubclasses": {
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "3": []
      },
      "badTypeCauseFormat": {
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of CommandRequest."
      },
      "badTypeActionFormat": {
        "3": "Provide a value for property '{property}' with @type CommandRequest."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          }
        },
        "schema": {
          "_": {
            "literal": false,
            "class": "Schema",
            "abstract": false,
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              3,
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true
          }
        }
      }
    },
    "CommandResponse": {
      "dtdlVersions": [
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "parentClass": "CommandPayload",
      "typeIds": [
        "dtmi:dtdl:class:CommandPayload",
        "dtmi:dtdl:class:CommandResponse",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity",
        "dtmi:dtdl:class:SchemaField"
      ],
      "concreteSubclasses": {
        "3": [
          "CommandResponse"
        ]
      },
      "elementalSubclasses": {
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "3": []
      },
      "badTypeCauseFormat": {
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of CommandResponse."
      },
      "badTypeActionFormat": {
        "3": "Provide a value for property '{property}' with @type CommandResponse."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          }
        },
        "schema": {
          "_": {
            "literal": false,
            "class": "Schema",
            "abstract": false,
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              3,
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true
          }
        }
      }
    },
    "LatentType": {
      "dtdlVersions": [
        3
      ],
      "abstract": false,
      "overt": false,
      "partition": false,
      "parentClass": "Entity",
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:LatentType"
      ],
      "concreteSubclasses": {
        "3": []
      },
      "elementalSubclasses": {
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "3": [
          "LatentType"
        ]
      },
      "badTypeCauseFormat": {
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "3": "Choose a value for property '{property}' whose type is a subtype of LatentType."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        }
      }
    },
    "NamedLatentType": {
      "dtdlVersions": [
        3
      ],
      "abstract": false,
      "overt": false,
      "partition": false,
      "parentClass": "NamedEntity",
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity",
        "dtmi:dtdl:class:NamedLatentType"
      ],
      "concreteSubclasses": {
        "3": []
      },
      "elementalSubclasses": {
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "3": [
          "NamedLatentType"
        ]
      },
      "badTypeCauseFormat": {
        "3": "{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "3": "Choose a value for property '{property}' whose type is a subtype of NamedLatentType."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "isKey": false,
            "isSeg": false
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "typeRequired": true
          }
        }
      }
    }
  },
  "descendantControls": [
    {
      "dtdlVersion": 2,
      "rootClass": "Array",
      "definingClass": "ComplexSchema",
      "properties": [
        "elementSchema",
        "schema"
      ],
      "narrow": false,
      "maxDepth": 5
    },
    {
      "dtdlVersion": 2,
      "rootClass": "ComplexSchema",
      "definingClass": "ComplexSchema",
      "properties": [
        "elementSchema",
        "schema"
      ],
      "narrow": false,
      "maxDepth": 5
    },
    {
      "dtdlVersion": 2,
      "rootClass": "Component",
      "definingClass": "Component",
      "properties": [
        "contents"
      ],
      "narrow": false,
      "excludeType": "Component"
    },
    {
      "dtdlVersion": 2,
      "rootClass": "Enum",
      "definingClass": "ComplexSchema",
      "properties": [
        "elementSchema",
        "schema"
      ],
      "narrow": false,
      "maxDepth": 5
    },
    {
      "dtdlVersion": 2,
      "rootClass": "Enum",
      "definingClass": "Enum",
      "properties": [
        "enumValue"
      ],
      "narrow": false,
      "datatypeProperty": "valueSchema"
    },
    {
      "dtdlVersion": 2,
      "rootClass": "Interface",
      "definingClass": "Interface",
      "properties": [
        "extends"
      ],
      "narrow": true,
      "importProperties": [
        "contents"
      ],
      "maxDepth": 10
    },
    {
      "dtdlVersion": 2,
      "rootClass": "Map",
      "definingClass": "ComplexSchema",
      "properties": [
        "elementSchema",
        "schema"
      ],
      "narrow": false,
      "maxDepth": 5
    },
    {
      "dtdlVersion": 2,
      "rootClass": "Object",
      "definingClass": "ComplexSchema",
      "properties": [
        "elementSchema",
        "schema"
      ],
      "narrow": false,
      "maxDepth": 5
    },
    {
      "dtdlVersion": 2,
      "rootClass": "Property",
      "definingClass": "Property",
      "properties": [
        "schema"
      ],
      "narrow": false,
      "excludeType": "Array"
    },
    {
      "dtdlVersion": 3,
      "rootClass": "Array",
      "definingClass": "ComplexSchema",
      "properties": [
        "elementSchema",
        "schema"
      ],
      "narrow": false,
      "maxDepth": 5
    },
    {
      "dtdlVersion": 3,
      "rootClass": "ComplexSchema",
      "definingClass": "ComplexSchema",
      "properties": [
        "elementSchema",
        "schema"
      ],
      "narrow": false,
      "maxDepth": 5
    },
    {
      "dtdlVersion": 3,
      "rootClass": "Component",
      "definingClass": "Component",
      "properties": [
        "contents"
      ],
      "narrow": false,
      "excludeType": "Component"
    },
    {
      "dtdlVersion": 3,
      "rootClass": "Enum",
      "definingClass": "ComplexSchema",
      "properties": [
        "elementSchema",
        "schema"
      ],
      "narrow": false,
      "maxDepth": 5
    },
    {
      "dtdlVersion": 3,
      "rootClass": "Enum",
      "definingClass": "Enum",
      "properties": [
        "enumValue"
      ],
      "narrow": false,
      "datatypeProperty": "valueSchema"
    },
    {
      "dtdlVersion": 3,
      "rootClass": "Interface",
      "definingClass": "Interface",
      "properties": [
        "extends"
      ],
      "narrow": true,
      "importProperties": [
        "contents"
      ],
      "maxDepth": 10
    },
    {
      "dtdlVersion": 3,
      "rootClass": "Map",
      "definingClass": "ComplexSchema",
      "properties": [
        "elementSchema",
        "schema"
      ],
      "narrow": false,
      "maxDepth": 5
    },
    {
      "dtdlVersion": 3,
      "rootClass": "Object",
      "definingClass": "ComplexSchema",
      "properties": [
        "elementSchema",
        "schema"
      ],
      "narrow": false,
      "maxDepth": 5
    }
  ],
  "supplementalTypes": {
    "dtmi:dtdl:extension:historization:v1:Historized": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:AdjunctType;3",
      "extensionKind": "AdjunctType",
      "extensionContext": "dtmi:dtdl:extension:historization;1",
      "cotypes": [
        "Property"
      ],
      "cotypeVersions": [
        2,
        3
      ],
      "properties": {},
      "constraints": []
    },
    "dtmi:dtdl:extension:historization:v2:Historized": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:AdjunctType;3",
      "extensionKind": "AdjunctType",
      "extensionContext": "dtmi:dtdl:extension:historization;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2,
        3
      ],
      "properties": {},
      "constraints": []
    },
    "dtmi:dtdl:extension:initialization:v1:Initialized": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:AdjunctType;3",
      "extensionKind": "AdjunctType",
      "extensionContext": "dtmi:dtdl:extension:initialization;1",
      "cotypes": [
        "CommandPayload",
        "CommandRequest",
        "Property"
      ],
      "cotypeVersions": [
        2,
        3
      ],
      "properties": {
        "dtmi:dtdl:extension:initialization:v1:Initialized:initialValue": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "instanceOf": "schema",
          "type": "http://www.w3.org/1999/02/22-rdf-syntax-ns#JSON"
        }
      },
      "constraints": []
    },
    "dtmi:dtdl:extension:layering:v1:Layer": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:AdjunctType;3",
      "extensionKind": "AdjunctType",
      "extensionContext": "dtmi:dtdl:extension:layering;1",
      "cotypes": [
        "Command",
        "Interface",
        "Property",
        "Relationship",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {},
      "constraints": []
    },
    "dtmi:iotcentral:class:AccelerationVector;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:SemanticType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:iotcentral:context;2",
      "cotypes": [
        "Property",
        "Relationship",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "plural": false,
          "optional": true,
          "type": "dtmi:standard:class:AccelerationUnit;2"
        }
      },
      "constraints": [
        {
          "property": "schema",
          "requiredValues": [
            "dtmi:iotcentral:schema:vector;2"
          ],
          "requiredValuesString": "vector"
        }
      ]
    },
    "dtmi:iotcentral:class:AccelerationVector;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:SemanticType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:iotcentral:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Relationship",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "plural": false,
          "optional": true,
          "type": "dtmi:standard:class:AccelerationUnit;3"
        }
      },
      "constraints": [
        {
          "property": "schema",
          "requiredValues": [
            "dtmi:iotcentral:schema:vector;3"
          ],
          "requiredValuesString": "vector"
        }
      ]
    },
    "dtmi:iotcentral:class:Event;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:SemanticType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:iotcentral:context;2",
      "cotypes": [
        "Property",
        "Relationship",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {},
      "constraints": [
        {
          "property": "schema",
          "requiredTypes": [
            "dtmi:dtdl:class:NumericSchema;2",
            "dtmi:dtdl:class:String;2"
          ],
          "requiredTypesString": "NumericSchema or String"
        }
      ]
    },
    "dtmi:iotcentral:class:Event;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:SemanticType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:iotcentral:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Relationship",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {},
      "constraints": [
        {
          "property": "schema",
          "requiredTypes": [
            "dtmi:dtdl:class:NumericSchema;3",
            "dtmi:dtdl:class:String;3"
          ],
          "requiredTypesString": "NumericSchema or String"
        }
      ]
    },
    "dtmi:iotcentral:class:Location;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:SemanticType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:iotcentral:context;2",
      "cotypes": [
        "Property",
        "Relationship",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {},
      "constraints": [
        {
          "property": "schema",
          "requiredValues": [
            "dtmi:standard:schema:geospatial:point;2",
            "dtmi:standard:schema:geospatial:multiPoint;2",
            "dtmi:standard:schema:geospatial:lineString;2",
            "dtmi:standard:schema:geospatial:multiLineString;2",
            "dtmi:standard:schema:geospatial:polygon;2",
            "dtmi:standard:schema:geospatial:multiPolygon;2",
            "dtmi:iotcentral:schema:geopoint;2"
          ],
          "requiredValuesString": "point or multiPoint or lineString or multiLineString or polygon or multiPolygon or geopoint"
        }
      ]
    },
    "dtmi:iotcentral:class:Location;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:SemanticType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:iotcentral:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Relationship",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {},
      "constraints": [
        {
          "property": "schema",
          "requiredValues": [
            "dtmi:standard:schema:geospatial:point;3",
            "dtmi:standard:schema:geospatial:multiPoint;3",
            "dtmi:standard:schema:geospatial:lineString;3",
            "dtmi:standard:schema:geospatial:multiLineString;3",
            "dtmi:standard:schema:geospatial:polygon;3",
            "dtmi:standard:schema:geospatial:multiPolygon;3",
            "dtmi:iotcentral:schema:geopoint;3"
          ],
          "requiredValuesString": "point or multiPoint or lineString or multiLineString or polygon or multiPolygon or geopoint"
        }
      ]
    },
    "dtmi:iotcentral:class:State;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:SemanticType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:iotcentral:context;2",
      "cotypes": [
        "Property",
        "Relationship",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {},
      "constraints": [
        {
          "property": "schema",
          "requiredTypes": [
            "dtmi:dtdl:class:Enum;2"
          ],
          "requiredTypesString": "Enum"
        }
      ]
    },
    "dtmi:iotcentral:class:State;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:SemanticType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:iotcentral:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Relationship",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {},
      "constraints": [
        {
          "property": "schema",
          "requiredTypes": [
            "dtmi:dtdl:class:Enum;3"
          ],
          "requiredTypesString": "Enum"
        }
      ]
    },
    "dtmi:iotcentral:class:VelocityVector;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:SemanticType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:iotcentral:context;2",
      "cotypes": [
        "Property",
        "Relationship",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "plural": false,
          "optional": true,
          "type": "dtmi:standard:class:VelocityUnit;2"
        }
      },
      "constraints": [
        {
          "property": "schema",
          "requiredValues": [
            "dtmi:iotcentral:schema:vector;2"
          ],
          "requiredValuesString": "vector"
        }
      ]
    },
    "dtmi:iotcentral:class:VelocityVector;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:SemanticType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:iotcentral:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Relationship",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "plural": false,
          "optional": true,
          "type": "dtmi:standard:class:VelocityUnit;3"
        }
      },
      "constraints": [
        {
          "property": "schema",
          "requiredValues": [
            "dtmi:iotcentral:schema:vector;3"
          ],
          "requiredValuesString": "vector"
        }
      ]
    },
    "dtmi:dtdl:class:AdjunctType;3": {
      "abstract": true,
      "parent": null,
      "extensionKind": "None",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Array",
        "Boolean",
        "Command",
        "CommandPayload",
        "CommandRequest",
        "CommandResponse",
        "CommandType",
        "Component",
        "Date",
        "DateTime",
        "Double",
        "Duration",
        "Enum",
        "EnumValue",
        "Field",
        "Float",
        "Integer",
        "Interface",
        "LatentType",
        "Long",
        "Map",
        "MapKey",
        "MapValue",
        "NamedLatentType",
        "Object",
        "Property",
        "Relationship",
        "String",
        "Telemetry",
        "Time",
        "Unit",
        "UnitAttribute"
      ],
      "cotypeVersions": [
        2,
        3
      ],
      "properties": {},
      "constraints": []
    },
    "dtmi:dtdl:class:SemanticType;2": {
      "abstract": true,
      "parent": null,
      "extensionKind": "None",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Relationship",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {},
      "constraints": []
    },
    "dtmi:dtdl:class:SemanticType;3": {
      "abstract": true,
      "parent": null,
      "extensionKind": "None",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Relationship",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {},
      "constraints": []
    },
    "dtmi:dtdl:class:SemanticUnit;2": {
      "abstract": true,
      "parent": null,
      "extensionKind": "None",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Unit"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {},
      "constraints": []
    },
    "dtmi:dtdl:class:SemanticUnit;3": {
      "abstract": true,
      "parent": null,
      "extensionKind": "None",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Unit"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:Acceleration;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:AccelerationUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Acceleration;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:AccelerationUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:AccelerationUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:AccelerationUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:Angle;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:AngleUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Angle;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:AngleUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:AngleUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:AngleUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:AngularAcceleration;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:AngularAccelerationUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:AngularAcceleration;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:AngularAccelerationUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:AngularAccelerationUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:AngularAccelerationUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:AngularVelocity;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:AngularVelocityUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:AngularVelocity;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:AngularVelocityUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:AngularVelocityUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:AngularVelocityUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:Area;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:AreaUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Area;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:AreaUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:AreaUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:AreaUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:BinaryPrefix;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:UnitAttribute;2",
      "extensionKind": "UnitAttribute",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {
        "dtmi:dtdl:property:exponent;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "http://www.w3.org/2001/XMLSchema#integer"
        },
        "dtmi:dtdl:property:symbol;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "http://www.w3.org/2001/XMLSchema#string"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:BinaryPrefix;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:UnitAttribute;3",
      "extensionKind": "UnitAttribute",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {
        "dtmi:dtdl:property:exponent;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "http://www.w3.org/2001/XMLSchema#integer"
        },
        "dtmi:dtdl:property:symbol;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "http://www.w3.org/2001/XMLSchema#string"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:BinaryUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:SemanticUnit;2",
      "extensionKind": "SemanticUnit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Unit"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:baseUnit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:dtdl:class:Unit;2"
        },
        "dtmi:dtdl:property:prefix;2": {
          "maxCount": 1,
          "plural": false,
          "optional": true,
          "type": "dtmi:standard:class:BinaryPrefix;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:BinaryUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:SemanticUnit;3",
      "extensionKind": "SemanticUnit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Unit"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:baseUnit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:dtdl:class:Unit;3"
        },
        "dtmi:dtdl:property:prefix;3": {
          "maxCount": 1,
          "plural": false,
          "optional": true,
          "type": "dtmi:standard:class:BinaryPrefix;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Capacitance;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:CapacitanceUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Capacitance;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:CapacitanceUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:CapacitanceUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:CapacitanceUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:ChargeUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:ChargeUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:Current;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:CurrentUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Current;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:CurrentUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:CurrentUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:CurrentUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:DataRate;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:DataRateUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:DataRate;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:DataRateUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:DataRateUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:DataRateUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:DataSize;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:DataSizeUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:DataSize;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:DataSizeUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:DataSizeUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:DataSizeUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:DecimalPrefix;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:UnitAttribute;2",
      "extensionKind": "UnitAttribute",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {
        "dtmi:dtdl:property:exponent;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "http://www.w3.org/2001/XMLSchema#integer"
        },
        "dtmi:dtdl:property:symbol;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "http://www.w3.org/2001/XMLSchema#string"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:DecimalPrefix;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:UnitAttribute;3",
      "extensionKind": "UnitAttribute",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {
        "dtmi:dtdl:property:exponent;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "http://www.w3.org/2001/XMLSchema#integer"
        },
        "dtmi:dtdl:property:symbol;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "http://www.w3.org/2001/XMLSchema#string"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:DecimalUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:SemanticUnit;2",
      "extensionKind": "SemanticUnit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Unit"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:baseUnit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:dtdl:class:Unit;2"
        },
        "dtmi:dtdl:property:prefix;2": {
          "maxCount": 1,
          "plural": false,
          "optional": true,
          "type": "dtmi:standard:class:DecimalPrefix;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:DecimalUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:SemanticUnit;3",
      "extensionKind": "SemanticUnit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Unit"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:baseUnit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:dtdl:class:Unit;3"
        },
        "dtmi:dtdl:property:prefix;3": {
          "maxCount": 1,
          "plural": false,
          "optional": true,
          "type": "dtmi:standard:class:DecimalPrefix;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Density;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:DensityUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Density;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:DensityUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:DensityUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:DensityUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:Distance;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:LengthUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Distance;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:LengthUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:ElectricCharge;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:ChargeUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:ElectricCharge;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:ChargeUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Energy;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:EnergyUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Energy;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:EnergyUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:EnergyUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:EnergyUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:Force;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:ForceUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Force;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:ForceUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:ForceUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:ForceUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:Frequency;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:FrequencyUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Frequency;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:FrequencyUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:FrequencyUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:FrequencyUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:Humidity;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:DensityUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Humidity;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:DensityUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Illuminance;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:IlluminanceUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Illuminance;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:IlluminanceUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:IlluminanceUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:IlluminanceUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:Inductance;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:InductanceUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Inductance;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:InductanceUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:InductanceUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:InductanceUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:Latitude;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:AngleUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Latitude;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:AngleUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Length;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:LengthUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Length;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:LengthUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:LengthUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:LengthUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:Longitude;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:AngleUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Longitude;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:AngleUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Luminance;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:LuminanceUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Luminance;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:LuminanceUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:LuminanceUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:LuminanceUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:Luminosity;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:PowerUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Luminosity;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:PowerUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:LuminousFlux;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:LuminousFluxUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:LuminousFlux;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:LuminousFluxUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:LuminousFluxUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:LuminousFluxUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:LuminousIntensity;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:LuminousIntensityUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:LuminousIntensity;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:LuminousIntensityUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:LuminousIntensityUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:LuminousIntensityUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:MagneticFlux;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:MagneticFluxUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:MagneticFlux;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:MagneticFluxUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:MagneticFluxUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:MagneticFluxUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:MagneticInduction;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:MagneticInductionUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:MagneticInduction;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:MagneticInductionUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:MagneticInductionUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:MagneticInductionUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:Mass;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:MassUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Mass;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:MassUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:MassFlowRate;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:MassFlowRateUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:MassFlowRate;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:MassFlowRateUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:MassFlowRateUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:MassFlowRateUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:MassUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:MassUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:Power;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:PowerUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Power;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:PowerUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:PowerUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:PowerUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:Pressure;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:PressureUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Pressure;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:PressureUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:PressureUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:PressureUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:QuantitativeType;2": {
      "abstract": true,
      "parent": "dtmi:dtdl:class:SemanticType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:dtdl:class:Unit;2"
        }
      },
      "constraints": [
        {
          "property": "schema",
          "requiredTypes": [
            "dtmi:dtdl:class:NumericSchema;2"
          ],
          "requiredTypesString": "NumericSchema"
        }
      ]
    },
    "dtmi:standard:class:QuantitativeType;3": {
      "abstract": true,
      "parent": "dtmi:dtdl:class:SemanticType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:dtdl:class:Unit;3"
        }
      },
      "constraints": [
        {
          "property": "schema",
          "requiredTypes": [
            "dtmi:dtdl:class:NumericSchema;3"
          ],
          "requiredTypesString": "NumericSchema"
        }
      ]
    },
    "dtmi:standard:class:RatioUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:SemanticUnit;2",
      "extensionKind": "SemanticUnit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Unit"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:bottomUnit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:dtdl:class:Unit;2"
        },
        "dtmi:dtdl:property:topUnit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:dtdl:class:Unit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:RatioUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:SemanticUnit;3",
      "extensionKind": "SemanticUnit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Unit"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:bottomUnit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:dtdl:class:Unit;3"
        },
        "dtmi:dtdl:property:topUnit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:dtdl:class:Unit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:RelativeHumidity;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:Unitless;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:RelativeHumidity;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:Unitless;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Resistance;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:ResistanceUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Resistance;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:ResistanceUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:ResistanceUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:ResistanceUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:SoundPressure;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:SoundPressureUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:SoundPressure;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:SoundPressureUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:SoundPressureUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:SoundPressureUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:Temperature;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:TemperatureUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Temperature;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:TemperatureUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:TemperatureUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:TemperatureUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:Thrust;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:ForceUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Thrust;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:ForceUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:TimeSpan;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:TimeUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:TimeSpan;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:TimeUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:TimeUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:TimeUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:Torque;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:TorqueUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Torque;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:TorqueUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:TorqueUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:TorqueUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:Unitless;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:Unitless;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:Velocity;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:VelocityUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Velocity;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:VelocityUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:VelocityUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:VelocityUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:Voltage;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:VoltageUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Voltage;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:VoltageUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:VoltageUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:VoltageUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:Volume;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:VolumeUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:Volume;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:VolumeUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:VolumeFlowRate;2": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ],
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:VolumeFlowRateUnit;2"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:VolumeFlowRate;3": {
      "abstract": false,
      "parent": "dtmi:standard:class:QuantitativeType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [
        "Field",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ],
      "properties": {
        "dtmi:dtdl:property:unit;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "type": "dtmi:standard:class:VolumeFlowRateUnit;3"
        }
      },
      "constraints": []
    },
    "dtmi:standard:class:VolumeFlowRateUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:VolumeFlowRateUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:VolumeUnit;2": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    },
    "dtmi:standard:class:VolumeUnit;3": {
      "abstract": false,
      "parent": "dtmi:dtdl:class:Unit;3",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;3",
      "cotypes": [],
      "cotypeVersions": [],
      "properties": {},
      "constraints": []
    }
  },
  "elements": [
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:dtdl:instance:Schema:boolean;2",
      "@type": "Boolean",
      "displayName": "boolean",
      "description": "a boolean value"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:dtdl:instance:Schema:double;2",
      "@type": "Double",
      "displayName": "double",
      "description": "an IEEE 8-byte floating point"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:dtdl:instance:Schema:float;2",
      "@type": "Float",
      "displayName": "float",
      "description": "an IEEE 4-byte floating point"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:dtdl:instance:Schema:integer;2",
      "@type": "Integer",
      "displayName": "integer",
      "description": "a signed 4-byte integer"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:dtdl:instance:Schema:long;2",
      "@type": "Long",
      "displayName": "long",
      "description": "a signed 8-byte integer"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:dtdl:instance:Schema:date;2",
      "@type": "Date",
      "displayName": "date",
      "description": "a date in ISO 8601 format, per RFC 3339"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:dtdl:instance:Schema:dateTime;2",
      "@type": "DateTime",
      "displayName": "dateTime",
      "description": "a date and time in ISO 8601 format, per RFC 3339"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:dtdl:instance:Schema:duration;2",
      "@type": "Duration",
      "displayName": "duration",
      "description": "a duration in ISO 8601 format"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:dtdl:instance:Schema:time;2",
      "@type": "Time",
      "displayName": "time",
      "description": "a time in ISO 8601 format, per RFC 3339"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:dtdl:instance:Schema:string;2",
      "@type": "String",
      "displayName": "string",
      "description": "a UTF8 string"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:dtdl:instance:CommandType:asynchronous;2",
      "@type": "CommandType",
      "displayName": "asynchronous",
      "description": "The command will complete sometime after control returns to the caller. After the command completes, the result and any outputs are available."
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:dtdl:instance:CommandType:synchronous;2",
      "@type": "CommandType",
      "displayName": "synchronous",
      "description": "The command will be complete when control returns to the caller. The result and any outputs are available immediately."
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:dtdl:instance:Schema:boolean;3",
      "@type": "Boolean",
      "displayName": "boolean",
      "description": "a boolean value"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:dtdl:instance:Schema:double;3",
      "@type": "Double",
      "displayName": "double",
      "description": "an IEEE 8-byte floating point"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:dtdl:instance:Schema:float;3",
      "@type": "Float",
      "displayName": "float",
      "description": "an IEEE 4-byte floating point"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:dtdl:instance:Schema:integer;3",
      "@type": "Integer",
      "displayName": "integer",
      "description": "a signed 4-byte integer"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:dtdl:instance:Schema:long;3",
      "@type": "Long",
      "displayName": "long",
      "description": "a signed 8-byte integer"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:dtdl:instance:Schema:date;3",
      "@type": "Date",
      "displayName": "date",
      "description": "a date in ISO 8601 format, per RFC 3339"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:dtdl:instance:Schema:dateTime;3",
      "@type": "DateTime",
      "displayName": "dateTime",
      "description": "a date and time in ISO 8601 format, per RFC 3339"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:dtdl:instance:Schema:duration;3",
      "@type": "Duration",
      "displayName": "duration",
      "description": "a duration in ISO 8601 format"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:dtdl:instance:Schema:time;3",
      "@type": "Time",
      "displayName": "time",
      "description": "a time in ISO 8601 format, per RFC 3339"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:dtdl:instance:Schema:string;3",
      "@type": "String",
      "displayName": "string",
      "description": "a UTF8 string"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:dtdl:instance:CommandType:asynchronous;3",
      "@type": "CommandType",
      "displayName": "asynchronous",
      "description": "The command will complete sometime after control returns to the caller. After the command completes, the result and any outputs are available."
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:dtdl:instance:CommandType:synchronous;3",
      "@type": "CommandType",
      "displayName": "synchronous",
      "description": "The command will be complete when control returns to the caller. The result and any outputs are available immediately."
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:deci;2",
      "@type": "DecimalPrefix",
      "name": "deci",
      "symbol": "d",
      "exponent": -1
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:centi;2",
      "@type": "DecimalPrefix",
      "name": "centi",
      "symbol": "c",
      "exponent": -2
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:milli;2",
      "@type": "DecimalPrefix",
      "name": "milli",
      "symbol": "m",
      "exponent": -3
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:micro;2",
      "@type": "DecimalPrefix",
      "name": "micro",
      "symbol": "µ",
      "exponent": -6
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:nano;2",
      "@type": "DecimalPrefix",
      "name": "nano",
      "symbol": "n",
      "exponent": -9
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:pico;2",
      "@type": "DecimalPrefix",
      "name": "pico",
      "symbol": "p",
      "exponent": -12
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:femto;2",
      "@type": "DecimalPrefix",
      "name": "femto",
      "symbol": "f",
      "exponent": -15
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:atto;2",
      "@type": "DecimalPrefix",
      "name": "atto",
      "symbol": "a",
      "exponent": -18
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:zepto;2",
      "@type": "DecimalPrefix",
      "name": "zepto",
      "symbol": "z",
      "exponent": -21
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:yocto;2",
      "@type": "DecimalPrefix",
      "name": "yocto",
      "symbol": "y",
      "exponent": -24
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:deka;2",
      "@type": "DecimalPrefix",
      "name": "deka",
      "symbol": "da",
      "exponent": 1
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:hecto;2",
      "@type": "DecimalPrefix",
      "name": "hecto",
      "symbol": "h",
      "exponent": 2
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:kilo;2",
      "@type": "DecimalPrefix",
      "name": "kilo",
      "symbol": "k",
      "exponent": 3
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:mega;2",
      "@type": "DecimalPrefix",
      "name": "mega",
      "symbol": "M",
      "exponent": 6
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:giga;2",
      "@type": "DecimalPrefix",
      "name": "giga",
      "symbol": "G",
      "exponent": 9
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:tera;2",
      "@type": "DecimalPrefix",
      "name": "tera",
      "symbol": "T",
      "exponent": 12
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:peta;2",
      "@type": "DecimalPrefix",
      "name": "peta",
      "symbol": "P",
      "exponent": 15
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:exa;2",
      "@type": "DecimalPrefix",
      "name": "exa",
      "symbol": "E",
      "exponent": 18
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:zetta;2",
      "@type": "DecimalPrefix",
      "name": "zetta",
      "symbol": "Z",
      "exponent": 21
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:yotta;2",
      "@type": "DecimalPrefix",
      "name": "yotta",
      "symbol": "Y",
      "exponent": 24
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:kibi;2",
      "@type": "BinaryPrefix",
      "name": "kibi",
      "symbol": "Ki",
      "exponent": 10
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:mebi;2",
      "@type": "BinaryPrefix",
      "name": "mebi",
      "symbol": "Mi",
      "exponent": 20
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:gibi;2",
      "@type": "BinaryPrefix",
      "name": "gibi",
      "symbol": "Gi",
      "exponent": 30
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:tebi;2",
      "@type": "BinaryPrefix",
      "name": "tebi",
      "symbol": "Ti",
      "exponent": 40
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:pebi;2",
      "@type": "BinaryPrefix",
      "name": "pebi",
      "symbol": "Pi",
      "exponent": 50
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:exbi;2",
      "@type": "BinaryPrefix",
      "name": "exbi",
      "symbol": "Ei",
      "exponent": 60
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:zebi;2",
      "@type": "BinaryPrefix",
      "name": "zebi",
      "symbol": "Zi",
      "exponent": 70
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:yobi;2",
      "@type": "BinaryPrefix",
      "name": "yobi",
      "symbol": "Yi",
      "exponent": 80
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:metrePerSecondSquared;2",
      "@type": [
        "AccelerationUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "metre per second squared",
      "symbol": "m/s²",
      "baseUnit": "metrePerSecondSquared",
      "topUnit": "metrePerSecond",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:centimetrePerSecondSquared;2",
      "@type": [
        "AccelerationUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "centimetre per second squared",
      "symbol": "cm/s²",
      "baseUnit": "metrePerSecondSquared",
      "prefix": "centi",
      "topUnit": "centimetrePerSecond",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gForce;2",
      "@type": [
        "AccelerationUnit"
      ],
      "displayName": "g-force",
      "symbol": "g"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:radian;2",
      "@type": [
        "AngleUnit"
      ],
      "displayName": "radian",
      "symbol": "rad"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:degreeOfArc;2",
      "@type": [
        "AngleUnit"
      ],
      "displayName": "degree of arc",
      "symbol": "°"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:minuteOfArc;2",
      "@type": [
        "AngleUnit"
      ],
      "displayName": "minute of arc",
      "symbol": "'"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:secondOfArc;2",
      "@type": [
        "AngleUnit"
      ],
      "displayName": "second of arc",
      "symbol": "\""
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:turn;2",
      "@type": [
        "AngleUnit"
      ],
      "displayName": "turn",
      "symbol": "turn"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:radianPerSecondSquared;2",
      "@type": [
        "AngularAccelerationUnit",
        "RatioUnit"
      ],
      "displayName": "radian per second squared",
      "symbol": "rad/s²",
      "topUnit": "radianPerSecond",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:radianPerSecond;2",
      "@type": [
        "AngularVelocityUnit",
        "RatioUnit"
      ],
      "displayName": "radian per second",
      "symbol": "rad/s",
      "topUnit": "radian",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:degreePerSecond;2",
      "@type": [
        "AngularVelocityUnit",
        "RatioUnit"
      ],
      "displayName": "degree per second",
      "symbol": "°/s",
      "topUnit": "degreeOfArc",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:revolutionPerSecond;2",
      "@type": [
        "AngularVelocityUnit",
        "RatioUnit"
      ],
      "displayName": "revolution per second",
      "symbol": "rps",
      "topUnit": "turn",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:revolutionPerMinute;2",
      "@type": [
        "AngularVelocityUnit",
        "RatioUnit"
      ],
      "displayName": "revolution per minute",
      "symbol": "rpm",
      "topUnit": "turn",
      "bottomUnit": "minute"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:squareMetre;2",
      "@type": [
        "AreaUnit"
      ],
      "displayName": "square metre",
      "symbol": "m²"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:squareCentimetre;2",
      "@type": [
        "AreaUnit"
      ],
      "displayName": "square centimetre",
      "symbol": "cm²"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:squareMillimetre;2",
      "@type": [
        "AreaUnit"
      ],
      "displayName": "square millimetre",
      "symbol": "mm²"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:squareKilometre;2",
      "@type": [
        "AreaUnit"
      ],
      "displayName": "square kilometre",
      "symbol": "km²"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:hectare;2",
      "@type": [
        "AreaUnit"
      ],
      "displayName": "hectare",
      "symbol": "ha"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:squareFoot;2",
      "@type": [
        "AreaUnit"
      ],
      "displayName": "square foot",
      "symbol": "ft²"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:squareInch;2",
      "@type": [
        "AreaUnit"
      ],
      "displayName": "square inch",
      "symbol": "in²"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:acre;2",
      "@type": [
        "AreaUnit"
      ],
      "displayName": "acre",
      "symbol": "ac"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:farad;2",
      "@type": [
        "CapacitanceUnit",
        "DecimalUnit"
      ],
      "displayName": "farad",
      "symbol": "F",
      "baseUnit": "farad"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:millifarad;2",
      "@type": [
        "CapacitanceUnit",
        "DecimalUnit"
      ],
      "displayName": "millifarad",
      "symbol": "mF",
      "baseUnit": "farad",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:microfarad;2",
      "@type": [
        "CapacitanceUnit",
        "DecimalUnit"
      ],
      "displayName": "microfarad",
      "symbol": "µF",
      "baseUnit": "farad",
      "prefix": "micro"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:nanofarad;2",
      "@type": [
        "CapacitanceUnit",
        "DecimalUnit"
      ],
      "displayName": "nanofarad",
      "symbol": "nF",
      "baseUnit": "farad",
      "prefix": "nano"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:picofarad;2",
      "@type": [
        "CapacitanceUnit",
        "DecimalUnit"
      ],
      "displayName": "picofarad",
      "symbol": "pF",
      "baseUnit": "farad",
      "prefix": "pico"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:coulomb;2",
      "@type": [
        "ChargeUnit",
        "DecimalUnit"
      ],
      "displayName": "coulomb",
      "symbol": "C",
      "baseUnit": "coulomb"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:ampere;2",
      "@type": [
        "CurrentUnit",
        "DecimalUnit"
      ],
      "displayName": "ampere",
      "symbol": "A",
      "baseUnit": "ampere"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:microampere;2",
      "@type": [
        "CurrentUnit",
        "DecimalUnit"
      ],
      "displayName": "microampere",
      "symbol": "µA",
      "baseUnit": "ampere",
      "prefix": "micro"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:milliampere;2",
      "@type": [
        "CurrentUnit",
        "DecimalUnit"
      ],
      "displayName": "milliampere",
      "symbol": "mA",
      "baseUnit": "ampere",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:bitPerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "bit per second",
      "symbol": "bps",
      "baseUnit": "bitPerSecond",
      "topUnit": "bit",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kibibitPerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "kibibit per second",
      "symbol": "Kibps",
      "baseUnit": "bitPerSecond",
      "prefix": "kibi",
      "topUnit": "kibibit",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:mebibitPerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "mebibit per second",
      "symbol": "Mibps",
      "baseUnit": "bitPerSecond",
      "prefix": "mebi",
      "topUnit": "mebibit",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gibibitPerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "gibibit per second",
      "symbol": "Gibps",
      "baseUnit": "bitPerSecond",
      "prefix": "gibi",
      "topUnit": "gibibit",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:tebibitPerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "tebibit per second",
      "symbol": "Tibps",
      "baseUnit": "bitPerSecond",
      "prefix": "tebi",
      "topUnit": "tebibit",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:exbibitPerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "exbibit per second",
      "symbol": "Eibps",
      "baseUnit": "bitPerSecond",
      "prefix": "exbi",
      "topUnit": "exbibit",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:zebibitPerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "zebibit per second",
      "symbol": "Zibps",
      "baseUnit": "bitPerSecond",
      "prefix": "zebi",
      "topUnit": "zebibit",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:yobibitPerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "yobibit per second",
      "symbol": "Yibps",
      "baseUnit": "bitPerSecond",
      "prefix": "yobi",
      "topUnit": "yobibit",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:bytePerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "byte per second",
      "symbol": "Bps",
      "baseUnit": "bytePerSecond",
      "topUnit": "byte",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kibibytePerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "kibibyte per second",
      "symbol": "KiBps",
      "baseUnit": "bytePerSecond",
      "prefix": "kibi",
      "topUnit": "kibibyte",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:mebibytePerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "mebibyte per second",
      "symbol": "MiBps",
      "baseUnit": "bytePerSecond",
      "prefix": "mebi",
      "topUnit": "mebibyte",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gibibytePerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "gibibyte per second",
      "symbol": "GiBps",
      "baseUnit": "bytePerSecond",
      "prefix": "gibi",
      "topUnit": "gibibyte",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:tebibytePerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "tebibyte per second",
      "symbol": "TiBps",
      "baseUnit": "bytePerSecond",
      "prefix": "tebi",
      "topUnit": "tebibyte",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:exbibytePerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "exbibyte per second",
      "symbol": "EiBps",
      "baseUnit": "bytePerSecond",
      "prefix": "exbi",
      "topUnit": "exbibyte",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:zebibytePerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "zebibyte per second",
      "symbol": "ZiBps",
      "baseUnit": "bytePerSecond",
      "prefix": "zebi",
      "topUnit": "zebibyte",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:yobibytePerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "yobibyte per second",
      "symbol": "YiBps",
      "baseUnit": "bytePerSecond",
      "prefix": "yobi",
      "topUnit": "yobibyte",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:bit;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "bit",
      "symbol": "bit",
      "baseUnit": "bit"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kibibit;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "kibibit",
      "symbol": "Kibit",
      "baseUnit": "bit",
      "prefix": "kibi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:mebibit;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "mebibit",
      "symbol": "Mibit",
      "baseUnit": "bit",
      "prefix": "mebi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gibibit;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "gibibit",
      "symbol": "Gibit",
      "baseUnit": "bit",
      "prefix": "gibi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:tebibit;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "tebibit",
      "symbol": "Tibit",
      "baseUnit": "bit",
      "prefix": "tebi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:exbibit;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "exbibit",
      "symbol": "Eibit",
      "baseUnit": "bit",
      "prefix": "exbi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:zebibit;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "zebibit",
      "symbol": "Zibit",
      "baseUnit": "bit",
      "prefix": "zebi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:yobibit;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "yobibit",
      "symbol": "Yibit",
      "baseUnit": "bit",
      "prefix": "yobi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:byte;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "byte",
      "symbol": "B",
      "baseUnit": "byte"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kibibyte;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "kibibyte",
      "symbol": "KiB",
      "baseUnit": "byte",
      "prefix": "kibi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:mebibyte;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "mebibyte",
      "symbol": "MiB",
      "baseUnit": "byte",
      "prefix": "mebi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gibibyte;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "gibibyte",
      "symbol": "GiB",
      "baseUnit": "byte",
      "prefix": "gibi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:tebibyte;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "tebibyte",
      "symbol": "TiB",
      "baseUnit": "byte",
      "prefix": "tebi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:exbibyte;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "exbibyte",
      "symbol": "EiB",
      "baseUnit": "byte",
      "prefix": "exbi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:zebibyte;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "zebibyte",
      "symbol": "ZiB",
      "baseUnit": "byte",
      "prefix": "zebi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:yobibyte;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "yobibyte",
      "symbol": "YiB",
      "baseUnit": "byte",
      "prefix": "yobi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilogramPerCubicMetre;2",
      "@type": [
        "DensityUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "kilogram per cubic metre",
      "symbol": "kg/m3",
      "baseUnit": "gramPerCubicMetre",
      "prefix": "kilo",
      "topUnit": "kilogram",
      "bottomUnit": "cubicMetre"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gramPerCubicMetre;2",
      "@type": [
        "DensityUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "gram per cubic metre",
      "symbol": "g/m3",
      "baseUnit": "gramPerCubicMetre",
      "topUnit": "gram",
      "bottomUnit": "cubicMetre"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:joule;2",
      "@type": [
        "EnergyUnit",
        "DecimalUnit"
      ],
      "displayName": "joule",
      "symbol": "J",
      "baseUnit": "joule"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilojoule;2",
      "@type": [
        "EnergyUnit",
        "DecimalUnit"
      ],
      "displayName": "kilojoule",
      "symbol": "kJ",
      "baseUnit": "joule",
      "prefix": "kilo"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:megajoule;2",
      "@type": [
        "EnergyUnit",
        "DecimalUnit"
      ],
      "displayName": "megajoule",
      "symbol": "MJ",
      "baseUnit": "joule",
      "prefix": "mega"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gigajoule;2",
      "@type": [
        "EnergyUnit",
        "DecimalUnit"
      ],
      "displayName": "gigajoule",
      "symbol": "GJ",
      "baseUnit": "joule",
      "prefix": "giga"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:electronvolt;2",
      "@type": [
        "EnergyUnit",
        "DecimalUnit"
      ],
      "displayName": "electronvolt",
      "symbol": "eV",
      "baseUnit": "electronvolt"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:megaelectronvolt;2",
      "@type": [
        "EnergyUnit",
        "DecimalUnit"
      ],
      "displayName": "megaelectronvolt",
      "symbol": "MeV",
      "baseUnit": "electronvolt",
      "prefix": "mega"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilowattHour;2",
      "@type": [
        "EnergyUnit"
      ],
      "displayName": "kilowat-hour",
      "symbol": "kWh"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:newton;2",
      "@type": [
        "ForceUnit",
        "DecimalUnit"
      ],
      "displayName": "newton",
      "symbol": "N",
      "baseUnit": "newton"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:pound;2",
      "@type": [
        "ForceUnit"
      ],
      "displayName": "pound",
      "symbol": "lb"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:ounce;2",
      "@type": [
        "ForceUnit"
      ],
      "displayName": "ounce",
      "symbol": "oz"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:ton;2",
      "@type": [
        "ForceUnit"
      ],
      "displayName": "ton",
      "symbol": "T"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:hertz;2",
      "@type": [
        "FrequencyUnit",
        "DecimalUnit"
      ],
      "displayName": "hertz",
      "symbol": "Hz",
      "baseUnit": "hertz"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilohertz;2",
      "@type": [
        "FrequencyUnit",
        "DecimalUnit"
      ],
      "displayName": "kilohertz",
      "symbol": "kHz",
      "baseUnit": "hertz",
      "prefix": "kilo"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:megahertz;2",
      "@type": [
        "FrequencyUnit",
        "DecimalUnit"
      ],
      "displayName": "megahertz",
      "symbol": "MHz",
      "baseUnit": "hertz",
      "prefix": "mega"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gigahertz;2",
      "@type": [
        "FrequencyUnit",
        "DecimalUnit"
      ],
      "displayName": "gigahertz",
      "symbol": "GHz",
      "baseUnit": "hertz",
      "prefix": "giga"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:lux;2",
      "@type": [
        "IlluminanceUnit",
        "DecimalUnit"
      ],
      "displayName": "lux",
      "symbol": "lx",
      "baseUnit": "lux"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:footcandle;2",
      "@type": [
        "IlluminanceUnit"
      ],
      "displayName": "footcandle",
      "symbol": "fc"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:henry;2",
      "@type": [
        "InductanceUnit",
        "DecimalUnit"
      ],
      "displayName": "henry",
      "symbol": "H",
      "baseUnit": "henry"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:millihenry;2",
      "@type": [
        "InductanceUnit",
        "DecimalUnit"
      ],
      "displayName": "millihenry",
      "symbol": "mH",
      "baseUnit": "henry",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:microhenry;2",
      "@type": [
        "InductanceUnit",
        "DecimalUnit"
      ],
      "displayName": "microhenry",
      "symbol": "µH",
      "baseUnit": "henry",
      "prefix": "micro"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:metre;2",
      "@type": [
        "LengthUnit",
        "DecimalUnit"
      ],
      "displayName": "metre",
      "symbol": "m",
      "baseUnit": "metre"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:centimetre;2",
      "@type": [
        "LengthUnit",
        "DecimalUnit"
      ],
      "displayName": "centimetre",
      "symbol": "cm",
      "baseUnit": "metre",
      "prefix": "centi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:millimetre;2",
      "@type": [
        "LengthUnit",
        "DecimalUnit"
      ],
      "displayName": "millimetre",
      "symbol": "mm",
      "baseUnit": "metre",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:micrometre;2",
      "@type": [
        "LengthUnit",
        "DecimalUnit"
      ],
      "displayName": "micrometre",
      "symbol": "µm",
      "baseUnit": "metre",
      "prefix": "micro"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:nanometre;2",
      "@type": [
        "LengthUnit",
        "DecimalUnit"
      ],
      "displayName": "nanometre",
      "symbol": "nm",
      "baseUnit": "metre",
      "prefix": "nano"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilometre;2",
      "@type": [
        "LengthUnit",
        "DecimalUnit"
      ],
      "displayName": "kilometre",
      "symbol": "km",
      "baseUnit": "metre",
      "prefix": "kilo"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:foot;2",
      "@type": [
        "LengthUnit"
      ],
      "displayName": "foot",
      "symbol": "ft"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:inch;2",
      "@type": [
        "LengthUnit"
      ],
      "displayName": "inch",
      "symbol": "in"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:mile;2",
      "@type": [
        "LengthUnit"
      ],
      "displayName": "mile",
      "symbol": "mi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:nauticalMile;2",
      "@type": [
        "LengthUnit"
      ],
      "displayName": "nautical mile",
      "symbol": "M"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:astronomicalUnit;2",
      "@type": [
        "LengthUnit"
      ],
      "displayName": "astronomical unit",
      "symbol": "AU"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:candelaPerSquareMetre;2",
      "@type": [
        "LuminanceUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "candela per square metre",
      "symbol": "cd/m²",
      "baseUnit": "candelaPerSquareMetre",
      "topUnit": "candela",
      "bottomUnit": "squareMetre"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:lumen;2",
      "@type": [
        "LuminousFluxUnit",
        "DecimalUnit"
      ],
      "displayName": "lumen",
      "symbol": "lm",
      "baseUnit": "lumen"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:candela;2",
      "@type": [
        "LuminousIntensityUnit",
        "DecimalUnit"
      ],
      "displayName": "candela",
      "symbol": "cd",
      "baseUnit": "candela"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:weber;2",
      "@type": [
        "MagneticFluxUnit",
        "DecimalUnit"
      ],
      "displayName": "weber",
      "symbol": "Wb",
      "baseUnit": "weber"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:maxwell;2",
      "@type": [
        "MagneticFluxUnit"
      ],
      "displayName": "maxwell",
      "symbol": "Mx"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:tesla;2",
      "@type": [
        "MagneticInductionUnit",
        "DecimalUnit"
      ],
      "displayName": "tesla",
      "symbol": "T",
      "baseUnit": "tesla"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilogram;2",
      "@type": [
        "MassUnit",
        "DecimalUnit"
      ],
      "displayName": "kilogram",
      "symbol": "kg",
      "baseUnit": "gram",
      "prefix": "kilo"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gram;2",
      "@type": [
        "MassUnit",
        "DecimalUnit"
      ],
      "displayName": "gram",
      "symbol": "g",
      "baseUnit": "gram"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:milligram;2",
      "@type": [
        "MassUnit",
        "DecimalUnit"
      ],
      "displayName": "milligram",
      "symbol": "mg",
      "baseUnit": "gram",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:microgram;2",
      "@type": [
        "MassUnit",
        "DecimalUnit"
      ],
      "displayName": "microgram",
      "symbol": "µg",
      "baseUnit": "gram",
      "prefix": "micro"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:tonne;2",
      "@type": [
        "MassUnit"
      ],
      "displayName": "tonne",
      "symbol": "t"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:slug;2",
      "@type": [
        "MassUnit"
      ],
      "displayName": "slug",
      "symbol": "slug"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gramPerSecond;2",
      "@type": [
        "MassFlowRateUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "gram per second",
      "symbol": "g/s",
      "baseUnit": "gramPerSecond",
      "topUnit": "gram",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilogramPerSecond;2",
      "@type": [
        "MassFlowRateUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "kilogram per second",
      "symbol": "kg/s",
      "baseUnit": "gramPerSecond",
      "prefix": "kilo",
      "topUnit": "kilogram",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gramPerHour;2",
      "@type": [
        "MassFlowRateUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "gram per hour",
      "symbol": "g/h",
      "baseUnit": "gramPerHour",
      "topUnit": "gram",
      "bottomUnit": "hour"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilogramPerHour;2",
      "@type": [
        "MassFlowRateUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "kilogram per hour",
      "symbol": "kg/h",
      "baseUnit": "gramPerHour",
      "prefix": "kilo",
      "topUnit": "kilogram",
      "bottomUnit": "hour"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:watt;2",
      "@type": [
        "PowerUnit",
        "DecimalUnit"
      ],
      "displayName": "watt",
      "symbol": "W",
      "baseUnit": "watt"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:microwatt;2",
      "@type": [
        "PowerUnit",
        "DecimalUnit"
      ],
      "displayName": "microwatt",
      "symbol": "µW",
      "baseUnit": "watt",
      "prefix": "micro"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:milliwatt;2",
      "@type": [
        "PowerUnit",
        "DecimalUnit"
      ],
      "displayName": "milliwatt",
      "symbol": "mW",
      "baseUnit": "watt",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilowatt;2",
      "@type": [
        "PowerUnit",
        "DecimalUnit"
      ],
      "displayName": "kilowatt",
      "symbol": "kW",
      "baseUnit": "watt",
      "prefix": "kilo"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:megawatt;2",
      "@type": [
        "PowerUnit",
        "DecimalUnit"
      ],
      "displayName": "megawatt",
      "symbol": "MW",
      "baseUnit": "watt",
      "prefix": "mega"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gigawatt;2",
      "@type": [
        "PowerUnit",
        "DecimalUnit"
      ],
      "displayName": "gigawatt",
      "symbol": "GW",
      "baseUnit": "watt",
      "prefix": "giga"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:horsepower;2",
      "@type": [
        "PowerUnit"
      ],
      "displayName": "horsepower",
      "symbol": "hp"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilowattHourPerYear;2",
      "@type": [
        "PowerUnit",
        "RatioUnit"
      ],
      "displayName": "kilowatt-hour per year",
      "symbol": "kWh/yr",
      "topUnit": "kilowattHour",
      "bottomUnit": "year"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:pascal;2",
      "@type": [
        "PressureUnit",
        "DecimalUnit"
      ],
      "displayName": "pascal",
      "symbol": "Pa",
      "baseUnit": "pascal"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilopascal;2",
      "@type": [
        "PressureUnit",
        "DecimalUnit"
      ],
      "displayName": "kilopascal",
      "symbol": "kPa",
      "baseUnit": "pascal",
      "prefix": "kilo"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:bar;2",
      "@type": [
        "PressureUnit",
        "DecimalUnit"
      ],
      "displayName": "bar",
      "symbol": "bar",
      "baseUnit": "bar"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:millibar;2",
      "@type": [
        "PressureUnit",
        "DecimalUnit"
      ],
      "displayName": "millibar",
      "symbol": "mbar",
      "baseUnit": "bar",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:millimetresOfMercury;2",
      "@type": [
        "PressureUnit"
      ],
      "displayName": "millimetres of mercury",
      "symbol": "mmHg"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:poundPerSquareInch;2",
      "@type": [
        "PressureUnit",
        "RatioUnit"
      ],
      "displayName": "pound per square inch",
      "symbol": "psi",
      "topUnit": "pound",
      "bottomUnit": "squareInch"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:inchesOfMercury;2",
      "@type": [
        "PressureUnit"
      ],
      "displayName": "inches of mercury",
      "symbol": "inHg"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:inchesOfWater;2",
      "@type": [
        "PressureUnit"
      ],
      "displayName": "inches of water",
      "symbol": "inH2O"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:ohm;2",
      "@type": [
        "ResistanceUnit",
        "DecimalUnit"
      ],
      "displayName": "ohm",
      "symbol": "Ω",
      "baseUnit": "ohm"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:milliohm;2",
      "@type": [
        "ResistanceUnit",
        "DecimalUnit"
      ],
      "displayName": "milliohm",
      "symbol": "mΩ",
      "baseUnit": "ohm",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kiloohm;2",
      "@type": [
        "ResistanceUnit",
        "DecimalUnit"
      ],
      "displayName": "kiloohm",
      "symbol": "kΩ",
      "baseUnit": "ohm",
      "prefix": "kilo"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:megaohm;2",
      "@type": [
        "ResistanceUnit",
        "DecimalUnit"
      ],
      "displayName": "megaohm",
      "symbol": "MΩ",
      "baseUnit": "ohm",
      "prefix": "mega"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:decibel;2",
      "@type": [
        "SoundPressureUnit",
        "DecimalUnit"
      ],
      "displayName": "decibel",
      "symbol": "dB",
      "baseUnit": "bel",
      "prefix": "deci"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:bel;2",
      "@type": [
        "SoundPressureUnit",
        "DecimalUnit"
      ],
      "displayName": "bel",
      "symbol": "B",
      "baseUnit": "bel"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kelvin;2",
      "@type": [
        "TemperatureUnit"
      ],
      "displayName": "kelvin",
      "symbol": "K"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:degreeCelsius;2",
      "@type": [
        "TemperatureUnit"
      ],
      "displayName": "degree celsius",
      "symbol": "°C"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:degreeFahrenheit;2",
      "@type": [
        "TemperatureUnit"
      ],
      "displayName": "degree fahrenheit",
      "symbol": "°F"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:second;2",
      "@type": [
        "TimeUnit",
        "DecimalUnit"
      ],
      "displayName": "second",
      "symbol": "s",
      "baseUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:millisecond;2",
      "@type": [
        "TimeUnit",
        "DecimalUnit"
      ],
      "displayName": "millisecond",
      "symbol": "ms",
      "baseUnit": "second",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:microsecond;2",
      "@type": [
        "TimeUnit",
        "DecimalUnit"
      ],
      "displayName": "microsecond",
      "symbol": "µs",
      "baseUnit": "second",
      "prefix": "micro"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:nanosecond;2",
      "@type": [
        "TimeUnit",
        "DecimalUnit"
      ],
      "displayName": "nanosecond",
      "symbol": "ns",
      "baseUnit": "second",
      "prefix": "nano"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:minute;2",
      "@type": [
        "TimeUnit"
      ],
      "displayName": "minute",
      "symbol": "m"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:hour;2",
      "@type": [
        "TimeUnit"
      ],
      "displayName": "hour",
      "symbol": "h"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:day;2",
      "@type": [
        "TimeUnit"
      ],
      "displayName": "day",
      "symbol": "d"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:year;2",
      "@type": [
        "TimeUnit"
      ],
      "displayName": "year",
      "symbol": "yr"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:newtonMetre;2",
      "@type": [
        "TorqueUnit",
        "DecimalUnit"
      ],
      "displayName": "newton-metre",
      "symbol": "N m",
      "baseUnit": "newtonMetre"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:unity;2",
      "@type": [
        "Unitless"
      ],
      "displayName": "",
      "symbol": ""
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:percent;2",
      "@type": [
        "Unitless"
      ],
      "displayName": "percent",
      "symbol": "%"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:metrePerSecond;2",
      "@type": [
        "VelocityUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "metre per second",
      "symbol": "m/s",
      "baseUnit": "metrePerSecond",
      "topUnit": "metre",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:centimetrePerSecond;2",
      "@type": [
        "VelocityUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "centimetre per second",
      "symbol": "cm/s",
      "baseUnit": "metrePerSecond",
      "prefix": "centi",
      "topUnit": "centimetre",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilometrePerSecond;2",
      "@type": [
        "VelocityUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "kilometre per second",
      "symbol": "km/s",
      "baseUnit": "metrePerSecond",
      "prefix": "kilo",
      "topUnit": "kilometre",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:metrePerHour;2",
      "@type": [
        "VelocityUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "metre per hour",
      "symbol": "m/h",
      "baseUnit": "metrePerHour",
      "topUnit": "metre",
      "bottomUnit": "hour"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilometrePerHour;2",
      "@type": [
        "VelocityUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "kilometre per hour",
      "symbol": "km/h",
      "baseUnit": "metrePerHour",
      "prefix": "kilo",
      "topUnit": "kilometre",
      "bottomUnit": "hour"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:milePerHour;2",
      "@type": [
        "VelocityUnit",
        "RatioUnit"
      ],
      "displayName": "mile per hour",
      "symbol": "mph",
      "topUnit": "mile",
      "bottomUnit": "hour"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:milePerSecond;2",
      "@type": [
        "VelocityUnit",
        "RatioUnit"
      ],
      "displayName": "mile per second",
      "symbol": "mi/s",
      "topUnit": "mile",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:knot;2",
      "@type": [
        "VelocityUnit"
      ],
      "displayName": "knot",
      "symbol": "kn"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:volt;2",
      "@type": [
        "VoltageUnit",
        "DecimalUnit"
      ],
      "displayName": "volt",
      "symbol": "V",
      "baseUnit": "volt"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:millivolt;2",
      "@type": [
        "VoltageUnit",
        "DecimalUnit"
      ],
      "displayName": "millivolt",
      "symbol": "mV",
      "baseUnit": "volt",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:microvolt;2",
      "@type": [
        "VoltageUnit",
        "DecimalUnit"
      ],
      "displayName": "microvolt",
      "symbol": "µV",
      "baseUnit": "volt",
      "prefix": "micro"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilovolt;2",
      "@type": [
        "VoltageUnit",
        "DecimalUnit"
      ],
      "displayName": "kilovolt",
      "symbol": "kV",
      "baseUnit": "volt",
      "prefix": "kilo"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:megavolt;2",
      "@type": [
        "VoltageUnit",
        "DecimalUnit"
      ],
      "displayName": "megavolt",
      "symbol": "MV",
      "baseUnit": "volt",
      "prefix": "mega"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:cubicMetre;2",
      "@type": [
        "VolumeUnit"
      ],
      "displayName": "cubic metre",
      "symbol": "m3"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:cubicCentimetre;2",
      "@type": [
        "VolumeUnit"
      ],
      "displayName": "cubic centimetre",
      "symbol": "cm3"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:litre;2",
      "@type": [
        "VolumeUnit",
        "DecimalUnit"
      ],
      "displayName": "litre",
      "symbol": "l",
      "baseUnit": "litre"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:millilitre;2",
      "@type": [
        "VolumeUnit",
        "DecimalUnit"
      ],
      "displayName": "millilitre",
      "symbol": "ml",
      "baseUnit": "litre",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:cubicFoot;2",
      "@type": [
        "VolumeUnit"
      ],
      "displayName": "cubic foot",
      "symbol": "ft3"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:cubicInch;2",
      "@type": [
        "VolumeUnit"
      ],
      "displayName": "cubic inch",
      "symbol": "in3"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:fluidOunce;2",
      "@type": [
        "VolumeUnit"
      ],
      "displayName": "fluid ounce",
      "symbol": "fl oz"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gallon;2",
      "@type": [
        "VolumeUnit"
      ],
      "displayName": "gallon",
      "symbol": "gal"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:litrePerSecond;2",
      "@type": [
        "VolumeFlowRateUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "litre per second",
      "symbol": "l/s",
      "baseUnit": "litrePerSecond",
      "topUnit": "litre",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:millilitrePerSecond;2",
      "@type": [
        "VolumeFlowRateUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "millilitre per second",
      "symbol": "ml/s",
      "baseUnit": "litrePerSecond",
      "prefix": "milli",
      "topUnit": "millilitre",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:litrePerHour;2",
      "@type": [
        "VolumeFlowRateUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "litre per hour",
      "symbol": "l/h",
      "baseUnit": "litrePerHour",
      "topUnit": "litre",
      "bottomUnit": "hour"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:millilitrePerHour;2",
      "@type": [
        "VolumeFlowRateUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "millilitre per hour",
      "symbol": "ml/h",
      "baseUnit": "litrePerHour",
      "prefix": "milli",
      "topUnit": "millilitre",
      "bottomUnit": "hour"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatialPointType;2",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:standard:schema:geospatial:enumValue:point;2",
          "@type": "EnumValue",
          "name": "point",
          "enumValue": "Point"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatialMultiPointType;2",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:standard:schema:geospatial:enumValue:multiPoint;2",
          "@type": "EnumValue",
          "name": "multiPoint",
          "enumValue": "MultiPoint"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatialLineStringType;2",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:standard:schema:geospatial:enumValue:lineString;2",
          "@type": "EnumValue",
          "name": "lineString",
          "enumValue": "LineString"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatialMultiLineStringType;2",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:standard:schema:geospatial:enumValue:multiLineString;2",
          "@type": "EnumValue",
          "name": "multiLineString",
          "enumValue": "MultiLineString"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatialPolygonType;2",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:standard:schema:geospatial:enumValue:polygon;2",
          "@type": "EnumValue",
          "name": "polygon",
          "enumValue": "Polygon"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatialMultiPolygonType;2",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:standard:schema:geospatial:enumValue:multiPolygon;2",
          "@type": "EnumValue",
          "name": "multiPolygon",
          "enumValue": "MultiPolygon"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatial:position;2",
      "@type": "Array",
      "elementSchema": "double"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatial:lineStringCoordinateArray;2",
      "@type": "Array",
      "elementSchema": "dtmi:standard:schema:geospatial:position;2"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatial:polygonCoordinateArray;2",
      "@type": "Array",
      "elementSchema": {
        "@id": "dtmi:standard:schema:geospatial:linearRingCoordinateArray;2",
        "@type": "Array",
        "elementSchema": "dtmi:standard:schema:geospatial:position;2"
      }
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatial:point;2",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:standard:schema:geospatial:point:type;2",
          "@type": "Field",
          "name": "type",
          "schema": "dtmi:standard:schema:geospatialPointType;2"
        },
        {
          "@id": "dtmi:standard:schema:geospatial:point:coordinates;2",
          "@type": "Field",
          "name": "coordinates",
          "schema": "dtmi:standard:schema:geospatial:position;2"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatial:multiPoint;2",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:standard:schema:geospatial:multiPoint:type;2",
          "@type": "Field",
          "name": "type",
          "schema": "dtmi:standard:schema:geospatialMultiPointType;2"
        },
        {
          "@id": "dtmi:standard:schema:geospatial:multiPoint:coordinates;2",
          "@type": "Field",
          "name": "coordinates",
          "schema": {
            "@id": "dtmi:standard:schema:geospatial:positionArray;2",
            "@type": "Array",
            "elementSchema": "dtmi:standard:schema:geospatial:position;2"
          }
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatial:lineString;2",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:standard:schema:geospatial:lineString:type;2",
          "@type": "Field",
          "name": "type",
          "schema": "dtmi:standard:schema:geospatialLineStringType;2"
        },
        {
          "@id": "dtmi:standard:schema:geospatial:lineString:coordinates;2",
          "@type": "Field",
          "name": "coordinates",
          "schema": "dtmi:standard:schema:geospatial:lineStringCoordinateArray;2"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatial:multiLineString;2",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:standard:schema:geospatial:multiLineString:type;2",
          "@type": "Field",
          "name": "type",
          "schema": "dtmi:standard:schema:geospatialMultiLineStringType;2"
        },
        {
          "@id": "dtmi:standard:schema:geospatial:multiLineString:coordinates;2",
          "@type": "Field",
          "name": "coordinates",
          "schema": {
            "@id": "dtmi:standard:schema:geospatial:lineStringCoordinateArrayArray;2",
            "@type": "Array",
            "elementSchema": "dtmi:standard:schema:geospatial:lineStringCoordinateArray;2"
          }
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatial:polygon;2",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:standard:schema:geospatial:polygon:type;2",
          "@type": "Field",
          "name": "type",
          "schema": "dtmi:standard:schema:geospatialPolygonType;2"
        },
        {
          "@id": "dtmi:standard:schema:geospatial:polygon:coordinates;2",
          "@type": "Field",
          "name": "coordinates",
          "schema": "dtmi:standard:schema:geospatial:polygonCoordinateArray;2"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatial:multiPolygon;2",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:standard:schema:geospatial:multiPolygon:type;2",
          "@type": "Field",
          "name": "type",
          "schema": "dtmi:standard:schema:geospatialMultiPolygonType;2"
        },
        {
          "@id": "dtmi:standard:schema:geospatial:multiPolygon:coordinates;2",
          "@type": "Field",
          "name": "coordinates",
          "schema": {
            "@id": "dtmi:standard:schema:geospatial:polygonCoordinateArrayArray;2",
            "@type": "Array",
            "elementSchema": "dtmi:standard:schema:geospatial:polygonCoordinateArray;2"
          }
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:deci;3",
      "@type": "DecimalPrefix",
      "name": "deci",
      "symbol": "d",
      "exponent": -1
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:centi;3",
      "@type": "DecimalPrefix",
      "name": "centi",
      "symbol": "c",
      "exponent": -2
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:milli;3",
      "@type": "DecimalPrefix",
      "name": "milli",
      "symbol": "m",
      "exponent": -3
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:micro;3",
      "@type": "DecimalPrefix",
      "name": "micro",
      "symbol": "µ",
      "exponent": -6
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:nano;3",
      "@type": "DecimalPrefix",
      "name": "nano",
      "symbol": "n",
      "exponent": -9
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:pico;3",
      "@type": "DecimalPrefix",
      "name": "pico",
      "symbol": "p",
      "exponent": -12
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:femto;3",
      "@type": "DecimalPrefix",
      "name": "femto",
      "symbol": "f",
      "exponent": -15
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:atto;3",
      "@type": "DecimalPrefix",
      "name": "atto",
      "symbol": "a",
      "exponent": -18
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:zepto;3",
      "@type": "DecimalPrefix",
      "name": "zepto",
      "symbol": "z",
      "exponent": -21
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:yocto;3",
      "@type": "DecimalPrefix",
      "name": "yocto",
      "symbol": "y",
      "exponent": -24
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:deka;3",
      "@type": "DecimalPrefix",
      "name": "deka",
      "symbol": "da",
      "exponent": 1
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:hecto;3",
      "@type": "DecimalPrefix",
      "name": "hecto",
      "symbol": "h",
      "exponent": 2
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:kilo;3",
      "@type": "DecimalPrefix",
      "name": "kilo",
      "symbol": "k",
      "exponent": 3
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:mega;3",
      "@type": "DecimalPrefix",
      "name": "mega",
      "symbol": "M",
      "exponent": 6
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:giga;3",
      "@type": "DecimalPrefix",
      "name": "giga",
      "symbol": "G",
      "exponent": 9
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:tera;3",
      "@type": "DecimalPrefix",
      "name": "tera",
      "symbol": "T",
      "exponent": 12
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:peta;3",
      "@type": "DecimalPrefix",
      "name": "peta",
      "symbol": "P",
      "exponent": 15
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:exa;3",
      "@type": "DecimalPrefix",
      "name": "exa",
      "symbol": "E",
      "exponent": 18
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:zetta;3",
      "@type": "DecimalPrefix",
      "name": "zetta",
      "symbol": "Z",
      "exponent": 21
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:yotta;3",
      "@type": "DecimalPrefix",
      "name": "yotta",
      "symbol": "Y",
      "exponent": 24
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:kibi;3",
      "@type": "BinaryPrefix",
      "name": "kibi",
      "symbol": "Ki",
      "exponent": 10
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:mebi;3",
      "@type": "BinaryPrefix",
      "name": "mebi",
      "symbol": "Mi",
      "exponent": 20
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:gibi;3",
      "@type": "BinaryPrefix",
      "name": "gibi",
      "symbol": "Gi",
      "exponent": 30
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:tebi;3",
      "@type": "BinaryPrefix",
      "name": "tebi",
      "symbol": "Ti",
      "exponent": 40
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:pebi;3",
      "@type": "BinaryPrefix",
      "name": "pebi",
      "symbol": "Pi",
      "exponent": 50
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:exbi;3",
      "@type": "BinaryPrefix",
      "name": "exbi",
      "symbol": "Ei",
      "exponent": 60
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:zebi;3",
      "@type": "BinaryPrefix",
      "name": "zebi",
      "symbol": "Zi",
      "exponent": 70
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unitprefix:yobi;3",
      "@type": "BinaryPrefix",
      "name": "yobi",
      "symbol": "Yi",
      "exponent": 80
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:metrePerSecondSquared;3",
      "@type": [
        "AccelerationUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "metre per second squared",
      "symbol": "m/s²",
      "baseUnit": "metrePerSecondSquared",
      "topUnit": "metrePerSecond",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:centimetrePerSecondSquared;3",
      "@type": [
        "AccelerationUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "centimetre per second squared",
      "symbol": "cm/s²",
      "baseUnit": "metrePerSecondSquared",
      "prefix": "centi",
      "topUnit": "centimetrePerSecond",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:gForce;3",
      "@type": [
        "AccelerationUnit"
      ],
      "displayName": "g-force",
      "symbol": "g"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:radian;3",
      "@type": [
        "AngleUnit"
      ],
      "displayName": "radian",
      "symbol": "rad"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:degreeOfArc;3",
      "@type": [
        "AngleUnit"
      ],
      "displayName": "degree of arc",
      "symbol": "°"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:minuteOfArc;3",
      "@type": [
        "AngleUnit"
      ],
      "displayName": "minute of arc",
      "symbol": "'"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:secondOfArc;3",
      "@type": [
        "AngleUnit"
      ],
      "displayName": "second of arc",
      "symbol": "\""
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:turn;3",
      "@type": [
        "AngleUnit"
      ],
      "displayName": "turn",
      "symbol": "turn"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:radianPerSecondSquared;3",
      "@type": [
        "AngularAccelerationUnit",
        "RatioUnit"
      ],
      "displayName": "radian per second squared",
      "symbol": "rad/s²",
      "topUnit": "radianPerSecond",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:radianPerSecond;3",
      "@type": [
        "AngularVelocityUnit",
        "RatioUnit"
      ],
      "displayName": "radian per second",
      "symbol": "rad/s",
      "topUnit": "radian",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:degreePerSecond;3",
      "@type": [
        "AngularVelocityUnit",
        "RatioUnit"
      ],
      "displayName": "degree per second",
      "symbol": "°/s",
      "topUnit": "degreeOfArc",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:revolutionPerSecond;3",
      "@type": [
        "AngularVelocityUnit",
        "RatioUnit"
      ],
      "displayName": "revolution per second",
      "symbol": "rps",
      "topUnit": "turn",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:revolutionPerMinute;3",
      "@type": [
        "AngularVelocityUnit",
        "RatioUnit"
      ],
      "displayName": "revolution per minute",
      "symbol": "rpm",
      "topUnit": "turn",
      "bottomUnit": "minute"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:squareMetre;3",
      "@type": [
        "AreaUnit"
      ],
      "displayName": "square metre",
      "symbol": "m²"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:squareCentimetre;3",
      "@type": [
        "AreaUnit"
      ],
      "displayName": "square centimetre",
      "symbol": "cm²"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:squareMillimetre;3",
      "@type": [
        "AreaUnit"
      ],
      "displayName": "square millimetre",
      "symbol": "mm²"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:squareKilometre;3",
      "@type": [
        "AreaUnit"
      ],
      "displayName": "square kilometre",
      "symbol": "km²"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:hectare;3",
      "@type": [
        "AreaUnit"
      ],
      "displayName": "hectare",
      "symbol": "ha"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:squareFoot;3",
      "@type": [
        "AreaUnit"
      ],
      "displayName": "square foot",
      "symbol": "ft²"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:squareInch;3",
      "@type": [
        "AreaUnit"
      ],
      "displayName": "square inch",
      "symbol": "in²"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:acre;3",
      "@type": [
        "AreaUnit"
      ],
      "displayName": "acre",
      "symbol": "ac"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:farad;3",
      "@type": [
        "CapacitanceUnit",
        "DecimalUnit"
      ],
      "displayName": "farad",
      "symbol": "F",
      "baseUnit": "farad"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:millifarad;3",
      "@type": [
        "CapacitanceUnit",
        "DecimalUnit"
      ],
      "displayName": "millifarad",
      "symbol": "mF",
      "baseUnit": "farad",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:microfarad;3",
      "@type": [
        "CapacitanceUnit",
        "DecimalUnit"
      ],
      "displayName": "microfarad",
      "symbol": "µF",
      "baseUnit": "farad",
      "prefix": "micro"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:nanofarad;3",
      "@type": [
        "CapacitanceUnit",
        "DecimalUnit"
      ],
      "displayName": "nanofarad",
      "symbol": "nF",
      "baseUnit": "farad",
      "prefix": "nano"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:picofarad;3",
      "@type": [
        "CapacitanceUnit",
        "DecimalUnit"
      ],
      "displayName": "picofarad",
      "symbol": "pF",
      "baseUnit": "farad",
      "prefix": "pico"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:coulomb;3",
      "@type": [
        "ChargeUnit",
        "DecimalUnit"
      ],
      "displayName": "coulomb",
      "symbol": "C",
      "baseUnit": "coulomb"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:ampere;3",
      "@type": [
        "CurrentUnit",
        "DecimalUnit"
      ],
      "displayName": "ampere",
      "symbol": "A",
      "baseUnit": "ampere"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:microampere;3",
      "@type": [
        "CurrentUnit",
        "DecimalUnit"
      ],
      "displayName": "microampere",
      "symbol": "µA",
      "baseUnit": "ampere",
      "prefix": "micro"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:milliampere;3",
      "@type": [
        "CurrentUnit",
        "DecimalUnit"
      ],
      "displayName": "milliampere",
      "symbol": "mA",
      "baseUnit": "ampere",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:bitPerSecond;3",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "bit per second",
      "symbol": "bps",
      "baseUnit": "bitPerSecond",
      "topUnit": "bit",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:kibibitPerSecond;3",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "kibibit per second",
      "symbol": "Kibps",
      "baseUnit": "bitPerSecond",
      "prefix": "kibi",
      "topUnit": "kibibit",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:mebibitPerSecond;3",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "mebibit per second",
      "symbol": "Mibps",
      "baseUnit": "bitPerSecond",
      "prefix": "mebi",
      "topUnit": "mebibit",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:gibibitPerSecond;3",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "gibibit per second",
      "symbol": "Gibps",
      "baseUnit": "bitPerSecond",
      "prefix": "gibi",
      "topUnit": "gibibit",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:tebibitPerSecond;3",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "tebibit per second",
      "symbol": "Tibps",
      "baseUnit": "bitPerSecond",
      "prefix": "tebi",
      "topUnit": "tebibit",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:exbibitPerSecond;3",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "exbibit per second",
      "symbol": "Eibps",
      "baseUnit": "bitPerSecond",
      "prefix": "exbi",
      "topUnit": "exbibit",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:zebibitPerSecond;3",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "zebibit per second",
      "symbol": "Zibps",
      "baseUnit": "bitPerSecond",
      "prefix": "zebi",
      "topUnit": "zebibit",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:yobibitPerSecond;3",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "yobibit per second",
      "symbol": "Yibps",
      "baseUnit": "bitPerSecond",
      "prefix": "yobi",
      "topUnit": "yobibit",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:bytePerSecond;3",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "byte per second",
      "symbol": "Bps",
      "baseUnit": "bytePerSecond",
      "topUnit": "byte",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:kibibytePerSecond;3",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "kibibyte per second",
      "symbol": "KiBps",
      "baseUnit": "bytePerSecond",
      "prefix": "kibi",
      "topUnit": "kibibyte",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:mebibytePerSecond;3",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "mebibyte per second",
      "symbol": "MiBps",
      "baseUnit": "bytePerSecond",
      "prefix": "mebi",
      "topUnit": "mebibyte",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:gibibytePerSecond;3",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "gibibyte per second",
      "symbol": "GiBps",
      "baseUnit": "bytePerSecond",
      "prefix": "gibi",
      "topUnit": "gibibyte",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:tebibytePerSecond;3",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "tebibyte per second",
      "symbol": "TiBps",
      "baseUnit": "bytePerSecond",
      "prefix": "tebi",
      "topUnit": "tebibyte",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:exbibytePerSecond;3",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "exbibyte per second",
      "symbol": "EiBps",
      "baseUnit": "bytePerSecond",
      "prefix": "exbi",
      "topUnit": "exbibyte",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:zebibytePerSecond;3",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "zebibyte per second",
      "symbol": "ZiBps",
      "baseUnit": "bytePerSecond",
      "prefix": "zebi",
      "topUnit": "zebibyte",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:yobibytePerSecond;3",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "yobibyte per second",
      "symbol": "YiBps",
      "baseUnit": "bytePerSecond",
      "prefix": "yobi",
      "topUnit": "yobibyte",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:bit;3",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "bit",
      "symbol": "bit",
      "baseUnit": "bit"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:kibibit;3",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "kibibit",
      "symbol": "Kibit",
      "baseUnit": "bit",
      "prefix": "kibi"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:mebibit;3",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "mebibit",
      "symbol": "Mibit",
      "baseUnit": "bit",
      "prefix": "mebi"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:gibibit;3",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "gibibit",
      "symbol": "Gibit",
      "baseUnit": "bit",
      "prefix": "gibi"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:tebibit;3",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "tebibit",
      "symbol": "Tibit",
      "baseUnit": "bit",
      "prefix": "tebi"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:exbibit;3",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "exbibit",
      "symbol": "Eibit",
      "baseUnit": "bit",
      "prefix": "exbi"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:zebibit;3",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "zebibit",
      "symbol": "Zibit",
      "baseUnit": "bit",
      "prefix": "zebi"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:yobibit;3",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "yobibit",
      "symbol": "Yibit",
      "baseUnit": "bit",
      "prefix": "yobi"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:byte;3",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "byte",
      "symbol": "B",
      "baseUnit": "byte"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:kibibyte;3",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "kibibyte",
      "symbol": "KiB",
      "baseUnit": "byte",
      "prefix": "kibi"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:mebibyte;3",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "mebibyte",
      "symbol": "MiB",
      "baseUnit": "byte",
      "prefix": "mebi"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:gibibyte;3",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "gibibyte",
      "symbol": "GiB",
      "baseUnit": "byte",
      "prefix": "gibi"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:tebibyte;3",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "tebibyte",
      "symbol": "TiB",
      "baseUnit": "byte",
      "prefix": "tebi"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:exbibyte;3",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "exbibyte",
      "symbol": "EiB",
      "baseUnit": "byte",
      "prefix": "exbi"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:zebibyte;3",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "zebibyte",
      "symbol": "ZiB",
      "baseUnit": "byte",
      "prefix": "zebi"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:yobibyte;3",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "yobibyte",
      "symbol": "YiB",
      "baseUnit": "byte",
      "prefix": "yobi"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:kilogramPerCubicMetre;3",
      "@type": [
        "DensityUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "kilogram per cubic metre",
      "symbol": "kg/m3",
      "baseUnit": "gramPerCubicMetre",
      "prefix": "kilo",
      "topUnit": "kilogram",
      "bottomUnit": "cubicMetre"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:gramPerCubicMetre;3",
      "@type": [
        "DensityUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "gram per cubic metre",
      "symbol": "g/m3",
      "baseUnit": "gramPerCubicMetre",
      "topUnit": "gram",
      "bottomUnit": "cubicMetre"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:joule;3",
      "@type": [
        "EnergyUnit",
        "DecimalUnit"
      ],
      "displayName": "joule",
      "symbol": "J",
      "baseUnit": "joule"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:kilojoule;3",
      "@type": [
        "EnergyUnit",
        "DecimalUnit"
      ],
      "displayName": "kilojoule",
      "symbol": "kJ",
      "baseUnit": "joule",
      "prefix": "kilo"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:megajoule;3",
      "@type": [
        "EnergyUnit",
        "DecimalUnit"
      ],
      "displayName": "megajoule",
      "symbol": "MJ",
      "baseUnit": "joule",
      "prefix": "mega"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:gigajoule;3",
      "@type": [
        "EnergyUnit",
        "DecimalUnit"
      ],
      "displayName": "gigajoule",
      "symbol": "GJ",
      "baseUnit": "joule",
      "prefix": "giga"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:electronvolt;3",
      "@type": [
        "EnergyUnit",
        "DecimalUnit"
      ],
      "displayName": "electronvolt",
      "symbol": "eV",
      "baseUnit": "electronvolt"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:megaelectronvolt;3",
      "@type": [
        "EnergyUnit",
        "DecimalUnit"
      ],
      "displayName": "megaelectronvolt",
      "symbol": "MeV",
      "baseUnit": "electronvolt",
      "prefix": "mega"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:kilowattHour;3",
      "@type": [
        "EnergyUnit"
      ],
      "displayName": "kilowat-hour",
      "symbol": "kWh"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:newton;3",
      "@type": [
        "ForceUnit",
        "DecimalUnit"
      ],
      "displayName": "newton",
      "symbol": "N",
      "baseUnit": "newton"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:pound;3",
      "@type": [
        "ForceUnit"
      ],
      "displayName": "pound",
      "symbol": "lb"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:ounce;3",
      "@type": [
        "ForceUnit"
      ],
      "displayName": "ounce",
      "symbol": "oz"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:ton;3",
      "@type": [
        "ForceUnit"
      ],
      "displayName": "ton",
      "symbol": "T"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:hertz;3",
      "@type": [
        "FrequencyUnit",
        "DecimalUnit"
      ],
      "displayName": "hertz",
      "symbol": "Hz",
      "baseUnit": "hertz"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:kilohertz;3",
      "@type": [
        "FrequencyUnit",
        "DecimalUnit"
      ],
      "displayName": "kilohertz",
      "symbol": "kHz",
      "baseUnit": "hertz",
      "prefix": "kilo"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:megahertz;3",
      "@type": [
        "FrequencyUnit",
        "DecimalUnit"
      ],
      "displayName": "megahertz",
      "symbol": "MHz",
      "baseUnit": "hertz",
      "prefix": "mega"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:gigahertz;3",
      "@type": [
        "FrequencyUnit",
        "DecimalUnit"
      ],
      "displayName": "gigahertz",
      "symbol": "GHz",
      "baseUnit": "hertz",
      "prefix": "giga"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:lux;3",
      "@type": [
        "IlluminanceUnit",
        "DecimalUnit"
      ],
      "displayName": "lux",
      "symbol": "lx",
      "baseUnit": "lux"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:footcandle;3",
      "@type": [
        "IlluminanceUnit"
      ],
      "displayName": "footcandle",
      "symbol": "fc"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:henry;3",
      "@type": [
        "InductanceUnit",
        "DecimalUnit"
      ],
      "displayName": "henry",
      "symbol": "H",
      "baseUnit": "henry"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:millihenry;3",
      "@type": [
        "InductanceUnit",
        "DecimalUnit"
      ],
      "displayName": "millihenry",
      "symbol": "mH",
      "baseUnit": "henry",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:microhenry;3",
      "@type": [
        "InductanceUnit",
        "DecimalUnit"
      ],
      "displayName": "microhenry",
      "symbol": "µH",
      "baseUnit": "henry",
      "prefix": "micro"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:metre;3",
      "@type": [
        "LengthUnit",
        "DecimalUnit"
      ],
      "displayName": "metre",
      "symbol": "m",
      "baseUnit": "metre"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:centimetre;3",
      "@type": [
        "LengthUnit",
        "DecimalUnit"
      ],
      "displayName": "centimetre",
      "symbol": "cm",
      "baseUnit": "metre",
      "prefix": "centi"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:millimetre;3",
      "@type": [
        "LengthUnit",
        "DecimalUnit"
      ],
      "displayName": "millimetre",
      "symbol": "mm",
      "baseUnit": "metre",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:micrometre;3",
      "@type": [
        "LengthUnit",
        "DecimalUnit"
      ],
      "displayName": "micrometre",
      "symbol": "µm",
      "baseUnit": "metre",
      "prefix": "micro"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:nanometre;3",
      "@type": [
        "LengthUnit",
        "DecimalUnit"
      ],
      "displayName": "nanometre",
      "symbol": "nm",
      "baseUnit": "metre",
      "prefix": "nano"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:kilometre;3",
      "@type": [
        "LengthUnit",
        "DecimalUnit"
      ],
      "displayName": "kilometre",
      "symbol": "km",
      "baseUnit": "metre",
      "prefix": "kilo"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:foot;3",
      "@type": [
        "LengthUnit"
      ],
      "displayName": "foot",
      "symbol": "ft"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:inch;3",
      "@type": [
        "LengthUnit"
      ],
      "displayName": "inch",
      "symbol": "in"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:mile;3",
      "@type": [
        "LengthUnit"
      ],
      "displayName": "mile",
      "symbol": "mi"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:nauticalMile;3",
      "@type": [
        "LengthUnit"
      ],
      "displayName": "nautical mile",
      "symbol": "M"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:astronomicalUnit;3",
      "@type": [
        "LengthUnit"
      ],
      "displayName": "astronomical unit",
      "symbol": "AU"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:candelaPerSquareMetre;3",
      "@type": [
        "LuminanceUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "candela per square metre",
      "symbol": "cd/m²",
      "baseUnit": "candelaPerSquareMetre",
      "topUnit": "candela",
      "bottomUnit": "squareMetre"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:lumen;3",
      "@type": [
        "LuminousFluxUnit",
        "DecimalUnit"
      ],
      "displayName": "lumen",
      "symbol": "lm",
      "baseUnit": "lumen"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:candela;3",
      "@type": [
        "LuminousIntensityUnit",
        "DecimalUnit"
      ],
      "displayName": "candela",
      "symbol": "cd",
      "baseUnit": "candela"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:weber;3",
      "@type": [
        "MagneticFluxUnit",
        "DecimalUnit"
      ],
      "displayName": "weber",
      "symbol": "Wb",
      "baseUnit": "weber"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:maxwell;3",
      "@type": [
        "MagneticFluxUnit"
      ],
      "displayName": "maxwell",
      "symbol": "Mx"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:tesla;3",
      "@type": [
        "MagneticInductionUnit",
        "DecimalUnit"
      ],
      "displayName": "tesla",
      "symbol": "T",
      "baseUnit": "tesla"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:kilogram;3",
      "@type": [
        "MassUnit",
        "DecimalUnit"
      ],
      "displayName": "kilogram",
      "symbol": "kg",
      "baseUnit": "gram",
      "prefix": "kilo"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:gram;3",
      "@type": [
        "MassUnit",
        "DecimalUnit"
      ],
      "displayName": "gram",
      "symbol": "g",
      "baseUnit": "gram"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:milligram;3",
      "@type": [
        "MassUnit",
        "DecimalUnit"
      ],
      "displayName": "milligram",
      "symbol": "mg",
      "baseUnit": "gram",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:microgram;3",
      "@type": [
        "MassUnit",
        "DecimalUnit"
      ],
      "displayName": "microgram",
      "symbol": "µg",
      "baseUnit": "gram",
      "prefix": "micro"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:tonne;3",
      "@type": [
        "MassUnit"
      ],
      "displayName": "tonne",
      "symbol": "t"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:slug;3",
      "@type": [
        "MassUnit"
      ],
      "displayName": "slug",
      "symbol": "slug"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:gramPerSecond;3",
      "@type": [
        "MassFlowRateUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "gram per second",
      "symbol": "g/s",
      "baseUnit": "gramPerSecond",
      "topUnit": "gram",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:kilogramPerSecond;3",
      "@type": [
        "MassFlowRateUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "kilogram per second",
      "symbol": "kg/s",
      "baseUnit": "gramPerSecond",
      "prefix": "kilo",
      "topUnit": "kilogram",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:gramPerHour;3",
      "@type": [
        "MassFlowRateUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "gram per hour",
      "symbol": "g/h",
      "baseUnit": "gramPerHour",
      "topUnit": "gram",
      "bottomUnit": "hour"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:kilogramPerHour;3",
      "@type": [
        "MassFlowRateUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "kilogram per hour",
      "symbol": "kg/h",
      "baseUnit": "gramPerHour",
      "prefix": "kilo",
      "topUnit": "kilogram",
      "bottomUnit": "hour"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:watt;3",
      "@type": [
        "PowerUnit",
        "DecimalUnit"
      ],
      "displayName": "watt",
      "symbol": "W",
      "baseUnit": "watt"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:microwatt;3",
      "@type": [
        "PowerUnit",
        "DecimalUnit"
      ],
      "displayName": "microwatt",
      "symbol": "µW",
      "baseUnit": "watt",
      "prefix": "micro"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:milliwatt;3",
      "@type": [
        "PowerUnit",
        "DecimalUnit"
      ],
      "displayName": "milliwatt",
      "symbol": "mW",
      "baseUnit": "watt",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:kilowatt;3",
      "@type": [
        "PowerUnit",
        "DecimalUnit"
      ],
      "displayName": "kilowatt",
      "symbol": "kW",
      "baseUnit": "watt",
      "prefix": "kilo"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:megawatt;3",
      "@type": [
        "PowerUnit",
        "DecimalUnit"
      ],
      "displayName": "megawatt",
      "symbol": "MW",
      "baseUnit": "watt",
      "prefix": "mega"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:gigawatt;3",
      "@type": [
        "PowerUnit",
        "DecimalUnit"
      ],
      "displayName": "gigawatt",
      "symbol": "GW",
      "baseUnit": "watt",
      "prefix": "giga"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:horsepower;3",
      "@type": [
        "PowerUnit"
      ],
      "displayName": "horsepower",
      "symbol": "hp"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:kilowattHourPerYear;3",
      "@type": [
        "PowerUnit",
        "RatioUnit"
      ],
      "displayName": "kilowatt-hour per year",
      "symbol": "kWh/yr",
      "topUnit": "kilowattHour",
      "bottomUnit": "year"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:pascal;3",
      "@type": [
        "PressureUnit",
        "DecimalUnit"
      ],
      "displayName": "pascal",
      "symbol": "Pa",
      "baseUnit": "pascal"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:kilopascal;3",
      "@type": [
        "PressureUnit",
        "DecimalUnit"
      ],
      "displayName": "kilopascal",
      "symbol": "kPa",
      "baseUnit": "pascal",
      "prefix": "kilo"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:bar;3",
      "@type": [
        "PressureUnit",
        "DecimalUnit"
      ],
      "displayName": "bar",
      "symbol": "bar",
      "baseUnit": "bar"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:millibar;3",
      "@type": [
        "PressureUnit",
        "DecimalUnit"
      ],
      "displayName": "millibar",
      "symbol": "mbar",
      "baseUnit": "bar",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:millimetresOfMercury;3",
      "@type": [
        "PressureUnit"
      ],
      "displayName": "millimetres of mercury",
      "symbol": "mmHg"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:poundPerSquareInch;3",
      "@type": [
        "PressureUnit",
        "RatioUnit"
      ],
      "displayName": "pound per square inch",
      "symbol": "psi",
      "topUnit": "pound",
      "bottomUnit": "squareInch"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:inchesOfMercury;3",
      "@type": [
        "PressureUnit"
      ],
      "displayName": "inches of mercury",
      "symbol": "inHg"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:inchesOfWater;3",
      "@type": [
        "PressureUnit"
      ],
      "displayName": "inches of water",
      "symbol": "inH2O"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:ohm;3",
      "@type": [
        "ResistanceUnit",
        "DecimalUnit"
      ],
      "displayName": "ohm",
      "symbol": "Ω",
      "baseUnit": "ohm"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:milliohm;3",
      "@type": [
        "ResistanceUnit",
        "DecimalUnit"
      ],
      "displayName": "milliohm",
      "symbol": "mΩ",
      "baseUnit": "ohm",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:kiloohm;3",
      "@type": [
        "ResistanceUnit",
        "DecimalUnit"
      ],
      "displayName": "kiloohm",
      "symbol": "kΩ",
      "baseUnit": "ohm",
      "prefix": "kilo"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:megaohm;3",
      "@type": [
        "ResistanceUnit",
        "DecimalUnit"
      ],
      "displayName": "megaohm",
      "symbol": "MΩ",
      "baseUnit": "ohm",
      "prefix": "mega"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:decibel;3",
      "@type": [
        "SoundPressureUnit",
        "DecimalUnit"
      ],
      "displayName": "decibel",
      "symbol": "dB",
      "baseUnit": "bel",
      "prefix": "deci"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:bel;3",
      "@type": [
        "SoundPressureUnit",
        "DecimalUnit"
      ],
      "displayName": "bel",
      "symbol": "B",
      "baseUnit": "bel"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:kelvin;3",
      "@type": [
        "TemperatureUnit"
      ],
      "displayName": "kelvin",
      "symbol": "K"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:degreeCelsius;3",
      "@type": [
        "TemperatureUnit"
      ],
      "displayName": "degree celsius",
      "symbol": "°C"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:degreeFahrenheit;3",
      "@type": [
        "TemperatureUnit"
      ],
      "displayName": "degree fahrenheit",
      "symbol": "°F"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:second;3",
      "@type": [
        "TimeUnit",
        "DecimalUnit"
      ],
      "displayName": "second",
      "symbol": "s",
      "baseUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:millisecond;3",
      "@type": [
        "TimeUnit",
        "DecimalUnit"
      ],
      "displayName": "millisecond",
      "symbol": "ms",
      "baseUnit": "second",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:microsecond;3",
      "@type": [
        "TimeUnit",
        "DecimalUnit"
      ],
      "displayName": "microsecond",
      "symbol": "µs",
      "baseUnit": "second",
      "prefix": "micro"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:nanosecond;3",
      "@type": [
        "TimeUnit",
        "DecimalUnit"
      ],
      "displayName": "nanosecond",
      "symbol": "ns",
      "baseUnit": "second",
      "prefix": "nano"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:minute;3",
      "@type": [
        "TimeUnit"
      ],
      "displayName": "minute",
      "symbol": "m"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:hour;3",
      "@type": [
        "TimeUnit"
      ],
      "displayName": "hour",
      "symbol": "h"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:day;3",
      "@type": [
        "TimeUnit"
      ],
      "displayName": "day",
      "symbol": "d"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:year;3",
      "@type": [
        "TimeUnit"
      ],
      "displayName": "year",
      "symbol": "yr"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:newtonMetre;3",
      "@type": [
        "TorqueUnit",
        "DecimalUnit"
      ],
      "displayName": "newton-metre",
      "symbol": "N m",
      "baseUnit": "newtonMetre"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:unity;3",
      "@type": [
        "Unitless"
      ],
      "displayName": "",
      "symbol": ""
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:percent;3",
      "@type": [
        "Unitless"
      ],
      "displayName": "percent",
      "symbol": "%"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:metrePerSecond;3",
      "@type": [
        "VelocityUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "metre per second",
      "symbol": "m/s",
      "baseUnit": "metrePerSecond",
      "topUnit": "metre",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:centimetrePerSecond;3",
      "@type": [
        "VelocityUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "centimetre per second",
      "symbol": "cm/s",
      "baseUnit": "metrePerSecond",
      "prefix": "centi",
      "topUnit": "centimetre",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:kilometrePerSecond;3",
      "@type": [
        "VelocityUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "kilometre per second",
      "symbol": "km/s",
      "baseUnit": "metrePerSecond",
      "prefix": "kilo",
      "topUnit": "kilometre",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:metrePerHour;3",
      "@type": [
        "VelocityUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "metre per hour",
      "symbol": "m/h",
      "baseUnit": "metrePerHour",
      "topUnit": "metre",
      "bottomUnit": "hour"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:kilometrePerHour;3",
      "@type": [
        "VelocityUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "kilometre per hour",
      "symbol": "km/h",
      "baseUnit": "metrePerHour",
      "prefix": "kilo",
      "topUnit": "kilometre",
      "bottomUnit": "hour"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:milePerHour;3",
      "@type": [
        "VelocityUnit",
        "RatioUnit"
      ],
      "displayName": "mile per hour",
      "symbol": "mph",
      "topUnit": "mile",
      "bottomUnit": "hour"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:milePerSecond;3",
      "@type": [
        "VelocityUnit",
        "RatioUnit"
      ],
      "displayName": "mile per second",
      "symbol": "mi/s",
      "topUnit": "mile",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:knot;3",
      "@type": [
        "VelocityUnit"
      ],
      "displayName": "knot",
      "symbol": "kn"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:volt;3",
      "@type": [
        "VoltageUnit",
        "DecimalUnit"
      ],
      "displayName": "volt",
      "symbol": "V",
      "baseUnit": "volt"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:millivolt;3",
      "@type": [
        "VoltageUnit",
        "DecimalUnit"
      ],
      "displayName": "millivolt",
      "symbol": "mV",
      "baseUnit": "volt",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:microvolt;3",
      "@type": [
        "VoltageUnit",
        "DecimalUnit"
      ],
      "displayName": "microvolt",
      "symbol": "µV",
      "baseUnit": "volt",
      "prefix": "micro"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:kilovolt;3",
      "@type": [
        "VoltageUnit",
        "DecimalUnit"
      ],
      "displayName": "kilovolt",
      "symbol": "kV",
      "baseUnit": "volt",
      "prefix": "kilo"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:megavolt;3",
      "@type": [
        "VoltageUnit",
        "DecimalUnit"
      ],
      "displayName": "megavolt",
      "symbol": "MV",
      "baseUnit": "volt",
      "prefix": "mega"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:cubicMetre;3",
      "@type": [
        "VolumeUnit"
      ],
      "displayName": "cubic metre",
      "symbol": "m3"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:cubicCentimetre;3",
      "@type": [
        "VolumeUnit"
      ],
      "displayName": "cubic centimetre",
      "symbol": "cm3"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:litre;3",
      "@type": [
        "VolumeUnit",
        "DecimalUnit"
      ],
      "displayName": "litre",
      "symbol": "l",
      "baseUnit": "litre"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:millilitre;3",
      "@type": [
        "VolumeUnit",
        "DecimalUnit"
      ],
      "displayName": "millilitre",
      "symbol": "ml",
      "baseUnit": "litre",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:cubicFoot;3",
      "@type": [
        "VolumeUnit"
      ],
      "displayName": "cubic foot",
      "symbol": "ft3"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:cubicInch;3",
      "@type": [
        "VolumeUnit"
      ],
      "displayName": "cubic inch",
      "symbol": "in3"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:fluidOunce;3",
      "@type": [
        "VolumeUnit"
      ],
      "displayName": "fluid ounce",
      "symbol": "fl oz"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:gallon;3",
      "@type": [
        "VolumeUnit"
      ],
      "displayName": "gallon",
      "symbol": "gal"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:litrePerSecond;3",
      "@type": [
        "VolumeFlowRateUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "litre per second",
      "symbol": "l/s",
      "baseUnit": "litrePerSecond",
      "topUnit": "litre",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:millilitrePerSecond;3",
      "@type": [
        "VolumeFlowRateUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "millilitre per second",
      "symbol": "ml/s",
      "baseUnit": "litrePerSecond",
      "prefix": "milli",
      "topUnit": "millilitre",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:litrePerHour;3",
      "@type": [
        "VolumeFlowRateUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "litre per hour",
      "symbol": "l/h",
      "baseUnit": "litrePerHour",
      "topUnit": "litre",
      "bottomUnit": "hour"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:unit:millilitrePerHour;3",
      "@type": [
        "VolumeFlowRateUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "millilitre per hour",
      "symbol": "ml/h",
      "baseUnit": "litrePerHour",
      "prefix": "milli",
      "topUnit": "millilitre",
      "bottomUnit": "hour"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatialPointType;3",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:standard:schema:geospatial:enumValue:point;3",
          "@type": "EnumValue",
          "name": "point",
          "enumValue": "Point"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatialMultiPointType;3",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:standard:schema:geospatial:enumValue:multiPoint;3",
          "@type": "EnumValue",
          "name": "multiPoint",
          "enumValue": "MultiPoint"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatialLineStringType;3",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:standard:schema:geospatial:enumValue:lineString;3",
          "@type": "EnumValue",
          "name": "lineString",
          "enumValue": "LineString"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatialMultiLineStringType;3",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:standard:schema:geospatial:enumValue:multiLineString;3",
          "@type": "EnumValue",
          "name": "multiLineString",
          "enumValue": "MultiLineString"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatialPolygonType;3",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:standard:schema:geospatial:enumValue:polygon;3",
          "@type": "EnumValue",
          "name": "polygon",
          "enumValue": "Polygon"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatialMultiPolygonType;3",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:standard:schema:geospatial:enumValue:multiPolygon;3",
          "@type": "EnumValue",
          "name": "multiPolygon",
          "enumValue": "MultiPolygon"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatial:position;3",
      "@type": "Array",
      "elementSchema": "double"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatial:lineStringCoordinateArray;3",
      "@type": "Array",
      "elementSchema": "dtmi:standard:schema:geospatial:position;3"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatial:polygonCoordinateArray;3",
      "@type": "Array",
      "elementSchema": {
        "@id": "dtmi:standard:schema:geospatial:linearRingCoordinateArray;3",
        "@type": "Array",
        "elementSchema": "dtmi:standard:schema:geospatial:position;3"
      }
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatial:point;3",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:standard:schema:geospatial:point:type;3",
          "@type": "Field",
          "name": "type",
          "schema": "dtmi:standard:schema:geospatialPointType;3"
        },
        {
          "@id": "dtmi:standard:schema:geospatial:point:coordinates;3",
          "@type": "Field",
          "name": "coordinates",
          "schema": "dtmi:standard:schema:geospatial:position;3"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatial:multiPoint;3",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:standard:schema:geospatial:multiPoint:type;3",
          "@type": "Field",
          "name": "type",
          "schema": "dtmi:standard:schema:geospatialMultiPointType;3"
        },
        {
          "@id": "dtmi:standard:schema:geospatial:multiPoint:coordinates;3",
          "@type": "Field",
          "name": "coordinates",
          "schema": {
            "@id": "dtmi:standard:schema:geospatial:positionArray;3",
            "@type": "Array",
            "elementSchema": "dtmi:standard:schema:geospatial:position;3"
          }
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatial:lineString;3",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:standard:schema:geospatial:lineString:type;3",
          "@type": "Field",
          "name": "type",
          "schema": "dtmi:standard:schema:geospatialLineStringType;3"
        },
        {
          "@id": "dtmi:standard:schema:geospatial:lineString:coordinates;3",
          "@type": "Field",
          "name": "coordinates",
          "schema": "dtmi:standard:schema:geospatial:lineStringCoordinateArray;3"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatial:multiLineString;3",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:standard:schema:geospatial:multiLineString:type;3",
          "@type": "Field",
          "name": "type",
          "schema": "dtmi:standard:schema:geospatialMultiLineStringType;3"
        },
        {
          "@id": "dtmi:standard:schema:geospatial:multiLineString:coordinates;3",
          "@type": "Field",
          "name": "coordinates",
          "schema": {
            "@id": "dtmi:standard:schema:geospatial:lineStringCoordinateArrayArray;3",
            "@type": "Array",
            "elementSchema": "dtmi:standard:schema:geospatial:lineStringCoordinateArray;3"
          }
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatial:polygon;3",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:standard:schema:geospatial:polygon:type;3",
          "@type": "Field",
          "name": "type",
          "schema": "dtmi:standard:schema:geospatialPolygonType;3"
        },
        {
          "@id": "dtmi:standard:schema:geospatial:polygon:coordinates;3",
          "@type": "Field",
          "name": "coordinates",
          "schema": "dtmi:standard:schema:geospatial:polygonCoordinateArray;3"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatial:multiPolygon;3",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:standard:schema:geospatial:multiPolygon:type;3",
          "@type": "Field",
          "name": "type",
          "schema": "dtmi:standard:schema:geospatialMultiPolygonType;3"
        },
        {
          "@id": "dtmi:standard:schema:geospatial:multiPolygon:coordinates;3",
          "@type": "Field",
          "name": "coordinates",
          "schema": {
            "@id": "dtmi:standard:schema:geospatial:polygonCoordinateArrayArray;3",
            "@type": "Array",
            "elementSchema": "dtmi:standard:schema:geospatial:polygonCoordinateArray;3"
          }
        }
      ]
    },
    {
      "@context": [
        "dtmi:dtdl:context;2",
        "dtmi:iotcentral:context;2"
      ],
      "@id": "dtmi:iotcentral:schema:vector;2",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:iotcentral:schema:vector:x;2",
          "@type": "Field",
          "name": "x",
          "schema": "double"
        },
        {
          "@id": "dtmi:iotcentral:schema:vector:y;2",
          "@type": "Field",
          "name": "y",
          "schema": "double"
        },
        {
          "@id": "dtmi:iotcentral:schema:vector:z;2",
          "@type": "Field",
          "name": "z",
          "schema": "double"
        }
      ]
    },
    {
      "@context": [
        "dtmi:dtdl:context;2",
        "dtmi:iotcentral:context;2"
      ],
      "@id": "dtmi:iotcentral:schema:geopoint;2",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:iotcentral:schema:geopoint:lon;2",
          "@type": "Field",
          "name": "lon",
          "schema": "double"
        },
        {
          "@id": "dtmi:iotcentral:schema:geopoint:lat;2",
          "@type": "Field",
          "name": "lat",
          "schema": "double"
        },
        {
          "@id": "dtmi:iotcentral:schema:geopoint:alt;2",
          "@type": "Field",
          "name": "alt",
          "schema": "double"
        }
      ]
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:iotcentral:context;3"
      ],
      "@id": "dtmi:iotcentral:schema:vector;3",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:iotcentral:schema:vector:x;3",
          "@type": "Field",
          "name": "x",
          "schema": "double"
        },
        {
          "@id": "dtmi:iotcentral:schema:vector:y;3",
          "@type": "Field",
          "name": "y",
          "schema": "double"
        },
        {
          "@id": "dtmi:iotcentral:schema:vector:z;3",
          "@type": "Field",
          "name": "z",
          "schema": "double"
        }
      ]
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:iotcentral:context;3"
      ],
      "@id": "dtmi:iotcentral:schema:geopoint;3",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:iotcentral:schema:geopoint:lon;3",
          "@type": "Field",
          "name": "lon",
          "schema": "double"
        },
        {
          "@id": "dtmi:iotcentral:schema:geopoint:lat;3",
          "@type": "Field",
          "name": "lat",
          "schema": "double"
        },
        {
          "@id": "dtmi:iotcentral:schema:geopoint:alt;3",
          "@type": "Field",
          "name": "alt",
          "schema": "double"
        }
      ]
    }
  ]
}
