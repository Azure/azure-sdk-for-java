// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.v2.security.keyvault.administration.implementation.models;

import io.clientcore.core.annotations.Metadata;
import io.clientcore.core.annotations.MetadataProperties;
import io.clientcore.core.serialization.json.JsonReader;
import io.clientcore.core.serialization.json.JsonSerializable;
import io.clientcore.core.serialization.json.JsonToken;
import io.clientcore.core.serialization.json.JsonWriter;
import java.io.IOException;

/**
 * The authentication method and location for the restore operation.
 */
@Metadata(properties = { MetadataProperties.IMMUTABLE })
public final class RestoreOperationParameters implements JsonSerializable<RestoreOperationParameters> {
    /*
     * A user-provided SAS token to an Azure blob storage container.
     */
    @Metadata(properties = { MetadataProperties.GENERATED })
    private final SASTokenParameter sasTokenParameters;

    /*
     * The Folder name of the blob where the previous successful full backup was stored
     */
    @Metadata(properties = { MetadataProperties.GENERATED })
    private final String folderToRestore;

    /**
     * Creates an instance of RestoreOperationParameters class.
     * 
     * @param sasTokenParameters the sasTokenParameters value to set.
     * @param folderToRestore the folderToRestore value to set.
     */
    @Metadata(properties = { MetadataProperties.GENERATED })
    public RestoreOperationParameters(SASTokenParameter sasTokenParameters, String folderToRestore) {
        this.sasTokenParameters = sasTokenParameters;
        this.folderToRestore = folderToRestore;
    }

    /**
     * Get the sasTokenParameters property: A user-provided SAS token to an Azure blob storage container.
     * 
     * @return the sasTokenParameters value.
     */
    @Metadata(properties = { MetadataProperties.GENERATED })
    public SASTokenParameter getSasTokenParameters() {
        return this.sasTokenParameters;
    }

    /**
     * Get the folderToRestore property: The Folder name of the blob where the previous successful full backup was
     * stored.
     * 
     * @return the folderToRestore value.
     */
    @Metadata(properties = { MetadataProperties.GENERATED })
    public String getFolderToRestore() {
        return this.folderToRestore;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(properties = { MetadataProperties.GENERATED })
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("sasTokenParameters", this.sasTokenParameters);
        jsonWriter.writeStringField("folderToRestore", this.folderToRestore);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RestoreOperationParameters from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RestoreOperationParameters if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the RestoreOperationParameters.
     */
    @Metadata(properties = { MetadataProperties.GENERATED })
    public static RestoreOperationParameters fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SASTokenParameter sasTokenParameters = null;
            String folderToRestore = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("sasTokenParameters".equals(fieldName)) {
                    sasTokenParameters = SASTokenParameter.fromJson(reader);
                } else if ("folderToRestore".equals(fieldName)) {
                    folderToRestore = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return new RestoreOperationParameters(sasTokenParameters, folderToRestore);
        });
    }
}
