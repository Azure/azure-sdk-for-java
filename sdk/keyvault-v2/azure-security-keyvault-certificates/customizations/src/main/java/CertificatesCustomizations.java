// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

import com.azure.autorest.customization.Customization;
import com.azure.autorest.customization.Editor;
import com.azure.autorest.customization.LibraryCustomization;
import com.github.javaparser.StaticJavaParser;
import org.slf4j.Logger;

/**
 * Contains customizations for Azure Key Vault's Certificates code generation.
 */
public class CertificatesCustomizations extends Customization {
    private static final String ROOT_FILE_PATH = "src/main/java/com/azure/v2/security/keyvault/certificates/";

    @Override
    public void customize(LibraryCustomization libraryCustomization, Logger logger) {
        // Remove unnecessary files.
        removeFiles(libraryCustomization.getRawEditor());
        customizeError(libraryCustomization);
        customizeServiceVersion(libraryCustomization.getRawEditor());
        customizeModuleInfo(libraryCustomization.getRawEditor());
    }

    private static void removeFiles(Editor editor) {
        editor.removeFile(ROOT_FILE_PATH + "CertificateClient.java");
        editor.removeFile(ROOT_FILE_PATH + "CertificateClientBuilder.java");
        editor.removeFile(ROOT_FILE_PATH + "implementation/models/package-info.java");
    }

    private static void customizeError(LibraryCustomization customization) {
        String implModelsDirectory = ROOT_FILE_PATH + "implementation/models/";
        String oldClassName = "KeyVaultErrorError";
        String modelsDirectory = ROOT_FILE_PATH + "models/";
        String newClassName = "CertificateOperationError";

        // Rename KeyVaultErrorError to CertificateOperationError and move it to the public models package.
        String fileContent = customization.getRawEditor().getFileContent(implModelsDirectory + oldClassName + ".java");

        customization.getRawEditor().removeFile(implModelsDirectory + oldClassName + ".java");

        fileContent = fileContent.replace(oldClassName, newClassName)
            .replace("com.azure.v2.security.keyvault.certificates.implementation.models",
                "com.azure.v2.security.keyvault.certificates.models");
        customization.getRawEditor().addFile(modelsDirectory + newClassName + ".java", fileContent);

        // The class is used in CertificateOperation, which is in the implementation package.
        // Add an import to handle the class moving.
        customization.getClass("com.azure.v2.security.keyvault.certificates.implementation.models", "CertificateOperation")
            .customizeAst(ast -> ast.addImport("com.azure.v2.security.keyvault.certificates.models." + newClassName)
                .getClassByName("CertificateOperation")
                .ifPresent(clazz -> {
                    clazz.getFieldByName("error").ifPresent(field -> field.getVariable(0).setType(newClassName));
                    clazz.getMethodsByName("getError").forEach(method -> method.setType(newClassName));
                    clazz.getMethodsByName("setError").forEach(method -> method.getParameter(0).setType(newClassName));
                    clazz.getMethodsByName("fromJson").forEach(method -> method.getBody()
                        .ifPresent(body -> method.setBody(StaticJavaParser.parseBlock(body.toString().replace(oldClassName, newClassName)))));
                }));
    }

    private static void customizeServiceVersion(Editor editor) {
        String serviceVersion = editor.getFileContent(ROOT_FILE_PATH + "KeyVaultServiceVersion.java")
            .replace("KeyVaultServiceVersion", "CertificateServiceVersion");

        editor.addFile(ROOT_FILE_PATH + "CertificateServiceVersion.java", serviceVersion);
        editor.removeFile(ROOT_FILE_PATH + "KeyVaultServiceVersion.java");

        String fileName = ROOT_FILE_PATH + "implementation/CertificateClientImpl.java";
        String fileContent = editor.getFileContent(fileName);
        fileContent = fileContent.replace("KeyVaultServiceVersion", "CertificateServiceVersion");
        editor.replaceFile(fileName, fileContent);
    }

    private static void customizeModuleInfo(Editor editor) {
        editor.replaceFile("src/main/java/module-info.java", String.join("\n",
            "// Copyright (c) Microsoft Corporation. All rights reserved.",
            "// Licensed under the MIT License.",
            "// Code generated by Microsoft (R) TypeSpec Code Generator.",
            "",
            "module com.azure.v2.security.keyvault.certificates {",
            "    requires transitive com.azure.v2.core;",
            "",
            "    exports com.azure.v2.security.keyvault.certificates;",
            "    exports com.azure.v2.security.keyvault.certificates.models;",
            "}"));
    }
}
