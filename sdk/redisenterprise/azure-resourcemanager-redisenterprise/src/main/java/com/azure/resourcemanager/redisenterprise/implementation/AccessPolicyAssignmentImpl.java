// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.redisenterprise.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.redisenterprise.fluent.models.AccessPolicyAssignmentInner;
import com.azure.resourcemanager.redisenterprise.models.AccessPolicyAssignment;
import com.azure.resourcemanager.redisenterprise.models.AccessPolicyAssignmentPropertiesUser;
import com.azure.resourcemanager.redisenterprise.models.ProvisioningState;

public final class AccessPolicyAssignmentImpl
    implements AccessPolicyAssignment, AccessPolicyAssignment.Definition, AccessPolicyAssignment.Update {
    private AccessPolicyAssignmentInner innerObject;

    private final com.azure.resourcemanager.redisenterprise.RedisEnterpriseManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String accessPolicyName() {
        return this.innerModel().accessPolicyName();
    }

    public AccessPolicyAssignmentPropertiesUser user() {
        return this.innerModel().user();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public AccessPolicyAssignmentInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.redisenterprise.RedisEnterpriseManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String clusterName;

    private String databaseName;

    private String accessPolicyAssignmentName;

    public AccessPolicyAssignmentImpl withExistingDatabase(String resourceGroupName, String clusterName,
        String databaseName) {
        this.resourceGroupName = resourceGroupName;
        this.clusterName = clusterName;
        this.databaseName = databaseName;
        return this;
    }

    public AccessPolicyAssignment create() {
        this.innerObject = serviceManager.serviceClient()
            .getAccessPolicyAssignments()
            .createUpdate(resourceGroupName, clusterName, databaseName, accessPolicyAssignmentName, this.innerModel(),
                Context.NONE);
        return this;
    }

    public AccessPolicyAssignment create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getAccessPolicyAssignments()
            .createUpdate(resourceGroupName, clusterName, databaseName, accessPolicyAssignmentName, this.innerModel(),
                context);
        return this;
    }

    AccessPolicyAssignmentImpl(String name,
        com.azure.resourcemanager.redisenterprise.RedisEnterpriseManager serviceManager) {
        this.innerObject = new AccessPolicyAssignmentInner();
        this.serviceManager = serviceManager;
        this.accessPolicyAssignmentName = name;
    }

    public AccessPolicyAssignmentImpl update() {
        return this;
    }

    public AccessPolicyAssignment apply() {
        this.innerObject = serviceManager.serviceClient()
            .getAccessPolicyAssignments()
            .createUpdate(resourceGroupName, clusterName, databaseName, accessPolicyAssignmentName, this.innerModel(),
                Context.NONE);
        return this;
    }

    public AccessPolicyAssignment apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getAccessPolicyAssignments()
            .createUpdate(resourceGroupName, clusterName, databaseName, accessPolicyAssignmentName, this.innerModel(),
                context);
        return this;
    }

    AccessPolicyAssignmentImpl(AccessPolicyAssignmentInner innerObject,
        com.azure.resourcemanager.redisenterprise.RedisEnterpriseManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.clusterName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "redisEnterprise");
        this.databaseName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "databases");
        this.accessPolicyAssignmentName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "accessPolicyAssignments");
    }

    public AccessPolicyAssignment refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getAccessPolicyAssignments()
            .getWithResponse(resourceGroupName, clusterName, databaseName, accessPolicyAssignmentName, Context.NONE)
            .getValue();
        return this;
    }

    public AccessPolicyAssignment refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getAccessPolicyAssignments()
            .getWithResponse(resourceGroupName, clusterName, databaseName, accessPolicyAssignmentName, context)
            .getValue();
        return this;
    }

    public AccessPolicyAssignmentImpl withAccessPolicyName(String accessPolicyName) {
        this.innerModel().withAccessPolicyName(accessPolicyName);
        return this;
    }

    public AccessPolicyAssignmentImpl withUser(AccessPolicyAssignmentPropertiesUser user) {
        this.innerModel().withUser(user);
        return this;
    }
}
