// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.redisenterprise.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.redisenterprise.fluent.models.AccessPolicyAssignmentInner;

/**
 * An instance of this class provides access to all the operations defined in AccessPolicyAssignmentsClient.
 */
public interface AccessPolicyAssignmentsClient {
    /**
     * Creates/Updates a particular access policy assignment for a database.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Redis Enterprise cluster.
     * @param databaseName The name of the Redis Enterprise database.
     * @param accessPolicyAssignmentName The name of the Redis Enterprise database access policy assignment.
     * @param parameters Parameters supplied to the create access policy assignment for database.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of describes the access policy assignment of Redis Enterprise
     * database.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AccessPolicyAssignmentInner>, AccessPolicyAssignmentInner> beginCreateUpdate(
        String resourceGroupName, String clusterName, String databaseName, String accessPolicyAssignmentName,
        AccessPolicyAssignmentInner parameters);

    /**
     * Creates/Updates a particular access policy assignment for a database.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Redis Enterprise cluster.
     * @param databaseName The name of the Redis Enterprise database.
     * @param accessPolicyAssignmentName The name of the Redis Enterprise database access policy assignment.
     * @param parameters Parameters supplied to the create access policy assignment for database.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of describes the access policy assignment of Redis Enterprise
     * database.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AccessPolicyAssignmentInner>, AccessPolicyAssignmentInner> beginCreateUpdate(
        String resourceGroupName, String clusterName, String databaseName, String accessPolicyAssignmentName,
        AccessPolicyAssignmentInner parameters, Context context);

    /**
     * Creates/Updates a particular access policy assignment for a database.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Redis Enterprise cluster.
     * @param databaseName The name of the Redis Enterprise database.
     * @param accessPolicyAssignmentName The name of the Redis Enterprise database access policy assignment.
     * @param parameters Parameters supplied to the create access policy assignment for database.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes the access policy assignment of Redis Enterprise database.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AccessPolicyAssignmentInner createUpdate(String resourceGroupName, String clusterName, String databaseName,
        String accessPolicyAssignmentName, AccessPolicyAssignmentInner parameters);

    /**
     * Creates/Updates a particular access policy assignment for a database.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Redis Enterprise cluster.
     * @param databaseName The name of the Redis Enterprise database.
     * @param accessPolicyAssignmentName The name of the Redis Enterprise database access policy assignment.
     * @param parameters Parameters supplied to the create access policy assignment for database.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes the access policy assignment of Redis Enterprise database.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AccessPolicyAssignmentInner createUpdate(String resourceGroupName, String clusterName, String databaseName,
        String accessPolicyAssignmentName, AccessPolicyAssignmentInner parameters, Context context);

    /**
     * Gets information about access policy assignment for database.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Redis Enterprise cluster.
     * @param databaseName The name of the Redis Enterprise database.
     * @param accessPolicyAssignmentName The name of the Redis Enterprise database access policy assignment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about access policy assignment for database along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AccessPolicyAssignmentInner> getWithResponse(String resourceGroupName, String clusterName,
        String databaseName, String accessPolicyAssignmentName, Context context);

    /**
     * Gets information about access policy assignment for database.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Redis Enterprise cluster.
     * @param databaseName The name of the Redis Enterprise database.
     * @param accessPolicyAssignmentName The name of the Redis Enterprise database access policy assignment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about access policy assignment for database.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AccessPolicyAssignmentInner get(String resourceGroupName, String clusterName, String databaseName,
        String accessPolicyAssignmentName);

    /**
     * Deletes a single access policy assignment.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Redis Enterprise cluster.
     * @param databaseName The name of the Redis Enterprise database.
     * @param accessPolicyAssignmentName The name of the Redis Enterprise database access policy assignment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String clusterName, String databaseName,
        String accessPolicyAssignmentName);

    /**
     * Deletes a single access policy assignment.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Redis Enterprise cluster.
     * @param databaseName The name of the Redis Enterprise database.
     * @param accessPolicyAssignmentName The name of the Redis Enterprise database access policy assignment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String clusterName, String databaseName,
        String accessPolicyAssignmentName, Context context);

    /**
     * Deletes a single access policy assignment.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Redis Enterprise cluster.
     * @param databaseName The name of the Redis Enterprise database.
     * @param accessPolicyAssignmentName The name of the Redis Enterprise database access policy assignment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String clusterName, String databaseName, String accessPolicyAssignmentName);

    /**
     * Deletes a single access policy assignment.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Redis Enterprise cluster.
     * @param databaseName The name of the Redis Enterprise database.
     * @param accessPolicyAssignmentName The name of the Redis Enterprise database access policy assignment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String clusterName, String databaseName, String accessPolicyAssignmentName,
        Context context);

    /**
     * Gets all access policy assignments..
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Redis Enterprise cluster.
     * @param databaseName The name of the Redis Enterprise database.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all access policy assignments. as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AccessPolicyAssignmentInner> list(String resourceGroupName, String clusterName, String databaseName);

    /**
     * Gets all access policy assignments..
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Redis Enterprise cluster.
     * @param databaseName The name of the Redis Enterprise database.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all access policy assignments. as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AccessPolicyAssignmentInner> list(String resourceGroupName, String clusterName, String databaseName,
        Context context);
}
