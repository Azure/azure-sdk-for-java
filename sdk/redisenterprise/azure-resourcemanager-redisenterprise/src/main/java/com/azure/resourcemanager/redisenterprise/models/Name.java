// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.redisenterprise.models;

import com.azure.core.util.ExpandableStringEnum;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.Collection;

/** The type of RedisEnterprise cluster to deploy. Possible values: (Enterprise_E10, EnterpriseFlash_F300 etc.). */
public final class Name extends ExpandableStringEnum<Name> {
    /** Static value Enterprise_E10 for Name. */
    public static final Name ENTERPRISE_E10 = fromString("Enterprise_E10");

    /** Static value Enterprise_E20 for Name. */
    public static final Name ENTERPRISE_E20 = fromString("Enterprise_E20");

    /** Static value Enterprise_E50 for Name. */
    public static final Name ENTERPRISE_E50 = fromString("Enterprise_E50");

    /** Static value Enterprise_E100 for Name. */
    public static final Name ENTERPRISE_E100 = fromString("Enterprise_E100");

    /** Static value EnterpriseFlash_F300 for Name. */
    public static final Name ENTERPRISE_FLASH_F300 = fromString("EnterpriseFlash_F300");

    /** Static value EnterpriseFlash_F700 for Name. */
    public static final Name ENTERPRISE_FLASH_F700 = fromString("EnterpriseFlash_F700");

    /** Static value EnterpriseFlash_F1500 for Name. */
    public static final Name ENTERPRISE_FLASH_F1500 = fromString("EnterpriseFlash_F1500");

    /**
     * Creates a new instance of Name value.
     *
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public Name() {
    }

    /**
     * Creates or finds a Name from its string representation.
     *
     * @param name a name to look for.
     * @return the corresponding Name.
     */
    @JsonCreator
    public static Name fromString(String name) {
        return fromString(name, Name.class);
    }

    /**
     * Gets known Name values.
     *
     * @return known Name values.
     */
    public static Collection<Name> values() {
        return values(Name.class);
    }
}
