// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.redisenterprise.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.redisenterprise.RedisEnterpriseManager;
import com.azure.resourcemanager.redisenterprise.models.AccessPolicyAssignment;
import com.azure.resourcemanager.redisenterprise.models.AccessPolicyAssignmentPropertiesUser;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AccessPolicyAssignmentsCreateUpdateMockTests {
    @Test
    public void testCreateUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Succeeded\",\"accessPolicyName\":\"mvb\",\"user\":{\"objectId\":\"yjsflhhcaalnji\"}},\"id\":\"isxyawjoyaqcslyj\",\"name\":\"kiidzyex\",\"type\":\"nelixhnrztfo\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RedisEnterpriseManager manager = RedisEnterpriseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        AccessPolicyAssignment response = manager.accessPolicyAssignments()
            .define("ultskzbbtdz")
            .withExistingDatabase("vawjvzunlu", "hnnpr", "xipeilpjzuaejx")
            .withAccessPolicyName("ekg")
            .withUser(new AccessPolicyAssignmentPropertiesUser().withObjectId("ozuhkfp"))
            .create();

        Assertions.assertEquals("mvb", response.accessPolicyName());
        Assertions.assertEquals("yjsflhhcaalnji", response.user().objectId());
    }
}
