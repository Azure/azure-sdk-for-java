// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.playwright.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.playwright.fluent.models.PlaywrightQuotaInner;
import com.azure.resourcemanager.playwright.models.QuotaName;

/**
 * An instance of this class provides access to all the operations defined in PlaywrightQuotasClient.
 */
public interface PlaywrightQuotasClient {
    /**
     * Gets a subscription-level location-based Playwright quota resource by name.
     * 
     * @param location The name of the Azure region.
     * @param playwrightQuotaName The name of the PlaywrightQuota.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a subscription-level location-based Playwright quota resource by name along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<PlaywrightQuotaInner> getWithResponse(String location, QuotaName playwrightQuotaName, Context context);

    /**
     * Gets a subscription-level location-based Playwright quota resource by name.
     * 
     * @param location The name of the Azure region.
     * @param playwrightQuotaName The name of the PlaywrightQuota.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a subscription-level location-based Playwright quota resource by name.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PlaywrightQuotaInner get(String location, QuotaName playwrightQuotaName);

    /**
     * Lists Playwright quota resources for a given subscription ID.
     * 
     * @param location The name of the Azure region.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a PlaywrightQuota list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PlaywrightQuotaInner> listBySubscription(String location);

    /**
     * Lists Playwright quota resources for a given subscription ID.
     * 
     * @param location The name of the Azure region.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a PlaywrightQuota list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PlaywrightQuotaInner> listBySubscription(String location, Context context);
}
