// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.playwright.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.playwright.fluent.PlaywrightWorkspaceQuotasClient;
import com.azure.resourcemanager.playwright.fluent.models.PlaywrightWorkspaceQuotaInner;
import com.azure.resourcemanager.playwright.models.PlaywrightWorkspaceQuota;
import com.azure.resourcemanager.playwright.models.PlaywrightWorkspaceQuotas;
import com.azure.resourcemanager.playwright.models.QuotaName;

public final class PlaywrightWorkspaceQuotasImpl implements PlaywrightWorkspaceQuotas {
    private static final ClientLogger LOGGER = new ClientLogger(PlaywrightWorkspaceQuotasImpl.class);

    private final PlaywrightWorkspaceQuotasClient innerClient;

    private final com.azure.resourcemanager.playwright.MicrosoftPlaywrightServiceManager serviceManager;

    public PlaywrightWorkspaceQuotasImpl(PlaywrightWorkspaceQuotasClient innerClient,
        com.azure.resourcemanager.playwright.MicrosoftPlaywrightServiceManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<PlaywrightWorkspaceQuota> getWithResponse(String resourceGroupName, String playwrightWorkspaceName,
        QuotaName quotaName, Context context) {
        Response<PlaywrightWorkspaceQuotaInner> inner
            = this.serviceClient().getWithResponse(resourceGroupName, playwrightWorkspaceName, quotaName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new PlaywrightWorkspaceQuotaImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public PlaywrightWorkspaceQuota get(String resourceGroupName, String playwrightWorkspaceName, QuotaName quotaName) {
        PlaywrightWorkspaceQuotaInner inner
            = this.serviceClient().get(resourceGroupName, playwrightWorkspaceName, quotaName);
        if (inner != null) {
            return new PlaywrightWorkspaceQuotaImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public PagedIterable<PlaywrightWorkspaceQuota> listByPlaywrightWorkspace(String resourceGroupName,
        String playwrightWorkspaceName) {
        PagedIterable<PlaywrightWorkspaceQuotaInner> inner
            = this.serviceClient().listByPlaywrightWorkspace(resourceGroupName, playwrightWorkspaceName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new PlaywrightWorkspaceQuotaImpl(inner1, this.manager()));
    }

    public PagedIterable<PlaywrightWorkspaceQuota> listByPlaywrightWorkspace(String resourceGroupName,
        String playwrightWorkspaceName, Context context) {
        PagedIterable<PlaywrightWorkspaceQuotaInner> inner
            = this.serviceClient().listByPlaywrightWorkspace(resourceGroupName, playwrightWorkspaceName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new PlaywrightWorkspaceQuotaImpl(inner1, this.manager()));
    }

    private PlaywrightWorkspaceQuotasClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.playwright.MicrosoftPlaywrightServiceManager manager() {
        return this.serviceManager;
    }
}
