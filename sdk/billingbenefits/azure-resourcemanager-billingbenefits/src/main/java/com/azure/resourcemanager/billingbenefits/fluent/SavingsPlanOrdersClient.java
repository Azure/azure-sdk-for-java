// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billingbenefits.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.billingbenefits.fluent.models.RoleAssignmentEntityInner;
import com.azure.resourcemanager.billingbenefits.fluent.models.SavingsPlanOrderModelInner;

/** An instance of this class provides access to all the operations defined in SavingsPlanOrdersClient. */
public interface SavingsPlanOrdersClient {
    /**
     * Get a savings plan order.
     *
     * @param savingsPlanOrderId Order ID of the savings plan.
     * @param expand May be used to expand the detail information of some properties.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a savings plan order along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SavingsPlanOrderModelInner> getWithResponse(String savingsPlanOrderId, String expand, Context context);

    /**
     * Get a savings plan order.
     *
     * @param savingsPlanOrderId Order ID of the savings plan.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a savings plan order.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SavingsPlanOrderModelInner get(String savingsPlanOrderId);

    /**
     * Elevate as owner on savings plan order based on billing permissions.
     *
     * @param savingsPlanOrderId Order ID of the savings plan.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return role assignment entity along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<RoleAssignmentEntityInner> elevateWithResponse(String savingsPlanOrderId, Context context);

    /**
     * Elevate as owner on savings plan order based on billing permissions.
     *
     * @param savingsPlanOrderId Order ID of the savings plan.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return role assignment entity.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RoleAssignmentEntityInner elevate(String savingsPlanOrderId);

    /**
     * List all Savings plan orders.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SavingsPlanOrderModelInner> list();

    /**
     * List all Savings plan orders.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SavingsPlanOrderModelInner> list(Context context);
}
