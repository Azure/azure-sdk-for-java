// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billingbenefits.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Properties specific to each reserved resource type. Not required if not applicable.
 */
@Fluent
public final class ReservationOrderAliasRequestPropertiesReservedResourceProperties
    implements JsonSerializable<ReservationOrderAliasRequestPropertiesReservedResourceProperties> {
    /*
     * Turning this on will apply the reservation discount to other VMs in the same VM size group.
     */
    private InstanceFlexibility instanceFlexibility;

    /**
     * Creates an instance of ReservationOrderAliasRequestPropertiesReservedResourceProperties class.
     */
    public ReservationOrderAliasRequestPropertiesReservedResourceProperties() {
    }

    /**
     * Get the instanceFlexibility property: Turning this on will apply the reservation discount to other VMs in the
     * same VM size group.
     * 
     * @return the instanceFlexibility value.
     */
    public InstanceFlexibility instanceFlexibility() {
        return this.instanceFlexibility;
    }

    /**
     * Set the instanceFlexibility property: Turning this on will apply the reservation discount to other VMs in the
     * same VM size group.
     * 
     * @param instanceFlexibility the instanceFlexibility value to set.
     * @return the ReservationOrderAliasRequestPropertiesReservedResourceProperties object itself.
     */
    public ReservationOrderAliasRequestPropertiesReservedResourceProperties
        withInstanceFlexibility(InstanceFlexibility instanceFlexibility) {
        this.instanceFlexibility = instanceFlexibility;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("instanceFlexibility",
            this.instanceFlexibility == null ? null : this.instanceFlexibility.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ReservationOrderAliasRequestPropertiesReservedResourceProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ReservationOrderAliasRequestPropertiesReservedResourceProperties if the JsonReader was
     * pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the
     * ReservationOrderAliasRequestPropertiesReservedResourceProperties.
     */
    public static ReservationOrderAliasRequestPropertiesReservedResourceProperties fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            ReservationOrderAliasRequestPropertiesReservedResourceProperties deserializedReservationOrderAliasRequestPropertiesReservedResourceProperties
                = new ReservationOrderAliasRequestPropertiesReservedResourceProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("instanceFlexibility".equals(fieldName)) {
                    deserializedReservationOrderAliasRequestPropertiesReservedResourceProperties.instanceFlexibility
                        = InstanceFlexibility.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedReservationOrderAliasRequestPropertiesReservedResourceProperties;
        });
    }
}
