// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billingbenefits.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.billingbenefits.BillingBenefitsManager;
import com.azure.resourcemanager.billingbenefits.models.AppliedScopeProperties;
import com.azure.resourcemanager.billingbenefits.models.AppliedScopeType;
import com.azure.resourcemanager.billingbenefits.models.BillingPlan;
import com.azure.resourcemanager.billingbenefits.models.InstanceFlexibility;
import com.azure.resourcemanager.billingbenefits.models.ReservationOrderAliasRequest;
import com.azure.resourcemanager.billingbenefits.models.ReservationOrderAliasRequestPropertiesReservedResourceProperties;
import com.azure.resourcemanager.billingbenefits.models.ReservationOrderAliasResponse;
import com.azure.resourcemanager.billingbenefits.models.ReservedResourceType;
import com.azure.resourcemanager.billingbenefits.models.Sku;
import com.azure.resourcemanager.billingbenefits.models.Term;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReservationOrderAliasCreateMockTests {
    @Test
    public void testCreate() throws Exception {
        String responseStr
            = "{\"sku\":{\"name\":\"hsd\"},\"location\":\"t\",\"properties\":{\"displayName\":\"ikdowwquuvx\",\"reservationOrderId\":\"clvit\",\"provisioningState\":\"Succeeded\",\"billingScopeId\":\"o\",\"term\":\"P3Y\",\"billingPlan\":\"P1M\",\"appliedScopeType\":\"Shared\",\"appliedScopeProperties\":{\"tenantId\":\"hfwdsjnkaljutiis\",\"managementGroupId\":\"cffgdkzzewk\",\"subscriptionId\":\"hqcrailvpnpp\",\"resourceGroupId\":\"flrwd\",\"displayName\":\"dlxyjrxs\"},\"quantity\":1591764317,\"renew\":true,\"reservedResourceType\":\"AzureDataExplorer\",\"reviewDateTime\":\"2021-08-27T23:35:53Z\",\"reservedResourceProperties\":{\"instanceFlexibility\":\"Off\"}},\"id\":\"nedgfbc\",\"name\":\"kcvqvpke\",\"type\":\"dcvd\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        BillingBenefitsManager manager = BillingBenefitsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ReservationOrderAliasResponse response = manager.reservationOrderAlias()
            .create("z", new ReservationOrderAliasRequest().withSku(new Sku().withName("sikvmkqzeqqkdlt"))
                .withLocation("xmhhvhgureo")
                .withDisplayName("obdagxtibqdxb")
                .withBillingScopeId("akbogqxndlkzgxh")
                .withTerm(Term.P1Y)
                .withBillingPlan(BillingPlan.P1M)
                .withAppliedScopeType(AppliedScopeType.SINGLE)
                .withAppliedScopeProperties(new AppliedScopeProperties().withTenantId("xunkbebxmubyynt")
                    .withManagementGroupId("rbqtkoie")
                    .withSubscriptionId("eotg")
                    .withResourceGroupId("l")
                    .withDisplayName("muwlauwzizxbm"))
                .withQuantity(2123049773)
                .withRenew(true)
                .withReservedResourceType(ReservedResourceType.SQL_DATA_WAREHOUSE)
                .withReviewDateTime(OffsetDateTime.parse("2021-09-15T06:09:09Z"))
                .withReservedResourceProperties(new ReservationOrderAliasRequestPropertiesReservedResourceProperties()
                    .withInstanceFlexibility(InstanceFlexibility.ON)),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("hsd", response.sku().name());
        Assertions.assertEquals("t", response.location());
        Assertions.assertEquals("ikdowwquuvx", response.displayName());
        Assertions.assertEquals("o", response.billingScopeId());
        Assertions.assertEquals(Term.P3Y, response.term());
        Assertions.assertEquals(BillingPlan.P1M, response.billingPlan());
        Assertions.assertEquals(AppliedScopeType.SHARED, response.appliedScopeType());
        Assertions.assertEquals("hfwdsjnkaljutiis", response.appliedScopeProperties().tenantId());
        Assertions.assertEquals("cffgdkzzewk", response.appliedScopeProperties().managementGroupId());
        Assertions.assertEquals("hqcrailvpnpp", response.appliedScopeProperties().subscriptionId());
        Assertions.assertEquals("flrwd", response.appliedScopeProperties().resourceGroupId());
        Assertions.assertEquals("dlxyjrxs", response.appliedScopeProperties().displayName());
        Assertions.assertEquals(1591764317, response.quantity());
        Assertions.assertEquals(true, response.renew());
        Assertions.assertEquals(ReservedResourceType.AZURE_DATA_EXPLORER, response.reservedResourceType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-27T23:35:53Z"), response.reviewDateTime());
        Assertions.assertEquals(InstanceFlexibility.OFF, response.reservedResourceProperties().instanceFlexibility());
    }
}
