// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billingbenefits.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.billingbenefits.fluent.models.ReservationOrderAliasResponseInner;
import com.azure.resourcemanager.billingbenefits.models.AppliedScopeProperties;
import com.azure.resourcemanager.billingbenefits.models.AppliedScopeType;
import com.azure.resourcemanager.billingbenefits.models.BillingPlan;
import com.azure.resourcemanager.billingbenefits.models.InstanceFlexibility;
import com.azure.resourcemanager.billingbenefits.models.ReservationOrderAliasResponsePropertiesReservedResourceProperties;
import com.azure.resourcemanager.billingbenefits.models.ReservedResourceType;
import com.azure.resourcemanager.billingbenefits.models.Sku;
import com.azure.resourcemanager.billingbenefits.models.Term;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class ReservationOrderAliasResponseInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ReservationOrderAliasResponseInner model = BinaryData.fromString(
            "{\"sku\":{\"name\":\"de\"},\"location\":\"jzicwifsjt\",\"properties\":{\"displayName\":\"fbishcbkha\",\"reservationOrderId\":\"eyeam\",\"provisioningState\":\"Failed\",\"billingScopeId\":\"g\",\"term\":\"P3Y\",\"billingPlan\":\"P1M\",\"appliedScopeType\":\"Single\",\"appliedScopeProperties\":{\"tenantId\":\"pwhonowkg\",\"managementGroupId\":\"wankixzbi\",\"subscriptionId\":\"eputtmrywnuzoqf\",\"resourceGroupId\":\"yqzrnkcqvyxlw\",\"displayName\":\"lsicohoqqnwv\"},\"quantity\":759862878,\"renew\":true,\"reservedResourceType\":\"NetAppStorage\",\"reviewDateTime\":\"2021-11-18T07:56:25Z\",\"reservedResourceProperties\":{\"instanceFlexibility\":\"Off\"}},\"id\":\"qhgyxzkonocukok\",\"name\":\"yaxuconuqszfkb\",\"type\":\"ypewrmjmwvvjekt\"}")
            .toObject(ReservationOrderAliasResponseInner.class);
        Assertions.assertEquals("de", model.sku().name());
        Assertions.assertEquals("jzicwifsjt", model.location());
        Assertions.assertEquals("fbishcbkha", model.displayName());
        Assertions.assertEquals("g", model.billingScopeId());
        Assertions.assertEquals(Term.P3Y, model.term());
        Assertions.assertEquals(BillingPlan.P1M, model.billingPlan());
        Assertions.assertEquals(AppliedScopeType.SINGLE, model.appliedScopeType());
        Assertions.assertEquals("pwhonowkg", model.appliedScopeProperties().tenantId());
        Assertions.assertEquals("wankixzbi", model.appliedScopeProperties().managementGroupId());
        Assertions.assertEquals("eputtmrywnuzoqf", model.appliedScopeProperties().subscriptionId());
        Assertions.assertEquals("yqzrnkcqvyxlw", model.appliedScopeProperties().resourceGroupId());
        Assertions.assertEquals("lsicohoqqnwv", model.appliedScopeProperties().displayName());
        Assertions.assertEquals(759862878, model.quantity());
        Assertions.assertEquals(true, model.renew());
        Assertions.assertEquals(ReservedResourceType.NET_APP_STORAGE, model.reservedResourceType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-18T07:56:25Z"), model.reviewDateTime());
        Assertions.assertEquals(InstanceFlexibility.OFF, model.reservedResourceProperties().instanceFlexibility());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ReservationOrderAliasResponseInner model
            = new ReservationOrderAliasResponseInner().withSku(new Sku().withName("de"))
                .withLocation("jzicwifsjt")
                .withDisplayName("fbishcbkha")
                .withBillingScopeId("g")
                .withTerm(Term.P3Y)
                .withBillingPlan(BillingPlan.P1M)
                .withAppliedScopeType(AppliedScopeType.SINGLE)
                .withAppliedScopeProperties(new AppliedScopeProperties().withTenantId("pwhonowkg")
                    .withManagementGroupId("wankixzbi")
                    .withSubscriptionId("eputtmrywnuzoqf")
                    .withResourceGroupId("yqzrnkcqvyxlw")
                    .withDisplayName("lsicohoqqnwv"))
                .withQuantity(759862878)
                .withRenew(true)
                .withReservedResourceType(ReservedResourceType.NET_APP_STORAGE)
                .withReviewDateTime(OffsetDateTime.parse("2021-11-18T07:56:25Z"))
                .withReservedResourceProperties(new ReservationOrderAliasResponsePropertiesReservedResourceProperties()
                    .withInstanceFlexibility(InstanceFlexibility.OFF));
        model = BinaryData.fromObject(model).toObject(ReservationOrderAliasResponseInner.class);
        Assertions.assertEquals("de", model.sku().name());
        Assertions.assertEquals("jzicwifsjt", model.location());
        Assertions.assertEquals("fbishcbkha", model.displayName());
        Assertions.assertEquals("g", model.billingScopeId());
        Assertions.assertEquals(Term.P3Y, model.term());
        Assertions.assertEquals(BillingPlan.P1M, model.billingPlan());
        Assertions.assertEquals(AppliedScopeType.SINGLE, model.appliedScopeType());
        Assertions.assertEquals("pwhonowkg", model.appliedScopeProperties().tenantId());
        Assertions.assertEquals("wankixzbi", model.appliedScopeProperties().managementGroupId());
        Assertions.assertEquals("eputtmrywnuzoqf", model.appliedScopeProperties().subscriptionId());
        Assertions.assertEquals("yqzrnkcqvyxlw", model.appliedScopeProperties().resourceGroupId());
        Assertions.assertEquals("lsicohoqqnwv", model.appliedScopeProperties().displayName());
        Assertions.assertEquals(759862878, model.quantity());
        Assertions.assertEquals(true, model.renew());
        Assertions.assertEquals(ReservedResourceType.NET_APP_STORAGE, model.reservedResourceType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-18T07:56:25Z"), model.reviewDateTime());
        Assertions.assertEquals(InstanceFlexibility.OFF, model.reservedResourceProperties().instanceFlexibility());
    }
}
