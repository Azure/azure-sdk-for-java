// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billingbenefits.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.billingbenefits.fluent.models.ReservationOrderAliasResponseProperties;
import com.azure.resourcemanager.billingbenefits.models.AppliedScopeProperties;
import com.azure.resourcemanager.billingbenefits.models.AppliedScopeType;
import com.azure.resourcemanager.billingbenefits.models.BillingPlan;
import com.azure.resourcemanager.billingbenefits.models.InstanceFlexibility;
import com.azure.resourcemanager.billingbenefits.models.ReservationOrderAliasResponsePropertiesReservedResourceProperties;
import com.azure.resourcemanager.billingbenefits.models.ReservedResourceType;
import com.azure.resourcemanager.billingbenefits.models.Term;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class ReservationOrderAliasResponsePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ReservationOrderAliasResponseProperties model = BinaryData.fromString(
            "{\"displayName\":\"senhwlrs\",\"reservationOrderId\":\"rzpwvlqdqgbiq\",\"provisioningState\":\"Cancelled\",\"billingScopeId\":\"kaet\",\"term\":\"P3Y\",\"billingPlan\":\"P1M\",\"appliedScopeType\":\"Shared\",\"appliedScopeProperties\":{\"tenantId\":\"snkymuctq\",\"managementGroupId\":\"fbebrjcxer\",\"subscriptionId\":\"wutttxfvjrbi\",\"resourceGroupId\":\"hxepcyvahfnlj\",\"displayName\":\"qxj\"},\"quantity\":1975532924,\"renew\":true,\"reservedResourceType\":\"VMwareCloudSimple\",\"reviewDateTime\":\"2021-07-19T09:21:05Z\",\"reservedResourceProperties\":{\"instanceFlexibility\":\"On\"}}")
            .toObject(ReservationOrderAliasResponseProperties.class);
        Assertions.assertEquals("senhwlrs", model.displayName());
        Assertions.assertEquals("kaet", model.billingScopeId());
        Assertions.assertEquals(Term.P3Y, model.term());
        Assertions.assertEquals(BillingPlan.P1M, model.billingPlan());
        Assertions.assertEquals(AppliedScopeType.SHARED, model.appliedScopeType());
        Assertions.assertEquals("snkymuctq", model.appliedScopeProperties().tenantId());
        Assertions.assertEquals("fbebrjcxer", model.appliedScopeProperties().managementGroupId());
        Assertions.assertEquals("wutttxfvjrbi", model.appliedScopeProperties().subscriptionId());
        Assertions.assertEquals("hxepcyvahfnlj", model.appliedScopeProperties().resourceGroupId());
        Assertions.assertEquals("qxj", model.appliedScopeProperties().displayName());
        Assertions.assertEquals(1975532924, model.quantity());
        Assertions.assertEquals(true, model.renew());
        Assertions.assertEquals(ReservedResourceType.VMWARE_CLOUD_SIMPLE, model.reservedResourceType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-19T09:21:05Z"), model.reviewDateTime());
        Assertions.assertEquals(InstanceFlexibility.ON, model.reservedResourceProperties().instanceFlexibility());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ReservationOrderAliasResponseProperties model
            = new ReservationOrderAliasResponseProperties().withDisplayName("senhwlrs")
                .withBillingScopeId("kaet")
                .withTerm(Term.P3Y)
                .withBillingPlan(BillingPlan.P1M)
                .withAppliedScopeType(AppliedScopeType.SHARED)
                .withAppliedScopeProperties(new AppliedScopeProperties().withTenantId("snkymuctq")
                    .withManagementGroupId("fbebrjcxer")
                    .withSubscriptionId("wutttxfvjrbi")
                    .withResourceGroupId("hxepcyvahfnlj")
                    .withDisplayName("qxj"))
                .withQuantity(1975532924)
                .withRenew(true)
                .withReservedResourceType(ReservedResourceType.VMWARE_CLOUD_SIMPLE)
                .withReviewDateTime(OffsetDateTime.parse("2021-07-19T09:21:05Z"))
                .withReservedResourceProperties(new ReservationOrderAliasResponsePropertiesReservedResourceProperties()
                    .withInstanceFlexibility(InstanceFlexibility.ON));
        model = BinaryData.fromObject(model).toObject(ReservationOrderAliasResponseProperties.class);
        Assertions.assertEquals("senhwlrs", model.displayName());
        Assertions.assertEquals("kaet", model.billingScopeId());
        Assertions.assertEquals(Term.P3Y, model.term());
        Assertions.assertEquals(BillingPlan.P1M, model.billingPlan());
        Assertions.assertEquals(AppliedScopeType.SHARED, model.appliedScopeType());
        Assertions.assertEquals("snkymuctq", model.appliedScopeProperties().tenantId());
        Assertions.assertEquals("fbebrjcxer", model.appliedScopeProperties().managementGroupId());
        Assertions.assertEquals("wutttxfvjrbi", model.appliedScopeProperties().subscriptionId());
        Assertions.assertEquals("hxepcyvahfnlj", model.appliedScopeProperties().resourceGroupId());
        Assertions.assertEquals("qxj", model.appliedScopeProperties().displayName());
        Assertions.assertEquals(1975532924, model.quantity());
        Assertions.assertEquals(true, model.renew());
        Assertions.assertEquals(ReservedResourceType.VMWARE_CLOUD_SIMPLE, model.reservedResourceType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-19T09:21:05Z"), model.reviewDateTime());
        Assertions.assertEquals(InstanceFlexibility.ON, model.reservedResourceProperties().instanceFlexibility());
    }
}
