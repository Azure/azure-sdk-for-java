// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.changeanalysis.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.changeanalysis.models.ChangeCategory;
import com.azure.resourcemanager.changeanalysis.models.ChangeProperties;
import com.azure.resourcemanager.changeanalysis.models.ChangeType;
import com.azure.resourcemanager.changeanalysis.models.Level;
import com.azure.resourcemanager.changeanalysis.models.PropertyChange;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ChangePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ChangeProperties model = BinaryData.fromString(
            "{\"resourceId\":\"wrlyxwjkcprb\",\"timeStamp\":\"2021-11-21T19:55:14Z\",\"initiatedByList\":[\"jvtbvpyss\",\"dnrujqguhmuouqfp\"],\"changeType\":\"Add\",\"propertyChanges\":[{\"changeType\":\"Update\",\"changeCategory\":\"System\",\"jsonPath\":\"nwui\",\"displayName\":\"a\",\"level\":\"Normal\",\"description\":\"izuckyfihrfidfvz\",\"oldValue\":\"zuhtymwisdkfthwx\",\"newValue\":\"t\",\"isDataMasked\":true},{\"changeType\":\"Add\",\"changeCategory\":\"System\",\"jsonPath\":\"mijcmmxdcufufs\",\"displayName\":\"ymzidn\",\"level\":\"Important\",\"description\":\"xtbzsgfyccsne\",\"oldValue\":\"dwzjeiach\",\"newValue\":\"osfln\",\"isDataMasked\":true}]}")
            .toObject(ChangeProperties.class);
        Assertions.assertEquals("wrlyxwjkcprb", model.resourceId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-21T19:55:14Z"), model.timestamp());
        Assertions.assertEquals("jvtbvpyss", model.initiatedByList().get(0));
        Assertions.assertEquals(ChangeType.ADD, model.changeType());
        Assertions.assertEquals(ChangeType.UPDATE, model.propertyChanges().get(0).changeType());
        Assertions.assertEquals(ChangeCategory.SYSTEM, model.propertyChanges().get(0).changeCategory());
        Assertions.assertEquals("nwui", model.propertyChanges().get(0).jsonPath());
        Assertions.assertEquals("a", model.propertyChanges().get(0).displayName());
        Assertions.assertEquals(Level.NORMAL, model.propertyChanges().get(0).level());
        Assertions.assertEquals("izuckyfihrfidfvz", model.propertyChanges().get(0).description());
        Assertions.assertEquals("zuhtymwisdkfthwx", model.propertyChanges().get(0).oldValue());
        Assertions.assertEquals("t", model.propertyChanges().get(0).newValue());
        Assertions.assertEquals(true, model.propertyChanges().get(0).isDataMasked());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ChangeProperties model = new ChangeProperties().withResourceId("wrlyxwjkcprb")
            .withTimestamp(OffsetDateTime.parse("2021-11-21T19:55:14Z"))
            .withInitiatedByList(Arrays.asList("jvtbvpyss", "dnrujqguhmuouqfp"))
            .withChangeType(ChangeType.ADD)
            .withPropertyChanges(Arrays.asList(
                new PropertyChange().withChangeType(ChangeType.UPDATE)
                    .withChangeCategory(ChangeCategory.SYSTEM)
                    .withJsonPath("nwui")
                    .withDisplayName("a")
                    .withLevel(Level.NORMAL)
                    .withDescription("izuckyfihrfidfvz")
                    .withOldValue("zuhtymwisdkfthwx")
                    .withNewValue("t")
                    .withIsDataMasked(true),
                new PropertyChange().withChangeType(ChangeType.ADD)
                    .withChangeCategory(ChangeCategory.SYSTEM)
                    .withJsonPath("mijcmmxdcufufs")
                    .withDisplayName("ymzidn")
                    .withLevel(Level.IMPORTANT)
                    .withDescription("xtbzsgfyccsne")
                    .withOldValue("dwzjeiach")
                    .withNewValue("osfln")
                    .withIsDataMasked(true)));
        model = BinaryData.fromObject(model).toObject(ChangeProperties.class);
        Assertions.assertEquals("wrlyxwjkcprb", model.resourceId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-21T19:55:14Z"), model.timestamp());
        Assertions.assertEquals("jvtbvpyss", model.initiatedByList().get(0));
        Assertions.assertEquals(ChangeType.ADD, model.changeType());
        Assertions.assertEquals(ChangeType.UPDATE, model.propertyChanges().get(0).changeType());
        Assertions.assertEquals(ChangeCategory.SYSTEM, model.propertyChanges().get(0).changeCategory());
        Assertions.assertEquals("nwui", model.propertyChanges().get(0).jsonPath());
        Assertions.assertEquals("a", model.propertyChanges().get(0).displayName());
        Assertions.assertEquals(Level.NORMAL, model.propertyChanges().get(0).level());
        Assertions.assertEquals("izuckyfihrfidfvz", model.propertyChanges().get(0).description());
        Assertions.assertEquals("zuhtymwisdkfthwx", model.propertyChanges().get(0).oldValue());
        Assertions.assertEquals("t", model.propertyChanges().get(0).newValue());
        Assertions.assertEquals(true, model.propertyChanges().get(0).isDataMasked());
    }
}
