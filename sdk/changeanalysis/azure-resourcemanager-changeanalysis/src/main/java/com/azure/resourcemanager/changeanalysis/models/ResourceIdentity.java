// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.changeanalysis.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.UUID;

/** The identity block returned by ARM resource that supports managed identity. */
@Fluent
public class ResourceIdentity {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ResourceIdentity.class);

    /*
     * The type of managed identity used. The type 'SystemAssigned,
     * UserAssigned' includes both an implicitly created identity and a set of
     * user-assigned identities. The type 'None' will remove any identities.
     */
    @JsonProperty(value = "type")
    private ManagedIdentityTypes type;

    /*
     * The principal id of the identity. This property will only be provided
     * for a system-assigned identity.
     */
    @JsonProperty(value = "principalId", access = JsonProperty.Access.WRITE_ONLY)
    private UUID principalId;

    /*
     * The tenant id associated with the resource's identity. This property
     * will only be provided for a system-assigned identity.
     */
    @JsonProperty(value = "tenantId", access = JsonProperty.Access.WRITE_ONLY)
    private UUID tenantId;

    /**
     * Get the type property: The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both
     * an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
     *
     * @return the type value.
     */
    public ManagedIdentityTypes type() {
        return this.type;
    }

    /**
     * Set the type property: The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both
     * an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
     *
     * @param type the type value to set.
     * @return the ResourceIdentity object itself.
     */
    public ResourceIdentity withType(ManagedIdentityTypes type) {
        this.type = type;
        return this;
    }

    /**
     * Get the principalId property: The principal id of the identity. This property will only be provided for a
     * system-assigned identity.
     *
     * @return the principalId value.
     */
    public UUID principalId() {
        return this.principalId;
    }

    /**
     * Get the tenantId property: The tenant id associated with the resource's identity. This property will only be
     * provided for a system-assigned identity.
     *
     * @return the tenantId value.
     */
    public UUID tenantId() {
        return this.tenantId;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
