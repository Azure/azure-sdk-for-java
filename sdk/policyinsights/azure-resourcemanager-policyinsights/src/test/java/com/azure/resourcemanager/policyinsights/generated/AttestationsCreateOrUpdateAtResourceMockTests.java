// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner;
import com.azure.resourcemanager.policyinsights.models.Attestation;
import com.azure.resourcemanager.policyinsights.models.AttestationEvidence;
import com.azure.resourcemanager.policyinsights.models.ComplianceState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AttestationsCreateOrUpdateAtResourceMockTests {
    @Test
    public void testCreateOrUpdateAtResource() throws Exception {
        String responseStr
            = "{\"properties\":{\"policyAssignmentId\":\"yqsokknpugzjwdiz\",\"policyDefinitionReferenceId\":\"jixiujzkc\",\"complianceState\":\"NonCompliant\",\"expiresOn\":\"2021-11-19T04:09:52Z\",\"owner\":\"sw\",\"comments\":\"ykkbxktxbbwl\",\"evidence\":[{\"description\":\"okn\",\"sourceUri\":\"qddlggbq\"},{\"description\":\"lgzubak\",\"sourceUri\":\"kvggcmfns\"}],\"provisioningState\":\"Succeeded\",\"lastComplianceStateChangeAt\":\"2021-11-24T01:08:11Z\",\"assessmentDate\":\"2021-01-02T07:57:26Z\",\"metadata\":\"datawewzlscgsme\"},\"id\":\"qvxgvohdb\",\"name\":\"hhxmoevvud\",\"type\":\"epfhgannvwx\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Attestation response = manager.attestations()
            .createOrUpdateAtResource("zkz", "xfexwacy",
                new AttestationInner().withPolicyAssignmentId("jmlxppdnd")
                    .withPolicyDefinitionReferenceId("fevuii")
                    .withComplianceState(ComplianceState.COMPLIANT)
                    .withExpiresOn(OffsetDateTime.parse("2021-05-28T15:14:31Z"))
                    .withOwner("cjy")
                    .withComments("dcizeqqfop")
                    .withEvidence(Arrays.asList(new AttestationEvidence().withDescription("m").withSourceUri("ds"),
                        new AttestationEvidence().withDescription("o").withSourceUri("lyo")))
                    .withAssessmentDate(OffsetDateTime.parse("2021-04-09T02:50:40Z"))
                    .withMetadata("datajzsvmaigb"),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("yqsokknpugzjwdiz", response.policyAssignmentId());
        Assertions.assertEquals("jixiujzkc", response.policyDefinitionReferenceId());
        Assertions.assertEquals(ComplianceState.NON_COMPLIANT, response.complianceState());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-19T04:09:52Z"), response.expiresOn());
        Assertions.assertEquals("sw", response.owner());
        Assertions.assertEquals("ykkbxktxbbwl", response.comments());
        Assertions.assertEquals("okn", response.evidence().get(0).description());
        Assertions.assertEquals("qddlggbq", response.evidence().get(0).sourceUri());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-02T07:57:26Z"), response.assessmentDate());
    }
}
