// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.Remediation;
import com.azure.resourcemanager.policyinsights.models.ResourceDiscoveryMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RemediationsListForManagementGroupMockTests {
    @Test
    public void testListForManagementGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"policyAssignmentId\":\"w\",\"policyDefinitionReferenceId\":\"uatbwbqamteuliy\",\"resourceDiscoveryMode\":\"ExistingNonCompliant\",\"provisioningState\":\"cvmwfauxxepmy\",\"createdOn\":\"2021-05-30T15:08:41Z\",\"lastUpdatedOn\":\"2020-12-30T15:03:35Z\",\"filters\":{\"locations\":[\"iciijqpkzfbojx\",\"mcsmyqwixvcp\"],\"resourceIds\":[\"wy\",\"zwofalick\",\"uoiqt\"]},\"deploymentStatus\":{\"totalDeployments\":947599262,\"successfulDeployments\":1704599538,\"failedDeployments\":384634481},\"statusMessage\":\"rwzawnvs\",\"correlationId\":\"fhzag\",\"resourceCount\":2116581743,\"parallelDeployments\":1729449606,\"failureThreshold\":{\"percentage\":78.60488}},\"id\":\"mwrzregzgyufutrw\",\"name\":\"weryekzk\",\"type\":\"hmeott\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Remediation> response = manager.remediations()
            .listForManagementGroup("r", 359262521, "btxjeaoqaqbzg", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("w", response.iterator().next().policyAssignmentId());
        Assertions.assertEquals("uatbwbqamteuliy", response.iterator().next().policyDefinitionReferenceId());
        Assertions.assertEquals(ResourceDiscoveryMode.EXISTING_NON_COMPLIANT,
            response.iterator().next().resourceDiscoveryMode());
        Assertions.assertEquals("iciijqpkzfbojx", response.iterator().next().filters().locations().get(0));
        Assertions.assertEquals("wy", response.iterator().next().filters().resourceIds().get(0));
        Assertions.assertEquals(2116581743, response.iterator().next().resourceCount());
        Assertions.assertEquals(1729449606, response.iterator().next().parallelDeployments());
        Assertions.assertEquals(78.60488F, response.iterator().next().failureThreshold().percentage());
    }
}
