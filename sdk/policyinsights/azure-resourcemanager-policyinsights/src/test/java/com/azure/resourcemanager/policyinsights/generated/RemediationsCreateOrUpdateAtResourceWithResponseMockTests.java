// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.fluent.models.RemediationInner;
import com.azure.resourcemanager.policyinsights.models.Remediation;
import com.azure.resourcemanager.policyinsights.models.RemediationFilters;
import com.azure.resourcemanager.policyinsights.models.RemediationPropertiesFailureThreshold;
import com.azure.resourcemanager.policyinsights.models.ResourceDiscoveryMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RemediationsCreateOrUpdateAtResourceWithResponseMockTests {
    @Test
    public void testCreateOrUpdateAtResourceWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"policyAssignmentId\":\"qswbqerzwx\",\"policyDefinitionReferenceId\":\"txtd\",\"resourceDiscoveryMode\":\"ReEvaluateCompliance\",\"provisioningState\":\"lbpktg\",\"createdOn\":\"2021-12-09T14:14:50Z\",\"lastUpdatedOn\":\"2021-05-30T19:44:42Z\",\"filters\":{\"locations\":[\"bewreswmowegmmut\",\"yxey\",\"uqi\"]},\"deploymentStatus\":{\"totalDeployments\":484460515,\"successfulDeployments\":1496207016,\"failedDeployments\":1701445122},\"statusMessage\":\"xlzdesygrijwa\",\"correlationId\":\"fanraybfu\",\"resourceCount\":14478784,\"parallelDeployments\":391461131,\"failureThreshold\":{\"percentage\":24.854511}},\"id\":\"grhydk\",\"name\":\"gywezskiec\",\"type\":\"f\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Remediation response = manager.remediations()
            .createOrUpdateAtResourceWithResponse("b", "h",
                new RemediationInner().withPolicyAssignmentId("ehpavawugiqjtiog")
                    .withPolicyDefinitionReferenceId("dminic")
                    .withResourceDiscoveryMode(ResourceDiscoveryMode.EXISTING_NON_COMPLIANT)
                    .withFilters(
                        new RemediationFilters().withLocations(Arrays.asList("czykmktpvw", "qcs", "hchkhufm", "qumq")))
                    .withResourceCount(1070293066)
                    .withParallelDeployments(1152899646)
                    .withFailureThreshold(new RemediationPropertiesFailureThreshold().withPercentage(24.413616F)),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("qswbqerzwx", response.policyAssignmentId());
        Assertions.assertEquals("txtd", response.policyDefinitionReferenceId());
        Assertions.assertEquals(ResourceDiscoveryMode.RE_EVALUATE_COMPLIANCE, response.resourceDiscoveryMode());
        Assertions.assertEquals("bewreswmowegmmut", response.filters().locations().get(0));
        Assertions.assertEquals(14478784, response.resourceCount());
        Assertions.assertEquals(391461131, response.parallelDeployments());
        Assertions.assertEquals(24.854511F, response.failureThreshold().percentage());
    }
}
