// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.ComponentPolicyStatesQueryResults;
import com.azure.resourcemanager.policyinsights.models.ComponentPolicyStatesResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ComponentPolicyStatesListQueryResultsForResourceGroupLevelPolicyAssignmentWithRespMockTests {
    @Test
    public void testListQueryResultsForResourceGroupLevelPolicyAssignmentWithResponse() throws Exception {
        String responseStr
            = "{\"@odata.context\":\"haahntofelfhpfi\",\"@odata.count\":1856017180,\"value\":[{\"@odata.id\":\"dfivsujybsr\",\"@odata.context\":\"zmrgtxdhmfppinmg\",\"timestamp\":\"2021-05-02T18:23:34Z\",\"componentId\":\"mkwtzgfragjhx\",\"componentType\":\"xlobkdbtqhv\",\"componentName\":\"niiqyholhjnskb\",\"resourceId\":\"icnq\",\"policyAssignmentId\":\"ct\",\"policyDefinitionId\":\"pblxkrkqgvxrkt\",\"subscriptionId\":\"jigcwtspanb\",\"resourceType\":\"asevc\",\"resourceLocation\":\"fp\",\"resourceGroup\":\"edyybruholaemwcg\",\"policyAssignmentName\":\"mrimaabsqql\",\"policyAssignmentOwner\":\"b\",\"policyAssignmentParameters\":\"ow\",\"policyAssignmentScope\":\"hdkmbjsmihrijezb\",\"policyDefinitionName\":\"jwfcz\",\"policyDefinitionAction\":\"kvb\",\"policyDefinitionCategory\":\"kbsvbwy\",\"policySetDefinitionId\":\"ygnbknhjgclxaxwc\",\"policySetDefinitionName\":\"asp\",\"policySetDefinitionOwner\":\"zkucszghdoaqipmn\",\"policySetDefinitionCategory\":\"lfrsbzrnmuv\",\"policySetDefinitionParameters\":\"pu\",\"policyDefinitionReferenceId\":\"ddtbfmekjcnginxd\",\"complianceState\":\"aoy\",\"policyEvaluationDetails\":{\"evaluatedExpressions\":[{}],\"reason\":\"yxzmx\"},\"policyDefinitionGroupNames\":[\"fxlttx\",\"qx\"],\"policyDefinitionVersion\":\"nzujsji\",\"policySetDefinitionVersion\":\"rpskcjhmmo\",\"policyAssignmentVersion\":\"nivdqtkyk\",\"\":{\"ptb\":\"datanlsfgnyscac\",\"y\":\"dataet\"}},{\"@odata.id\":\"xic\",\"@odata.context\":\"cvj\",\"timestamp\":\"2021-09-18T18:50:38Z\",\"componentId\":\"eoxmpzzw\",\"componentType\":\"drdvha\",\"componentName\":\"kx\",\"resourceId\":\"vz\",\"policyAssignmentId\":\"xmbrygmwibiosiq\",\"policyDefinitionId\":\"kqfdqwdrtx\",\"subscriptionId\":\"daglmrcok\",\"resourceType\":\"ert\",\"resourceLocation\":\"unzsiywhubym\",\"resourceGroup\":\"opikzebqnnfywtkq\",\"policyAssignmentName\":\"sdlkhcz\",\"policyAssignmentOwner\":\"pmgfjculojhhylx\",\"policyAssignmentParameters\":\"vfiyymot\",\"policyAssignmentScope\":\"bybwjmtftcvelnir\",\"policyDefinitionName\":\"kqnstpaqpibjgbvs\",\"policyDefinitionAction\":\"ehfxrttxbmsen\",\"policyDefinitionCategory\":\"fab\",\"policySetDefinitionId\":\"ama\",\"policySetDefinitionName\":\"ctcxs\",\"policySetDefinitionOwner\":\"bzdxmsynb\",\"policySetDefinitionCategory\":\"nnyufxuzm\",\"policySetDefinitionParameters\":\"zyq\",\"policyDefinitionReferenceId\":\"rnxhjtlxfikjk\",\"complianceState\":\"ravwwuasn\",\"policyEvaluationDetails\":{\"evaluatedExpressions\":[{},{},{}],\"reason\":\"trxboz\"},\"policyDefinitionGroupNames\":[\"cnwjzbqblxr\",\"w\"],\"policyDefinitionVersion\":\"svoqiza\",\"policySetDefinitionVersion\":\"sdso\",\"policyAssignmentVersion\":\"fhjxsawo\",\"\":{\"qkmwzrdqyoybmrno\":\"dataffhx\",\"qphkv\":\"dataocjnzdaiovrbhr\"}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ComponentPolicyStatesQueryResults response = manager.componentPolicyStates()
            .listQueryResultsForResourceGroupLevelPolicyAssignmentWithResponse("ntns", "xz", "jmka",
                ComponentPolicyStatesResource.LATEST, 909305126, "lazof", "exvtemasp",
                OffsetDateTime.parse("2021-10-27T08:51:18Z"), OffsetDateTime.parse("2021-05-30T13:00:18Z"), "ydscdkxwd",
                "wj", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("yxzmx", response.value().get(0).policyEvaluationDetails().reason());
    }
}
