// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.PolicyStatesSummaryResourceType;
import com.azure.resourcemanager.policyinsights.models.SummarizeResults;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PolicyStatesSummarizeForResourceGroupWithResponseMockTests {
    @Test
    public void testSummarizeForResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"@odata.context\":\"twtkvih\",\"@odata.count\":1629072439,\"value\":[{\"@odata.id\":\"oynguuzhwvl\",\"@odata.context\":\"p\",\"results\":{\"queryResultsUri\":\"jha\",\"nonCompliantResources\":1827454860,\"nonCompliantPolicies\":1474714310,\"resourceDetails\":[{},{},{}],\"policyDetails\":[{}],\"policyGroupDetails\":[{},{}]},\"policyAssignments\":[{\"policyAssignmentId\":\"ilscv\",\"policySetDefinitionId\":\"yeiihfymkou\",\"results\":{},\"policyDefinitions\":[{},{}],\"policyGroups\":[{},{},{}]},{\"policyAssignmentId\":\"ugc\",\"policySetDefinitionId\":\"zhogsmgbvmtdw\",\"results\":{},\"policyDefinitions\":[{},{}],\"policyGroups\":[{},{}]},{\"policyAssignmentId\":\"fveglabtvkb\",\"policySetDefinitionId\":\"znhtf\",\"results\":{},\"policyDefinitions\":[{}],\"policyGroups\":[{}]}]},{\"@odata.id\":\"hizpaczmuh\",\"@odata.context\":\"akznhokhoitwhr\",\"results\":{\"queryResultsUri\":\"mmazdnckid\",\"nonCompliantResources\":1692252451,\"nonCompliantPolicies\":1887571544,\"resourceDetails\":[{},{},{},{}],\"policyDetails\":[{},{}],\"policyGroupDetails\":[{},{},{}]},\"policyAssignments\":[{\"policyAssignmentId\":\"kikc\",\"policySetDefinitionId\":\"fhbssdpjeyoqxded\",\"results\":{},\"policyDefinitions\":[{},{},{}],\"policyGroups\":[{},{}]},{\"policyAssignmentId\":\"gxsur\",\"policySetDefinitionId\":\"qrshzzbgullcxiq\",\"results\":{},\"policyDefinitions\":[{},{},{}],\"policyGroups\":[{},{}]},{\"policyAssignmentId\":\"upnamglroui\",\"policySetDefinitionId\":\"mfivjqterd\",\"results\":{},\"policyDefinitions\":[{}],\"policyGroups\":[{},{}]}]}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        SummarizeResults response = manager.policyStates()
            .summarizeForResourceGroupWithResponse(PolicyStatesSummaryResourceType.LATEST, "aydhf", "zocxmtfshksnyzm",
                1491882688, OffsetDateTime.parse("2021-08-16T00:12:21Z"), OffsetDateTime.parse("2021-07-03T06:21:04Z"),
                "wbwmbnlslcefiq", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("jha", response.value().get(0).results().queryResultsUri());
        Assertions.assertEquals(1827454860, response.value().get(0).results().nonCompliantResources());
        Assertions.assertEquals(1474714310, response.value().get(0).results().nonCompliantPolicies());
        Assertions.assertEquals("ilscv", response.value().get(0).policyAssignments().get(0).policyAssignmentId());
        Assertions.assertEquals("yeiihfymkou",
            response.value().get(0).policyAssignments().get(0).policySetDefinitionId());
    }
}
