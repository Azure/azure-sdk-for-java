// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.policyinsights.models.ExpressionEvaluationDetails;
import com.azure.resourcemanager.policyinsights.models.IfNotExistsEvaluationDetails;
import com.azure.resourcemanager.policyinsights.models.PolicyEvaluationDetails;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PolicyEvaluationDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PolicyEvaluationDetails model = BinaryData.fromString(
            "{\"evaluatedExpressions\":[{\"result\":\"biwkojgcyzt\",\"expression\":\"mznbaeqphch\",\"expressionKind\":\"rn\",\"path\":\"x\",\"expressionValue\":\"datauwrykqgaifmvikl\",\"targetValue\":\"datadvk\",\"operator\":\"ejd\"}],\"ifNotExistsDetails\":{\"resourceId\":\"cvdsrhnj\",\"totalResources\":1028204807}}")
            .toObject(PolicyEvaluationDetails.class);
        Assertions.assertEquals("biwkojgcyzt", model.evaluatedExpressions().get(0).result());
        Assertions.assertEquals("mznbaeqphch", model.evaluatedExpressions().get(0).expression());
        Assertions.assertEquals("x", model.evaluatedExpressions().get(0).path());
        Assertions.assertEquals("ejd", model.evaluatedExpressions().get(0).operator());
        Assertions.assertEquals("cvdsrhnj", model.ifNotExistsDetails().resourceId());
        Assertions.assertEquals(1028204807, model.ifNotExistsDetails().totalResources());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PolicyEvaluationDetails model = new PolicyEvaluationDetails()
            .withEvaluatedExpressions(Arrays.asList(new ExpressionEvaluationDetails().withResult("biwkojgcyzt")
                .withExpression("mznbaeqphch")
                .withPath("x")
                .withExpressionValue("datauwrykqgaifmvikl")
                .withTargetValue("datadvk")
                .withOperator("ejd")))
            .withIfNotExistsDetails(
                new IfNotExistsEvaluationDetails().withResourceId("cvdsrhnj").withTotalResources(1028204807));
        model = BinaryData.fromObject(model).toObject(PolicyEvaluationDetails.class);
        Assertions.assertEquals("biwkojgcyzt", model.evaluatedExpressions().get(0).result());
        Assertions.assertEquals("mznbaeqphch", model.evaluatedExpressions().get(0).expression());
        Assertions.assertEquals("x", model.evaluatedExpressions().get(0).path());
        Assertions.assertEquals("ejd", model.evaluatedExpressions().get(0).operator());
        Assertions.assertEquals("cvdsrhnj", model.ifNotExistsDetails().resourceId());
        Assertions.assertEquals(1028204807, model.ifNotExistsDetails().totalResources());
    }
}
