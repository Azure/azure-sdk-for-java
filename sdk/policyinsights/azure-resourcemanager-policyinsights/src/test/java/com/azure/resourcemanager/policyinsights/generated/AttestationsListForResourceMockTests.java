// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.Attestation;
import com.azure.resourcemanager.policyinsights.models.ComplianceState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AttestationsListForResourceMockTests {
    @Test
    public void testListForResource() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"policyAssignmentId\":\"mi\",\"policyDefinitionReferenceId\":\"wqxungrobgwfms\",\"complianceState\":\"Compliant\",\"expiresOn\":\"2021-03-30T00:39:53Z\",\"owner\":\"wxm\",\"comments\":\"jowz\",\"evidence\":[{\"description\":\"rclbl\",\"sourceUri\":\"hpwachyeu\"},{\"description\":\"wmvwryvdi\",\"sourceUri\":\"ii\"},{\"description\":\"pruccwme\",\"sourceUri\":\"txsytrtexegwmrq\"}],\"provisioningState\":\"wi\",\"lastComplianceStateChangeAt\":\"2021-07-18T20:42:59Z\",\"assessmentDate\":\"2021-08-11T02:55:40Z\",\"metadata\":\"datajncindiloqkajw\"},\"id\":\"riarsbcl\",\"name\":\"anhz\",\"type\":\"knjxizbaxdy\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Attestation> response
            = manager.attestations().listForResource("mcreihu", 1838161114, "rnig", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("mi", response.iterator().next().policyAssignmentId());
        Assertions.assertEquals("wqxungrobgwfms", response.iterator().next().policyDefinitionReferenceId());
        Assertions.assertEquals(ComplianceState.COMPLIANT, response.iterator().next().complianceState());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-30T00:39:53Z"), response.iterator().next().expiresOn());
        Assertions.assertEquals("wxm", response.iterator().next().owner());
        Assertions.assertEquals("jowz", response.iterator().next().comments());
        Assertions.assertEquals("rclbl", response.iterator().next().evidence().get(0).description());
        Assertions.assertEquals("hpwachyeu", response.iterator().next().evidence().get(0).sourceUri());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-11T02:55:40Z"),
            response.iterator().next().assessmentDate());
    }
}
