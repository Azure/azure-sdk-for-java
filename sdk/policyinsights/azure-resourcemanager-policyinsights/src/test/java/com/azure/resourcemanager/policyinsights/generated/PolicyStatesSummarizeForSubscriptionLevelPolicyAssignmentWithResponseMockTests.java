// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.PolicyStatesSummaryResourceType;
import com.azure.resourcemanager.policyinsights.models.SummarizeResults;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PolicyStatesSummarizeForSubscriptionLevelPolicyAssignmentWithResponseMockTests {
    @Test
    public void testSummarizeForSubscriptionLevelPolicyAssignmentWithResponse() throws Exception {
        String responseStr
            = "{\"@odata.context\":\"hyhtmjodui\",\"@odata.count\":578702715,\"value\":[{\"@odata.id\":\"aryrvj\",\"@odata.context\":\"dezvjqw\",\"results\":{\"queryResultsUri\":\"yiyaxqvjweiwtczk\",\"nonCompliantResources\":1800673506,\"nonCompliantPolicies\":1247450795,\"resourceDetails\":[{}],\"policyDetails\":[{},{}],\"policyGroupDetails\":[{},{},{}]},\"policyAssignments\":[{\"policyAssignmentId\":\"rx\",\"policySetDefinitionId\":\"laetscflwtjdtlr\",\"results\":{},\"policyDefinitions\":[{}],\"policyGroups\":[{}]},{\"policyAssignmentId\":\"cuxd\",\"policySetDefinitionId\":\"c\",\"results\":{},\"policyDefinitions\":[{},{}],\"policyGroups\":[{}]}]},{\"@odata.id\":\"gcozzomehxlant\",\"@odata.context\":\"amlbiju\",\"results\":{\"queryResultsUri\":\"llczipvwdt\",\"nonCompliantResources\":2009311388,\"nonCompliantPolicies\":2005039139,\"resourceDetails\":[{},{},{}],\"policyDetails\":[{},{}],\"policyGroupDetails\":[{},{},{},{}]},\"policyAssignments\":[{\"policyAssignmentId\":\"kwx\",\"policySetDefinitionId\":\"uwxsuykznhrfgsl\",\"results\":{},\"policyDefinitions\":[{},{}],\"policyGroups\":[{},{}]},{\"policyAssignmentId\":\"f\",\"policySetDefinitionId\":\"huioaeoc\",\"results\":{},\"policyDefinitions\":[{},{}],\"policyGroups\":[{}]}]}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        SummarizeResults response = manager.policyStates()
            .summarizeForSubscriptionLevelPolicyAssignmentWithResponse(PolicyStatesSummaryResourceType.LATEST,
                "pbjceegvy", "e", 2055938611, OffsetDateTime.parse("2021-06-22T16:53:33Z"),
                OffsetDateTime.parse("2021-01-30T11:27:34Z"), "tnjillukk", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("yiyaxqvjweiwtczk", response.value().get(0).results().queryResultsUri());
        Assertions.assertEquals(1800673506, response.value().get(0).results().nonCompliantResources());
        Assertions.assertEquals(1247450795, response.value().get(0).results().nonCompliantPolicies());
        Assertions.assertEquals("rx", response.value().get(0).policyAssignments().get(0).policyAssignmentId());
        Assertions.assertEquals("laetscflwtjdtlr",
            response.value().get(0).policyAssignments().get(0).policySetDefinitionId());
    }
}
