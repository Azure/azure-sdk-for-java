// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.Remediation;
import com.azure.resourcemanager.policyinsights.models.ResourceDiscoveryMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RemediationsDeleteByResourceGroupWithResponseMockTests {
    @Test
    public void testDeleteWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"policyAssignmentId\":\"jzakzwjiqull\",\"policyDefinitionReferenceId\":\"bdmvrscmqerndbr\",\"resourceDiscoveryMode\":\"ExistingNonCompliant\",\"provisioningState\":\"fltfnnxr\",\"createdOn\":\"2021-05-03T14:15:18Z\",\"lastUpdatedOn\":\"2021-09-18T23:28:31Z\",\"filters\":{\"locations\":[\"fmu\",\"iiripfohykfkxbbc\",\"r\"],\"resourceIds\":[\"u\",\"gn\",\"izbeew\",\"iy\"]},\"deploymentStatus\":{\"totalDeployments\":976451778,\"successfulDeployments\":1487271947,\"failedDeployments\":1186764453},\"statusMessage\":\"srziuct\",\"correlationId\":\"gbdsuifrev\",\"resourceCount\":1631043780,\"parallelDeployments\":2017896407,\"failureThreshold\":{\"percentage\":51.67798}},\"id\":\"wqj\",\"name\":\"dghsy\",\"type\":\"arybjufptbjc\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Remediation response = manager.remediations()
            .deleteByResourceGroupWithResponse("abmvmsxbaevwjc", "kottlwuhvajmailf", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("jzakzwjiqull", response.policyAssignmentId());
        Assertions.assertEquals("bdmvrscmqerndbr", response.policyDefinitionReferenceId());
        Assertions.assertEquals(ResourceDiscoveryMode.EXISTING_NON_COMPLIANT, response.resourceDiscoveryMode());
        Assertions.assertEquals("fmu", response.filters().locations().get(0));
        Assertions.assertEquals("u", response.filters().resourceIds().get(0));
        Assertions.assertEquals(1631043780, response.resourceCount());
        Assertions.assertEquals(2017896407, response.parallelDeployments());
        Assertions.assertEquals(51.67798F, response.failureThreshold().percentage());
    }
}
