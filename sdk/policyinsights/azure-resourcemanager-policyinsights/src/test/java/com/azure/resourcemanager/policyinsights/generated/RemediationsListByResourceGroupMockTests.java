// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.Remediation;
import com.azure.resourcemanager.policyinsights.models.ResourceDiscoveryMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RemediationsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"policyAssignmentId\":\"fwwvuatbwbqam\",\"policyDefinitionReferenceId\":\"uliyslpkcv\",\"resourceDiscoveryMode\":\"ExistingNonCompliant\",\"provisioningState\":\"uxx\",\"createdOn\":\"2021-09-24T22:24:31Z\",\"lastUpdatedOn\":\"2021-03-24T05:24:04Z\",\"filters\":{\"locations\":[\"mcqmiciijqp\",\"zfboj\",\"jmcsmyqwixvcpwn\",\"wy\"]},\"deploymentStatus\":{\"totalDeployments\":1634731041,\"successfulDeployments\":47513011,\"failedDeployments\":318109218},\"statusMessage\":\"kduoiqtamtyvs\",\"correlationId\":\"xrwzawnvsbcf\",\"resourceCount\":1134702687,\"parallelDeployments\":268521669,\"failureThreshold\":{\"percentage\":71.2697}},\"id\":\"cvd\",\"name\":\"mwrzregzgyufutrw\",\"type\":\"weryekzk\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Remediation> response = manager.remediations()
            .listByResourceGroup("jb", 1116337002, "jeaoqaqbz", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("fwwvuatbwbqam", response.iterator().next().policyAssignmentId());
        Assertions.assertEquals("uliyslpkcv", response.iterator().next().policyDefinitionReferenceId());
        Assertions.assertEquals(ResourceDiscoveryMode.EXISTING_NON_COMPLIANT,
            response.iterator().next().resourceDiscoveryMode());
        Assertions.assertEquals("mcqmiciijqp", response.iterator().next().filters().locations().get(0));
        Assertions.assertEquals(1134702687, response.iterator().next().resourceCount());
        Assertions.assertEquals(268521669, response.iterator().next().parallelDeployments());
        Assertions.assertEquals(71.2697F, response.iterator().next().failureThreshold().percentage());
    }
}
