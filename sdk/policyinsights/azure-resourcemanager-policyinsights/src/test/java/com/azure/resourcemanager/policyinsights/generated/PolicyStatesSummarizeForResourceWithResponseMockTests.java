// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.PolicyStatesSummaryResourceType;
import com.azure.resourcemanager.policyinsights.models.SummarizeResults;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PolicyStatesSummarizeForResourceWithResponseMockTests {
    @Test
    public void testSummarizeForResourceWithResponse() throws Exception {
        String responseStr
            = "{\"@odata.context\":\"zpfkis\",\"@odata.count\":1821119693,\"value\":[{\"@odata.id\":\"saao\",\"@odata.context\":\"sgptotxjq\",\"results\":{\"queryResultsUri\":\"fcnlrtbfi\",\"nonCompliantResources\":265812091,\"nonCompliantPolicies\":1825571960,\"resourceDetails\":[{},{},{},{}],\"policyDetails\":[{},{},{},{}],\"policyGroupDetails\":[{},{},{}]},\"policyAssignments\":[{\"policyAssignmentId\":\"ktwieope\",\"policySetDefinitionId\":\"lxqdwr\",\"results\":{},\"policyDefinitions\":[{},{}],\"policyGroups\":[{}]}]},{\"@odata.id\":\"ibkgxyxyau\",\"@odata.context\":\"eddobmcnltm\",\"results\":{\"queryResultsUri\":\"kujsqycmm\",\"nonCompliantResources\":1529725022,\"nonCompliantPolicies\":489228428,\"resourceDetails\":[{},{},{}],\"policyDetails\":[{},{},{}],\"policyGroupDetails\":[{},{},{}]},\"policyAssignments\":[{\"policyAssignmentId\":\"ri\",\"policySetDefinitionId\":\"iwrycgnwplrrb\",\"results\":{},\"policyDefinitions\":[{},{},{}],\"policyGroups\":[{}]},{\"policyAssignmentId\":\"ibticuhqv\",\"policySetDefinitionId\":\"spbfsfeqbbewfc\",\"results\":{},\"policyDefinitions\":[{},{},{},{}],\"policyGroups\":[{},{},{},{}]},{\"policyAssignmentId\":\"mzrmtmvw\",\"policySetDefinitionId\":\"uweyyjshcyb\",\"results\":{},\"policyDefinitions\":[{},{},{}],\"policyGroups\":[{}]},{\"policyAssignmentId\":\"prcmvouujxdiik\",\"policySetDefinitionId\":\"xrezsvavlrxi\",\"results\":{},\"policyDefinitions\":[{},{},{},{}],\"policyGroups\":[{},{},{}]}]}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        SummarizeResults response = manager.policyStates()
            .summarizeForResourceWithResponse(PolicyStatesSummaryResourceType.LATEST, "twczf", 338271467,
                OffsetDateTime.parse("2021-11-02T02:06:22Z"), OffsetDateTime.parse("2021-07-17T06:27:52Z"),
                "hlcxpblalh", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("fcnlrtbfi", response.value().get(0).results().queryResultsUri());
        Assertions.assertEquals(265812091, response.value().get(0).results().nonCompliantResources());
        Assertions.assertEquals(1825571960, response.value().get(0).results().nonCompliantPolicies());
        Assertions.assertEquals("ktwieope", response.value().get(0).policyAssignments().get(0).policyAssignmentId());
        Assertions.assertEquals("lxqdwr", response.value().get(0).policyAssignments().get(0).policySetDefinitionId());
    }
}
