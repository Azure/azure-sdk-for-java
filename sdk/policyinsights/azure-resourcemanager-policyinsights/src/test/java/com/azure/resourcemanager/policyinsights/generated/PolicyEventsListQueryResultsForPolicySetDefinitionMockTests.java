// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.PolicyEvent;
import com.azure.resourcemanager.policyinsights.models.PolicyEventsResourceType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PolicyEventsListQueryResultsForPolicySetDefinitionMockTests {
    @Test
    public void testListQueryResultsForPolicySetDefinition() throws Exception {
        String responseStr
            = "{\"value\":[{\"@odata.id\":\"nttmbq\",\"@odata.context\":\"bzfivfok\",\"timestamp\":\"2021-11-03T11:56:42Z\",\"resourceId\":\"h\",\"policyAssignmentId\":\"agjfwyyrlhgenuze\",\"policyDefinitionId\":\"vkvebaqsz\",\"effectiveParameters\":\"rzl\",\"isCompliant\":true,\"subscriptionId\":\"qgmihzpimcqrhnxt\",\"resourceType\":\"nklogxsvtzarhzv\",\"resourceLocation\":\"sqktcmbjwz\",\"resourceGroup\":\"slpkybtg\",\"resourceTags\":\"kzpgaj\",\"policyAssignmentName\":\"jcemqbmfuvqar\",\"policyAssignmentOwner\":\"xuqreblu\",\"policyAssignmentParameters\":\"mbwxsfg\",\"policyAssignmentScope\":\"mbvx\",\"policyDefinitionName\":\"raokqkbudb\",\"policyDefinitionAction\":\"aokbavlyttaaknwf\",\"policyDefinitionCategory\":\"ebsmhpdujdigato\",\"policySetDefinitionId\":\"ksc\",\"policySetDefinitionName\":\"tnanqimwb\",\"policySetDefinitionOwner\":\"pdcldpka\",\"policySetDefinitionCategory\":\"snlaimoux\",\"policySetDefinitionParameters\":\"sqmu\",\"managementGroupIds\":\"fco\",\"policyDefinitionReferenceId\":\"icziuswswjrkb\",\"complianceState\":\"jhbtqq\",\"tenantId\":\"fs\",\"principalOid\":\"rfwb\",\"components\":[{\"id\":\"ogfuyzwvbhlim\",\"type\":\"qecroodl\",\"name\":\"cdrdaasaxxo\",\"timestamp\":\"2021-10-03T21:55:54Z\",\"tenantId\":\"kwiy\",\"principalOid\":\"zuko\",\"policyDefinitionAction\":\"nawnvz\",\"\":{\"ywsxvjabjqqaxu\":\"datak\"}},{\"id\":\"y\",\"type\":\"nudn\",\"name\":\"abhjx\",\"timestamp\":\"2021-11-20T20:32:51Z\",\"tenantId\":\"euipmpvksmitnsq\",\"principalOid\":\"l\",\"policyDefinitionAction\":\"lkrdpqgfhy\",\"\":{\"jajqmatxjt\":\"dataakkldgrcwfcmfcn\",\"pqagynoiprn\":\"dataelnzqgxxgfbbmt\"}}],\"\":{\"ryqxzxa\":\"datalin\"}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<PolicyEvent> response = manager.policyEvents()
            .listQueryResultsForPolicySetDefinition(PolicyEventsResourceType.DEFAULT, "zilmhivzkww", "ncknrzdajlsk",
                505895598, "tjxul", "eucyrth", OffsetDateTime.parse("2020-12-31T10:26:17Z"),
                OffsetDateTime.parse("2021-10-31T12:40:44Z"), "ehmcgcje", "n", "ehokamvfej",
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals(OffsetDateTime.parse("2021-11-03T11:56:42Z"), response.iterator().next().timestamp());
        Assertions.assertEquals("h", response.iterator().next().resourceId());
        Assertions.assertEquals("agjfwyyrlhgenuze", response.iterator().next().policyAssignmentId());
        Assertions.assertEquals("vkvebaqsz", response.iterator().next().policyDefinitionId());
        Assertions.assertEquals("rzl", response.iterator().next().effectiveParameters());
        Assertions.assertEquals(true, response.iterator().next().isCompliant());
        Assertions.assertEquals("qgmihzpimcqrhnxt", response.iterator().next().subscriptionId());
        Assertions.assertEquals("nklogxsvtzarhzv", response.iterator().next().resourceType());
        Assertions.assertEquals("sqktcmbjwz", response.iterator().next().resourceLocation());
        Assertions.assertEquals("slpkybtg", response.iterator().next().resourceGroup());
        Assertions.assertEquals("kzpgaj", response.iterator().next().resourceTags());
        Assertions.assertEquals("jcemqbmfuvqar", response.iterator().next().policyAssignmentName());
        Assertions.assertEquals("xuqreblu", response.iterator().next().policyAssignmentOwner());
        Assertions.assertEquals("mbwxsfg", response.iterator().next().policyAssignmentParameters());
        Assertions.assertEquals("mbvx", response.iterator().next().policyAssignmentScope());
        Assertions.assertEquals("raokqkbudb", response.iterator().next().policyDefinitionName());
        Assertions.assertEquals("aokbavlyttaaknwf", response.iterator().next().policyDefinitionAction());
        Assertions.assertEquals("ebsmhpdujdigato", response.iterator().next().policyDefinitionCategory());
        Assertions.assertEquals("ksc", response.iterator().next().policySetDefinitionId());
        Assertions.assertEquals("tnanqimwb", response.iterator().next().policySetDefinitionName());
        Assertions.assertEquals("pdcldpka", response.iterator().next().policySetDefinitionOwner());
        Assertions.assertEquals("snlaimoux", response.iterator().next().policySetDefinitionCategory());
        Assertions.assertEquals("sqmu", response.iterator().next().policySetDefinitionParameters());
        Assertions.assertEquals("fco", response.iterator().next().managementGroupIds());
        Assertions.assertEquals("icziuswswjrkb", response.iterator().next().policyDefinitionReferenceId());
        Assertions.assertEquals("jhbtqq", response.iterator().next().complianceState());
        Assertions.assertEquals("fs", response.iterator().next().tenantId());
        Assertions.assertEquals("rfwb", response.iterator().next().principalOid());
        Assertions.assertEquals("ogfuyzwvbhlim", response.iterator().next().components().get(0).id());
        Assertions.assertEquals("qecroodl", response.iterator().next().components().get(0).type());
        Assertions.assertEquals("cdrdaasaxxo", response.iterator().next().components().get(0).name());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-03T21:55:54Z"),
            response.iterator().next().components().get(0).timestamp());
        Assertions.assertEquals("kwiy", response.iterator().next().components().get(0).tenantId());
        Assertions.assertEquals("zuko", response.iterator().next().components().get(0).principalOid());
        Assertions.assertEquals("nawnvz", response.iterator().next().components().get(0).policyDefinitionAction());
    }
}
