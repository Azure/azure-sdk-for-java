// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.policyinsights.fluent.models.OperationsListResultsInner;
import com.azure.resourcemanager.policyinsights.models.Operation;
import com.azure.resourcemanager.policyinsights.models.OperationDisplay;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OperationsListResultsInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationsListResultsInner model = BinaryData.fromString(
            "{\"@odata.count\":635676325,\"value\":[{\"name\":\"oaguhic\",\"isDataAction\":false,\"display\":{\"provider\":\"stacsjvhrweftkwq\",\"resource\":\"pmvssehaep\",\"operation\":\"mcxtczhu\",\"description\":\"uknijduyye\"}},{\"name\":\"ydjfb\",\"isDataAction\":false,\"display\":{\"provider\":\"hulrtywikdmhla\",\"resource\":\"flgbhgau\",\"operation\":\"dixmxufrsryjq\",\"description\":\"kfnozoeoqbvj\"}}]}")
            .toObject(OperationsListResultsInner.class);
        Assertions.assertEquals("oaguhic", model.value().get(0).name());
        Assertions.assertFalse(model.value().get(0).isDataAction());
        Assertions.assertEquals("stacsjvhrweftkwq", model.value().get(0).display().provider());
        Assertions.assertEquals("pmvssehaep", model.value().get(0).display().resource());
        Assertions.assertEquals("mcxtczhu", model.value().get(0).display().operation());
        Assertions.assertEquals("uknijduyye", model.value().get(0).display().description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationsListResultsInner model = new OperationsListResultsInner().withValue(Arrays.asList(
            new Operation().withName("oaguhic")
                .withIsDataAction(false)
                .withDisplay(new OperationDisplay().withProvider("stacsjvhrweftkwq")
                    .withResource("pmvssehaep")
                    .withOperation("mcxtczhu")
                    .withDescription("uknijduyye")),
            new Operation().withName("ydjfb")
                .withIsDataAction(false)
                .withDisplay(new OperationDisplay().withProvider("hulrtywikdmhla")
                    .withResource("flgbhgau")
                    .withOperation("dixmxufrsryjq")
                    .withDescription("kfnozoeoqbvj"))));
        model = BinaryData.fromObject(model).toObject(OperationsListResultsInner.class);
        Assertions.assertEquals("oaguhic", model.value().get(0).name());
        Assertions.assertFalse(model.value().get(0).isDataAction());
        Assertions.assertEquals("stacsjvhrweftkwq", model.value().get(0).display().provider());
        Assertions.assertEquals("pmvssehaep", model.value().get(0).display().resource());
        Assertions.assertEquals("mcxtczhu", model.value().get(0).display().operation());
        Assertions.assertEquals("uknijduyye", model.value().get(0).display().description());
    }
}
