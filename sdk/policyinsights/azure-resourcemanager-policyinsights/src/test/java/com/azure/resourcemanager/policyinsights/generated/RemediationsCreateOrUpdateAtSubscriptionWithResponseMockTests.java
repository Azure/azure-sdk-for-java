// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.fluent.models.RemediationInner;
import com.azure.resourcemanager.policyinsights.models.Remediation;
import com.azure.resourcemanager.policyinsights.models.RemediationFilters;
import com.azure.resourcemanager.policyinsights.models.RemediationPropertiesFailureThreshold;
import com.azure.resourcemanager.policyinsights.models.ResourceDiscoveryMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RemediationsCreateOrUpdateAtSubscriptionWithResponseMockTests {
    @Test
    public void testCreateOrUpdateAtSubscriptionWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"policyAssignmentId\":\"jtlkexaonwivkcqh\",\"policyDefinitionReferenceId\":\"hxknlccrmmkyupi\",\"resourceDiscoveryMode\":\"ReEvaluateCompliance\",\"provisioningState\":\"qjfkakfqfrkemyi\",\"createdOn\":\"2021-07-08T21:41:49Z\",\"lastUpdatedOn\":\"2021-05-28T21:56:37Z\",\"filters\":{\"locations\":[\"cowvfdjkp\"]},\"deploymentStatus\":{\"totalDeployments\":1315471850,\"successfulDeployments\":315494735,\"failedDeployments\":249152069},\"statusMessage\":\"mgzvyfi\",\"correlationId\":\"kzuqnwsith\",\"resourceCount\":1822992192,\"parallelDeployments\":1576947787,\"failureThreshold\":{\"percentage\":20.33016}},\"id\":\"qwqul\",\"name\":\"utrjbhxyk\",\"type\":\"hyqezvqq\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Remediation response = manager.remediations()
            .createOrUpdateAtSubscriptionWithResponse("sofpltd", new RemediationInner().withPolicyAssignmentId("irrhv")
                .withPolicyDefinitionReferenceId("nracw")
                .withResourceDiscoveryMode(ResourceDiscoveryMode.RE_EVALUATE_COMPLIANCE)
                .withFilters(
                    new RemediationFilters().withLocations(Arrays.asList("dawsigrbjb", "sjybvitv", "kjyaznumtg", "m")))
                .withResourceCount(80317823)
                .withParallelDeployments(2097899264)
                .withFailureThreshold(new RemediationPropertiesFailureThreshold().withPercentage(52.852177F)),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("jtlkexaonwivkcqh", response.policyAssignmentId());
        Assertions.assertEquals("hxknlccrmmkyupi", response.policyDefinitionReferenceId());
        Assertions.assertEquals(ResourceDiscoveryMode.RE_EVALUATE_COMPLIANCE, response.resourceDiscoveryMode());
        Assertions.assertEquals("cowvfdjkp", response.filters().locations().get(0));
        Assertions.assertEquals(1822992192, response.resourceCount());
        Assertions.assertEquals(1576947787, response.parallelDeployments());
        Assertions.assertEquals(20.33016F, response.failureThreshold().percentage());
    }
}
