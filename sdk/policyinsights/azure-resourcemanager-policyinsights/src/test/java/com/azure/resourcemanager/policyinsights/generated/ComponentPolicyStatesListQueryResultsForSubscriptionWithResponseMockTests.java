// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.ComponentPolicyStatesQueryResults;
import com.azure.resourcemanager.policyinsights.models.ComponentPolicyStatesResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ComponentPolicyStatesListQueryResultsForSubscriptionWithResponseMockTests {
    @Test
    public void testListQueryResultsForSubscriptionWithResponse() throws Exception {
        String responseStr
            = "{\"@odata.context\":\"spmrjct\",\"@odata.count\":983441757,\"value\":[{\"@odata.id\":\"ebuhsxrznmg\",\"@odata.context\":\"al\",\"timestamp\":\"2021-01-24T10:14:46Z\",\"componentId\":\"hefr\",\"componentType\":\"s\",\"componentName\":\"erbgpxeb\",\"resourceId\":\"udcaytujrax\",\"policyAssignmentId\":\"pryj\",\"policyDefinitionId\":\"tnsewou\",\"subscriptionId\":\"yms\",\"resourceType\":\"yljurkeposehqqyl\",\"resourceLocation\":\"ctwjwdsdlzm\",\"resourceGroup\":\"erxxxoteehkhowgo\",\"policyAssignmentName\":\"vhxowpcbapnpxra\",\"policyAssignmentOwner\":\"wbmpspfeylqloc\",\"policyAssignmentParameters\":\"ujexayglxrk\",\"policyAssignmentScope\":\"nmzpas\",\"policyDefinitionName\":\"vxjfiuofpieidzlv\",\"policyDefinitionAction\":\"qywjopa\",\"policyDefinitionCategory\":\"yhydvikmfn\",\"policySetDefinitionId\":\"millxgjs\",\"policySetDefinitionName\":\"zwgsoriobije\",\"policySetDefinitionOwner\":\"dye\",\"policySetDefinitionCategory\":\"nhbokayrgwybrio\",\"policySetDefinitionParameters\":\"weoftnorw\",\"policyDefinitionReferenceId\":\"gsioc\",\"complianceState\":\"kmv\",\"policyEvaluationDetails\":{\"evaluatedExpressions\":[{},{},{},{}],\"reason\":\"zfffhtjnwo\"},\"policyDefinitionGroupNames\":[\"fjxtvlxxzqfc\",\"rr\"],\"policyDefinitionVersion\":\"mxeezwyh\",\"policySetDefinitionVersion\":\"bjiqegmxdbsoh\",\"policyAssignmentVersion\":\"hpyvdkgdet\",\"\":{\"ekwuyckyvn\":\"datacanzb\",\"ffiwjbctvbp\":\"datansm\",\"scsl\":\"dataujqjtotdxp\",\"uxidhhxomilddxj\":\"datawuusiecktybh\"}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ComponentPolicyStatesQueryResults response = manager.componentPolicyStates()
            .listQueryResultsForSubscriptionWithResponse("zadi", ComponentPolicyStatesResource.LATEST, 341506334,
                "llaslkskhjqjpv", "aihxjtgzgtaiywbq", OffsetDateTime.parse("2021-12-08T05:26:26Z"),
                OffsetDateTime.parse("2021-02-28T00:16:49Z"), "igbsfsgsa", "nwldfmhljq",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("zfffhtjnwo", response.value().get(0).policyEvaluationDetails().reason());
    }
}
