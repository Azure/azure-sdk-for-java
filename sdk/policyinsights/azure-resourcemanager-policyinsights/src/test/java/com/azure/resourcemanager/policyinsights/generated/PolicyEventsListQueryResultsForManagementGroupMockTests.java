// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.PolicyEvent;
import com.azure.resourcemanager.policyinsights.models.PolicyEventsResourceType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PolicyEventsListQueryResultsForManagementGroupMockTests {
    @Test
    public void testListQueryResultsForManagementGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"@odata.id\":\"kybtglwkzpgajsqj\",\"@odata.context\":\"mqbmfuvqarwz\",\"timestamp\":\"2021-06-28T19:41:36Z\",\"resourceId\":\"ebluimmbwx\",\"policyAssignmentId\":\"gtdmbvx\",\"policyDefinitionId\":\"raokqkbudb\",\"effectiveParameters\":\"aokbavlyttaaknwf\",\"isCompliant\":true,\"subscriptionId\":\"sm\",\"resourceType\":\"dujdigatoleksc\",\"resourceLocation\":\"tnanqimwb\",\"resourceGroup\":\"pdcldpka\",\"resourceTags\":\"snlaimoux\",\"policyAssignmentName\":\"sqmu\",\"policyAssignmentOwner\":\"fco\",\"policyAssignmentParameters\":\"icziuswswjrkb\",\"policyAssignmentScope\":\"jhbtqq\",\"policyDefinitionName\":\"fs\",\"policyDefinitionAction\":\"rfwb\",\"policyDefinitionCategory\":\"qvogfuyz\",\"policySetDefinitionId\":\"bhli\",\"policySetDefinitionName\":\"yqe\",\"policySetDefinitionOwner\":\"ood\",\"policySetDefinitionCategory\":\"kcdrdaasaxxobsm\",\"policySetDefinitionParameters\":\"wiyjvzuko\",\"managementGroupIds\":\"nawnvz\",\"policyDefinitionReferenceId\":\"n\",\"complianceState\":\"ywsxvjabjqqaxu\",\"tenantId\":\"y\",\"principalOid\":\"nudn\",\"components\":[{\"id\":\"hjxwxq\",\"type\":\"uipmpvks\",\"name\":\"tnsqxtlt\",\"timestamp\":\"2021-05-11T11:04:19Z\",\"tenantId\":\"dpqgfhyrfr\",\"principalOid\":\"kldgrcwfcmfc\",\"policyDefinitionAction\":\"jajqmatxjt\",\"gynoiprnzcali\":\"datanzqgxxgfbbmtlpq\"},{\"id\":\"ryqxzxa\",\"type\":\"ibmq\",\"name\":\"iymqr\",\"timestamp\":\"2021-10-20T00:52:12Z\",\"tenantId\":\"hfupetasvvoqsbpk\",\"principalOid\":\"anfkgxsyaowuzow\",\"policyDefinitionAction\":\"ohdkcprgukx\",\"hlutixmqrudjizc\":\"dataio\",\"mcrunfhiucn\":\"dataf\",\"dkyzbfvxov\":\"datafbcpaqktkrumzu\",\"hyhlwcjsqg\":\"datakxiuxqggvqr\"}],\"euqlsdxeqztv\":\"dataffbxrqrkij\",\"wwa\":\"datawmwwmjswen\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<PolicyEvent> response = manager.policyEvents()
            .listQueryResultsForManagementGroup(PolicyEventsResourceType.DEFAULT, "rh", 2027408555, "t", "inklogxs",
                OffsetDateTime.parse("2021-11-02T06:06:23Z"), OffsetDateTime.parse("2021-12-01T08:10:09Z"), "arhzv",
                "nsqktc", "bjwzzos", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(OffsetDateTime.parse("2021-06-28T19:41:36Z"), response.iterator().next().timestamp());
        Assertions.assertEquals("ebluimmbwx", response.iterator().next().resourceId());
        Assertions.assertEquals("gtdmbvx", response.iterator().next().policyAssignmentId());
        Assertions.assertEquals("raokqkbudb", response.iterator().next().policyDefinitionId());
        Assertions.assertEquals("aokbavlyttaaknwf", response.iterator().next().effectiveParameters());
        Assertions.assertTrue(response.iterator().next().isCompliant());
        Assertions.assertEquals("sm", response.iterator().next().subscriptionId());
        Assertions.assertEquals("dujdigatoleksc", response.iterator().next().resourceType());
        Assertions.assertEquals("tnanqimwb", response.iterator().next().resourceLocation());
        Assertions.assertEquals("pdcldpka", response.iterator().next().resourceGroup());
        Assertions.assertEquals("snlaimoux", response.iterator().next().resourceTags());
        Assertions.assertEquals("sqmu", response.iterator().next().policyAssignmentName());
        Assertions.assertEquals("fco", response.iterator().next().policyAssignmentOwner());
        Assertions.assertEquals("icziuswswjrkb", response.iterator().next().policyAssignmentParameters());
        Assertions.assertEquals("jhbtqq", response.iterator().next().policyAssignmentScope());
        Assertions.assertEquals("fs", response.iterator().next().policyDefinitionName());
        Assertions.assertEquals("rfwb", response.iterator().next().policyDefinitionAction());
        Assertions.assertEquals("qvogfuyz", response.iterator().next().policyDefinitionCategory());
        Assertions.assertEquals("bhli", response.iterator().next().policySetDefinitionId());
        Assertions.assertEquals("yqe", response.iterator().next().policySetDefinitionName());
        Assertions.assertEquals("ood", response.iterator().next().policySetDefinitionOwner());
        Assertions.assertEquals("kcdrdaasaxxobsm", response.iterator().next().policySetDefinitionCategory());
        Assertions.assertEquals("wiyjvzuko", response.iterator().next().policySetDefinitionParameters());
        Assertions.assertEquals("nawnvz", response.iterator().next().managementGroupIds());
        Assertions.assertEquals("n", response.iterator().next().policyDefinitionReferenceId());
        Assertions.assertEquals("ywsxvjabjqqaxu", response.iterator().next().complianceState());
        Assertions.assertEquals("y", response.iterator().next().tenantId());
        Assertions.assertEquals("nudn", response.iterator().next().principalOid());
        Assertions.assertEquals("hjxwxq", response.iterator().next().components().get(0).id());
        Assertions.assertEquals("uipmpvks", response.iterator().next().components().get(0).type());
        Assertions.assertEquals("tnsqxtlt", response.iterator().next().components().get(0).name());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-11T11:04:19Z"),
            response.iterator().next().components().get(0).timestamp());
        Assertions.assertEquals("dpqgfhyrfr", response.iterator().next().components().get(0).tenantId());
        Assertions.assertEquals("kldgrcwfcmfc", response.iterator().next().components().get(0).principalOid());
        Assertions.assertEquals("jajqmatxjt", response.iterator().next().components().get(0).policyDefinitionAction());
    }
}
