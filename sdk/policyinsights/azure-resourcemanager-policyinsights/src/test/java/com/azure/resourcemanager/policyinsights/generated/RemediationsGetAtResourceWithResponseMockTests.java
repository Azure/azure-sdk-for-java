// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.Remediation;
import com.azure.resourcemanager.policyinsights.models.ResourceDiscoveryMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RemediationsGetAtResourceWithResponseMockTests {
    @Test
    public void testGetAtResourceWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"policyAssignmentId\":\"dnqtoqxjhqx\",\"policyDefinitionReferenceId\":\"qhtkbt\",\"resourceDiscoveryMode\":\"ExistingNonCompliant\",\"provisioningState\":\"ngldmbiipsn\",\"createdOn\":\"2021-08-24T08:34:30Z\",\"lastUpdatedOn\":\"2021-07-19T03:26:47Z\",\"filters\":{\"locations\":[\"xhhllxricct\",\"wmuqqoajxeiygle\"],\"resourceIds\":[\"vaexh\",\"ctrceqnkbr\",\"pobe\"]},\"deploymentStatus\":{\"totalDeployments\":329964985,\"successfulDeployments\":1092481539,\"failedDeployments\":424664268},\"statusMessage\":\"umepjpbibn\",\"correlationId\":\"phepifexleqirc\",\"resourceCount\":657869906,\"parallelDeployments\":1285068666,\"failureThreshold\":{\"percentage\":39.235188}},\"id\":\"vrpjlvczuodacp\",\"name\":\"nettepdjxqeskoy\",\"type\":\"uiylpc\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Remediation response = manager.remediations()
            .getAtResourceWithResponse("uavkrmukm", "jmkxettcslojf", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("dnqtoqxjhqx", response.policyAssignmentId());
        Assertions.assertEquals("qhtkbt", response.policyDefinitionReferenceId());
        Assertions.assertEquals(ResourceDiscoveryMode.EXISTING_NON_COMPLIANT, response.resourceDiscoveryMode());
        Assertions.assertEquals("xhhllxricct", response.filters().locations().get(0));
        Assertions.assertEquals("vaexh", response.filters().resourceIds().get(0));
        Assertions.assertEquals(657869906, response.resourceCount());
        Assertions.assertEquals(1285068666, response.parallelDeployments());
        Assertions.assertEquals(39.235188F, response.failureThreshold().percentage());
    }
}
