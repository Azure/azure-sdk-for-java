// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.Remediation;
import com.azure.resourcemanager.policyinsights.models.ResourceDiscoveryMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RemediationsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"policyAssignmentId\":\"ah\",\"policyDefinitionReferenceId\":\"xalybxawoijpo\",\"resourceDiscoveryMode\":\"ReEvaluateCompliance\",\"provisioningState\":\"xpkk\",\"createdOn\":\"2021-05-21T17:48:23Z\",\"lastUpdatedOn\":\"2021-12-03T11:18:29Z\",\"filters\":{\"locations\":[\"ykincnremehl\",\"izhceumoqodkadp\"],\"resourceIds\":[\"bngqladywrx\",\"hydt\",\"uvvadswzsnu\"]},\"deploymentStatus\":{\"totalDeployments\":1352834601,\"successfulDeployments\":658051997,\"failedDeployments\":1037982388},\"statusMessage\":\"hlxlnwyrmou\",\"correlationId\":\"lgmokzkl\",\"resourceCount\":2037693383,\"parallelDeployments\":390070308,\"failureThreshold\":{\"percentage\":71.6638}},\"id\":\"fmvlihcvjdrqc\",\"name\":\"jidhftu\",\"type\":\"vhdxlwyo\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Remediation> response
            = manager.remediations().list(835601294, "makli", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ah", response.iterator().next().policyAssignmentId());
        Assertions.assertEquals("xalybxawoijpo", response.iterator().next().policyDefinitionReferenceId());
        Assertions.assertEquals(ResourceDiscoveryMode.RE_EVALUATE_COMPLIANCE,
            response.iterator().next().resourceDiscoveryMode());
        Assertions.assertEquals("ykincnremehl", response.iterator().next().filters().locations().get(0));
        Assertions.assertEquals("bngqladywrx", response.iterator().next().filters().resourceIds().get(0));
        Assertions.assertEquals(2037693383, response.iterator().next().resourceCount());
        Assertions.assertEquals(390070308, response.iterator().next().parallelDeployments());
        Assertions.assertEquals(71.6638F, response.iterator().next().failureThreshold().percentage());
    }
}
