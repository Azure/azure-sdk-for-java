// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.CheckRestrictionsRequest;
import com.azure.resourcemanager.policyinsights.models.CheckRestrictionsResourceDetails;
import com.azure.resourcemanager.policyinsights.models.CheckRestrictionsResult;
import com.azure.resourcemanager.policyinsights.models.PendingField;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PolicyRestrictionsCheckAtResourceGroupScopeWithResponseMockTests {
    @Test
    public void testCheckAtResourceGroupScopeWithResponse() throws Exception {
        String responseStr
            = "{\"fieldRestrictions\":[{\"field\":\"oyfxxkwykuqdndx\",\"restrictions\":[{\"result\":\"Audit\",\"defaultValue\":\"gapvdgtfpeerscdx\",\"values\":[\"njrcuf\"],\"policy\":{},\"policyEffect\":\"acnrgfdtncmspsan\",\"reason\":\"meub\"}]},{\"field\":\"iqmlfvhlqcskkqj\",\"restrictions\":[{\"result\":\"Required\",\"defaultValue\":\"ipuugkwdrqmr\",\"values\":[\"uuonjkkxukguehvv\",\"xjoegcjojlleuidp\",\"tonvhgnhtmeplhb\"],\"policy\":{},\"policyEffect\":\"apmumm\",\"reason\":\"vavucg\"}]},{\"field\":\"ua\",\"restrictions\":[{\"result\":\"Required\",\"defaultValue\":\"fzhrchx\",\"values\":[\"zdmh\",\"wlvi\"],\"policy\":{},\"policyEffect\":\"xmlitqdsjip\",\"reason\":\"iscotyx\"}]},{\"field\":\"iifef\",\"restrictions\":[{\"result\":\"Deny\",\"defaultValue\":\"qoemwsi\",\"values\":[\"ilwdqmqfy\",\"eotmf\",\"lkdlgwgna\"],\"policy\":{},\"policyEffect\":\"u\",\"reason\":\"uyuafixlxicw\"}]}],\"contentEvaluationResult\":{\"policyEvaluations\":[{\"policyInfo\":{\"policyDefinitionId\":\"fmfzcfasfodropa\",\"policySetDefinitionId\":\"ngtwyuskwgq\",\"policyDefinitionReferenceId\":\"taumd\",\"policyAssignmentId\":\"jlvkrkegtyczupp\"},\"evaluationResult\":\"xlzmiyddee\",\"evaluationDetails\":{\"evaluatedExpressions\":[{}],\"ifNotExistsDetails\":{},\"reason\":\"mhvsexduetba\"},\"effectDetails\":{\"policyEffect\":\"zewxtrlqbpxy\"}},{\"policyInfo\":{\"policyDefinitionId\":\"jpir\",\"policySetDefinitionId\":\"xvb\",\"policyDefinitionReferenceId\":\"wh\",\"policyAssignmentId\":\"gbth\"},\"evaluationResult\":\"ritjbu\",\"evaluationDetails\":{\"evaluatedExpressions\":[{},{},{}],\"ifNotExistsDetails\":{},\"reason\":\"ozfvualjt\"},\"effectDetails\":{\"policyEffect\":\"vsdwsngkrfihscj\"}}]}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        CheckRestrictionsResult response = manager.policyRestrictions()
            .checkAtResourceGroupScopeWithResponse("tlpd",
                new CheckRestrictionsRequest()
                    .withResourceDetails(new CheckRestrictionsResourceDetails().withResourceContent("databfm")
                        .withApiVersion("ieat")
                        .withScope("jrnm"))
                    .withPendingFields(Arrays.asList(new PendingField().withField("qplgtkihonikz")
                        .withValues(Arrays.asList("f", "f", "ilzfbpnto", "kensckh"))))
                    .withIncludeAuditEffect(false),
                com.azure.core.util.Context.NONE)
            .getValue();

    }
}
