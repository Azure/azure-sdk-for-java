// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.CheckRestrictionsRequest;
import com.azure.resourcemanager.policyinsights.models.CheckRestrictionsResourceDetails;
import com.azure.resourcemanager.policyinsights.models.CheckRestrictionsResult;
import com.azure.resourcemanager.policyinsights.models.PendingField;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PolicyRestrictionsCheckAtResourceGroupScopeWithResponseMockTests {
    @Test
    public void testCheckAtResourceGroupScopeWithResponse() throws Exception {
        String responseStr
            = "{\"fieldRestrictions\":[{\"field\":\"vatlzmgsc\",\"restrictions\":[{\"result\":\"Removed\",\"defaultValue\":\"kkzovlzdm\",\"values\":[\"fwsx\",\"fo\",\"uworimmov\"],\"policy\":{}}]},{\"field\":\"ehkkmvhzfovany\",\"restrictions\":[{\"result\":\"Removed\",\"defaultValue\":\"gelg\",\"values\":[\"ikfyaqandm\",\"mnqoqjum\",\"vsfbp\",\"vzopaxmfmvsm\"],\"policy\":{}}]},{\"field\":\"xfaxdtnq\",\"restrictions\":[{\"result\":\"Required\",\"defaultValue\":\"roiauesugmo\",\"values\":[\"jy\",\"boel\"],\"policy\":{}}]}],\"contentEvaluationResult\":{\"policyEvaluations\":[{\"policyInfo\":{\"policyDefinitionId\":\"dsiuorin\",\"policySetDefinitionId\":\"cedpksriwmmtmqrx\",\"policyDefinitionReferenceId\":\"qvvyczyay\",\"policyAssignmentId\":\"tg\"},\"evaluationResult\":\"xiqahr\",\"evaluationDetails\":{\"evaluatedExpressions\":[{},{}],\"ifNotExistsDetails\":{}}},{\"policyInfo\":{\"policyDefinitionId\":\"plnupoyryef\",\"policySetDefinitionId\":\"wovy\",\"policyDefinitionReferenceId\":\"xlnomfpbjcee\",\"policyAssignmentId\":\"yieztkutnjil\"},\"evaluationResult\":\"kkreh\",\"evaluationDetails\":{\"evaluatedExpressions\":[{},{}],\"ifNotExistsDetails\":{}}},{\"policyInfo\":{\"policyDefinitionId\":\"uif\",\"policySetDefinitionId\":\"lxfary\",\"policyDefinitionReferenceId\":\"jlgdez\",\"policyAssignmentId\":\"qwahoy\"},\"evaluationResult\":\"axqvjweiwtczkddn\",\"evaluationDetails\":{\"evaluatedExpressions\":[{}],\"ifNotExistsDetails\":{}}},{\"policyInfo\":{\"policyDefinitionId\":\"bmdqrxyglae\",\"policySetDefinitionId\":\"cflwtjdtlr\",\"policyDefinitionReferenceId\":\"fooy\",\"policyAssignmentId\":\"uxdtzcq\"},\"evaluationResult\":\"sdudgcoz\",\"evaluationDetails\":{\"evaluatedExpressions\":[{},{},{},{}],\"ifNotExistsDetails\":{}}}]}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        CheckRestrictionsResult response = manager.policyRestrictions()
            .checkAtResourceGroupScopeWithResponse("qfcbuul",
                new CheckRestrictionsRequest()
                    .withResourceDetails(new CheckRestrictionsResourceDetails().withResourceContent("datayuf")
                        .withApiVersion("jfshtujcyo")
                        .withScope("gimwdcsklkqnqv"))
                    .withPendingFields(Arrays.asList(new PendingField().withField("nmbzmecuy")
                        .withValues(Arrays.asList("imb", "ayspzvriet", "fphmdzxplg")))),
                com.azure.core.util.Context.NONE)
            .getValue();

    }
}
