// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.ComponentPolicyStatesQueryResults;
import com.azure.resourcemanager.policyinsights.models.ComponentPolicyStatesResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ComponentPolicyStatesListQueryResultsForPolicyDefinitionWithResponseMockTests {
    @Test
    public void testListQueryResultsForPolicyDefinitionWithResponse() throws Exception {
        String responseStr
            = "{\"@odata.context\":\"fctwra\",\"@odata.count\":1670170508,\"value\":[{\"@odata.id\":\"qyvzesipiysnjq\",\"@odata.context\":\"waadc\",\"timestamp\":\"2021-04-24T09:32:09Z\",\"componentId\":\"a\",\"componentType\":\"ndtsewkaupw\",\"componentName\":\"zyckremgjl\",\"resourceId\":\"vdorsirx\",\"policyAssignmentId\":\"yrkqa\",\"policyDefinitionId\":\"fajfreprfvmki\",\"subscriptionId\":\"teyrqshi\",\"resourceType\":\"cejo\",\"resourceLocation\":\"lblfs\",\"resourceGroup\":\"r\",\"policyAssignmentName\":\"spimtcvvf\",\"policyAssignmentOwner\":\"dytzf\",\"policyAssignmentParameters\":\"xizhqikmgo\",\"policyAssignmentScope\":\"iqemcdiiisklbon\",\"policyDefinitionName\":\"upjxvtrkfkgenjqn\",\"policyDefinitionAction\":\"jwkosnyxigf\",\"policyDefinitionCategory\":\"jjcxgdq\",\"policySetDefinitionId\":\"lhnzkwo\",\"policySetDefinitionName\":\"wny\",\"policySetDefinitionOwner\":\"xuprrxyxwjezb\",\"policySetDefinitionCategory\":\"ployuekdcpvu\",\"policySetDefinitionParameters\":\"rsvjmnsvujnjktv\",\"policyDefinitionReferenceId\":\"efcjisepkdbxot\",\"complianceState\":\"jampqoclannm\",\"policyEvaluationDetails\":{\"evaluatedExpressions\":[{}],\"reason\":\"u\"},\"policyDefinitionGroupNames\":[\"zstrktgvpatrg\",\"jktfinf\"],\"policyDefinitionVersion\":\"ks\",\"policySetDefinitionVersion\":\"culwkqic\",\"policyAssignmentVersion\":\"ook\",\"\":{\"doctpz\":\"datalsgaojbtqpq\",\"gxceluj\":\"dataujzflmcd\"}},{\"@odata.id\":\"wlluunxhfwlfxz\",\"@odata.context\":\"u\",\"timestamp\":\"2021-01-13T13:46:14Z\",\"componentId\":\"cknecexkgr\",\"componentType\":\"psjdmng\",\"componentName\":\"tqpdzfyxcnwawoxc\",\"resourceId\":\"bejqfbifopfjx\",\"policyAssignmentId\":\"drpazqjkrfmbw\",\"policyDefinitionId\":\"fcuuugtjigpg\",\"subscriptionId\":\"iawohfmhn\",\"resourceType\":\"mecjjkmqenhaidzr\",\"resourceLocation\":\"sgloi\",\"resourceGroup\":\"slvivqsu\",\"policyAssignmentName\":\"ten\",\"policyAssignmentOwner\":\"pijpkhc\",\"policyAssignmentParameters\":\"aqxukuicjufte\",\"policyAssignmentScope\":\"oo\",\"policyDefinitionName\":\"duewfhvpxjhxzu\",\"policyDefinitionAction\":\"jzabbwz\",\"policyDefinitionCategory\":\"zuaixcdckixspsa\",\"policySetDefinitionId\":\"avkmvyxzerejrkpz\",\"policySetDefinitionName\":\"yetjxryo\",\"policySetDefinitionOwner\":\"ae\",\"policySetDefinitionCategory\":\"whlbecgihzbpem\",\"policySetDefinitionParameters\":\"rab\",\"policyDefinitionReferenceId\":\"rwwxywpj\",\"complianceState\":\"pboxhifppsk\",\"policyEvaluationDetails\":{\"evaluatedExpressions\":[{}],\"reason\":\"hhmifjuaj\"},\"policyDefinitionGroupNames\":[\"vcmmpeglyuq\",\"cmlae\",\"bzbqufpnezsjzaym\"],\"policyDefinitionVersion\":\"rorh\",\"policySetDefinitionVersion\":\"gzmsimehtc\",\"policyAssignmentVersion\":\"wdhtqqhyhnimxtn\",\"\":{\"vkeyymicj\":\"dataisnomwnwnghoj\"}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ComponentPolicyStatesQueryResults response = manager.componentPolicyStates()
            .listQueryResultsForPolicyDefinitionWithResponse("ija", "xndmuvar", ComponentPolicyStatesResource.LATEST,
                611430090, "zj", "tp", OffsetDateTime.parse("2021-11-01T18:56:05Z"),
                OffsetDateTime.parse("2021-09-15T01:29:15Z"), "uhcuh", "uzlxiwyopga", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("u", response.value().get(0).policyEvaluationDetails().reason());
    }
}
