// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.ComponentPolicyStatesQueryResults;
import com.azure.resourcemanager.policyinsights.models.ComponentPolicyStatesResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ComponentPolicyStatesListQueryResultsForResourceGroupWithResponseMockTests {
    @Test
    public void testListQueryResultsForResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"@odata.context\":\"kbkkteoze\",\"@odata.count\":305982796,\"value\":[{\"@odata.id\":\"rvvmvmcofn\",\"@odata.context\":\"lbsnosnqliw\",\"timestamp\":\"2020-12-31T14:56:04Z\",\"componentId\":\"j\",\"componentType\":\"tyalh\",\"componentName\":\"mknazgbjbhrpgiq\",\"resourceId\":\"tcucrcmmai\",\"policyAssignmentId\":\"qjiwifhbksldttoh\",\"policyDefinitionId\":\"lna\",\"subscriptionId\":\"tgs\",\"resourceType\":\"ikvllrhtpmgl\",\"resourceLocation\":\"oi\",\"resourceGroup\":\"trawrqkza\",\"policyAssignmentName\":\"unmpaklwzl\",\"policyAssignmentOwner\":\"epr\",\"policyAssignmentParameters\":\"jzltkaszfjs\",\"policyAssignmentScope\":\"cbduxapgrcqebmvr\",\"policyDefinitionName\":\"omlnws\",\"policyDefinitionAction\":\"vdlsflxkqesdfeds\",\"policyDefinitionCategory\":\"zancoinmp\",\"policySetDefinitionId\":\"mcqidkltvdhqnufb\",\"policySetDefinitionName\":\"e\",\"policySetDefinitionOwner\":\"bntojovfny\",\"policySetDefinitionCategory\":\"dhuihaouwudhuao\",\"policySetDefinitionParameters\":\"jkehwvumosqi\",\"policyDefinitionReferenceId\":\"amqprlo\",\"complianceState\":\"ugejcvjkjyczcmt\",\"policyEvaluationDetails\":{\"evaluatedExpressions\":[{},{},{},{}],\"reason\":\"jdyol\"},\"policyDefinitionGroupNames\":[\"yxqfmzsizzhravr\"],\"policyDefinitionVersion\":\"kjymgqbgcxh\",\"policySetDefinitionVersion\":\"xgzxlermkmer\",\"policyAssignmentVersion\":\"skirhn\",\"\":{\"nvtsdydshkpafyal\":\"datakcbkfukdlj\",\"fgufyjfdkqiy\":\"dataowwzizznyufpqzst\",\"qpfzlpejtznxlue\":\"datandjokgwesymzqh\"}},{\"@odata.id\":\"jqbbgsimwejlw\",\"@odata.context\":\"bpjzobdwbcpraswk\",\"timestamp\":\"2021-09-05T00:31:21Z\",\"componentId\":\"tnaczkfwfatga\",\"componentType\":\"hnskivdwgtqcume\",\"componentName\":\"aaqgoqbdiuycs\",\"resourceId\":\"kowkrbhzhr\",\"policyAssignmentId\":\"htmqowi\",\"policyDefinitionId\":\"sfgqgucyhfaimqv\",\"subscriptionId\":\"uozkgyf\",\"resourceType\":\"oehgfmqmskkixvlz\",\"resourceLocation\":\"plhpevasynt\",\"resourceGroup\":\"jy\",\"policyAssignmentName\":\"lbqrvvbqvknmpecq\",\"policyAssignmentOwner\":\"iqasif\",\"policyAssignmentParameters\":\"nsnst\",\"policyAssignmentScope\":\"wqpjnxjkhtupsvy\",\"policyDefinitionName\":\"weuiyx\",\"policyDefinitionAction\":\"kzts\",\"policyDefinitionCategory\":\"fbevyllz\",\"policySetDefinitionId\":\"hkqytkzta\",\"policySetDefinitionName\":\"pgfzdgjfcyc\",\"policySetDefinitionOwner\":\"vlo\",\"policySetDefinitionCategory\":\"h\",\"policySetDefinitionParameters\":\"qkzjuqwqaj\",\"policyDefinitionReferenceId\":\"zxpixhyo\",\"complianceState\":\"nfdbgsoscienezf\",\"policyEvaluationDetails\":{\"evaluatedExpressions\":[{},{}],\"reason\":\"mfkbpjnrtekwwn\"},\"policyDefinitionGroupNames\":[\"opmdudsyiu\"],\"policyDefinitionVersion\":\"tvktjhffecqko\",\"policySetDefinitionVersion\":\"ouergaghp\",\"policyAssignmentVersion\":\"xkpyehhfdyldh\",\"\":{\"fzqiyuq\":\"datad\",\"pjlwyxe\":\"datatdereunokakzw\",\"omckewvmyifopx\":\"dataznmxr\",\"gnuywezygva\":\"datajjtpdyzoutxfptof\"}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ComponentPolicyStatesQueryResults response = manager.componentPolicyStates()
            .listQueryResultsForResourceGroupWithResponse("d", "gxwjwil", ComponentPolicyStatesResource.LATEST,
                2105573008, "sl", "ateptwujjzg", OffsetDateTime.parse("2021-03-30T16:06:13Z"),
                OffsetDateTime.parse("2021-10-05T22:27:32Z"), "qwlxrhg", "vhvtq", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("jdyol", response.value().get(0).policyEvaluationDetails().reason());
    }
}
