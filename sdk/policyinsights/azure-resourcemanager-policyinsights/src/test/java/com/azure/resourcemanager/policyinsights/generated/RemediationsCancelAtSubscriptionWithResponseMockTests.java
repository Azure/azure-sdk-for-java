// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.Remediation;
import com.azure.resourcemanager.policyinsights.models.ResourceDiscoveryMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RemediationsCancelAtSubscriptionWithResponseMockTests {
    @Test
    public void testCancelAtSubscriptionWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"policyAssignmentId\":\"ruqnm\",\"policyDefinitionReferenceId\":\"hazcvjytiqswbqer\",\"resourceDiscoveryMode\":\"ReEvaluateCompliance\",\"provisioningState\":\"ytxtdgu\",\"createdOn\":\"2021-05-13T00:39:07Z\",\"lastUpdatedOn\":\"2021-05-14T02:48:25Z\",\"filters\":{\"locations\":[\"dstyouam\",\"ewres\",\"moweg\"],\"resourceIds\":[\"teyxeyguq\",\"gijiitnspxlzd\",\"sygrijwa\"]},\"deploymentStatus\":{\"totalDeployments\":854211446,\"successfulDeployments\":482773410,\"failedDeployments\":1788647720},\"statusMessage\":\"fueqfrojs\",\"correlationId\":\"grhydk\",\"resourceCount\":1103075365,\"parallelDeployments\":1476783796,\"failureThreshold\":{\"percentage\":60.856716}},\"id\":\"ec\",\"name\":\"f\",\"type\":\"gzmxieqv\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Remediation response = manager.remediations()
            .cancelAtSubscriptionWithResponse("rkuorh", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ruqnm", response.policyAssignmentId());
        Assertions.assertEquals("hazcvjytiqswbqer", response.policyDefinitionReferenceId());
        Assertions.assertEquals(ResourceDiscoveryMode.RE_EVALUATE_COMPLIANCE, response.resourceDiscoveryMode());
        Assertions.assertEquals("dstyouam", response.filters().locations().get(0));
        Assertions.assertEquals("teyxeyguq", response.filters().resourceIds().get(0));
        Assertions.assertEquals(1103075365, response.resourceCount());
        Assertions.assertEquals(1476783796, response.parallelDeployments());
        Assertions.assertEquals(60.856716F, response.failureThreshold().percentage());
    }
}
