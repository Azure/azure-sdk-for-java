// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.Remediation;
import com.azure.resourcemanager.policyinsights.models.ResourceDiscoveryMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RemediationsCancelAtSubscriptionWithResponseMockTests {
    @Test
    public void testCancelAtSubscriptionWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"policyAssignmentId\":\"excgjokjljnhvl\",\"policyDefinitionReferenceId\":\"bekpeeksnbksdqhj\",\"resourceDiscoveryMode\":\"ExistingNonCompliant\",\"provisioningState\":\"xeslkhhustcpoqm\",\"createdOn\":\"2021-09-19T05:37:39Z\",\"lastUpdatedOn\":\"2021-06-13T09:41:32Z\",\"filters\":{\"locations\":[\"o\"]},\"deploymentStatus\":{\"totalDeployments\":1066979834,\"successfulDeployments\":435620606,\"failedDeployments\":490735122},\"statusMessage\":\"ybwfdbkjb\",\"correlationId\":\"ensvkzykjtj\",\"resourceCount\":491994414,\"parallelDeployments\":811449935,\"failureThreshold\":{\"percentage\":79.68633}},\"id\":\"cdp\",\"name\":\"upnqrmgjfb\",\"type\":\"kuwxeoiojfizfavk\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Remediation response = manager.remediations()
            .cancelAtSubscriptionWithResponse("mwllcolsrsxapt", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("excgjokjljnhvl", response.policyAssignmentId());
        Assertions.assertEquals("bekpeeksnbksdqhj", response.policyDefinitionReferenceId());
        Assertions.assertEquals(ResourceDiscoveryMode.EXISTING_NON_COMPLIANT, response.resourceDiscoveryMode());
        Assertions.assertEquals("o", response.filters().locations().get(0));
        Assertions.assertEquals(491994414, response.resourceCount());
        Assertions.assertEquals(811449935, response.parallelDeployments());
        Assertions.assertEquals(79.68633F, response.failureThreshold().percentage());
    }
}
