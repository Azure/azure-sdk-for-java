// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.PolicyEvent;
import com.azure.resourcemanager.policyinsights.models.PolicyEventsResourceType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PolicyEventsListQueryResultsForResourceGroupMockTests {
    @Test
    public void testListQueryResultsForResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"@odata.id\":\"ywymxgaabj\",\"@odata.context\":\"tfohf\",\"timestamp\":\"2021-02-25T14:40:12Z\",\"resourceId\":\"vkiwrsiwdyjqu\",\"policyAssignmentId\":\"kcrr\",\"policyDefinitionId\":\"eek\",\"effectiveParameters\":\"uehogdd\",\"isCompliant\":true,\"subscriptionId\":\"bgydlqidywm\",\"resourceType\":\"ptyrilkfbnrqqxv\",\"resourceLocation\":\"pbnfnqtx\",\"resourceGroup\":\"omals\",\"resourceTags\":\"nfddepldwqjns\",\"policyAssignmentName\":\"ygleexa\",\"policyAssignmentOwner\":\"mywhsb\",\"policyAssignmentParameters\":\"arycsjjzyvoaqa\",\"policyAssignmentScope\":\"vehzp\",\"policyDefinitionName\":\"mk\",\"policyDefinitionAction\":\"bhmpfulubefgybp\",\"policyDefinitionCategory\":\"bfununmpzkrv\",\"policySetDefinitionId\":\"ifkdschlzvf\",\"policySetDefinitionName\":\"tnkjjwgcwnphb\",\"policySetDefinitionOwner\":\"fyrtogmhmjp\",\"policySetDefinitionCategory\":\"cdf\",\"policySetDefinitionParameters\":\"qwtygevgwmseharx\",\"managementGroupIds\":\"vqnrxtmbpj\",\"policyDefinitionReferenceId\":\"nvwjhrsidqpxl\",\"complianceState\":\"pakftngatwm\",\"tenantId\":\"yutrymd\",\"principalOid\":\"fj\",\"components\":[{\"id\":\"vjqdvdwkq\",\"type\":\"drlefgnaavuag\",\"name\":\"etaoutnpdc\",\"timestamp\":\"2021-04-06T02:46:02Z\",\"tenantId\":\"pfe\",\"principalOid\":\"i\",\"policyDefinitionAction\":\"uyeuyl\",\"\":{\"h\":\"datamtybkcgsu\",\"fxexlfciatxtjrr\":\"datallnmwyn\",\"ajfoxc\":\"datakmdskjhhxd\",\"lxlhuavkrm\":\"datascv\"}}],\"\":{\"lojfkqidnqto\":\"datayjmkxettc\",\"nqlrng\":\"dataxjhqxcsqhtkb\",\"psnaww\":\"datadmbi\",\"hhl\":\"dataqkzn\"}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<PolicyEvent> response = manager.policyEvents()
            .listQueryResultsForResourceGroup(PolicyEventsResourceType.DEFAULT, "lqxsjxtelex", "vuqbozoo", 2087712194,
                "qocarkuzlbc", "ndtsnxawqytll", OffsetDateTime.parse("2021-06-12T21:46:31Z"),
                OffsetDateTime.parse("2021-10-14T11:13:01Z"), "z", "yckzex", "xak", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(OffsetDateTime.parse("2021-02-25T14:40:12Z"), response.iterator().next().timestamp());
        Assertions.assertEquals("vkiwrsiwdyjqu", response.iterator().next().resourceId());
        Assertions.assertEquals("kcrr", response.iterator().next().policyAssignmentId());
        Assertions.assertEquals("eek", response.iterator().next().policyDefinitionId());
        Assertions.assertEquals("uehogdd", response.iterator().next().effectiveParameters());
        Assertions.assertEquals(true, response.iterator().next().isCompliant());
        Assertions.assertEquals("bgydlqidywm", response.iterator().next().subscriptionId());
        Assertions.assertEquals("ptyrilkfbnrqqxv", response.iterator().next().resourceType());
        Assertions.assertEquals("pbnfnqtx", response.iterator().next().resourceLocation());
        Assertions.assertEquals("omals", response.iterator().next().resourceGroup());
        Assertions.assertEquals("nfddepldwqjns", response.iterator().next().resourceTags());
        Assertions.assertEquals("ygleexa", response.iterator().next().policyAssignmentName());
        Assertions.assertEquals("mywhsb", response.iterator().next().policyAssignmentOwner());
        Assertions.assertEquals("arycsjjzyvoaqa", response.iterator().next().policyAssignmentParameters());
        Assertions.assertEquals("vehzp", response.iterator().next().policyAssignmentScope());
        Assertions.assertEquals("mk", response.iterator().next().policyDefinitionName());
        Assertions.assertEquals("bhmpfulubefgybp", response.iterator().next().policyDefinitionAction());
        Assertions.assertEquals("bfununmpzkrv", response.iterator().next().policyDefinitionCategory());
        Assertions.assertEquals("ifkdschlzvf", response.iterator().next().policySetDefinitionId());
        Assertions.assertEquals("tnkjjwgcwnphb", response.iterator().next().policySetDefinitionName());
        Assertions.assertEquals("fyrtogmhmjp", response.iterator().next().policySetDefinitionOwner());
        Assertions.assertEquals("cdf", response.iterator().next().policySetDefinitionCategory());
        Assertions.assertEquals("qwtygevgwmseharx", response.iterator().next().policySetDefinitionParameters());
        Assertions.assertEquals("vqnrxtmbpj", response.iterator().next().managementGroupIds());
        Assertions.assertEquals("nvwjhrsidqpxl", response.iterator().next().policyDefinitionReferenceId());
        Assertions.assertEquals("pakftngatwm", response.iterator().next().complianceState());
        Assertions.assertEquals("yutrymd", response.iterator().next().tenantId());
        Assertions.assertEquals("fj", response.iterator().next().principalOid());
        Assertions.assertEquals("vjqdvdwkq", response.iterator().next().components().get(0).id());
        Assertions.assertEquals("drlefgnaavuag", response.iterator().next().components().get(0).type());
        Assertions.assertEquals("etaoutnpdc", response.iterator().next().components().get(0).name());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-06T02:46:02Z"),
            response.iterator().next().components().get(0).timestamp());
        Assertions.assertEquals("pfe", response.iterator().next().components().get(0).tenantId());
        Assertions.assertEquals("i", response.iterator().next().components().get(0).principalOid());
        Assertions.assertEquals("uyeuyl", response.iterator().next().components().get(0).policyDefinitionAction());
    }
}
