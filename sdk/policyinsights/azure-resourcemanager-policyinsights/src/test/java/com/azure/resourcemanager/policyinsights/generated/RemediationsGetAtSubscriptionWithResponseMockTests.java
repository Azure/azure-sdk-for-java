// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.Remediation;
import com.azure.resourcemanager.policyinsights.models.ResourceDiscoveryMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RemediationsGetAtSubscriptionWithResponseMockTests {
    @Test
    public void testGetAtSubscriptionWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"policyAssignmentId\":\"rp\",\"policyDefinitionReferenceId\":\"r\",\"resourceDiscoveryMode\":\"ReEvaluateCompliance\",\"provisioningState\":\"atvlmbjwcolbm\",\"createdOn\":\"2021-02-27T16:02:15Z\",\"lastUpdatedOn\":\"2021-01-27T11:36:33Z\",\"filters\":{\"locations\":[\"pa\",\"pr\",\"rvxhmtfhocnxzcm\"],\"resourceIds\":[\"gxnoqrxtdis\",\"jevhdlmydidw\"]},\"deploymentStatus\":{\"totalDeployments\":362021718,\"successfulDeployments\":628758721,\"failedDeployments\":335691215},\"statusMessage\":\"doesxxhmwcdb\",\"correlationId\":\"yo\",\"resourceCount\":2072250749,\"parallelDeployments\":588101197,\"failureThreshold\":{\"percentage\":45.688854}},\"id\":\"knjz\",\"name\":\"bhtmeplvuk\",\"type\":\"obrl\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Remediation response = manager.remediations()
            .getAtSubscriptionWithResponse("quwusq", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("rp", response.policyAssignmentId());
        Assertions.assertEquals("r", response.policyDefinitionReferenceId());
        Assertions.assertEquals(ResourceDiscoveryMode.RE_EVALUATE_COMPLIANCE, response.resourceDiscoveryMode());
        Assertions.assertEquals("pa", response.filters().locations().get(0));
        Assertions.assertEquals("gxnoqrxtdis", response.filters().resourceIds().get(0));
        Assertions.assertEquals(2072250749, response.resourceCount());
        Assertions.assertEquals(588101197, response.parallelDeployments());
        Assertions.assertEquals(45.688854F, response.failureThreshold().percentage());
    }
}
