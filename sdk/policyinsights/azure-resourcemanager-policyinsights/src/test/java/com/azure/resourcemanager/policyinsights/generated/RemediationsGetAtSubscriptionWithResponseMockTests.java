// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.Remediation;
import com.azure.resourcemanager.policyinsights.models.ResourceDiscoveryMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RemediationsGetAtSubscriptionWithResponseMockTests {
    @Test
    public void testGetAtSubscriptionWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"policyAssignmentId\":\"tb\",\"policyDefinitionReferenceId\":\"exreu\",\"resourceDiscoveryMode\":\"ExistingNonCompliant\",\"provisioningState\":\"tljvfwhreagkhyx\",\"createdOn\":\"2021-11-07T00:02:25Z\",\"lastUpdatedOn\":\"2021-03-22T08:14:33Z\",\"filters\":{\"locations\":[\"sulmd\",\"glmep\",\"pfseykgs\"]},\"deploymentStatus\":{\"totalDeployments\":1456340145,\"successfulDeployments\":1689930384,\"failedDeployments\":2078567583},\"statusMessage\":\"fpgylkve\",\"correlationId\":\"ujcngo\",\"resourceCount\":1940123699,\"parallelDeployments\":310049644,\"failureThreshold\":{\"percentage\":69.47298}},\"id\":\"jfoknubnoitpkp\",\"name\":\"trgdgxvc\",\"type\":\"qraswugyxpqitwei\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Remediation response
            = manager.remediations().getAtSubscriptionWithResponse("g", com.azure.core.util.Context.NONE).getValue();

        Assertions.assertEquals("tb", response.policyAssignmentId());
        Assertions.assertEquals("exreu", response.policyDefinitionReferenceId());
        Assertions.assertEquals(ResourceDiscoveryMode.EXISTING_NON_COMPLIANT, response.resourceDiscoveryMode());
        Assertions.assertEquals("sulmd", response.filters().locations().get(0));
        Assertions.assertEquals(1940123699, response.resourceCount());
        Assertions.assertEquals(310049644, response.parallelDeployments());
        Assertions.assertEquals(69.47298F, response.failureThreshold().percentage());
    }
}
