// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.Remediation;
import com.azure.resourcemanager.policyinsights.models.ResourceDiscoveryMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RemediationsCancelAtResourceGroupWithResponseMockTests {
    @Test
    public void testCancelAtResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"policyAssignmentId\":\"qb\",\"policyDefinitionReferenceId\":\"vafjrqpjiyrqj\",\"resourceDiscoveryMode\":\"ReEvaluateCompliance\",\"provisioningState\":\"xwmzwdfkbnrz\",\"createdOn\":\"2021-08-17T05:48:49Z\",\"lastUpdatedOn\":\"2021-09-15T12:57:15Z\",\"filters\":{\"locations\":[\"ctqjfgxxsae\",\"gzdgvpyigda\"],\"resourceIds\":[\"lzdcduwjoedxng\",\"caifpaurww\",\"ilfjqqacdmk\"]},\"deploymentStatus\":{\"totalDeployments\":1584049163,\"successfulDeployments\":745552501,\"failedDeployments\":966920102},\"statusMessage\":\"yziakeciqchxrtu\",\"correlationId\":\"dsiwdfmmp\",\"resourceCount\":550072786,\"parallelDeployments\":1080891031,\"failureThreshold\":{\"percentage\":39.83678}},\"id\":\"gyngydgrpxncak\",\"name\":\"qao\",\"type\":\"djrkclamggl\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Remediation response = manager.remediations()
            .cancelAtResourceGroupWithResponse("eintxwaljglzobl", "waafrqulh", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("qb", response.policyAssignmentId());
        Assertions.assertEquals("vafjrqpjiyrqj", response.policyDefinitionReferenceId());
        Assertions.assertEquals(ResourceDiscoveryMode.RE_EVALUATE_COMPLIANCE, response.resourceDiscoveryMode());
        Assertions.assertEquals("ctqjfgxxsae", response.filters().locations().get(0));
        Assertions.assertEquals("lzdcduwjoedxng", response.filters().resourceIds().get(0));
        Assertions.assertEquals(550072786, response.resourceCount());
        Assertions.assertEquals(1080891031, response.parallelDeployments());
        Assertions.assertEquals(39.83678F, response.failureThreshold().percentage());
    }
}
