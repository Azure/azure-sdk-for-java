// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.CheckRestrictionsRequest;
import com.azure.resourcemanager.policyinsights.models.CheckRestrictionsResourceDetails;
import com.azure.resourcemanager.policyinsights.models.CheckRestrictionsResult;
import com.azure.resourcemanager.policyinsights.models.PendingField;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PolicyRestrictionsCheckAtSubscriptionScopeWithResponseMockTests {
    @Test
    public void testCheckAtSubscriptionScopeWithResponse() throws Exception {
        String responseStr
            = "{\"fieldRestrictions\":[{\"field\":\"ooajeyyjmjjx\",\"restrictions\":[{\"result\":\"Removed\",\"defaultValue\":\"nzlslekc\",\"values\":[\"zkjtyqpdwadeg\"],\"policy\":{}},{\"result\":\"Required\",\"defaultValue\":\"svczdjiahuqy\",\"values\":[\"ucwwmejjqhd\",\"wvmqxi\",\"ookyfoz\"],\"policy\":{}},{\"result\":\"Deny\",\"defaultValue\":\"by\",\"values\":[\"pgaixwrgrkkderf\",\"swqi\",\"wepwoggg\"],\"policy\":{}}]},{\"field\":\"nxhtf\",\"restrictions\":[{\"result\":\"Deny\",\"defaultValue\":\"d\",\"values\":[\"chzpgfqumjdj\",\"hzghgod\",\"ynrceqavfdbdf\"],\"policy\":{}},{\"result\":\"Deny\",\"defaultValue\":\"naj\",\"values\":[\"jyyqmkw\",\"hvcw\",\"oqdejkluxxr\"],\"policy\":{}},{\"result\":\"Required\",\"defaultValue\":\"zmsxgamtdt\",\"values\":[\"pt\",\"uzdprmim\",\"ljdp\",\"qfxy\"],\"policy\":{}},{\"result\":\"Removed\",\"defaultValue\":\"tbaewhte\",\"values\":[\"amfmxtllfl\",\"ymqcnrrfijhgga\",\"qbgamkli\",\"irw\"],\"policy\":{}}]},{\"field\":\"fhsdpzouhkt\",\"restrictions\":[{\"result\":\"Deny\",\"defaultValue\":\"njxrd\",\"values\":[\"t\",\"llygta\",\"czcxdfw\",\"a\"],\"policy\":{}},{\"result\":\"Required\",\"defaultValue\":\"xrljphraspi\",\"values\":[\"imixlmdbgice\",\"fgsmdrjuqb\",\"xtokljmtz\",\"paxwfqty\"],\"policy\":{}}]}],\"contentEvaluationResult\":{\"policyEvaluations\":[{\"policyInfo\":{\"policyDefinitionId\":\"tungbsoljckmiigz\",\"policySetDefinitionId\":\"uck\",\"policyDefinitionReferenceId\":\"dsk\",\"policyAssignmentId\":\"tiiqqcqikclsmaln\"},\"evaluationResult\":\"woykdnonaaxwm\",\"evaluationDetails\":{\"evaluatedExpressions\":[{},{},{}],\"ifNotExistsDetails\":{}}},{\"policyInfo\":{\"policyDefinitionId\":\"cwnynlleiq\",\"policySetDefinitionId\":\"bgvsbtsertoxadh\",\"policyDefinitionReferenceId\":\"vjhxmnrqst\",\"policyAssignmentId\":\"metwml\"},\"evaluationResult\":\"cvnpv\",\"evaluationDetails\":{\"evaluatedExpressions\":[{},{},{}],\"ifNotExistsDetails\":{}}},{\"policyInfo\":{\"policyDefinitionId\":\"q\",\"policySetDefinitionId\":\"i\",\"policyDefinitionReferenceId\":\"lzmvcdsvmwbi\",\"policyAssignmentId\":\"kdtfo\"},\"evaluationResult\":\"fiybxqich\",\"evaluationDetails\":{\"evaluatedExpressions\":[{},{}],\"ifNotExistsDetails\":{}}},{\"policyInfo\":{\"policyDefinitionId\":\"ekivycpzcvdizulr\",\"policySetDefinitionId\":\"bhtrezpzlpryfm\",\"policyDefinitionReferenceId\":\"dutzfkg\",\"policyAssignmentId\":\"no\"},\"evaluationResult\":\"ccgndjgdprig\",\"evaluationDetails\":{\"evaluatedExpressions\":[{},{},{}],\"ifNotExistsDetails\":{}}}]}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        CheckRestrictionsResult response = manager.policyRestrictions()
            .checkAtSubscriptionScopeWithResponse(
                new CheckRestrictionsRequest()
                    .withResourceDetails(new CheckRestrictionsResourceDetails().withResourceContent("datasqsnxf")
                        .withApiVersion("ufeapdrbzyvb")
                        .withScope("adulpodkaxp"))
                    .withPendingFields(Arrays.asList(
                        new PendingField().withField("kzhmhj").withValues(Arrays.asList("tdeluqrojadhfzt")),
                        new PendingField().withField("raysrkgzkyhu")
                            .withValues(Arrays.asList("uwpzqx", "cweakfec", "vxfaqufqizj")))),
                com.azure.core.util.Context.NONE)
            .getValue();

    }
}
