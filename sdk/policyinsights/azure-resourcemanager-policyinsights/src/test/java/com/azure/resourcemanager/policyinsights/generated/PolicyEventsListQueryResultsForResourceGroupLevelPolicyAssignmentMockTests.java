// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.PolicyEvent;
import com.azure.resourcemanager.policyinsights.models.PolicyEventsResourceType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PolicyEventsListQueryResultsForResourceGroupLevelPolicyAssignmentMockTests {
    @Test
    public void testListQueryResultsForResourceGroupLevelPolicyAssignment() throws Exception {
        String responseStr
            = "{\"value\":[{\"@odata.id\":\"hwvixqqggljkybsj\",\"@odata.context\":\"lrvtz\",\"timestamp\":\"2021-06-09T16:03:37Z\",\"resourceId\":\"ctbhpjhxpcvrd\",\"policyAssignmentId\":\"eitaneqadynzjahw\",\"policyDefinitionId\":\"uomzczfki\",\"effectiveParameters\":\"evsaa\",\"isCompliant\":false,\"subscriptionId\":\"caxikhfjqebgl\",\"resourceType\":\"kxgzzromvygysem\",\"resourceLocation\":\"esrfsvpinkzpatq\",\"resourceGroup\":\"iswxspv\",\"resourceTags\":\"ojazbbgspfte\",\"policyAssignmentName\":\"b\",\"policyAssignmentOwner\":\"vpvdylytcovqse\",\"policyAssignmentParameters\":\"rf\",\"policyAssignmentScope\":\"d\",\"policyDefinitionName\":\"fxnxml\",\"policyDefinitionAction\":\"uoswkjmdih\",\"policyDefinitionCategory\":\"yyyzlwhbw\",\"policySetDefinitionId\":\"nufzr\",\"policySetDefinitionName\":\"m\",\"policySetDefinitionOwner\":\"gnnbzrtf\",\"policySetDefinitionCategory\":\"dzuubjtvgjsxm\",\"policySetDefinitionParameters\":\"jjvavdpww\",\"managementGroupIds\":\"tdp\",\"policyDefinitionReferenceId\":\"its\",\"complianceState\":\"ofw\",\"tenantId\":\"m\",\"principalOid\":\"scauwazcgwdfr\",\"components\":[{\"id\":\"bjpozokscvgllixd\",\"type\":\"yfgwewqkj\",\"name\":\"prwpxsoohu\",\"timestamp\":\"2021-08-22T02:15:27Z\",\"tenantId\":\"skl\",\"principalOid\":\"zuu\",\"policyDefinitionAction\":\"gzlf\",\"ubsrtmdylperpilt\":\"datadc\",\"fcm\":\"datajzgc\"}],\"sr\":\"databodetr\",\"waivmuqkevzg\":\"datavtshuvf\",\"wzjwotnxlkfhg\":\"dataypanhxmpdxxzet\",\"foxqwecrsn\":\"datah\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<PolicyEvent> response = manager.policyEvents()
            .listQueryResultsForResourceGroupLevelPolicyAssignment(PolicyEventsResourceType.DEFAULT, "eyttlrcxiv",
                "bkut", "umltwjflu", 1287309734, "nbpvzlq", "wa", OffsetDateTime.parse("2021-09-10T13:04:02Z"),
                OffsetDateTime.parse("2021-11-07T18:19:52Z"), "njc", "hmocgjshg", "u",
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals(OffsetDateTime.parse("2021-06-09T16:03:37Z"), response.iterator().next().timestamp());
        Assertions.assertEquals("ctbhpjhxpcvrd", response.iterator().next().resourceId());
        Assertions.assertEquals("eitaneqadynzjahw", response.iterator().next().policyAssignmentId());
        Assertions.assertEquals("uomzczfki", response.iterator().next().policyDefinitionId());
        Assertions.assertEquals("evsaa", response.iterator().next().effectiveParameters());
        Assertions.assertFalse(response.iterator().next().isCompliant());
        Assertions.assertEquals("caxikhfjqebgl", response.iterator().next().subscriptionId());
        Assertions.assertEquals("kxgzzromvygysem", response.iterator().next().resourceType());
        Assertions.assertEquals("esrfsvpinkzpatq", response.iterator().next().resourceLocation());
        Assertions.assertEquals("iswxspv", response.iterator().next().resourceGroup());
        Assertions.assertEquals("ojazbbgspfte", response.iterator().next().resourceTags());
        Assertions.assertEquals("b", response.iterator().next().policyAssignmentName());
        Assertions.assertEquals("vpvdylytcovqse", response.iterator().next().policyAssignmentOwner());
        Assertions.assertEquals("rf", response.iterator().next().policyAssignmentParameters());
        Assertions.assertEquals("d", response.iterator().next().policyAssignmentScope());
        Assertions.assertEquals("fxnxml", response.iterator().next().policyDefinitionName());
        Assertions.assertEquals("uoswkjmdih", response.iterator().next().policyDefinitionAction());
        Assertions.assertEquals("yyyzlwhbw", response.iterator().next().policyDefinitionCategory());
        Assertions.assertEquals("nufzr", response.iterator().next().policySetDefinitionId());
        Assertions.assertEquals("m", response.iterator().next().policySetDefinitionName());
        Assertions.assertEquals("gnnbzrtf", response.iterator().next().policySetDefinitionOwner());
        Assertions.assertEquals("dzuubjtvgjsxm", response.iterator().next().policySetDefinitionCategory());
        Assertions.assertEquals("jjvavdpww", response.iterator().next().policySetDefinitionParameters());
        Assertions.assertEquals("tdp", response.iterator().next().managementGroupIds());
        Assertions.assertEquals("its", response.iterator().next().policyDefinitionReferenceId());
        Assertions.assertEquals("ofw", response.iterator().next().complianceState());
        Assertions.assertEquals("m", response.iterator().next().tenantId());
        Assertions.assertEquals("scauwazcgwdfr", response.iterator().next().principalOid());
        Assertions.assertEquals("bjpozokscvgllixd", response.iterator().next().components().get(0).id());
        Assertions.assertEquals("yfgwewqkj", response.iterator().next().components().get(0).type());
        Assertions.assertEquals("prwpxsoohu", response.iterator().next().components().get(0).name());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-22T02:15:27Z"),
            response.iterator().next().components().get(0).timestamp());
        Assertions.assertEquals("skl", response.iterator().next().components().get(0).tenantId());
        Assertions.assertEquals("zuu", response.iterator().next().components().get(0).principalOid());
        Assertions.assertEquals("gzlf", response.iterator().next().components().get(0).policyDefinitionAction());
    }
}
