// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.PolicyMetadata;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PolicyMetadatasGetResourceWithResponseMockTests {
    @Test
    public void testGetResourceWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"description\":\"jqjtotd\",\"requirements\":\"osc\",\"metadataId\":\"hwuusiecktybh\",\"category\":\"xidhhxomil\",\"title\":\"xj\",\"owner\":\"ugxwjwilmqrslaat\",\"additionalContentUrl\":\"twujjzgx\",\"metadata\":\"dataqwlxrhg\"},\"id\":\"hvtqqykbkk\",\"type\":\"ozejo\",\"name\":\"korvvm\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PolicyMetadata response = manager.policyMetadatas()
            .getResourceWithResponse("iwjbctvb", com.azure.core.util.Context.NONE)
            .getValue();

    }
}
