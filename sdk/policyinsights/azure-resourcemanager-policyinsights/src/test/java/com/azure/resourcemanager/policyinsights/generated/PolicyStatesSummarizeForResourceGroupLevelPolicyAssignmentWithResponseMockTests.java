// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.PolicyStatesSummaryResourceType;
import com.azure.resourcemanager.policyinsights.models.SummarizeResults;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PolicyStatesSummarizeForResourceGroupLevelPolicyAssignmentWithResponseMockTests {
    @Test
    public void testSummarizeForResourceGroupLevelPolicyAssignmentWithResponse() throws Exception {
        String responseStr
            = "{\"@odata.context\":\"raq\",\"@odata.count\":949572148,\"value\":[{\"@odata.id\":\"p\",\"@odata.context\":\"ylqlocvvujexaygl\",\"results\":{\"queryResultsUri\":\"gjnm\",\"nonCompliantResources\":1871294547,\"nonCompliantPolicies\":1423203976,\"resourceDetails\":[{},{},{},{}],\"policyDetails\":[{},{}],\"policyGroupDetails\":[{},{},{}]},\"policyAssignments\":[{\"policyAssignmentId\":\"pieidzlvssqy\",\"policySetDefinitionId\":\"opac\",\"results\":{},\"policyDefinitions\":[{}],\"policyGroups\":[{},{},{},{}]}]},{\"@odata.id\":\"kmfngpmillxgjs\",\"@odata.context\":\"zwgsoriobije\",\"results\":{\"queryResultsUri\":\"yeuynhbokay\",\"nonCompliantResources\":449563804,\"nonCompliantPolicies\":202683621,\"resourceDetails\":[{}],\"policyDetails\":[{},{}],\"policyGroupDetails\":[{},{},{}]},\"policyAssignments\":[{\"policyAssignmentId\":\"tnorwaigsioct\",\"policySetDefinitionId\":\"mvjanx\",\"results\":{},\"policyDefinitions\":[{},{}],\"policyGroups\":[{},{},{},{}]}]},{\"@odata.id\":\"jnwosst\",\"@odata.context\":\"xt\",\"results\":{\"queryResultsUri\":\"xzqfcwr\",\"nonCompliantResources\":1016998104,\"nonCompliantPolicies\":1568715877,\"resourceDetails\":[{}],\"policyDetails\":[{},{},{},{}],\"policyGroupDetails\":[{},{}]},\"policyAssignments\":[{\"policyAssignmentId\":\"jiqegmxdbs\",\"policySetDefinitionId\":\"cwhpy\",\"results\":{},\"policyDefinitions\":[{},{},{},{}],\"policyGroups\":[{},{}]},{\"policyAssignmentId\":\"szwcan\",\"policySetDefinitionId\":\"jekwuyckyvne\",\"results\":{},\"policyDefinitions\":[{},{},{},{}],\"policyGroups\":[{},{},{}]}]}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        SummarizeResults response = manager.policyStates()
            .summarizeForResourceGroupLevelPolicyAssignmentWithResponse(PolicyStatesSummaryResourceType.LATEST, "jwd",
                "dl", "mkxerxxxoteeh", 617351224, OffsetDateTime.parse("2021-12-04T08:39:49Z"),
                OffsetDateTime.parse("2021-08-01T05:54:26Z"), "gomvvhxowpcbapn", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("gjnm", response.value().get(0).results().queryResultsUri());
        Assertions.assertEquals(1871294547, response.value().get(0).results().nonCompliantResources());
        Assertions.assertEquals(1423203976, response.value().get(0).results().nonCompliantPolicies());
        Assertions.assertEquals("pieidzlvssqy",
            response.value().get(0).policyAssignments().get(0).policyAssignmentId());
        Assertions.assertEquals("opac", response.value().get(0).policyAssignments().get(0).policySetDefinitionId());
    }
}
