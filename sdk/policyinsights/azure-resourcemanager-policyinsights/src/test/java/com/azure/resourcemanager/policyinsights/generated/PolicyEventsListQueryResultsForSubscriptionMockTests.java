// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.PolicyEvent;
import com.azure.resourcemanager.policyinsights.models.PolicyEventsResourceType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PolicyEventsListQueryResultsForSubscriptionMockTests {
    @Test
    public void testListQueryResultsForSubscription() throws Exception {
        String responseStr
            = "{\"value\":[{\"@odata.id\":\"xigvjrktpgaeuk\",\"@odata.context\":\"wohpmwhqnucs\",\"timestamp\":\"2021-10-08T06:40:51Z\",\"resourceId\":\"i\",\"policyAssignmentId\":\"jtdlp\",\"policyDefinitionId\":\"injgazlsvbzfcpuo\",\"effectiveParameters\":\"dwjcciklhs\",\"isCompliant\":false,\"subscriptionId\":\"drenxol\",\"resourceType\":\"yehqbeivdlhydwb\",\"resourceLocation\":\"fgrlpun\",\"resourceGroup\":\"jlkesmmpath\",\"resourceTags\":\"ta\",\"policyAssignmentName\":\"e\",\"policyAssignmentOwner\":\"iiwllbvgwzsf\",\"policyAssignmentParameters\":\"edous\",\"policyAssignmentScope\":\"tjtgravaqogfkb\",\"policyDefinitionName\":\"auzlqbtxxw\",\"policyDefinitionAction\":\"h\",\"policyDefinitionCategory\":\"zudrtpzk\",\"policySetDefinitionId\":\"eboywhczzqrhm\",\"policySetDefinitionName\":\"qbedygisrzwn\",\"policySetDefinitionOwner\":\"d\",\"policySetDefinitionCategory\":\"jch\",\"policySetDefinitionParameters\":\"mpwctoflds\",\"managementGroupIds\":\"cdhz\",\"policyDefinitionReferenceId\":\"kbrfgdrwji\",\"complianceState\":\"whfjsrwqrxe\",\"tenantId\":\"gcwvrrmdqntycna\",\"principalOid\":\"hvmaxgnuyeamcmhu\",\"components\":[{\"id\":\"cehokw\",\"type\":\"qtwloes\",\"name\":\"ggvrbnyrukoilaci\",\"timestamp\":\"2021-02-01T06:51:52Z\",\"tenantId\":\"leipjl\",\"principalOid\":\"yxpzruzythqk\",\"policyDefinitionAction\":\"hbgxvel\",\"mnitmujd\":\"datalnx\",\"lyymffhmjpddny\":\"datavm\",\"mzjqrbr\":\"datafzuvrzmz\"},{\"id\":\"nmdyfoebo\",\"type\":\"jpp\",\"name\":\"aohoqkpjtnq\",\"timestamp\":\"2021-11-21T23:54:02Z\",\"tenantId\":\"ywkdcwmqsy\",\"principalOid\":\"lmhxdqaolfylnk\",\"policyDefinitionAction\":\"jpjvly\",\"bjwhlwyjfnqzocr\":\"datamfwo\",\"tgxdncaqt\":\"datazgczeu\",\"vnyttzgi\":\"dataiekoif\"},{\"id\":\"yri\",\"type\":\"gm\",\"name\":\"ehlq\",\"timestamp\":\"2021-04-28T03:01:07Z\",\"tenantId\":\"flkn\",\"principalOid\":\"ndpgfjodhda\",\"policyDefinitionAction\":\"twfhi\",\"uumljcirvpefyc\":\"datagsabvcipowzafc\",\"nsxzajlns\":\"dataveitit\",\"tuadxkxeqb\":\"datahwjuyxxbxqvmvua\"}],\"xsl\":\"datatghyksarcdr\",\"x\":\"datavlzladl\",\"wzdanojisgglmvo\":\"datapbqhvfdqqjwkr\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<PolicyEvent> response = manager.policyEvents()
            .listQueryResultsForSubscription(PolicyEventsResourceType.DEFAULT, "cleqioulndhzyo", 151048648, "jhtollh",
                "vidmytzl", OffsetDateTime.parse("2021-11-28T09:18:17Z"), OffsetDateTime.parse("2021-04-04T13:07:02Z"),
                "xpno", "yoan", "bcswqagyw", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(OffsetDateTime.parse("2021-10-08T06:40:51Z"), response.iterator().next().timestamp());
        Assertions.assertEquals("i", response.iterator().next().resourceId());
        Assertions.assertEquals("jtdlp", response.iterator().next().policyAssignmentId());
        Assertions.assertEquals("injgazlsvbzfcpuo", response.iterator().next().policyDefinitionId());
        Assertions.assertEquals("dwjcciklhs", response.iterator().next().effectiveParameters());
        Assertions.assertFalse(response.iterator().next().isCompliant());
        Assertions.assertEquals("drenxol", response.iterator().next().subscriptionId());
        Assertions.assertEquals("yehqbeivdlhydwb", response.iterator().next().resourceType());
        Assertions.assertEquals("fgrlpun", response.iterator().next().resourceLocation());
        Assertions.assertEquals("jlkesmmpath", response.iterator().next().resourceGroup());
        Assertions.assertEquals("ta", response.iterator().next().resourceTags());
        Assertions.assertEquals("e", response.iterator().next().policyAssignmentName());
        Assertions.assertEquals("iiwllbvgwzsf", response.iterator().next().policyAssignmentOwner());
        Assertions.assertEquals("edous", response.iterator().next().policyAssignmentParameters());
        Assertions.assertEquals("tjtgravaqogfkb", response.iterator().next().policyAssignmentScope());
        Assertions.assertEquals("auzlqbtxxw", response.iterator().next().policyDefinitionName());
        Assertions.assertEquals("h", response.iterator().next().policyDefinitionAction());
        Assertions.assertEquals("zudrtpzk", response.iterator().next().policyDefinitionCategory());
        Assertions.assertEquals("eboywhczzqrhm", response.iterator().next().policySetDefinitionId());
        Assertions.assertEquals("qbedygisrzwn", response.iterator().next().policySetDefinitionName());
        Assertions.assertEquals("d", response.iterator().next().policySetDefinitionOwner());
        Assertions.assertEquals("jch", response.iterator().next().policySetDefinitionCategory());
        Assertions.assertEquals("mpwctoflds", response.iterator().next().policySetDefinitionParameters());
        Assertions.assertEquals("cdhz", response.iterator().next().managementGroupIds());
        Assertions.assertEquals("kbrfgdrwji", response.iterator().next().policyDefinitionReferenceId());
        Assertions.assertEquals("whfjsrwqrxe", response.iterator().next().complianceState());
        Assertions.assertEquals("gcwvrrmdqntycna", response.iterator().next().tenantId());
        Assertions.assertEquals("hvmaxgnuyeamcmhu", response.iterator().next().principalOid());
        Assertions.assertEquals("cehokw", response.iterator().next().components().get(0).id());
        Assertions.assertEquals("qtwloes", response.iterator().next().components().get(0).type());
        Assertions.assertEquals("ggvrbnyrukoilaci", response.iterator().next().components().get(0).name());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-01T06:51:52Z"),
            response.iterator().next().components().get(0).timestamp());
        Assertions.assertEquals("leipjl", response.iterator().next().components().get(0).tenantId());
        Assertions.assertEquals("yxpzruzythqk", response.iterator().next().components().get(0).principalOid());
        Assertions.assertEquals("hbgxvel", response.iterator().next().components().get(0).policyDefinitionAction());
    }
}
