// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.policyinsights.models.CheckRestrictionsRequest;
import com.azure.resourcemanager.policyinsights.models.CheckRestrictionsResourceDetails;
import com.azure.resourcemanager.policyinsights.models.PendingField;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CheckRestrictionsRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CheckRestrictionsRequest model = BinaryData.fromString(
            "{\"resourceDetails\":{\"resourceContent\":\"datais\",\"apiVersion\":\"rnxzh\",\"scope\":\"exrxzbujrtrhq\"},\"pendingFields\":[{\"field\":\"evkh\",\"values\":[\"nzonzl\",\"piqywnc\",\"jtszcof\",\"zehtdhgb\"]},{\"field\":\"k\",\"values\":[\"ljeamu\",\"vzmlovuanashcxl\",\"mjerbdk\",\"lvidizozs\"]},{\"field\":\"bccxjmonfdgn\",\"values\":[\"ypuuwwltvuqjctze\",\"keifzzhmkdasv\",\"lyhb\"]}]}")
            .toObject(CheckRestrictionsRequest.class);
        Assertions.assertEquals("rnxzh", model.resourceDetails().apiVersion());
        Assertions.assertEquals("exrxzbujrtrhq", model.resourceDetails().scope());
        Assertions.assertEquals("evkh", model.pendingFields().get(0).field());
        Assertions.assertEquals("nzonzl", model.pendingFields().get(0).values().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CheckRestrictionsRequest model = new CheckRestrictionsRequest()
            .withResourceDetails(new CheckRestrictionsResourceDetails().withResourceContent("datais")
                .withApiVersion("rnxzh")
                .withScope("exrxzbujrtrhq"))
            .withPendingFields(Arrays.asList(
                new PendingField().withField("evkh")
                    .withValues(Arrays.asList("nzonzl", "piqywnc", "jtszcof", "zehtdhgb")),
                new PendingField().withField("k")
                    .withValues(Arrays.asList("ljeamu", "vzmlovuanashcxl", "mjerbdk", "lvidizozs")),
                new PendingField().withField("bccxjmonfdgn")
                    .withValues(Arrays.asList("ypuuwwltvuqjctze", "keifzzhmkdasv", "lyhb"))));
        model = BinaryData.fromObject(model).toObject(CheckRestrictionsRequest.class);
        Assertions.assertEquals("rnxzh", model.resourceDetails().apiVersion());
        Assertions.assertEquals("exrxzbujrtrhq", model.resourceDetails().scope());
        Assertions.assertEquals("evkh", model.pendingFields().get(0).field());
        Assertions.assertEquals("nzonzl", model.pendingFields().get(0).values().get(0));
    }
}
