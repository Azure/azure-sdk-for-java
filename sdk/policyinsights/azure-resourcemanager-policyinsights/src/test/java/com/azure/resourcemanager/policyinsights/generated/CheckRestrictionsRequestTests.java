// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.policyinsights.models.CheckRestrictionsRequest;
import com.azure.resourcemanager.policyinsights.models.CheckRestrictionsResourceDetails;
import com.azure.resourcemanager.policyinsights.models.PendingField;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CheckRestrictionsRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CheckRestrictionsRequest model = BinaryData.fromString(
            "{\"resourceDetails\":{\"resourceContent\":\"dataiflrzpasccbiu\",\"apiVersion\":\"zdlyjdfqw\",\"scope\":\"yoqufdvruz\"},\"pendingFields\":[{\"field\":\"ojhp\",\"values\":[\"nmdxotngfd\",\"ugeyzihgrkyuiza\"]},{\"field\":\"snmfpphojeevy\",\"values\":[\"sgzfczbg\"]},{\"field\":\"mfg\",\"values\":[\"lqgleohibet\",\"luan\"]}],\"includeAuditEffect\":true}")
            .toObject(CheckRestrictionsRequest.class);
        Assertions.assertEquals("zdlyjdfqw", model.resourceDetails().apiVersion());
        Assertions.assertEquals("yoqufdvruz", model.resourceDetails().scope());
        Assertions.assertEquals("ojhp", model.pendingFields().get(0).field());
        Assertions.assertEquals("nmdxotngfd", model.pendingFields().get(0).values().get(0));
        Assertions.assertTrue(model.includeAuditEffect());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CheckRestrictionsRequest model = new CheckRestrictionsRequest()
            .withResourceDetails(new CheckRestrictionsResourceDetails().withResourceContent("dataiflrzpasccbiu")
                .withApiVersion("zdlyjdfqw")
                .withScope("yoqufdvruz"))
            .withPendingFields(Arrays.asList(
                new PendingField().withField("ojhp").withValues(Arrays.asList("nmdxotngfd", "ugeyzihgrkyuiza")),
                new PendingField().withField("snmfpphojeevy").withValues(Arrays.asList("sgzfczbg")),
                new PendingField().withField("mfg").withValues(Arrays.asList("lqgleohibet", "luan"))))
            .withIncludeAuditEffect(true);
        model = BinaryData.fromObject(model).toObject(CheckRestrictionsRequest.class);
        Assertions.assertEquals("zdlyjdfqw", model.resourceDetails().apiVersion());
        Assertions.assertEquals("yoqufdvruz", model.resourceDetails().scope());
        Assertions.assertEquals("ojhp", model.pendingFields().get(0).field());
        Assertions.assertEquals("nmdxotngfd", model.pendingFields().get(0).values().get(0));
        Assertions.assertTrue(model.includeAuditEffect());
    }
}
