// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.policyinsights.models.ExpressionEvaluationDetails;
import org.junit.jupiter.api.Assertions;

public final class ExpressionEvaluationDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ExpressionEvaluationDetails model = BinaryData.fromString(
            "{\"result\":\"v\",\"expression\":\"ovqfzge\",\"expressionKind\":\"dftuljltduce\",\"path\":\"tmczuomejwcwwqi\",\"expressionValue\":\"datanssxmojmsvpk\",\"targetValue\":\"datarvkwc\",\"operator\":\"ql\"}")
            .toObject(ExpressionEvaluationDetails.class);
        Assertions.assertEquals("v", model.result());
        Assertions.assertEquals("ovqfzge", model.expression());
        Assertions.assertEquals("tmczuomejwcwwqi", model.path());
        Assertions.assertEquals("ql", model.operator());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ExpressionEvaluationDetails model = new ExpressionEvaluationDetails().withResult("v")
            .withExpression("ovqfzge")
            .withPath("tmczuomejwcwwqi")
            .withExpressionValue("datanssxmojmsvpk")
            .withTargetValue("datarvkwc")
            .withOperator("ql");
        model = BinaryData.fromObject(model).toObject(ExpressionEvaluationDetails.class);
        Assertions.assertEquals("v", model.result());
        Assertions.assertEquals("ovqfzge", model.expression());
        Assertions.assertEquals("tmczuomejwcwwqi", model.path());
        Assertions.assertEquals("ql", model.operator());
    }
}
