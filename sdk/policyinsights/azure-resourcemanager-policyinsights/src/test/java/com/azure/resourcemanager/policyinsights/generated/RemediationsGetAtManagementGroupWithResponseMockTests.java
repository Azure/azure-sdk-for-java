// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.Remediation;
import com.azure.resourcemanager.policyinsights.models.ResourceDiscoveryMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RemediationsGetAtManagementGroupWithResponseMockTests {
    @Test
    public void testGetAtManagementGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"policyAssignmentId\":\"cgqyhleseyq\",\"policyDefinitionReferenceId\":\"vyeldot\",\"resourceDiscoveryMode\":\"ExistingNonCompliant\",\"provisioningState\":\"wiswskukjtasbvw\",\"createdOn\":\"2021-10-11T15:26:48Z\",\"lastUpdatedOn\":\"2021-09-30T12:44:35Z\",\"filters\":{\"locations\":[\"fkndl\",\"vtwknvgmmbugt\",\"watmqa\",\"kueatgroeshoy\"]},\"deploymentStatus\":{\"totalDeployments\":294985788,\"successfulDeployments\":593333804,\"failedDeployments\":254519596},\"statusMessage\":\"faoytehqpuv\",\"correlationId\":\"vqmtdwckygroejn\",\"resourceCount\":1138069123,\"parallelDeployments\":995715779,\"failureThreshold\":{\"percentage\":66.81651}},\"id\":\"br\",\"name\":\"eqy\",\"type\":\"kceysfaqegplw\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Remediation response = manager.remediations()
            .getAtManagementGroupWithResponse("czpgvdwnapfdq", "owftptnuwjtks", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("cgqyhleseyq", response.policyAssignmentId());
        Assertions.assertEquals("vyeldot", response.policyDefinitionReferenceId());
        Assertions.assertEquals(ResourceDiscoveryMode.EXISTING_NON_COMPLIANT, response.resourceDiscoveryMode());
        Assertions.assertEquals("fkndl", response.filters().locations().get(0));
        Assertions.assertEquals(1138069123, response.resourceCount());
        Assertions.assertEquals(995715779, response.parallelDeployments());
        Assertions.assertEquals(66.81651F, response.failureThreshold().percentage());
    }
}
