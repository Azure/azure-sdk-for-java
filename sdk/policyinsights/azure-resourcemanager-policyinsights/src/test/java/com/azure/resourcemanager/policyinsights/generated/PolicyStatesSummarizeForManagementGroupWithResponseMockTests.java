// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.PolicyStatesSummaryResourceType;
import com.azure.resourcemanager.policyinsights.models.SummarizeResults;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PolicyStatesSummarizeForManagementGroupWithResponseMockTests {
    @Test
    public void testSummarizeForManagementGroupWithResponse() throws Exception {
        String responseStr
            = "{\"@odata.context\":\"ibb\",\"@odata.count\":1982244532,\"value\":[{\"@odata.id\":\"ladydgnhautwu\",\"@odata.context\":\"xzgpmn\",\"results\":{\"queryResultsUri\":\"eddqilwgdfpfqfpc\",\"nonCompliantResources\":869300781,\"nonCompliantPolicies\":192806540,\"resourceDetails\":[{},{},{}],\"policyDetails\":[{},{},{}],\"policyGroupDetails\":[{},{}]},\"policyAssignments\":[{\"policyAssignmentId\":\"xbsmtbljje\",\"policySetDefinitionId\":\"ci\",\"results\":{},\"policyDefinitions\":[{}],\"policyGroups\":[{}]},{\"policyAssignmentId\":\"brekqhsqhtf\",\"policySetDefinitionId\":\"pqbye\",\"results\":{},\"policyDefinitions\":[{},{}],\"policyGroups\":[{}]}]}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SummarizeResults response = manager.policyStates()
            .summarizeForManagementGroupWithResponse(PolicyStatesSummaryResourceType.LATEST, "umvpsimioyoigl", 91577457,
                OffsetDateTime.parse("2021-07-28T05:00:14Z"), OffsetDateTime.parse("2021-03-24T19:45:02Z"), "wnnra",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("eddqilwgdfpfqfpc", response.value().get(0).results().queryResultsUri());
        Assertions.assertEquals(869300781, response.value().get(0).results().nonCompliantResources());
        Assertions.assertEquals(192806540, response.value().get(0).results().nonCompliantPolicies());
        Assertions.assertEquals("xbsmtbljje", response.value().get(0).policyAssignments().get(0).policyAssignmentId());
        Assertions.assertEquals("ci", response.value().get(0).policyAssignments().get(0).policySetDefinitionId());
    }
}
