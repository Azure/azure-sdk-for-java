// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.Remediation;
import com.azure.resourcemanager.policyinsights.models.ResourceDiscoveryMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RemediationsListForResourceMockTests {
    @Test
    public void testListForResource() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"policyAssignmentId\":\"yovwzdbpqv\",\"policyDefinitionReferenceId\":\"efgv\",\"resourceDiscoveryMode\":\"ExistingNonCompliant\",\"provisioningState\":\"kcvtl\",\"createdOn\":\"2021-01-01T17:46:17Z\",\"lastUpdatedOn\":\"2020-12-21T13:08:22Z\",\"filters\":{\"locations\":[\"uartrhunlpiryky\"]},\"deploymentStatus\":{\"totalDeployments\":409182858,\"successfulDeployments\":355546006,\"failedDeployments\":1017219676},\"statusMessage\":\"reuykbbmnwagl\",\"correlationId\":\"xoe\",\"resourceCount\":1187567269,\"parallelDeployments\":558021080,\"failureThreshold\":{\"percentage\":79.390175}},\"id\":\"y\",\"name\":\"mvqdbpbhfckdvez\",\"type\":\"rcssbzhddubbnq\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Remediation> response = manager.remediations()
            .listForResource("ixymmpujivyql", 1752119196, "uvsmbms", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("yovwzdbpqv", response.iterator().next().policyAssignmentId());
        Assertions.assertEquals("efgv", response.iterator().next().policyDefinitionReferenceId());
        Assertions.assertEquals(ResourceDiscoveryMode.EXISTING_NON_COMPLIANT,
            response.iterator().next().resourceDiscoveryMode());
        Assertions.assertEquals("uartrhunlpiryky", response.iterator().next().filters().locations().get(0));
        Assertions.assertEquals(1187567269, response.iterator().next().resourceCount());
        Assertions.assertEquals(558021080, response.iterator().next().parallelDeployments());
        Assertions.assertEquals(79.390175F, response.iterator().next().failureThreshold().percentage());
    }
}
