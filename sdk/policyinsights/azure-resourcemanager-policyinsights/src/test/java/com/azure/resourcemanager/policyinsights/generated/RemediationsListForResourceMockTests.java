// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.Remediation;
import com.azure.resourcemanager.policyinsights.models.ResourceDiscoveryMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RemediationsListForResourceMockTests {
    @Test
    public void testListForResource() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"policyAssignmentId\":\"bsolronqqlmg\",\"policyDefinitionReferenceId\":\"qxsjxte\",\"resourceDiscoveryMode\":\"ReEvaluateCompliance\",\"provisioningState\":\"vuqbozoo\",\"createdOn\":\"2021-08-25T20:47:23Z\",\"lastUpdatedOn\":\"2021-04-23T05:23:08Z\",\"filters\":{\"locations\":[\"uzlbcnn\",\"t\"],\"resourceIds\":[\"awqytllhdyzm\",\"ckze\"]},\"deploymentStatus\":{\"totalDeployments\":1940153691,\"successfulDeployments\":159217756,\"failedDeployments\":417240457},\"statusMessage\":\"ymx\",\"correlationId\":\"abjkdtfohfao\",\"resourceCount\":1317708678,\"parallelDeployments\":636174520,\"failureThreshold\":{\"percentage\":51.47741}},\"id\":\"wdyjqurykcrrauee\",\"name\":\"csuehogddac\",\"type\":\"cbgydlqi\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Remediation> response
            = manager.remediations().listForResource("izjixlq", 1844439778, "ef", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("bsolronqqlmg", response.iterator().next().policyAssignmentId());
        Assertions.assertEquals("qxsjxte", response.iterator().next().policyDefinitionReferenceId());
        Assertions.assertEquals(ResourceDiscoveryMode.RE_EVALUATE_COMPLIANCE,
            response.iterator().next().resourceDiscoveryMode());
        Assertions.assertEquals("uzlbcnn", response.iterator().next().filters().locations().get(0));
        Assertions.assertEquals("awqytllhdyzm", response.iterator().next().filters().resourceIds().get(0));
        Assertions.assertEquals(1317708678, response.iterator().next().resourceCount());
        Assertions.assertEquals(636174520, response.iterator().next().parallelDeployments());
        Assertions.assertEquals(51.47741F, response.iterator().next().failureThreshold().percentage());
    }
}
