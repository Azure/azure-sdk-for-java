// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.ComponentPolicyStatesQueryResults;
import com.azure.resourcemanager.policyinsights.models.ComponentPolicyStatesResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ComponentPolicyStatesListQueryResultsForSubscriptionLevelPolicyAssignmentWithRespoMockTests {
    @Test
    public void testListQueryResultsForSubscriptionLevelPolicyAssignmentWithResponse() throws Exception {
        String responseStr
            = "{\"@odata.context\":\"l\",\"@odata.count\":2127109298,\"value\":[{\"@odata.id\":\"aw\",\"@odata.context\":\"xe\",\"timestamp\":\"2021-08-13T09:42:30Z\",\"componentId\":\"dxljzvdovbrble\",\"componentType\":\"prdaqcc\",\"componentName\":\"cbnygd\",\"resourceId\":\"cxwbp\",\"policyAssignmentId\":\"ykdigqzlrznda\",\"policyDefinitionId\":\"nidmjqmvytg\",\"subscriptionId\":\"qlarhqt\",\"resourceType\":\"caz\",\"resourceLocation\":\"d\",\"resourceGroup\":\"zffzjwztsmp\",\"policyAssignmentName\":\"ggr\",\"policyAssignmentOwner\":\"lgf\",\"policyAssignmentParameters\":\"tig\",\"policyAssignmentScope\":\"frrkdknczgorywnv\",\"policyDefinitionName\":\"tv\",\"policyDefinitionAction\":\"evdlh\",\"policyDefinitionCategory\":\"bkarbpyhssr\",\"policySetDefinitionId\":\"kpkpkocmacc\",\"policySetDefinitionName\":\"xxopyi\",\"policySetDefinitionOwner\":\"vspeslhwyykgvr\",\"policySetDefinitionCategory\":\"pumdd\",\"policySetDefinitionParameters\":\"ajk\",\"policyDefinitionReferenceId\":\"yddt\",\"complianceState\":\"c\",\"policyEvaluationDetails\":{\"evaluatedExpressions\":[{},{},{}],\"reason\":\"nbfbqvenqnxhg\"},\"policyDefinitionGroupNames\":[\"dwzejp\"],\"policyDefinitionVersion\":\"wz\",\"policySetDefinitionVersion\":\"mbpwdludayp\",\"policyAssignmentVersion\":\"didwmtffbvtzldzc\",\"\":{\"zuvigvl\":\"dataagwn\",\"q\":\"datahfrbzakpjt\"}},{\"@odata.id\":\"qpojpsucmximc\",\"@odata.context\":\"xyn\",\"timestamp\":\"2021-07-29T09:34:31Z\",\"componentId\":\"atkyvscbgngcr\",\"componentType\":\"xhirc\",\"componentName\":\"cvsvk\",\"resourceId\":\"bjolpyoklkv\",\"policyAssignmentId\":\"nadvhml\",\"policyDefinitionId\":\"oi\",\"subscriptionId\":\"wxxbht\",\"resourceType\":\"yioqe\",\"resourceLocation\":\"w\",\"resourceGroup\":\"szzgyk\",\"policyAssignmentName\":\"kawanvm\",\"policyAssignmentOwner\":\"vg\",\"policyAssignmentParameters\":\"crbkompnbnfgywe\",\"policyAssignmentScope\":\"bepgcmahiwfry\",\"policyDefinitionName\":\"kchkapit\",\"policyDefinitionAction\":\"shfyf\",\"policyDefinitionCategory\":\"ibjepzwhj\",\"policySetDefinitionId\":\"fdgbggcjxzhbl\",\"policySetDefinitionName\":\"wehs\",\"policySetDefinitionOwner\":\"ym\",\"policySetDefinitionCategory\":\"bhdosmbngkql\",\"policySetDefinitionParameters\":\"zduvxdmx\",\"policyDefinitionReferenceId\":\"atmdmn\",\"complianceState\":\"enxoirxyddm\",\"policyEvaluationDetails\":{\"evaluatedExpressions\":[{}],\"reason\":\"sj\"},\"policyDefinitionGroupNames\":[\"o\"],\"policyDefinitionVersion\":\"nntwg\",\"policySetDefinitionVersion\":\"yohpsapzupzwwytb\",\"policyAssignmentVersion\":\"zghximkgfmx\",\"\":{\"cxmmqmtsjkyjr\":\"datajnpyriwnto\",\"h\":\"dataxwdonbexftedau\",\"tlfozuumrtgjqgac\":\"dataeggzgrn\"}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ComponentPolicyStatesQueryResults response = manager.componentPolicyStates()
            .listQueryResultsForSubscriptionLevelPolicyAssignmentWithResponse("xxf", "fpcrtnuguef",
                ComponentPolicyStatesResource.LATEST, 973899154, "jt", "bdveywetkrhl",
                OffsetDateTime.parse("2021-08-07T22:59:48Z"), OffsetDateTime.parse("2021-04-15T07:28:47Z"), "cnw",
                "pfgsvbbvaqdljnp", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("nbfbqvenqnxhg", response.value().get(0).policyEvaluationDetails().reason());
    }
}
