// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.Remediation;
import com.azure.resourcemanager.policyinsights.models.ResourceDiscoveryMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RemediationsDeleteAtResourceWithResponseMockTests {
    @Test
    public void testDeleteAtResourceWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"policyAssignmentId\":\"gqphrgfnzhctmjts\",\"policyDefinitionReferenceId\":\"pbcbcpzar\",\"resourceDiscoveryMode\":\"ExistingNonCompliant\",\"provisioningState\":\"acdldtzmp\",\"createdOn\":\"2021-03-27T09:34:07Z\",\"lastUpdatedOn\":\"2021-03-25T20:30:45Z\",\"filters\":{\"locations\":[\"shnuqnd\",\"izupfkhu\",\"tu\",\"zx\"],\"resourceIds\":[\"vtvegwqiukvzw\"]},\"deploymentStatus\":{\"totalDeployments\":798786113,\"successfulDeployments\":772209790,\"failedDeployments\":552268213},\"statusMessage\":\"gkskjivbss\",\"correlationId\":\"jqf\",\"resourceCount\":1934795976,\"parallelDeployments\":879775037,\"failureThreshold\":{\"percentage\":31.532686}},\"id\":\"umilhwuitrdex\",\"name\":\"iono\",\"type\":\"ninbdbzsxcwqqrs\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Remediation response = manager.remediations()
            .deleteAtResourceWithResponse("aewse", "vesk", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("gqphrgfnzhctmjts", response.policyAssignmentId());
        Assertions.assertEquals("pbcbcpzar", response.policyDefinitionReferenceId());
        Assertions.assertEquals(ResourceDiscoveryMode.EXISTING_NON_COMPLIANT, response.resourceDiscoveryMode());
        Assertions.assertEquals("shnuqnd", response.filters().locations().get(0));
        Assertions.assertEquals("vtvegwqiukvzw", response.filters().resourceIds().get(0));
        Assertions.assertEquals(1934795976, response.resourceCount());
        Assertions.assertEquals(879775037, response.parallelDeployments());
        Assertions.assertEquals(31.532686F, response.failureThreshold().percentage());
    }
}
