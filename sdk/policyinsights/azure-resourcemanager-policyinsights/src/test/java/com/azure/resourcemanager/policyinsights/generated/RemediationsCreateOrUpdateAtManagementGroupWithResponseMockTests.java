// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.fluent.models.RemediationInner;
import com.azure.resourcemanager.policyinsights.models.Remediation;
import com.azure.resourcemanager.policyinsights.models.RemediationFilters;
import com.azure.resourcemanager.policyinsights.models.RemediationPropertiesFailureThreshold;
import com.azure.resourcemanager.policyinsights.models.ResourceDiscoveryMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RemediationsCreateOrUpdateAtManagementGroupWithResponseMockTests {
    @Test
    public void testCreateOrUpdateAtManagementGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"policyAssignmentId\":\"bxiwkgfbqljn\",\"policyDefinitionReferenceId\":\"hychocokuleh\",\"resourceDiscoveryMode\":\"ReEvaluateCompliance\",\"provisioningState\":\"rqffaweyurk\",\"createdOn\":\"2021-10-24T03:00:31Z\",\"lastUpdatedOn\":\"2021-02-15T19:07:31Z\",\"filters\":{\"locations\":[\"vjuqdbrxmrgchb\"]},\"deploymentStatus\":{\"totalDeployments\":1343178274,\"successfulDeployments\":257643221,\"failedDeployments\":764546754},\"statusMessage\":\"kbajbu\",\"correlationId\":\"gd\",\"resourceCount\":1181540168,\"parallelDeployments\":413827432,\"failureThreshold\":{\"percentage\":61.138447}},\"id\":\"evpmclujyxky\",\"name\":\"lzgsjgkzzlt\",\"type\":\"fhbzffovwmbjlzq\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Remediation response = manager.remediations()
            .createOrUpdateAtManagementGroupWithResponse("abe", "bbklqpxzuca", new RemediationInner()
                .withPolicyAssignmentId("dwwnl")
                .withPolicyDefinitionReferenceId("fwxudgnhg")
                .withResourceDiscoveryMode(ResourceDiscoveryMode.EXISTING_NON_COMPLIANT)
                .withFilters(
                    new RemediationFilters().withLocations(Arrays.asList("vdjjukyrdn", "odxahhxhqf", "qnvzoqgyipemch")))
                .withResourceCount(186967007)
                .withParallelDeployments(288209361)
                .withFailureThreshold(new RemediationPropertiesFailureThreshold().withPercentage(72.86869F)),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("bxiwkgfbqljn", response.policyAssignmentId());
        Assertions.assertEquals("hychocokuleh", response.policyDefinitionReferenceId());
        Assertions.assertEquals(ResourceDiscoveryMode.RE_EVALUATE_COMPLIANCE, response.resourceDiscoveryMode());
        Assertions.assertEquals("vjuqdbrxmrgchb", response.filters().locations().get(0));
        Assertions.assertEquals(1181540168, response.resourceCount());
        Assertions.assertEquals(413827432, response.parallelDeployments());
        Assertions.assertEquals(61.138447F, response.failureThreshold().percentage());
    }
}
