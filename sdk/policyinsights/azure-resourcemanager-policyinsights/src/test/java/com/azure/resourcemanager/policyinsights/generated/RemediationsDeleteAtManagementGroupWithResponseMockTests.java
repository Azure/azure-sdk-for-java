// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.Remediation;
import com.azure.resourcemanager.policyinsights.models.ResourceDiscoveryMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RemediationsDeleteAtManagementGroupWithResponseMockTests {
    @Test
    public void testDeleteAtManagementGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"policyAssignmentId\":\"w\",\"policyDefinitionReferenceId\":\"dacarvvlfnty\",\"resourceDiscoveryMode\":\"ExistingNonCompliant\",\"provisioningState\":\"iwenazero\",\"createdOn\":\"2021-09-30T09:20:49Z\",\"lastUpdatedOn\":\"2021-10-29T04:56:20Z\",\"filters\":{\"locations\":[\"xkdnwqapf\",\"sdpcvess\",\"zhhkuuipldqqc\",\"ekvalblhtjq\"]},\"deploymentStatus\":{\"totalDeployments\":1207141724,\"successfulDeployments\":269491033,\"failedDeployments\":792358698},\"statusMessage\":\"emxhzzy\",\"correlationId\":\"vusxiv\",\"resourceCount\":1331966854,\"parallelDeployments\":126053782,\"failureThreshold\":{\"percentage\":92.23593}},\"id\":\"ipsk\",\"name\":\"yzatvfuzkaft\",\"type\":\"vvruxwi\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Remediation response = manager.remediations()
            .deleteAtManagementGroupWithResponse("ysh", "ddkvbxgkqu", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("w", response.policyAssignmentId());
        Assertions.assertEquals("dacarvvlfnty", response.policyDefinitionReferenceId());
        Assertions.assertEquals(ResourceDiscoveryMode.EXISTING_NON_COMPLIANT, response.resourceDiscoveryMode());
        Assertions.assertEquals("xkdnwqapf", response.filters().locations().get(0));
        Assertions.assertEquals(1331966854, response.resourceCount());
        Assertions.assertEquals(126053782, response.parallelDeployments());
        Assertions.assertEquals(92.23593F, response.failureThreshold().percentage());
    }
}
