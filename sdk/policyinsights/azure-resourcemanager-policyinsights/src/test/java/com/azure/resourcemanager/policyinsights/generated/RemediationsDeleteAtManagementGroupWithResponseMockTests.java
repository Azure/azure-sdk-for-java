// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.Remediation;
import com.azure.resourcemanager.policyinsights.models.ResourceDiscoveryMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RemediationsDeleteAtManagementGroupWithResponseMockTests {
    @Test
    public void testDeleteAtManagementGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"policyAssignmentId\":\"eskvcuartrhun\",\"policyDefinitionReferenceId\":\"iryky\",\"resourceDiscoveryMode\":\"ReEvaluateCompliance\",\"provisioningState\":\"fqivj\",\"createdOn\":\"2021-01-27T00:50:28Z\",\"lastUpdatedOn\":\"2020-12-27T17:40:12Z\",\"filters\":{\"locations\":[\"nwagl\",\"bxoeeonql\",\"fwmyymv\"],\"resourceIds\":[\"pb\",\"fckdvez\",\"rcssbzhddubbnq\",\"b\"]},\"deploymentStatus\":{\"totalDeployments\":1783635692,\"successfulDeployments\":1920822279,\"failedDeployments\":1165708950},\"statusMessage\":\"vawu\",\"correlationId\":\"qjtiogqgdm\",\"resourceCount\":18898438,\"parallelDeployments\":705862749,\"failureThreshold\":{\"percentage\":11.508549}},\"id\":\"ohiygspn\",\"name\":\"onhpcz\",\"type\":\"kmktpvwxqcseh\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Remediation response = manager.remediations()
            .deleteAtManagementGroupWithResponse("befgvmxn", "kcvtl", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("eskvcuartrhun", response.policyAssignmentId());
        Assertions.assertEquals("iryky", response.policyDefinitionReferenceId());
        Assertions.assertEquals(ResourceDiscoveryMode.RE_EVALUATE_COMPLIANCE, response.resourceDiscoveryMode());
        Assertions.assertEquals("nwagl", response.filters().locations().get(0));
        Assertions.assertEquals("pb", response.filters().resourceIds().get(0));
        Assertions.assertEquals(18898438, response.resourceCount());
        Assertions.assertEquals(705862749, response.parallelDeployments());
        Assertions.assertEquals(11.508549F, response.failureThreshold().percentage());
    }
}
