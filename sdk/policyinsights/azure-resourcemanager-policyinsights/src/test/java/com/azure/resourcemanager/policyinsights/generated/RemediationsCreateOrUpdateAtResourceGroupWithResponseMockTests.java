// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.Remediation;
import com.azure.resourcemanager.policyinsights.models.RemediationFilters;
import com.azure.resourcemanager.policyinsights.models.RemediationPropertiesFailureThreshold;
import com.azure.resourcemanager.policyinsights.models.ResourceDiscoveryMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RemediationsCreateOrUpdateAtResourceGroupWithResponseMockTests {
    @Test
    public void testCreateOrUpdateAtResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"policyAssignmentId\":\"mkmfdjxyxgbkkq\",\"policyDefinitionReferenceId\":\"cteoedlrslsk\",\"resourceDiscoveryMode\":\"ExistingNonCompliant\",\"provisioningState\":\"vjnzdpvocojhpcna\",\"createdOn\":\"2021-02-18T09:54:57Z\",\"lastUpdatedOn\":\"2021-08-22T03:29:14Z\",\"filters\":{\"locations\":[\"texvzilmhivzk\",\"ww\",\"cknrzda\",\"lskzptjxul\"],\"resourceIds\":[\"cyrthxqlehm\",\"gcj\"]},\"deploymentStatus\":{\"totalDeployments\":460712227,\"successfulDeployments\":115643513,\"failedDeployments\":1413570369},\"statusMessage\":\"mvfejvqnttmbqd\",\"correlationId\":\"zfivfokpysthhzag\",\"resourceCount\":694414147,\"parallelDeployments\":772769189,\"failureThreshold\":{\"percentage\":83.670296}},\"id\":\"enuzejg\",\"name\":\"kvebaqszll\",\"type\":\"zlsmmdqgmihzpim\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Remediation response = manager.remediations()
            .define("zbcyksiv")
            .withExistingResourceGroup("pcbbprtugav")
            .withPolicyAssignmentId("gd")
            .withPolicyDefinitionReferenceId("bfcmkrfts")
            .withResourceDiscoveryMode(ResourceDiscoveryMode.EXISTING_NON_COMPLIANT)
            .withFilters(new RemediationFilters().withLocations(Arrays.asList("wkloozr", "txvcm"))
                .withResourceIds(Arrays.asList("nlcpxxviry", "yngjgvrquvpygglp")))
            .withResourceCount(1967742981)
            .withParallelDeployments(1746265132)
            .withFailureThreshold(new RemediationPropertiesFailureThreshold().withPercentage(47.12043F))
            .create();

        Assertions.assertEquals("mkmfdjxyxgbkkq", response.policyAssignmentId());
        Assertions.assertEquals("cteoedlrslsk", response.policyDefinitionReferenceId());
        Assertions.assertEquals(ResourceDiscoveryMode.EXISTING_NON_COMPLIANT, response.resourceDiscoveryMode());
        Assertions.assertEquals("texvzilmhivzk", response.filters().locations().get(0));
        Assertions.assertEquals("cyrthxqlehm", response.filters().resourceIds().get(0));
        Assertions.assertEquals(694414147, response.resourceCount());
        Assertions.assertEquals(772769189, response.parallelDeployments());
        Assertions.assertEquals(83.670296F, response.failureThreshold().percentage());
    }
}
