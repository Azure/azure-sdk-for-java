// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.Remediation;
import com.azure.resourcemanager.policyinsights.models.ResourceDiscoveryMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RemediationsCancelAtManagementGroupWithResponseMockTests {
    @Test
    public void testCancelAtManagementGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"policyAssignmentId\":\"jijkgqxnhmbke\",\"policyDefinitionReferenceId\":\"jauj\",\"resourceDiscoveryMode\":\"ExistingNonCompliant\",\"provisioningState\":\"nggiycwkdtaa\",\"createdOn\":\"2021-08-03T08:44:53Z\",\"lastUpdatedOn\":\"2021-09-24T08:19:51Z\",\"filters\":{\"locations\":[\"mrrqmbzmqkratb\",\"xwbjs\",\"dbirkfpksokdgo\"]},\"deploymentStatus\":{\"totalDeployments\":1586844397,\"successfulDeployments\":389477367,\"failedDeployments\":1626600665},\"statusMessage\":\"bguzozky\",\"correlationId\":\"nfnzhhh\",\"resourceCount\":1781850881,\"parallelDeployments\":1730799148,\"failureThreshold\":{\"percentage\":97.07918}},\"id\":\"tycy\",\"name\":\"rnroohguabzoghk\",\"type\":\"dp\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Remediation response = manager.remediations()
            .cancelAtManagementGroupWithResponse("dzyqe", "xyivpinbm", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("jijkgqxnhmbke", response.policyAssignmentId());
        Assertions.assertEquals("jauj", response.policyDefinitionReferenceId());
        Assertions.assertEquals(ResourceDiscoveryMode.EXISTING_NON_COMPLIANT, response.resourceDiscoveryMode());
        Assertions.assertEquals("mrrqmbzmqkratb", response.filters().locations().get(0));
        Assertions.assertEquals(1781850881, response.resourceCount());
        Assertions.assertEquals(1730799148, response.parallelDeployments());
        Assertions.assertEquals(97.07918F, response.failureThreshold().percentage());
    }
}
