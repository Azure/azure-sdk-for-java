// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.Remediation;
import com.azure.resourcemanager.policyinsights.models.ResourceDiscoveryMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RemediationsDeleteAtSubscriptionWithResponseMockTests {
    @Test
    public void testDeleteAtSubscriptionWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"policyAssignmentId\":\"kbuhzaca\",\"policyDefinitionReferenceId\":\"yltcoqcuj\",\"resourceDiscoveryMode\":\"ReEvaluateCompliance\",\"provisioningState\":\"zakuejk\",\"createdOn\":\"2021-08-24T16:28:53Z\",\"lastUpdatedOn\":\"2021-01-30T19:31:06Z\",\"filters\":{\"locations\":[\"fqcvovj\",\"f\",\"csjml\",\"e\"]},\"deploymentStatus\":{\"totalDeployments\":1935171064,\"successfulDeployments\":1377319728,\"failedDeployments\":2023692780},\"statusMessage\":\"egthortudawl\",\"correlationId\":\"felqerpptc\",\"resourceCount\":230855548,\"parallelDeployments\":1033659590,\"failureThreshold\":{\"percentage\":4.9547615}},\"id\":\"ilialwcjgc\",\"name\":\"bbcccgz\",\"type\":\"raoxnyuff\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Remediation response
            = manager.remediations().deleteAtSubscriptionWithResponse("l", com.azure.core.util.Context.NONE).getValue();

        Assertions.assertEquals("kbuhzaca", response.policyAssignmentId());
        Assertions.assertEquals("yltcoqcuj", response.policyDefinitionReferenceId());
        Assertions.assertEquals(ResourceDiscoveryMode.RE_EVALUATE_COMPLIANCE, response.resourceDiscoveryMode());
        Assertions.assertEquals("fqcvovj", response.filters().locations().get(0));
        Assertions.assertEquals(230855548, response.resourceCount());
        Assertions.assertEquals(1033659590, response.parallelDeployments());
        Assertions.assertEquals(4.9547615F, response.failureThreshold().percentage());
    }
}
