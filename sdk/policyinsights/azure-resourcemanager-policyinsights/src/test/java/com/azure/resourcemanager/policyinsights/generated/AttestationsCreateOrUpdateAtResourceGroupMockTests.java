// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.Attestation;
import com.azure.resourcemanager.policyinsights.models.AttestationEvidence;
import com.azure.resourcemanager.policyinsights.models.ComplianceState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AttestationsCreateOrUpdateAtResourceGroupMockTests {
    @Test
    public void testCreateOrUpdateAtResourceGroup() throws Exception {
        String responseStr
            = "{\"properties\":{\"policyAssignmentId\":\"qtrefe\",\"policyDefinitionReferenceId\":\"flxcjffzwncvde\",\"complianceState\":\"NonCompliant\",\"expiresOn\":\"2021-10-16T18:02:27Z\",\"owner\":\"pcjptnnt\",\"comments\":\"cjqpzjvnpjr\",\"evidence\":[{\"description\":\"sjbi\",\"sourceUri\":\"gwviqehmdq\"},{\"description\":\"olidx\",\"sourceUri\":\"sfvkjcimbrsvxpht\"},{\"description\":\"hptjlrkdcyzhimm\",\"sourceUri\":\"tdtftmizuzjd\"},{\"description\":\"gyzcslazprkq\",\"sourceUri\":\"imxpggktteagb\"}],\"provisioningState\":\"Succeeded\",\"lastComplianceStateChangeAt\":\"2021-07-11T11:05:42Z\",\"assessmentDate\":\"2021-10-25T06:05Z\",\"metadata\":\"datab\"},\"id\":\"fmxgl\",\"name\":\"wdjraurfshznurtt\",\"type\":\"haaaxxdcdjm\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Attestation response = manager.attestations()
            .define("cradxsew")
            .withExistingResourceGroup("odapqokhdy")
            .withPolicyAssignmentId("e")
            .withPolicyDefinitionReferenceId("fapmqnmelyksy")
            .withComplianceState(ComplianceState.NON_COMPLIANT)
            .withExpiresOn(OffsetDateTime.parse("2021-03-25T12:18:54Z"))
            .withOwner("msln")
            .withComments("kqvzlbbbajdexq")
            .withEvidence(
                Arrays.asList(new AttestationEvidence().withDescription("xizbfzet").withSourceUri("zwhpnbmajv"),
                    new AttestationEvidence().withDescription("xtvvxna").withSourceUri("ixbka"),
                    new AttestationEvidence().withDescription("fm").withSourceUri("gfwhrmvlaknujmwx"),
                    new AttestationEvidence().withDescription("zblxna").withSourceUri("smfndcbsyhludzjk")))
            .withAssessmentDate(OffsetDateTime.parse("2021-10-14T01:06:03Z"))
            .withMetadata("datamdtacntjn")
            .create();

        Assertions.assertEquals("qtrefe", response.policyAssignmentId());
        Assertions.assertEquals("flxcjffzwncvde", response.policyDefinitionReferenceId());
        Assertions.assertEquals(ComplianceState.NON_COMPLIANT, response.complianceState());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-16T18:02:27Z"), response.expiresOn());
        Assertions.assertEquals("pcjptnnt", response.owner());
        Assertions.assertEquals("cjqpzjvnpjr", response.comments());
        Assertions.assertEquals("sjbi", response.evidence().get(0).description());
        Assertions.assertEquals("gwviqehmdq", response.evidence().get(0).sourceUri());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-25T06:05Z"), response.assessmentDate());
    }
}
