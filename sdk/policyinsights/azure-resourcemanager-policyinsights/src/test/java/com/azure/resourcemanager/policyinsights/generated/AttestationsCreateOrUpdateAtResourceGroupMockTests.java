// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.policyinsights.PolicyInsightsManager;
import com.azure.resourcemanager.policyinsights.models.Attestation;
import com.azure.resourcemanager.policyinsights.models.AttestationEvidence;
import com.azure.resourcemanager.policyinsights.models.ComplianceState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AttestationsCreateOrUpdateAtResourceGroupMockTests {
    @Test
    public void testCreateOrUpdateAtResourceGroup() throws Exception {
        String responseStr
            = "{\"properties\":{\"policyAssignmentId\":\"jrkblndyclwgycv\",\"policyDefinitionReferenceId\":\"nzjcyqqzhembtbw\",\"complianceState\":\"Unknown\",\"expiresOn\":\"2021-05-12T22:47:43Z\",\"owner\":\"pisjdleajv\",\"comments\":\"vl\",\"evidence\":[{\"description\":\"sfxipjeop\",\"sourceUri\":\"gocjomlu\"},{\"description\":\"azusjcd\",\"sourceUri\":\"slgdwz\"}],\"provisioningState\":\"Succeeded\",\"lastComplianceStateChangeAt\":\"2021-06-12T05:36:18Z\",\"assessmentDate\":\"2021-08-16T12:44:38Z\",\"metadata\":\"datayzoqzkmqcwwsjnk\"},\"id\":\"xepbntqq\",\"name\":\"w\",\"type\":\"fgsqxile\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PolicyInsightsManager manager = PolicyInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Attestation response
            = manager.attestations()
                .define("nrfcqu")
                .withExistingResourceGroup("wkyeahhhutpu")
                .withPolicyAssignmentId("m")
                .withPolicyDefinitionReferenceId("hpi")
                .withComplianceState(ComplianceState.UNKNOWN)
                .withExpiresOn(OffsetDateTime.parse("2021-07-20T13:22:45Z"))
                .withOwner("jpxp")
                .withComments("hdwyqqidqimlg")
                .withEvidence(Arrays.asList(
                    new AttestationEvidence().withDescription("mdgjvxlhm").withSourceUri("heftyaphqeofytl"),
                    new AttestationEvidence().withDescription("lowmcm").withSourceUri("ixuanccqvjfdgfq"),
                    new AttestationEvidence().withDescription("quxpjhcfaara").withSourceUri("iovmufzgugrblwal")))
                .withAssessmentDate(OffsetDateTime.parse("2021-11-22T20:42:55Z"))
                .withMetadata("datatgcsm")
                .create();

        Assertions.assertEquals("jrkblndyclwgycv", response.policyAssignmentId());
        Assertions.assertEquals("nzjcyqqzhembtbw", response.policyDefinitionReferenceId());
        Assertions.assertEquals(ComplianceState.UNKNOWN, response.complianceState());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-12T22:47:43Z"), response.expiresOn());
        Assertions.assertEquals("pisjdleajv", response.owner());
        Assertions.assertEquals("vl", response.comments());
        Assertions.assertEquals("sfxipjeop", response.evidence().get(0).description());
        Assertions.assertEquals("gocjomlu", response.evidence().get(0).sourceUri());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-16T12:44:38Z"), response.assessmentDate());
    }
}
