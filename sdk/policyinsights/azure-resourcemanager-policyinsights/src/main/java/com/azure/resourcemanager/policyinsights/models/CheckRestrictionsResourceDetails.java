// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The information about the resource that will be evaluated.
 */
@Fluent
public final class CheckRestrictionsResourceDetails implements JsonSerializable<CheckRestrictionsResourceDetails> {
    /*
     * The resource content. This should include whatever properties are already known and can be a partial set of all
     * resource properties.
     */
    private Object resourceContent;

    /*
     * The api-version of the resource content.
     */
    private String apiVersion;

    /*
     * The scope where the resource is being created. For example, if the resource is a child resource this would be the
     * parent resource's resource ID.
     */
    private String scope;

    /**
     * Creates an instance of CheckRestrictionsResourceDetails class.
     */
    public CheckRestrictionsResourceDetails() {
    }

    /**
     * Get the resourceContent property: The resource content. This should include whatever properties are already known
     * and can be a partial set of all resource properties.
     * 
     * @return the resourceContent value.
     */
    public Object resourceContent() {
        return this.resourceContent;
    }

    /**
     * Set the resourceContent property: The resource content. This should include whatever properties are already known
     * and can be a partial set of all resource properties.
     * 
     * @param resourceContent the resourceContent value to set.
     * @return the CheckRestrictionsResourceDetails object itself.
     */
    public CheckRestrictionsResourceDetails withResourceContent(Object resourceContent) {
        this.resourceContent = resourceContent;
        return this;
    }

    /**
     * Get the apiVersion property: The api-version of the resource content.
     * 
     * @return the apiVersion value.
     */
    public String apiVersion() {
        return this.apiVersion;
    }

    /**
     * Set the apiVersion property: The api-version of the resource content.
     * 
     * @param apiVersion the apiVersion value to set.
     * @return the CheckRestrictionsResourceDetails object itself.
     */
    public CheckRestrictionsResourceDetails withApiVersion(String apiVersion) {
        this.apiVersion = apiVersion;
        return this;
    }

    /**
     * Get the scope property: The scope where the resource is being created. For example, if the resource is a child
     * resource this would be the parent resource's resource ID.
     * 
     * @return the scope value.
     */
    public String scope() {
        return this.scope;
    }

    /**
     * Set the scope property: The scope where the resource is being created. For example, if the resource is a child
     * resource this would be the parent resource's resource ID.
     * 
     * @param scope the scope value to set.
     * @return the CheckRestrictionsResourceDetails object itself.
     */
    public CheckRestrictionsResourceDetails withScope(String scope) {
        this.scope = scope;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (resourceContent() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property resourceContent in model CheckRestrictionsResourceDetails"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(CheckRestrictionsResourceDetails.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeUntypedField("resourceContent", this.resourceContent);
        jsonWriter.writeStringField("apiVersion", this.apiVersion);
        jsonWriter.writeStringField("scope", this.scope);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CheckRestrictionsResourceDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CheckRestrictionsResourceDetails if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CheckRestrictionsResourceDetails.
     */
    public static CheckRestrictionsResourceDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CheckRestrictionsResourceDetails deserializedCheckRestrictionsResourceDetails
                = new CheckRestrictionsResourceDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("resourceContent".equals(fieldName)) {
                    deserializedCheckRestrictionsResourceDetails.resourceContent = reader.readUntyped();
                } else if ("apiVersion".equals(fieldName)) {
                    deserializedCheckRestrictionsResourceDetails.apiVersion = reader.getString();
                } else if ("scope".equals(fieldName)) {
                    deserializedCheckRestrictionsResourceDetails.scope = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCheckRestrictionsResourceDetails;
        });
    }
}
