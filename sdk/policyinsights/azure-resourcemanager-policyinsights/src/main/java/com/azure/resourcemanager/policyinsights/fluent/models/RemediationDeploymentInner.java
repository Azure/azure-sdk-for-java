// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.management.exception.ManagementError;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Details of a single deployment created by the remediation. */
@Immutable
public final class RemediationDeploymentInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(RemediationDeploymentInner.class);

    /*
     * Resource ID of the resource that is being remediated by the deployment.
     */
    @JsonProperty(value = "remediatedResourceId", access = JsonProperty.Access.WRITE_ONLY)
    private String remediatedResourceId;

    /*
     * Resource ID of the template deployment that will remediate the resource.
     */
    @JsonProperty(value = "deploymentId", access = JsonProperty.Access.WRITE_ONLY)
    private String deploymentId;

    /*
     * Status of the remediation deployment.
     */
    @JsonProperty(value = "status", access = JsonProperty.Access.WRITE_ONLY)
    private String status;

    /*
     * Location of the resource that is being remediated.
     */
    @JsonProperty(value = "resourceLocation", access = JsonProperty.Access.WRITE_ONLY)
    private String resourceLocation;

    /*
     * Error encountered while remediated the resource.
     */
    @JsonProperty(value = "error", access = JsonProperty.Access.WRITE_ONLY)
    private ManagementError error;

    /*
     * The time at which the remediation was created.
     */
    @JsonProperty(value = "createdOn", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime createdOn;

    /*
     * The time at which the remediation deployment was last updated.
     */
    @JsonProperty(value = "lastUpdatedOn", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime lastUpdatedOn;

    /**
     * Get the remediatedResourceId property: Resource ID of the resource that is being remediated by the deployment.
     *
     * @return the remediatedResourceId value.
     */
    public String remediatedResourceId() {
        return this.remediatedResourceId;
    }

    /**
     * Get the deploymentId property: Resource ID of the template deployment that will remediate the resource.
     *
     * @return the deploymentId value.
     */
    public String deploymentId() {
        return this.deploymentId;
    }

    /**
     * Get the status property: Status of the remediation deployment.
     *
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Get the resourceLocation property: Location of the resource that is being remediated.
     *
     * @return the resourceLocation value.
     */
    public String resourceLocation() {
        return this.resourceLocation;
    }

    /**
     * Get the error property: Error encountered while remediated the resource.
     *
     * @return the error value.
     */
    public ManagementError error() {
        return this.error;
    }

    /**
     * Get the createdOn property: The time at which the remediation was created.
     *
     * @return the createdOn value.
     */
    public OffsetDateTime createdOn() {
        return this.createdOn;
    }

    /**
     * Get the lastUpdatedOn property: The time at which the remediation deployment was last updated.
     *
     * @return the lastUpdatedOn value.
     */
    public OffsetDateTime lastUpdatedOn() {
        return this.lastUpdatedOn;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
