// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The compliance state rollup.
 */
@Fluent
public final class ComplianceDetail implements JsonSerializable<ComplianceDetail> {
    /*
     * The compliance state.
     */
    private String complianceState;

    /*
     * Summarized count value for this compliance state.
     */
    private Integer count;

    /**
     * Creates an instance of ComplianceDetail class.
     */
    public ComplianceDetail() {
    }

    /**
     * Get the complianceState property: The compliance state.
     * 
     * @return the complianceState value.
     */
    public String complianceState() {
        return this.complianceState;
    }

    /**
     * Set the complianceState property: The compliance state.
     * 
     * @param complianceState the complianceState value to set.
     * @return the ComplianceDetail object itself.
     */
    public ComplianceDetail withComplianceState(String complianceState) {
        this.complianceState = complianceState;
        return this;
    }

    /**
     * Get the count property: Summarized count value for this compliance state.
     * 
     * @return the count value.
     */
    public Integer count() {
        return this.count;
    }

    /**
     * Set the count property: Summarized count value for this compliance state.
     * 
     * @param count the count value to set.
     * @return the ComplianceDetail object itself.
     */
    public ComplianceDetail withCount(Integer count) {
        this.count = count;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("complianceState", this.complianceState);
        jsonWriter.writeNumberField("count", this.count);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ComplianceDetail from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ComplianceDetail if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ComplianceDetail.
     */
    public static ComplianceDetail fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ComplianceDetail deserializedComplianceDetail = new ComplianceDetail();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("complianceState".equals(fieldName)) {
                    deserializedComplianceDetail.complianceState = reader.getString();
                } else if ("count".equals(fieldName)) {
                    deserializedComplianceDetail.count = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedComplianceDetail;
        });
    }
}
