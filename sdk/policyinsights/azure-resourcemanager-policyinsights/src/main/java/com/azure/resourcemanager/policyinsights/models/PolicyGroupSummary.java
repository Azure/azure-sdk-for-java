// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Policy definition group summary.
 */
@Fluent
public final class PolicyGroupSummary implements JsonSerializable<PolicyGroupSummary> {
    /*
     * Policy group name.
     */
    private String policyGroupName;

    /*
     * Compliance summary for the policy definition group.
     */
    private SummaryResults results;

    /**
     * Creates an instance of PolicyGroupSummary class.
     */
    public PolicyGroupSummary() {
    }

    /**
     * Get the policyGroupName property: Policy group name.
     * 
     * @return the policyGroupName value.
     */
    public String policyGroupName() {
        return this.policyGroupName;
    }

    /**
     * Set the policyGroupName property: Policy group name.
     * 
     * @param policyGroupName the policyGroupName value to set.
     * @return the PolicyGroupSummary object itself.
     */
    public PolicyGroupSummary withPolicyGroupName(String policyGroupName) {
        this.policyGroupName = policyGroupName;
        return this;
    }

    /**
     * Get the results property: Compliance summary for the policy definition group.
     * 
     * @return the results value.
     */
    public SummaryResults results() {
        return this.results;
    }

    /**
     * Set the results property: Compliance summary for the policy definition group.
     * 
     * @param results the results value to set.
     * @return the PolicyGroupSummary object itself.
     */
    public PolicyGroupSummary withResults(SummaryResults results) {
        this.results = results;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (results() != null) {
            results().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("policyGroupName", this.policyGroupName);
        jsonWriter.writeJsonField("results", this.results);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PolicyGroupSummary from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of PolicyGroupSummary if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the PolicyGroupSummary.
     */
    public static PolicyGroupSummary fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PolicyGroupSummary deserializedPolicyGroupSummary = new PolicyGroupSummary();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("policyGroupName".equals(fieldName)) {
                    deserializedPolicyGroupSummary.policyGroupName = reader.getString();
                } else if ("results".equals(fieldName)) {
                    deserializedPolicyGroupSummary.results = SummaryResults.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPolicyGroupSummary;
        });
    }
}
