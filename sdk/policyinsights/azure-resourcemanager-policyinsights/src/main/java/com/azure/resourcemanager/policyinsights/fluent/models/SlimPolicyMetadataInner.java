// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.fluent.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Slim version of policy metadata resource definition, excluding properties with large strings. */
@Immutable
public final class SlimPolicyMetadataInner {
    /*
     * Properties of the policy metadata.
     */
    @JsonProperty(value = "properties")
    private PolicyMetadataSlimProperties innerProperties;

    /*
     * The ID of the policy metadata.
     */
    @JsonProperty(value = "id", access = JsonProperty.Access.WRITE_ONLY)
    private String id;

    /*
     * The type of the policy metadata.
     */
    @JsonProperty(value = "type", access = JsonProperty.Access.WRITE_ONLY)
    private String type;

    /*
     * The name of the policy metadata.
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /** Creates an instance of SlimPolicyMetadataInner class. */
    public SlimPolicyMetadataInner() {
    }

    /**
     * Get the innerProperties property: Properties of the policy metadata.
     *
     * @return the innerProperties value.
     */
    private PolicyMetadataSlimProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the id property: The ID of the policy metadata.
     *
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the type property: The type of the policy metadata.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Get the name property: The name of the policy metadata.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the metadataId property: The policy metadata identifier.
     *
     * @return the metadataId value.
     */
    public String metadataId() {
        return this.innerProperties() == null ? null : this.innerProperties().metadataId();
    }

    /**
     * Get the category property: The category of the policy metadata.
     *
     * @return the category value.
     */
    public String category() {
        return this.innerProperties() == null ? null : this.innerProperties().category();
    }

    /**
     * Get the title property: The title of the policy metadata.
     *
     * @return the title value.
     */
    public String title() {
        return this.innerProperties() == null ? null : this.innerProperties().title();
    }

    /**
     * Get the owner property: The owner of the policy metadata.
     *
     * @return the owner value.
     */
    public String owner() {
        return this.innerProperties() == null ? null : this.innerProperties().owner();
    }

    /**
     * Get the additionalContentUrl property: Url for getting additional content about the resource metadata.
     *
     * @return the additionalContentUrl value.
     */
    public String additionalContentUrl() {
        return this.innerProperties() == null ? null : this.innerProperties().additionalContentUrl();
    }

    /**
     * Get the metadata property: Additional metadata.
     *
     * @return the metadata value.
     */
    public Object metadata() {
        return this.innerProperties() == null ? null : this.innerProperties().metadata();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
