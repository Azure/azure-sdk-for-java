// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of PolicyMetadatas. */
public interface PolicyMetadatas {
    /**
     * Get policy metadata resource.
     *
     * @param resourceName The name of the policy metadata resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return policy metadata resource.
     */
    PolicyMetadata getResource(String resourceName);

    /**
     * Get policy metadata resource.
     *
     * @param resourceName The name of the policy metadata resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return policy metadata resource.
     */
    Response<PolicyMetadata> getResourceWithResponse(String resourceName, Context context);

    /**
     * Get a list of the policy metadata resources.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of the policy metadata resources.
     */
    PagedIterable<SlimPolicyMetadata> list();

    /**
     * Get a list of the policy metadata resources.
     *
     * @param top Maximum number of records to return.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of the policy metadata resources.
     */
    PagedIterable<SlimPolicyMetadata> list(Integer top, Context context);
}
