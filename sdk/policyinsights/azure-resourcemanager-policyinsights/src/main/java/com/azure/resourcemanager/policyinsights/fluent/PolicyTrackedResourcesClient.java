// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.resourcemanager.policyinsights.fluent.models.PolicyTrackedResourceInner;

/** An instance of this class provides access to all the operations defined in PolicyTrackedResourcesClient. */
public interface PolicyTrackedResourcesClient {
    /**
     * Queries policy tracked resources under the management group.
     *
     * @param managementGroupName Management group name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return query results.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PolicyTrackedResourceInner> listQueryResultsForManagementGroup(String managementGroupName);

    /**
     * Queries policy tracked resources under the management group.
     *
     * @param managementGroupName Management group name.
     * @param top Maximum number of records to return.
     * @param filter OData filter expression.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return query results.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PolicyTrackedResourceInner> listQueryResultsForManagementGroup(
        String managementGroupName, Integer top, String filter, Context context);

    /**
     * Queries policy tracked resources under the subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return query results.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PolicyTrackedResourceInner> listQueryResultsForSubscription();

    /**
     * Queries policy tracked resources under the subscription.
     *
     * @param top Maximum number of records to return.
     * @param filter OData filter expression.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return query results.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PolicyTrackedResourceInner> listQueryResultsForSubscription(
        Integer top, String filter, Context context);

    /**
     * Queries policy tracked resources under the resource group.
     *
     * @param resourceGroupName Resource group name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return query results.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PolicyTrackedResourceInner> listQueryResultsForResourceGroup(String resourceGroupName);

    /**
     * Queries policy tracked resources under the resource group.
     *
     * @param resourceGroupName Resource group name.
     * @param top Maximum number of records to return.
     * @param filter OData filter expression.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return query results.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PolicyTrackedResourceInner> listQueryResultsForResourceGroup(
        String resourceGroupName, Integer top, String filter, Context context);

    /**
     * Queries policy tracked resources under the resource.
     *
     * @param resourceId Resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return query results.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PolicyTrackedResourceInner> listQueryResultsForResource(String resourceId);

    /**
     * Queries policy tracked resources under the resource.
     *
     * @param resourceId Resource ID.
     * @param top Maximum number of records to return.
     * @param filter OData filter expression.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return query results.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PolicyTrackedResourceInner> listQueryResultsForResource(
        String resourceId, Integer top, String filter, Context context);
}
