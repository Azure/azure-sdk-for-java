/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.policyinsights.v2019_10_01.implementation;

import com.microsoft.azure.management.policyinsights.v2019_10_01.Remediation;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;
import com.microsoft.azure.management.policyinsights.v2019_10_01.ResourceDiscoveryMode;
import org.joda.time.DateTime;
import com.microsoft.azure.management.policyinsights.v2019_10_01.RemediationFilters;
import com.microsoft.azure.management.policyinsights.v2019_10_01.RemediationDeploymentSummary;

class RemediationImpl extends CreatableUpdatableImpl<Remediation, RemediationInner, RemediationImpl> implements Remediation, Remediation.Definition, Remediation.Update {
    private final PolicyInsightsManager manager;
    private String managementGroupId;
    private String remediationName;

    RemediationImpl(String name, PolicyInsightsManager manager) {
        super(name, new RemediationInner());
        this.manager = manager;
        // Set resource name
        this.remediationName = name;
        //
    }

    RemediationImpl(RemediationInner inner, PolicyInsightsManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.remediationName = inner.name();
        // set resource ancestor and positional variables
        this.managementGroupId = IdParsingUtils.getValueFromIdByName(inner.id(), "managementGroups");
        this.remediationName = IdParsingUtils.getValueFromIdByName(inner.id(), "remediations");
        //
    }

    @Override
    public PolicyInsightsManager manager() {
        return this.manager;
    }

    @Override
    public Observable<Remediation> createResourceAsync() {
        RemediationsInner client = this.manager().inner().remediations();
        return client.createOrUpdateAtManagementGroupAsync(this.managementGroupId, this.remediationName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<Remediation> updateResourceAsync() {
        RemediationsInner client = this.manager().inner().remediations();
        return client.createOrUpdateAtManagementGroupAsync(this.managementGroupId, this.remediationName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<RemediationInner> getInnerAsync() {
        RemediationsInner client = this.manager().inner().remediations();
        return null; // NOP getInnerAsync implementation as get is not supported
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public DateTime createdOn() {
        return this.inner().createdOn();
    }

    @Override
    public RemediationDeploymentSummary deploymentStatus() {
        return this.inner().deploymentStatus();
    }

    @Override
    public RemediationFilters filters() {
        return this.inner().filters();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public DateTime lastUpdatedOn() {
        return this.inner().lastUpdatedOn();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String policyAssignmentId() {
        return this.inner().policyAssignmentId();
    }

    @Override
    public String policyDefinitionReferenceId() {
        return this.inner().policyDefinitionReferenceId();
    }

    @Override
    public String provisioningState() {
        return this.inner().provisioningState();
    }

    @Override
    public ResourceDiscoveryMode resourceDiscoveryMode() {
        return this.inner().resourceDiscoveryMode();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public RemediationImpl withManagementGroupId(String managementGroupId) {
        this.managementGroupId = managementGroupId;
        return this;
    }

    @Override
    public RemediationImpl withFilters(RemediationFilters filters) {
        this.inner().withFilters(filters);
        return this;
    }

    @Override
    public RemediationImpl withPolicyAssignmentId(String policyAssignmentId) {
        this.inner().withPolicyAssignmentId(policyAssignmentId);
        return this;
    }

    @Override
    public RemediationImpl withPolicyDefinitionReferenceId(String policyDefinitionReferenceId) {
        this.inner().withPolicyDefinitionReferenceId(policyDefinitionReferenceId);
        return this;
    }

    @Override
    public RemediationImpl withResourceDiscoveryMode(ResourceDiscoveryMode resourceDiscoveryMode) {
        this.inner().withResourceDiscoveryMode(resourceDiscoveryMode);
        return this;
    }

}
