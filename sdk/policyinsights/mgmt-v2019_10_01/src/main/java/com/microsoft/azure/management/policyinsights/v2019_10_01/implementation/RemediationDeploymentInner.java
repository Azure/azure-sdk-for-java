/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.policyinsights.v2019_10_01.implementation;

import com.microsoft.azure.management.policyinsights.v2019_10_01.ErrorDefinition;
import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Details of a single deployment created by the remediation.
 */
public class RemediationDeploymentInner {
    /**
     * Resource ID of the resource that is being remediated by the deployment.
     */
    @JsonProperty(value = "remediatedResourceId", access = JsonProperty.Access.WRITE_ONLY)
    private String remediatedResourceId;

    /**
     * Resource ID of the template deployment that will remediate the resource.
     */
    @JsonProperty(value = "deploymentId", access = JsonProperty.Access.WRITE_ONLY)
    private String deploymentId;

    /**
     * Status of the remediation deployment.
     */
    @JsonProperty(value = "status", access = JsonProperty.Access.WRITE_ONLY)
    private String status;

    /**
     * Location of the resource that is being remediated.
     */
    @JsonProperty(value = "resourceLocation", access = JsonProperty.Access.WRITE_ONLY)
    private String resourceLocation;

    /**
     * Error encountered while remediated the resource.
     */
    @JsonProperty(value = "error", access = JsonProperty.Access.WRITE_ONLY)
    private ErrorDefinition error;

    /**
     * The time at which the remediation was created.
     */
    @JsonProperty(value = "createdOn", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime createdOn;

    /**
     * The time at which the remediation deployment was last updated.
     */
    @JsonProperty(value = "lastUpdatedOn", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime lastUpdatedOn;

    /**
     * Get resource ID of the resource that is being remediated by the deployment.
     *
     * @return the remediatedResourceId value
     */
    public String remediatedResourceId() {
        return this.remediatedResourceId;
    }

    /**
     * Get resource ID of the template deployment that will remediate the resource.
     *
     * @return the deploymentId value
     */
    public String deploymentId() {
        return this.deploymentId;
    }

    /**
     * Get status of the remediation deployment.
     *
     * @return the status value
     */
    public String status() {
        return this.status;
    }

    /**
     * Get location of the resource that is being remediated.
     *
     * @return the resourceLocation value
     */
    public String resourceLocation() {
        return this.resourceLocation;
    }

    /**
     * Get error encountered while remediated the resource.
     *
     * @return the error value
     */
    public ErrorDefinition error() {
        return this.error;
    }

    /**
     * Get the time at which the remediation was created.
     *
     * @return the createdOn value
     */
    public DateTime createdOn() {
        return this.createdOn;
    }

    /**
     * Get the time at which the remediation deployment was last updated.
     *
     * @return the lastUpdatedOn value
     */
    public DateTime lastUpdatedOn() {
        return this.lastUpdatedOn;
    }

}
