/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.attestation.v2020_10_01.implementation;

import com.microsoft.azure.arm.resources.models.implementation.GroupableResourceCoreImpl;
import com.microsoft.azure.management.attestation.v2020_10_01.AttestationProvider;
import rx.Observable;
import com.microsoft.azure.management.attestation.v2020_10_01.AttestationServiceCreationParams;
import java.util.ArrayList;
import com.microsoft.azure.management.attestation.v2020_10_01.PrivateEndpointConnection;
import java.util.List;
import com.microsoft.azure.management.attestation.v2020_10_01.AttestationServiceStatus;
import com.microsoft.azure.management.attestation.v2020_10_01.SystemData;
import com.microsoft.azure.management.attestation.v2020_10_01.AttestationServiceCreationSpecificParams;
import rx.functions.Func1;

class AttestationProviderImpl extends GroupableResourceCoreImpl<AttestationProvider, AttestationProviderInner, AttestationProviderImpl, AttestationManager> implements AttestationProvider, AttestationProvider.Definition, AttestationProvider.Update {
    private AttestationServiceCreationParams createOrUpdateParameter;
    AttestationProviderImpl(String name, AttestationProviderInner inner, AttestationManager manager) {
        super(name, inner, manager);
        this.createOrUpdateParameter = new AttestationServiceCreationParams();
    }

    @Override
    public Observable<AttestationProvider> createResourceAsync() {
        AttestationProvidersInner client = this.manager().inner().attestationProviders();
        this.createOrUpdateParameter.withLocation(inner().location());
        this.createOrUpdateParameter.withTags(inner().getTags());
        return client.createAsync(this.resourceGroupName(), this.name(), this.createOrUpdateParameter)
            .map(new Func1<AttestationProviderInner, AttestationProviderInner>() {
               @Override
               public AttestationProviderInner call(AttestationProviderInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<AttestationProvider> updateResourceAsync() {
        AttestationProvidersInner client = this.manager().inner().attestationProviders();
        return client.createAsync(this.resourceGroupName(), this.name(), this.createOrUpdateParameter)
            .map(new Func1<AttestationProviderInner, AttestationProviderInner>() {
               @Override
               public AttestationProviderInner call(AttestationProviderInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<AttestationProviderInner> getInnerAsync() {
        AttestationProvidersInner client = this.manager().inner().attestationProviders();
        return client.getByResourceGroupAsync(this.resourceGroupName(), this.name());
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }

    private void resetCreateUpdateParameters() {
        this.createOrUpdateParameter = new AttestationServiceCreationParams();
    }

    @Override
    public String attestUri() {
        return this.inner().attestUri();
    }

    @Override
    public List<PrivateEndpointConnection> privateEndpointConnections() {
        List<PrivateEndpointConnection> lst = new ArrayList<PrivateEndpointConnection>();
        if (this.inner().privateEndpointConnections() != null) {
            for (PrivateEndpointConnectionInner inner : this.inner().privateEndpointConnections()) {
                lst.add( new PrivateEndpointConnectionImpl(inner, manager()));
            }
        }
        return lst;
    }

    @Override
    public AttestationServiceStatus status() {
        return this.inner().status();
    }

    @Override
    public SystemData systemData() {
        return this.inner().systemData();
    }

    @Override
    public String trustModel() {
        return this.inner().trustModel();
    }

    @Override
    public AttestationProviderImpl withProperties(AttestationServiceCreationSpecificParams properties) {
        this.createOrUpdateParameter.withProperties(properties);
        return this;
    }

}
