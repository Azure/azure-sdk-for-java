// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.attestation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.attestation.fluent.models.AttestationProviderInner;
import com.azure.resourcemanager.attestation.fluent.models.AttestationProviderListResultInner;
import com.azure.resourcemanager.attestation.models.AttestationServiceStatus;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AttestationProviderListResultInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AttestationProviderListResultInner model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"trustModel\":\"abgl\",\"status\":\"NotReady\",\"attestUri\":\"wtctyqi\",\"privateEndpointConnections\":[{\"properties\":{\"privateLinkServiceConnectionState\":{}},\"id\":\"ovplw\",\"name\":\"bhvgy\",\"type\":\"gu\"},{\"properties\":{\"privateLinkServiceConnectionState\":{}},\"id\":\"vmkfssxqu\",\"name\":\"kfplgmgsxnk\",\"type\":\"zkd\"},{\"properties\":{\"privateLinkServiceConnectionState\":{}},\"id\":\"lpvlopw\",\"name\":\"yighxpk\",\"type\":\"wzbaiue\"},{\"properties\":{\"privateLinkServiceConnectionState\":{}},\"id\":\"a\",\"name\":\"m\",\"type\":\"yqupedeojnabckh\"}]},\"location\":\"mtxpsiebtfh\",\"tags\":{\"qmhjjdhtld\":\"sapskr\"},\"id\":\"kyzxuutk\",\"name\":\"cwscwsvlx\",\"type\":\"togt\"},{\"properties\":{\"trustModel\":\"qsx\",\"status\":\"NotReady\",\"attestUri\":\"cykvceo\",\"privateEndpointConnections\":[{\"properties\":{\"privateLinkServiceConnectionState\":{}},\"id\":\"ovnotyfjfcnjbkcn\",\"name\":\"dhbt\",\"type\":\"kphywpnvjto\"},{\"properties\":{\"privateLinkServiceConnectionState\":{}},\"id\":\"ermclfplphoxuscr\",\"name\":\"abgy\",\"type\":\"psbjta\"}]},\"location\":\"qugxywpmueefjzwf\",\"tags\":{\"glaocq\":\"ujidsuyono\"},\"id\":\"tcc\",\"name\":\"g\",\"type\":\"udxytlmoyrx\"},{\"properties\":{\"trustModel\":\"dw\",\"status\":\"Ready\",\"attestUri\":\"xhdzhlrqjbhckf\",\"privateEndpointConnections\":[{\"properties\":{\"privateLinkServiceConnectionState\":{}},\"id\":\"xsbkyvpyca\",\"name\":\"uzbpzkafku\",\"type\":\"b\"},{\"properties\":{\"privateLinkServiceConnectionState\":{}},\"id\":\"nwbmeh\",\"name\":\"seyvj\",\"type\":\"srtslhspkdeem\"}]},\"location\":\"ofmxagkvtmelmqkr\",\"tags\":{\"aquhcdhm\":\"vljua\",\"rcrgvx\":\"ualaexqpvfadmw\",\"fmisg\":\"vgomz\"},\"id\":\"bnbbeldawkz\",\"name\":\"ali\",\"type\":\"urqhaka\"}]}")
            .toObject(AttestationProviderListResultInner.class);
        Assertions.assertEquals("mtxpsiebtfh", model.value().get(0).location());
        Assertions.assertEquals("sapskr", model.value().get(0).tags().get("qmhjjdhtld"));
        Assertions.assertEquals("abgl", model.value().get(0).trustModel());
        Assertions.assertEquals(AttestationServiceStatus.NOT_READY, model.value().get(0).status());
        Assertions.assertEquals("wtctyqi", model.value().get(0).attestUri());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AttestationProviderListResultInner model = new AttestationProviderListResultInner().withValue(Arrays.asList(
            new AttestationProviderInner().withLocation("mtxpsiebtfh")
                .withTags(mapOf("qmhjjdhtld", "sapskr"))
                .withTrustModel("abgl")
                .withStatus(AttestationServiceStatus.NOT_READY)
                .withAttestUri("wtctyqi"),
            new AttestationProviderInner().withLocation("qugxywpmueefjzwf")
                .withTags(mapOf("glaocq", "ujidsuyono"))
                .withTrustModel("qsx")
                .withStatus(AttestationServiceStatus.NOT_READY)
                .withAttestUri("cykvceo"),
            new AttestationProviderInner().withLocation("ofmxagkvtmelmqkr")
                .withTags(mapOf("aquhcdhm", "vljua", "rcrgvx", "ualaexqpvfadmw", "fmisg", "vgomz"))
                .withTrustModel("dw")
                .withStatus(AttestationServiceStatus.READY)
                .withAttestUri("xhdzhlrqjbhckf")));
        model = BinaryData.fromObject(model).toObject(AttestationProviderListResultInner.class);
        Assertions.assertEquals("mtxpsiebtfh", model.value().get(0).location());
        Assertions.assertEquals("sapskr", model.value().get(0).tags().get("qmhjjdhtld"));
        Assertions.assertEquals("abgl", model.value().get(0).trustModel());
        Assertions.assertEquals(AttestationServiceStatus.NOT_READY, model.value().get(0).status());
        Assertions.assertEquals("wtctyqi", model.value().get(0).attestUri());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
