// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.attestation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.attestation.models.JsonWebKey;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class JsonWebKeyTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        JsonWebKey model = BinaryData.fromString(
            "{\"alg\":\"ocukoklyax\",\"crv\":\"onuq\",\"d\":\"fkbey\",\"dp\":\"wrmjmwvvjektc\",\"dq\":\"enhwlrs\",\"e\":\"rzpwvlqdqgbiq\",\"k\":\"ihkaetcktvfc\",\"kid\":\"fsnkymuctq\",\"kty\":\"jf\",\"n\":\"brjcxe\",\"p\":\"uwutttxfvjrbi\",\"q\":\"hxepcyvahfnlj\",\"qi\":\"qxj\",\"use\":\"ujqgidok\",\"x\":\"ljyoxgvcltb\",\"x5c\":[\"c\",\"hkjeszzhbi\"],\"y\":\"txfvgx\"}")
            .toObject(JsonWebKey.class);
        Assertions.assertEquals("ocukoklyax", model.alg());
        Assertions.assertEquals("onuq", model.crv());
        Assertions.assertEquals("fkbey", model.d());
        Assertions.assertEquals("wrmjmwvvjektc", model.dp());
        Assertions.assertEquals("enhwlrs", model.dq());
        Assertions.assertEquals("rzpwvlqdqgbiq", model.e());
        Assertions.assertEquals("ihkaetcktvfc", model.k());
        Assertions.assertEquals("fsnkymuctq", model.kid());
        Assertions.assertEquals("jf", model.kty());
        Assertions.assertEquals("brjcxe", model.n());
        Assertions.assertEquals("uwutttxfvjrbi", model.p());
        Assertions.assertEquals("hxepcyvahfnlj", model.q());
        Assertions.assertEquals("qxj", model.qi());
        Assertions.assertEquals("ujqgidok", model.use());
        Assertions.assertEquals("ljyoxgvcltb", model.x());
        Assertions.assertEquals("c", model.x5C().get(0));
        Assertions.assertEquals("txfvgx", model.y());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        JsonWebKey model = new JsonWebKey().withAlg("ocukoklyax")
            .withCrv("onuq")
            .withD("fkbey")
            .withDp("wrmjmwvvjektc")
            .withDq("enhwlrs")
            .withE("rzpwvlqdqgbiq")
            .withK("ihkaetcktvfc")
            .withKid("fsnkymuctq")
            .withKty("jf")
            .withN("brjcxe")
            .withP("uwutttxfvjrbi")
            .withQ("hxepcyvahfnlj")
            .withQi("qxj")
            .withUse("ujqgidok")
            .withX("ljyoxgvcltb")
            .withX5C(Arrays.asList("c", "hkjeszzhbi"))
            .withY("txfvgx");
        model = BinaryData.fromObject(model).toObject(JsonWebKey.class);
        Assertions.assertEquals("ocukoklyax", model.alg());
        Assertions.assertEquals("onuq", model.crv());
        Assertions.assertEquals("fkbey", model.d());
        Assertions.assertEquals("wrmjmwvvjektc", model.dp());
        Assertions.assertEquals("enhwlrs", model.dq());
        Assertions.assertEquals("rzpwvlqdqgbiq", model.e());
        Assertions.assertEquals("ihkaetcktvfc", model.k());
        Assertions.assertEquals("fsnkymuctq", model.kid());
        Assertions.assertEquals("jf", model.kty());
        Assertions.assertEquals("brjcxe", model.n());
        Assertions.assertEquals("uwutttxfvjrbi", model.p());
        Assertions.assertEquals("hxepcyvahfnlj", model.q());
        Assertions.assertEquals("qxj", model.qi());
        Assertions.assertEquals("ujqgidok", model.use());
        Assertions.assertEquals("ljyoxgvcltb", model.x());
        Assertions.assertEquals("c", model.x5C().get(0));
        Assertions.assertEquals("txfvgx", model.y());
    }
}
