// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.attestation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.attestation.AttestationManager;
import com.azure.resourcemanager.attestation.models.AttestationProviderListResult;
import com.azure.resourcemanager.attestation.models.AttestationServiceStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AttestationProvidersListByResourceGroupWithResponseMockTests {
    @Test
    public void testListByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"trustModel\":\"q\",\"status\":\"Error\",\"attestUri\":\"qdcvdrhvoo\",\"privateEndpointConnections\":[{\"id\":\"tbobz\",\"name\":\"opcjwvnhd\",\"type\":\"d\"},{\"id\":\"mgxcxrslpm\",\"name\":\"twuoegrpkhjwni\",\"type\":\"qsluicp\"},{\"id\":\"ggkzzlvmbmpa\",\"name\":\"modfvuefywsbpfvm\",\"type\":\"yhrfouyftaakcpw\"}]},\"location\":\"yzvqt\",\"tags\":{\"quxvypomgkop\":\"bexkpzksmondj\"},\"id\":\"whojvp\",\"name\":\"jqg\",\"type\":\"ysmocmbqfqvmkcxo\"},{\"properties\":{\"trustModel\":\"helxprglya\",\"status\":\"NotReady\",\"attestUri\":\"kcbcue\",\"privateEndpointConnections\":[{\"id\":\"xgc\",\"name\":\"qibrhosxsdqrhzoy\",\"type\":\"i\"},{\"id\":\"m\",\"name\":\"qyib\",\"type\":\"hwflu\"},{\"id\":\"zdtmhrkwofy\",\"name\":\"voqacpiexpbt\",\"type\":\"iwbwoenwashrtdtk\"}]},\"location\":\"nqxwbp\",\"tags\":{\"ipqiiobyuqerpq\":\"lpiujwaa\",\"fbtkuwhhmhyk\":\"pqwcciuqgbdbutau\"},\"id\":\"joxafnndlpi\",\"name\":\"hkoymkcdyhbp\",\"type\":\"kpw\"},{\"properties\":{\"trustModel\":\"novvqfovljxy\",\"status\":\"NotReady\",\"attestUri\":\"syrsndsytgadgvra\",\"privateEndpointConnections\":[{\"id\":\"neqn\",\"name\":\"arrwlquu\",\"type\":\"jfqka\"}]},\"location\":\"e\",\"tags\":{\"f\":\"pfpubjibww\",\"kn\":\"ohqkvpuvksgpls\"},\"id\":\"n\",\"name\":\"synljphuopxodl\",\"type\":\"iyntorzihle\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AttestationManager manager = AttestationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        AttestationProviderListResult response = manager.attestationProviders()
            .listByResourceGroupWithResponse("gafcnihgwqapnedg", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("yzvqt", response.value().get(0).location());
        Assertions.assertEquals("bexkpzksmondj", response.value().get(0).tags().get("quxvypomgkop"));
        Assertions.assertEquals("q", response.value().get(0).trustModel());
        Assertions.assertEquals(AttestationServiceStatus.ERROR, response.value().get(0).status());
        Assertions.assertEquals("qdcvdrhvoo", response.value().get(0).attestUri());
    }
}
