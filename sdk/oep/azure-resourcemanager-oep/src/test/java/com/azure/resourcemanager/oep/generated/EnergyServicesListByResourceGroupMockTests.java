// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oep.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oep.OepManager;
import com.azure.resourcemanager.oep.models.EnergyService;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class EnergyServicesListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"dnsName\":\"evcciqihnhun\",\"provisioningState\":\"Updating\",\"authAppId\":\"zrnf\",\"dataPartitionNames\":[{\"name\":\"ispe\"},{\"name\":\"tzfkufubl\"},{\"name\":\"fxqeof\"},{\"name\":\"e\"}]},\"tags\":{\"jqul\":\"qjbasvms\",\"clxxwrljdo\":\"gsntnbybkzgcwr\",\"wtnhxbnjbiksqr\":\"skcqvkocrcjd\"},\"location\":\"lssai\",\"id\":\"p\",\"name\":\"wnzlljfmppeeb\",\"type\":\"mgxsab\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OepManager manager = OepManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<EnergyService> response
            = manager.energyServices().listByResourceGroup("ognarxzxtheotus", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("zrnf", response.iterator().next().properties().authAppId());
        Assertions.assertEquals("ispe", response.iterator().next().properties().dataPartitionNames().get(0).name());
        Assertions.assertEquals("qjbasvms", response.iterator().next().tags().get("jqul"));
        Assertions.assertEquals("lssai", response.iterator().next().location());
    }
}
