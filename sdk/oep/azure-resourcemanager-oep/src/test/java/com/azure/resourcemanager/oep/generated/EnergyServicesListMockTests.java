// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oep.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.oep.OepManager;
import com.azure.resourcemanager.oep.models.EnergyService;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class EnergyServicesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"dnsName\":\"duuji\",\"provisioningState\":\"Updating\",\"authAppId\":\"zdzevndh\",\"dataPartitionNames\":[{\"name\":\"d\"},{\"name\":\"p\"},{\"name\":\"bdkvwrwjf\"}]},\"tags\":{\"zdatqxhocdg\":\"nhutjeltmrldhugj\"},\"location\":\"ablgphuticndvk\",\"id\":\"zwyiftyhxhur\",\"name\":\"k\",\"type\":\"tyxolniwpwc\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OepManager manager = OepManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<EnergyService> response = manager.energyServices().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("zdzevndh", response.iterator().next().properties().authAppId());
        Assertions.assertEquals("d", response.iterator().next().properties().dataPartitionNames().get(0).name());
        Assertions.assertEquals("nhutjeltmrldhugj", response.iterator().next().tags().get("zdatqxhocdg"));
        Assertions.assertEquals("ablgphuticndvk", response.iterator().next().location());
    }
}
