// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azureadexternalidentities.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azureadexternalidentities.fluent.models.OperationDetailInner;
import com.azure.resourcemanager.azureadexternalidentities.models.OperationDisplay;
import org.junit.jupiter.api.Assertions;

public final class OperationDetailInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationDetailInner model = BinaryData.fromString(
            "{\"name\":\"ndv\",\"isDataAction\":true,\"display\":{\"provider\":\"yiftyhxhuro\",\"resource\":\"tyxolniwpwc\",\"operation\":\"jfkgiawxk\",\"description\":\"ypl\"},\"origin\":\"kbasyypn\"}")
            .toObject(OperationDetailInner.class);
        Assertions.assertEquals("ndv", model.name());
        Assertions.assertEquals(true, model.isDataAction());
        Assertions.assertEquals("yiftyhxhuro", model.display().provider());
        Assertions.assertEquals("tyxolniwpwc", model.display().resource());
        Assertions.assertEquals("jfkgiawxk", model.display().operation());
        Assertions.assertEquals("ypl", model.display().description());
        Assertions.assertEquals("kbasyypn", model.origin());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationDetailInner model = new OperationDetailInner().withName("ndv")
            .withIsDataAction(true)
            .withDisplay(new OperationDisplay().withProvider("yiftyhxhuro")
                .withResource("tyxolniwpwc")
                .withOperation("jfkgiawxk")
                .withDescription("ypl"))
            .withOrigin("kbasyypn");
        model = BinaryData.fromObject(model).toObject(OperationDetailInner.class);
        Assertions.assertEquals("ndv", model.name());
        Assertions.assertEquals(true, model.isDataAction());
        Assertions.assertEquals("yiftyhxhuro", model.display().provider());
        Assertions.assertEquals("tyxolniwpwc", model.display().resource());
        Assertions.assertEquals("jfkgiawxk", model.display().operation());
        Assertions.assertEquals("ypl", model.display().description());
        Assertions.assertEquals("kbasyypn", model.origin());
    }
}
