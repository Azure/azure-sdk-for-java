// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestack.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestack.fluent.models.ProductNestedProperties;
import com.azure.resourcemanager.azurestack.models.Compatibility;
import com.azure.resourcemanager.azurestack.models.CompatibilityIssue;
import com.azure.resourcemanager.azurestack.models.IconUris;
import com.azure.resourcemanager.azurestack.models.ProductLink;
import com.azure.resourcemanager.azurestack.models.ProductProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ProductNestedPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProductNestedProperties model = BinaryData.fromString(
            "{\"displayName\":\"yvxyqjp\",\"description\":\"attpngjcrcczsq\",\"publisherDisplayName\":\"hvmdajvnysounq\",\"publisherIdentifier\":\"a\",\"offer\":\"ae\",\"offerVersion\":\"fhyhltrpmopjmcma\",\"sku\":\"okth\",\"billingPartNumber\":\"iuaod\",\"vmExtensionType\":\"cpkvxodp\",\"galleryItemIdentity\":\"zmyzydagf\",\"iconUris\":{\"large\":\"bezy\",\"wide\":\"okktwhrdxw\",\"medium\":\"wqsmbsur\",\"small\":\"imoryocfsfksym\",\"hero\":\"ys\"},\"links\":[{\"displayName\":\"uxh\",\"uri\":\"udxorrqn\"}],\"legalTerms\":\"oczvy\",\"privacyPolicy\":\"qrvkdv\",\"payloadLength\":3055369044346357730,\"productKind\":\"mvvd\",\"productProperties\":{\"version\":\"t\"},\"compatibility\":{\"isCompatible\":true,\"message\":\"lexxbczwtru\",\"description\":\"qzbqjvsov\",\"issues\":[\"HigherDeviceVersionRequired\",\"DevelopmentBillingModelRequired\"]}}")
            .toObject(ProductNestedProperties.class);
        Assertions.assertEquals("yvxyqjp", model.displayName());
        Assertions.assertEquals("attpngjcrcczsq", model.description());
        Assertions.assertEquals("hvmdajvnysounq", model.publisherDisplayName());
        Assertions.assertEquals("a", model.publisherIdentifier());
        Assertions.assertEquals("ae", model.offer());
        Assertions.assertEquals("fhyhltrpmopjmcma", model.offerVersion());
        Assertions.assertEquals("okth", model.sku());
        Assertions.assertEquals("iuaod", model.billingPartNumber());
        Assertions.assertEquals("cpkvxodp", model.vmExtensionType());
        Assertions.assertEquals("zmyzydagf", model.galleryItemIdentity());
        Assertions.assertEquals("bezy", model.iconUris().large());
        Assertions.assertEquals("okktwhrdxw", model.iconUris().wide());
        Assertions.assertEquals("wqsmbsur", model.iconUris().medium());
        Assertions.assertEquals("imoryocfsfksym", model.iconUris().small());
        Assertions.assertEquals("ys", model.iconUris().hero());
        Assertions.assertEquals("uxh", model.links().get(0).displayName());
        Assertions.assertEquals("udxorrqn", model.links().get(0).uri());
        Assertions.assertEquals("oczvy", model.legalTerms());
        Assertions.assertEquals("qrvkdv", model.privacyPolicy());
        Assertions.assertEquals(3055369044346357730L, model.payloadLength());
        Assertions.assertEquals("mvvd", model.productKind());
        Assertions.assertEquals("t", model.productProperties().version());
        Assertions.assertEquals(true, model.compatibility().isCompatible());
        Assertions.assertEquals("lexxbczwtru", model.compatibility().message());
        Assertions.assertEquals("qzbqjvsov", model.compatibility().description());
        Assertions.assertEquals(CompatibilityIssue.HIGHER_DEVICE_VERSION_REQUIRED,
            model.compatibility().issues().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProductNestedProperties model = new ProductNestedProperties().withDisplayName("yvxyqjp")
            .withDescription("attpngjcrcczsq")
            .withPublisherDisplayName("hvmdajvnysounq")
            .withPublisherIdentifier("a")
            .withOffer("ae")
            .withOfferVersion("fhyhltrpmopjmcma")
            .withSku("okth")
            .withBillingPartNumber("iuaod")
            .withVmExtensionType("cpkvxodp")
            .withGalleryItemIdentity("zmyzydagf")
            .withIconUris(new IconUris().withLarge("bezy")
                .withWide("okktwhrdxw")
                .withMedium("wqsmbsur")
                .withSmall("imoryocfsfksym")
                .withHero("ys"))
            .withLinks(Arrays.asList(new ProductLink().withDisplayName("uxh").withUri("udxorrqn")))
            .withLegalTerms("oczvy")
            .withPrivacyPolicy("qrvkdv")
            .withPayloadLength(3055369044346357730L)
            .withProductKind("mvvd")
            .withProductProperties(new ProductProperties().withVersion("t"))
            .withCompatibility(new Compatibility().withIsCompatible(true)
                .withMessage("lexxbczwtru")
                .withDescription("qzbqjvsov")
                .withIssues(Arrays.asList(CompatibilityIssue.HIGHER_DEVICE_VERSION_REQUIRED,
                    CompatibilityIssue.DEVELOPMENT_BILLING_MODEL_REQUIRED)));
        model = BinaryData.fromObject(model).toObject(ProductNestedProperties.class);
        Assertions.assertEquals("yvxyqjp", model.displayName());
        Assertions.assertEquals("attpngjcrcczsq", model.description());
        Assertions.assertEquals("hvmdajvnysounq", model.publisherDisplayName());
        Assertions.assertEquals("a", model.publisherIdentifier());
        Assertions.assertEquals("ae", model.offer());
        Assertions.assertEquals("fhyhltrpmopjmcma", model.offerVersion());
        Assertions.assertEquals("okth", model.sku());
        Assertions.assertEquals("iuaod", model.billingPartNumber());
        Assertions.assertEquals("cpkvxodp", model.vmExtensionType());
        Assertions.assertEquals("zmyzydagf", model.galleryItemIdentity());
        Assertions.assertEquals("bezy", model.iconUris().large());
        Assertions.assertEquals("okktwhrdxw", model.iconUris().wide());
        Assertions.assertEquals("wqsmbsur", model.iconUris().medium());
        Assertions.assertEquals("imoryocfsfksym", model.iconUris().small());
        Assertions.assertEquals("ys", model.iconUris().hero());
        Assertions.assertEquals("uxh", model.links().get(0).displayName());
        Assertions.assertEquals("udxorrqn", model.links().get(0).uri());
        Assertions.assertEquals("oczvy", model.legalTerms());
        Assertions.assertEquals("qrvkdv", model.privacyPolicy());
        Assertions.assertEquals(3055369044346357730L, model.payloadLength());
        Assertions.assertEquals("mvvd", model.productKind());
        Assertions.assertEquals("t", model.productProperties().version());
        Assertions.assertEquals(true, model.compatibility().isCompatible());
        Assertions.assertEquals("lexxbczwtru", model.compatibility().message());
        Assertions.assertEquals("qzbqjvsov", model.compatibility().description());
        Assertions.assertEquals(CompatibilityIssue.HIGHER_DEVICE_VERSION_REQUIRED,
            model.compatibility().issues().get(0));
    }
}
