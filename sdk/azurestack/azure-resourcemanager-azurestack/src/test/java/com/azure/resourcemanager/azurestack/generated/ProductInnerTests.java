// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestack.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.azurestack.fluent.models.ProductInner;
import com.azure.resourcemanager.azurestack.models.Compatibility;
import com.azure.resourcemanager.azurestack.models.CompatibilityIssue;
import com.azure.resourcemanager.azurestack.models.IconUris;
import com.azure.resourcemanager.azurestack.models.ProductLink;
import com.azure.resourcemanager.azurestack.models.ProductProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ProductInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProductInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"fwnfnb\",\"description\":\"fionl\",\"publisherDisplayName\":\"x\",\"publisherIdentifier\":\"qgtz\",\"offer\":\"pnqbqqwxrjfe\",\"offerVersion\":\"lnwsubisn\",\"sku\":\"mpmngnzscxaqwoo\",\"billingPartNumber\":\"cbonqvpk\",\"vmExtensionType\":\"rxnjeaseipheofl\",\"galleryItemIdentity\":\"eyy\",\"iconUris\":{\"large\":\"jbdlwtgrhpdjpju\",\"wide\":\"sxazjpq\",\"medium\":\"gual\",\"small\":\"xxhejjzzvd\",\"hero\":\"gwdslfhotwm\"},\"links\":[{\"displayName\":\"wlbjnpgacftade\",\"uri\":\"nltyfsoppusuesnz\"},{\"displayName\":\"ej\",\"uri\":\"vorxzdmohct\"},{\"displayName\":\"vudwx\",\"uri\":\"dnvowg\"}],\"legalTerms\":\"jugwdkcglhsl\",\"privacyPolicy\":\"jdyggdtji\",\"payloadLength\":710150640438805903,\"productKind\":\"ofqweykhmenevfye\",\"productProperties\":{\"version\":\"hybcibv\"},\"compatibility\":{\"isCompatible\":false,\"message\":\"it\",\"description\":\"naamde\",\"issues\":[\"HigherDeviceVersionRequired\"]}},\"etag\":\"iqscjeypv\",\"id\":\"ezrkgqhcjrefo\",\"name\":\"gm\",\"type\":\"qsl\"}")
            .toObject(ProductInner.class);
        Assertions.assertEquals("iqscjeypv", model.etag());
        Assertions.assertEquals("fwnfnb", model.displayName());
        Assertions.assertEquals("fionl", model.description());
        Assertions.assertEquals("x", model.publisherDisplayName());
        Assertions.assertEquals("qgtz", model.publisherIdentifier());
        Assertions.assertEquals("pnqbqqwxrjfe", model.offer());
        Assertions.assertEquals("lnwsubisn", model.offerVersion());
        Assertions.assertEquals("mpmngnzscxaqwoo", model.sku());
        Assertions.assertEquals("cbonqvpk", model.billingPartNumber());
        Assertions.assertEquals("rxnjeaseipheofl", model.vmExtensionType());
        Assertions.assertEquals("eyy", model.galleryItemIdentity());
        Assertions.assertEquals("jbdlwtgrhpdjpju", model.iconUris().large());
        Assertions.assertEquals("sxazjpq", model.iconUris().wide());
        Assertions.assertEquals("gual", model.iconUris().medium());
        Assertions.assertEquals("xxhejjzzvd", model.iconUris().small());
        Assertions.assertEquals("gwdslfhotwm", model.iconUris().hero());
        Assertions.assertEquals("wlbjnpgacftade", model.links().get(0).displayName());
        Assertions.assertEquals("nltyfsoppusuesnz", model.links().get(0).uri());
        Assertions.assertEquals("jugwdkcglhsl", model.legalTerms());
        Assertions.assertEquals("jdyggdtji", model.privacyPolicy());
        Assertions.assertEquals(710150640438805903L, model.payloadLength());
        Assertions.assertEquals("ofqweykhmenevfye", model.productKind());
        Assertions.assertEquals("hybcibv", model.productProperties().version());
        Assertions.assertEquals(false, model.compatibility().isCompatible());
        Assertions.assertEquals("it", model.compatibility().message());
        Assertions.assertEquals("naamde", model.compatibility().description());
        Assertions.assertEquals(CompatibilityIssue.HIGHER_DEVICE_VERSION_REQUIRED,
            model.compatibility().issues().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProductInner model = new ProductInner().withEtag("iqscjeypv")
            .withDisplayName("fwnfnb")
            .withDescription("fionl")
            .withPublisherDisplayName("x")
            .withPublisherIdentifier("qgtz")
            .withOffer("pnqbqqwxrjfe")
            .withOfferVersion("lnwsubisn")
            .withSku("mpmngnzscxaqwoo")
            .withBillingPartNumber("cbonqvpk")
            .withVmExtensionType("rxnjeaseipheofl")
            .withGalleryItemIdentity("eyy")
            .withIconUris(new IconUris().withLarge("jbdlwtgrhpdjpju")
                .withWide("sxazjpq")
                .withMedium("gual")
                .withSmall("xxhejjzzvd")
                .withHero("gwdslfhotwm"))
            .withLinks(Arrays.asList(new ProductLink().withDisplayName("wlbjnpgacftade").withUri("nltyfsoppusuesnz"),
                new ProductLink().withDisplayName("ej").withUri("vorxzdmohct"),
                new ProductLink().withDisplayName("vudwx").withUri("dnvowg")))
            .withLegalTerms("jugwdkcglhsl")
            .withPrivacyPolicy("jdyggdtji")
            .withPayloadLength(710150640438805903L)
            .withProductKind("ofqweykhmenevfye")
            .withProductProperties(new ProductProperties().withVersion("hybcibv"))
            .withCompatibility(new Compatibility().withIsCompatible(false)
                .withMessage("it")
                .withDescription("naamde")
                .withIssues(Arrays.asList(CompatibilityIssue.HIGHER_DEVICE_VERSION_REQUIRED)));
        model = BinaryData.fromObject(model).toObject(ProductInner.class);
        Assertions.assertEquals("iqscjeypv", model.etag());
        Assertions.assertEquals("fwnfnb", model.displayName());
        Assertions.assertEquals("fionl", model.description());
        Assertions.assertEquals("x", model.publisherDisplayName());
        Assertions.assertEquals("qgtz", model.publisherIdentifier());
        Assertions.assertEquals("pnqbqqwxrjfe", model.offer());
        Assertions.assertEquals("lnwsubisn", model.offerVersion());
        Assertions.assertEquals("mpmngnzscxaqwoo", model.sku());
        Assertions.assertEquals("cbonqvpk", model.billingPartNumber());
        Assertions.assertEquals("rxnjeaseipheofl", model.vmExtensionType());
        Assertions.assertEquals("eyy", model.galleryItemIdentity());
        Assertions.assertEquals("jbdlwtgrhpdjpju", model.iconUris().large());
        Assertions.assertEquals("sxazjpq", model.iconUris().wide());
        Assertions.assertEquals("gual", model.iconUris().medium());
        Assertions.assertEquals("xxhejjzzvd", model.iconUris().small());
        Assertions.assertEquals("gwdslfhotwm", model.iconUris().hero());
        Assertions.assertEquals("wlbjnpgacftade", model.links().get(0).displayName());
        Assertions.assertEquals("nltyfsoppusuesnz", model.links().get(0).uri());
        Assertions.assertEquals("jugwdkcglhsl", model.legalTerms());
        Assertions.assertEquals("jdyggdtji", model.privacyPolicy());
        Assertions.assertEquals(710150640438805903L, model.payloadLength());
        Assertions.assertEquals("ofqweykhmenevfye", model.productKind());
        Assertions.assertEquals("hybcibv", model.productProperties().version());
        Assertions.assertEquals(false, model.compatibility().isCompatible());
        Assertions.assertEquals("it", model.compatibility().message());
        Assertions.assertEquals("naamde", model.compatibility().description());
        Assertions.assertEquals(CompatibilityIssue.HIGHER_DEVICE_VERSION_REQUIRED,
            model.compatibility().issues().get(0));
    }
}
