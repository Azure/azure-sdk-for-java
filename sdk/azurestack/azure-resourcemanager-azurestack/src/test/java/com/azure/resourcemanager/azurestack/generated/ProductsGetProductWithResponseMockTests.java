// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestack.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurestack.AzureStackManager;
import com.azure.resourcemanager.azurestack.models.CompatibilityIssue;
import com.azure.resourcemanager.azurestack.models.DeviceConfiguration;
import com.azure.resourcemanager.azurestack.models.Product;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ProductsGetProductWithResponseMockTests {
    @Test
    public void testGetProductWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"zbonlwnt\",\"description\":\"gokdwbwhks\",\"publisherDisplayName\":\"cmrvexzt\",\"publisherIdentifier\":\"t\",\"offer\":\"sfraoyzko\",\"offerVersion\":\"tlmngu\",\"sku\":\"wqaldsyu\",\"billingPartNumber\":\"imerqfobwyznk\",\"vmExtensionType\":\"kutwpf\",\"galleryItemIdentity\":\"a\",\"iconUris\":{\"large\":\"r\",\"wide\":\"dsnfdsdoakgtdl\",\"medium\":\"kzevdlhewpusds\",\"small\":\"wvogvbbejdc\",\"hero\":\"qqmoaku\"},\"links\":[{\"displayName\":\"zr\",\"uri\":\"dgrtwaenuuzkopbm\"}],\"legalTerms\":\"rfdwoyu\",\"privacyPolicy\":\"ziuiefozbhdm\",\"payloadLength\":41888991515235103,\"productKind\":\"qhoftrmaequiah\",\"productProperties\":{\"version\":\"slfaoqzpiyyl\"},\"compatibility\":{\"isCompatible\":false,\"message\":\"whccs\",\"description\":\"kaivwit\",\"issues\":[\"HigherDeviceVersionRequired\",\"ADFSIdentitySystemRequired\",\"ConnectionToAzureRequired\"]}},\"etag\":\"gwol\",\"id\":\"h\",\"name\":\"zbwemh\",\"type\":\"i\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureStackManager manager = AzureStackManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Product response = manager.products()
            .getProductWithResponse("twwaezkojvdcpzf", "qouicybxarzgsz", "foxciq", new DeviceConfiguration(),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("gwol", response.etag());
        Assertions.assertEquals("zbonlwnt", response.displayName());
        Assertions.assertEquals("gokdwbwhks", response.description());
        Assertions.assertEquals("cmrvexzt", response.publisherDisplayName());
        Assertions.assertEquals("t", response.publisherIdentifier());
        Assertions.assertEquals("sfraoyzko", response.offer());
        Assertions.assertEquals("tlmngu", response.offerVersion());
        Assertions.assertEquals("wqaldsyu", response.sku());
        Assertions.assertEquals("imerqfobwyznk", response.billingPartNumber());
        Assertions.assertEquals("kutwpf", response.vmExtensionType());
        Assertions.assertEquals("a", response.galleryItemIdentity());
        Assertions.assertEquals("r", response.iconUris().large());
        Assertions.assertEquals("dsnfdsdoakgtdl", response.iconUris().wide());
        Assertions.assertEquals("kzevdlhewpusds", response.iconUris().medium());
        Assertions.assertEquals("wvogvbbejdc", response.iconUris().small());
        Assertions.assertEquals("qqmoaku", response.iconUris().hero());
        Assertions.assertEquals("zr", response.links().get(0).displayName());
        Assertions.assertEquals("dgrtwaenuuzkopbm", response.links().get(0).uri());
        Assertions.assertEquals("rfdwoyu", response.legalTerms());
        Assertions.assertEquals("ziuiefozbhdm", response.privacyPolicy());
        Assertions.assertEquals(41888991515235103L, response.payloadLength());
        Assertions.assertEquals("qhoftrmaequiah", response.productKind());
        Assertions.assertEquals("slfaoqzpiyyl", response.productProperties().version());
        Assertions.assertEquals(false, response.compatibility().isCompatible());
        Assertions.assertEquals("whccs", response.compatibility().message());
        Assertions.assertEquals("kaivwit", response.compatibility().description());
        Assertions.assertEquals(CompatibilityIssue.HIGHER_DEVICE_VERSION_REQUIRED,
            response.compatibility().issues().get(0));
    }
}
