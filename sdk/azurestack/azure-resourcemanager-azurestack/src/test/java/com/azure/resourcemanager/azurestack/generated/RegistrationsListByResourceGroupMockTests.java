// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestack.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurestack.AzureStackManager;
import com.azure.resourcemanager.azurestack.models.Registration;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RegistrationsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"objectId\":\"vwxqibyqunyo\",\"cloudId\":\"wlmdjrkv\",\"billingModel\":\"bvfvpdbod\"},\"etag\":\"izsjqlhkrr\",\"location\":\"bdeibqipqk\",\"tags\":{\"refajpjorwkqnyh\":\"xndzwm\",\"j\":\"b\"},\"id\":\"jivfxzsjabib\",\"name\":\"ystawfsdjpvkvp\",\"type\":\"jxbkzbzkdvn\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureStackManager manager = AzureStackManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Registration> response
            = manager.registrations().listByResourceGroup("vnhltiugcx", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("bdeibqipqk", response.iterator().next().location());
        Assertions.assertEquals("xndzwm", response.iterator().next().tags().get("refajpjorwkqnyh"));
        Assertions.assertEquals("izsjqlhkrr", response.iterator().next().etag());
        Assertions.assertEquals("vwxqibyqunyo", response.iterator().next().objectId());
        Assertions.assertEquals("wlmdjrkv", response.iterator().next().cloudId());
        Assertions.assertEquals("bvfvpdbod", response.iterator().next().billingModel());
    }
}
