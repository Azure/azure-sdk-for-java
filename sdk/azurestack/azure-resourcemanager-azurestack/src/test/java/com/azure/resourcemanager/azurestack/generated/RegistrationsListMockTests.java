// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestack.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.azurestack.AzureStackManager;
import com.azure.resourcemanager.azurestack.models.Registration;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RegistrationsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"objectId\":\"budurgkakmo\",\"cloudId\":\"hjjklff\",\"billingModel\":\"ouw\"},\"etag\":\"gzrf\",\"location\":\"eeyebi\",\"tags\":{\"bqwrvtldgm\":\"ayuhqlbjbsy\",\"smwutwbdsrezpd\":\"pgvmpipaslthaqfx\",\"ytisibir\":\"hneuyowqkd\"},\"id\":\"gpikpzimejza\",\"name\":\"lfzxiavrmbzonoki\",\"type\":\"rjqc\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureStackManager manager = AzureStackManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Registration> response = manager.registrations().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("eeyebi", response.iterator().next().location());
        Assertions.assertEquals("ayuhqlbjbsy", response.iterator().next().tags().get("bqwrvtldgm"));
        Assertions.assertEquals("gzrf", response.iterator().next().etag());
        Assertions.assertEquals("budurgkakmo", response.iterator().next().objectId());
        Assertions.assertEquals("hjjklff", response.iterator().next().cloudId());
        Assertions.assertEquals("ouw", response.iterator().next().billingModel());
    }
}
