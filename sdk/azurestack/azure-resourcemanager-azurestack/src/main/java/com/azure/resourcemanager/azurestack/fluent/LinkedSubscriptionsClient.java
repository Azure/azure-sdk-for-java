// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestack.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.azurestack.fluent.models.LinkedSubscriptionInner;
import com.azure.resourcemanager.azurestack.models.LinkedSubscriptionParameter;

/** An instance of this class provides access to all the operations defined in LinkedSubscriptionsClient. */
public interface LinkedSubscriptionsClient {
    /**
     * Returns a list of all linked subscriptions under current resource group.
     *
     * @param resourceGroup Name of the resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of linked subscriptions with paging support.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LinkedSubscriptionInner> listByResourceGroup(String resourceGroup);

    /**
     * Returns a list of all linked subscriptions under current resource group.
     *
     * @param resourceGroup Name of the resource group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of linked subscriptions with paging support.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LinkedSubscriptionInner> listByResourceGroup(String resourceGroup, Context context);

    /**
     * Returns a list of all linked subscriptions under current subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of linked subscriptions with paging support.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LinkedSubscriptionInner> list();

    /**
     * Returns a list of all linked subscriptions under current subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of linked subscriptions with paging support.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LinkedSubscriptionInner> list(Context context);

    /**
     * Returns the properties of a Linked Subscription resource.
     *
     * @param resourceGroup Name of the resource group.
     * @param linkedSubscriptionName Name of the Linked Subscription resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return linked Subscription information.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LinkedSubscriptionInner getByResourceGroup(String resourceGroup, String linkedSubscriptionName);

    /**
     * Returns the properties of a Linked Subscription resource.
     *
     * @param resourceGroup Name of the resource group.
     * @param linkedSubscriptionName Name of the Linked Subscription resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return linked Subscription information.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<LinkedSubscriptionInner> getByResourceGroupWithResponse(
        String resourceGroup, String linkedSubscriptionName, Context context);

    /**
     * Delete the requested Linked Subscription resource.
     *
     * @param resourceGroup Name of the resource group.
     * @param linkedSubscriptionName Name of the Linked Subscription resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroup, String linkedSubscriptionName);

    /**
     * Delete the requested Linked Subscription resource.
     *
     * @param resourceGroup Name of the resource group.
     * @param linkedSubscriptionName Name of the Linked Subscription resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroup, String linkedSubscriptionName, Context context);

    /**
     * Create or update a linked subscription resource.
     *
     * @param resourceGroup Name of the resource group.
     * @param linkedSubscriptionName Name of the Linked Subscription resource.
     * @param resource Linked subscription resource parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return linked Subscription information.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LinkedSubscriptionInner createOrUpdate(
        String resourceGroup, String linkedSubscriptionName, LinkedSubscriptionParameter resource);

    /**
     * Create or update a linked subscription resource.
     *
     * @param resourceGroup Name of the resource group.
     * @param linkedSubscriptionName Name of the Linked Subscription resource.
     * @param resource Linked subscription resource parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return linked Subscription information.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<LinkedSubscriptionInner> createOrUpdateWithResponse(
        String resourceGroup, String linkedSubscriptionName, LinkedSubscriptionParameter resource, Context context);

    /**
     * Patch a Linked Subscription resource.
     *
     * @param resourceGroup Name of the resource group.
     * @param linkedSubscriptionName Name of the Linked Subscription resource.
     * @param resource Linked subscription resource parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return linked Subscription information.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LinkedSubscriptionInner update(
        String resourceGroup, String linkedSubscriptionName, LinkedSubscriptionParameter resource);

    /**
     * Patch a Linked Subscription resource.
     *
     * @param resourceGroup Name of the resource group.
     * @param linkedSubscriptionName Name of the Linked Subscription resource.
     * @param resource Linked subscription resource parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return linked Subscription information.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<LinkedSubscriptionInner> updateWithResponse(
        String resourceGroup, String linkedSubscriptionName, LinkedSubscriptionParameter resource, Context context);
}
