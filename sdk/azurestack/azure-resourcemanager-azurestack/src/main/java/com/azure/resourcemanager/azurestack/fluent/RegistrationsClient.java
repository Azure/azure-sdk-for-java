// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestack.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.azurestack.fluent.models.ActivationKeyResultInner;
import com.azure.resourcemanager.azurestack.fluent.models.RegistrationInner;
import com.azure.resourcemanager.azurestack.models.RegistrationParameter;

/** An instance of this class provides access to all the operations defined in RegistrationsClient. */
public interface RegistrationsClient {
    /**
     * Returns a list of all registrations.
     *
     * @param resourceGroup Name of the resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return pageable list of registrations.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RegistrationInner> listByResourceGroup(String resourceGroup);

    /**
     * Returns a list of all registrations.
     *
     * @param resourceGroup Name of the resource group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return pageable list of registrations.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RegistrationInner> listByResourceGroup(String resourceGroup, Context context);

    /**
     * Returns the properties of an Azure Stack registration.
     *
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return registration information.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RegistrationInner getByResourceGroup(String resourceGroup, String registrationName);

    /**
     * Returns the properties of an Azure Stack registration.
     *
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return registration information.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<RegistrationInner> getByResourceGroupWithResponse(
        String resourceGroup, String registrationName, Context context);

    /**
     * Delete the requested Azure Stack registration.
     *
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroup, String registrationName);

    /**
     * Delete the requested Azure Stack registration.
     *
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroup, String registrationName, Context context);

    /**
     * Create or update an Azure Stack registration.
     *
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param token Registration token.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return registration information.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RegistrationInner createOrUpdate(String resourceGroup, String registrationName, RegistrationParameter token);

    /**
     * Create or update an Azure Stack registration.
     *
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param token Registration token.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return registration information.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<RegistrationInner> createOrUpdateWithResponse(
        String resourceGroup, String registrationName, RegistrationParameter token, Context context);

    /**
     * Patch an Azure Stack registration.
     *
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param token Registration token.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return registration information.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RegistrationInner update(String resourceGroup, String registrationName, RegistrationParameter token);

    /**
     * Patch an Azure Stack registration.
     *
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param token Registration token.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return registration information.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<RegistrationInner> updateWithResponse(
        String resourceGroup, String registrationName, RegistrationParameter token, Context context);

    /**
     * Returns Azure Stack Activation Key.
     *
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the resource containing the Azure Stack activation key.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ActivationKeyResultInner getActivationKey(String resourceGroup, String registrationName);

    /**
     * Returns Azure Stack Activation Key.
     *
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the resource containing the Azure Stack activation key.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ActivationKeyResultInner> getActivationKeyWithResponse(
        String resourceGroup, String registrationName, Context context);

    /**
     * Enables remote management for device under the Azure Stack registration.
     *
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void enableRemoteManagement(String resourceGroup, String registrationName);

    /**
     * Enables remote management for device under the Azure Stack registration.
     *
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> enableRemoteManagementWithResponse(String resourceGroup, String registrationName, Context context);
}
