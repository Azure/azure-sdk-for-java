// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestack.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Product action log.
 */
@Immutable
public final class ProductLogInner implements JsonSerializable<ProductLogInner> {
    /*
     * Log ID.
     */
    private String id;

    /*
     * Logged product ID.
     */
    private String productId;

    /*
     * Logged subscription ID.
     */
    private String subscriptionId;

    /*
     * Logged registration name.
     */
    private String registrationName;

    /*
     * Logged resource group name.
     */
    private String resourceGroupName;

    /*
     * Logged operation.
     */
    private String operation;

    /*
     * Operation start datetime.
     */
    private String startDate;

    /*
     * Operation end datetime.
     */
    private String endDate;

    /*
     * Operation status.
     */
    private String status;

    /*
     * Operation error data.
     */
    private String error;

    /*
     * Operation error details.
     */
    private String details;

    /**
     * Creates an instance of ProductLogInner class.
     */
    public ProductLogInner() {
    }

    /**
     * Get the id property: Log ID.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the productId property: Logged product ID.
     * 
     * @return the productId value.
     */
    public String productId() {
        return this.productId;
    }

    /**
     * Get the subscriptionId property: Logged subscription ID.
     * 
     * @return the subscriptionId value.
     */
    public String subscriptionId() {
        return this.subscriptionId;
    }

    /**
     * Get the registrationName property: Logged registration name.
     * 
     * @return the registrationName value.
     */
    public String registrationName() {
        return this.registrationName;
    }

    /**
     * Get the resourceGroupName property: Logged resource group name.
     * 
     * @return the resourceGroupName value.
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Get the operation property: Logged operation.
     * 
     * @return the operation value.
     */
    public String operation() {
        return this.operation;
    }

    /**
     * Get the startDate property: Operation start datetime.
     * 
     * @return the startDate value.
     */
    public String startDate() {
        return this.startDate;
    }

    /**
     * Get the endDate property: Operation end datetime.
     * 
     * @return the endDate value.
     */
    public String endDate() {
        return this.endDate;
    }

    /**
     * Get the status property: Operation status.
     * 
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Get the error property: Operation error data.
     * 
     * @return the error value.
     */
    public String error() {
        return this.error;
    }

    /**
     * Get the details property: Operation error details.
     * 
     * @return the details value.
     */
    public String details() {
        return this.details;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ProductLogInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ProductLogInner if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ProductLogInner.
     */
    public static ProductLogInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ProductLogInner deserializedProductLogInner = new ProductLogInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedProductLogInner.id = reader.getString();
                } else if ("productId".equals(fieldName)) {
                    deserializedProductLogInner.productId = reader.getString();
                } else if ("subscriptionId".equals(fieldName)) {
                    deserializedProductLogInner.subscriptionId = reader.getString();
                } else if ("registrationName".equals(fieldName)) {
                    deserializedProductLogInner.registrationName = reader.getString();
                } else if ("resourceGroupName".equals(fieldName)) {
                    deserializedProductLogInner.resourceGroupName = reader.getString();
                } else if ("operation".equals(fieldName)) {
                    deserializedProductLogInner.operation = reader.getString();
                } else if ("startDate".equals(fieldName)) {
                    deserializedProductLogInner.startDate = reader.getString();
                } else if ("endDate".equals(fieldName)) {
                    deserializedProductLogInner.endDate = reader.getString();
                } else if ("status".equals(fieldName)) {
                    deserializedProductLogInner.status = reader.getString();
                } else if ("error".equals(fieldName)) {
                    deserializedProductLogInner.error = reader.getString();
                } else if ("details".equals(fieldName)) {
                    deserializedProductLogInner.details = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedProductLogInner;
        });
    }
}
