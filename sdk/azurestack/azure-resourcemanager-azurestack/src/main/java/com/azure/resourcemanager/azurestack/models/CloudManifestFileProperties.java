// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestack.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Cloud specific manifest JSON properties. */
@Fluent
public final class CloudManifestFileProperties {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(CloudManifestFileProperties.class);

    /*
     * Cloud specific manifest data.
     */
    @JsonProperty(value = "deploymentData")
    private CloudManifestFileDeploymentData deploymentData;

    /*
     * Signature of the cloud specific manifest data.
     */
    @JsonProperty(value = "signature")
    private String signature;

    /**
     * Get the deploymentData property: Cloud specific manifest data.
     *
     * @return the deploymentData value.
     */
    public CloudManifestFileDeploymentData deploymentData() {
        return this.deploymentData;
    }

    /**
     * Set the deploymentData property: Cloud specific manifest data.
     *
     * @param deploymentData the deploymentData value to set.
     * @return the CloudManifestFileProperties object itself.
     */
    public CloudManifestFileProperties withDeploymentData(CloudManifestFileDeploymentData deploymentData) {
        this.deploymentData = deploymentData;
        return this;
    }

    /**
     * Get the signature property: Signature of the cloud specific manifest data.
     *
     * @return the signature value.
     */
    public String signature() {
        return this.signature;
    }

    /**
     * Set the signature property: Signature of the cloud specific manifest data.
     *
     * @param signature the signature value to set.
     * @return the CloudManifestFileProperties object itself.
     */
    public CloudManifestFileProperties withSignature(String signature) {
        this.signature = signature;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (deploymentData() != null) {
            deploymentData().validate();
        }
    }
}
