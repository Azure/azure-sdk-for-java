// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestack.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Update details for product log.
 */
@Immutable
public final class MarketplaceProductLogUpdate implements JsonSerializable<MarketplaceProductLogUpdate> {
    /*
     * Operation to log.
     */
    private String operation;

    /*
     * Operation status to log.
     */
    private String status;

    /*
     * Error related to the operation.
     */
    private String error;

    /*
     * Error details related to operation.
     */
    private String details;

    /**
     * Creates an instance of MarketplaceProductLogUpdate class.
     */
    public MarketplaceProductLogUpdate() {
    }

    /**
     * Get the operation property: Operation to log.
     * 
     * @return the operation value.
     */
    public String operation() {
        return this.operation;
    }

    /**
     * Get the status property: Operation status to log.
     * 
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Get the error property: Error related to the operation.
     * 
     * @return the error value.
     */
    public String error() {
        return this.error;
    }

    /**
     * Get the details property: Error details related to operation.
     * 
     * @return the details value.
     */
    public String details() {
        return this.details;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MarketplaceProductLogUpdate from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MarketplaceProductLogUpdate if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the MarketplaceProductLogUpdate.
     */
    public static MarketplaceProductLogUpdate fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MarketplaceProductLogUpdate deserializedMarketplaceProductLogUpdate = new MarketplaceProductLogUpdate();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("operation".equals(fieldName)) {
                    deserializedMarketplaceProductLogUpdate.operation = reader.getString();
                } else if ("status".equals(fieldName)) {
                    deserializedMarketplaceProductLogUpdate.status = reader.getString();
                } else if ("error".equals(fieldName)) {
                    deserializedMarketplaceProductLogUpdate.error = reader.getString();
                } else if ("details".equals(fieldName)) {
                    deserializedMarketplaceProductLogUpdate.details = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMarketplaceProductLogUpdate;
        });
    }
}
