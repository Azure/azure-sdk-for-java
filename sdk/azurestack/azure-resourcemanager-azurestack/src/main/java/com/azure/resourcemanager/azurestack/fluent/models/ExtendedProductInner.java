// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestack.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.azurestack.models.ComputeRole;
import com.azure.resourcemanager.azurestack.models.DataDiskImage;
import com.azure.resourcemanager.azurestack.models.OperatingSystem;
import com.azure.resourcemanager.azurestack.models.OsDiskImage;
import java.io.IOException;
import java.util.List;

/**
 * Extended description about the product required for installing it into Azure Stack.
 */
@Immutable
public final class ExtendedProductInner implements JsonSerializable<ExtendedProductInner> {
    /*
     * The URI to the .azpkg file that provides information required for showing product in the gallery.
     */
    private String galleryPackageBlobSasUri;

    /*
     * Specifies the kind of the product (virtualMachine or virtualMachineExtension).
     */
    private String productKind;

    /*
     * Specifies additional properties describing the product.
     */
    private ExtendedProductProperties innerProperties;

    /**
     * Creates an instance of ExtendedProductInner class.
     */
    public ExtendedProductInner() {
    }

    /**
     * Get the galleryPackageBlobSasUri property: The URI to the .azpkg file that provides information required for
     * showing product in the gallery.
     * 
     * @return the galleryPackageBlobSasUri value.
     */
    public String galleryPackageBlobSasUri() {
        return this.galleryPackageBlobSasUri;
    }

    /**
     * Get the productKind property: Specifies the kind of the product (virtualMachine or virtualMachineExtension).
     * 
     * @return the productKind value.
     */
    public String productKind() {
        return this.productKind;
    }

    /**
     * Get the innerProperties property: Specifies additional properties describing the product.
     * 
     * @return the innerProperties value.
     */
    private ExtendedProductProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the version property: Specifies product version.
     * 
     * @return the version value.
     */
    public String version() {
        return this.innerProperties() == null ? null : this.innerProperties().version();
    }

    /**
     * Get the osDiskImage property: OS disk image used by product.
     * 
     * @return the osDiskImage value.
     */
    public OsDiskImage osDiskImage() {
        return this.innerProperties() == null ? null : this.innerProperties().osDiskImage();
    }

    /**
     * Get the dataDiskImages property: List of attached data disks.
     * 
     * @return the dataDiskImages value.
     */
    public List<DataDiskImage> dataDiskImages() {
        return this.innerProperties() == null ? null : this.innerProperties().dataDiskImages();
    }

    /**
     * Get the computeRole property: Specifies kind of compute role included in the package.
     * 
     * @return the computeRole value.
     */
    public ComputeRole computeRole() {
        return this.innerProperties() == null ? null : this.innerProperties().computeRole();
    }

    /**
     * Get the isSystemExtension property: Specifies if product is a Virtual Machine Extension.
     * 
     * @return the isSystemExtension value.
     */
    public Boolean isSystemExtension() {
        return this.innerProperties() == null ? null : this.innerProperties().isSystemExtension();
    }

    /**
     * Get the uri property: The URI.
     * 
     * @return the uri value.
     */
    public String uri() {
        return this.innerProperties() == null ? null : this.innerProperties().uri();
    }

    /**
     * Get the supportMultipleExtensions property: Indicates if specified product supports multiple extensions.
     * 
     * @return the supportMultipleExtensions value.
     */
    public Boolean supportMultipleExtensions() {
        return this.innerProperties() == null ? null : this.innerProperties().supportMultipleExtensions();
    }

    /**
     * Get the vmOsType property: Specifies operating system used by the product.
     * 
     * @return the vmOsType value.
     */
    public OperatingSystem vmOsType() {
        return this.innerProperties() == null ? null : this.innerProperties().vmOsType();
    }

    /**
     * Get the vmScaleSetEnabled property: Indicates if virtual machine Scale Set is enabled in the specified product.
     * 
     * @return the vmScaleSetEnabled value.
     */
    public Boolean vmScaleSetEnabled() {
        return this.innerProperties() == null ? null : this.innerProperties().vmScaleSetEnabled();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ExtendedProductInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ExtendedProductInner if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ExtendedProductInner.
     */
    public static ExtendedProductInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ExtendedProductInner deserializedExtendedProductInner = new ExtendedProductInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("galleryPackageBlobSasUri".equals(fieldName)) {
                    deserializedExtendedProductInner.galleryPackageBlobSasUri = reader.getString();
                } else if ("productKind".equals(fieldName)) {
                    deserializedExtendedProductInner.productKind = reader.getString();
                } else if ("properties".equals(fieldName)) {
                    deserializedExtendedProductInner.innerProperties = ExtendedProductProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedExtendedProductInner;
        });
    }
}
