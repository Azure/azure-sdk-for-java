/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.azurestack.v2017_06_01.implementation;

import com.microsoft.azure.arm.resources.models.implementation.GroupableResourceCoreImpl;
import com.microsoft.azure.management.azurestack.v2017_06_01.Registration;
import rx.Observable;

class RegistrationImpl extends GroupableResourceCoreImpl<Registration, RegistrationInner, RegistrationImpl, AzureStackManager> implements Registration, Registration.Definition, Registration.Update {
    private String cregistrationToken;
    private String uregistrationToken;
    RegistrationImpl(String name, RegistrationInner inner, AzureStackManager manager) {
        super(name, inner, manager);
    }

    @Override
    public Observable<Registration> createResourceAsync() {
        RegistrationsInner client = this.manager().inner().registrations();
        return client.createOrUpdateAsync(this.resourceGroupName(), this.name(), this.cregistrationToken)
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<Registration> updateResourceAsync() {
        RegistrationsInner client = this.manager().inner().registrations();
        return client.updateAsync(this.resourceGroupName(), this.name(), this.uregistrationToken)
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<RegistrationInner> getInnerAsync() {
        RegistrationsInner client = this.manager().inner().registrations();
        return client.getByResourceGroupAsync(this.resourceGroupName(), this.name());
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public String billingModel() {
        return this.inner().billingModel();
    }

    @Override
    public String cloudId() {
        return this.inner().cloudId();
    }

    @Override
    public String etag() {
        return this.inner().etag();
    }

    @Override
    public String objectId() {
        return this.inner().objectId();
    }

    @Override
    public RegistrationImpl withRegistrationToken(String registrationToken) {
        if (isInCreateMode()) {
            this.cregistrationToken = registrationToken;
        } else {
            this.uregistrationToken = registrationToken;
        }
        return this;
    }

}
