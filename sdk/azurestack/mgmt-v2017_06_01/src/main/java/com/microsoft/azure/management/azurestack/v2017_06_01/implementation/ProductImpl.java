/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.azurestack.v2017_06_01.implementation;

import com.microsoft.azure.management.azurestack.v2017_06_01.Product;
import com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl;
import rx.Observable;
import com.microsoft.azure.management.azurestack.v2017_06_01.Compatibility;
import com.microsoft.azure.management.azurestack.v2017_06_01.IconUris;
import java.util.List;
import com.microsoft.azure.management.azurestack.v2017_06_01.ProductLink;
import com.microsoft.azure.management.azurestack.v2017_06_01.ProductProperties;

class ProductImpl extends IndexableRefreshableWrapperImpl<Product, ProductInner> implements Product {
    private final AzureStackManager manager;
    private String resourceGroup;
    private String registrationName;
    private String productName;

    ProductImpl(ProductInner inner,  AzureStackManager manager) {
        super(null, inner);
        this.manager = manager;
        // set resource ancestor and positional variables
        this.resourceGroup = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.registrationName = IdParsingUtils.getValueFromIdByName(inner.id(), "registrations");
        this.productName = IdParsingUtils.getValueFromIdByName(inner.id(), "products");
    }

    @Override
    public AzureStackManager manager() {
        return this.manager;
    }

    @Override
    protected Observable<ProductInner> getInnerAsync() {
        ProductsInner client = this.manager().inner().products();
        return client.getAsync(this.resourceGroup, this.registrationName, this.productName);
    }



    @Override
    public String billingPartNumber() {
        return this.inner().billingPartNumber();
    }

    @Override
    public Compatibility compatibility() {
        return this.inner().compatibility();
    }

    @Override
    public String description() {
        return this.inner().description();
    }

    @Override
    public String displayName() {
        return this.inner().displayName();
    }

    @Override
    public String etag() {
        return this.inner().etag();
    }

    @Override
    public String galleryItemIdentity() {
        return this.inner().galleryItemIdentity();
    }

    @Override
    public IconUris iconUris() {
        return this.inner().iconUris();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String legalTerms() {
        return this.inner().legalTerms();
    }

    @Override
    public List<ProductLink> links() {
        return this.inner().links();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String offer() {
        return this.inner().offer();
    }

    @Override
    public String offerVersion() {
        return this.inner().offerVersion();
    }

    @Override
    public Long payloadLength() {
        return this.inner().payloadLength();
    }

    @Override
    public String privacyPolicy() {
        return this.inner().privacyPolicy();
    }

    @Override
    public String productKind() {
        return this.inner().productKind();
    }

    @Override
    public ProductProperties productProperties() {
        return this.inner().productProperties();
    }

    @Override
    public String publisherDisplayName() {
        return this.inner().publisherDisplayName();
    }

    @Override
    public String publisherIdentifier() {
        return this.inner().publisherIdentifier();
    }

    @Override
    public String sku() {
        return this.inner().sku();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public String vmExtensionType() {
        return this.inner().vmExtensionType();
    }

}
