// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.liftrarize.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.liftrarize.LiftrarizeManager;
import com.azure.resourcemanager.liftrarize.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.liftrarize.models.OrganizationResource;
import com.azure.resourcemanager.liftrarize.models.SingleSignOnStates;
import com.azure.resourcemanager.liftrarize.models.SingleSignOnType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OrganizationsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"marketplace\":{\"subscriptionId\":\"bnbdxkqpxokajion\",\"subscriptionStatus\":\"Suspended\",\"offerDetails\":{\"publisherId\":\"ex\",\"offerId\":\"stxgc\",\"planId\":\"odgmaajrmvdjwz\",\"planName\":\"ovmclwhijcoejct\",\"termUnit\":\"aqsqsycbkbfk\",\"termId\":\"kdkexxp\"}},\"user\":{\"firstName\":\"fmxa\",\"lastName\":\"fjpgddtocjjxhvp\",\"emailAddress\":\"uexhdzx\",\"upn\":\"qeojnxqbzvddntw\",\"phoneNumber\":\"eic\"},\"provisioningState\":\"Succeeded\",\"partnerProperties\":{\"description\":\"pzaoqvuhr\"},\"singleSignOnProperties\":{\"type\":\"Saml\",\"state\":\"Enable\",\"enterpriseAppId\":\"ddglm\",\"url\":\"hjq\",\"aadDomains\":[\"yeicxmqciwqvhk\",\"ixuigdtopbobj\"]}},\"identity\":{\"principalId\":\"e9aac873-ea4c-4329-9534-2d6e36175d98\",\"tenantId\":\"87afb4f4-315a-459d-86a2-bbdb6286fe4b\",\"type\":\"None\",\"userAssignedIdentities\":{\"a\":{\"principalId\":\"33b400e1-d81c-4038-8af0-50cb7efed528\",\"clientId\":\"6f9289e0-d67f-428f-a472-23dc3e3242d0\"}}},\"location\":\"rzayv\",\"tags\":{\"ln\":\"gvdfgiotkftutq\",\"qmi\":\"xlefgugnxkrx\"},\"id\":\"tthzrvqd\",\"name\":\"abhjybi\",\"type\":\"ehoqfbowskan\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        LiftrarizeManager manager = LiftrarizeManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<OrganizationResource> response = manager.organizations().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("rzayv", response.iterator().next().location());
        Assertions.assertEquals("gvdfgiotkftutq", response.iterator().next().tags().get("ln"));
        Assertions.assertEquals("bnbdxkqpxokajion",
            response.iterator().next().properties().marketplace().subscriptionId());
        Assertions.assertEquals("ex",
            response.iterator().next().properties().marketplace().offerDetails().publisherId());
        Assertions.assertEquals("stxgc",
            response.iterator().next().properties().marketplace().offerDetails().offerId());
        Assertions.assertEquals("odgmaajrmvdjwz",
            response.iterator().next().properties().marketplace().offerDetails().planId());
        Assertions.assertEquals("ovmclwhijcoejct",
            response.iterator().next().properties().marketplace().offerDetails().planName());
        Assertions.assertEquals("aqsqsycbkbfk",
            response.iterator().next().properties().marketplace().offerDetails().termUnit());
        Assertions.assertEquals("kdkexxp",
            response.iterator().next().properties().marketplace().offerDetails().termId());
        Assertions.assertEquals("fmxa", response.iterator().next().properties().user().firstName());
        Assertions.assertEquals("fjpgddtocjjxhvp", response.iterator().next().properties().user().lastName());
        Assertions.assertEquals("uexhdzx", response.iterator().next().properties().user().emailAddress());
        Assertions.assertEquals("qeojnxqbzvddntw", response.iterator().next().properties().user().upn());
        Assertions.assertEquals("eic", response.iterator().next().properties().user().phoneNumber());
        Assertions.assertEquals("pzaoqvuhr", response.iterator().next().properties().partnerProperties().description());
        Assertions.assertEquals(SingleSignOnType.SAML,
            response.iterator().next().properties().singleSignOnProperties().type());
        Assertions.assertEquals(SingleSignOnStates.ENABLE,
            response.iterator().next().properties().singleSignOnProperties().state());
        Assertions.assertEquals("ddglm",
            response.iterator().next().properties().singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("hjq", response.iterator().next().properties().singleSignOnProperties().url());
        Assertions.assertEquals("yeicxmqciwqvhk",
            response.iterator().next().properties().singleSignOnProperties().aadDomains().get(0));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.iterator().next().identity().type());
    }
}
