// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.liftrarize.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.liftrarize.models.LiftrBaseSingleSignOnPropertiesV2;
import com.azure.resourcemanager.liftrarize.models.SingleSignOnStates;
import com.azure.resourcemanager.liftrarize.models.SingleSignOnType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class LiftrBaseSingleSignOnPropertiesV2Tests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LiftrBaseSingleSignOnPropertiesV2 model = BinaryData.fromString(
            "{\"type\":\"OpenId\",\"state\":\"Enable\",\"enterpriseAppId\":\"zidnsezcxtbzsgfy\",\"url\":\"sne\",\"aadDomains\":[\"wzjeiach\",\"oosflnr\",\"sfqpteehz\"]}")
            .toObject(LiftrBaseSingleSignOnPropertiesV2.class);
        Assertions.assertEquals(SingleSignOnType.OPEN_ID, model.type());
        Assertions.assertEquals(SingleSignOnStates.ENABLE, model.state());
        Assertions.assertEquals("zidnsezcxtbzsgfy", model.enterpriseAppId());
        Assertions.assertEquals("sne", model.url());
        Assertions.assertEquals("wzjeiach", model.aadDomains().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LiftrBaseSingleSignOnPropertiesV2 model
            = new LiftrBaseSingleSignOnPropertiesV2().withType(SingleSignOnType.OPEN_ID)
                .withState(SingleSignOnStates.ENABLE)
                .withEnterpriseAppId("zidnsezcxtbzsgfy")
                .withUrl("sne")
                .withAadDomains(Arrays.asList("wzjeiach", "oosflnr", "sfqpteehz"));
        model = BinaryData.fromObject(model).toObject(LiftrBaseSingleSignOnPropertiesV2.class);
        Assertions.assertEquals(SingleSignOnType.OPEN_ID, model.type());
        Assertions.assertEquals(SingleSignOnStates.ENABLE, model.state());
        Assertions.assertEquals("zidnsezcxtbzsgfy", model.enterpriseAppId());
        Assertions.assertEquals("sne", model.url());
        Assertions.assertEquals("wzjeiach", model.aadDomains().get(0));
    }
}
