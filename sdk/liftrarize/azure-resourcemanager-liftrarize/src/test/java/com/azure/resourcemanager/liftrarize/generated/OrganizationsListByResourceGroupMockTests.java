// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.liftrarize.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.liftrarize.LiftrarizeManager;
import com.azure.resourcemanager.liftrarize.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.liftrarize.models.OrganizationResource;
import com.azure.resourcemanager.liftrarize.models.SingleSignOnStates;
import com.azure.resourcemanager.liftrarize.models.SingleSignOnType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OrganizationsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"marketplace\":{\"subscriptionId\":\"gndrvynh\",\"subscriptionStatus\":\"Suspended\",\"offerDetails\":{\"publisherId\":\"phrcgyncoc\",\"offerId\":\"ecfvmm\",\"planId\":\"oo\",\"planName\":\"xlzevgbmqjqabcy\",\"termUnit\":\"ivkwlzuvccfwnfnb\",\"termId\":\"fionl\"}},\"user\":{\"firstName\":\"x\",\"lastName\":\"qgtz\",\"emailAddress\":\"pnqbqqwxrjfe\",\"upn\":\"lnwsubisn\",\"phoneNumber\":\"mpmngnzscxaqwoo\"},\"provisioningState\":\"Failed\",\"partnerProperties\":{\"description\":\"onq\"},\"singleSignOnProperties\":{\"type\":\"Saml\",\"state\":\"Initial\",\"enterpriseAppId\":\"xnj\",\"url\":\"seiphe\",\"aadDomains\":[\"okeyyienj\",\"dlwtgrhpdj\"]}},\"identity\":{\"principalId\":\"a344b068-85be-4cff-89dc-027ca22e2475\",\"tenantId\":\"b7699b69-d901-461c-9a47-5367e4f66bc5\",\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{\"jpqyegu\":{\"principalId\":\"e3fff6e2-7238-4f24-b9ab-178831034706\",\"clientId\":\"e57cd6de-d571-419f-9e0f-2fc9dee47161\"},\"b\":{\"principalId\":\"57e2b9f0-d90d-40cd-bc9f-7660b877916b\",\"clientId\":\"b9fe1ec0-b380-44cd-a3d4-00fe27569d62\"},\"e\":{\"principalId\":\"2c7442c2-2822-4c4c-b833-8152e0dd86af\",\"clientId\":\"bc0bb03a-0192-4523-a15b-d5389ba1394b\"}}},\"location\":\"zzvdudgwds\",\"tags\":{\"wlbjnpgacftade\":\"otwmcyn\",\"uesnzwdejbavo\":\"xnltyfsoppu\",\"vudwx\":\"xzdmohctb\",\"gujjugwdkcglh\":\"ndnvo\"},\"id\":\"lazjdyggdtjixhbk\",\"name\":\"ofqweykhmenevfye\",\"type\":\"fwhybcibvy\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        LiftrarizeManager manager = LiftrarizeManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<OrganizationResource> response
            = manager.organizations().listByResourceGroup("ktzlcuiywg", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("zzvdudgwds", response.iterator().next().location());
        Assertions.assertEquals("otwmcyn", response.iterator().next().tags().get("wlbjnpgacftade"));
        Assertions.assertEquals("gndrvynh", response.iterator().next().properties().marketplace().subscriptionId());
        Assertions.assertEquals("phrcgyncoc",
            response.iterator().next().properties().marketplace().offerDetails().publisherId());
        Assertions.assertEquals("ecfvmm",
            response.iterator().next().properties().marketplace().offerDetails().offerId());
        Assertions.assertEquals("oo", response.iterator().next().properties().marketplace().offerDetails().planId());
        Assertions.assertEquals("xlzevgbmqjqabcy",
            response.iterator().next().properties().marketplace().offerDetails().planName());
        Assertions.assertEquals("ivkwlzuvccfwnfnb",
            response.iterator().next().properties().marketplace().offerDetails().termUnit());
        Assertions.assertEquals("fionl", response.iterator().next().properties().marketplace().offerDetails().termId());
        Assertions.assertEquals("x", response.iterator().next().properties().user().firstName());
        Assertions.assertEquals("qgtz", response.iterator().next().properties().user().lastName());
        Assertions.assertEquals("pnqbqqwxrjfe", response.iterator().next().properties().user().emailAddress());
        Assertions.assertEquals("lnwsubisn", response.iterator().next().properties().user().upn());
        Assertions.assertEquals("mpmngnzscxaqwoo", response.iterator().next().properties().user().phoneNumber());
        Assertions.assertEquals("onq", response.iterator().next().properties().partnerProperties().description());
        Assertions.assertEquals(SingleSignOnType.SAML,
            response.iterator().next().properties().singleSignOnProperties().type());
        Assertions.assertEquals(SingleSignOnStates.INITIAL,
            response.iterator().next().properties().singleSignOnProperties().state());
        Assertions.assertEquals("xnj",
            response.iterator().next().properties().singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("seiphe", response.iterator().next().properties().singleSignOnProperties().url());
        Assertions.assertEquals("okeyyienj",
            response.iterator().next().properties().singleSignOnProperties().aadDomains().get(0));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED,
            response.iterator().next().identity().type());
    }
}
