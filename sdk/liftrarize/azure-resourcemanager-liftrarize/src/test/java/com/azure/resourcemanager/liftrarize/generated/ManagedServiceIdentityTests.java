// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.liftrarize.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.liftrarize.models.ManagedServiceIdentity;
import com.azure.resourcemanager.liftrarize.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.liftrarize.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ManagedServiceIdentityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ManagedServiceIdentity model = BinaryData.fromString(
            "{\"principalId\":\"72f66ac1-e531-4407-8be9-586e3bd834b9\",\"tenantId\":\"caac46a2-a15b-4b60-9bfc-bfe2a0590db0\",\"type\":\"None\",\"userAssignedIdentities\":{\"mzinpvswjdk\":{\"principalId\":\"a8ee8ad6-04c1-4def-a5f1-7e867196301c\",\"clientId\":\"2e9e739f-d89d-48ac-adde-65391fb2e7e4\"},\"oodqxhcrm\":{\"principalId\":\"3c7da69a-572f-4740-84e8-5c8f127ebda7\",\"clientId\":\"d4323232-1556-467c-985c-bb61ae78344f\"},\"jtckwhdso\":{\"principalId\":\"3ec0d4f9-37c4-458f-b3c9-3a2dc2376d94\",\"clientId\":\"ebe94d77-be46-42a0-a864-f6b6cbf566a6\"}}}")
            .toObject(ManagedServiceIdentity.class);
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ManagedServiceIdentity model = new ManagedServiceIdentity().withType(ManagedServiceIdentityType.NONE)
            .withUserAssignedIdentities(mapOf("mzinpvswjdk", new UserAssignedIdentity(), "oodqxhcrm",
                new UserAssignedIdentity(), "jtckwhdso", new UserAssignedIdentity()));
        model = BinaryData.fromObject(model).toObject(ManagedServiceIdentity.class);
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
