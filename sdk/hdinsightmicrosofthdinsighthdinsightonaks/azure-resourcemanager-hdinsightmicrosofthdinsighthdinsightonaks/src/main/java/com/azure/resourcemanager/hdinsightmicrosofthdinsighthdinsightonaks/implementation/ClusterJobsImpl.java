// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsightmicrosofthdinsighthdinsightonaks.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.hdinsightmicrosofthdinsighthdinsightonaks.fluent.ClusterJobsClient;
import com.azure.resourcemanager.hdinsightmicrosofthdinsighthdinsightonaks.fluent.models.ClusterJobInner;
import com.azure.resourcemanager.hdinsightmicrosofthdinsighthdinsightonaks.models.ClusterJob;
import com.azure.resourcemanager.hdinsightmicrosofthdinsighthdinsightonaks.models.ClusterJobs;

public final class ClusterJobsImpl implements ClusterJobs {
    private static final ClientLogger LOGGER = new ClientLogger(ClusterJobsImpl.class);

    private final ClusterJobsClient innerClient;

    private final com.azure.resourcemanager.hdinsightmicrosofthdinsighthdinsightonaks.HDInsightOnAksManager
        serviceManager;

    public ClusterJobsImpl(
        ClusterJobsClient innerClient,
        com.azure.resourcemanager.hdinsightmicrosofthdinsighthdinsightonaks.HDInsightOnAksManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public ClusterJob runJob(
        String resourceGroupName, String clusterPoolName, String clusterName, ClusterJobInner clusterJob) {
        ClusterJobInner inner =
            this.serviceClient().runJob(resourceGroupName, clusterPoolName, clusterName, clusterJob);
        if (inner != null) {
            return new ClusterJobImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public ClusterJob runJob(
        String resourceGroupName,
        String clusterPoolName,
        String clusterName,
        ClusterJobInner clusterJob,
        Context context) {
        ClusterJobInner inner =
            this.serviceClient().runJob(resourceGroupName, clusterPoolName, clusterName, clusterJob, context);
        if (inner != null) {
            return new ClusterJobImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public PagedIterable<ClusterJob> list(String resourceGroupName, String clusterPoolName, String clusterName) {
        PagedIterable<ClusterJobInner> inner =
            this.serviceClient().list(resourceGroupName, clusterPoolName, clusterName);
        return Utils.mapPage(inner, inner1 -> new ClusterJobImpl(inner1, this.manager()));
    }

    public PagedIterable<ClusterJob> list(
        String resourceGroupName, String clusterPoolName, String clusterName, Context context) {
        PagedIterable<ClusterJobInner> inner =
            this.serviceClient().list(resourceGroupName, clusterPoolName, clusterName, context);
        return Utils.mapPage(inner, inner1 -> new ClusterJobImpl(inner1, this.manager()));
    }

    private ClusterJobsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.hdinsightmicrosofthdinsighthdinsightonaks.HDInsightOnAksManager manager() {
        return this.serviceManager;
    }
}
