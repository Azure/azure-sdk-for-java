// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsightmicrosofthdinsighthdinsightonaks.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.hdinsightmicrosofthdinsighthdinsightonaks.fluent.LocationsClient;
import com.azure.resourcemanager.hdinsightmicrosofthdinsighthdinsightonaks.fluent.models.NameAvailabilityResultInner;
import com.azure.resourcemanager.hdinsightmicrosofthdinsighthdinsightonaks.models.Locations;
import com.azure.resourcemanager.hdinsightmicrosofthdinsighthdinsightonaks.models.NameAvailabilityParameters;
import com.azure.resourcemanager.hdinsightmicrosofthdinsighthdinsightonaks.models.NameAvailabilityResult;

public final class LocationsImpl implements Locations {
    private static final ClientLogger LOGGER = new ClientLogger(LocationsImpl.class);

    private final LocationsClient innerClient;

    private final com.azure.resourcemanager.hdinsightmicrosofthdinsighthdinsightonaks.HDInsightOnAksManager
        serviceManager;

    public LocationsImpl(
        LocationsClient innerClient,
        com.azure.resourcemanager.hdinsightmicrosofthdinsighthdinsightonaks.HDInsightOnAksManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<NameAvailabilityResult> checkNameAvailabilityWithResponse(
        String location, NameAvailabilityParameters nameAvailabilityParameters, Context context) {
        Response<NameAvailabilityResultInner> inner =
            this.serviceClient().checkNameAvailabilityWithResponse(location, nameAvailabilityParameters, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new NameAvailabilityResultImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public NameAvailabilityResult checkNameAvailability(
        String location, NameAvailabilityParameters nameAvailabilityParameters) {
        NameAvailabilityResultInner inner =
            this.serviceClient().checkNameAvailability(location, nameAvailabilityParameters);
        if (inner != null) {
            return new NameAvailabilityResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private LocationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.hdinsightmicrosofthdinsighthdinsightonaks.HDInsightOnAksManager manager() {
        return this.serviceManager;
    }
}
