// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sphere.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.sphere.fluent.models.DeviceInsightInner;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class DeviceInsightInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DeviceInsightInner model = BinaryData.fromString(
            "{\"deviceId\":\"ntypmrbpizcdrqj\",\"description\":\"dpydn\",\"startTimestampUtc\":\"2021-02-06T09:08:09Z\",\"endTimestampUtc\":\"2021-07-10T19:26:28Z\",\"eventCategory\":\"xdeoejzic\",\"eventClass\":\"ifsjttgzfbishcb\",\"eventType\":\"hajdeyeamdpha\",\"eventCount\":1536073800}")
            .toObject(DeviceInsightInner.class);
        Assertions.assertEquals("ntypmrbpizcdrqj", model.deviceId());
        Assertions.assertEquals("dpydn", model.description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-06T09:08:09Z"), model.startTimestampUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-10T19:26:28Z"), model.endTimestampUtc());
        Assertions.assertEquals("xdeoejzic", model.eventCategory());
        Assertions.assertEquals("ifsjttgzfbishcb", model.eventClass());
        Assertions.assertEquals("hajdeyeamdpha", model.eventType());
        Assertions.assertEquals(1536073800, model.eventCount());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DeviceInsightInner model = new DeviceInsightInner().withDeviceId("ntypmrbpizcdrqj").withDescription("dpydn")
            .withStartTimestampUtc(OffsetDateTime.parse("2021-02-06T09:08:09Z"))
            .withEndTimestampUtc(OffsetDateTime.parse("2021-07-10T19:26:28Z")).withEventCategory("xdeoejzic")
            .withEventClass("ifsjttgzfbishcb").withEventType("hajdeyeamdpha").withEventCount(1536073800);
        model = BinaryData.fromObject(model).toObject(DeviceInsightInner.class);
        Assertions.assertEquals("ntypmrbpizcdrqj", model.deviceId());
        Assertions.assertEquals("dpydn", model.description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-06T09:08:09Z"), model.startTimestampUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-10T19:26:28Z"), model.endTimestampUtc());
        Assertions.assertEquals("xdeoejzic", model.eventCategory());
        Assertions.assertEquals("ifsjttgzfbishcb", model.eventClass());
        Assertions.assertEquals("hajdeyeamdpha", model.eventType());
        Assertions.assertEquals(1536073800, model.eventCount());
    }
}
