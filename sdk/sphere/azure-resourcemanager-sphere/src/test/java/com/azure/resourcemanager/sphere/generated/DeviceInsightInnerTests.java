// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sphere.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.sphere.fluent.models.DeviceInsightInner;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class DeviceInsightInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DeviceInsightInner model =
            BinaryData
                .fromString(
                    "{\"deviceId\":\"eggzfb\",\"description\":\"hfmvfaxkffe\",\"startTimestampUtc\":\"2021-04-21T05:15:54Z\",\"endTimestampUtc\":\"2021-05-15T04:16:32Z\",\"eventCategory\":\"hl\",\"eventClass\":\"m\",\"eventType\":\"zy\",\"eventCount\":2122365511}")
                .toObject(DeviceInsightInner.class);
        Assertions.assertEquals("eggzfb", model.deviceId());
        Assertions.assertEquals("hfmvfaxkffe", model.description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-21T05:15:54Z"), model.startTimestampUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-15T04:16:32Z"), model.endTimestampUtc());
        Assertions.assertEquals("hl", model.eventCategory());
        Assertions.assertEquals("m", model.eventClass());
        Assertions.assertEquals("zy", model.eventType());
        Assertions.assertEquals(2122365511, model.eventCount());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DeviceInsightInner model =
            new DeviceInsightInner()
                .withDeviceId("eggzfb")
                .withDescription("hfmvfaxkffe")
                .withStartTimestampUtc(OffsetDateTime.parse("2021-04-21T05:15:54Z"))
                .withEndTimestampUtc(OffsetDateTime.parse("2021-05-15T04:16:32Z"))
                .withEventCategory("hl")
                .withEventClass("m")
                .withEventType("zy")
                .withEventCount(2122365511);
        model = BinaryData.fromObject(model).toObject(DeviceInsightInner.class);
        Assertions.assertEquals("eggzfb", model.deviceId());
        Assertions.assertEquals("hfmvfaxkffe", model.description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-21T05:15:54Z"), model.startTimestampUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-15T04:16:32Z"), model.endTimestampUtc());
        Assertions.assertEquals("hl", model.eventCategory());
        Assertions.assertEquals("m", model.eventClass());
        Assertions.assertEquals("zy", model.eventType());
        Assertions.assertEquals(2122365511, model.eventCount());
    }
}
