// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sphere.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.sphere.fluent.models.DeviceInsightInner;
import com.azure.resourcemanager.sphere.models.PagedDeviceInsight;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PagedDeviceInsightTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PagedDeviceInsight model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"deviceId\":\"w\",\"description\":\"hzdobpxjmflbvvnc\",\"startTimestampUtc\":\"2021-11-01T14:14:41Z\",\"endTimestampUtc\":\"2021-05-23T11:48:05Z\",\"eventCategory\":\"cciw\",\"eventClass\":\"zjuqkhrsaj\",\"eventType\":\"wkuofoskghsauu\",\"eventCount\":2118838793},{\"deviceId\":\"jmvxie\",\"description\":\"uugidyjrrfby\",\"startTimestampUtc\":\"2021-09-15T05:38:02Z\",\"endTimestampUtc\":\"2021-05-02T14:53:40Z\",\"eventCategory\":\"v\",\"eventClass\":\"xc\",\"eventType\":\"onpc\",\"eventCount\":316608134}],\"nextLink\":\"cohslkev\"}")
                .toObject(PagedDeviceInsight.class);
        Assertions.assertEquals("w", model.value().get(0).deviceId());
        Assertions.assertEquals("hzdobpxjmflbvvnc", model.value().get(0).description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-01T14:14:41Z"), model.value().get(0).startTimestampUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-23T11:48:05Z"), model.value().get(0).endTimestampUtc());
        Assertions.assertEquals("cciw", model.value().get(0).eventCategory());
        Assertions.assertEquals("zjuqkhrsaj", model.value().get(0).eventClass());
        Assertions.assertEquals("wkuofoskghsauu", model.value().get(0).eventType());
        Assertions.assertEquals(2118838793, model.value().get(0).eventCount());
        Assertions.assertEquals("cohslkev", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PagedDeviceInsight model =
            new PagedDeviceInsight()
                .withValue(
                    Arrays
                        .asList(
                            new DeviceInsightInner()
                                .withDeviceId("w")
                                .withDescription("hzdobpxjmflbvvnc")
                                .withStartTimestampUtc(OffsetDateTime.parse("2021-11-01T14:14:41Z"))
                                .withEndTimestampUtc(OffsetDateTime.parse("2021-05-23T11:48:05Z"))
                                .withEventCategory("cciw")
                                .withEventClass("zjuqkhrsaj")
                                .withEventType("wkuofoskghsauu")
                                .withEventCount(2118838793),
                            new DeviceInsightInner()
                                .withDeviceId("jmvxie")
                                .withDescription("uugidyjrrfby")
                                .withStartTimestampUtc(OffsetDateTime.parse("2021-09-15T05:38:02Z"))
                                .withEndTimestampUtc(OffsetDateTime.parse("2021-05-02T14:53:40Z"))
                                .withEventCategory("v")
                                .withEventClass("xc")
                                .withEventType("onpc")
                                .withEventCount(316608134)))
                .withNextLink("cohslkev");
        model = BinaryData.fromObject(model).toObject(PagedDeviceInsight.class);
        Assertions.assertEquals("w", model.value().get(0).deviceId());
        Assertions.assertEquals("hzdobpxjmflbvvnc", model.value().get(0).description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-01T14:14:41Z"), model.value().get(0).startTimestampUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-23T11:48:05Z"), model.value().get(0).endTimestampUtc());
        Assertions.assertEquals("cciw", model.value().get(0).eventCategory());
        Assertions.assertEquals("zjuqkhrsaj", model.value().get(0).eventClass());
        Assertions.assertEquals("wkuofoskghsauu", model.value().get(0).eventType());
        Assertions.assertEquals(2118838793, model.value().get(0).eventCount());
        Assertions.assertEquals("cohslkev", model.nextLink());
    }
}
