// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sphere.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.sphere.fluent.models.DeviceInsightInner;
import com.azure.resourcemanager.sphere.models.PagedDeviceInsight;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PagedDeviceInsightTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PagedDeviceInsight model = BinaryData.fromString(
            "{\"value\":[{\"deviceId\":\"rsa\",\"description\":\"iwkuofos\",\"startTimestampUtc\":\"2021-06-28T14:02:06Z\",\"endTimestampUtc\":\"2021-03-08T03:12:48Z\",\"eventCategory\":\"sauuimj\",\"eventClass\":\"vxieduugidyj\",\"eventType\":\"rfbyaosvexcso\",\"eventCount\":771742090},{\"deviceId\":\"clhocohsl\",\"description\":\"ev\",\"startTimestampUtc\":\"2021-02-15T02:43:43Z\",\"endTimestampUtc\":\"2021-07-27T15:45:18Z\",\"eventCategory\":\"gz\",\"eventClass\":\"buhfmvfaxkffeiit\",\"eventType\":\"lvmezyvshxmzsbbz\",\"eventCount\":681165656},{\"deviceId\":\"gigr\",\"description\":\"wburvjxxjnspydpt\",\"startTimestampUtc\":\"2021-07-25T09:18:50Z\",\"endTimestampUtc\":\"2021-09-24T03:08Z\",\"eventCategory\":\"nkoukn\",\"eventClass\":\"udwtiukbl\",\"eventType\":\"ngkpocipazy\",\"eventCount\":212177726}],\"nextLink\":\"gukgjnpiucgygevq\"}")
            .toObject(PagedDeviceInsight.class);
        Assertions.assertEquals("rsa", model.value().get(0).deviceId());
        Assertions.assertEquals("iwkuofos", model.value().get(0).description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-28T14:02:06Z"), model.value().get(0).startTimestampUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-08T03:12:48Z"), model.value().get(0).endTimestampUtc());
        Assertions.assertEquals("sauuimj", model.value().get(0).eventCategory());
        Assertions.assertEquals("vxieduugidyj", model.value().get(0).eventClass());
        Assertions.assertEquals("rfbyaosvexcso", model.value().get(0).eventType());
        Assertions.assertEquals(771742090, model.value().get(0).eventCount());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PagedDeviceInsight model = new PagedDeviceInsight().withValue(Arrays.asList(
            new DeviceInsightInner().withDeviceId("rsa").withDescription("iwkuofos")
                .withStartTimestampUtc(OffsetDateTime.parse("2021-06-28T14:02:06Z"))
                .withEndTimestampUtc(OffsetDateTime.parse("2021-03-08T03:12:48Z")).withEventCategory("sauuimj")
                .withEventClass("vxieduugidyj").withEventType("rfbyaosvexcso").withEventCount(771742090),
            new DeviceInsightInner().withDeviceId("clhocohsl").withDescription("ev")
                .withStartTimestampUtc(OffsetDateTime.parse("2021-02-15T02:43:43Z"))
                .withEndTimestampUtc(OffsetDateTime.parse("2021-07-27T15:45:18Z")).withEventCategory("gz")
                .withEventClass("buhfmvfaxkffeiit").withEventType("lvmezyvshxmzsbbz").withEventCount(681165656),
            new DeviceInsightInner().withDeviceId("gigr").withDescription("wburvjxxjnspydpt")
                .withStartTimestampUtc(OffsetDateTime.parse("2021-07-25T09:18:50Z"))
                .withEndTimestampUtc(OffsetDateTime.parse("2021-09-24T03:08Z")).withEventCategory("nkoukn")
                .withEventClass("udwtiukbl").withEventType("ngkpocipazy").withEventCount(212177726)));
        model = BinaryData.fromObject(model).toObject(PagedDeviceInsight.class);
        Assertions.assertEquals("rsa", model.value().get(0).deviceId());
        Assertions.assertEquals("iwkuofos", model.value().get(0).description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-28T14:02:06Z"), model.value().get(0).startTimestampUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-08T03:12:48Z"), model.value().get(0).endTimestampUtc());
        Assertions.assertEquals("sauuimj", model.value().get(0).eventCategory());
        Assertions.assertEquals("vxieduugidyj", model.value().get(0).eventClass());
        Assertions.assertEquals("rfbyaosvexcso", model.value().get(0).eventType());
        Assertions.assertEquals(771742090, model.value().get(0).eventCount());
    }
}
