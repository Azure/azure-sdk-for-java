// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sphere.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.sphere.fluent.models.ProductInner;
import com.azure.resourcemanager.sphere.models.CountDeviceResponse;
import com.azure.resourcemanager.sphere.models.DeviceGroup;
import com.azure.resourcemanager.sphere.models.Product;
import com.azure.resourcemanager.sphere.models.ProductUpdate;
import com.azure.resourcemanager.sphere.models.ProvisioningState;

public final class ProductImpl implements Product, Product.Definition, Product.Update {
    private ProductInner innerObject;

    private final com.azure.resourcemanager.sphere.AzureSphereManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String description() {
        return this.innerModel().description();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ProductInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.sphere.AzureSphereManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String catalogName;

    private String productName;

    private ProductUpdate updateProperties;

    public ProductImpl withExistingCatalog(String resourceGroupName, String catalogName) {
        this.resourceGroupName = resourceGroupName;
        this.catalogName = catalogName;
        return this;
    }

    public Product create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getProducts()
                .createOrUpdate(resourceGroupName, catalogName, productName, this.innerModel(), Context.NONE);
        return this;
    }

    public Product create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getProducts()
                .createOrUpdate(resourceGroupName, catalogName, productName, this.innerModel(), context);
        return this;
    }

    ProductImpl(String name, com.azure.resourcemanager.sphere.AzureSphereManager serviceManager) {
        this.innerObject = new ProductInner();
        this.serviceManager = serviceManager;
        this.productName = name;
    }

    public ProductImpl update() {
        this.updateProperties = new ProductUpdate();
        return this;
    }

    public Product apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getProducts()
                .update(resourceGroupName, catalogName, productName, updateProperties, Context.NONE);
        return this;
    }

    public Product apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getProducts()
                .update(resourceGroupName, catalogName, productName, updateProperties, context);
        return this;
    }

    ProductImpl(ProductInner innerObject, com.azure.resourcemanager.sphere.AzureSphereManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.catalogName = Utils.getValueFromIdByName(innerObject.id(), "catalogs");
        this.productName = Utils.getValueFromIdByName(innerObject.id(), "products");
    }

    public Product refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getProducts()
                .getWithResponse(resourceGroupName, catalogName, productName, Context.NONE)
                .getValue();
        return this;
    }

    public Product refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getProducts()
                .getWithResponse(resourceGroupName, catalogName, productName, context)
                .getValue();
        return this;
    }

    public Response<CountDeviceResponse> countDevicesWithResponse(Context context) {
        return serviceManager.products().countDevicesWithResponse(resourceGroupName, catalogName, productName, context);
    }

    public CountDeviceResponse countDevices() {
        return serviceManager.products().countDevices(resourceGroupName, catalogName, productName);
    }

    public PagedIterable<DeviceGroup> generateDefaultDeviceGroups() {
        return serviceManager.products().generateDefaultDeviceGroups(resourceGroupName, catalogName, productName);
    }

    public PagedIterable<DeviceGroup> generateDefaultDeviceGroups(Context context) {
        return serviceManager
            .products()
            .generateDefaultDeviceGroups(resourceGroupName, catalogName, productName, context);
    }

    public ProductImpl withDescription(String description) {
        if (isInCreateMode()) {
            this.innerModel().withDescription(description);
            return this;
        } else {
            this.updateProperties.withDescription(description);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
