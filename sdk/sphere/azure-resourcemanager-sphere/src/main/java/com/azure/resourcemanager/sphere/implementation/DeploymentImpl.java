// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sphere.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.sphere.fluent.models.DeploymentInner;
import com.azure.resourcemanager.sphere.models.Deployment;
import com.azure.resourcemanager.sphere.models.DeploymentProperties;

public final class DeploymentImpl implements Deployment, Deployment.Definition, Deployment.Update {
    private DeploymentInner innerObject;

    private final com.azure.resourcemanager.sphere.AzureSphereManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public DeploymentProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public DeploymentInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.sphere.AzureSphereManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String catalogName;

    private String productName;

    private String deviceGroupName;

    private String deploymentName;

    public DeploymentImpl withExistingDeviceGroup(String resourceGroupName, String catalogName, String productName,
        String deviceGroupName) {
        this.resourceGroupName = resourceGroupName;
        this.catalogName = catalogName;
        this.productName = productName;
        this.deviceGroupName = deviceGroupName;
        return this;
    }

    public Deployment create() {
        this.innerObject = serviceManager.serviceClient().getDeployments().createOrUpdate(resourceGroupName,
            catalogName, productName, deviceGroupName, deploymentName, this.innerModel(), Context.NONE);
        return this;
    }

    public Deployment create(Context context) {
        this.innerObject = serviceManager.serviceClient().getDeployments().createOrUpdate(resourceGroupName,
            catalogName, productName, deviceGroupName, deploymentName, this.innerModel(), context);
        return this;
    }

    DeploymentImpl(String name, com.azure.resourcemanager.sphere.AzureSphereManager serviceManager) {
        this.innerObject = new DeploymentInner();
        this.serviceManager = serviceManager;
        this.deploymentName = name;
    }

    public DeploymentImpl update() {
        return this;
    }

    public Deployment apply() {
        this.innerObject = serviceManager.serviceClient().getDeployments().createOrUpdate(resourceGroupName,
            catalogName, productName, deviceGroupName, deploymentName, this.innerModel(), Context.NONE);
        return this;
    }

    public Deployment apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getDeployments().createOrUpdate(resourceGroupName,
            catalogName, productName, deviceGroupName, deploymentName, this.innerModel(), context);
        return this;
    }

    DeploymentImpl(DeploymentInner innerObject, com.azure.resourcemanager.sphere.AzureSphereManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.catalogName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "catalogs");
        this.productName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "products");
        this.deviceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "deviceGroups");
        this.deploymentName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "deployments");
    }

    public Deployment refresh() {
        this.innerObject = serviceManager.serviceClient().getDeployments()
            .getWithResponse(resourceGroupName, catalogName, productName, deviceGroupName, deploymentName, Context.NONE)
            .getValue();
        return this;
    }

    public Deployment refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getDeployments()
            .getWithResponse(resourceGroupName, catalogName, productName, deviceGroupName, deploymentName, context)
            .getValue();
        return this;
    }

    public DeploymentImpl withProperties(DeploymentProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
