// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sphere.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.sphere.fluent.models.DeviceInner;
import com.azure.resourcemanager.sphere.models.Device;
import com.azure.resourcemanager.sphere.models.DeviceUpdate;
import com.azure.resourcemanager.sphere.models.GenerateCapabilityImageRequest;
import com.azure.resourcemanager.sphere.models.ProvisioningState;
import com.azure.resourcemanager.sphere.models.SignedCapabilityImageResponse;
import java.time.OffsetDateTime;

public final class DeviceImpl implements Device, Device.Definition, Device.Update {
    private DeviceInner innerObject;

    private final com.azure.resourcemanager.sphere.AzureSphereManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String deviceId() {
        return this.innerModel().deviceId();
    }

    public String chipSku() {
        return this.innerModel().chipSku();
    }

    public String lastAvailableOsVersion() {
        return this.innerModel().lastAvailableOsVersion();
    }

    public String lastInstalledOsVersion() {
        return this.innerModel().lastInstalledOsVersion();
    }

    public OffsetDateTime lastOsUpdateUtc() {
        return this.innerModel().lastOsUpdateUtc();
    }

    public OffsetDateTime lastUpdateRequestUtc() {
        return this.innerModel().lastUpdateRequestUtc();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public DeviceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.sphere.AzureSphereManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String catalogName;

    private String productName;

    private String deviceGroupName;

    private String deviceName;

    private DeviceUpdate updateProperties;

    public DeviceImpl withExistingDeviceGroup(
        String resourceGroupName, String catalogName, String productName, String deviceGroupName) {
        this.resourceGroupName = resourceGroupName;
        this.catalogName = catalogName;
        this.productName = productName;
        this.deviceGroupName = deviceGroupName;
        return this;
    }

    public Device create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDevices()
                .createOrUpdate(
                    resourceGroupName,
                    catalogName,
                    productName,
                    deviceGroupName,
                    deviceName,
                    this.innerModel(),
                    Context.NONE);
        return this;
    }

    public Device create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDevices()
                .createOrUpdate(
                    resourceGroupName,
                    catalogName,
                    productName,
                    deviceGroupName,
                    deviceName,
                    this.innerModel(),
                    context);
        return this;
    }

    DeviceImpl(String name, com.azure.resourcemanager.sphere.AzureSphereManager serviceManager) {
        this.innerObject = new DeviceInner();
        this.serviceManager = serviceManager;
        this.deviceName = name;
    }

    public DeviceImpl update() {
        this.updateProperties = new DeviceUpdate();
        return this;
    }

    public Device apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDevices()
                .update(
                    resourceGroupName,
                    catalogName,
                    productName,
                    deviceGroupName,
                    deviceName,
                    updateProperties,
                    Context.NONE);
        return this;
    }

    public Device apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDevices()
                .update(
                    resourceGroupName,
                    catalogName,
                    productName,
                    deviceGroupName,
                    deviceName,
                    updateProperties,
                    context);
        return this;
    }

    DeviceImpl(DeviceInner innerObject, com.azure.resourcemanager.sphere.AzureSphereManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.catalogName = Utils.getValueFromIdByName(innerObject.id(), "catalogs");
        this.productName = Utils.getValueFromIdByName(innerObject.id(), "products");
        this.deviceGroupName = Utils.getValueFromIdByName(innerObject.id(), "deviceGroups");
        this.deviceName = Utils.getValueFromIdByName(innerObject.id(), "devices");
    }

    public Device refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDevices()
                .getWithResponse(resourceGroupName, catalogName, productName, deviceGroupName, deviceName, Context.NONE)
                .getValue();
        return this;
    }

    public Device refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDevices()
                .getWithResponse(resourceGroupName, catalogName, productName, deviceGroupName, deviceName, context)
                .getValue();
        return this;
    }

    public SignedCapabilityImageResponse generateCapabilityImage(
        GenerateCapabilityImageRequest generateDeviceCapabilityRequest) {
        return serviceManager
            .devices()
            .generateCapabilityImage(
                resourceGroupName,
                catalogName,
                productName,
                deviceGroupName,
                deviceName,
                generateDeviceCapabilityRequest);
    }

    public SignedCapabilityImageResponse generateCapabilityImage(
        GenerateCapabilityImageRequest generateDeviceCapabilityRequest, Context context) {
        return serviceManager
            .devices()
            .generateCapabilityImage(
                resourceGroupName,
                catalogName,
                productName,
                deviceGroupName,
                deviceName,
                generateDeviceCapabilityRequest,
                context);
    }

    public DeviceImpl withDeviceId(String deviceId) {
        this.innerModel().withDeviceId(deviceId);
        return this;
    }

    public DeviceImpl withDeviceGroupId(String deviceGroupId) {
        this.updateProperties.withDeviceGroupId(deviceGroupId);
        return this;
    }
}
