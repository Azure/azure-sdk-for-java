// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sphere.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.sphere.fluent.models.CountDeviceResponseInner;
import com.azure.resourcemanager.sphere.fluent.models.DeviceGroupInner;
import com.azure.resourcemanager.sphere.models.ClaimDevicesRequest;
import com.azure.resourcemanager.sphere.models.DeviceGroupUpdate;

/** An instance of this class provides access to all the operations defined in DeviceGroupsClient. */
public interface DeviceGroupsClient {
    /**
     * List DeviceGroup resources by Product. '.default' and '.unassigned' are system defined values and cannot be used
     * for product name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DeviceGroup list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DeviceGroupInner> listByProduct(String resourceGroupName, String catalogName, String productName);

    /**
     * List DeviceGroup resources by Product. '.default' and '.unassigned' are system defined values and cannot be used
     * for product name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param filter Filter the result list using the given expression.
     * @param top The number of result items to return.
     * @param skip The number of result items to skip.
     * @param maxpagesize The maximum number of result items per page.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DeviceGroup list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DeviceGroupInner> listByProduct(
        String resourceGroupName,
        String catalogName,
        String productName,
        String filter,
        Integer top,
        Integer skip,
        Integer maxpagesize,
        Context context);

    /**
     * Get a DeviceGroup. '.default' and '.unassigned' are system defined values and cannot be used for product or
     * device group name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a DeviceGroup along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DeviceGroupInner> getWithResponse(
        String resourceGroupName, String catalogName, String productName, String deviceGroupName, Context context);

    /**
     * Get a DeviceGroup. '.default' and '.unassigned' are system defined values and cannot be used for product or
     * device group name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a DeviceGroup.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DeviceGroupInner get(String resourceGroupName, String catalogName, String productName, String deviceGroupName);

    /**
     * Create a DeviceGroup. '.default' and '.unassigned' are system defined values and cannot be used for product or
     * device group name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of an device group resource belonging to a product resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DeviceGroupInner>, DeviceGroupInner> beginCreateOrUpdate(
        String resourceGroupName,
        String catalogName,
        String productName,
        String deviceGroupName,
        DeviceGroupInner resource);

    /**
     * Create a DeviceGroup. '.default' and '.unassigned' are system defined values and cannot be used for product or
     * device group name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of an device group resource belonging to a product resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DeviceGroupInner>, DeviceGroupInner> beginCreateOrUpdate(
        String resourceGroupName,
        String catalogName,
        String productName,
        String deviceGroupName,
        DeviceGroupInner resource,
        Context context);

    /**
     * Create a DeviceGroup. '.default' and '.unassigned' are system defined values and cannot be used for product or
     * device group name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an device group resource belonging to a product resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DeviceGroupInner createOrUpdate(
        String resourceGroupName,
        String catalogName,
        String productName,
        String deviceGroupName,
        DeviceGroupInner resource);

    /**
     * Create a DeviceGroup. '.default' and '.unassigned' are system defined values and cannot be used for product or
     * device group name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an device group resource belonging to a product resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DeviceGroupInner createOrUpdate(
        String resourceGroupName,
        String catalogName,
        String productName,
        String deviceGroupName,
        DeviceGroupInner resource,
        Context context);

    /**
     * Update a DeviceGroup. '.default' and '.unassigned' are system defined values and cannot be used for product or
     * device group name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of an device group resource belonging to a product resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DeviceGroupInner>, DeviceGroupInner> beginUpdate(
        String resourceGroupName,
        String catalogName,
        String productName,
        String deviceGroupName,
        DeviceGroupUpdate properties);

    /**
     * Update a DeviceGroup. '.default' and '.unassigned' are system defined values and cannot be used for product or
     * device group name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of an device group resource belonging to a product resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DeviceGroupInner>, DeviceGroupInner> beginUpdate(
        String resourceGroupName,
        String catalogName,
        String productName,
        String deviceGroupName,
        DeviceGroupUpdate properties,
        Context context);

    /**
     * Update a DeviceGroup. '.default' and '.unassigned' are system defined values and cannot be used for product or
     * device group name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an device group resource belonging to a product resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DeviceGroupInner update(
        String resourceGroupName,
        String catalogName,
        String productName,
        String deviceGroupName,
        DeviceGroupUpdate properties);

    /**
     * Update a DeviceGroup. '.default' and '.unassigned' are system defined values and cannot be used for product or
     * device group name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an device group resource belonging to a product resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DeviceGroupInner update(
        String resourceGroupName,
        String catalogName,
        String productName,
        String deviceGroupName,
        DeviceGroupUpdate properties,
        Context context);

    /**
     * Delete a DeviceGroup. '.default' and '.unassigned' are system defined values and cannot be used for product or
     * device group name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String catalogName, String productName, String deviceGroupName);

    /**
     * Delete a DeviceGroup. '.default' and '.unassigned' are system defined values and cannot be used for product or
     * device group name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String catalogName, String productName, String deviceGroupName, Context context);

    /**
     * Delete a DeviceGroup. '.default' and '.unassigned' are system defined values and cannot be used for product or
     * device group name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String catalogName, String productName, String deviceGroupName);

    /**
     * Delete a DeviceGroup. '.default' and '.unassigned' are system defined values and cannot be used for product or
     * device group name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(
        String resourceGroupName, String catalogName, String productName, String deviceGroupName, Context context);

    /**
     * Bulk claims the devices. Use '.unassigned' or '.default' for the device group and product names when bulk
     * claiming devices to a catalog only.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @param claimDevicesRequest Bulk claim devices request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginClaimDevices(
        String resourceGroupName,
        String catalogName,
        String productName,
        String deviceGroupName,
        ClaimDevicesRequest claimDevicesRequest);

    /**
     * Bulk claims the devices. Use '.unassigned' or '.default' for the device group and product names when bulk
     * claiming devices to a catalog only.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @param claimDevicesRequest Bulk claim devices request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginClaimDevices(
        String resourceGroupName,
        String catalogName,
        String productName,
        String deviceGroupName,
        ClaimDevicesRequest claimDevicesRequest,
        Context context);

    /**
     * Bulk claims the devices. Use '.unassigned' or '.default' for the device group and product names when bulk
     * claiming devices to a catalog only.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @param claimDevicesRequest Bulk claim devices request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void claimDevices(
        String resourceGroupName,
        String catalogName,
        String productName,
        String deviceGroupName,
        ClaimDevicesRequest claimDevicesRequest);

    /**
     * Bulk claims the devices. Use '.unassigned' or '.default' for the device group and product names when bulk
     * claiming devices to a catalog only.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @param claimDevicesRequest Bulk claim devices request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void claimDevices(
        String resourceGroupName,
        String catalogName,
        String productName,
        String deviceGroupName,
        ClaimDevicesRequest claimDevicesRequest,
        Context context);

    /**
     * Counts devices in device group. '.default' and '.unassigned' are system defined values and cannot be used for
     * product or device group name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response to the action call for count devices in a catalog along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<CountDeviceResponseInner> countDevicesWithResponse(
        String resourceGroupName, String catalogName, String productName, String deviceGroupName, Context context);

    /**
     * Counts devices in device group. '.default' and '.unassigned' are system defined values and cannot be used for
     * product or device group name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response to the action call for count devices in a catalog.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CountDeviceResponseInner countDevices(
        String resourceGroupName, String catalogName, String productName, String deviceGroupName);
}
