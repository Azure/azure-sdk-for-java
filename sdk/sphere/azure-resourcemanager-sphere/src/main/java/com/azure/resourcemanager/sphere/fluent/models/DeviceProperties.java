// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sphere.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.sphere.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** The properties of device. */
@Fluent
public final class DeviceProperties {
    /*
     * Device ID
     */
    @JsonProperty(value = "deviceId")
    private String deviceId;

    /*
     * SKU of the chip
     */
    @JsonProperty(value = "chipSku", access = JsonProperty.Access.WRITE_ONLY)
    private String chipSku;

    /*
     * OS version available for installation when update requested
     */
    @JsonProperty(value = "lastAvailableOsVersion", access = JsonProperty.Access.WRITE_ONLY)
    private String lastAvailableOsVersion;

    /*
     * OS version running on device when update requested
     */
    @JsonProperty(value = "lastInstalledOsVersion", access = JsonProperty.Access.WRITE_ONLY)
    private String lastInstalledOsVersion;

    /*
     * Time when update requested and new OS version available
     */
    @JsonProperty(value = "lastOsUpdateUtc", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime lastOsUpdateUtc;

    /*
     * Time when update was last requested
     */
    @JsonProperty(value = "lastUpdateRequestUtc", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime lastUpdateRequestUtc;

    /*
     * The status of the last operation.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /** Creates an instance of DeviceProperties class. */
    public DeviceProperties() {
    }

    /**
     * Get the deviceId property: Device ID.
     *
     * @return the deviceId value.
     */
    public String deviceId() {
        return this.deviceId;
    }

    /**
     * Set the deviceId property: Device ID.
     *
     * @param deviceId the deviceId value to set.
     * @return the DeviceProperties object itself.
     */
    public DeviceProperties withDeviceId(String deviceId) {
        this.deviceId = deviceId;
        return this;
    }

    /**
     * Get the chipSku property: SKU of the chip.
     *
     * @return the chipSku value.
     */
    public String chipSku() {
        return this.chipSku;
    }

    /**
     * Get the lastAvailableOsVersion property: OS version available for installation when update requested.
     *
     * @return the lastAvailableOsVersion value.
     */
    public String lastAvailableOsVersion() {
        return this.lastAvailableOsVersion;
    }

    /**
     * Get the lastInstalledOsVersion property: OS version running on device when update requested.
     *
     * @return the lastInstalledOsVersion value.
     */
    public String lastInstalledOsVersion() {
        return this.lastInstalledOsVersion;
    }

    /**
     * Get the lastOsUpdateUtc property: Time when update requested and new OS version available.
     *
     * @return the lastOsUpdateUtc value.
     */
    public OffsetDateTime lastOsUpdateUtc() {
        return this.lastOsUpdateUtc;
    }

    /**
     * Get the lastUpdateRequestUtc property: Time when update was last requested.
     *
     * @return the lastUpdateRequestUtc value.
     */
    public OffsetDateTime lastUpdateRequestUtc() {
        return this.lastUpdateRequestUtc;
    }

    /**
     * Get the provisioningState property: The status of the last operation.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
