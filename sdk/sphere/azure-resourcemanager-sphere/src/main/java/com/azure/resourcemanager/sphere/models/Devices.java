// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sphere.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of Devices. */
public interface Devices {
    /**
     * List Device resources by DeviceGroup. '.default' and '.unassigned' are system defined values and cannot be used
     * for product or device group name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Device list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Device> listByDeviceGroup(
        String resourceGroupName, String catalogName, String productName, String deviceGroupName);

    /**
     * List Device resources by DeviceGroup. '.default' and '.unassigned' are system defined values and cannot be used
     * for product or device group name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Device list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Device> listByDeviceGroup(
        String resourceGroupName, String catalogName, String productName, String deviceGroupName, Context context);

    /**
     * Get a Device. Use '.unassigned' or '.default' for the device group and product names when a device does not
     * belong to a device group and product.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @param deviceName Device name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Device along with {@link Response}.
     */
    Response<Device> getWithResponse(
        String resourceGroupName,
        String catalogName,
        String productName,
        String deviceGroupName,
        String deviceName,
        Context context);

    /**
     * Get a Device. Use '.unassigned' or '.default' for the device group and product names when a device does not
     * belong to a device group and product.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @param deviceName Device name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Device.
     */
    Device get(
        String resourceGroupName, String catalogName, String productName, String deviceGroupName, String deviceName);

    /**
     * Delete a Device.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @param deviceName Device name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(
        String resourceGroupName, String catalogName, String productName, String deviceGroupName, String deviceName);

    /**
     * Delete a Device.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @param deviceName Device name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(
        String resourceGroupName,
        String catalogName,
        String productName,
        String deviceGroupName,
        String deviceName,
        Context context);

    /**
     * Generates the capability image for the device. Use '.unassigned' or '.default' for the device group and product
     * names to generate the image for a device that does not belong to a specific device group and product.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @param deviceName Device name.
     * @param generateDeviceCapabilityRequest Generate capability image request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return signed device capability image response.
     */
    SignedCapabilityImageResponse generateCapabilityImage(
        String resourceGroupName,
        String catalogName,
        String productName,
        String deviceGroupName,
        String deviceName,
        GenerateCapabilityImageRequest generateDeviceCapabilityRequest);

    /**
     * Generates the capability image for the device. Use '.unassigned' or '.default' for the device group and product
     * names to generate the image for a device that does not belong to a specific device group and product.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName Name of catalog.
     * @param productName Name of product.
     * @param deviceGroupName Name of device group.
     * @param deviceName Device name.
     * @param generateDeviceCapabilityRequest Generate capability image request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return signed device capability image response.
     */
    SignedCapabilityImageResponse generateCapabilityImage(
        String resourceGroupName,
        String catalogName,
        String productName,
        String deviceGroupName,
        String deviceName,
        GenerateCapabilityImageRequest generateDeviceCapabilityRequest,
        Context context);

    /**
     * Get a Device. Use '.unassigned' or '.default' for the device group and product names when a device does not
     * belong to a device group and product.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Device along with {@link Response}.
     */
    Device getById(String id);

    /**
     * Get a Device. Use '.unassigned' or '.default' for the device group and product names when a device does not
     * belong to a device group and product.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Device along with {@link Response}.
     */
    Response<Device> getByIdWithResponse(String id, Context context);

    /**
     * Delete a Device.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a Device.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new Device resource.
     *
     * @param name resource name.
     * @return the first stage of the new Device definition.
     */
    Device.DefinitionStages.Blank define(String name);
}
