// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sphere.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.sphere.fluent.models.DeviceInner;
import java.time.OffsetDateTime;

/** An immutable client-side representation of Device. */
public interface Device {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the deviceId property: Device ID.
     *
     * @return the deviceId value.
     */
    String deviceId();

    /**
     * Gets the chipSku property: SKU of the chip.
     *
     * @return the chipSku value.
     */
    String chipSku();

    /**
     * Gets the lastAvailableOsVersion property: OS version available for installation when update requested.
     *
     * @return the lastAvailableOsVersion value.
     */
    String lastAvailableOsVersion();

    /**
     * Gets the lastInstalledOsVersion property: OS version running on device when update requested.
     *
     * @return the lastInstalledOsVersion value.
     */
    String lastInstalledOsVersion();

    /**
     * Gets the lastOsUpdateUtc property: Time when update requested and new OS version available.
     *
     * @return the lastOsUpdateUtc value.
     */
    OffsetDateTime lastOsUpdateUtc();

    /**
     * Gets the lastUpdateRequestUtc property: Time when update was last requested.
     *
     * @return the lastUpdateRequestUtc value.
     */
    OffsetDateTime lastUpdateRequestUtc();

    /**
     * Gets the provisioningState property: The status of the last operation.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.sphere.fluent.models.DeviceInner object.
     *
     * @return the inner object.
     */
    DeviceInner innerModel();

    /** The entirety of the Device definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /** The Device definition stages. */
    interface DefinitionStages {
        /** The first stage of the Device definition. */
        interface Blank extends WithParentResource {
        }

        /** The stage of the Device definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, catalogName, productName, deviceGroupName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param catalogName Name of catalog.
             * @param productName Name of product.
             * @param deviceGroupName Name of device group.
             * @return the next definition stage.
             */
            WithCreate withExistingDeviceGroup(
                String resourceGroupName, String catalogName, String productName, String deviceGroupName);
        }

        /**
         * The stage of the Device definition which contains all the minimum required properties for the resource to be
         * created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithDeviceId {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            Device create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Device create(Context context);
        }

        /** The stage of the Device definition allowing to specify deviceId. */
        interface WithDeviceId {
            /**
             * Specifies the deviceId property: Device ID.
             *
             * @param deviceId Device ID.
             * @return the next definition stage.
             */
            WithCreate withDeviceId(String deviceId);
        }
    }

    /**
     * Begins update for the Device resource.
     *
     * @return the stage of resource update.
     */
    Device.Update update();

    /** The template for Device update. */
    interface Update extends UpdateStages.WithDeviceGroupId {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        Device apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Device apply(Context context);
    }

    /** The Device update stages. */
    interface UpdateStages {
        /** The stage of the Device update allowing to specify deviceGroupId. */
        interface WithDeviceGroupId {
            /**
             * Specifies the deviceGroupId property: Device group id.
             *
             * @param deviceGroupId Device group id.
             * @return the next definition stage.
             */
            Update withDeviceGroupId(String deviceGroupId);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    Device refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Device refresh(Context context);

    /**
     * Generates the capability image for the device. Use '.unassigned' or '.default' for the device group and product
     * names to generate the image for a device that does not belong to a specific device group and product.
     *
     * @param generateDeviceCapabilityRequest Generate capability image request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return signed device capability image response.
     */
    SignedCapabilityImageResponse generateCapabilityImage(
        GenerateCapabilityImageRequest generateDeviceCapabilityRequest);

    /**
     * Generates the capability image for the device. Use '.unassigned' or '.default' for the device group and product
     * names to generate the image for a device that does not belong to a specific device group and product.
     *
     * @param generateDeviceCapabilityRequest Generate capability image request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return signed device capability image response.
     */
    SignedCapabilityImageResponse generateCapabilityImage(
        GenerateCapabilityImageRequest generateDeviceCapabilityRequest, Context context);
}
