// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sphere.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.sphere.fluent.models.CatalogInner;
import java.util.Map;

/** An immutable client-side representation of Catalog. */
public interface Catalog {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the provisioningState property: The status of the last operation.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.sphere.fluent.models.CatalogInner object.
     *
     * @return the inner object.
     */
    CatalogInner innerModel();

    /** The entirety of the Catalog definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }

    /** The Catalog definition stages. */
    interface DefinitionStages {
        /** The first stage of the Catalog definition. */
        interface Blank extends WithLocation {
        }

        /** The stage of the Catalog definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }

        /** The stage of the Catalog definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }

        /**
         * The stage of the Catalog definition which contains all the minimum required properties for the resource to be
         * created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            Catalog create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Catalog create(Context context);
        }

        /** The stage of the Catalog definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
    }

    /**
     * Begins update for the Catalog resource.
     *
     * @return the stage of resource update.
     */
    Catalog.Update update();

    /** The template for Catalog update. */
    interface Update extends UpdateStages.WithTags {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        Catalog apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Catalog apply(Context context);
    }

    /** The Catalog update stages. */
    interface UpdateStages {
        /** The stage of the Catalog update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    Catalog refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Catalog refresh(Context context);

    /**
     * Counts devices in catalog.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response to the action call for count devices in a catalog along with {@link Response}.
     */
    Response<CountDeviceResponse> countDevicesWithResponse(Context context);

    /**
     * Counts devices in catalog.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response to the action call for count devices in a catalog.
     */
    CountDeviceResponse countDevices();

    /**
     * Lists deployments for catalog.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Deployment list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Deployment> listDeployments();

    /**
     * Lists deployments for catalog.
     *
     * @param filter Filter the result list using the given expression.
     * @param top The number of result items to return.
     * @param skip The number of result items to skip.
     * @param maxpagesize The maximum number of result items per page.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Deployment list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Deployment> listDeployments(
        String filter, Integer top, Integer skip, Integer maxpagesize, Context context);

    /**
     * List the device groups for the catalog.
     *
     * @param listDeviceGroupsRequest List device groups for catalog.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DeviceGroup list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<DeviceGroup> listDeviceGroups(ListDeviceGroupsRequest listDeviceGroupsRequest);

    /**
     * List the device groups for the catalog.
     *
     * @param listDeviceGroupsRequest List device groups for catalog.
     * @param filter Filter the result list using the given expression.
     * @param top The number of result items to return.
     * @param skip The number of result items to skip.
     * @param maxpagesize The maximum number of result items per page.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DeviceGroup list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<DeviceGroup> listDeviceGroups(
        ListDeviceGroupsRequest listDeviceGroupsRequest,
        String filter,
        Integer top,
        Integer skip,
        Integer maxpagesize,
        Context context);

    /**
     * Lists device insights for catalog.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return paged collection of DeviceInsight items as paginated response with {@link PagedIterable}.
     */
    PagedIterable<DeviceInsight> listDeviceInsights();

    /**
     * Lists device insights for catalog.
     *
     * @param filter Filter the result list using the given expression.
     * @param top The number of result items to return.
     * @param skip The number of result items to skip.
     * @param maxpagesize The maximum number of result items per page.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return paged collection of DeviceInsight items as paginated response with {@link PagedIterable}.
     */
    PagedIterable<DeviceInsight> listDeviceInsights(
        String filter, Integer top, Integer skip, Integer maxpagesize, Context context);

    /**
     * Lists devices for catalog.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Device list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Device> listDevices();

    /**
     * Lists devices for catalog.
     *
     * @param filter Filter the result list using the given expression.
     * @param top The number of result items to return.
     * @param skip The number of result items to skip.
     * @param maxpagesize The maximum number of result items per page.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Device list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Device> listDevices(String filter, Integer top, Integer skip, Integer maxpagesize, Context context);
}
