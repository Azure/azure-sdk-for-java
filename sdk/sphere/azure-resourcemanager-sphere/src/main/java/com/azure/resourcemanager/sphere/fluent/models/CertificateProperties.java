// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sphere.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.resourcemanager.sphere.models.CertificateStatus;
import com.azure.resourcemanager.sphere.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** The properties of certificate. */
@Immutable
public class CertificateProperties {
    /*
     * The certificate as a UTF-8 encoded base 64 string.
     */
    @JsonProperty(value = "certificate", access = JsonProperty.Access.WRITE_ONLY)
    private String certificate;

    /*
     * The certificate status.
     */
    @JsonProperty(value = "status", access = JsonProperty.Access.WRITE_ONLY)
    private CertificateStatus status;

    /*
     * The certificate subject.
     */
    @JsonProperty(value = "subject", access = JsonProperty.Access.WRITE_ONLY)
    private String subject;

    /*
     * The certificate thumbprint.
     */
    @JsonProperty(value = "thumbprint", access = JsonProperty.Access.WRITE_ONLY)
    private String thumbprint;

    /*
     * The certificate expiry date.
     */
    @JsonProperty(value = "expiryUtc", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime expiryUtc;

    /*
     * The certificate not before date.
     */
    @JsonProperty(value = "notBeforeUtc", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime notBeforeUtc;

    /*
     * The status of the last operation.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /** Creates an instance of CertificateProperties class. */
    public CertificateProperties() {
    }

    /**
     * Get the certificate property: The certificate as a UTF-8 encoded base 64 string.
     *
     * @return the certificate value.
     */
    public String certificate() {
        return this.certificate;
    }

    /**
     * Get the status property: The certificate status.
     *
     * @return the status value.
     */
    public CertificateStatus status() {
        return this.status;
    }

    /**
     * Get the subject property: The certificate subject.
     *
     * @return the subject value.
     */
    public String subject() {
        return this.subject;
    }

    /**
     * Get the thumbprint property: The certificate thumbprint.
     *
     * @return the thumbprint value.
     */
    public String thumbprint() {
        return this.thumbprint;
    }

    /**
     * Get the expiryUtc property: The certificate expiry date.
     *
     * @return the expiryUtc value.
     */
    public OffsetDateTime expiryUtc() {
        return this.expiryUtc;
    }

    /**
     * Get the notBeforeUtc property: The certificate not before date.
     *
     * @return the notBeforeUtc value.
     */
    public OffsetDateTime notBeforeUtc() {
        return this.notBeforeUtc;
    }

    /**
     * Get the provisioningState property: The status of the last operation.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
