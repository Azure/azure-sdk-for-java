// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managementgroups.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.managementgroups.fluent.models.EntityInfoProperties;
import com.azure.resourcemanager.managementgroups.models.EntityParentGroupInfo;
import com.azure.resourcemanager.managementgroups.models.Permissions;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class EntityInfoPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EntityInfoProperties model = BinaryData.fromString(
            "{\"tenantId\":\"pgcjefuzmuvp\",\"displayName\":\"tdum\",\"parent\":{\"id\":\"pxebmnzbt\"},\"permissions\":\"edit\",\"inheritedPermissions\":\"view\",\"numberOfDescendants\":506889446,\"numberOfChildren\":1389073231,\"numberOfChildGroups\":281950816,\"parentDisplayNameChain\":[\"euel\",\"phsdyhto\",\"fikdowwqu\",\"v\"],\"parentNameChain\":[\"clvit\",\"hqzonosggbhcoh\"]}")
            .toObject(EntityInfoProperties.class);
        Assertions.assertEquals("pgcjefuzmuvp", model.tenantId());
        Assertions.assertEquals("tdum", model.displayName());
        Assertions.assertEquals("pxebmnzbt", model.parent().id());
        Assertions.assertEquals(Permissions.EDIT, model.permissions());
        Assertions.assertEquals(Permissions.VIEW, model.inheritedPermissions());
        Assertions.assertEquals(506889446, model.numberOfDescendants());
        Assertions.assertEquals(1389073231, model.numberOfChildren());
        Assertions.assertEquals(281950816, model.numberOfChildGroups());
        Assertions.assertEquals("euel", model.parentDisplayNameChain().get(0));
        Assertions.assertEquals("clvit", model.parentNameChain().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EntityInfoProperties model = new EntityInfoProperties().withTenantId("pgcjefuzmuvp")
            .withDisplayName("tdum")
            .withParent(new EntityParentGroupInfo().withId("pxebmnzbt"))
            .withPermissions(Permissions.EDIT)
            .withInheritedPermissions(Permissions.VIEW)
            .withNumberOfDescendants(506889446)
            .withNumberOfChildren(1389073231)
            .withNumberOfChildGroups(281950816)
            .withParentDisplayNameChain(Arrays.asList("euel", "phsdyhto", "fikdowwqu", "v"))
            .withParentNameChain(Arrays.asList("clvit", "hqzonosggbhcoh"));
        model = BinaryData.fromObject(model).toObject(EntityInfoProperties.class);
        Assertions.assertEquals("pgcjefuzmuvp", model.tenantId());
        Assertions.assertEquals("tdum", model.displayName());
        Assertions.assertEquals("pxebmnzbt", model.parent().id());
        Assertions.assertEquals(Permissions.EDIT, model.permissions());
        Assertions.assertEquals(Permissions.VIEW, model.inheritedPermissions());
        Assertions.assertEquals(506889446, model.numberOfDescendants());
        Assertions.assertEquals(1389073231, model.numberOfChildren());
        Assertions.assertEquals(281950816, model.numberOfChildGroups());
        Assertions.assertEquals("euel", model.parentDisplayNameChain().get(0));
        Assertions.assertEquals("clvit", model.parentNameChain().get(0));
    }
}
