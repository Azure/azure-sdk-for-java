// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managementgroups.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.managementgroups.ManagementGroupsManager;
import com.azure.resourcemanager.managementgroups.models.SubscriptionUnderManagementGroup;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ManagementGroupSubscriptionsCreateWithResponseMockTests {
    @Test
    public void testCreateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"tenant\":\"fdwoyuhh\",\"displayName\":\"u\",\"parent\":{\"id\":\"ozbhdmsmlmzq\"},\"state\":\"ft\"},\"id\":\"maequiahxicslfa\",\"name\":\"qzpiyyl\",\"type\":\"alnswhccsphk\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ManagementGroupsManager manager = ManagementGroupsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SubscriptionUnderManagementGroup response = manager.managementGroupSubscriptions()
            .createWithResponse("zr", "rdgrtw", "enuuzkopbm", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("fdwoyuhh", response.tenant());
        Assertions.assertEquals("u", response.displayName());
        Assertions.assertEquals("ozbhdmsmlmzq", response.parent().id());
        Assertions.assertEquals("ft", response.state());
    }
}
