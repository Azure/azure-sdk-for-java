// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managementgroups.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.managementgroups.ManagementGroupsManager;
import com.azure.resourcemanager.managementgroups.models.ManagementGroup;
import com.azure.resourcemanager.managementgroups.models.ManagementGroupChildType;
import com.azure.resourcemanager.managementgroups.models.PatchManagementGroupRequest;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ManagementGroupsUpdateWithResponseMockTests {
    @Test
    public void testUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"tenantId\":\"utncorm\",\"displayName\":\"xqtvcofu\",\"details\":{\"version\":573023383,\"updatedTime\":\"2021-10-24T03:31:48Z\",\"updatedBy\":\"u\",\"parent\":{\"id\":\"knnqvsaznq\",\"name\":\"orudsgsa\",\"displayName\":\"kycgrauwj\"},\"path\":[{\"name\":\"eburu\",\"displayName\":\"movsmzlxwabmqoe\"},{\"name\":\"ifrvtpu\",\"displayName\":\"jmqlgkfb\"},{\"name\":\"doaon\",\"displayName\":\"jcntuj\"}],\"managementGroupAncestors\":[\"jed\"],\"managementGroupAncestorsChain\":[{\"name\":\"ae\",\"displayName\":\"ojvdcpzfoqo\"}]},\"children\":[{\"type\":\"/subscriptions\",\"id\":\"arz\",\"name\":\"zuf\",\"displayName\":\"ciqopidoa\",\"children\":[{},{},{},{}]},{\"type\":\"Microsoft.Management/managementGroups\",\"id\":\"khazxkhnzbonlwn\",\"name\":\"egokdwbwhkszzcmr\",\"displayName\":\"xztvbtqgsfraoyzk\",\"children\":[{}]}]},\"id\":\"tlmngu\",\"name\":\"aw\",\"type\":\"aldsy\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ManagementGroupsManager manager = ManagementGroupsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ManagementGroup response = manager.managementGroups()
            .updateWithResponse("bqwcsdbnwdcf",
                new PatchManagementGroupRequest().withDisplayName("cqdpfuv").withParentGroupId("sbjjc"), "nvxbvt",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("utncorm", response.tenantId());
        Assertions.assertEquals("xqtvcofu", response.displayName());
        Assertions.assertEquals(573023383, response.details().version());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-24T03:31:48Z"), response.details().updatedTime());
        Assertions.assertEquals("u", response.details().updatedBy());
        Assertions.assertEquals("knnqvsaznq", response.details().parent().id());
        Assertions.assertEquals("orudsgsa", response.details().parent().name());
        Assertions.assertEquals("kycgrauwj", response.details().parent().displayName());
        Assertions.assertEquals("eburu", response.details().path().get(0).name());
        Assertions.assertEquals("movsmzlxwabmqoe", response.details().path().get(0).displayName());
        Assertions.assertEquals("jed", response.details().managementGroupAncestors().get(0));
        Assertions.assertEquals("ae", response.details().managementGroupAncestorsChain().get(0).name());
        Assertions.assertEquals("ojvdcpzfoqo", response.details().managementGroupAncestorsChain().get(0).displayName());
        Assertions.assertEquals(ManagementGroupChildType.SUBSCRIPTIONS, response.children().get(0).type());
        Assertions.assertEquals("arz", response.children().get(0).id());
        Assertions.assertEquals("zuf", response.children().get(0).name());
        Assertions.assertEquals("ciqopidoa", response.children().get(0).displayName());
    }
}
