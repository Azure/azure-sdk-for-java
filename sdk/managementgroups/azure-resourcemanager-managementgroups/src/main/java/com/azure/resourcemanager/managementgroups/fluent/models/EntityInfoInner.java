// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managementgroups.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.managementgroups.models.EntityParentGroupInfo;
import com.azure.resourcemanager.managementgroups.models.Permissions;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The entity. */
@JsonFlatten
@Fluent
public class EntityInfoInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(EntityInfoInner.class);

    /*
     * The fully qualified ID for the entity.  For example,
     * /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
     */
    @JsonProperty(value = "id", access = JsonProperty.Access.WRITE_ONLY)
    private String id;

    /*
     * The type of the resource. For example,
     * Microsoft.Management/managementGroups
     */
    @JsonProperty(value = "type", access = JsonProperty.Access.WRITE_ONLY)
    private String type;

    /*
     * The name of the entity. For example,
     * 00000000-0000-0000-0000-000000000000
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /*
     * The AAD Tenant ID associated with the entity. For example,
     * 00000000-0000-0000-0000-000000000000
     */
    @JsonProperty(value = "properties.tenantId")
    private String tenantId;

    /*
     * The friendly name of the management group.
     */
    @JsonProperty(value = "properties.displayName")
    private String displayName;

    /*
     * (Optional) The ID of the parent management group.
     */
    @JsonProperty(value = "properties.parent")
    private EntityParentGroupInfo parent;

    /*
     * The users specific permissions to this item.
     */
    @JsonProperty(value = "properties.permissions")
    private Permissions permissions;

    /*
     * The users specific permissions to this item.
     */
    @JsonProperty(value = "properties.inheritedPermissions")
    private Permissions inheritedPermissions;

    /*
     * Number of Descendants
     */
    @JsonProperty(value = "properties.numberOfDescendants")
    private Integer numberOfDescendants;

    /*
     * Number of children is the number of Groups and Subscriptions that are
     * exactly one level underneath the current Group.
     */
    @JsonProperty(value = "properties.numberOfChildren")
    private Integer numberOfChildren;

    /*
     * Number of children is the number of Groups that are exactly one level
     * underneath the current Group.
     */
    @JsonProperty(value = "properties.numberOfChildGroups")
    private Integer numberOfChildGroups;

    /*
     * The parent display name chain from the root group to the immediate
     * parent
     */
    @JsonProperty(value = "properties.parentDisplayNameChain")
    private List<String> parentDisplayNameChain;

    /*
     * The parent name chain from the root group to the immediate parent
     */
    @JsonProperty(value = "properties.parentNameChain")
    private List<String> parentNameChain;

    /**
     * Get the id property: The fully qualified ID for the entity. For example,
     * /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000.
     *
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the type property: The type of the resource. For example, Microsoft.Management/managementGroups.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Get the name property: The name of the entity. For example, 00000000-0000-0000-0000-000000000000.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the tenantId property: The AAD Tenant ID associated with the entity. For example,
     * 00000000-0000-0000-0000-000000000000.
     *
     * @return the tenantId value.
     */
    public String tenantId() {
        return this.tenantId;
    }

    /**
     * Set the tenantId property: The AAD Tenant ID associated with the entity. For example,
     * 00000000-0000-0000-0000-000000000000.
     *
     * @param tenantId the tenantId value to set.
     * @return the EntityInfoInner object itself.
     */
    public EntityInfoInner withTenantId(String tenantId) {
        this.tenantId = tenantId;
        return this;
    }

    /**
     * Get the displayName property: The friendly name of the management group.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: The friendly name of the management group.
     *
     * @param displayName the displayName value to set.
     * @return the EntityInfoInner object itself.
     */
    public EntityInfoInner withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the parent property: (Optional) The ID of the parent management group.
     *
     * @return the parent value.
     */
    public EntityParentGroupInfo parent() {
        return this.parent;
    }

    /**
     * Set the parent property: (Optional) The ID of the parent management group.
     *
     * @param parent the parent value to set.
     * @return the EntityInfoInner object itself.
     */
    public EntityInfoInner withParent(EntityParentGroupInfo parent) {
        this.parent = parent;
        return this;
    }

    /**
     * Get the permissions property: The users specific permissions to this item.
     *
     * @return the permissions value.
     */
    public Permissions permissions() {
        return this.permissions;
    }

    /**
     * Set the permissions property: The users specific permissions to this item.
     *
     * @param permissions the permissions value to set.
     * @return the EntityInfoInner object itself.
     */
    public EntityInfoInner withPermissions(Permissions permissions) {
        this.permissions = permissions;
        return this;
    }

    /**
     * Get the inheritedPermissions property: The users specific permissions to this item.
     *
     * @return the inheritedPermissions value.
     */
    public Permissions inheritedPermissions() {
        return this.inheritedPermissions;
    }

    /**
     * Set the inheritedPermissions property: The users specific permissions to this item.
     *
     * @param inheritedPermissions the inheritedPermissions value to set.
     * @return the EntityInfoInner object itself.
     */
    public EntityInfoInner withInheritedPermissions(Permissions inheritedPermissions) {
        this.inheritedPermissions = inheritedPermissions;
        return this;
    }

    /**
     * Get the numberOfDescendants property: Number of Descendants.
     *
     * @return the numberOfDescendants value.
     */
    public Integer numberOfDescendants() {
        return this.numberOfDescendants;
    }

    /**
     * Set the numberOfDescendants property: Number of Descendants.
     *
     * @param numberOfDescendants the numberOfDescendants value to set.
     * @return the EntityInfoInner object itself.
     */
    public EntityInfoInner withNumberOfDescendants(Integer numberOfDescendants) {
        this.numberOfDescendants = numberOfDescendants;
        return this;
    }

    /**
     * Get the numberOfChildren property: Number of children is the number of Groups and Subscriptions that are exactly
     * one level underneath the current Group.
     *
     * @return the numberOfChildren value.
     */
    public Integer numberOfChildren() {
        return this.numberOfChildren;
    }

    /**
     * Set the numberOfChildren property: Number of children is the number of Groups and Subscriptions that are exactly
     * one level underneath the current Group.
     *
     * @param numberOfChildren the numberOfChildren value to set.
     * @return the EntityInfoInner object itself.
     */
    public EntityInfoInner withNumberOfChildren(Integer numberOfChildren) {
        this.numberOfChildren = numberOfChildren;
        return this;
    }

    /**
     * Get the numberOfChildGroups property: Number of children is the number of Groups that are exactly one level
     * underneath the current Group.
     *
     * @return the numberOfChildGroups value.
     */
    public Integer numberOfChildGroups() {
        return this.numberOfChildGroups;
    }

    /**
     * Set the numberOfChildGroups property: Number of children is the number of Groups that are exactly one level
     * underneath the current Group.
     *
     * @param numberOfChildGroups the numberOfChildGroups value to set.
     * @return the EntityInfoInner object itself.
     */
    public EntityInfoInner withNumberOfChildGroups(Integer numberOfChildGroups) {
        this.numberOfChildGroups = numberOfChildGroups;
        return this;
    }

    /**
     * Get the parentDisplayNameChain property: The parent display name chain from the root group to the immediate
     * parent.
     *
     * @return the parentDisplayNameChain value.
     */
    public List<String> parentDisplayNameChain() {
        return this.parentDisplayNameChain;
    }

    /**
     * Set the parentDisplayNameChain property: The parent display name chain from the root group to the immediate
     * parent.
     *
     * @param parentDisplayNameChain the parentDisplayNameChain value to set.
     * @return the EntityInfoInner object itself.
     */
    public EntityInfoInner withParentDisplayNameChain(List<String> parentDisplayNameChain) {
        this.parentDisplayNameChain = parentDisplayNameChain;
        return this;
    }

    /**
     * Get the parentNameChain property: The parent name chain from the root group to the immediate parent.
     *
     * @return the parentNameChain value.
     */
    public List<String> parentNameChain() {
        return this.parentNameChain;
    }

    /**
     * Set the parentNameChain property: The parent name chain from the root group to the immediate parent.
     *
     * @param parentNameChain the parentNameChain value to set.
     * @return the EntityInfoInner object itself.
     */
    public EntityInfoInner withParentNameChain(List<String> parentNameChain) {
        this.parentNameChain = parentNameChain;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (parent() != null) {
            parent().validate();
        }
    }
}
