// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managementgroups.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * The details of a management group used during creation.
 */
@Fluent
public final class CreateManagementGroupDetails implements JsonSerializable<CreateManagementGroupDetails> {
    /*
     * The version number of the object.
     */
    private Integer version;

    /*
     * The date and time when this object was last updated.
     */
    private OffsetDateTime updatedTime;

    /*
     * The identity of the principal or process that updated the object.
     */
    private String updatedBy;

    /*
     * (Optional) The ID of the parent management group used during creation.
     */
    private CreateParentGroupInfo parent;

    /**
     * Creates an instance of CreateManagementGroupDetails class.
     */
    public CreateManagementGroupDetails() {
    }

    /**
     * Get the version property: The version number of the object.
     * 
     * @return the version value.
     */
    public Integer version() {
        return this.version;
    }

    /**
     * Get the updatedTime property: The date and time when this object was last updated.
     * 
     * @return the updatedTime value.
     */
    public OffsetDateTime updatedTime() {
        return this.updatedTime;
    }

    /**
     * Get the updatedBy property: The identity of the principal or process that updated the object.
     * 
     * @return the updatedBy value.
     */
    public String updatedBy() {
        return this.updatedBy;
    }

    /**
     * Get the parent property: (Optional) The ID of the parent management group used during creation.
     * 
     * @return the parent value.
     */
    public CreateParentGroupInfo parent() {
        return this.parent;
    }

    /**
     * Set the parent property: (Optional) The ID of the parent management group used during creation.
     * 
     * @param parent the parent value to set.
     * @return the CreateManagementGroupDetails object itself.
     */
    public CreateManagementGroupDetails withParent(CreateParentGroupInfo parent) {
        this.parent = parent;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (parent() != null) {
            parent().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("parent", this.parent);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CreateManagementGroupDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CreateManagementGroupDetails if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CreateManagementGroupDetails.
     */
    public static CreateManagementGroupDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CreateManagementGroupDetails deserializedCreateManagementGroupDetails = new CreateManagementGroupDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("version".equals(fieldName)) {
                    deserializedCreateManagementGroupDetails.version = reader.getNullable(JsonReader::getInt);
                } else if ("updatedTime".equals(fieldName)) {
                    deserializedCreateManagementGroupDetails.updatedTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("updatedBy".equals(fieldName)) {
                    deserializedCreateManagementGroupDetails.updatedBy = reader.getString();
                } else if ("parent".equals(fieldName)) {
                    deserializedCreateManagementGroupDetails.parent = CreateParentGroupInfo.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCreateManagementGroupDetails;
        });
    }
}
