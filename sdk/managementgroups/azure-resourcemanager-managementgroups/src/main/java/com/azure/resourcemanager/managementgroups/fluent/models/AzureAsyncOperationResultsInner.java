// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managementgroups.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The results of Azure-AsyncOperation.
 */
@Fluent
public final class AzureAsyncOperationResultsInner implements JsonSerializable<AzureAsyncOperationResultsInner> {
    /*
     * The fully qualified ID for the management group. For example,
     * /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
     */
    private String id;

    /*
     * The type of the resource. For example, Microsoft.Management/managementGroups
     */
    private String type;

    /*
     * The name of the management group. For example, 00000000-0000-0000-0000-000000000000
     */
    private String name;

    /*
     * The current status of the asynchronous operation performed . For example, Running, Succeeded, Failed
     */
    private String status;

    /*
     * The generic properties of a management group.
     */
    private ManagementGroupInfoProperties innerProperties;

    /**
     * Creates an instance of AzureAsyncOperationResultsInner class.
     */
    public AzureAsyncOperationResultsInner() {
    }

    /**
     * Get the id property: The fully qualified ID for the management group. For example,
     * /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the type property: The type of the resource. For example, Microsoft.Management/managementGroups.
     * 
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Get the name property: The name of the management group. For example, 00000000-0000-0000-0000-000000000000.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the status property: The current status of the asynchronous operation performed . For example, Running,
     * Succeeded, Failed.
     * 
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Get the innerProperties property: The generic properties of a management group.
     * 
     * @return the innerProperties value.
     */
    private ManagementGroupInfoProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the tenantId property: The AAD Tenant ID associated with the management group. For example,
     * 00000000-0000-0000-0000-000000000000.
     * 
     * @return the tenantId value.
     */
    public String tenantId() {
        return this.innerProperties() == null ? null : this.innerProperties().tenantId();
    }

    /**
     * Set the tenantId property: The AAD Tenant ID associated with the management group. For example,
     * 00000000-0000-0000-0000-000000000000.
     * 
     * @param tenantId the tenantId value to set.
     * @return the AzureAsyncOperationResultsInner object itself.
     */
    public AzureAsyncOperationResultsInner withTenantId(String tenantId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ManagementGroupInfoProperties();
        }
        this.innerProperties().withTenantId(tenantId);
        return this;
    }

    /**
     * Get the displayName property: The friendly name of the management group.
     * 
     * @return the displayName value.
     */
    public String displayName() {
        return this.innerProperties() == null ? null : this.innerProperties().displayName();
    }

    /**
     * Set the displayName property: The friendly name of the management group.
     * 
     * @param displayName the displayName value to set.
     * @return the AzureAsyncOperationResultsInner object itself.
     */
    public AzureAsyncOperationResultsInner withDisplayName(String displayName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ManagementGroupInfoProperties();
        }
        this.innerProperties().withDisplayName(displayName);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureAsyncOperationResultsInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureAsyncOperationResultsInner if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzureAsyncOperationResultsInner.
     */
    public static AzureAsyncOperationResultsInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureAsyncOperationResultsInner deserializedAzureAsyncOperationResultsInner
                = new AzureAsyncOperationResultsInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedAzureAsyncOperationResultsInner.id = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedAzureAsyncOperationResultsInner.type = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedAzureAsyncOperationResultsInner.name = reader.getString();
                } else if ("status".equals(fieldName)) {
                    deserializedAzureAsyncOperationResultsInner.status = reader.getString();
                } else if ("properties".equals(fieldName)) {
                    deserializedAzureAsyncOperationResultsInner.innerProperties
                        = ManagementGroupInfoProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureAsyncOperationResultsInner;
        });
    }
}
