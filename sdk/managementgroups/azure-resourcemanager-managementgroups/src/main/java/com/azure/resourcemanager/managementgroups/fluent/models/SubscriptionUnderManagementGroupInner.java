// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managementgroups.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.managementgroups.models.DescendantParentGroupInfo;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The details of subscription under management group. */
@JsonFlatten
@Fluent
public class SubscriptionUnderManagementGroupInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(SubscriptionUnderManagementGroupInner.class);

    /*
     * The AAD Tenant ID associated with the subscription. For example,
     * 00000000-0000-0000-0000-000000000000
     */
    @JsonProperty(value = "properties.tenant")
    private String tenant;

    /*
     * The friendly name of the subscription.
     */
    @JsonProperty(value = "properties.displayName")
    private String displayName;

    /*
     * The ID of the parent management group.
     */
    @JsonProperty(value = "properties.parent")
    private DescendantParentGroupInfo parent;

    /*
     * The state of the subscription.
     */
    @JsonProperty(value = "properties.state")
    private String state;

    /**
     * Get the tenant property: The AAD Tenant ID associated with the subscription. For example,
     * 00000000-0000-0000-0000-000000000000.
     *
     * @return the tenant value.
     */
    public String tenant() {
        return this.tenant;
    }

    /**
     * Set the tenant property: The AAD Tenant ID associated with the subscription. For example,
     * 00000000-0000-0000-0000-000000000000.
     *
     * @param tenant the tenant value to set.
     * @return the SubscriptionUnderManagementGroupInner object itself.
     */
    public SubscriptionUnderManagementGroupInner withTenant(String tenant) {
        this.tenant = tenant;
        return this;
    }

    /**
     * Get the displayName property: The friendly name of the subscription.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: The friendly name of the subscription.
     *
     * @param displayName the displayName value to set.
     * @return the SubscriptionUnderManagementGroupInner object itself.
     */
    public SubscriptionUnderManagementGroupInner withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the parent property: The ID of the parent management group.
     *
     * @return the parent value.
     */
    public DescendantParentGroupInfo parent() {
        return this.parent;
    }

    /**
     * Set the parent property: The ID of the parent management group.
     *
     * @param parent the parent value to set.
     * @return the SubscriptionUnderManagementGroupInner object itself.
     */
    public SubscriptionUnderManagementGroupInner withParent(DescendantParentGroupInfo parent) {
        this.parent = parent;
        return this;
    }

    /**
     * Get the state property: The state of the subscription.
     *
     * @return the state value.
     */
    public String state() {
        return this.state;
    }

    /**
     * Set the state property: The state of the subscription.
     *
     * @param state the state value to set.
     * @return the SubscriptionUnderManagementGroupInner object itself.
     */
    public SubscriptionUnderManagementGroupInner withState(String state) {
        this.state = state;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (parent() != null) {
            parent().validate();
        }
    }
}
