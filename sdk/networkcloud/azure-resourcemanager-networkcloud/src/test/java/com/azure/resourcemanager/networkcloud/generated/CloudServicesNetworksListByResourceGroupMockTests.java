// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.networkcloud.NetworkCloudManager;
import com.azure.resourcemanager.networkcloud.models.CloudServicesNetwork;
import com.azure.resourcemanager.networkcloud.models.CloudServicesNetworkEnableDefaultEgressEndpoints;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudServicesNetworksListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"extendedLocation\":{\"name\":\"lz\",\"type\":\"zjknyuxg\"},\"properties\":{\"additionalEgressEndpoints\":[{\"category\":\"pnrupzaamrdi\",\"endpoints\":[{\"domainName\":\"rekidswysk\"},{\"domainName\":\"ruffgllukk\"},{\"domainName\":\"tvlxhrpqh\"}]}],\"associatedResourceIds\":[\"lcouqehbhbcdszir\",\"randoypmb\",\"t\",\"ormkfqlwxldyk\"],\"clusterId\":\"sy\",\"detailedStatus\":\"Error\",\"detailedStatusMessage\":\"njpnnbmj\",\"enableDefaultEgressEndpoints\":\"False\",\"enabledEgressEndpoints\":[{\"category\":\"gsjjxxahmrna\",\"endpoints\":[{\"domainName\":\"yqegx\"},{\"domainName\":\"iv\"},{\"domainName\":\"inbmh\"}]},{\"category\":\"bjijkgqxnh\",\"endpoints\":[{\"domainName\":\"keznjaujvaa\"},{\"domainName\":\"nggiycwkdtaa\"}]},{\"category\":\"xw\",\"endpoints\":[{\"domainName\":\"ka\"},{\"domainName\":\"mrrqmbzmqkratb\"}]}],\"hybridAksClustersAssociatedIds\":[\"bjsidb\",\"rkfpks\",\"kd\"],\"interfaceName\":\"gewi\",\"provisioningState\":\"Provisioning\",\"virtualMachinesAssociatedIds\":[\"bguzozky\",\"wnf\"]},\"location\":\"hhhqosm\",\"tags\":{\"zoghktdpyczhc\":\"kutycyarnroohgua\",\"cfyjzp\":\"eocnhzqrottj\",\"qdhmrjzralcxpjby\":\"wrlohapqinfszpyg\"},\"id\":\"psjoqcjenk\",\"name\":\"hf\",\"type\":\"zv\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetworkCloudManager manager = NetworkCloudManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<CloudServicesNetwork> response
            = manager.cloudServicesNetworks().listByResourceGroup("akpoldtvevbo", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("hhhqosm", response.iterator().next().location());
        Assertions.assertEquals("kutycyarnroohgua", response.iterator().next().tags().get("zoghktdpyczhc"));
        Assertions.assertEquals("lz", response.iterator().next().extendedLocation().name());
        Assertions.assertEquals("zjknyuxg", response.iterator().next().extendedLocation().type());
        Assertions.assertEquals("pnrupzaamrdi",
            response.iterator().next().additionalEgressEndpoints().get(0).category());
        Assertions.assertEquals("rekidswysk",
            response.iterator().next().additionalEgressEndpoints().get(0).endpoints().get(0).domainName());
        Assertions.assertEquals(CloudServicesNetworkEnableDefaultEgressEndpoints.FALSE,
            response.iterator().next().enableDefaultEgressEndpoints());
    }
}
