// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.networkcloud.NetworkCloudManager;
import com.azure.resourcemanager.networkcloud.models.CloudServicesNetwork;
import com.azure.resourcemanager.networkcloud.models.CloudServicesNetworkEnableDefaultEgressEndpoints;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudServicesNetworksListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"etag\":\"mkoisqcssf\",\"extendedLocation\":{\"name\":\"xuifmcsypobkdqz\",\"type\":\"dzsylollgtrczz\"},\"properties\":{\"additionalEgressEndpoints\":[{\"category\":\"zjijpvuaurkihcir\",\"endpoints\":[{\"domainName\":\"efxrdcoxnbk\"},{\"domainName\":\"ja\"}]}],\"associatedResourceIds\":[\"nnqbnqbp\",\"zxqltgrdogypx\"],\"clusterId\":\"vbfihwuhvctafsr\",\"detailedStatus\":\"Provisioning\",\"detailedStatusMessage\":\"lmliowxihspnxwqa\",\"enableDefaultEgressEndpoints\":\"False\",\"enabledEgressEndpoints\":[{\"category\":\"waklsbsbqq\",\"endpoints\":[{\"domainName\":\"gwwrxaomzis\"},{\"domainName\":\"lrrcz\"},{\"domainName\":\"zkhhltnjadhqo\"}]}],\"hybridAksClustersAssociatedIds\":[\"qoyueayfbpcmsplb\",\"rrueqthwmg\",\"mbscbbx\",\"gdhxi\"],\"interfaceName\":\"lopedbwdpyqyyb\",\"provisioningState\":\"Accepted\",\"virtualMachinesAssociatedIds\":[\"nafcbq\",\"remj\",\"laqacigele\"]},\"location\":\"d\",\"tags\":{\"pwbeonr\":\"vwzkj\",\"xcptsoqfyiaseqc\":\"kwzdqybxcea\",\"razisg\":\"krtt\",\"nbwzohmnrxxbso\":\"kiuemv\"},\"id\":\"klinhmdptysprq\",\"name\":\"gnzxojpslsvj\",\"type\":\"pli\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetworkCloudManager manager = NetworkCloudManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<CloudServicesNetwork> response
            = manager.cloudServicesNetworks().listByResourceGroup("vxnqmhrpqpd", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("d", response.iterator().next().location());
        Assertions.assertEquals("vwzkj", response.iterator().next().tags().get("pwbeonr"));
        Assertions.assertEquals("xuifmcsypobkdqz", response.iterator().next().extendedLocation().name());
        Assertions.assertEquals("dzsylollgtrczz", response.iterator().next().extendedLocation().type());
        Assertions.assertEquals("zjijpvuaurkihcir",
            response.iterator().next().additionalEgressEndpoints().get(0).category());
        Assertions.assertEquals("efxrdcoxnbk",
            response.iterator().next().additionalEgressEndpoints().get(0).endpoints().get(0).domainName());
        Assertions.assertEquals(CloudServicesNetworkEnableDefaultEgressEndpoints.FALSE,
            response.iterator().next().enableDefaultEgressEndpoints());
    }
}
