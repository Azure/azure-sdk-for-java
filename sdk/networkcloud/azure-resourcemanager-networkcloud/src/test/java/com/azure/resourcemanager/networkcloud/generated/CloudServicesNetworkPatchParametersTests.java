// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkcloud.models.CloudServicesNetworkEnableDefaultEgressEndpoints;
import com.azure.resourcemanager.networkcloud.models.CloudServicesNetworkPatchParameters;
import com.azure.resourcemanager.networkcloud.models.EgressEndpoint;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class CloudServicesNetworkPatchParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CloudServicesNetworkPatchParameters model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"additionalEgressEndpoints\":[{\"category\":\"qucwyhahnom\",\"endpoints\":[]},{\"category\":\"rkywuhpsvfuu\",\"endpoints\":[]},{\"category\":\"utlwexxwla\",\"endpoints\":[]}],\"enableDefaultEgressEndpoints\":\"False\"},\"tags\":{\"yb\":\"zsrzpgepq\",\"rkcxkj\":\"wwpgdakchzyvlixq\"}}")
                .toObject(CloudServicesNetworkPatchParameters.class);
        Assertions.assertEquals("zsrzpgepq", model.tags().get("yb"));
        Assertions.assertEquals("qucwyhahnom", model.additionalEgressEndpoints().get(0).category());
        Assertions
            .assertEquals(CloudServicesNetworkEnableDefaultEgressEndpoints.FALSE, model.enableDefaultEgressEndpoints());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CloudServicesNetworkPatchParameters model =
            new CloudServicesNetworkPatchParameters()
                .withTags(mapOf("yb", "zsrzpgepq", "rkcxkj", "wwpgdakchzyvlixq"))
                .withAdditionalEgressEndpoints(
                    Arrays
                        .asList(
                            new EgressEndpoint().withCategory("qucwyhahnom").withEndpoints(Arrays.asList()),
                            new EgressEndpoint().withCategory("rkywuhpsvfuu").withEndpoints(Arrays.asList()),
                            new EgressEndpoint().withCategory("utlwexxwla").withEndpoints(Arrays.asList())))
                .withEnableDefaultEgressEndpoints(CloudServicesNetworkEnableDefaultEgressEndpoints.FALSE);
        model = BinaryData.fromObject(model).toObject(CloudServicesNetworkPatchParameters.class);
        Assertions.assertEquals("zsrzpgepq", model.tags().get("yb"));
        Assertions.assertEquals("qucwyhahnom", model.additionalEgressEndpoints().get(0).category());
        Assertions
            .assertEquals(CloudServicesNetworkEnableDefaultEgressEndpoints.FALSE, model.enableDefaultEgressEndpoints());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
