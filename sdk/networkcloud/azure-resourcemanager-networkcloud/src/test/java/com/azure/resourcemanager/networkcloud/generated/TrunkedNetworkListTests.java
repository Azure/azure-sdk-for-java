// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkcloud.fluent.models.TrunkedNetworkInner;
import com.azure.resourcemanager.networkcloud.models.ExtendedLocation;
import com.azure.resourcemanager.networkcloud.models.HybridAksPluginType;
import com.azure.resourcemanager.networkcloud.models.TrunkedNetworkList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class TrunkedNetworkListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TrunkedNetworkList model = BinaryData.fromString(
            "{\"nextLink\":\"qhlwigdivbkbxgo\",\"value\":[{\"extendedLocation\":{\"name\":\"juwasqvdaeyyguxa\",\"type\":\"jsqzhzbezk\"},\"properties\":{\"associatedResourceIds\":[\"sidxasicdd\",\"vvjskgfmocwahp\",\"gat\",\"eaahhvjhhn\"],\"clusterId\":\"zybbj\",\"detailedStatus\":\"Available\",\"detailedStatusMessage\":\"ksyxkyxvxevblbje\",\"hybridAksClustersAssociatedIds\":[\"jlageu\",\"ulxunsmjbnkpp\",\"ynenlsvxeizz\"],\"hybridAksPluginType\":\"SRIOV\",\"interfaceName\":\"nsrmffeycx\",\"isolationDomainIds\":[\"tpiymerteea\"],\"provisioningState\":\"Succeeded\",\"virtualMachinesAssociatedIds\":[\"ekkkzd\",\"rtkgdojbmxvavref\",\"eesvecu\",\"jpxtxsuwprtuj\"],\"vlans\":[1050877553799063641,5348158048255223643,8069918205295574931,706270715429567578]},\"location\":\"xvititvtz\",\"tags\":{\"ecdmdqbwpy\":\"avoxtfg\"},\"id\":\"q\",\"name\":\"gsfjac\",\"type\":\"slhhxudbxv\"},{\"extendedLocation\":{\"name\":\"d\",\"type\":\"tnsi\"},\"properties\":{\"associatedResourceIds\":[\"hzmme\",\"ckdlpag\",\"rcxfailcfxwmdb\"],\"clusterId\":\"dfgsftufqobrj\",\"detailedStatus\":\"Error\",\"detailedStatusMessage\":\"gcckknhxkizvytn\",\"hybridAksClustersAssociatedIds\":[\"uljraae\",\"anokqgu\",\"kjq\",\"vbroylaxxu\"],\"hybridAksPluginType\":\"OSDevice\",\"interfaceName\":\"sdosfjbjsvgjr\",\"isolationDomainIds\":[\"r\",\"vyc\"],\"provisioningState\":\"Provisioning\",\"virtualMachinesAssociatedIds\":[\"xgccknfnw\",\"btmvpdvjdhttza\",\"fedxihchrphkm\",\"rjdqnsdfzp\"],\"vlans\":[2004934098005574571,560621963294403573,6433171258277978694]},\"location\":\"ghrjeuutl\",\"tags\":{\"zhokvbwnhh\":\"z\"},\"id\":\"qlgehg\",\"name\":\"pipifh\",\"type\":\"f\"}]}")
            .toObject(TrunkedNetworkList.class);
        Assertions.assertEquals("qhlwigdivbkbxgo", model.nextLink());
        Assertions.assertEquals("xvititvtz", model.value().get(0).location());
        Assertions.assertEquals("avoxtfg", model.value().get(0).tags().get("ecdmdqbwpy"));
        Assertions.assertEquals("juwasqvdaeyyguxa", model.value().get(0).extendedLocation().name());
        Assertions.assertEquals("jsqzhzbezk", model.value().get(0).extendedLocation().type());
        Assertions.assertEquals(HybridAksPluginType.SRIOV, model.value().get(0).hybridAksPluginType());
        Assertions.assertEquals("nsrmffeycx", model.value().get(0).interfaceName());
        Assertions.assertEquals("tpiymerteea", model.value().get(0).isolationDomainIds().get(0));
        Assertions.assertEquals(1050877553799063641L, model.value().get(0).vlans().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TrunkedNetworkList model
            = new TrunkedNetworkList().withNextLink("qhlwigdivbkbxgo")
                .withValue(Arrays.asList(
                    new TrunkedNetworkInner().withLocation("xvititvtz")
                        .withTags(mapOf("ecdmdqbwpy", "avoxtfg"))
                        .withExtendedLocation(
                            new ExtendedLocation().withName("juwasqvdaeyyguxa").withType("jsqzhzbezk"))
                        .withHybridAksPluginType(HybridAksPluginType.SRIOV)
                        .withInterfaceName("nsrmffeycx")
                        .withIsolationDomainIds(Arrays.asList("tpiymerteea"))
                        .withVlans(Arrays.asList(1050877553799063641L, 5348158048255223643L, 8069918205295574931L,
                            706270715429567578L)),
                    new TrunkedNetworkInner().withLocation("ghrjeuutl")
                        .withTags(mapOf("zhokvbwnhh", "z"))
                        .withExtendedLocation(new ExtendedLocation().withName("d").withType("tnsi"))
                        .withHybridAksPluginType(HybridAksPluginType.OSDEVICE)
                        .withInterfaceName("sdosfjbjsvgjr")
                        .withIsolationDomainIds(Arrays.asList("r", "vyc"))
                        .withVlans(Arrays.asList(2004934098005574571L, 560621963294403573L, 6433171258277978694L))));
        model = BinaryData.fromObject(model).toObject(TrunkedNetworkList.class);
        Assertions.assertEquals("qhlwigdivbkbxgo", model.nextLink());
        Assertions.assertEquals("xvititvtz", model.value().get(0).location());
        Assertions.assertEquals("avoxtfg", model.value().get(0).tags().get("ecdmdqbwpy"));
        Assertions.assertEquals("juwasqvdaeyyguxa", model.value().get(0).extendedLocation().name());
        Assertions.assertEquals("jsqzhzbezk", model.value().get(0).extendedLocation().type());
        Assertions.assertEquals(HybridAksPluginType.SRIOV, model.value().get(0).hybridAksPluginType());
        Assertions.assertEquals("nsrmffeycx", model.value().get(0).interfaceName());
        Assertions.assertEquals("tpiymerteea", model.value().get(0).isolationDomainIds().get(0));
        Assertions.assertEquals(1050877553799063641L, model.value().get(0).vlans().get(0));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
