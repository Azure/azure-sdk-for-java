// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkcloud.fluent.models.BareMetalMachineKeySetInner;
import com.azure.resourcemanager.networkcloud.models.BareMetalMachineKeySetPrivilegeLevel;
import com.azure.resourcemanager.networkcloud.models.ExtendedLocation;
import com.azure.resourcemanager.networkcloud.models.KeySetUser;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class BareMetalMachineKeySetInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BareMetalMachineKeySetInner model =
            BinaryData
                .fromString(
                    "{\"extendedLocation\":{\"name\":\"bkwvzg\",\"type\":\"zvd\"},\"properties\":{\"azureGroupId\":\"bzdixzmq\",\"detailedStatus\":\"Validating\",\"detailedStatusMessage\":\"awopqh\",\"expiration\":\"2021-07-22T14:39:18Z\",\"jumpHostsAllowed\":[\"ptmcgsbostzelnd\",\"atutmzlbiojlvfhr\",\"bpneqvcwwyyurm\"],\"lastValidation\":\"2021-08-18T09:01:50Z\",\"osGroupName\":\"prprsnmokay\",\"privilegeLevel\":\"Superuser\",\"provisioningState\":\"Succeeded\",\"userList\":[{\"azureUserName\":\"lbkpb\",\"description\":\"cpilj\"}],\"userListStatus\":[{\"azureUserName\":\"vechndbnwiehole\",\"status\":\"Active\",\"statusMessage\":\"uubw\"},{\"azureUserName\":\"qsfapaqt\",\"status\":\"Active\",\"statusMessage\":\"q\"},{\"azureUserName\":\"x\",\"status\":\"Invalid\",\"statusMessage\":\"xap\"},{\"azureUserName\":\"og\",\"status\":\"Invalid\",\"statusMessage\":\"bpudcdab\"}]},\"location\":\"wpwyawbz\",\"tags\":{\"aipidsdaultxi\":\"bucljgkyexaogu\",\"mcjn\":\"jumfqwazlnq\",\"jw\":\"zqdqxt\",\"jqg\":\"nyfusfzsvtuikzh\"},\"id\":\"cfhmlrqryxyn\",\"name\":\"nzrdpsovwxz\",\"type\":\"ptgoeiybbabp\"}")
                .toObject(BareMetalMachineKeySetInner.class);
        Assertions.assertEquals("wpwyawbz", model.location());
        Assertions.assertEquals("bucljgkyexaogu", model.tags().get("aipidsdaultxi"));
        Assertions.assertEquals("bkwvzg", model.extendedLocation().name());
        Assertions.assertEquals("zvd", model.extendedLocation().type());
        Assertions.assertEquals("bzdixzmq", model.azureGroupId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-22T14:39:18Z"), model.expiration());
        Assertions.assertEquals("ptmcgsbostzelnd", model.jumpHostsAllowed().get(0));
        Assertions.assertEquals("prprsnmokay", model.osGroupName());
        Assertions.assertEquals(BareMetalMachineKeySetPrivilegeLevel.SUPERUSER, model.privilegeLevel());
        Assertions.assertEquals("lbkpb", model.userList().get(0).azureUsername());
        Assertions.assertEquals("cpilj", model.userList().get(0).description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BareMetalMachineKeySetInner model =
            new BareMetalMachineKeySetInner()
                .withLocation("wpwyawbz")
                .withTags(
                    mapOf(
                        "aipidsdaultxi",
                        "bucljgkyexaogu",
                        "mcjn",
                        "jumfqwazlnq",
                        "jw",
                        "zqdqxt",
                        "jqg",
                        "nyfusfzsvtuikzh"))
                .withExtendedLocation(new ExtendedLocation().withName("bkwvzg").withType("zvd"))
                .withAzureGroupId("bzdixzmq")
                .withExpiration(OffsetDateTime.parse("2021-07-22T14:39:18Z"))
                .withJumpHostsAllowed(Arrays.asList("ptmcgsbostzelnd", "atutmzlbiojlvfhr", "bpneqvcwwyyurm"))
                .withOsGroupName("prprsnmokay")
                .withPrivilegeLevel(BareMetalMachineKeySetPrivilegeLevel.SUPERUSER)
                .withUserList(Arrays.asList(new KeySetUser().withAzureUsername("lbkpb").withDescription("cpilj")));
        model = BinaryData.fromObject(model).toObject(BareMetalMachineKeySetInner.class);
        Assertions.assertEquals("wpwyawbz", model.location());
        Assertions.assertEquals("bucljgkyexaogu", model.tags().get("aipidsdaultxi"));
        Assertions.assertEquals("bkwvzg", model.extendedLocation().name());
        Assertions.assertEquals("zvd", model.extendedLocation().type());
        Assertions.assertEquals("bzdixzmq", model.azureGroupId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-22T14:39:18Z"), model.expiration());
        Assertions.assertEquals("ptmcgsbostzelnd", model.jumpHostsAllowed().get(0));
        Assertions.assertEquals("prprsnmokay", model.osGroupName());
        Assertions.assertEquals(BareMetalMachineKeySetPrivilegeLevel.SUPERUSER, model.privilegeLevel());
        Assertions.assertEquals("lbkpb", model.userList().get(0).azureUsername());
        Assertions.assertEquals("cpilj", model.userList().get(0).description());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
