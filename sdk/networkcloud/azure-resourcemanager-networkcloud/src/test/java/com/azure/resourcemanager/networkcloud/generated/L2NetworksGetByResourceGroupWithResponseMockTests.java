// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.networkcloud.NetworkCloudManager;
import com.azure.resourcemanager.networkcloud.models.HybridAksPluginType;
import com.azure.resourcemanager.networkcloud.models.L2Network;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class L2NetworksGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"etag\":\"tvlmbjwcolbmxlb\",\"extendedLocation\":{\"name\":\"w\",\"type\":\"pcpahprzrvxhmtf\"},\"properties\":{\"associatedResourceIds\":[\"nxzcm\",\"hngxnoqrxtd\"],\"clusterId\":\"njevhdlmydidw\",\"detailedStatus\":\"Provisioning\",\"detailedStatusMessage\":\"wwtjfdoesxxhmwc\",\"hybridAksClustersAssociatedIds\":[\"ky\"],\"hybridAksPluginType\":\"OSDevice\",\"interfaceName\":\"kxhnegknj\",\"l2IsolationDomainId\":\"rbhtmeplvukaobr\",\"provisioningState\":\"Failed\",\"virtualMachinesAssociatedIds\":[\"nbagnchj\",\"g\",\"muowakywalhjy\"]},\"location\":\"cgqtag\",\"tags\":{\"ljomevt\":\"lss\",\"gjiiytssiki\":\"ycnlbvgjcodk\",\"gmqsorhcekxg\":\"bcufqbvntn\",\"sqdtiwlwxlbon\":\"lykmxcpwzvmdo\"},\"id\":\"qba\",\"name\":\"qicqchygt\",\"type\":\"xbyja\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetworkCloudManager manager = NetworkCloudManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        L2Network response = manager.l2Networks()
            .getByResourceGroupWithResponse("utrpbr", "uyu", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("cgqtag", response.location());
        Assertions.assertEquals("lss", response.tags().get("ljomevt"));
        Assertions.assertEquals("w", response.extendedLocation().name());
        Assertions.assertEquals("pcpahprzrvxhmtf", response.extendedLocation().type());
        Assertions.assertEquals(HybridAksPluginType.OSDEVICE, response.hybridAksPluginType());
        Assertions.assertEquals("kxhnegknj", response.interfaceName());
        Assertions.assertEquals("rbhtmeplvukaobr", response.l2IsolationDomainId());
    }
}
