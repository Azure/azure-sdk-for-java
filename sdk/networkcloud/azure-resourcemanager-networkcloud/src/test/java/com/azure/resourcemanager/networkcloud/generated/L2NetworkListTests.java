// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkcloud.fluent.models.L2NetworkInner;
import com.azure.resourcemanager.networkcloud.models.ExtendedLocation;
import com.azure.resourcemanager.networkcloud.models.HybridAksPluginType;
import com.azure.resourcemanager.networkcloud.models.L2NetworkList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class L2NetworkListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        L2NetworkList model = BinaryData.fromString(
            "{\"nextLink\":\"qhoftrmaequiah\",\"value\":[{\"extendedLocation\":{\"name\":\"slfaoqzpiyyl\",\"type\":\"alnswhccsphk\"},\"properties\":{\"associatedResourceIds\":[\"witqscywuggwoluh\",\"zbwemh\",\"i\"],\"clusterId\":\"brgz\",\"detailedStatus\":\"Provisioning\",\"detailedStatusMessage\":\"weyp\",\"hybridAksClustersAssociatedIds\":[\"xggicccnxqhuexmk\",\"tlstvlzywem\",\"zrncsdt\",\"lusiy\"],\"hybridAksPluginType\":\"SRIOV\",\"interfaceName\":\"gytguslfead\",\"l2IsolationDomainId\":\"ygqukyhejh\",\"provisioningState\":\"Accepted\",\"virtualMachinesAssociatedIds\":[\"fpel\",\"lppvksrpq\",\"ujzra\",\"htwdwrftswibyrcd\"]},\"location\":\"h\",\"tags\":{\"c\":\"wpracstwitykhev\",\"jc\":\"edcpnmdyodnwzxl\",\"vvwxqi\":\"nhltiugcxn\"},\"id\":\"y\",\"name\":\"unyowxwl\",\"type\":\"djrkvfgbvfvpd\"},{\"extendedLocation\":{\"name\":\"odacizs\",\"type\":\"q\"},\"properties\":{\"associatedResourceIds\":[\"rribd\",\"ibqipqkg\",\"vxndz\"],\"clusterId\":\"krefajpjo\",\"detailedStatus\":\"Provisioning\",\"detailedStatusMessage\":\"nyhgbijtji\",\"hybridAksClustersAssociatedIds\":[\"zs\",\"ab\"],\"hybridAksPluginType\":\"OSDevice\",\"interfaceName\":\"stawfsdjpvkv\",\"l2IsolationDomainId\":\"bjxbkzbzk\",\"provisioningState\":\"Failed\",\"virtualMachinesAssociatedIds\":[\"abudurgk\",\"kmokz\",\"jjklff\",\"mouwqlgzrfzeey\"]},\"location\":\"izikayuhq\",\"tags\":{\"bbqwrvtldg\":\"bs\",\"vm\":\"fp\"},\"id\":\"ipaslthaqfxssmwu\",\"name\":\"wbdsr\",\"type\":\"zpdrhneu\"},{\"extendedLocation\":{\"name\":\"owqkdwytisi\",\"type\":\"ircgpikpz\"},\"properties\":{\"associatedResourceIds\":[\"j\",\"anlfzxiavrmbz\"],\"clusterId\":\"okixrjqcir\",\"detailedStatus\":\"Error\",\"detailedStatusMessage\":\"rlazszrnw\",\"hybridAksClustersAssociatedIds\":[\"ndfpwpj\",\"lwbtlhf\",\"sj\"],\"hybridAksPluginType\":\"DPDK\",\"interfaceName\":\"zfjvfbgofe\",\"l2IsolationDomainId\":\"jagrqmqhldvr\",\"provisioningState\":\"Provisioning\",\"virtualMachinesAssociatedIds\":[\"nalghfkvtvsexso\",\"ueluqhhahhxvrhmz\"]},\"location\":\"pjgwwspug\",\"tags\":{\"hqxujxukndxdi\":\"qs\"},\"id\":\"rjguufzdmsyqtf\",\"name\":\"hwhbotzingamv\",\"type\":\"phoszqz\"},{\"extendedLocation\":{\"name\":\"dphqamv\",\"type\":\"kfwynw\"},\"properties\":{\"associatedResourceIds\":[\"bvkayh\",\"tnvyqiatkzwp\",\"npwzcjaes\",\"vvsccyajguq\"],\"clusterId\":\"wygzlvdnkfxusem\",\"detailedStatus\":\"Provisioning\",\"detailedStatusMessage\":\"muhapfcqdpsqxqv\",\"hybridAksClustersAssociatedIds\":[\"uoymgccelvezry\"],\"hybridAksPluginType\":\"DPDK\",\"interfaceName\":\"feo\",\"l2IsolationDomainId\":\"erqwkyhkobopg\",\"provisioningState\":\"Canceled\",\"virtualMachinesAssociatedIds\":[\"wep\",\"qpcrf\",\"bwccsnjvcdwxlpqe\"]},\"location\":\"tn\",\"tags\":{\"dhtmdvypgikd\":\"jsyingwfqatm\",\"hlhkjoqrvqqaatj\":\"szywkbirryu\"},\"id\":\"nrvgoupmfiibfgg\",\"name\":\"ioolvrwxkvtkkgll\",\"type\":\"wjygvjayvblmhvk\"}]}")
            .toObject(L2NetworkList.class);
        Assertions.assertEquals("qhoftrmaequiah", model.nextLink());
        Assertions.assertEquals("h", model.value().get(0).location());
        Assertions.assertEquals("wpracstwitykhev", model.value().get(0).tags().get("c"));
        Assertions.assertEquals("slfaoqzpiyyl", model.value().get(0).extendedLocation().name());
        Assertions.assertEquals("alnswhccsphk", model.value().get(0).extendedLocation().type());
        Assertions.assertEquals(HybridAksPluginType.SRIOV, model.value().get(0).hybridAksPluginType());
        Assertions.assertEquals("gytguslfead", model.value().get(0).interfaceName());
        Assertions.assertEquals("ygqukyhejh", model.value().get(0).l2IsolationDomainId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        L2NetworkList model
            = new L2NetworkList().withNextLink("qhoftrmaequiah")
                .withValue(
                    Arrays
                        .asList(
                            new L2NetworkInner().withLocation("h")
                                .withTags(
                                    mapOf("c", "wpracstwitykhev", "jc", "edcpnmdyodnwzxl", "vvwxqi", "nhltiugcxn"))
                                .withExtendedLocation(
                                    new ExtendedLocation().withName("slfaoqzpiyyl").withType("alnswhccsphk"))
                                .withHybridAksPluginType(HybridAksPluginType.SRIOV)
                                .withInterfaceName("gytguslfead")
                                .withL2IsolationDomainId("ygqukyhejh"),
                            new L2NetworkInner().withLocation("izikayuhq")
                                .withTags(mapOf("bbqwrvtldg", "bs", "vm", "fp"))
                                .withExtendedLocation(new ExtendedLocation().withName("odacizs").withType("q"))
                                .withHybridAksPluginType(HybridAksPluginType.OSDEVICE)
                                .withInterfaceName("stawfsdjpvkv")
                                .withL2IsolationDomainId("bjxbkzbzk"),
                            new L2NetworkInner().withLocation("pjgwwspug")
                                .withTags(mapOf("hqxujxukndxdi", "qs"))
                                .withExtendedLocation(
                                    new ExtendedLocation().withName("owqkdwytisi").withType("ircgpikpz"))
                                .withHybridAksPluginType(HybridAksPluginType.DPDK)
                                .withInterfaceName("zfjvfbgofe")
                                .withL2IsolationDomainId("jagrqmqhldvr"),
                            new L2NetworkInner().withLocation("tn")
                                .withTags(mapOf("dhtmdvypgikd", "jsyingwfqatm", "hlhkjoqrvqqaatj", "szywkbirryu"))
                                .withExtendedLocation(new ExtendedLocation().withName("dphqamv").withType("kfwynw"))
                                .withHybridAksPluginType(HybridAksPluginType.DPDK)
                                .withInterfaceName("feo")
                                .withL2IsolationDomainId("erqwkyhkobopg")));
        model = BinaryData.fromObject(model).toObject(L2NetworkList.class);
        Assertions.assertEquals("qhoftrmaequiah", model.nextLink());
        Assertions.assertEquals("h", model.value().get(0).location());
        Assertions.assertEquals("wpracstwitykhev", model.value().get(0).tags().get("c"));
        Assertions.assertEquals("slfaoqzpiyyl", model.value().get(0).extendedLocation().name());
        Assertions.assertEquals("alnswhccsphk", model.value().get(0).extendedLocation().type());
        Assertions.assertEquals(HybridAksPluginType.SRIOV, model.value().get(0).hybridAksPluginType());
        Assertions.assertEquals("gytguslfead", model.value().get(0).interfaceName());
        Assertions.assertEquals("ygqukyhejh", model.value().get(0).l2IsolationDomainId());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
