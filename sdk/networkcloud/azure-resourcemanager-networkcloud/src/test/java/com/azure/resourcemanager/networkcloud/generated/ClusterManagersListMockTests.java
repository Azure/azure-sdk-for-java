// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.networkcloud.NetworkCloudManager;
import com.azure.resourcemanager.networkcloud.models.ClusterManager;
import com.azure.resourcemanager.networkcloud.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClusterManagersListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"identity\":{\"principalId\":\"4d1ec00a-c19d-486b-8c85-e59dd2512e70\",\"tenantId\":\"754b9f38-f49b-4379-ba11-542b430fb5e5\",\"type\":\"None\",\"userAssignedIdentities\":{\"tco\":{\"principalId\":\"c0bdd064-b0fd-421a-ad2d-7fb1cef5b573\",\"clientId\":\"c7ae2358-1aee-464e-82ad-ceee6877072c\"}}},\"properties\":{\"analyticsWorkspaceId\":\"ujpdsxzak\",\"availabilityZones\":[\"kmv\",\"iztjof\"],\"clusterVersions\":[{\"supportExpiryDate\":\"vjufycsjmlbe\",\"targetClusterVersion\":\"ej\"},{\"supportExpiryDate\":\"iuxegth\",\"targetClusterVersion\":\"tudaw\"},{\"supportExpiryDate\":\"jfel\",\"targetClusterVersion\":\"rpptcbgqnzmnhiil\"},{\"supportExpiryDate\":\"lwcjgckbbcccgzpr\",\"targetClusterVersion\":\"xnyuffatsgftipwc\"}],\"detailedStatus\":\"ProvisioningFailed\",\"detailedStatusMessage\":\"bh\",\"fabricControllerId\":\"qdx\",\"managedResourceGroupConfiguration\":{\"location\":\"npnuhzafccnuhi\",\"name\":\"byl\"},\"managerExtendedLocation\":{\"name\":\"igvxvatvcrk\",\"type\":\"lbnb\"},\"provisioningState\":\"Failed\",\"vmSize\":\"csyhzlwxaeaov\"},\"location\":\"exdnd\",\"tags\":{\"ntopa\":\"weaderzm\",\"jiuazjc\":\"ttmvmmagoaqylkjz\"},\"id\":\"mxitpfinzcpd\",\"name\":\"tkrlgjmtbd\",\"type\":\"vcqguefzh\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetworkCloudManager manager = NetworkCloudManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<ClusterManager> response = manager.clusterManagers().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("exdnd", response.iterator().next().location());
        Assertions.assertEquals("weaderzm", response.iterator().next().tags().get("ntopa"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.iterator().next().identity().type());
        Assertions.assertEquals("ujpdsxzak", response.iterator().next().analyticsWorkspaceId());
        Assertions.assertEquals("kmv", response.iterator().next().availabilityZones().get(0));
        Assertions.assertEquals("qdx", response.iterator().next().fabricControllerId());
        Assertions.assertEquals("npnuhzafccnuhi",
            response.iterator().next().managedResourceGroupConfiguration().location());
        Assertions.assertEquals("byl", response.iterator().next().managedResourceGroupConfiguration().name());
        Assertions.assertEquals("csyhzlwxaeaov", response.iterator().next().vmSize());
    }
}
