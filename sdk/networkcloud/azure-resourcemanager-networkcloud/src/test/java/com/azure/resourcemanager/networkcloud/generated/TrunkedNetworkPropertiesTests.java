// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkcloud.fluent.models.TrunkedNetworkProperties;
import com.azure.resourcemanager.networkcloud.models.HybridAksPluginType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class TrunkedNetworkPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TrunkedNetworkProperties model =
            BinaryData
                .fromString(
                    "{\"clusterId\":\"qlqhycavodg\",\"detailedStatus\":\"Available\",\"detailedStatusMessage\":\"ee\",\"hybridAksClustersAssociatedIds\":[\"eknlra\",\"iaa\"],\"hybridAksPluginType\":\"OSDevice\",\"interfaceName\":\"gy\",\"isolationDomainIds\":[\"qfby\",\"yr\",\"giagtcojo\",\"qwogfnzjvus\"],\"provisioningState\":\"Provisioning\",\"virtualMachinesAssociatedIds\":[\"ozuxylfsbtkadpys\",\"wn\",\"tgkbugrjqctojc\"],\"vlans\":[6466907609296419804,8984173730454648382,2258174854454729224,1906495664549456651]}")
                .toObject(TrunkedNetworkProperties.class);
        Assertions.assertEquals(HybridAksPluginType.OSDEVICE, model.hybridAksPluginType());
        Assertions.assertEquals("gy", model.interfaceName());
        Assertions.assertEquals("qfby", model.isolationDomainIds().get(0));
        Assertions.assertEquals(6466907609296419804L, model.vlans().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TrunkedNetworkProperties model =
            new TrunkedNetworkProperties()
                .withHybridAksPluginType(HybridAksPluginType.OSDEVICE)
                .withInterfaceName("gy")
                .withIsolationDomainIds(Arrays.asList("qfby", "yr", "giagtcojo", "qwogfnzjvus"))
                .withVlans(
                    Arrays
                        .asList(
                            6466907609296419804L, 8984173730454648382L, 2258174854454729224L, 1906495664549456651L));
        model = BinaryData.fromObject(model).toObject(TrunkedNetworkProperties.class);
        Assertions.assertEquals(HybridAksPluginType.OSDEVICE, model.hybridAksPluginType());
        Assertions.assertEquals("gy", model.interfaceName());
        Assertions.assertEquals("qfby", model.isolationDomainIds().get(0));
        Assertions.assertEquals(6466907609296419804L, model.vlans().get(0));
    }
}
