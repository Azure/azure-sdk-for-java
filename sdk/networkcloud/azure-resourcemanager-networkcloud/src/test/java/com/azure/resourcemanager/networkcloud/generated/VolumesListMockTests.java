// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.networkcloud.NetworkCloudManager;
import com.azure.resourcemanager.networkcloud.models.Volume;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class VolumesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"etag\":\"jgquxweysland\",\"extendedLocation\":{\"name\":\"dcdjhunh\",\"type\":\"hcgawn\"},\"properties\":{\"attachedTo\":[\"quox\",\"otire\",\"mseobfsxstcyilbv\",\"m\"],\"detailedStatus\":\"Error\",\"detailedStatusMessage\":\"zlquzexo\",\"provisioningState\":\"Accepted\",\"serialNumber\":\"bjvbzinzab\",\"sizeMiB\":6852976663989653349},\"location\":\"gl\",\"tags\":{\"cehaqi\":\"lpgidn\"},\"id\":\"oyzlt\",\"name\":\"iomqoqpepiaea\",\"type\":\"fsergdtpeqnacy\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetworkCloudManager manager = NetworkCloudManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Volume> response = manager.volumes().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("gl", response.iterator().next().location());
        Assertions.assertEquals("lpgidn", response.iterator().next().tags().get("cehaqi"));
        Assertions.assertEquals("dcdjhunh", response.iterator().next().extendedLocation().name());
        Assertions.assertEquals("hcgawn", response.iterator().next().extendedLocation().type());
        Assertions.assertEquals(6852976663989653349L, response.iterator().next().sizeMiB());
    }
}
