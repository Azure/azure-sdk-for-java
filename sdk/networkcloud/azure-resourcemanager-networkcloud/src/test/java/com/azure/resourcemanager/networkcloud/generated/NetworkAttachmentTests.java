// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkcloud.models.DefaultGateway;
import com.azure.resourcemanager.networkcloud.models.NetworkAttachment;
import com.azure.resourcemanager.networkcloud.models.VirtualMachineIpAllocationMethod;
import org.junit.jupiter.api.Assertions;

public final class NetworkAttachmentTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkAttachment model =
            BinaryData
                .fromString(
                    "{\"attachedNetworkId\":\"alkrmn\",\"defaultGateway\":\"True\",\"ipAllocationMethod\":\"Disabled\",\"ipv4Address\":\"acqqudfnbyxbaaab\",\"ipv6Address\":\"vayffimrzrt\",\"macAddress\":\"qogsexnevfd\",\"networkAttachmentName\":\"nw\"}")
                .toObject(NetworkAttachment.class);
        Assertions.assertEquals("alkrmn", model.attachedNetworkId());
        Assertions.assertEquals(DefaultGateway.TRUE, model.defaultGateway());
        Assertions.assertEquals(VirtualMachineIpAllocationMethod.DISABLED, model.ipAllocationMethod());
        Assertions.assertEquals("acqqudfnbyxbaaab", model.ipv4Address());
        Assertions.assertEquals("vayffimrzrt", model.ipv6Address());
        Assertions.assertEquals("nw", model.networkAttachmentName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkAttachment model =
            new NetworkAttachment()
                .withAttachedNetworkId("alkrmn")
                .withDefaultGateway(DefaultGateway.TRUE)
                .withIpAllocationMethod(VirtualMachineIpAllocationMethod.DISABLED)
                .withIpv4Address("acqqudfnbyxbaaab")
                .withIpv6Address("vayffimrzrt")
                .withNetworkAttachmentName("nw");
        model = BinaryData.fromObject(model).toObject(NetworkAttachment.class);
        Assertions.assertEquals("alkrmn", model.attachedNetworkId());
        Assertions.assertEquals(DefaultGateway.TRUE, model.defaultGateway());
        Assertions.assertEquals(VirtualMachineIpAllocationMethod.DISABLED, model.ipAllocationMethod());
        Assertions.assertEquals("acqqudfnbyxbaaab", model.ipv4Address());
        Assertions.assertEquals("vayffimrzrt", model.ipv6Address());
        Assertions.assertEquals("nw", model.networkAttachmentName());
    }
}
