// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.networkcloud.NetworkCloudManager;
import com.azure.resourcemanager.networkcloud.models.RackSku;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RackSkusListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"computeMachines\":[{\"properties\":{\"bootstrapProtocol\":\"PXE\",\"cpuCores\":2737664411935191329,\"cpuSockets\":2412862826868785175,\"disks\":[{},{},{},{}],\"generation\":\"expgeumilhwu\",\"hardwareVersion\":\"rdexyio\",\"memoryCapacityGB\":121574000919613731,\"model\":\"nbdbzsxcwqqr\",\"networkInterfaces\":[{},{},{}],\"totalThreads\":290938920787297722,\"vendor\":\"rtugavbzbcyks\"},\"rackSlot\":1934575292571449593}],\"controllerMachines\":[{\"properties\":{\"bootstrapProtocol\":\"PXE\",\"cpuCores\":5562211766370698666,\"cpuSockets\":5652177337950338181,\"disks\":[{},{},{}],\"generation\":\"jcwjjxsgmbawvif\",\"hardwareVersion\":\"kecifhocjxwklo\",\"memoryCapacityGB\":5516218030575430239,\"model\":\"xvcmufunlcp\",\"networkInterfaces\":[{}],\"totalThreads\":432611617058237718,\"vendor\":\"yngjgvrquvpygglp\"},\"rackSlot\":3678996331548318575}],\"description\":\"ueljtiahxmfqryar\",\"maxClusterSlots\":1088827521455521230,\"provisioningState\":\"Succeeded\",\"rackType\":\"Aggregator\",\"storageAppliances\":[{\"properties\":{\"capacityGB\":8220875546905771616,\"model\":\"thzodubtlmjtgbl\"},\"rackSlot\":6746506762194731200},{\"properties\":{\"capacityGB\":6245688314110771529,\"model\":\"fdjxyxg\"},\"rackSlot\":3750512903896637404},{\"properties\":{\"capacityGB\":3927523684185880557,\"model\":\"oedlrslskkzpxvjn\"},\"rackSlot\":2838866005423448463}],\"supportedRackSkuIds\":[\"ojhpcnabxzfsn\",\"gyte\",\"vzilmhiv\"]},\"id\":\"wwwncknr\",\"name\":\"dajlskzpt\",\"type\":\"xulweucyrthxqle\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetworkCloudManager manager = NetworkCloudManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<RackSku> response = manager.rackSkus().list(com.azure.core.util.Context.NONE);

    }
}
