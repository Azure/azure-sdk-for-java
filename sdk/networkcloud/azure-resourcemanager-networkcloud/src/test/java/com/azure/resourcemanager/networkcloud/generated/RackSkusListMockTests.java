// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.networkcloud.NetworkCloudManager;
import com.azure.resourcemanager.networkcloud.models.RackSku;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RackSkusListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"computeMachines\":[{\"properties\":{\"bootstrapProtocol\":\"PXE\",\"cpuCores\":4447584205030241350,\"cpuSockets\":8400553503584817648,\"disks\":[{},{}],\"generation\":\"fbcpaqktkrumzu\",\"hardwareVersion\":\"kyzbfvxovqkxiux\",\"memoryCapacityGB\":3898839867810665296,\"model\":\"r\",\"networkInterfaces\":[{},{},{}],\"totalThreads\":5111061650661934202,\"vendor\":\"j\"},\"rackSlot\":3529609816658157113},{\"properties\":{\"bootstrapProtocol\":\"PXE\",\"cpuCores\":252470490725581030,\"cpuSockets\":1020368857816332436,\"disks\":[{},{}],\"generation\":\"peuqlsdxeqztvxwm\",\"hardwareVersion\":\"mjswenawwamecle\",\"memoryCapacityGB\":7889615004017663344,\"model\":\"ndhzyoeojh\",\"networkInterfaces\":[{},{},{}],\"totalThreads\":419638915472834751,\"vendor\":\"idmytzln\"},\"rackSlot\":3612129698740546682},{\"properties\":{\"bootstrapProtocol\":\"PXE\",\"cpuCores\":5364304877177881109,\"cpuSockets\":1190636804378021682,\"disks\":[{},{},{},{}],\"generation\":\"qagywvtxig\",\"hardwareVersion\":\"rktpgaeu\",\"memoryCapacityGB\":7037523579524480136,\"model\":\"hpmwhqnucsk\",\"networkInterfaces\":[{},{}],\"totalThreads\":1929910213223359934,\"vendor\":\"tdlpbn\"},\"rackSlot\":5256685083551946475},{\"properties\":{\"bootstrapProtocol\":\"PXE\",\"cpuCores\":1725865742600423630,\"cpuSockets\":4463353598628976338,\"disks\":[{},{},{}],\"generation\":\"eedwjccik\",\"hardwareVersion\":\"syekrdrenxol\",\"memoryCapacityGB\":7163548671113747724,\"model\":\"qbeiv\",\"networkInterfaces\":[{},{},{}],\"totalThreads\":404736553810911578,\"vendor\":\"dbfgrlp\"},\"rackSlot\":4865507495234910412}],\"controllerMachines\":[{\"properties\":{\"bootstrapProtocol\":\"PXE\",\"cpuCores\":1632345465424234568,\"cpuSockets\":3094184412082080082,\"disks\":[{},{},{}],\"generation\":\"ah\",\"hardwareVersion\":\"an\",\"memoryCapacityGB\":5051562653156994764,\"model\":\"bvgwzsff\",\"networkInterfaces\":[{},{}],\"totalThreads\":2240206997813754764,\"vendor\":\"ktjtgra\"},\"rackSlot\":8990018598728079093},{\"properties\":{\"bootstrapProtocol\":\"PXE\",\"cpuCores\":1888260015025911012,\"cpuSockets\":902044973101727713,\"disks\":[{},{}],\"generation\":\"txxwpfh\",\"hardwareVersion\":\"zudrtpzk\",\"memoryCapacityGB\":5509117550074125109,\"model\":\"ywhczzq\",\"networkInterfaces\":[{},{}],\"totalThreads\":9153821152021789996,\"vendor\":\"edygisrzwnykdi\"},\"rackSlot\":2347230216812317496}],\"description\":\"rmpwctofld\",\"maxClusterSlots\":1576220923773173717,\"provisioningState\":\"Canceled\",\"rackType\":\"Aggregator\",\"storageAppliances\":[{\"properties\":{\"capacityGB\":1294853518041934738,\"model\":\"rwjiyew\"},\"rackSlot\":1774410443251418310},{\"properties\":{\"capacityGB\":2375531653636204708,\"model\":\"etfgcwvrrmdqntyc\"},\"rackSlot\":3858359410262703624},{\"properties\":{\"capacityGB\":8823202937724335004,\"model\":\"gnuyeamcmhu\"},\"rackSlot\":457361942179826962}],\"supportedRackSkuIds\":[\"h\"]},\"id\":\"wcpqtwl\",\"name\":\"esq\",\"type\":\"ggvrbnyrukoilaci\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetworkCloudManager manager = NetworkCloudManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<RackSku> response = manager.rackSkus().list(com.azure.core.util.Context.NONE);

    }
}
