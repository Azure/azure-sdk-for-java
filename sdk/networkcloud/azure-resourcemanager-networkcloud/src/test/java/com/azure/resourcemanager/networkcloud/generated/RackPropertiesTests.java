// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkcloud.fluent.models.RackProperties;
import org.junit.jupiter.api.Assertions;

public final class RackPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RackProperties model = BinaryData.fromString(
            "{\"availabilityZone\":\"qdnfwqzdz\",\"clusterId\":\"ilaxhn\",\"detailedStatus\":\"Error\",\"detailedStatusMessage\":\"yvi\",\"provisioningState\":\"Accepted\",\"rackLocation\":\"wivkxo\",\"rackSerialNumber\":\"zunbixx\",\"rackSkuId\":\"ti\"}")
            .toObject(RackProperties.class);
        Assertions.assertEquals("qdnfwqzdz", model.availabilityZone());
        Assertions.assertEquals("wivkxo", model.rackLocation());
        Assertions.assertEquals("zunbixx", model.rackSerialNumber());
        Assertions.assertEquals("ti", model.rackSkuId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RackProperties model = new RackProperties().withAvailabilityZone("qdnfwqzdz")
            .withRackLocation("wivkxo")
            .withRackSerialNumber("zunbixx")
            .withRackSkuId("ti");
        model = BinaryData.fromObject(model).toObject(RackProperties.class);
        Assertions.assertEquals("qdnfwqzdz", model.availabilityZone());
        Assertions.assertEquals("wivkxo", model.rackLocation());
        Assertions.assertEquals("zunbixx", model.rackSerialNumber());
        Assertions.assertEquals("ti", model.rackSkuId());
    }
}
