// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkcloud.fluent.models.RackProperties;
import org.junit.jupiter.api.Assertions;

public final class RackPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RackProperties model = BinaryData.fromString(
            "{\"availabilityZone\":\"llibphbqzmizak\",\"clusterId\":\"ankjpdnjzh\",\"detailedStatus\":\"Error\",\"detailedStatusMessage\":\"lhjlmuoyxprimr\",\"provisioningState\":\"Provisioning\",\"rackLocation\":\"teecjmeislst\",\"rackSerialNumber\":\"asylwx\",\"rackSkuId\":\"zaum\"}")
            .toObject(RackProperties.class);
        Assertions.assertEquals("llibphbqzmizak", model.availabilityZone());
        Assertions.assertEquals("teecjmeislst", model.rackLocation());
        Assertions.assertEquals("asylwx", model.rackSerialNumber());
        Assertions.assertEquals("zaum", model.rackSkuId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RackProperties model = new RackProperties().withAvailabilityZone("llibphbqzmizak")
            .withRackLocation("teecjmeislst")
            .withRackSerialNumber("asylwx")
            .withRackSkuId("zaum");
        model = BinaryData.fromObject(model).toObject(RackProperties.class);
        Assertions.assertEquals("llibphbqzmizak", model.availabilityZone());
        Assertions.assertEquals("teecjmeislst", model.rackLocation());
        Assertions.assertEquals("asylwx", model.rackSerialNumber());
        Assertions.assertEquals("zaum", model.rackSkuId());
    }
}
