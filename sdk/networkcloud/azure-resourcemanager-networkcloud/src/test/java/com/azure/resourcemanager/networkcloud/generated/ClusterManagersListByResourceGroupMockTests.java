// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.networkcloud.NetworkCloudManager;
import com.azure.resourcemanager.networkcloud.models.ClusterManager;
import com.azure.resourcemanager.networkcloud.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClusterManagersListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"etag\":\"kzzltafhbzf\",\"identity\":{\"principalId\":\"a7b6f2ae-9a4b-4bf0-8877-e8facf28b894\",\"tenantId\":\"6343aa4b-0926-4d02-a7d9-84419a0fc50f\",\"type\":\"None\",\"userAssignedIdentities\":{\"qsczpgvdwnapfdqw\":{\"principalId\":\"885248c3-f373-47a3-8ec2-580a84cc5694\",\"clientId\":\"3b6ae522-42a0-45fe-992a-5b5e9c1a14f0\"},\"tptnuwjtk\":{\"principalId\":\"a39f9428-344f-4430-bbdc-19f671ee4a8e\",\"clientId\":\"f00df418-4da1-4048-ab52-a6e130f85852\"},\"gcgqyhleseyqrhvy\":{\"principalId\":\"f1000f48-9e5b-4212-8095-c6a2fc358ae1\",\"clientId\":\"4bd26a46-b9b0-4f0c-b8cd-5fc0aad1b243\"},\"otjvdkwiswskukjt\":{\"principalId\":\"7aa2950d-db91-435a-9bf0-0f341d3db37a\",\"clientId\":\"72806b31-aaae-4446-931f-a2fac7273073\"}}},\"properties\":{\"analyticsWorkspaceId\":\"bvwispkx\",\"availabilityZones\":[\"xfkndlqvtwknvgm\",\"bugtywatmqa\",\"kueatgroeshoy\"],\"clusterVersions\":[{\"supportExpiryDate\":\"yf\",\"targetClusterVersion\":\"kfaoytehq\"},{\"supportExpiryDate\":\"vjmvqmtdwckygr\",\"targetClusterVersion\":\"jn\"}],\"detailedStatus\":\"Available\",\"detailedStatusMessage\":\"djus\",\"fabricControllerId\":\"br\",\"managedResourceGroupConfiguration\":{\"location\":\"ynkceysfaqegpl\",\"name\":\"ysh\"},\"managerExtendedLocation\":{\"name\":\"d\",\"type\":\"vbxgkqusyb\"},\"provisioningState\":\"Updating\",\"vmSize\":\"acarvvlf\"},\"location\":\"ymtpo\",\"tags\":{\"r\":\"naz\",\"qalsxkd\":\"hzr\",\"vessm\":\"wqapfgsdp\",\"dqq\":\"hhkuuip\"},\"id\":\"tekva\",\"name\":\"blhtjq\",\"type\":\"qyv\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetworkCloudManager manager = NetworkCloudManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<ClusterManager> response
            = manager.clusterManagers().listByResourceGroup("mclujyxkyxlzgs", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ymtpo", response.iterator().next().location());
        Assertions.assertEquals("naz", response.iterator().next().tags().get("r"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.iterator().next().identity().type());
        Assertions.assertEquals("bvwispkx", response.iterator().next().analyticsWorkspaceId());
        Assertions.assertEquals("xfkndlqvtwknvgm", response.iterator().next().availabilityZones().get(0));
        Assertions.assertEquals("br", response.iterator().next().fabricControllerId());
        Assertions.assertEquals("ynkceysfaqegpl",
            response.iterator().next().managedResourceGroupConfiguration().location());
        Assertions.assertEquals("ysh", response.iterator().next().managedResourceGroupConfiguration().name());
        Assertions.assertEquals("acarvvlf", response.iterator().next().vmSize());
    }
}
