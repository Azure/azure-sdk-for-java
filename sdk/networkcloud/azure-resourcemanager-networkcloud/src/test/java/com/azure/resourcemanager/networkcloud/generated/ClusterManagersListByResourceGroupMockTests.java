// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.networkcloud.NetworkCloudManager;
import com.azure.resourcemanager.networkcloud.models.ClusterManager;
import com.azure.resourcemanager.networkcloud.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClusterManagersListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"etag\":\"kzzltafhbzf\",\"identity\":{\"principalId\":\"58a4bff3-7763-4cea-a251-499ad19f9f2c\",\"tenantId\":\"44465021-7f33-4291-b523-152b9f50a57d\",\"type\":\"None\",\"userAssignedIdentities\":{\"qsczpgvdwnapfdqw\":{\"principalId\":\"ae1fc546-139f-4351-9044-9ad5faa7e03a\",\"clientId\":\"13fca6f7-6687-4e78-a793-ac6965f24bed\"},\"tptnuwjtk\":{\"principalId\":\"7e7a5fdb-b7b2-45c9-8ee5-476acb186552\",\"clientId\":\"05500590-9153-4358-8d94-1e137c4c57b5\"},\"gcgqyhleseyqrhvy\":{\"principalId\":\"e2033c73-db63-49f0-ab0a-5fdb9ac73454\",\"clientId\":\"b31efbbc-8be1-4260-a1bc-f8ffa75cb81d\"},\"otjvdkwiswskukjt\":{\"principalId\":\"aaeb11fd-5038-459b-a643-9afa8c73bba9\",\"clientId\":\"d3b647dc-bd6f-4a85-bf9c-195226e7f24e\"}}},\"properties\":{\"analyticsWorkspaceId\":\"bvwispkx\",\"availabilityZones\":[\"xfkndlqvtwknvgm\",\"bugtywatmqa\",\"kueatgroeshoy\"],\"clusterVersions\":[{\"supportExpiryDate\":\"yf\",\"targetClusterVersion\":\"kfaoytehq\"},{\"supportExpiryDate\":\"vjmvqmtdwckygr\",\"targetClusterVersion\":\"jn\"}],\"detailedStatus\":\"Available\",\"detailedStatusMessage\":\"djus\",\"fabricControllerId\":\"br\",\"managedResourceGroupConfiguration\":{\"location\":\"ynkceysfaqegpl\",\"name\":\"ysh\"},\"managerExtendedLocation\":{\"name\":\"d\",\"type\":\"vbxgkqusyb\"},\"provisioningState\":\"Updating\",\"vmSize\":\"acarvvlf\"},\"location\":\"ymtpo\",\"tags\":{\"r\":\"naz\",\"qalsxkd\":\"hzr\",\"vessm\":\"wqapfgsdp\",\"dqq\":\"hhkuuip\"},\"id\":\"tekva\",\"name\":\"blhtjq\",\"type\":\"qyv\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetworkCloudManager manager = NetworkCloudManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<ClusterManager> response
            = manager.clusterManagers().listByResourceGroup("mclujyxkyxlzgs", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ymtpo", response.iterator().next().location());
        Assertions.assertEquals("naz", response.iterator().next().tags().get("r"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.iterator().next().identity().type());
        Assertions.assertEquals("bvwispkx", response.iterator().next().analyticsWorkspaceId());
        Assertions.assertEquals("xfkndlqvtwknvgm", response.iterator().next().availabilityZones().get(0));
        Assertions.assertEquals("br", response.iterator().next().fabricControllerId());
        Assertions.assertEquals("ynkceysfaqegpl",
            response.iterator().next().managedResourceGroupConfiguration().location());
        Assertions.assertEquals("ysh", response.iterator().next().managedResourceGroupConfiguration().name());
        Assertions.assertEquals("acarvvlf", response.iterator().next().vmSize());
    }
}
