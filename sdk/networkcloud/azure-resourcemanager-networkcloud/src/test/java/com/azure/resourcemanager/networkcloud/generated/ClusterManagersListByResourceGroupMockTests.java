// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.networkcloud.NetworkCloudManager;
import com.azure.resourcemanager.networkcloud.models.ClusterManager;
import com.azure.resourcemanager.networkcloud.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClusterManagersListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"etag\":\"kzzltafhbzf\",\"identity\":{\"principalId\":\"120f1081-eca8-4aea-af23-21c508c53215\",\"tenantId\":\"507611da-e549-416e-b324-3e033bf9f20b\",\"type\":\"None\",\"userAssignedIdentities\":{\"qsczpgvdwnapfdqw\":{\"principalId\":\"724bb02b-72b7-446b-af22-dfb468923bd0\",\"clientId\":\"5465f68d-41c4-4081-b0fa-1563dab2d616\"},\"tptnuwjtk\":{\"principalId\":\"9770109a-7730-4248-acbc-16418f44cc7b\",\"clientId\":\"1c29bfd4-4d5f-47fa-9535-1c1c2687879b\"},\"gcgqyhleseyqrhvy\":{\"principalId\":\"2cc7711b-f672-4f65-ad07-72486badf9d1\",\"clientId\":\"245d8d86-b81f-4b44-8213-a610aa38ffe2\"},\"otjvdkwiswskukjt\":{\"principalId\":\"a25b0a47-1103-45ea-aa13-ab993f38101e\",\"clientId\":\"1e2e14d8-d346-4c51-a517-85e65ae4164e\"}}},\"properties\":{\"analyticsWorkspaceId\":\"bvwispkx\",\"availabilityZones\":[\"xfkndlqvtwknvgm\",\"bugtywatmqa\",\"kueatgroeshoy\"],\"clusterVersions\":[{\"supportExpiryDate\":\"yf\",\"targetClusterVersion\":\"kfaoytehq\"},{\"supportExpiryDate\":\"vjmvqmtdwckygr\",\"targetClusterVersion\":\"jn\"}],\"detailedStatus\":\"Available\",\"detailedStatusMessage\":\"djus\",\"fabricControllerId\":\"br\",\"managedResourceGroupConfiguration\":{\"location\":\"ynkceysfaqegpl\",\"name\":\"ysh\"},\"managerExtendedLocation\":{\"name\":\"d\",\"type\":\"vbxgkqusyb\"},\"provisioningState\":\"Updating\",\"vmSize\":\"acarvvlf\"},\"location\":\"ymtpo\",\"tags\":{\"r\":\"naz\",\"qalsxkd\":\"hzr\",\"vessm\":\"wqapfgsdp\",\"dqq\":\"hhkuuip\"},\"id\":\"tekva\",\"name\":\"blhtjq\",\"type\":\"qyv\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetworkCloudManager manager = NetworkCloudManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<ClusterManager> response
            = manager.clusterManagers().listByResourceGroup("mclujyxkyxlzgs", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ymtpo", response.iterator().next().location());
        Assertions.assertEquals("naz", response.iterator().next().tags().get("r"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.iterator().next().identity().type());
        Assertions.assertEquals("bvwispkx", response.iterator().next().analyticsWorkspaceId());
        Assertions.assertEquals("xfkndlqvtwknvgm", response.iterator().next().availabilityZones().get(0));
        Assertions.assertEquals("br", response.iterator().next().fabricControllerId());
        Assertions.assertEquals("ynkceysfaqegpl",
            response.iterator().next().managedResourceGroupConfiguration().location());
        Assertions.assertEquals("ysh", response.iterator().next().managedResourceGroupConfiguration().name());
        Assertions.assertEquals("acarvvlf", response.iterator().next().vmSize());
    }
}
