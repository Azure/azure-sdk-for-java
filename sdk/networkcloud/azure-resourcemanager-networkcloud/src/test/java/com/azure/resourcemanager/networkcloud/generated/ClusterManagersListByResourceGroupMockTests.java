// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.networkcloud.NetworkCloudManager;
import com.azure.resourcemanager.networkcloud.models.ClusterManager;
import com.azure.resourcemanager.networkcloud.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClusterManagersListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"etag\":\"kzzltafhbzf\",\"identity\":{\"principalId\":\"66c182ae-bd78-4ded-b4e6-67cf305a1c68\",\"tenantId\":\"2908d27b-fc3f-40cb-9eb6-e13d79c70848\",\"type\":\"None\",\"userAssignedIdentities\":{\"qsczpgvdwnapfdqw\":{\"principalId\":\"6d66bd0a-076d-4ba2-881e-fa39d1bd8ad6\",\"clientId\":\"25d7be5d-74cb-4743-a4b2-082752ea1cde\"},\"tptnuwjtk\":{\"principalId\":\"32ac2610-7d2e-4d34-a3b8-eff8863df980\",\"clientId\":\"e7780d63-acff-42d2-8597-2e5fb9d7fbc3\"},\"gcgqyhleseyqrhvy\":{\"principalId\":\"afbe8264-e16f-4b46-9e6a-32880032f0c7\",\"clientId\":\"47ba248a-c5a5-468b-87c1-94cfe220fb1e\"},\"otjvdkwiswskukjt\":{\"principalId\":\"4f6d6329-275d-4e15-afe0-b65864b0c86e\",\"clientId\":\"cacd3da3-c40f-405e-b382-9e93c71854df\"}}},\"properties\":{\"analyticsWorkspaceId\":\"bvwispkx\",\"availabilityZones\":[\"xfkndlqvtwknvgm\",\"bugtywatmqa\",\"kueatgroeshoy\"],\"clusterVersions\":[{\"supportExpiryDate\":\"yf\",\"targetClusterVersion\":\"kfaoytehq\"},{\"supportExpiryDate\":\"vjmvqmtdwckygr\",\"targetClusterVersion\":\"jn\"}],\"detailedStatus\":\"Available\",\"detailedStatusMessage\":\"djus\",\"fabricControllerId\":\"br\",\"managedResourceGroupConfiguration\":{\"location\":\"ynkceysfaqegpl\",\"name\":\"ysh\"},\"managerExtendedLocation\":{\"name\":\"d\",\"type\":\"vbxgkqusyb\"},\"provisioningState\":\"Updating\",\"vmSize\":\"acarvvlf\"},\"location\":\"ymtpo\",\"tags\":{\"r\":\"naz\",\"qalsxkd\":\"hzr\",\"vessm\":\"wqapfgsdp\",\"dqq\":\"hhkuuip\"},\"id\":\"tekva\",\"name\":\"blhtjq\",\"type\":\"qyv\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetworkCloudManager manager = NetworkCloudManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<ClusterManager> response
            = manager.clusterManagers().listByResourceGroup("mclujyxkyxlzgs", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ymtpo", response.iterator().next().location());
        Assertions.assertEquals("naz", response.iterator().next().tags().get("r"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.iterator().next().identity().type());
        Assertions.assertEquals("bvwispkx", response.iterator().next().analyticsWorkspaceId());
        Assertions.assertEquals("xfkndlqvtwknvgm", response.iterator().next().availabilityZones().get(0));
        Assertions.assertEquals("br", response.iterator().next().fabricControllerId());
        Assertions.assertEquals("ynkceysfaqegpl",
            response.iterator().next().managedResourceGroupConfiguration().location());
        Assertions.assertEquals("ysh", response.iterator().next().managedResourceGroupConfiguration().name());
        Assertions.assertEquals("acarvvlf", response.iterator().next().vmSize());
    }
}
