// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.networkcloud.NetworkCloudManager;
import com.azure.resourcemanager.networkcloud.models.CloudServicesNetwork;
import com.azure.resourcemanager.networkcloud.models.CloudServicesNetworkEnableDefaultEgressEndpoints;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudServicesNetworksListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"extendedLocation\":{\"name\":\"b\",\"type\":\"vnwsw\"},\"properties\":{\"additionalEgressEndpoints\":[{\"category\":\"yctww\",\"endpoints\":[{\"domainName\":\"wxjlmec\"},{\"domainName\":\"og\"}]}],\"associatedResourceIds\":[\"yvneeza\",\"fg\",\"tmoqqtlffhzb\",\"rkjjjavfqnvhnq\"],\"clusterId\":\"wdogiyetesyp\",\"detailedStatus\":\"Error\",\"detailedStatusMessage\":\"ztjhqtfbovnynkbw\",\"enableDefaultEgressEndpoints\":\"False\",\"enabledEgressEndpoints\":[{\"category\":\"hpsprkzyaupiac\",\"endpoints\":[{\"domainName\":\"n\"},{\"domainName\":\"fbwqrooht\"}]},{\"category\":\"ovmaonurjtum\",\"endpoints\":[{\"domainName\":\"ihpvecmslclblyj\"},{\"domainName\":\"lt\"},{\"domainName\":\"sjuscvsfxigctmg\"}]},{\"category\":\"uupb\",\"endpoints\":[{\"domainName\":\"qccydrtceukdq\"},{\"domainName\":\"ky\"},{\"domainName\":\"hztgeqmgqzgwld\"}]},{\"category\":\"ychillcecfe\",\"endpoints\":[{\"domainName\":\"waoaguhi\"},{\"domainName\":\"qllizstac\"},{\"domainName\":\"jvhrweft\"},{\"domainName\":\"wqejpmvsse\"}]}],\"hybridAksClustersAssociatedIds\":[\"pwamcxtczhupeuk\",\"ijdu\",\"yespydjfbocyv\"],\"interfaceName\":\"ulrtywikdmh\",\"provisioningState\":\"Failed\",\"virtualMachinesAssociatedIds\":[\"lgbhgauacdi\",\"mxu\"]},\"location\":\"sryjqgdkfno\",\"tags\":{\"hntasfaymx\":\"oqbvjhvefgwbmqj\",\"qkyojwyvf\":\"ulpzealb\",\"jcmmzrrscub\":\"mbtsuahxsg\",\"jxcjrmmuabwib\":\"wsdrnpxqwodif\"},\"id\":\"jogjonmc\",\"name\":\"e\",\"type\":\"oyzbamwineofvf\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetworkCloudManager manager = NetworkCloudManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<CloudServicesNetwork> response
            = manager.cloudServicesNetworks().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("sryjqgdkfno", response.iterator().next().location());
        Assertions.assertEquals("oqbvjhvefgwbmqj", response.iterator().next().tags().get("hntasfaymx"));
        Assertions.assertEquals("b", response.iterator().next().extendedLocation().name());
        Assertions.assertEquals("vnwsw", response.iterator().next().extendedLocation().type());
        Assertions.assertEquals("yctww", response.iterator().next().additionalEgressEndpoints().get(0).category());
        Assertions.assertEquals("wxjlmec",
            response.iterator().next().additionalEgressEndpoints().get(0).endpoints().get(0).domainName());
        Assertions.assertEquals(CloudServicesNetworkEnableDefaultEgressEndpoints.FALSE,
            response.iterator().next().enableDefaultEgressEndpoints());
    }
}
