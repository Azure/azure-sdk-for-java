// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.networkcloud.NetworkCloudManager;
import com.azure.resourcemanager.networkcloud.models.CloudServicesNetwork;
import com.azure.resourcemanager.networkcloud.models.CloudServicesNetworkEnableDefaultEgressEndpoints;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudServicesNetworksListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"etag\":\"epmrut\",\"extendedLocation\":{\"name\":\"nabaobnslujd\",\"type\":\"ltymkmvguihywart\"},\"properties\":{\"additionalEgressEndpoints\":[{\"category\":\"kixkykxdssjpemm\",\"endpoints\":[{\"domainName\":\"fxhikkflrmymyi\"},{\"domainName\":\"cqlh\"},{\"domainName\":\"isws\"}]},{\"category\":\"miii\",\"endpoints\":[{\"domainName\":\"gqcg\"}]},{\"category\":\"uugqk\",\"endpoints\":[{\"domainName\":\"otiowlxteqd\"},{\"domainName\":\"tjgwdtguk\"},{\"domainName\":\"anblwphqlkccu\"},{\"domainName\":\"gygqwah\"}]}],\"associatedResourceIds\":[\"lwgniiprglvawu\",\"z\",\"ufypiv\",\"sbbjpmcu\"],\"clusterId\":\"mifoxxkub\",\"detailedStatus\":\"Provisioning\",\"detailedStatusMessage\":\"v\",\"enableDefaultEgressEndpoints\":\"True\",\"enabledEgressEndpoints\":[{\"category\":\"bqgvgovpbbtte\",\"endpoints\":[{\"domainName\":\"oknssqyzqedikdf\"},{\"domainName\":\"db\"},{\"domainName\":\"qmrjg\"},{\"domainName\":\"ihfqlggwfiwzc\"}]},{\"category\":\"mjpb\",\"endpoints\":[{\"domainName\":\"phmgtvljvrcmyfq\"},{\"domainName\":\"pgxh\"},{\"domainName\":\"pomyqwcabvnuile\"},{\"domainName\":\"yaswlpaugmr\"}]}],\"hybridAksClustersAssociatedIds\":[\"lrxw\",\"oauk\",\"fkvcisi\",\"moaedsxj\"],\"interfaceName\":\"ive\",\"provisioningState\":\"Provisioning\",\"virtualMachinesAssociatedIds\":[\"eewxeiqbpsmg\"]},\"location\":\"guamlj\",\"tags\":{\"ewgnxkympqanxrj\":\"gmsplzgaufcshhv\",\"bta\":\"ixt\",\"lhkgmnsghp\":\"ypnyghshxc\"},\"id\":\"ycphdrwjjkhvyo\",\"name\":\"ac\",\"type\":\"u\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetworkCloudManager manager = NetworkCloudManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<CloudServicesNetwork> response
            = manager.cloudServicesNetworks().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("guamlj", response.iterator().next().location());
        Assertions.assertEquals("gmsplzgaufcshhv", response.iterator().next().tags().get("ewgnxkympqanxrj"));
        Assertions.assertEquals("nabaobnslujd", response.iterator().next().extendedLocation().name());
        Assertions.assertEquals("ltymkmvguihywart", response.iterator().next().extendedLocation().type());
        Assertions.assertEquals("kixkykxdssjpemm",
            response.iterator().next().additionalEgressEndpoints().get(0).category());
        Assertions.assertEquals("fxhikkflrmymyi",
            response.iterator().next().additionalEgressEndpoints().get(0).endpoints().get(0).domainName());
        Assertions.assertEquals(CloudServicesNetworkEnableDefaultEgressEndpoints.TRUE,
            response.iterator().next().enableDefaultEgressEndpoints());
    }
}
