// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkcloud.models.BfdEnabled;
import com.azure.resourcemanager.networkcloud.models.IpAddressPool;
import com.azure.resourcemanager.networkcloud.models.L2ServiceLoadBalancerConfiguration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class L2ServiceLoadBalancerConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        L2ServiceLoadBalancerConfiguration model = BinaryData.fromString(
            "{\"ipAddressPools\":[{\"addresses\":[\"aoyzkoow\"],\"autoAssign\":\"False\",\"name\":\"nguxawqaldsy\",\"onlyUseHostIps\":\"False\"}]}")
            .toObject(L2ServiceLoadBalancerConfiguration.class);
        Assertions.assertEquals("aoyzkoow", model.ipAddressPools().get(0).addresses().get(0));
        Assertions.assertEquals(BfdEnabled.FALSE, model.ipAddressPools().get(0).autoAssign());
        Assertions.assertEquals("nguxawqaldsy", model.ipAddressPools().get(0).name());
        Assertions.assertEquals(BfdEnabled.FALSE, model.ipAddressPools().get(0).onlyUseHostIps());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        L2ServiceLoadBalancerConfiguration model = new L2ServiceLoadBalancerConfiguration()
            .withIpAddressPools(Arrays.asList(new IpAddressPool().withAddresses(Arrays.asList("aoyzkoow"))
                .withAutoAssign(BfdEnabled.FALSE)
                .withName("nguxawqaldsy")
                .withOnlyUseHostIps(BfdEnabled.FALSE)));
        model = BinaryData.fromObject(model).toObject(L2ServiceLoadBalancerConfiguration.class);
        Assertions.assertEquals("aoyzkoow", model.ipAddressPools().get(0).addresses().get(0));
        Assertions.assertEquals(BfdEnabled.FALSE, model.ipAddressPools().get(0).autoAssign());
        Assertions.assertEquals("nguxawqaldsy", model.ipAddressPools().get(0).name());
        Assertions.assertEquals(BfdEnabled.FALSE, model.ipAddressPools().get(0).onlyUseHostIps());
    }
}
