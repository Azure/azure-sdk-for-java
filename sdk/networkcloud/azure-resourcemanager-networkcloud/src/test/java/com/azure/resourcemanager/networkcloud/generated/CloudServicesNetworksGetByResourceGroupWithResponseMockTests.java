// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.networkcloud.NetworkCloudManager;
import com.azure.resourcemanager.networkcloud.models.CloudServicesNetwork;
import com.azure.resourcemanager.networkcloud.models.CloudServicesNetworkEnableDefaultEgressEndpoints;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudServicesNetworksGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"etag\":\"oj\",\"extendedLocation\":{\"name\":\"cxzrzdcgdzben\",\"type\":\"ibcawetzqddtjw\"},\"properties\":{\"additionalEgressEndpoints\":[{\"category\":\"zn\",\"endpoints\":[{\"domainName\":\"tuatmzwcj\"},{\"domainName\":\"nc\"},{\"domainName\":\"tjzmi\"},{\"domainName\":\"vgbgatzuuvbxng\"}]}],\"associatedResourceIds\":[\"wggahttzlswvaj\",\"fu\"],\"clusterId\":\"x\",\"detailedStatus\":\"Error\",\"detailedStatusMessage\":\"asunwqrjzfrgq\",\"enableDefaultEgressEndpoints\":\"True\",\"enabledEgressEndpoints\":[{\"category\":\"mbuocnjrohmbp\",\"endpoints\":[{\"domainName\":\"yx\"},{\"domainName\":\"meblyd\"},{\"domainName\":\"vkfkmr\"},{\"domainName\":\"cxneh\"}]},{\"category\":\"sm\",\"endpoints\":[{\"domainName\":\"dlfp\"},{\"domainName\":\"apucygvo\"},{\"domainName\":\"vyuns\"},{\"domainName\":\"xlghieegj\"}]},{\"category\":\"gvvpasek\",\"endpoints\":[{\"domainName\":\"buxantuyg\"},{\"domainName\":\"hgaqipirpiwrq\"},{\"domainName\":\"fulopmjnlexwhcb\"}]},{\"category\":\"pibkephuu\",\"endpoints\":[{\"domainName\":\"rctat\"},{\"domainName\":\"yintqpbrlcy\"},{\"domainName\":\"duczkgof\"}]}],\"hybridAksClustersAssociatedIds\":[\"srucvcrrpcjtt\",\"st\"],\"interfaceName\":\"eaqnrmvvfkoxm\",\"provisioningState\":\"Failed\",\"virtualMachinesAssociatedIds\":[\"uidvrmazlpdwwex\",\"mzvlazipbh\",\"wvqsgny\"]},\"location\":\"uzivensrpmeyyvp\",\"tags\":{\"ksrf\":\"tlbijpzg\"},\"id\":\"fvolmknbnxwcd\",\"name\":\"mmpvf\",\"type\":\"awz\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetworkCloudManager manager = NetworkCloudManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        CloudServicesNetwork response = manager.cloudServicesNetworks()
            .getByResourceGroupWithResponse("fiqwoy", "qvapcohhoucq", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("uzivensrpmeyyvp", response.location());
        Assertions.assertEquals("tlbijpzg", response.tags().get("ksrf"));
        Assertions.assertEquals("cxzrzdcgdzben", response.extendedLocation().name());
        Assertions.assertEquals("ibcawetzqddtjw", response.extendedLocation().type());
        Assertions.assertEquals("zn", response.additionalEgressEndpoints().get(0).category());
        Assertions.assertEquals("tuatmzwcj",
            response.additionalEgressEndpoints().get(0).endpoints().get(0).domainName());
        Assertions.assertEquals(CloudServicesNetworkEnableDefaultEgressEndpoints.TRUE,
            response.enableDefaultEgressEndpoints());
    }
}
