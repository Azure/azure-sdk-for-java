// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.networkcloud.NetworkCloudManager;
import com.azure.resourcemanager.networkcloud.models.CloudServicesNetwork;
import com.azure.resourcemanager.networkcloud.models.CloudServicesNetworkEnableDefaultEgressEndpoints;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudServicesNetworksGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"extendedLocation\":{\"name\":\"j\",\"type\":\"bajbuscgduusi\"},\"properties\":{\"additionalEgressEndpoints\":[{\"category\":\"lev\",\"endpoints\":[{\"domainName\":\"clujyx\"},{\"domainName\":\"yxlzgs\"},{\"domainName\":\"gkzz\"},{\"domainName\":\"taf\"}]},{\"category\":\"bzf\",\"endpoints\":[{\"domainName\":\"vwmbjlzqsczpg\"},{\"domainName\":\"dwnapf\"},{\"domainName\":\"qwowftptnuw\"},{\"domainName\":\"tkschgcgqyhl\"}]},{\"category\":\"seyqrhvyeldotjv\",\"endpoints\":[{\"domainName\":\"wiswskukjtasbvw\"},{\"domainName\":\"spkxkdt\"},{\"domainName\":\"fkndl\"},{\"domainName\":\"vtwknvgmmbugt\"}]}],\"associatedResourceIds\":[\"tmqa\",\"kueatgroeshoy\",\"zcbyfq\"],\"clusterId\":\"faoytehqpuv\",\"detailedStatus\":\"Provisioning\",\"detailedStatusMessage\":\"mtdwcky\",\"enableDefaultEgressEndpoints\":\"False\",\"enabledEgressEndpoints\":[{\"category\":\"n\",\"endpoints\":[{\"domainName\":\"ljdjuskbrreqy\"},{\"domainName\":\"kceysfaqegplw\"},{\"domainName\":\"ysh\"}]}],\"hybridAksClustersAssociatedIds\":[\"kvb\"],\"interfaceName\":\"kqusybwptda\",\"provisioningState\":\"Provisioning\",\"virtualMachinesAssociatedIds\":[\"lf\"]},\"location\":\"ymtpo\",\"tags\":{\"r\":\"naz\",\"qalsxkd\":\"hzr\",\"vessm\":\"wqapfgsdp\",\"dqq\":\"hhkuuip\"},\"id\":\"tekva\",\"name\":\"blhtjq\",\"type\":\"qyv\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetworkCloudManager manager = NetworkCloudManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        CloudServicesNetwork response = manager.cloudServicesNetworks()
            .getByResourceGroupWithResponse("vjuqdbrxmrgchb", "pxkiyf", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ymtpo", response.location());
        Assertions.assertEquals("naz", response.tags().get("r"));
        Assertions.assertEquals("j", response.extendedLocation().name());
        Assertions.assertEquals("bajbuscgduusi", response.extendedLocation().type());
        Assertions.assertEquals("lev", response.additionalEgressEndpoints().get(0).category());
        Assertions.assertEquals("clujyx", response.additionalEgressEndpoints().get(0).endpoints().get(0).domainName());
        Assertions.assertEquals(CloudServicesNetworkEnableDefaultEgressEndpoints.FALSE,
            response.enableDefaultEgressEndpoints());
    }
}
