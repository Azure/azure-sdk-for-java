// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkcloud.models.ClusterCapacity;
import org.junit.jupiter.api.Assertions;

public final class ClusterCapacityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterCapacity model =
            BinaryData
                .fromString(
                    "{\"availableApplianceStorageGB\":2265051781071677482,\"availableCoreCount\":8889699776463775315,\"availableHostStorageGB\":2977828170317390344,\"availableMemoryGB\":4198137703849285757,\"totalApplianceStorageGB\":4679855700844852095,\"totalCoreCount\":5016929626022013570,\"totalHostStorageGB\":5088500223485653746,\"totalMemoryGB\":312377036322415034}")
                .toObject(ClusterCapacity.class);
        Assertions.assertEquals(2265051781071677482L, model.availableApplianceStorageGB());
        Assertions.assertEquals(8889699776463775315L, model.availableCoreCount());
        Assertions.assertEquals(2977828170317390344L, model.availableHostStorageGB());
        Assertions.assertEquals(4198137703849285757L, model.availableMemoryGB());
        Assertions.assertEquals(4679855700844852095L, model.totalApplianceStorageGB());
        Assertions.assertEquals(5016929626022013570L, model.totalCoreCount());
        Assertions.assertEquals(5088500223485653746L, model.totalHostStorageGB());
        Assertions.assertEquals(312377036322415034L, model.totalMemoryGB());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterCapacity model =
            new ClusterCapacity()
                .withAvailableApplianceStorageGB(2265051781071677482L)
                .withAvailableCoreCount(8889699776463775315L)
                .withAvailableHostStorageGB(2977828170317390344L)
                .withAvailableMemoryGB(4198137703849285757L)
                .withTotalApplianceStorageGB(4679855700844852095L)
                .withTotalCoreCount(5016929626022013570L)
                .withTotalHostStorageGB(5088500223485653746L)
                .withTotalMemoryGB(312377036322415034L);
        model = BinaryData.fromObject(model).toObject(ClusterCapacity.class);
        Assertions.assertEquals(2265051781071677482L, model.availableApplianceStorageGB());
        Assertions.assertEquals(8889699776463775315L, model.availableCoreCount());
        Assertions.assertEquals(2977828170317390344L, model.availableHostStorageGB());
        Assertions.assertEquals(4198137703849285757L, model.availableMemoryGB());
        Assertions.assertEquals(4679855700844852095L, model.totalApplianceStorageGB());
        Assertions.assertEquals(5016929626022013570L, model.totalCoreCount());
        Assertions.assertEquals(5088500223485653746L, model.totalHostStorageGB());
        Assertions.assertEquals(312377036322415034L, model.totalMemoryGB());
    }
}
