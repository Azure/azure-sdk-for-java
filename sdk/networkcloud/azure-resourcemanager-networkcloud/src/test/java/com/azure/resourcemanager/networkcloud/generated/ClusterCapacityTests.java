// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkcloud.models.ClusterCapacity;
import org.junit.jupiter.api.Assertions;

public final class ClusterCapacityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterCapacity model = BinaryData.fromString(
            "{\"availableApplianceStorageGB\":1876601356819705966,\"availableCoreCount\":809198374859565892,\"availableHostStorageGB\":8169204764307144926,\"availableMemoryGB\":7611364538592951456,\"totalApplianceStorageGB\":85714511864404008,\"totalCoreCount\":6037040030407661019,\"totalHostStorageGB\":1595532838454650942,\"totalMemoryGB\":4099465487145595782}")
            .toObject(ClusterCapacity.class);
        Assertions.assertEquals(1876601356819705966L, model.availableApplianceStorageGB());
        Assertions.assertEquals(809198374859565892L, model.availableCoreCount());
        Assertions.assertEquals(8169204764307144926L, model.availableHostStorageGB());
        Assertions.assertEquals(7611364538592951456L, model.availableMemoryGB());
        Assertions.assertEquals(85714511864404008L, model.totalApplianceStorageGB());
        Assertions.assertEquals(6037040030407661019L, model.totalCoreCount());
        Assertions.assertEquals(1595532838454650942L, model.totalHostStorageGB());
        Assertions.assertEquals(4099465487145595782L, model.totalMemoryGB());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterCapacity model = new ClusterCapacity().withAvailableApplianceStorageGB(1876601356819705966L)
            .withAvailableCoreCount(809198374859565892L)
            .withAvailableHostStorageGB(8169204764307144926L)
            .withAvailableMemoryGB(7611364538592951456L)
            .withTotalApplianceStorageGB(85714511864404008L)
            .withTotalCoreCount(6037040030407661019L)
            .withTotalHostStorageGB(1595532838454650942L)
            .withTotalMemoryGB(4099465487145595782L);
        model = BinaryData.fromObject(model).toObject(ClusterCapacity.class);
        Assertions.assertEquals(1876601356819705966L, model.availableApplianceStorageGB());
        Assertions.assertEquals(809198374859565892L, model.availableCoreCount());
        Assertions.assertEquals(8169204764307144926L, model.availableHostStorageGB());
        Assertions.assertEquals(7611364538592951456L, model.availableMemoryGB());
        Assertions.assertEquals(85714511864404008L, model.totalApplianceStorageGB());
        Assertions.assertEquals(6037040030407661019L, model.totalCoreCount());
        Assertions.assertEquals(1595532838454650942L, model.totalHostStorageGB());
        Assertions.assertEquals(4099465487145595782L, model.totalMemoryGB());
    }
}
