// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkcloud.models.ClusterCapacity;
import org.junit.jupiter.api.Assertions;

public final class ClusterCapacityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterCapacity model = BinaryData.fromString(
            "{\"availableApplianceStorageGB\":2308997283285722741,\"availableCoreCount\":5565068943906276094,\"availableHostStorageGB\":1160187571716366266,\"availableMemoryGB\":6257621363214543247,\"totalApplianceStorageGB\":3311442512942014453,\"totalCoreCount\":735752608656011593,\"totalHostStorageGB\":8335274886610479577,\"totalMemoryGB\":8200965629156318432}")
            .toObject(ClusterCapacity.class);
        Assertions.assertEquals(2308997283285722741L, model.availableApplianceStorageGB());
        Assertions.assertEquals(5565068943906276094L, model.availableCoreCount());
        Assertions.assertEquals(1160187571716366266L, model.availableHostStorageGB());
        Assertions.assertEquals(6257621363214543247L, model.availableMemoryGB());
        Assertions.assertEquals(3311442512942014453L, model.totalApplianceStorageGB());
        Assertions.assertEquals(735752608656011593L, model.totalCoreCount());
        Assertions.assertEquals(8335274886610479577L, model.totalHostStorageGB());
        Assertions.assertEquals(8200965629156318432L, model.totalMemoryGB());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterCapacity model = new ClusterCapacity().withAvailableApplianceStorageGB(2308997283285722741L)
            .withAvailableCoreCount(5565068943906276094L)
            .withAvailableHostStorageGB(1160187571716366266L)
            .withAvailableMemoryGB(6257621363214543247L)
            .withTotalApplianceStorageGB(3311442512942014453L)
            .withTotalCoreCount(735752608656011593L)
            .withTotalHostStorageGB(8335274886610479577L)
            .withTotalMemoryGB(8200965629156318432L);
        model = BinaryData.fromObject(model).toObject(ClusterCapacity.class);
        Assertions.assertEquals(2308997283285722741L, model.availableApplianceStorageGB());
        Assertions.assertEquals(5565068943906276094L, model.availableCoreCount());
        Assertions.assertEquals(1160187571716366266L, model.availableHostStorageGB());
        Assertions.assertEquals(6257621363214543247L, model.availableMemoryGB());
        Assertions.assertEquals(3311442512942014453L, model.totalApplianceStorageGB());
        Assertions.assertEquals(735752608656011593L, model.totalCoreCount());
        Assertions.assertEquals(8335274886610479577L, model.totalHostStorageGB());
        Assertions.assertEquals(8200965629156318432L, model.totalMemoryGB());
    }
}
