// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.networkcloud.NetworkCloudManager;
import com.azure.resourcemanager.networkcloud.models.ClusterManager;
import com.azure.resourcemanager.networkcloud.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClusterManagersGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"etag\":\"xhzzyse\",\"identity\":{\"principalId\":\"3cd6633f-0d03-4871-9183-6d2a8ebda498\",\"tenantId\":\"c6f5f286-56ad-447c-b9c2-ae339d565613\",\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{\"ryvei\":{\"principalId\":\"927a39f1-0442-4117-bc2f-fa2893ea774a\",\"clientId\":\"5aede40a-bd3c-43e4-9888-4f5329664eeb\"},\"sk\":{\"principalId\":\"00b5b644-4c73-40e1-88ad-7d7648a9397f\",\"clientId\":\"277bd1a3-0c6d-4011-b04e-5ec7f5f0f996\"}}},\"properties\":{\"analyticsWorkspaceId\":\"zatvfuzka\",\"availabilityZones\":[\"vvruxwi\",\"syeipqd\",\"mjtgrqg\",\"gkkileplkcsmkn\"],\"clusterVersions\":[{\"supportExpiryDate\":\"baedorvvmqfl\",\"targetClusterVersion\":\"gbdg\"},{\"supportExpiryDate\":\"mgxdgdhpabgd\",\"targetClusterVersion\":\"jddvjsaqw\"},{\"supportExpiryDate\":\"mmwllc\",\"targetClusterVersion\":\"srsxaptefh\"},{\"supportExpiryDate\":\"cgjokjljnhvlq\",\"targetClusterVersion\":\"ek\"}],\"detailedStatus\":\"Error\",\"detailedStatusMessage\":\"snbksdqhj\",\"fabricControllerId\":\"yklxe\",\"managedResourceGroupConfiguration\":{\"location\":\"hhus\",\"name\":\"poq\"},\"managerExtendedLocation\":{\"name\":\"vnwqjwgo\",\"type\":\"nlejjjkxybwf\"},\"provisioningState\":\"Failed\",\"vmSize\":\"bztensvkzykjtj\"},\"location\":\"sxfwushcdp\",\"tags\":{\"mgjfbpkuwxeoio\":\"nq\"},\"id\":\"fiz\",\"name\":\"av\",\"type\":\"jzwfb\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetworkCloudManager manager = NetworkCloudManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ClusterManager response = manager.clusterManagers()
            .getByResourceGroupWithResponse("eh", "a", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("sxfwushcdp", response.location());
        Assertions.assertEquals("nq", response.tags().get("mgjfbpkuwxeoio"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, response.identity().type());
        Assertions.assertEquals("zatvfuzka", response.analyticsWorkspaceId());
        Assertions.assertEquals("vvruxwi", response.availabilityZones().get(0));
        Assertions.assertEquals("yklxe", response.fabricControllerId());
        Assertions.assertEquals("hhus", response.managedResourceGroupConfiguration().location());
        Assertions.assertEquals("poq", response.managedResourceGroupConfiguration().name());
        Assertions.assertEquals("bztensvkzykjtj", response.vmSize());
    }
}
