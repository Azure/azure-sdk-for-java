// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkcloud.models.IdentitySelector;
import com.azure.resourcemanager.networkcloud.models.ManagedServiceIdentitySelectorType;
import com.azure.resourcemanager.networkcloud.models.SecretArchiveSettings;
import org.junit.jupiter.api.Assertions;

public final class SecretArchiveSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SecretArchiveSettings model = BinaryData.fromString(
            "{\"associatedIdentity\":{\"identityType\":\"UserAssignedIdentity\",\"userAssignedIdentityResourceId\":\"ksgplsa\"},\"vaultUri\":\"ynfs\"}")
            .toObject(SecretArchiveSettings.class);
        Assertions.assertEquals(ManagedServiceIdentitySelectorType.USER_ASSIGNED_IDENTITY,
            model.associatedIdentity().identityType());
        Assertions.assertEquals("ksgplsa", model.associatedIdentity().userAssignedIdentityResourceId());
        Assertions.assertEquals("ynfs", model.vaultUri());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SecretArchiveSettings model
            = new SecretArchiveSettings()
                .withAssociatedIdentity(
                    new IdentitySelector().withIdentityType(ManagedServiceIdentitySelectorType.USER_ASSIGNED_IDENTITY)
                        .withUserAssignedIdentityResourceId("ksgplsa"))
                .withVaultUri("ynfs");
        model = BinaryData.fromObject(model).toObject(SecretArchiveSettings.class);
        Assertions.assertEquals(ManagedServiceIdentitySelectorType.USER_ASSIGNED_IDENTITY,
            model.associatedIdentity().identityType());
        Assertions.assertEquals("ksgplsa", model.associatedIdentity().userAssignedIdentityResourceId());
        Assertions.assertEquals("ynfs", model.vaultUri());
    }
}
