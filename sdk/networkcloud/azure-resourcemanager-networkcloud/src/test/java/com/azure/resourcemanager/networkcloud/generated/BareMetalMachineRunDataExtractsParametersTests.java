// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkcloud.models.BareMetalMachineCommandSpecification;
import com.azure.resourcemanager.networkcloud.models.BareMetalMachineRunDataExtractsParameters;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BareMetalMachineRunDataExtractsParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BareMetalMachineRunDataExtractsParameters model =
            BinaryData
                .fromString(
                    "{\"commands\":[{\"arguments\":[\"eqw\",\"gp\"],\"command\":\"bu\"},{\"arguments\":[\"yxeb\",\"ybpmzznrtffyaq\",\"tmhheioqa\"],\"command\":\"hvseufuqyrx\"},{\"arguments\":[\"cgq\",\"sismjqfrddga\",\"quhiosrsjuivf\"],\"command\":\"disyirnxz\"},{\"arguments\":[\"exrxzbujrtrhq\",\"wrevkhgnlnzon\",\"lrpiqywnc\"],\"command\":\"jtszcof\"}],\"limitTimeSeconds\":8408869954916938247}")
                .toObject(BareMetalMachineRunDataExtractsParameters.class);
        Assertions.assertEquals("eqw", model.commands().get(0).arguments().get(0));
        Assertions.assertEquals("bu", model.commands().get(0).command());
        Assertions.assertEquals(8408869954916938247L, model.limitTimeSeconds());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BareMetalMachineRunDataExtractsParameters model =
            new BareMetalMachineRunDataExtractsParameters()
                .withCommands(
                    Arrays
                        .asList(
                            new BareMetalMachineCommandSpecification()
                                .withArguments(Arrays.asList("eqw", "gp"))
                                .withCommand("bu"),
                            new BareMetalMachineCommandSpecification()
                                .withArguments(Arrays.asList("yxeb", "ybpmzznrtffyaq", "tmhheioqa"))
                                .withCommand("hvseufuqyrx"),
                            new BareMetalMachineCommandSpecification()
                                .withArguments(Arrays.asList("cgq", "sismjqfrddga", "quhiosrsjuivf"))
                                .withCommand("disyirnxz"),
                            new BareMetalMachineCommandSpecification()
                                .withArguments(Arrays.asList("exrxzbujrtrhq", "wrevkhgnlnzon", "lrpiqywnc"))
                                .withCommand("jtszcof")))
                .withLimitTimeSeconds(8408869954916938247L);
        model = BinaryData.fromObject(model).toObject(BareMetalMachineRunDataExtractsParameters.class);
        Assertions.assertEquals("eqw", model.commands().get(0).arguments().get(0));
        Assertions.assertEquals("bu", model.commands().get(0).command());
        Assertions.assertEquals(8408869954916938247L, model.limitTimeSeconds());
    }
}
