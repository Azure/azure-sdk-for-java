// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkcloud.models.BareMetalMachineCommandSpecification;
import com.azure.resourcemanager.networkcloud.models.BareMetalMachineRunDataExtractsParameters;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BareMetalMachineRunDataExtractsParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BareMetalMachineRunDataExtractsParameters model = BinaryData.fromString(
            "{\"commands\":[{\"arguments\":[\"zg\",\"gouwtlmj\"],\"command\":\"yuojqtobaxk\"},{\"arguments\":[\"tu\",\"lbfjkwr\",\"snkq\"],\"command\":\"hsyrqunj\"},{\"arguments\":[\"enx\",\"ulkpakd\"],\"command\":\"ifmjnn\"},{\"arguments\":[\"qabpxuckpggqow\",\"yirdhlisngwflqq\",\"pizruwnpqxpxiw\"],\"command\":\"cng\"}],\"limitTimeSeconds\":4191063095737064569}")
            .toObject(BareMetalMachineRunDataExtractsParameters.class);
        Assertions.assertEquals("zg", model.commands().get(0).arguments().get(0));
        Assertions.assertEquals("yuojqtobaxk", model.commands().get(0).command());
        Assertions.assertEquals(4191063095737064569L, model.limitTimeSeconds());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BareMetalMachineRunDataExtractsParameters model
            = new BareMetalMachineRunDataExtractsParameters().withCommands(Arrays.asList(
                new BareMetalMachineCommandSpecification().withArguments(Arrays.asList("zg", "gouwtlmj"))
                    .withCommand("yuojqtobaxk"),
                new BareMetalMachineCommandSpecification().withArguments(Arrays.asList("tu", "lbfjkwr", "snkq"))
                    .withCommand("hsyrqunj"),
                new BareMetalMachineCommandSpecification().withArguments(Arrays.asList("enx", "ulkpakd"))
                    .withCommand("ifmjnn"),
                new BareMetalMachineCommandSpecification()
                    .withArguments(Arrays.asList("qabpxuckpggqow", "yirdhlisngwflqq", "pizruwnpqxpxiw"))
                    .withCommand("cng")))
                .withLimitTimeSeconds(4191063095737064569L);
        model = BinaryData.fromObject(model).toObject(BareMetalMachineRunDataExtractsParameters.class);
        Assertions.assertEquals("zg", model.commands().get(0).arguments().get(0));
        Assertions.assertEquals("yuojqtobaxk", model.commands().get(0).command());
        Assertions.assertEquals(4191063095737064569L, model.limitTimeSeconds());
    }
}
