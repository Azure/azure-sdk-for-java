// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.networkcloud.NetworkCloudManager;
import com.azure.resourcemanager.networkcloud.models.HybridAksPluginType;
import com.azure.resourcemanager.networkcloud.models.TrunkedNetwork;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class TrunkedNetworksListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"extendedLocation\":{\"name\":\"qhnmhk\",\"type\":\"ezsdsuxheq\"},\"properties\":{\"associatedResourceIds\":[\"ruxspinymmqgwok\",\"ikpazf\",\"mjxuvjipfdvhaxd\"],\"clusterId\":\"zaehpphthd\",\"detailedStatus\":\"Provisioning\",\"detailedStatusMessage\":\"etatlakf\",\"hybridAksClustersAssociatedIds\":[\"xwgiks\",\"bvtooxrpogwp\",\"chgjtnhtukfacih\",\"bfntumeezbxvq\"],\"hybridAksPluginType\":\"SRIOV\",\"interfaceName\":\"vwcga\",\"isolationDomainIds\":[\"omtmjzwxuqgov\",\"xpwwzt\"],\"provisioningState\":\"Canceled\",\"virtualMachinesAssociatedIds\":[\"htgfred\",\"ls\",\"grllcc\",\"aovjow\"],\"vlans\":[2662581133111301135,6125335634113559684]},\"location\":\"comlyotgkwsx\",\"tags\":{\"genmvceb\":\"qor\",\"dcqjkedwqurc\":\"eetqujxcxxq\"},\"id\":\"ojmrvvxwjongzse\",\"name\":\"qqrsil\",\"type\":\"chskxxka\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetworkCloudManager manager = NetworkCloudManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<TrunkedNetwork> response
            = manager.trunkedNetworks().listByResourceGroup("pqht", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("comlyotgkwsx", response.iterator().next().location());
        Assertions.assertEquals("qor", response.iterator().next().tags().get("genmvceb"));
        Assertions.assertEquals("qhnmhk", response.iterator().next().extendedLocation().name());
        Assertions.assertEquals("ezsdsuxheq", response.iterator().next().extendedLocation().type());
        Assertions.assertEquals(HybridAksPluginType.SRIOV, response.iterator().next().hybridAksPluginType());
        Assertions.assertEquals("vwcga", response.iterator().next().interfaceName());
        Assertions.assertEquals("omtmjzwxuqgov", response.iterator().next().isolationDomainIds().get(0));
        Assertions.assertEquals(2662581133111301135L, response.iterator().next().vlans().get(0));
    }
}
