// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkcloud.fluent.models.TrunkedNetworkInner;
import com.azure.resourcemanager.networkcloud.models.ExtendedLocation;
import com.azure.resourcemanager.networkcloud.models.HybridAksPluginType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class TrunkedNetworkInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TrunkedNetworkInner model =
            BinaryData
                .fromString(
                    "{\"extendedLocation\":{\"name\":\"ddyvvjskgfmo\",\"type\":\"wa\"},\"properties\":{\"associatedResourceIds\":[\"gat\",\"eaahhvjhhn\",\"kzyb\",\"jjidjk\"],\"clusterId\":\"xkyxvxevblbj\",\"detailedStatus\":\"Provisioning\",\"detailedStatusMessage\":\"jlageu\",\"hybridAksClustersAssociatedIds\":[\"xuns\",\"jbnkpp\",\"ynenlsvxeizz\",\"wklnsrmffeyc\"],\"hybridAksPluginType\":\"OSDevice\",\"interfaceName\":\"piymerteea\",\"isolationDomainIds\":[\"xqiekkkzddrtk\"],\"provisioningState\":\"Succeeded\",\"virtualMachinesAssociatedIds\":[\"mxvavrefdee\",\"vecuijpx\"],\"vlans\":[921543828288140521]},\"location\":\"prtujwsawdd\",\"tags\":{\"itvtzeexavo\":\"abxvi\",\"dmdqb\":\"tfgle\",\"cbslhhx\":\"pypqtgsfj\"},\"id\":\"db\",\"name\":\"vodhtn\",\"type\":\"irudh\"}")
                .toObject(TrunkedNetworkInner.class);
        Assertions.assertEquals("prtujwsawdd", model.location());
        Assertions.assertEquals("abxvi", model.tags().get("itvtzeexavo"));
        Assertions.assertEquals("ddyvvjskgfmo", model.extendedLocation().name());
        Assertions.assertEquals("wa", model.extendedLocation().type());
        Assertions.assertEquals(HybridAksPluginType.OSDEVICE, model.hybridAksPluginType());
        Assertions.assertEquals("piymerteea", model.interfaceName());
        Assertions.assertEquals("xqiekkkzddrtk", model.isolationDomainIds().get(0));
        Assertions.assertEquals(921543828288140521L, model.vlans().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TrunkedNetworkInner model =
            new TrunkedNetworkInner()
                .withLocation("prtujwsawdd")
                .withTags(mapOf("itvtzeexavo", "abxvi", "dmdqb", "tfgle", "cbslhhx", "pypqtgsfj"))
                .withExtendedLocation(new ExtendedLocation().withName("ddyvvjskgfmo").withType("wa"))
                .withHybridAksPluginType(HybridAksPluginType.OSDEVICE)
                .withInterfaceName("piymerteea")
                .withIsolationDomainIds(Arrays.asList("xqiekkkzddrtk"))
                .withVlans(Arrays.asList(921543828288140521L));
        model = BinaryData.fromObject(model).toObject(TrunkedNetworkInner.class);
        Assertions.assertEquals("prtujwsawdd", model.location());
        Assertions.assertEquals("abxvi", model.tags().get("itvtzeexavo"));
        Assertions.assertEquals("ddyvvjskgfmo", model.extendedLocation().name());
        Assertions.assertEquals("wa", model.extendedLocation().type());
        Assertions.assertEquals(HybridAksPluginType.OSDEVICE, model.hybridAksPluginType());
        Assertions.assertEquals("piymerteea", model.interfaceName());
        Assertions.assertEquals("xqiekkkzddrtk", model.isolationDomainIds().get(0));
        Assertions.assertEquals(921543828288140521L, model.vlans().get(0));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
