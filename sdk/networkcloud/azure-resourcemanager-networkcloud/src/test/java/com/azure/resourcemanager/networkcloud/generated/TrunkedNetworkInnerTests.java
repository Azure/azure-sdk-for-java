// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkcloud.fluent.models.TrunkedNetworkInner;
import com.azure.resourcemanager.networkcloud.models.ExtendedLocation;
import com.azure.resourcemanager.networkcloud.models.HybridAksPluginType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class TrunkedNetworkInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TrunkedNetworkInner model =
            BinaryData
                .fromString(
                    "{\"extendedLocation\":{\"name\":\"krsgsgb\",\"type\":\"huzqgn\"},\"properties\":{\"clusterId\":\"gkynscliqh\",\"detailedStatus\":\"Available\",\"detailedStatusMessage\":\"nk\",\"hybridAksClustersAssociatedIds\":[\"kubotppnvdxz\",\"hihfrbbcevqagtlt\",\"hlfkqojpy\"],\"hybridAksPluginType\":\"SRIOV\",\"interfaceName\":\"rdcnifmzzsdy\",\"isolationDomainIds\":[\"rnysux\"],\"provisioningState\":\"Provisioning\",\"virtualMachinesAssociatedIds\":[\"wgck\",\"ocxvdfffwafqr\",\"udaspavehh\",\"vkbunzozudh\"],\"vlans\":[9008191829096348596]},\"location\":\"oyxcdyuib\",\"tags\":{\"eoisrvhmgor\":\"dnbzydvfvfcjn\"},\"id\":\"fukiscvwmzhw\",\"name\":\"lefaxvxilcbtgn\",\"type\":\"nzeyqxtjj\"}")
                .toObject(TrunkedNetworkInner.class);
        Assertions.assertEquals("oyxcdyuib", model.location());
        Assertions.assertEquals("dnbzydvfvfcjn", model.tags().get("eoisrvhmgor"));
        Assertions.assertEquals("krsgsgb", model.extendedLocation().name());
        Assertions.assertEquals("huzqgn", model.extendedLocation().type());
        Assertions.assertEquals(HybridAksPluginType.SRIOV, model.hybridAksPluginType());
        Assertions.assertEquals("rdcnifmzzsdy", model.interfaceName());
        Assertions.assertEquals("rnysux", model.isolationDomainIds().get(0));
        Assertions.assertEquals(9008191829096348596L, model.vlans().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TrunkedNetworkInner model =
            new TrunkedNetworkInner()
                .withLocation("oyxcdyuib")
                .withTags(mapOf("eoisrvhmgor", "dnbzydvfvfcjn"))
                .withExtendedLocation(new ExtendedLocation().withName("krsgsgb").withType("huzqgn"))
                .withHybridAksPluginType(HybridAksPluginType.SRIOV)
                .withInterfaceName("rdcnifmzzsdy")
                .withIsolationDomainIds(Arrays.asList("rnysux"))
                .withVlans(Arrays.asList(9008191829096348596L));
        model = BinaryData.fromObject(model).toObject(TrunkedNetworkInner.class);
        Assertions.assertEquals("oyxcdyuib", model.location());
        Assertions.assertEquals("dnbzydvfvfcjn", model.tags().get("eoisrvhmgor"));
        Assertions.assertEquals("krsgsgb", model.extendedLocation().name());
        Assertions.assertEquals("huzqgn", model.extendedLocation().type());
        Assertions.assertEquals(HybridAksPluginType.SRIOV, model.hybridAksPluginType());
        Assertions.assertEquals("rdcnifmzzsdy", model.interfaceName());
        Assertions.assertEquals("rnysux", model.isolationDomainIds().get(0));
        Assertions.assertEquals(9008191829096348596L, model.vlans().get(0));
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
