// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkcloud.fluent.models.TrunkedNetworkInner;
import com.azure.resourcemanager.networkcloud.models.ExtendedLocation;
import com.azure.resourcemanager.networkcloud.models.HybridAksPluginType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class TrunkedNetworkInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TrunkedNetworkInner model = BinaryData.fromString(
            "{\"extendedLocation\":{\"name\":\"oajvgcxtxjcs\",\"type\":\"eafidltugsresm\"},\"properties\":{\"associatedResourceIds\":[\"jhoiftxfkfweg\",\"rhptilluc\",\"iqtgdqoh\",\"cwsldri\"],\"clusterId\":\"tpwb\",\"detailedStatus\":\"Provisioning\",\"detailedStatusMessage\":\"libph\",\"hybridAksClustersAssociatedIds\":[\"mizak\",\"kan\",\"jpdn\"],\"hybridAksPluginType\":\"SRIOV\",\"interfaceName\":\"joylh\",\"isolationDomainIds\":[\"muoyxprimr\",\"opteecj\",\"eislstvasylwx\",\"zaum\"],\"provisioningState\":\"Succeeded\",\"virtualMachinesAssociatedIds\":[\"guufuzboyjathwtz\",\"lbaemwmdxmeb\"],\"vlans\":[34566941819509688,519489935498937566]},\"location\":\"hlxvea\",\"tags\":{\"qcttadijaeukmrsi\":\"xnmwmqtibxyijddt\",\"eqw\":\"ekpndzaapmudq\"},\"id\":\"gp\",\"name\":\"bu\",\"type\":\"qwyxebeybpm\"}")
            .toObject(TrunkedNetworkInner.class);
        Assertions.assertEquals("hlxvea", model.location());
        Assertions.assertEquals("xnmwmqtibxyijddt", model.tags().get("qcttadijaeukmrsi"));
        Assertions.assertEquals("oajvgcxtxjcs", model.extendedLocation().name());
        Assertions.assertEquals("eafidltugsresm", model.extendedLocation().type());
        Assertions.assertEquals(HybridAksPluginType.SRIOV, model.hybridAksPluginType());
        Assertions.assertEquals("joylh", model.interfaceName());
        Assertions.assertEquals("muoyxprimr", model.isolationDomainIds().get(0));
        Assertions.assertEquals(34566941819509688L, model.vlans().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TrunkedNetworkInner model = new TrunkedNetworkInner().withLocation("hlxvea")
            .withTags(mapOf("qcttadijaeukmrsi", "xnmwmqtibxyijddt", "eqw", "ekpndzaapmudq"))
            .withExtendedLocation(new ExtendedLocation().withName("oajvgcxtxjcs").withType("eafidltugsresm"))
            .withHybridAksPluginType(HybridAksPluginType.SRIOV)
            .withInterfaceName("joylh")
            .withIsolationDomainIds(Arrays.asList("muoyxprimr", "opteecj", "eislstvasylwx", "zaum"))
            .withVlans(Arrays.asList(34566941819509688L, 519489935498937566L));
        model = BinaryData.fromObject(model).toObject(TrunkedNetworkInner.class);
        Assertions.assertEquals("hlxvea", model.location());
        Assertions.assertEquals("xnmwmqtibxyijddt", model.tags().get("qcttadijaeukmrsi"));
        Assertions.assertEquals("oajvgcxtxjcs", model.extendedLocation().name());
        Assertions.assertEquals("eafidltugsresm", model.extendedLocation().type());
        Assertions.assertEquals(HybridAksPluginType.SRIOV, model.hybridAksPluginType());
        Assertions.assertEquals("joylh", model.interfaceName());
        Assertions.assertEquals("muoyxprimr", model.isolationDomainIds().get(0));
        Assertions.assertEquals(34566941819509688L, model.vlans().get(0));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
