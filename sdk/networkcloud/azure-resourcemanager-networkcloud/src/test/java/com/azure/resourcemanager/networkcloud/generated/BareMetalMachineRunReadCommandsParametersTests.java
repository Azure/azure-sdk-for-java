// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkcloud.models.BareMetalMachineCommandSpecification;
import com.azure.resourcemanager.networkcloud.models.BareMetalMachineRunReadCommandsParameters;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BareMetalMachineRunReadCommandsParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BareMetalMachineRunReadCommandsParameters model = BinaryData.fromString(
            "{\"commands\":[{\"arguments\":[\"fcbahhp\",\"pofoi\"],\"command\":\"jwpfilkm\"},{\"arguments\":[\"olvdnd\",\"iauogphuartv\"],\"command\":\"iukyefchnmna\"},{\"arguments\":[\"xhk\",\"jqirwrw\"],\"command\":\"ooxf\"},{\"arguments\":[\"hx\",\"rsnewmozqvbubqma\"],\"command\":\"hsycxhxzgaz\"}],\"limitTimeSeconds\":323922336691891479}")
            .toObject(BareMetalMachineRunReadCommandsParameters.class);
        Assertions.assertEquals("fcbahhp", model.commands().get(0).arguments().get(0));
        Assertions.assertEquals("jwpfilkm", model.commands().get(0).command());
        Assertions.assertEquals(323922336691891479L, model.limitTimeSeconds());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BareMetalMachineRunReadCommandsParameters model
            = new BareMetalMachineRunReadCommandsParameters().withCommands(Arrays.asList(
                new BareMetalMachineCommandSpecification().withArguments(Arrays.asList("fcbahhp", "pofoi"))
                    .withCommand("jwpfilkm"),
                new BareMetalMachineCommandSpecification().withArguments(Arrays.asList("olvdnd", "iauogphuartv"))
                    .withCommand("iukyefchnmna"),
                new BareMetalMachineCommandSpecification().withArguments(Arrays.asList("xhk", "jqirwrw"))
                    .withCommand("ooxf"),
                new BareMetalMachineCommandSpecification().withArguments(Arrays.asList("hx", "rsnewmozqvbubqma"))
                    .withCommand("hsycxhxzgaz")))
                .withLimitTimeSeconds(323922336691891479L);
        model = BinaryData.fromObject(model).toObject(BareMetalMachineRunReadCommandsParameters.class);
        Assertions.assertEquals("fcbahhp", model.commands().get(0).arguments().get(0));
        Assertions.assertEquals("jwpfilkm", model.commands().get(0).command());
        Assertions.assertEquals(323922336691891479L, model.limitTimeSeconds());
    }
}
