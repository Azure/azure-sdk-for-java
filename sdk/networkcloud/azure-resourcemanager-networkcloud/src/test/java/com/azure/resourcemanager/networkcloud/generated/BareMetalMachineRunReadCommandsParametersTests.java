// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkcloud.models.BareMetalMachineCommandSpecification;
import com.azure.resourcemanager.networkcloud.models.BareMetalMachineRunReadCommandsParameters;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BareMetalMachineRunReadCommandsParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BareMetalMachineRunReadCommandsParameters model = BinaryData.fromString(
            "{\"commands\":[{\"arguments\":[\"gfgrwsdp\",\"ra\"],\"command\":\"zvzbglbyv\"},{\"arguments\":[\"ctbrxkjzwrgxffm\",\"hkwfbkgozxwop\",\"bydpizqaclnapxb\",\"yg\"],\"command\":\"ugjknf\"},{\"arguments\":[\"cttuxuu\",\"i\",\"flqo\",\"quvre\"],\"command\":\"mrnjh\"}],\"limitTimeSeconds\":4607580078285985289}")
            .toObject(BareMetalMachineRunReadCommandsParameters.class);
        Assertions.assertEquals("gfgrwsdp", model.commands().get(0).arguments().get(0));
        Assertions.assertEquals("zvzbglbyv", model.commands().get(0).command());
        Assertions.assertEquals(4607580078285985289L, model.limitTimeSeconds());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BareMetalMachineRunReadCommandsParameters model
            = new BareMetalMachineRunReadCommandsParameters().withCommands(Arrays.asList(
                new BareMetalMachineCommandSpecification().withArguments(Arrays.asList("gfgrwsdp", "ra"))
                    .withCommand("zvzbglbyv"),
                new BareMetalMachineCommandSpecification()
                    .withArguments(Arrays.asList("ctbrxkjzwrgxffm", "hkwfbkgozxwop", "bydpizqaclnapxb", "yg"))
                    .withCommand("ugjknf"),
                new BareMetalMachineCommandSpecification().withArguments(Arrays.asList("cttuxuu", "i", "flqo", "quvre"))
                    .withCommand("mrnjh")))
                .withLimitTimeSeconds(4607580078285985289L);
        model = BinaryData.fromObject(model).toObject(BareMetalMachineRunReadCommandsParameters.class);
        Assertions.assertEquals("gfgrwsdp", model.commands().get(0).arguments().get(0));
        Assertions.assertEquals("zvzbglbyv", model.commands().get(0).command());
        Assertions.assertEquals(4607580078285985289L, model.limitTimeSeconds());
    }
}
