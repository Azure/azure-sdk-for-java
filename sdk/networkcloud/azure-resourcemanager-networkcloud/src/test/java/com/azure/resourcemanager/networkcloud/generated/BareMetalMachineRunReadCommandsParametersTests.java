// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkcloud.models.BareMetalMachineCommandSpecification;
import com.azure.resourcemanager.networkcloud.models.BareMetalMachineRunReadCommandsParameters;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BareMetalMachineRunReadCommandsParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BareMetalMachineRunReadCommandsParameters model =
            BinaryData
                .fromString(
                    "{\"commands\":[{\"arguments\":[\"mldsehaohdj\",\"hflzokxco\"],\"command\":\"pelnjetag\"},{\"arguments\":[\"xo\"],\"command\":\"tft\"},{\"arguments\":[\"npbs\",\"vefloccsrmozihmi\",\"g\",\"wtxxpkyjcx\"],\"command\":\"jxgrytfmp\"},{\"arguments\":[\"ilrmcaykggnox\"],\"command\":\"ztrksxwpndf\"}],\"limitTimeSeconds\":4011710098447438719}")
                .toObject(BareMetalMachineRunReadCommandsParameters.class);
        Assertions.assertEquals("mldsehaohdj", model.commands().get(0).arguments().get(0));
        Assertions.assertEquals("pelnjetag", model.commands().get(0).command());
        Assertions.assertEquals(4011710098447438719L, model.limitTimeSeconds());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BareMetalMachineRunReadCommandsParameters model =
            new BareMetalMachineRunReadCommandsParameters()
                .withCommands(
                    Arrays
                        .asList(
                            new BareMetalMachineCommandSpecification()
                                .withArguments(Arrays.asList("mldsehaohdj", "hflzokxco"))
                                .withCommand("pelnjetag"),
                            new BareMetalMachineCommandSpecification()
                                .withArguments(Arrays.asList("xo"))
                                .withCommand("tft"),
                            new BareMetalMachineCommandSpecification()
                                .withArguments(Arrays.asList("npbs", "vefloccsrmozihmi", "g", "wtxxpkyjcx"))
                                .withCommand("jxgrytfmp"),
                            new BareMetalMachineCommandSpecification()
                                .withArguments(Arrays.asList("ilrmcaykggnox"))
                                .withCommand("ztrksxwpndf")))
                .withLimitTimeSeconds(4011710098447438719L);
        model = BinaryData.fromObject(model).toObject(BareMetalMachineRunReadCommandsParameters.class);
        Assertions.assertEquals("mldsehaohdj", model.commands().get(0).arguments().get(0));
        Assertions.assertEquals("pelnjetag", model.commands().get(0).command());
        Assertions.assertEquals(4011710098447438719L, model.limitTimeSeconds());
    }
}
