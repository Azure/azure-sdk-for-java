// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkcloud.fluent.models.L2NetworkInner;
import com.azure.resourcemanager.networkcloud.models.ExtendedLocation;
import com.azure.resourcemanager.networkcloud.models.HybridAksPluginType;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class L2NetworkInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        L2NetworkInner model =
            BinaryData
                .fromString(
                    "{\"extendedLocation\":{\"name\":\"zikhl\",\"type\":\"fjhdg\"},\"properties\":{\"associatedResourceIds\":[\"ebdunyg\",\"eqidbqfatpx\",\"lr\"],\"clusterId\":\"yjmoadsu\",\"detailedStatus\":\"Error\",\"detailedStatusMessage\":\"ywdmjsjqbjh\",\"hybridAksClustersAssociatedIds\":[\"xrwlyc\"],\"hybridAksPluginType\":\"DPDK\",\"interfaceName\":\"p\",\"l2IsolationDomainId\":\"xkgymareqnajxqu\",\"provisioningState\":\"Canceled\",\"virtualMachinesAssociatedIds\":[\"cubeddgssofw\",\"mzqa\",\"krmnjijpxacqqud\"]},\"location\":\"byxbaaabjy\",\"tags\":{\"evfdnwnwm\":\"ffimrzrtuzqogsex\",\"i\":\"wzsyyceuzs\",\"thzvaytdwkqbrqu\":\"judpfrxt\",\"xiilivpdtiirqt\":\"paxh\"},\"id\":\"qoaxoruzfgs\",\"name\":\"uyfxrxxleptramxj\",\"type\":\"zwl\"}")
                .toObject(L2NetworkInner.class);
        Assertions.assertEquals("byxbaaabjy", model.location());
        Assertions.assertEquals("ffimrzrtuzqogsex", model.tags().get("evfdnwnwm"));
        Assertions.assertEquals("zikhl", model.extendedLocation().name());
        Assertions.assertEquals("fjhdg", model.extendedLocation().type());
        Assertions.assertEquals(HybridAksPluginType.DPDK, model.hybridAksPluginType());
        Assertions.assertEquals("p", model.interfaceName());
        Assertions.assertEquals("xkgymareqnajxqu", model.l2IsolationDomainId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        L2NetworkInner model =
            new L2NetworkInner()
                .withLocation("byxbaaabjy")
                .withTags(
                    mapOf(
                        "evfdnwnwm",
                        "ffimrzrtuzqogsex",
                        "i",
                        "wzsyyceuzs",
                        "thzvaytdwkqbrqu",
                        "judpfrxt",
                        "xiilivpdtiirqt",
                        "paxh"))
                .withExtendedLocation(new ExtendedLocation().withName("zikhl").withType("fjhdg"))
                .withHybridAksPluginType(HybridAksPluginType.DPDK)
                .withInterfaceName("p")
                .withL2IsolationDomainId("xkgymareqnajxqu");
        model = BinaryData.fromObject(model).toObject(L2NetworkInner.class);
        Assertions.assertEquals("byxbaaabjy", model.location());
        Assertions.assertEquals("ffimrzrtuzqogsex", model.tags().get("evfdnwnwm"));
        Assertions.assertEquals("zikhl", model.extendedLocation().name());
        Assertions.assertEquals("fjhdg", model.extendedLocation().type());
        Assertions.assertEquals(HybridAksPluginType.DPDK, model.hybridAksPluginType());
        Assertions.assertEquals("p", model.interfaceName());
        Assertions.assertEquals("xkgymareqnajxqu", model.l2IsolationDomainId());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
