// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkcloud.fluent.models.L2NetworkInner;
import com.azure.resourcemanager.networkcloud.models.ExtendedLocation;
import com.azure.resourcemanager.networkcloud.models.HybridAksPluginType;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class L2NetworkInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        L2NetworkInner model =
            BinaryData
                .fromString(
                    "{\"extendedLocation\":{\"name\":\"bykutw\",\"type\":\"fhpagmhrskdsnf\"},\"properties\":{\"clusterId\":\"doakgtdlmkkzevdl\",\"detailedStatus\":\"Error\",\"detailedStatusMessage\":\"usdsttwv\",\"hybridAksClustersAssociatedIds\":[\"bbejdcngqqm\",\"akufgmjz\",\"wr\"],\"hybridAksPluginType\":\"DPDK\",\"interfaceName\":\"wae\",\"l2IsolationDomainId\":\"u\",\"provisioningState\":\"Accepted\",\"virtualMachinesAssociatedIds\":[\"bminrfdwoyuhhzi\",\"iefozbhdmsml\"]},\"location\":\"qhoftrmaequiah\",\"tags\":{\"alnswhccsphk\":\"slfaoqzpiyyl\",\"oluhczbwemh\":\"ivwitqscywugg\",\"sbrgz\":\"i\",\"ggicccnxqhue\":\"wmsweypqwd\"},\"id\":\"mkttlstvlzywem\",\"name\":\"zrncsdt\",\"type\":\"lusiy\"}")
                .toObject(L2NetworkInner.class);
        Assertions.assertEquals("qhoftrmaequiah", model.location());
        Assertions.assertEquals("slfaoqzpiyyl", model.tags().get("alnswhccsphk"));
        Assertions.assertEquals("bykutw", model.extendedLocation().name());
        Assertions.assertEquals("fhpagmhrskdsnf", model.extendedLocation().type());
        Assertions.assertEquals(HybridAksPluginType.DPDK, model.hybridAksPluginType());
        Assertions.assertEquals("wae", model.interfaceName());
        Assertions.assertEquals("u", model.l2IsolationDomainId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        L2NetworkInner model =
            new L2NetworkInner()
                .withLocation("qhoftrmaequiah")
                .withTags(
                    mapOf(
                        "alnswhccsphk",
                        "slfaoqzpiyyl",
                        "oluhczbwemh",
                        "ivwitqscywugg",
                        "sbrgz",
                        "i",
                        "ggicccnxqhue",
                        "wmsweypqwd"))
                .withExtendedLocation(new ExtendedLocation().withName("bykutw").withType("fhpagmhrskdsnf"))
                .withHybridAksPluginType(HybridAksPluginType.DPDK)
                .withInterfaceName("wae")
                .withL2IsolationDomainId("u");
        model = BinaryData.fromObject(model).toObject(L2NetworkInner.class);
        Assertions.assertEquals("qhoftrmaequiah", model.location());
        Assertions.assertEquals("slfaoqzpiyyl", model.tags().get("alnswhccsphk"));
        Assertions.assertEquals("bykutw", model.extendedLocation().name());
        Assertions.assertEquals("fhpagmhrskdsnf", model.extendedLocation().type());
        Assertions.assertEquals(HybridAksPluginType.DPDK, model.hybridAksPluginType());
        Assertions.assertEquals("wae", model.interfaceName());
        Assertions.assertEquals("u", model.l2IsolationDomainId());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
