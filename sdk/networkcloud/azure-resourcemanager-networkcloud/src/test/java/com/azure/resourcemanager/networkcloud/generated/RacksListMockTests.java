// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.networkcloud.NetworkCloudManager;
import com.azure.resourcemanager.networkcloud.models.Rack;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RacksListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"extendedLocation\":{\"name\":\"xzvsgeafgf\",\"type\":\"sehxlzsxezp\"},\"properties\":{\"availabilityZone\":\"kkwa\",\"clusterId\":\"skyfjlpzeqto\",\"detailedStatus\":\"Available\",\"detailedStatusMessage\":\"ixlajmllpquevham\",\"provisioningState\":\"Provisioning\",\"rackLocation\":\"gwb\",\"rackSerialNumber\":\"mkekxpkzwaqxo\",\"rackSkuId\":\"qovchiqbp\"},\"location\":\"fidusztekxbyjgm\",\"tags\":{\"rdi\":\"pxyihpqadagr\"},\"id\":\"x\",\"name\":\"wyjfowxwyovcxjs\",\"type\":\"bi\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetworkCloudManager manager = NetworkCloudManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Rack> response = manager.racks().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("fidusztekxbyjgm", response.iterator().next().location());
        Assertions.assertEquals("pxyihpqadagr", response.iterator().next().tags().get("rdi"));
        Assertions.assertEquals("xzvsgeafgf", response.iterator().next().extendedLocation().name());
        Assertions.assertEquals("sehxlzsxezp", response.iterator().next().extendedLocation().type());
        Assertions.assertEquals("kkwa", response.iterator().next().availabilityZone());
        Assertions.assertEquals("gwb", response.iterator().next().rackLocation());
        Assertions.assertEquals("mkekxpkzwaqxo", response.iterator().next().rackSerialNumber());
        Assertions.assertEquals("qovchiqbp", response.iterator().next().rackSkuId());
    }
}
