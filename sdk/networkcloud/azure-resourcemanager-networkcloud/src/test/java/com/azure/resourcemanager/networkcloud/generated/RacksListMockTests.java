// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.networkcloud.NetworkCloudManager;
import com.azure.resourcemanager.networkcloud.models.Rack;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RacksListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"etag\":\"y\",\"extendedLocation\":{\"name\":\"cnudndoabhj\",\"type\":\"wxqweuipmpvksmi\"},\"properties\":{\"availabilityZone\":\"nsqxtltc\",\"clusterId\":\"rdpqgfhy\",\"detailedStatus\":\"Error\",\"detailedStatusMessage\":\"kkld\",\"provisioningState\":\"Provisioning\",\"rackLocation\":\"wfcmfcnr\",\"rackSerialNumber\":\"ajqmat\",\"rackSkuId\":\"jti\"},\"location\":\"nzqgxxgfbbmtlpq\",\"tags\":{\"cryqxzx\":\"noiprnzcali\"},\"id\":\"q\",\"name\":\"ibmq\",\"type\":\"miymqruqguhfupet\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetworkCloudManager manager = NetworkCloudManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Rack> response = manager.racks().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("nzqgxxgfbbmtlpq", response.iterator().next().location());
        Assertions.assertEquals("noiprnzcali", response.iterator().next().tags().get("cryqxzx"));
        Assertions.assertEquals("cnudndoabhj", response.iterator().next().extendedLocation().name());
        Assertions.assertEquals("wxqweuipmpvksmi", response.iterator().next().extendedLocation().type());
        Assertions.assertEquals("nsqxtltc", response.iterator().next().availabilityZone());
        Assertions.assertEquals("wfcmfcnr", response.iterator().next().rackLocation());
        Assertions.assertEquals("ajqmat", response.iterator().next().rackSerialNumber());
        Assertions.assertEquals("jti", response.iterator().next().rackSkuId());
    }
}
