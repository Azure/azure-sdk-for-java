// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * AnalyticsOutputSettings represents the settings for the log analytics workspace used for output of logs from this
 * cluster.
 */
@Fluent
public final class AnalyticsOutputSettings implements JsonSerializable<AnalyticsOutputSettings> {
    /*
     * The resource ID of the analytics workspace that is to be used by the specified identity.
     */
    private String analyticsWorkspaceId;

    /*
     * The selection of the managed identity to use with this analytics workspace. The identity type must be either
     * system assigned or user assigned.
     */
    private IdentitySelector associatedIdentity;

    /**
     * Creates an instance of AnalyticsOutputSettings class.
     */
    public AnalyticsOutputSettings() {
    }

    /**
     * Get the analyticsWorkspaceId property: The resource ID of the analytics workspace that is to be used by the
     * specified identity.
     * 
     * @return the analyticsWorkspaceId value.
     */
    public String analyticsWorkspaceId() {
        return this.analyticsWorkspaceId;
    }

    /**
     * Set the analyticsWorkspaceId property: The resource ID of the analytics workspace that is to be used by the
     * specified identity.
     * 
     * @param analyticsWorkspaceId the analyticsWorkspaceId value to set.
     * @return the AnalyticsOutputSettings object itself.
     */
    public AnalyticsOutputSettings withAnalyticsWorkspaceId(String analyticsWorkspaceId) {
        this.analyticsWorkspaceId = analyticsWorkspaceId;
        return this;
    }

    /**
     * Get the associatedIdentity property: The selection of the managed identity to use with this analytics workspace.
     * The identity type must be either system assigned or user assigned.
     * 
     * @return the associatedIdentity value.
     */
    public IdentitySelector associatedIdentity() {
        return this.associatedIdentity;
    }

    /**
     * Set the associatedIdentity property: The selection of the managed identity to use with this analytics workspace.
     * The identity type must be either system assigned or user assigned.
     * 
     * @param associatedIdentity the associatedIdentity value to set.
     * @return the AnalyticsOutputSettings object itself.
     */
    public AnalyticsOutputSettings withAssociatedIdentity(IdentitySelector associatedIdentity) {
        this.associatedIdentity = associatedIdentity;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (associatedIdentity() != null) {
            associatedIdentity().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("analyticsWorkspaceId", this.analyticsWorkspaceId);
        jsonWriter.writeJsonField("associatedIdentity", this.associatedIdentity);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AnalyticsOutputSettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AnalyticsOutputSettings if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AnalyticsOutputSettings.
     */
    public static AnalyticsOutputSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AnalyticsOutputSettings deserializedAnalyticsOutputSettings = new AnalyticsOutputSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("analyticsWorkspaceId".equals(fieldName)) {
                    deserializedAnalyticsOutputSettings.analyticsWorkspaceId = reader.getString();
                } else if ("associatedIdentity".equals(fieldName)) {
                    deserializedAnalyticsOutputSettings.associatedIdentity = IdentitySelector.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAnalyticsOutputSettings;
        });
    }
}
