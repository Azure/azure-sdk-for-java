// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.networkcloud.models.HybridAksPluginType;
import com.azure.resourcemanager.networkcloud.models.L2NetworkDetailedStatus;
import com.azure.resourcemanager.networkcloud.models.L2NetworkProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** L2NetworkProperties represents properties of the L2 network. */
@Fluent
public final class L2NetworkProperties {
    /*
     * The list of resource IDs for the other Microsoft.NetworkCloud resources that have attached this network.
     */
    @JsonProperty(value = "associatedResourceIds", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> associatedResourceIds;

    /*
     * The resource ID of the Network Cloud cluster this L2 network is associated with.
     */
    @JsonProperty(value = "clusterId", access = JsonProperty.Access.WRITE_ONLY)
    private String clusterId;

    /*
     * The more detailed status of the L2 network.
     */
    @JsonProperty(value = "detailedStatus", access = JsonProperty.Access.WRITE_ONLY)
    private L2NetworkDetailedStatus detailedStatus;

    /*
     * The descriptive message about the current detailed status.
     */
    @JsonProperty(value = "detailedStatusMessage", access = JsonProperty.Access.WRITE_ONLY)
    private String detailedStatusMessage;

    /*
     * Field Deprecated. These fields will be empty/omitted. The list of Hybrid AKS cluster resource ID(s) that are
     * associated with this L2 network.
     */
    @JsonProperty(value = "hybridAksClustersAssociatedIds", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> hybridAksClustersAssociatedIds;

    /*
     * Field Deprecated. The field was previously optional, now it will have no defined behavior and will be ignored.
     * The network plugin type for Hybrid AKS.
     */
    @JsonProperty(value = "hybridAksPluginType")
    private HybridAksPluginType hybridAksPluginType;

    /*
     * The default interface name for this L2 network in the virtual machine. This name can be overridden by the name
     * supplied in the network attachment configuration of that virtual machine.
     */
    @JsonProperty(value = "interfaceName")
    private String interfaceName;

    /*
     * The resource ID of the Network Fabric l2IsolationDomain.
     */
    @JsonProperty(value = "l2IsolationDomainId", required = true)
    private String l2IsolationDomainId;

    /*
     * The provisioning state of the L2 network.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private L2NetworkProvisioningState provisioningState;

    /*
     * Field Deprecated. These fields will be empty/omitted. The list of virtual machine resource ID(s), excluding any
     * Hybrid AKS virtual machines, that are currently using this L2 network.
     */
    @JsonProperty(value = "virtualMachinesAssociatedIds", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> virtualMachinesAssociatedIds;

    /** Creates an instance of L2NetworkProperties class. */
    public L2NetworkProperties() {
    }

    /**
     * Get the associatedResourceIds property: The list of resource IDs for the other Microsoft.NetworkCloud resources
     * that have attached this network.
     *
     * @return the associatedResourceIds value.
     */
    public List<String> associatedResourceIds() {
        return this.associatedResourceIds;
    }

    /**
     * Get the clusterId property: The resource ID of the Network Cloud cluster this L2 network is associated with.
     *
     * @return the clusterId value.
     */
    public String clusterId() {
        return this.clusterId;
    }

    /**
     * Get the detailedStatus property: The more detailed status of the L2 network.
     *
     * @return the detailedStatus value.
     */
    public L2NetworkDetailedStatus detailedStatus() {
        return this.detailedStatus;
    }

    /**
     * Get the detailedStatusMessage property: The descriptive message about the current detailed status.
     *
     * @return the detailedStatusMessage value.
     */
    public String detailedStatusMessage() {
        return this.detailedStatusMessage;
    }

    /**
     * Get the hybridAksClustersAssociatedIds property: Field Deprecated. These fields will be empty/omitted. The list
     * of Hybrid AKS cluster resource ID(s) that are associated with this L2 network.
     *
     * @return the hybridAksClustersAssociatedIds value.
     */
    public List<String> hybridAksClustersAssociatedIds() {
        return this.hybridAksClustersAssociatedIds;
    }

    /**
     * Get the hybridAksPluginType property: Field Deprecated. The field was previously optional, now it will have no
     * defined behavior and will be ignored. The network plugin type for Hybrid AKS.
     *
     * @return the hybridAksPluginType value.
     */
    public HybridAksPluginType hybridAksPluginType() {
        return this.hybridAksPluginType;
    }

    /**
     * Set the hybridAksPluginType property: Field Deprecated. The field was previously optional, now it will have no
     * defined behavior and will be ignored. The network plugin type for Hybrid AKS.
     *
     * @param hybridAksPluginType the hybridAksPluginType value to set.
     * @return the L2NetworkProperties object itself.
     */
    public L2NetworkProperties withHybridAksPluginType(HybridAksPluginType hybridAksPluginType) {
        this.hybridAksPluginType = hybridAksPluginType;
        return this;
    }

    /**
     * Get the interfaceName property: The default interface name for this L2 network in the virtual machine. This name
     * can be overridden by the name supplied in the network attachment configuration of that virtual machine.
     *
     * @return the interfaceName value.
     */
    public String interfaceName() {
        return this.interfaceName;
    }

    /**
     * Set the interfaceName property: The default interface name for this L2 network in the virtual machine. This name
     * can be overridden by the name supplied in the network attachment configuration of that virtual machine.
     *
     * @param interfaceName the interfaceName value to set.
     * @return the L2NetworkProperties object itself.
     */
    public L2NetworkProperties withInterfaceName(String interfaceName) {
        this.interfaceName = interfaceName;
        return this;
    }

    /**
     * Get the l2IsolationDomainId property: The resource ID of the Network Fabric l2IsolationDomain.
     *
     * @return the l2IsolationDomainId value.
     */
    public String l2IsolationDomainId() {
        return this.l2IsolationDomainId;
    }

    /**
     * Set the l2IsolationDomainId property: The resource ID of the Network Fabric l2IsolationDomain.
     *
     * @param l2IsolationDomainId the l2IsolationDomainId value to set.
     * @return the L2NetworkProperties object itself.
     */
    public L2NetworkProperties withL2IsolationDomainId(String l2IsolationDomainId) {
        this.l2IsolationDomainId = l2IsolationDomainId;
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning state of the L2 network.
     *
     * @return the provisioningState value.
     */
    public L2NetworkProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the virtualMachinesAssociatedIds property: Field Deprecated. These fields will be empty/omitted. The list of
     * virtual machine resource ID(s), excluding any Hybrid AKS virtual machines, that are currently using this L2
     * network.
     *
     * @return the virtualMachinesAssociatedIds value.
     */
    public List<String> virtualMachinesAssociatedIds() {
        return this.virtualMachinesAssociatedIds;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (l2IsolationDomainId() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property l2IsolationDomainId in model L2NetworkProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(L2NetworkProperties.class);
}
