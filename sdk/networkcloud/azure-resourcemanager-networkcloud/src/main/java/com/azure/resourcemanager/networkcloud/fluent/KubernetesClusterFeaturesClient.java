// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.networkcloud.fluent.models.KubernetesClusterFeatureInner;
import com.azure.resourcemanager.networkcloud.fluent.models.OperationStatusResultInner;
import com.azure.resourcemanager.networkcloud.models.KubernetesClusterFeaturePatchParameters;

/**
 * An instance of this class provides access to all the operations defined in KubernetesClusterFeaturesClient.
 */
public interface KubernetesClusterFeaturesClient {
    /**
     * List features for the Kubernetes cluster.
     * 
     * Get a list of features for the provided Kubernetes cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of features for the provided Kubernetes cluster as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<KubernetesClusterFeatureInner> listByKubernetesCluster(String resourceGroupName,
        String kubernetesClusterName);

    /**
     * List features for the Kubernetes cluster.
     * 
     * Get a list of features for the provided Kubernetes cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of features for the provided Kubernetes cluster as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<KubernetesClusterFeatureInner> listByKubernetesCluster(String resourceGroupName,
        String kubernetesClusterName, Context context);

    /**
     * Retrieve the Kubernetes cluster feature.
     * 
     * Get properties of the provided the Kubernetes cluster feature.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param featureName The name of the feature.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of the provided the Kubernetes cluster feature along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<KubernetesClusterFeatureInner> getWithResponse(String resourceGroupName, String kubernetesClusterName,
        String featureName, Context context);

    /**
     * Retrieve the Kubernetes cluster feature.
     * 
     * Get properties of the provided the Kubernetes cluster feature.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param featureName The name of the feature.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of the provided the Kubernetes cluster feature.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    KubernetesClusterFeatureInner get(String resourceGroupName, String kubernetesClusterName, String featureName);

    /**
     * Create or update the Kubernetes cluster feature.
     * 
     * Create a new Kubernetes cluster feature or update properties of the Kubernetes cluster feature if it exists.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param featureName The name of the feature.
     * @param kubernetesClusterFeatureParameters The request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of kubernetesClusterFeature represents the feature of a Kubernetes
     * cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<KubernetesClusterFeatureInner>, KubernetesClusterFeatureInner> beginCreateOrUpdate(
        String resourceGroupName, String kubernetesClusterName, String featureName,
        KubernetesClusterFeatureInner kubernetesClusterFeatureParameters);

    /**
     * Create or update the Kubernetes cluster feature.
     * 
     * Create a new Kubernetes cluster feature or update properties of the Kubernetes cluster feature if it exists.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param featureName The name of the feature.
     * @param kubernetesClusterFeatureParameters The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of kubernetesClusterFeature represents the feature of a Kubernetes
     * cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<KubernetesClusterFeatureInner>, KubernetesClusterFeatureInner> beginCreateOrUpdate(
        String resourceGroupName, String kubernetesClusterName, String featureName,
        KubernetesClusterFeatureInner kubernetesClusterFeatureParameters, Context context);

    /**
     * Create or update the Kubernetes cluster feature.
     * 
     * Create a new Kubernetes cluster feature or update properties of the Kubernetes cluster feature if it exists.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param featureName The name of the feature.
     * @param kubernetesClusterFeatureParameters The request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return kubernetesClusterFeature represents the feature of a Kubernetes cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    KubernetesClusterFeatureInner createOrUpdate(String resourceGroupName, String kubernetesClusterName,
        String featureName, KubernetesClusterFeatureInner kubernetesClusterFeatureParameters);

    /**
     * Create or update the Kubernetes cluster feature.
     * 
     * Create a new Kubernetes cluster feature or update properties of the Kubernetes cluster feature if it exists.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param featureName The name of the feature.
     * @param kubernetesClusterFeatureParameters The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return kubernetesClusterFeature represents the feature of a Kubernetes cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    KubernetesClusterFeatureInner createOrUpdate(String resourceGroupName, String kubernetesClusterName,
        String featureName, KubernetesClusterFeatureInner kubernetesClusterFeatureParameters, Context context);

    /**
     * Delete the Kubernetes cluster feature.
     * 
     * Delete the provided Kubernetes cluster feature.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param featureName The name of the feature.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the current status of an async operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<OperationStatusResultInner>, OperationStatusResultInner> beginDelete(String resourceGroupName,
        String kubernetesClusterName, String featureName);

    /**
     * Delete the Kubernetes cluster feature.
     * 
     * Delete the provided Kubernetes cluster feature.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param featureName The name of the feature.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the current status of an async operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<OperationStatusResultInner>, OperationStatusResultInner> beginDelete(String resourceGroupName,
        String kubernetesClusterName, String featureName, Context context);

    /**
     * Delete the Kubernetes cluster feature.
     * 
     * Delete the provided Kubernetes cluster feature.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param featureName The name of the feature.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    OperationStatusResultInner delete(String resourceGroupName, String kubernetesClusterName, String featureName);

    /**
     * Delete the Kubernetes cluster feature.
     * 
     * Delete the provided Kubernetes cluster feature.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param featureName The name of the feature.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    OperationStatusResultInner delete(String resourceGroupName, String kubernetesClusterName, String featureName,
        Context context);

    /**
     * Patch the Kubernetes cluster feature.
     * 
     * Patch properties of the provided Kubernetes cluster feature.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param featureName The name of the feature.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of kubernetesClusterFeature represents the feature of a Kubernetes
     * cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<KubernetesClusterFeatureInner>, KubernetesClusterFeatureInner>
        beginUpdate(String resourceGroupName, String kubernetesClusterName, String featureName);

    /**
     * Patch the Kubernetes cluster feature.
     * 
     * Patch properties of the provided Kubernetes cluster feature.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param featureName The name of the feature.
     * @param kubernetesClusterFeatureUpdateParameters The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of kubernetesClusterFeature represents the feature of a Kubernetes
     * cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<KubernetesClusterFeatureInner>, KubernetesClusterFeatureInner> beginUpdate(
        String resourceGroupName, String kubernetesClusterName, String featureName,
        KubernetesClusterFeaturePatchParameters kubernetesClusterFeatureUpdateParameters, Context context);

    /**
     * Patch the Kubernetes cluster feature.
     * 
     * Patch properties of the provided Kubernetes cluster feature.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param featureName The name of the feature.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return kubernetesClusterFeature represents the feature of a Kubernetes cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    KubernetesClusterFeatureInner update(String resourceGroupName, String kubernetesClusterName, String featureName);

    /**
     * Patch the Kubernetes cluster feature.
     * 
     * Patch properties of the provided Kubernetes cluster feature.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param featureName The name of the feature.
     * @param kubernetesClusterFeatureUpdateParameters The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return kubernetesClusterFeature represents the feature of a Kubernetes cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    KubernetesClusterFeatureInner update(String resourceGroupName, String kubernetesClusterName, String featureName,
        KubernetesClusterFeaturePatchParameters kubernetesClusterFeatureUpdateParameters, Context context);
}
