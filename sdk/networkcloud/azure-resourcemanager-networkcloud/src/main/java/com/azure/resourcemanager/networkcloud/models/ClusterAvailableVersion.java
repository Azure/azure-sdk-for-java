// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * ClusterAvailableVersion represents the cluster version that the cluster manager can be asked to create and manage.
 */
@Immutable
public final class ClusterAvailableVersion implements JsonSerializable<ClusterAvailableVersion> {
    /*
     * The last date the version of the platform is supported.
     */
    private String supportExpiryDate;

    /*
     * The version of the cluster to be deployed.
     */
    private String targetClusterVersion;

    /**
     * Creates an instance of ClusterAvailableVersion class.
     */
    public ClusterAvailableVersion() {
    }

    /**
     * Get the supportExpiryDate property: The last date the version of the platform is supported.
     * 
     * @return the supportExpiryDate value.
     */
    public String supportExpiryDate() {
        return this.supportExpiryDate;
    }

    /**
     * Get the targetClusterVersion property: The version of the cluster to be deployed.
     * 
     * @return the targetClusterVersion value.
     */
    public String targetClusterVersion() {
        return this.targetClusterVersion;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ClusterAvailableVersion from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ClusterAvailableVersion if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ClusterAvailableVersion.
     */
    public static ClusterAvailableVersion fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ClusterAvailableVersion deserializedClusterAvailableVersion = new ClusterAvailableVersion();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("supportExpiryDate".equals(fieldName)) {
                    deserializedClusterAvailableVersion.supportExpiryDate = reader.getString();
                } else if ("targetClusterVersion".equals(fieldName)) {
                    deserializedClusterAvailableVersion.targetClusterVersion = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedClusterAvailableVersion;
        });
    }
}
