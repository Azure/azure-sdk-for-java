// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.networkcloud.fluent.models.ClusterMetricsConfigurationInner;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of ClusterMetricsConfiguration. */
public interface ClusterMetricsConfiguration {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the extendedLocation property: ExtendedLocation represents the Azure custom location where the resource will
     * be created.
     *
     * <p>The extended location of the cluster associated with the resource.
     *
     * @return the extendedLocation value.
     */
    ExtendedLocation extendedLocation();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the collectionInterval property: The interval in minutes by which metrics will be collected.
     *
     * @return the collectionInterval value.
     */
    long collectionInterval();

    /**
     * Gets the detailedStatus property: The more detailed status of the metrics configuration.
     *
     * @return the detailedStatus value.
     */
    ClusterMetricsConfigurationDetailedStatus detailedStatus();

    /**
     * Gets the detailedStatusMessage property: The descriptive message about the current detailed status.
     *
     * @return the detailedStatusMessage value.
     */
    String detailedStatusMessage();

    /**
     * Gets the disabledMetrics property: The list of metrics that are available for the cluster but disabled at the
     * moment.
     *
     * @return the disabledMetrics value.
     */
    List<String> disabledMetrics();

    /**
     * Gets the enabledMetrics property: The list of metric names that have been chosen to be enabled in addition to the
     * core set of enabled metrics.
     *
     * @return the enabledMetrics value.
     */
    List<String> enabledMetrics();

    /**
     * Gets the provisioningState property: The provisioning state of the metrics configuration.
     *
     * @return the provisioningState value.
     */
    ClusterMetricsConfigurationProvisioningState provisioningState();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.networkcloud.fluent.models.ClusterMetricsConfigurationInner object.
     *
     * @return the inner object.
     */
    ClusterMetricsConfigurationInner innerModel();

    /** The entirety of the ClusterMetricsConfiguration definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithParentResource,
            DefinitionStages.WithExtendedLocation,
            DefinitionStages.WithCollectionInterval,
            DefinitionStages.WithCreate {
    }
    /** The ClusterMetricsConfiguration definition stages. */
    interface DefinitionStages {
        /** The first stage of the ClusterMetricsConfiguration definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the ClusterMetricsConfiguration definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(String location);
        }
        /** The stage of the ClusterMetricsConfiguration definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, clusterName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param clusterName The name of the cluster.
             * @return the next definition stage.
             */
            WithExtendedLocation withExistingCluster(String resourceGroupName, String clusterName);
        }
        /** The stage of the ClusterMetricsConfiguration definition allowing to specify extendedLocation. */
        interface WithExtendedLocation {
            /**
             * Specifies the extendedLocation property: ExtendedLocation represents the Azure custom location where the
             * resource will be created.
             *
             * <p>The extended location of the cluster associated with the resource..
             *
             * @param extendedLocation ExtendedLocation represents the Azure custom location where the resource will be
             *     created.
             *     <p>The extended location of the cluster associated with the resource.
             * @return the next definition stage.
             */
            WithCollectionInterval withExtendedLocation(ExtendedLocation extendedLocation);
        }
        /** The stage of the ClusterMetricsConfiguration definition allowing to specify collectionInterval. */
        interface WithCollectionInterval {
            /**
             * Specifies the collectionInterval property: The interval in minutes by which metrics will be collected..
             *
             * @param collectionInterval The interval in minutes by which metrics will be collected.
             * @return the next definition stage.
             */
            WithCreate withCollectionInterval(long collectionInterval);
        }
        /**
         * The stage of the ClusterMetricsConfiguration definition which contains all the minimum required properties
         * for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags, DefinitionStages.WithEnabledMetrics {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            ClusterMetricsConfiguration create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ClusterMetricsConfiguration create(Context context);
        }
        /** The stage of the ClusterMetricsConfiguration definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the ClusterMetricsConfiguration definition allowing to specify enabledMetrics. */
        interface WithEnabledMetrics {
            /**
             * Specifies the enabledMetrics property: The list of metric names that have been chosen to be enabled in
             * addition to the core set of enabled metrics..
             *
             * @param enabledMetrics The list of metric names that have been chosen to be enabled in addition to the
             *     core set of enabled metrics.
             * @return the next definition stage.
             */
            WithCreate withEnabledMetrics(List<String> enabledMetrics);
        }
    }
    /**
     * Begins update for the ClusterMetricsConfiguration resource.
     *
     * @return the stage of resource update.
     */
    ClusterMetricsConfiguration.Update update();

    /** The template for ClusterMetricsConfiguration update. */
    interface Update
        extends UpdateStages.WithTags, UpdateStages.WithCollectionInterval, UpdateStages.WithEnabledMetrics {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        ClusterMetricsConfiguration apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ClusterMetricsConfiguration apply(Context context);
    }
    /** The ClusterMetricsConfiguration update stages. */
    interface UpdateStages {
        /** The stage of the ClusterMetricsConfiguration update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: The Azure resource tags that will replace the existing ones..
             *
             * @param tags The Azure resource tags that will replace the existing ones.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the ClusterMetricsConfiguration update allowing to specify collectionInterval. */
        interface WithCollectionInterval {
            /**
             * Specifies the collectionInterval property: The interval in minutes by which metrics will be collected..
             *
             * @param collectionInterval The interval in minutes by which metrics will be collected.
             * @return the next definition stage.
             */
            Update withCollectionInterval(Long collectionInterval);
        }
        /** The stage of the ClusterMetricsConfiguration update allowing to specify enabledMetrics. */
        interface WithEnabledMetrics {
            /**
             * Specifies the enabledMetrics property: The list of metric names that have been chosen to be enabled in
             * addition to the core set of enabled metrics..
             *
             * @param enabledMetrics The list of metric names that have been chosen to be enabled in addition to the
             *     core set of enabled metrics.
             * @return the next definition stage.
             */
            Update withEnabledMetrics(List<String> enabledMetrics);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    ClusterMetricsConfiguration refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ClusterMetricsConfiguration refresh(Context context);
}
