// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * KeySetUserStatus represents the status of the key set user.
 */
@Immutable
public final class KeySetUserStatus implements JsonSerializable<KeySetUserStatus> {
    /*
     * The user name that will be used for access.
     */
    private String azureUsername;

    /*
     * The indicator of whether the user is currently deployed for access.
     */
    private BareMetalMachineKeySetUserSetupStatus status;

    /*
     * The additional information describing the current status of this user, if any available.
     */
    private String statusMessage;

    /**
     * Creates an instance of KeySetUserStatus class.
     */
    public KeySetUserStatus() {
    }

    /**
     * Get the azureUsername property: The user name that will be used for access.
     * 
     * @return the azureUsername value.
     */
    public String azureUsername() {
        return this.azureUsername;
    }

    /**
     * Get the status property: The indicator of whether the user is currently deployed for access.
     * 
     * @return the status value.
     */
    public BareMetalMachineKeySetUserSetupStatus status() {
        return this.status;
    }

    /**
     * Get the statusMessage property: The additional information describing the current status of this user, if any
     * available.
     * 
     * @return the statusMessage value.
     */
    public String statusMessage() {
        return this.statusMessage;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of KeySetUserStatus from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of KeySetUserStatus if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the KeySetUserStatus.
     */
    public static KeySetUserStatus fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            KeySetUserStatus deserializedKeySetUserStatus = new KeySetUserStatus();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("azureUserName".equals(fieldName)) {
                    deserializedKeySetUserStatus.azureUsername = reader.getString();
                } else if ("status".equals(fieldName)) {
                    deserializedKeySetUserStatus.status
                        = BareMetalMachineKeySetUserSetupStatus.fromString(reader.getString());
                } else if ("statusMessage".equals(fieldName)) {
                    deserializedKeySetUserStatus.statusMessage = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedKeySetUserStatus;
        });
    }
}
