// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.models;

import com.azure.core.util.ExpandableStringEnum;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.Collection;

/** The provisioning state of the rack resource. */
public final class RackProvisioningState extends ExpandableStringEnum<RackProvisioningState> {
    /** Static value Succeeded for RackProvisioningState. */
    public static final RackProvisioningState SUCCEEDED = fromString("Succeeded");

    /** Static value Failed for RackProvisioningState. */
    public static final RackProvisioningState FAILED = fromString("Failed");

    /** Static value Canceled for RackProvisioningState. */
    public static final RackProvisioningState CANCELED = fromString("Canceled");

    /** Static value Provisioning for RackProvisioningState. */
    public static final RackProvisioningState PROVISIONING = fromString("Provisioning");

    /** Static value Accepted for RackProvisioningState. */
    public static final RackProvisioningState ACCEPTED = fromString("Accepted");

    /**
     * Creates a new instance of RackProvisioningState value.
     *
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public RackProvisioningState() {
    }

    /**
     * Creates or finds a RackProvisioningState from its string representation.
     *
     * @param name a name to look for.
     * @return the corresponding RackProvisioningState.
     */
    @JsonCreator
    public static RackProvisioningState fromString(String name) {
        return fromString(name, RackProvisioningState.class);
    }

    /**
     * Gets known RackProvisioningState values.
     *
     * @return known RackProvisioningState values.
     */
    public static Collection<RackProvisioningState> values() {
        return values(RackProvisioningState.class);
    }
}
