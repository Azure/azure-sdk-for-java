// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * ClusterScanRuntimeParameters defines the parameters for the cluster scan runtime operation.
 */
@Fluent
public final class ClusterScanRuntimeParameters implements JsonSerializable<ClusterScanRuntimeParameters> {
    /*
     * The choice of if the scan operation should run the scan.
     */
    private ClusterScanRuntimeParametersScanActivity scanActivity;

    /**
     * Creates an instance of ClusterScanRuntimeParameters class.
     */
    public ClusterScanRuntimeParameters() {
    }

    /**
     * Get the scanActivity property: The choice of if the scan operation should run the scan.
     * 
     * @return the scanActivity value.
     */
    public ClusterScanRuntimeParametersScanActivity scanActivity() {
        return this.scanActivity;
    }

    /**
     * Set the scanActivity property: The choice of if the scan operation should run the scan.
     * 
     * @param scanActivity the scanActivity value to set.
     * @return the ClusterScanRuntimeParameters object itself.
     */
    public ClusterScanRuntimeParameters withScanActivity(ClusterScanRuntimeParametersScanActivity scanActivity) {
        this.scanActivity = scanActivity;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("scanActivity", this.scanActivity == null ? null : this.scanActivity.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ClusterScanRuntimeParameters from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ClusterScanRuntimeParameters if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ClusterScanRuntimeParameters.
     */
    public static ClusterScanRuntimeParameters fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ClusterScanRuntimeParameters deserializedClusterScanRuntimeParameters = new ClusterScanRuntimeParameters();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("scanActivity".equals(fieldName)) {
                    deserializedClusterScanRuntimeParameters.scanActivity
                        = ClusterScanRuntimeParametersScanActivity.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedClusterScanRuntimeParameters;
        });
    }
}
