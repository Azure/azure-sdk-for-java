// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.networkcloud.models.VolumeDetailedStatus;
import com.azure.resourcemanager.networkcloud.models.VolumeProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** VolumeProperties represents properties of the volume resource. */
@Fluent
public final class VolumeProperties {
    /*
     * The list of resource IDs that attach the volume. It may include virtual machines and Hybrid AKS clusters.
     */
    @JsonProperty(value = "attachedTo", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> attachedTo;

    /*
     * The more detailed status of the volume.
     */
    @JsonProperty(value = "detailedStatus", access = JsonProperty.Access.WRITE_ONLY)
    private VolumeDetailedStatus detailedStatus;

    /*
     * The descriptive message about the current detailed status.
     */
    @JsonProperty(value = "detailedStatusMessage", access = JsonProperty.Access.WRITE_ONLY)
    private String detailedStatusMessage;

    /*
     * The provisioning state of the volume.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private VolumeProvisioningState provisioningState;

    /*
     * The unique identifier of the volume.
     */
    @JsonProperty(value = "serialNumber", access = JsonProperty.Access.WRITE_ONLY)
    private String serialNumber;

    /*
     * The size of the allocation for this volume in Mebibytes.
     */
    @JsonProperty(value = "sizeMiB", required = true)
    private long sizeMiB;

    /** Creates an instance of VolumeProperties class. */
    public VolumeProperties() {
    }

    /**
     * Get the attachedTo property: The list of resource IDs that attach the volume. It may include virtual machines and
     * Hybrid AKS clusters.
     *
     * @return the attachedTo value.
     */
    public List<String> attachedTo() {
        return this.attachedTo;
    }

    /**
     * Get the detailedStatus property: The more detailed status of the volume.
     *
     * @return the detailedStatus value.
     */
    public VolumeDetailedStatus detailedStatus() {
        return this.detailedStatus;
    }

    /**
     * Get the detailedStatusMessage property: The descriptive message about the current detailed status.
     *
     * @return the detailedStatusMessage value.
     */
    public String detailedStatusMessage() {
        return this.detailedStatusMessage;
    }

    /**
     * Get the provisioningState property: The provisioning state of the volume.
     *
     * @return the provisioningState value.
     */
    public VolumeProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the serialNumber property: The unique identifier of the volume.
     *
     * @return the serialNumber value.
     */
    public String serialNumber() {
        return this.serialNumber;
    }

    /**
     * Get the sizeMiB property: The size of the allocation for this volume in Mebibytes.
     *
     * @return the sizeMiB value.
     */
    public long sizeMiB() {
        return this.sizeMiB;
    }

    /**
     * Set the sizeMiB property: The size of the allocation for this volume in Mebibytes.
     *
     * @param sizeMiB the sizeMiB value to set.
     * @return the VolumeProperties object itself.
     */
    public VolumeProperties withSizeMiB(long sizeMiB) {
        this.sizeMiB = sizeMiB;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
