// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * ClusterAvailableUpgradeVersion represents the various cluster upgrade parameters.
 */
@Immutable
public final class ClusterAvailableUpgradeVersion implements JsonSerializable<ClusterAvailableUpgradeVersion> {
    /*
     * The indicator of whether the control plane will be impacted during the upgrade.
     */
    private ControlImpact controlImpact;

    /*
     * The expected duration needed for this upgrade.
     */
    private String expectedDuration;

    /*
     * The impact description including the specific details and release notes.
     */
    private String impactDescription;

    /*
     * The last date the version of the platform is supported.
     */
    private String supportExpiryDate;

    /*
     * The target version this cluster will be upgraded to.
     */
    private String targetClusterVersion;

    /*
     * The indicator of whether the workload will be impacted during the upgrade.
     */
    private WorkloadImpact workloadImpact;

    /**
     * Creates an instance of ClusterAvailableUpgradeVersion class.
     */
    public ClusterAvailableUpgradeVersion() {
    }

    /**
     * Get the controlImpact property: The indicator of whether the control plane will be impacted during the upgrade.
     * 
     * @return the controlImpact value.
     */
    public ControlImpact controlImpact() {
        return this.controlImpact;
    }

    /**
     * Get the expectedDuration property: The expected duration needed for this upgrade.
     * 
     * @return the expectedDuration value.
     */
    public String expectedDuration() {
        return this.expectedDuration;
    }

    /**
     * Get the impactDescription property: The impact description including the specific details and release notes.
     * 
     * @return the impactDescription value.
     */
    public String impactDescription() {
        return this.impactDescription;
    }

    /**
     * Get the supportExpiryDate property: The last date the version of the platform is supported.
     * 
     * @return the supportExpiryDate value.
     */
    public String supportExpiryDate() {
        return this.supportExpiryDate;
    }

    /**
     * Get the targetClusterVersion property: The target version this cluster will be upgraded to.
     * 
     * @return the targetClusterVersion value.
     */
    public String targetClusterVersion() {
        return this.targetClusterVersion;
    }

    /**
     * Get the workloadImpact property: The indicator of whether the workload will be impacted during the upgrade.
     * 
     * @return the workloadImpact value.
     */
    public WorkloadImpact workloadImpact() {
        return this.workloadImpact;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ClusterAvailableUpgradeVersion from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ClusterAvailableUpgradeVersion if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ClusterAvailableUpgradeVersion.
     */
    public static ClusterAvailableUpgradeVersion fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ClusterAvailableUpgradeVersion deserializedClusterAvailableUpgradeVersion
                = new ClusterAvailableUpgradeVersion();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("controlImpact".equals(fieldName)) {
                    deserializedClusterAvailableUpgradeVersion.controlImpact
                        = ControlImpact.fromString(reader.getString());
                } else if ("expectedDuration".equals(fieldName)) {
                    deserializedClusterAvailableUpgradeVersion.expectedDuration = reader.getString();
                } else if ("impactDescription".equals(fieldName)) {
                    deserializedClusterAvailableUpgradeVersion.impactDescription = reader.getString();
                } else if ("supportExpiryDate".equals(fieldName)) {
                    deserializedClusterAvailableUpgradeVersion.supportExpiryDate = reader.getString();
                } else if ("targetClusterVersion".equals(fieldName)) {
                    deserializedClusterAvailableUpgradeVersion.targetClusterVersion = reader.getString();
                } else if ("workloadImpact".equals(fieldName)) {
                    deserializedClusterAvailableUpgradeVersion.workloadImpact
                        = WorkloadImpact.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedClusterAvailableUpgradeVersion;
        });
    }
}
