// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.networkcloud.fluent.models.L2NetworkInner;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of L2Network. */
public interface L2Network {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the extendedLocation property: ExtendedLocation represents the Azure custom location where the resource will
     * be created.
     *
     * <p>The extended location of the cluster associated with the resource.
     *
     * @return the extendedLocation value.
     */
    ExtendedLocation extendedLocation();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the associatedResourceIds property: The list of resource IDs for the other Microsoft.NetworkCloud resources
     * that have attached this network.
     *
     * @return the associatedResourceIds value.
     */
    List<String> associatedResourceIds();

    /**
     * Gets the clusterId property: The resource ID of the Network Cloud cluster this L2 network is associated with.
     *
     * @return the clusterId value.
     */
    String clusterId();

    /**
     * Gets the detailedStatus property: The more detailed status of the L2 network.
     *
     * @return the detailedStatus value.
     */
    L2NetworkDetailedStatus detailedStatus();

    /**
     * Gets the detailedStatusMessage property: The descriptive message about the current detailed status.
     *
     * @return the detailedStatusMessage value.
     */
    String detailedStatusMessage();

    /**
     * Gets the hybridAksClustersAssociatedIds property: Field Deprecated. These fields will be empty/omitted. The list
     * of Hybrid AKS cluster resource ID(s) that are associated with this L2 network.
     *
     * @return the hybridAksClustersAssociatedIds value.
     */
    List<String> hybridAksClustersAssociatedIds();

    /**
     * Gets the hybridAksPluginType property: Field Deprecated. The field was previously optional, now it will have no
     * defined behavior and will be ignored. The network plugin type for Hybrid AKS.
     *
     * @return the hybridAksPluginType value.
     */
    HybridAksPluginType hybridAksPluginType();

    /**
     * Gets the interfaceName property: The default interface name for this L2 network in the virtual machine. This name
     * can be overridden by the name supplied in the network attachment configuration of that virtual machine.
     *
     * @return the interfaceName value.
     */
    String interfaceName();

    /**
     * Gets the l2IsolationDomainId property: The resource ID of the Network Fabric l2IsolationDomain.
     *
     * @return the l2IsolationDomainId value.
     */
    String l2IsolationDomainId();

    /**
     * Gets the provisioningState property: The provisioning state of the L2 network.
     *
     * @return the provisioningState value.
     */
    L2NetworkProvisioningState provisioningState();

    /**
     * Gets the virtualMachinesAssociatedIds property: Field Deprecated. These fields will be empty/omitted. The list of
     * virtual machine resource ID(s), excluding any Hybrid AKS virtual machines, that are currently using this L2
     * network.
     *
     * @return the virtualMachinesAssociatedIds value.
     */
    List<String> virtualMachinesAssociatedIds();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.networkcloud.fluent.models.L2NetworkInner object.
     *
     * @return the inner object.
     */
    L2NetworkInner innerModel();

    /** The entirety of the L2Network definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithExtendedLocation,
            DefinitionStages.WithL2IsolationDomainId,
            DefinitionStages.WithCreate {
    }
    /** The L2Network definition stages. */
    interface DefinitionStages {
        /** The first stage of the L2Network definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the L2Network definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the L2Network definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithExtendedLocation withExistingResourceGroup(String resourceGroupName);
        }
        /** The stage of the L2Network definition allowing to specify extendedLocation. */
        interface WithExtendedLocation {
            /**
             * Specifies the extendedLocation property: ExtendedLocation represents the Azure custom location where the
             * resource will be created.
             *
             * <p>The extended location of the cluster associated with the resource..
             *
             * @param extendedLocation ExtendedLocation represents the Azure custom location where the resource will be
             *     created.
             *     <p>The extended location of the cluster associated with the resource.
             * @return the next definition stage.
             */
            WithL2IsolationDomainId withExtendedLocation(ExtendedLocation extendedLocation);
        }
        /** The stage of the L2Network definition allowing to specify l2IsolationDomainId. */
        interface WithL2IsolationDomainId {
            /**
             * Specifies the l2IsolationDomainId property: The resource ID of the Network Fabric l2IsolationDomain..
             *
             * @param l2IsolationDomainId The resource ID of the Network Fabric l2IsolationDomain.
             * @return the next definition stage.
             */
            WithCreate withL2IsolationDomainId(String l2IsolationDomainId);
        }
        /**
         * The stage of the L2Network definition which contains all the minimum required properties for the resource to
         * be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithHybridAksPluginType,
                DefinitionStages.WithInterfaceName {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            L2Network create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            L2Network create(Context context);
        }
        /** The stage of the L2Network definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the L2Network definition allowing to specify hybridAksPluginType. */
        interface WithHybridAksPluginType {
            /**
             * Specifies the hybridAksPluginType property: Field Deprecated. The field was previously optional, now it
             * will have no defined behavior and will be ignored. The network plugin type for Hybrid AKS..
             *
             * @param hybridAksPluginType Field Deprecated. The field was previously optional, now it will have no
             *     defined behavior and will be ignored. The network plugin type for Hybrid AKS.
             * @return the next definition stage.
             */
            WithCreate withHybridAksPluginType(HybridAksPluginType hybridAksPluginType);
        }
        /** The stage of the L2Network definition allowing to specify interfaceName. */
        interface WithInterfaceName {
            /**
             * Specifies the interfaceName property: The default interface name for this L2 network in the virtual
             * machine. This name can be overridden by the name supplied in the network attachment configuration of that
             * virtual machine..
             *
             * @param interfaceName The default interface name for this L2 network in the virtual machine. This name can
             *     be overridden by the name supplied in the network attachment configuration of that virtual machine.
             * @return the next definition stage.
             */
            WithCreate withInterfaceName(String interfaceName);
        }
    }
    /**
     * Begins update for the L2Network resource.
     *
     * @return the stage of resource update.
     */
    L2Network.Update update();

    /** The template for L2Network update. */
    interface Update extends UpdateStages.WithTags {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        L2Network apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        L2Network apply(Context context);
    }
    /** The L2Network update stages. */
    interface UpdateStages {
        /** The stage of the L2Network update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: The Azure resource tags that will replace the existing ones..
             *
             * @param tags The Azure resource tags that will replace the existing ones.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    L2Network refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    L2Network refresh(Context context);
}
