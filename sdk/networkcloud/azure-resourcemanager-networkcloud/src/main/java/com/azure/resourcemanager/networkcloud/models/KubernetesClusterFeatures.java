// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of KubernetesClusterFeatures.
 */
public interface KubernetesClusterFeatures {
    /**
     * List features for the Kubernetes cluster.
     * 
     * Get a list of features for the provided Kubernetes cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of features for the provided Kubernetes cluster as paginated response with {@link PagedIterable}.
     */
    PagedIterable<KubernetesClusterFeature> listByKubernetesCluster(String resourceGroupName,
        String kubernetesClusterName);

    /**
     * List features for the Kubernetes cluster.
     * 
     * Get a list of features for the provided Kubernetes cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of features for the provided Kubernetes cluster as paginated response with {@link PagedIterable}.
     */
    PagedIterable<KubernetesClusterFeature> listByKubernetesCluster(String resourceGroupName,
        String kubernetesClusterName, Context context);

    /**
     * Retrieve the Kubernetes cluster feature.
     * 
     * Get properties of the provided the Kubernetes cluster feature.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param featureName The name of the feature.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of the provided the Kubernetes cluster feature along with {@link Response}.
     */
    Response<KubernetesClusterFeature> getWithResponse(String resourceGroupName, String kubernetesClusterName,
        String featureName, Context context);

    /**
     * Retrieve the Kubernetes cluster feature.
     * 
     * Get properties of the provided the Kubernetes cluster feature.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param featureName The name of the feature.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of the provided the Kubernetes cluster feature.
     */
    KubernetesClusterFeature get(String resourceGroupName, String kubernetesClusterName, String featureName);

    /**
     * Delete the Kubernetes cluster feature.
     * 
     * Delete the provided Kubernetes cluster feature.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param featureName The name of the feature.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult delete(String resourceGroupName, String kubernetesClusterName, String featureName);

    /**
     * Delete the Kubernetes cluster feature.
     * 
     * Delete the provided Kubernetes cluster feature.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param featureName The name of the feature.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult delete(String resourceGroupName, String kubernetesClusterName, String featureName,
        Context context);

    /**
     * Retrieve the Kubernetes cluster feature.
     * 
     * Get properties of the provided the Kubernetes cluster feature.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of the provided the Kubernetes cluster feature along with {@link Response}.
     */
    KubernetesClusterFeature getById(String id);

    /**
     * Retrieve the Kubernetes cluster feature.
     * 
     * Get properties of the provided the Kubernetes cluster feature.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of the provided the Kubernetes cluster feature along with {@link Response}.
     */
    Response<KubernetesClusterFeature> getByIdWithResponse(String id, Context context);

    /**
     * Delete the Kubernetes cluster feature.
     * 
     * Delete the provided Kubernetes cluster feature.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult deleteById(String id);

    /**
     * Delete the Kubernetes cluster feature.
     * 
     * Delete the provided Kubernetes cluster feature.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new KubernetesClusterFeature resource.
     * 
     * @param name resource name.
     * @return the first stage of the new KubernetesClusterFeature definition.
     */
    KubernetesClusterFeature.DefinitionStages.Blank define(String name);
}
