// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.models;

import com.azure.core.util.ExpandableStringEnum;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.Collection;

/** The provisioning state of the volume. */
public final class VolumeProvisioningState extends ExpandableStringEnum<VolumeProvisioningState> {
    /** Static value Succeeded for VolumeProvisioningState. */
    public static final VolumeProvisioningState SUCCEEDED = fromString("Succeeded");

    /** Static value Failed for VolumeProvisioningState. */
    public static final VolumeProvisioningState FAILED = fromString("Failed");

    /** Static value Canceled for VolumeProvisioningState. */
    public static final VolumeProvisioningState CANCELED = fromString("Canceled");

    /** Static value Provisioning for VolumeProvisioningState. */
    public static final VolumeProvisioningState PROVISIONING = fromString("Provisioning");

    /** Static value Accepted for VolumeProvisioningState. */
    public static final VolumeProvisioningState ACCEPTED = fromString("Accepted");

    /**
     * Creates a new instance of VolumeProvisioningState value.
     *
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public VolumeProvisioningState() {
    }

    /**
     * Creates or finds a VolumeProvisioningState from its string representation.
     *
     * @param name a name to look for.
     * @return the corresponding VolumeProvisioningState.
     */
    @JsonCreator
    public static VolumeProvisioningState fromString(String name) {
        return fromString(name, VolumeProvisioningState.class);
    }

    /**
     * Gets known VolumeProvisioningState values.
     *
     * @return known VolumeProvisioningState values.
     */
    public static Collection<VolumeProvisioningState> values() {
        return values(VolumeProvisioningState.class);
    }
}
