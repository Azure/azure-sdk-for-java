// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.networkcloud.fluent.models.HybridAksClusterInner;
import com.azure.resourcemanager.networkcloud.models.HybridAksClusterPatchParameters;
import com.azure.resourcemanager.networkcloud.models.HybridAksClusterRestartNodeParameters;

/** An instance of this class provides access to all the operations defined in HybridAksClustersClient. */
public interface HybridAksClustersClient {
    /**
     * List additional details related to Hybrid AKS provisioned clusters in the subscription.
     *
     * <p>Get a list of additional details related to Hybrid AKS provisioned clusters in the provided subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of additional details related to Hybrid AKS provisioned clusters in the provided subscription as
     *     paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<HybridAksClusterInner> list();

    /**
     * List additional details related to Hybrid AKS provisioned clusters in the subscription.
     *
     * <p>Get a list of additional details related to Hybrid AKS provisioned clusters in the provided subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of additional details related to Hybrid AKS provisioned clusters in the provided subscription as
     *     paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<HybridAksClusterInner> list(Context context);

    /**
     * List additional details related to Hybrid AKS provisioned clusters in the resource group.
     *
     * <p>Get a list of additional details for Hybrid AKS provisioned clusters in the provided resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of additional details for Hybrid AKS provisioned clusters in the provided resource group as
     *     paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<HybridAksClusterInner> listByResourceGroup(String resourceGroupName);

    /**
     * List additional details related to Hybrid AKS provisioned clusters in the resource group.
     *
     * <p>Get a list of additional details for Hybrid AKS provisioned clusters in the provided resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of additional details for Hybrid AKS provisioned clusters in the provided resource group as
     *     paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<HybridAksClusterInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Retrieve the additional details related to the Hybrid AKS provisioned cluster.
     *
     * <p>Get the additional details related to the provided Hybrid AKS provisioned cluster.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hybridAksClusterName The name of the Hybrid AKS cluster.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the additional details related to the provided Hybrid AKS provisioned cluster along with {@link
     *     Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<HybridAksClusterInner> getByResourceGroupWithResponse(
        String resourceGroupName, String hybridAksClusterName, Context context);

    /**
     * Retrieve the additional details related to the Hybrid AKS provisioned cluster.
     *
     * <p>Get the additional details related to the provided Hybrid AKS provisioned cluster.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hybridAksClusterName The name of the Hybrid AKS cluster.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the additional details related to the provided Hybrid AKS provisioned cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    HybridAksClusterInner getByResourceGroup(String resourceGroupName, String hybridAksClusterName);

    /**
     * Create or update the additional details related to the Hybrid AKS provisioned cluster.
     *
     * <p>Create new additional details related to the Hybrid AKS provisioned cluster or update the existing one. All
     * customer initiated requests will be rejected as the life cycle of this resource is managed by the system.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hybridAksClusterName The name of the Hybrid AKS cluster.
     * @param hybridAksClusterParameters The request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of hybridAksCluster represents the additional details regarding the
     *     Hybrid AKS cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<HybridAksClusterInner>, HybridAksClusterInner> beginCreateOrUpdate(
        String resourceGroupName, String hybridAksClusterName, HybridAksClusterInner hybridAksClusterParameters);

    /**
     * Create or update the additional details related to the Hybrid AKS provisioned cluster.
     *
     * <p>Create new additional details related to the Hybrid AKS provisioned cluster or update the existing one. All
     * customer initiated requests will be rejected as the life cycle of this resource is managed by the system.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hybridAksClusterName The name of the Hybrid AKS cluster.
     * @param hybridAksClusterParameters The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of hybridAksCluster represents the additional details regarding the
     *     Hybrid AKS cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<HybridAksClusterInner>, HybridAksClusterInner> beginCreateOrUpdate(
        String resourceGroupName,
        String hybridAksClusterName,
        HybridAksClusterInner hybridAksClusterParameters,
        Context context);

    /**
     * Create or update the additional details related to the Hybrid AKS provisioned cluster.
     *
     * <p>Create new additional details related to the Hybrid AKS provisioned cluster or update the existing one. All
     * customer initiated requests will be rejected as the life cycle of this resource is managed by the system.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hybridAksClusterName The name of the Hybrid AKS cluster.
     * @param hybridAksClusterParameters The request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybridAksCluster represents the additional details regarding the Hybrid AKS cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    HybridAksClusterInner createOrUpdate(
        String resourceGroupName, String hybridAksClusterName, HybridAksClusterInner hybridAksClusterParameters);

    /**
     * Create or update the additional details related to the Hybrid AKS provisioned cluster.
     *
     * <p>Create new additional details related to the Hybrid AKS provisioned cluster or update the existing one. All
     * customer initiated requests will be rejected as the life cycle of this resource is managed by the system.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hybridAksClusterName The name of the Hybrid AKS cluster.
     * @param hybridAksClusterParameters The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybridAksCluster represents the additional details regarding the Hybrid AKS cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    HybridAksClusterInner createOrUpdate(
        String resourceGroupName,
        String hybridAksClusterName,
        HybridAksClusterInner hybridAksClusterParameters,
        Context context);

    /**
     * Delete the additional details related to the Hybrid AKS provisioned cluster.
     *
     * <p>Delete the additional details related to the provided Hybrid AKS provisioned cluster. All customer initiated
     * requests will be rejected as the life cycle of this resource is managed by the system.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hybridAksClusterName The name of the Hybrid AKS cluster.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String hybridAksClusterName);

    /**
     * Delete the additional details related to the Hybrid AKS provisioned cluster.
     *
     * <p>Delete the additional details related to the provided Hybrid AKS provisioned cluster. All customer initiated
     * requests will be rejected as the life cycle of this resource is managed by the system.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hybridAksClusterName The name of the Hybrid AKS cluster.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String hybridAksClusterName, Context context);

    /**
     * Delete the additional details related to the Hybrid AKS provisioned cluster.
     *
     * <p>Delete the additional details related to the provided Hybrid AKS provisioned cluster. All customer initiated
     * requests will be rejected as the life cycle of this resource is managed by the system.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hybridAksClusterName The name of the Hybrid AKS cluster.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String hybridAksClusterName);

    /**
     * Delete the additional details related to the Hybrid AKS provisioned cluster.
     *
     * <p>Delete the additional details related to the provided Hybrid AKS provisioned cluster. All customer initiated
     * requests will be rejected as the life cycle of this resource is managed by the system.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hybridAksClusterName The name of the Hybrid AKS cluster.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String hybridAksClusterName, Context context);

    /**
     * Patch the additional details related to the Hybrid AKS provisioned cluster.
     *
     * <p>Update tags associated with the additional details related to the Hybrid AKS provisioned cluster.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hybridAksClusterName The name of the Hybrid AKS cluster.
     * @param hybridAksClusterUpdateParameters The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybridAksCluster represents the additional details regarding the Hybrid AKS cluster along with {@link
     *     Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<HybridAksClusterInner> updateWithResponse(
        String resourceGroupName,
        String hybridAksClusterName,
        HybridAksClusterPatchParameters hybridAksClusterUpdateParameters,
        Context context);

    /**
     * Patch the additional details related to the Hybrid AKS provisioned cluster.
     *
     * <p>Update tags associated with the additional details related to the Hybrid AKS provisioned cluster.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hybridAksClusterName The name of the Hybrid AKS cluster.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return hybridAksCluster represents the additional details regarding the Hybrid AKS cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    HybridAksClusterInner update(String resourceGroupName, String hybridAksClusterName);

    /**
     * Restart a targeted node.
     *
     * <p>Restart a targeted node of a Hybrid AKS cluster.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hybridAksClusterName The name of the Hybrid AKS cluster.
     * @param hybridAksClusterRestartNodeParameters The request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginRestartNode(
        String resourceGroupName,
        String hybridAksClusterName,
        HybridAksClusterRestartNodeParameters hybridAksClusterRestartNodeParameters);

    /**
     * Restart a targeted node.
     *
     * <p>Restart a targeted node of a Hybrid AKS cluster.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hybridAksClusterName The name of the Hybrid AKS cluster.
     * @param hybridAksClusterRestartNodeParameters The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginRestartNode(
        String resourceGroupName,
        String hybridAksClusterName,
        HybridAksClusterRestartNodeParameters hybridAksClusterRestartNodeParameters,
        Context context);

    /**
     * Restart a targeted node.
     *
     * <p>Restart a targeted node of a Hybrid AKS cluster.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hybridAksClusterName The name of the Hybrid AKS cluster.
     * @param hybridAksClusterRestartNodeParameters The request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void restartNode(
        String resourceGroupName,
        String hybridAksClusterName,
        HybridAksClusterRestartNodeParameters hybridAksClusterRestartNodeParameters);

    /**
     * Restart a targeted node.
     *
     * <p>Restart a targeted node of a Hybrid AKS cluster.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hybridAksClusterName The name of the Hybrid AKS cluster.
     * @param hybridAksClusterRestartNodeParameters The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void restartNode(
        String resourceGroupName,
        String hybridAksClusterName,
        HybridAksClusterRestartNodeParameters hybridAksClusterRestartNodeParameters,
        Context context);
}
