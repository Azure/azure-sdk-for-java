// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * VulnerabilityScanningSettings represents the settings for how security vulnerability scanning is applied to the
 * cluster.
 */
@Fluent
public final class VulnerabilityScanningSettings implements JsonSerializable<VulnerabilityScanningSettings> {
    /*
     * The mode selection for container vulnerability scanning.
     */
    private VulnerabilityScanningSettingsContainerScan containerScan;

    /**
     * Creates an instance of VulnerabilityScanningSettings class.
     */
    public VulnerabilityScanningSettings() {
    }

    /**
     * Get the containerScan property: The mode selection for container vulnerability scanning.
     * 
     * @return the containerScan value.
     */
    public VulnerabilityScanningSettingsContainerScan containerScan() {
        return this.containerScan;
    }

    /**
     * Set the containerScan property: The mode selection for container vulnerability scanning.
     * 
     * @param containerScan the containerScan value to set.
     * @return the VulnerabilityScanningSettings object itself.
     */
    public VulnerabilityScanningSettings withContainerScan(VulnerabilityScanningSettingsContainerScan containerScan) {
        this.containerScan = containerScan;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("containerScan", this.containerScan == null ? null : this.containerScan.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VulnerabilityScanningSettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VulnerabilityScanningSettings if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the VulnerabilityScanningSettings.
     */
    public static VulnerabilityScanningSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            VulnerabilityScanningSettings deserializedVulnerabilityScanningSettings
                = new VulnerabilityScanningSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("containerScan".equals(fieldName)) {
                    deserializedVulnerabilityScanningSettings.containerScan
                        = VulnerabilityScanningSettingsContainerScan.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVulnerabilityScanningSettings;
        });
    }
}
