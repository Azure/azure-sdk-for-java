// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.networkcloud.fluent.models.DefaultCniNetworkInner;
import com.azure.resourcemanager.networkcloud.models.BgpPeer;
import com.azure.resourcemanager.networkcloud.models.CniBgpConfiguration;
import com.azure.resourcemanager.networkcloud.models.DefaultCniNetwork;
import com.azure.resourcemanager.networkcloud.models.DefaultCniNetworkDetailedStatus;
import com.azure.resourcemanager.networkcloud.models.DefaultCniNetworkPatchParameters;
import com.azure.resourcemanager.networkcloud.models.DefaultCniNetworkProvisioningState;
import com.azure.resourcemanager.networkcloud.models.ExtendedLocation;
import com.azure.resourcemanager.networkcloud.models.IpAllocationType;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class DefaultCniNetworkImpl
    implements DefaultCniNetwork, DefaultCniNetwork.Definition, DefaultCniNetwork.Update {
    private DefaultCniNetworkInner innerObject;

    private final com.azure.resourcemanager.networkcloud.NetworkCloudManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public ExtendedLocation extendedLocation() {
        return this.innerModel().extendedLocation();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String clusterId() {
        return this.innerModel().clusterId();
    }

    public Long cniAsNumber() {
        return this.innerModel().cniAsNumber();
    }

    public CniBgpConfiguration cniBgpConfiguration() {
        return this.innerModel().cniBgpConfiguration();
    }

    public DefaultCniNetworkDetailedStatus detailedStatus() {
        return this.innerModel().detailedStatus();
    }

    public String detailedStatusMessage() {
        return this.innerModel().detailedStatusMessage();
    }

    public List<BgpPeer> fabricBgpPeers() {
        List<BgpPeer> inner = this.innerModel().fabricBgpPeers();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> hybridAksClustersAssociatedIds() {
        List<String> inner = this.innerModel().hybridAksClustersAssociatedIds();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String interfaceName() {
        return this.innerModel().interfaceName();
    }

    public IpAllocationType ipAllocationType() {
        return this.innerModel().ipAllocationType();
    }

    public String ipv4ConnectedPrefix() {
        return this.innerModel().ipv4ConnectedPrefix();
    }

    public String ipv6ConnectedPrefix() {
        return this.innerModel().ipv6ConnectedPrefix();
    }

    public String l3IsolationDomainId() {
        return this.innerModel().l3IsolationDomainId();
    }

    public DefaultCniNetworkProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public long vlan() {
        return this.innerModel().vlan();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public DefaultCniNetworkInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.networkcloud.NetworkCloudManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String defaultCniNetworkName;

    private DefaultCniNetworkPatchParameters updateDefaultCniNetworkUpdateParameters;

    public DefaultCniNetworkImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public DefaultCniNetwork create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDefaultCniNetworks()
                .createOrUpdate(resourceGroupName, defaultCniNetworkName, this.innerModel(), Context.NONE);
        return this;
    }

    public DefaultCniNetwork create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDefaultCniNetworks()
                .createOrUpdate(resourceGroupName, defaultCniNetworkName, this.innerModel(), context);
        return this;
    }

    DefaultCniNetworkImpl(String name, com.azure.resourcemanager.networkcloud.NetworkCloudManager serviceManager) {
        this.innerObject = new DefaultCniNetworkInner();
        this.serviceManager = serviceManager;
        this.defaultCniNetworkName = name;
    }

    public DefaultCniNetworkImpl update() {
        this.updateDefaultCniNetworkUpdateParameters = new DefaultCniNetworkPatchParameters();
        return this;
    }

    public DefaultCniNetwork apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDefaultCniNetworks()
                .updateWithResponse(
                    resourceGroupName, defaultCniNetworkName, updateDefaultCniNetworkUpdateParameters, Context.NONE)
                .getValue();
        return this;
    }

    public DefaultCniNetwork apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDefaultCniNetworks()
                .updateWithResponse(
                    resourceGroupName, defaultCniNetworkName, updateDefaultCniNetworkUpdateParameters, context)
                .getValue();
        return this;
    }

    DefaultCniNetworkImpl(
        DefaultCniNetworkInner innerObject, com.azure.resourcemanager.networkcloud.NetworkCloudManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.defaultCniNetworkName = Utils.getValueFromIdByName(innerObject.id(), "defaultCniNetworks");
    }

    public DefaultCniNetwork refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDefaultCniNetworks()
                .getByResourceGroupWithResponse(resourceGroupName, defaultCniNetworkName, Context.NONE)
                .getValue();
        return this;
    }

    public DefaultCniNetwork refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDefaultCniNetworks()
                .getByResourceGroupWithResponse(resourceGroupName, defaultCniNetworkName, context)
                .getValue();
        return this;
    }

    public DefaultCniNetworkImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public DefaultCniNetworkImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public DefaultCniNetworkImpl withExtendedLocation(ExtendedLocation extendedLocation) {
        this.innerModel().withExtendedLocation(extendedLocation);
        return this;
    }

    public DefaultCniNetworkImpl withL3IsolationDomainId(String l3IsolationDomainId) {
        this.innerModel().withL3IsolationDomainId(l3IsolationDomainId);
        return this;
    }

    public DefaultCniNetworkImpl withVlan(long vlan) {
        this.innerModel().withVlan(vlan);
        return this;
    }

    public DefaultCniNetworkImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateDefaultCniNetworkUpdateParameters.withTags(tags);
            return this;
        }
    }

    public DefaultCniNetworkImpl withCniBgpConfiguration(CniBgpConfiguration cniBgpConfiguration) {
        this.innerModel().withCniBgpConfiguration(cniBgpConfiguration);
        return this;
    }

    public DefaultCniNetworkImpl withIpAllocationType(IpAllocationType ipAllocationType) {
        this.innerModel().withIpAllocationType(ipAllocationType);
        return this;
    }

    public DefaultCniNetworkImpl withIpv4ConnectedPrefix(String ipv4ConnectedPrefix) {
        this.innerModel().withIpv4ConnectedPrefix(ipv4ConnectedPrefix);
        return this;
    }

    public DefaultCniNetworkImpl withIpv6ConnectedPrefix(String ipv6ConnectedPrefix) {
        this.innerModel().withIpv6ConnectedPrefix(ipv6ConnectedPrefix);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
