// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.networkcloud.fluent.models.AgentPoolInner;
import com.azure.resourcemanager.networkcloud.models.AgentPoolPatchParameters;

/** An instance of this class provides access to all the operations defined in AgentPoolsClient. */
public interface AgentPoolsClient {
    /**
     * List agent pools of the Kubernetes cluster.
     *
     * <p>Get a list of agent pools for the provided Kubernetes cluster.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of agent pools for the provided Kubernetes cluster as paginated response with {@link
     *     PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AgentPoolInner> listByKubernetesCluster(String resourceGroupName, String kubernetesClusterName);

    /**
     * List agent pools of the Kubernetes cluster.
     *
     * <p>Get a list of agent pools for the provided Kubernetes cluster.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of agent pools for the provided Kubernetes cluster as paginated response with {@link
     *     PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AgentPoolInner> listByKubernetesCluster(
        String resourceGroupName, String kubernetesClusterName, Context context);

    /**
     * Retrieve the Kubernetes cluster agent pool.
     *
     * <p>Get properties of the provided Kubernetes cluster agent pool.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param agentPoolName The name of the Kubernetes cluster agent pool.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of the provided Kubernetes cluster agent pool along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AgentPoolInner> getWithResponse(
        String resourceGroupName, String kubernetesClusterName, String agentPoolName, Context context);

    /**
     * Retrieve the Kubernetes cluster agent pool.
     *
     * <p>Get properties of the provided Kubernetes cluster agent pool.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param agentPoolName The name of the Kubernetes cluster agent pool.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of the provided Kubernetes cluster agent pool.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AgentPoolInner get(String resourceGroupName, String kubernetesClusterName, String agentPoolName);

    /**
     * Create or update the Kubernetes cluster agent pool.
     *
     * <p>Create a new Kubernetes cluster agent pool or update the properties of the existing one.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param agentPoolName The name of the Kubernetes cluster agent pool.
     * @param agentPoolParameters The request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of agentPool represents the agent pool of Kubernetes cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AgentPoolInner>, AgentPoolInner> beginCreateOrUpdate(
        String resourceGroupName,
        String kubernetesClusterName,
        String agentPoolName,
        AgentPoolInner agentPoolParameters);

    /**
     * Create or update the Kubernetes cluster agent pool.
     *
     * <p>Create a new Kubernetes cluster agent pool or update the properties of the existing one.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param agentPoolName The name of the Kubernetes cluster agent pool.
     * @param agentPoolParameters The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of agentPool represents the agent pool of Kubernetes cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AgentPoolInner>, AgentPoolInner> beginCreateOrUpdate(
        String resourceGroupName,
        String kubernetesClusterName,
        String agentPoolName,
        AgentPoolInner agentPoolParameters,
        Context context);

    /**
     * Create or update the Kubernetes cluster agent pool.
     *
     * <p>Create a new Kubernetes cluster agent pool or update the properties of the existing one.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param agentPoolName The name of the Kubernetes cluster agent pool.
     * @param agentPoolParameters The request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return agentPool represents the agent pool of Kubernetes cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AgentPoolInner createOrUpdate(
        String resourceGroupName,
        String kubernetesClusterName,
        String agentPoolName,
        AgentPoolInner agentPoolParameters);

    /**
     * Create or update the Kubernetes cluster agent pool.
     *
     * <p>Create a new Kubernetes cluster agent pool or update the properties of the existing one.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param agentPoolName The name of the Kubernetes cluster agent pool.
     * @param agentPoolParameters The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return agentPool represents the agent pool of Kubernetes cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AgentPoolInner createOrUpdate(
        String resourceGroupName,
        String kubernetesClusterName,
        String agentPoolName,
        AgentPoolInner agentPoolParameters,
        Context context);

    /**
     * Delete the Kubernetes cluster agent pool.
     *
     * <p>Delete the provided Kubernetes cluster agent pool.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param agentPoolName The name of the Kubernetes cluster agent pool.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String kubernetesClusterName, String agentPoolName);

    /**
     * Delete the Kubernetes cluster agent pool.
     *
     * <p>Delete the provided Kubernetes cluster agent pool.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param agentPoolName The name of the Kubernetes cluster agent pool.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String kubernetesClusterName, String agentPoolName, Context context);

    /**
     * Delete the Kubernetes cluster agent pool.
     *
     * <p>Delete the provided Kubernetes cluster agent pool.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param agentPoolName The name of the Kubernetes cluster agent pool.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String kubernetesClusterName, String agentPoolName);

    /**
     * Delete the Kubernetes cluster agent pool.
     *
     * <p>Delete the provided Kubernetes cluster agent pool.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param agentPoolName The name of the Kubernetes cluster agent pool.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String kubernetesClusterName, String agentPoolName, Context context);

    /**
     * Patch the Kubernetes cluster agent pool.
     *
     * <p>Patch the properties of the provided Kubernetes cluster agent pool, or update the tags associated with the
     * Kubernetes cluster agent pool. Properties and tag updates can be done independently.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param agentPoolName The name of the Kubernetes cluster agent pool.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of agentPool represents the agent pool of Kubernetes cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AgentPoolInner>, AgentPoolInner> beginUpdate(
        String resourceGroupName, String kubernetesClusterName, String agentPoolName);

    /**
     * Patch the Kubernetes cluster agent pool.
     *
     * <p>Patch the properties of the provided Kubernetes cluster agent pool, or update the tags associated with the
     * Kubernetes cluster agent pool. Properties and tag updates can be done independently.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param agentPoolName The name of the Kubernetes cluster agent pool.
     * @param agentPoolUpdateParameters The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of agentPool represents the agent pool of Kubernetes cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AgentPoolInner>, AgentPoolInner> beginUpdate(
        String resourceGroupName,
        String kubernetesClusterName,
        String agentPoolName,
        AgentPoolPatchParameters agentPoolUpdateParameters,
        Context context);

    /**
     * Patch the Kubernetes cluster agent pool.
     *
     * <p>Patch the properties of the provided Kubernetes cluster agent pool, or update the tags associated with the
     * Kubernetes cluster agent pool. Properties and tag updates can be done independently.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param agentPoolName The name of the Kubernetes cluster agent pool.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return agentPool represents the agent pool of Kubernetes cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AgentPoolInner update(String resourceGroupName, String kubernetesClusterName, String agentPoolName);

    /**
     * Patch the Kubernetes cluster agent pool.
     *
     * <p>Patch the properties of the provided Kubernetes cluster agent pool, or update the tags associated with the
     * Kubernetes cluster agent pool. Properties and tag updates can be done independently.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param kubernetesClusterName The name of the Kubernetes cluster.
     * @param agentPoolName The name of the Kubernetes cluster agent pool.
     * @param agentPoolUpdateParameters The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return agentPool represents the agent pool of Kubernetes cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AgentPoolInner update(
        String resourceGroupName,
        String kubernetesClusterName,
        String agentPoolName,
        AgentPoolPatchParameters agentPoolUpdateParameters,
        Context context);
}
