// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.keyvault.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.keyvault.fluent.models.MhsmGeoReplicatedRegionInner;
import com.azure.resourcemanager.keyvault.models.CreateMode;
import com.azure.resourcemanager.keyvault.models.ManagedHsmProperties;
import com.azure.resourcemanager.keyvault.models.MhsmNetworkRuleSet;
import com.azure.resourcemanager.keyvault.models.MhsmServiceTagRule;
import com.azure.resourcemanager.keyvault.models.MhsmVirtualNetworkRule;
import com.azure.resourcemanager.keyvault.models.MhsmipRule;
import com.azure.resourcemanager.keyvault.models.NetworkRuleAction;
import com.azure.resourcemanager.keyvault.models.NetworkRuleBypassOptions;
import com.azure.resourcemanager.keyvault.models.PublicNetworkAccess;
import java.util.Arrays;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class ManagedHsmPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ManagedHsmProperties model = BinaryData.fromString(
            "{\"tenantId\":\"4c0cbf9b-732c-4959-addf-3c4590a3e54e\",\"initialAdminObjectIds\":[\"wfvovbv\",\"euecivyhzceuoj\"],\"hsmUri\":\"rw\",\"enableSoftDelete\":true,\"softDeleteRetentionInDays\":1907813820,\"enablePurgeProtection\":true,\"createMode\":\"recover\",\"statusMessage\":\"ytdxwit\",\"provisioningState\":\"Provisioning\",\"networkAcls\":{\"bypass\":\"AzureServices\",\"defaultAction\":\"Deny\",\"ipRules\":[{\"value\":\"xhniskxfbkpycgk\"},{\"value\":\"wndnhj\"}],\"serviceTags\":[{\"tag\":\"whvylw\"},{\"tag\":\"btdhxujznbm\"},{\"tag\":\"ow\"},{\"tag\":\"wpr\"}],\"virtualNetworkRules\":[{\"id\":\"veual\"}]},\"regions\":[{\"name\":\"khfxobbcswsrt\",\"provisioningState\":\"Failed\",\"isPrimary\":true}],\"privateEndpointConnections\":[{\"id\":\"bewtghfg\",\"etag\":\"c\",\"properties\":{\"privateEndpoint\":{\"id\":\"vlvqhjkbegi\"},\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"iebwwaloayqcgwrt\",\"actionsRequired\":\"None\"},\"provisioningState\":\"Deleting\"}},{\"id\":\"yzm\",\"etag\":\"xongmtsavjcbpwxq\",\"properties\":{\"privateEndpoint\":{\"id\":\"nftguvriuhpr\"},\"privateLinkServiceConnectionState\":{\"status\":\"Disconnected\",\"description\":\"xqtayriwwro\",\"actionsRequired\":\"None\"},\"provisioningState\":\"Failed\"}},{\"id\":\"mcqibycnojv\",\"etag\":\"mefqsgzvahapjyzh\",\"properties\":{\"privateEndpoint\":{\"id\":\"zcjrvxdjzlmwlx\"},\"privateLinkServiceConnectionState\":{\"status\":\"Disconnected\",\"description\":\"hzovawjvzunlut\",\"actionsRequired\":\"None\"},\"provisioningState\":\"Deleting\"}}],\"publicNetworkAccess\":\"Disabled\",\"scheduledPurgeDate\":\"2021-11-18T19:16:34Z\",\"securityDomainProperties\":{\"activationStatus\":\"Unknown\",\"activationStatusMessage\":\"jzuaejxdultskzbb\"}}")
            .toObject(ManagedHsmProperties.class);
        Assertions.assertEquals(UUID.fromString("4c0cbf9b-732c-4959-addf-3c4590a3e54e"), model.tenantId());
        Assertions.assertEquals("wfvovbv", model.initialAdminObjectIds().get(0));
        Assertions.assertTrue(model.enableSoftDelete());
        Assertions.assertEquals(1907813820, model.softDeleteRetentionInDays());
        Assertions.assertTrue(model.enablePurgeProtection());
        Assertions.assertEquals(CreateMode.RECOVER, model.createMode());
        Assertions.assertEquals(NetworkRuleBypassOptions.AZURE_SERVICES, model.networkAcls().bypass());
        Assertions.assertEquals(NetworkRuleAction.DENY, model.networkAcls().defaultAction());
        Assertions.assertEquals("xhniskxfbkpycgk", model.networkAcls().ipRules().get(0).value());
        Assertions.assertEquals("whvylw", model.networkAcls().serviceTags().get(0).tag());
        Assertions.assertEquals("veual", model.networkAcls().virtualNetworkRules().get(0).id());
        Assertions.assertEquals("khfxobbcswsrt", model.regions().get(0).name());
        Assertions.assertTrue(model.regions().get(0).isPrimary());
        Assertions.assertEquals(PublicNetworkAccess.DISABLED, model.publicNetworkAccess());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ManagedHsmProperties model = new ManagedHsmProperties()
            .withTenantId(UUID.fromString("4c0cbf9b-732c-4959-addf-3c4590a3e54e"))
            .withInitialAdminObjectIds(Arrays.asList("wfvovbv", "euecivyhzceuoj"))
            .withEnableSoftDelete(true)
            .withSoftDeleteRetentionInDays(1907813820)
            .withEnablePurgeProtection(true)
            .withCreateMode(CreateMode.RECOVER)
            .withNetworkAcls(new MhsmNetworkRuleSet().withBypass(NetworkRuleBypassOptions.AZURE_SERVICES)
                .withDefaultAction(NetworkRuleAction.DENY)
                .withIpRules(
                    Arrays.asList(new MhsmipRule().withValue("xhniskxfbkpycgk"), new MhsmipRule().withValue("wndnhj")))
                .withServiceTags(Arrays.asList(new MhsmServiceTagRule().withTag("whvylw"),
                    new MhsmServiceTagRule().withTag("btdhxujznbm"), new MhsmServiceTagRule().withTag("ow"),
                    new MhsmServiceTagRule().withTag("wpr")))
                .withVirtualNetworkRules(Arrays.asList(new MhsmVirtualNetworkRule().withId("veual"))))
            .withRegions(
                Arrays.asList(new MhsmGeoReplicatedRegionInner().withName("khfxobbcswsrt").withIsPrimary(true)))
            .withPublicNetworkAccess(PublicNetworkAccess.DISABLED);
        model = BinaryData.fromObject(model).toObject(ManagedHsmProperties.class);
        Assertions.assertEquals(UUID.fromString("4c0cbf9b-732c-4959-addf-3c4590a3e54e"), model.tenantId());
        Assertions.assertEquals("wfvovbv", model.initialAdminObjectIds().get(0));
        Assertions.assertTrue(model.enableSoftDelete());
        Assertions.assertEquals(1907813820, model.softDeleteRetentionInDays());
        Assertions.assertTrue(model.enablePurgeProtection());
        Assertions.assertEquals(CreateMode.RECOVER, model.createMode());
        Assertions.assertEquals(NetworkRuleBypassOptions.AZURE_SERVICES, model.networkAcls().bypass());
        Assertions.assertEquals(NetworkRuleAction.DENY, model.networkAcls().defaultAction());
        Assertions.assertEquals("xhniskxfbkpycgk", model.networkAcls().ipRules().get(0).value());
        Assertions.assertEquals("whvylw", model.networkAcls().serviceTags().get(0).tag());
        Assertions.assertEquals("veual", model.networkAcls().virtualNetworkRules().get(0).id());
        Assertions.assertEquals("khfxobbcswsrt", model.regions().get(0).name());
        Assertions.assertTrue(model.regions().get(0).isPrimary());
        Assertions.assertEquals(PublicNetworkAccess.DISABLED, model.publicNetworkAccess());
    }
}
