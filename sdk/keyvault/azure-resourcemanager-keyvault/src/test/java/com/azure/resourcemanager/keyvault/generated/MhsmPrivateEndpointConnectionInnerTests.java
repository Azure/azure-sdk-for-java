// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.keyvault.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.keyvault.fluent.models.MhsmPrivateEndpointConnectionInner;
import com.azure.resourcemanager.keyvault.models.ActionsRequired;
import com.azure.resourcemanager.keyvault.models.ManagedHsmSku;
import com.azure.resourcemanager.keyvault.models.ManagedHsmSkuFamily;
import com.azure.resourcemanager.keyvault.models.ManagedHsmSkuName;
import com.azure.resourcemanager.keyvault.models.ManagedServiceIdentity;
import com.azure.resourcemanager.keyvault.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.keyvault.models.MhsmPrivateEndpoint;
import com.azure.resourcemanager.keyvault.models.MhsmPrivateLinkServiceConnectionState;
import com.azure.resourcemanager.keyvault.models.PrivateEndpointServiceConnectionStatus;
import com.azure.resourcemanager.keyvault.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class MhsmPrivateEndpointConnectionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MhsmPrivateEndpointConnectionInner model = BinaryData.fromString(
            "{\"properties\":{\"privateEndpoint\":{\"id\":\"jhwuaanozjos\"},\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"l\",\"actionsRequired\":\"None\"},\"provisioningState\":\"Deleting\"},\"tags\":{\"vimjwos\":\"l\",\"tcs\":\"tx\",\"zikhl\":\"fcktqumiekke\",\"gge\":\"fjhdg\"},\"location\":\"unygaeqid\",\"sku\":{\"family\":\"C\",\"name\":\"Custom_B6\"},\"identity\":{\"principalId\":\"b220564d-9656-427e-89eb-96954c7317c1\",\"tenantId\":\"3a2f3198-48b2-473b-be88-c67efa1e7193\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"yjmoadsu\":{\"principalId\":\"e34e6f32-9fd4-459b-83fa-c842186fa984\",\"clientId\":\"6882b20b-845d-481d-b685-7f30161ba550\"},\"m\":{\"principalId\":\"eecccedb-1197-4e19-aca4-30e7336c442d\",\"clientId\":\"1d02a53d-2873-4cfe-96ca-bd236d9dc3b0\"},\"mjsjqb\":{\"principalId\":\"0fef8c94-063a-4789-8f43-d78af6705375\",\"clientId\":\"a2168c37-f646-48ca-95ed-7a73c6939149\"}}},\"etag\":\"hyxxrwlycoduhpk\",\"id\":\"gymare\",\"name\":\"n\",\"type\":\"jxqugjhky\"}")
            .toObject(MhsmPrivateEndpointConnectionInner.class);
        Assertions.assertEquals("l", model.tags().get("vimjwos"));
        Assertions.assertEquals("unygaeqid", model.location());
        Assertions.assertEquals(ManagedHsmSkuFamily.C, model.sku().family());
        Assertions.assertEquals(ManagedHsmSkuName.CUSTOM_B6, model.sku().name());
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("hyxxrwlycoduhpk", model.etag());
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.APPROVED,
            model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("l", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals(ActionsRequired.NONE, model.privateLinkServiceConnectionState().actionsRequired());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MhsmPrivateEndpointConnectionInner model
            = new MhsmPrivateEndpointConnectionInner()
                .withTags(mapOf("vimjwos", "l", "tcs", "tx", "zikhl", "fcktqumiekke", "gge", "fjhdg"))
                .withLocation("unygaeqid")
                .withSku(new ManagedHsmSku().withFamily(ManagedHsmSkuFamily.C).withName(ManagedHsmSkuName.CUSTOM_B6))
                .withIdentity(new ManagedServiceIdentity().withType(ManagedServiceIdentityType.USER_ASSIGNED)
                    .withUserAssignedIdentities(mapOf("yjmoadsu", new UserAssignedIdentity(), "m",
                        new UserAssignedIdentity(), "mjsjqb", new UserAssignedIdentity())))
                .withEtag("hyxxrwlycoduhpk")
                .withPrivateEndpoint(new MhsmPrivateEndpoint())
                .withPrivateLinkServiceConnectionState(new MhsmPrivateLinkServiceConnectionState()
                    .withStatus(PrivateEndpointServiceConnectionStatus.APPROVED)
                    .withDescription("l")
                    .withActionsRequired(ActionsRequired.NONE));
        model = BinaryData.fromObject(model).toObject(MhsmPrivateEndpointConnectionInner.class);
        Assertions.assertEquals("l", model.tags().get("vimjwos"));
        Assertions.assertEquals("unygaeqid", model.location());
        Assertions.assertEquals(ManagedHsmSkuFamily.C, model.sku().family());
        Assertions.assertEquals(ManagedHsmSkuName.CUSTOM_B6, model.sku().name());
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("hyxxrwlycoduhpk", model.etag());
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.APPROVED,
            model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("l", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals(ActionsRequired.NONE, model.privateLinkServiceConnectionState().actionsRequired());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
