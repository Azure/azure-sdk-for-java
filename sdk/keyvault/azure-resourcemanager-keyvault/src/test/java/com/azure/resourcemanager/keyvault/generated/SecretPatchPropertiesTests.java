// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.keyvault.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.keyvault.models.SecretAttributes;
import com.azure.resourcemanager.keyvault.models.SecretPatchProperties;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class SecretPatchPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SecretPatchProperties model = BinaryData.fromString(
            "{\"value\":\"kdwbwhkszz\",\"contentType\":\"rvexztvb\",\"attributes\":{\"enabled\":true,\"nbf\":2172930279023677567,\"exp\":3999543626969444509,\"created\":1008926283024648920,\"updated\":5941634021066560611}}")
            .toObject(SecretPatchProperties.class);
        Assertions.assertEquals("kdwbwhkszz", model.value());
        Assertions.assertEquals("rvexztvb", model.contentType());
        Assertions.assertTrue(model.attributes().enabled());
        Assertions.assertEquals(OffsetDateTime.parse("2172930279023677567"), model.attributes().notBefore());
        Assertions.assertEquals(OffsetDateTime.parse("3999543626969444509"), model.attributes().expires());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SecretPatchProperties model = new SecretPatchProperties().withValue("kdwbwhkszz")
            .withContentType("rvexztvb")
            .withAttributes(new SecretAttributes().withEnabled(true)
                .withNotBefore(OffsetDateTime.parse("2172930279023677567"))
                .withExpires(OffsetDateTime.parse("3999543626969444509")));
        model = BinaryData.fromObject(model).toObject(SecretPatchProperties.class);
        Assertions.assertEquals("kdwbwhkszz", model.value());
        Assertions.assertEquals("rvexztvb", model.contentType());
        Assertions.assertTrue(model.attributes().enabled());
        Assertions.assertEquals(OffsetDateTime.parse("2172930279023677567"), model.attributes().notBefore());
        Assertions.assertEquals(OffsetDateTime.parse("3999543626969444509"), model.attributes().expires());
    }
}
