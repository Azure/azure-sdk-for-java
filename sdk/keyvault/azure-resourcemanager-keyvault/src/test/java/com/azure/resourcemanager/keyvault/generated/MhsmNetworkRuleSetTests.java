// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.keyvault.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.keyvault.models.MhsmNetworkRuleSet;
import com.azure.resourcemanager.keyvault.models.MhsmServiceTagRule;
import com.azure.resourcemanager.keyvault.models.MhsmVirtualNetworkRule;
import com.azure.resourcemanager.keyvault.models.MhsmipRule;
import com.azure.resourcemanager.keyvault.models.NetworkRuleAction;
import com.azure.resourcemanager.keyvault.models.NetworkRuleBypassOptions;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MhsmNetworkRuleSetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MhsmNetworkRuleSet model = BinaryData.fromString(
            "{\"bypass\":\"None\",\"defaultAction\":\"Allow\",\"ipRules\":[{\"value\":\"ekg\"}],\"serviceTags\":[{\"tag\":\"zuhkfpbsjyof\"},{\"tag\":\"xl\"}],\"virtualNetworkRules\":[{\"id\":\"dttouwaboekqvkel\"}]}")
            .toObject(MhsmNetworkRuleSet.class);
        Assertions.assertEquals(NetworkRuleBypassOptions.NONE, model.bypass());
        Assertions.assertEquals(NetworkRuleAction.ALLOW, model.defaultAction());
        Assertions.assertEquals("ekg", model.ipRules().get(0).value());
        Assertions.assertEquals("zuhkfpbsjyof", model.serviceTags().get(0).tag());
        Assertions.assertEquals("dttouwaboekqvkel", model.virtualNetworkRules().get(0).id());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MhsmNetworkRuleSet model = new MhsmNetworkRuleSet().withBypass(NetworkRuleBypassOptions.NONE)
            .withDefaultAction(NetworkRuleAction.ALLOW)
            .withIpRules(Arrays.asList(new MhsmipRule().withValue("ekg")))
            .withServiceTags(
                Arrays.asList(new MhsmServiceTagRule().withTag("zuhkfpbsjyof"), new MhsmServiceTagRule().withTag("xl")))
            .withVirtualNetworkRules(Arrays.asList(new MhsmVirtualNetworkRule().withId("dttouwaboekqvkel")));
        model = BinaryData.fromObject(model).toObject(MhsmNetworkRuleSet.class);
        Assertions.assertEquals(NetworkRuleBypassOptions.NONE, model.bypass());
        Assertions.assertEquals(NetworkRuleAction.ALLOW, model.defaultAction());
        Assertions.assertEquals("ekg", model.ipRules().get(0).value());
        Assertions.assertEquals("zuhkfpbsjyof", model.serviceTags().get(0).tag());
        Assertions.assertEquals("dttouwaboekqvkel", model.virtualNetworkRules().get(0).id());
    }
}
