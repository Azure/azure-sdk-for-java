// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.keyvault.generated.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The KeyRotationPolicyAttributes model. */
@Fluent
public final class KeyRotationPolicyAttributes {
    /*
     * Creation time in seconds since 1970-01-01T00:00:00Z.
     */
    @JsonProperty(value = "created", access = JsonProperty.Access.WRITE_ONLY)
    private Long created;

    /*
     * Last updated time in seconds since 1970-01-01T00:00:00Z.
     */
    @JsonProperty(value = "updated", access = JsonProperty.Access.WRITE_ONLY)
    private Long updated;

    /*
     * The expiration time for the new key version. It should be in ISO8601
     * format. Eg: 'P90D', 'P1Y'.
     */
    @JsonProperty(value = "expiryTime")
    private String expiryTime;

    /**
     * Get the created property: Creation time in seconds since 1970-01-01T00:00:00Z.
     *
     * @return the created value.
     */
    public Long created() {
        return this.created;
    }

    /**
     * Get the updated property: Last updated time in seconds since 1970-01-01T00:00:00Z.
     *
     * @return the updated value.
     */
    public Long updated() {
        return this.updated;
    }

    /**
     * Get the expiryTime property: The expiration time for the new key version. It should be in ISO8601 format. Eg:
     * 'P90D', 'P1Y'.
     *
     * @return the expiryTime value.
     */
    public String expiryTime() {
        return this.expiryTime;
    }

    /**
     * Set the expiryTime property: The expiration time for the new key version. It should be in ISO8601 format. Eg:
     * 'P90D', 'P1Y'.
     *
     * @param expiryTime the expiryTime value to set.
     * @return the KeyRotationPolicyAttributes object itself.
     */
    public KeyRotationPolicyAttributes withExpiryTime(String expiryTime) {
        this.expiryTime = expiryTime;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
