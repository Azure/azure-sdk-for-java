// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.keyvault.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of Secrets. */
public interface Secrets {
    /**
     * Gets the specified secret. NOTE: This API is intended for internal use in ARM deployments. Users should use the
     * data-plane REST service for interaction with vault secrets.
     *
     * @param resourceGroupName The name of the Resource Group to which the vault belongs.
     * @param vaultName The name of the vault.
     * @param secretName The name of the secret.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified secret.
     */
    Secret get(String resourceGroupName, String vaultName, String secretName);

    /**
     * Gets the specified secret. NOTE: This API is intended for internal use in ARM deployments. Users should use the
     * data-plane REST service for interaction with vault secrets.
     *
     * @param resourceGroupName The name of the Resource Group to which the vault belongs.
     * @param vaultName The name of the vault.
     * @param secretName The name of the secret.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified secret along with {@link Response}.
     */
    Response<Secret> getWithResponse(String resourceGroupName, String vaultName, String secretName, Context context);

    /**
     * The List operation gets information about the secrets in a vault. NOTE: This API is intended for internal use in
     * ARM deployments. Users should use the data-plane REST service for interaction with vault secrets.
     *
     * @param resourceGroupName The name of the Resource Group to which the vault belongs.
     * @param vaultName The name of the vault.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of secrets as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Secret> list(String resourceGroupName, String vaultName);

    /**
     * The List operation gets information about the secrets in a vault. NOTE: This API is intended for internal use in
     * ARM deployments. Users should use the data-plane REST service for interaction with vault secrets.
     *
     * @param resourceGroupName The name of the Resource Group to which the vault belongs.
     * @param vaultName The name of the vault.
     * @param top Maximum number of results to return.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of secrets as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Secret> list(String resourceGroupName, String vaultName, Integer top, Context context);

    /**
     * Gets the specified secret. NOTE: This API is intended for internal use in ARM deployments. Users should use the
     * data-plane REST service for interaction with vault secrets.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified secret along with {@link Response}.
     */
    Secret getById(String id);

    /**
     * Gets the specified secret. NOTE: This API is intended for internal use in ARM deployments. Users should use the
     * data-plane REST service for interaction with vault secrets.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified secret along with {@link Response}.
     */
    Response<Secret> getByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new Secret resource.
     *
     * @param name resource name.
     * @return the first stage of the new Secret definition.
     */
    Secret.DefinitionStages.Blank define(String name);
}
