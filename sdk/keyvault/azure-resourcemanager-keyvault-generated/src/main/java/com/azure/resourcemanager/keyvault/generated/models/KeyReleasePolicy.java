// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.keyvault.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.Base64Url;
import com.azure.core.util.CoreUtils;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The KeyReleasePolicy model. */
@Fluent
public final class KeyReleasePolicy {
    /*
     * Content type and version of key release policy
     */
    @JsonProperty(value = "contentType")
    private String contentType;

    /*
     * Blob encoding the policy rules under which the key can be released.
     */
    @JsonProperty(value = "data")
    private Base64Url data;

    /**
     * Get the contentType property: Content type and version of key release policy.
     *
     * @return the contentType value.
     */
    public String contentType() {
        return this.contentType;
    }

    /**
     * Set the contentType property: Content type and version of key release policy.
     *
     * @param contentType the contentType value to set.
     * @return the KeyReleasePolicy object itself.
     */
    public KeyReleasePolicy withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }

    /**
     * Get the data property: Blob encoding the policy rules under which the key can be released.
     *
     * @return the data value.
     */
    public byte[] data() {
        if (this.data == null) {
            return new byte[0];
        }
        return this.data.decodedBytes();
    }

    /**
     * Set the data property: Blob encoding the policy rules under which the key can be released.
     *
     * @param data the data value to set.
     * @return the KeyReleasePolicy object itself.
     */
    public KeyReleasePolicy withData(byte[] data) {
        if (data == null) {
            this.data = null;
        } else {
            this.data = Base64Url.encode(CoreUtils.clone(data));
        }
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
