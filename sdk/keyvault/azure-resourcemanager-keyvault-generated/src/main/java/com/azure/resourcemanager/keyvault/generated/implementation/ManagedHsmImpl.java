// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.keyvault.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.keyvault.generated.fluent.models.ManagedHsmInner;
import com.azure.resourcemanager.keyvault.generated.models.ManagedHsm;
import com.azure.resourcemanager.keyvault.generated.models.ManagedHsmProperties;
import com.azure.resourcemanager.keyvault.generated.models.ManagedHsmSku;
import java.util.Collections;
import java.util.Map;

public final class ManagedHsmImpl implements ManagedHsm, ManagedHsm.Definition, ManagedHsm.Update {
    private ManagedHsmInner innerObject;

    private final com.azure.resourcemanager.keyvault.generated.KeyVaultManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public ManagedHsmSku sku() {
        return this.innerModel().sku();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public ManagedHsmProperties properties() {
        return this.innerModel().properties();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public ManagedHsmInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.keyvault.generated.KeyVaultManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String name;

    public ManagedHsmImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public ManagedHsm create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedHsms()
                .createOrUpdate(resourceGroupName, name, this.innerModel(), Context.NONE);
        return this;
    }

    public ManagedHsm create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedHsms()
                .createOrUpdate(resourceGroupName, name, this.innerModel(), context);
        return this;
    }

    ManagedHsmImpl(String name, com.azure.resourcemanager.keyvault.generated.KeyVaultManager serviceManager) {
        this.innerObject = new ManagedHsmInner();
        this.serviceManager = serviceManager;
        this.name = name;
    }

    public ManagedHsmImpl update() {
        return this;
    }

    public ManagedHsm apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedHsms()
                .update(resourceGroupName, name, this.innerModel(), Context.NONE);
        return this;
    }

    public ManagedHsm apply(Context context) {
        this.innerObject =
            serviceManager.serviceClient().getManagedHsms().update(resourceGroupName, name, this.innerModel(), context);
        return this;
    }

    ManagedHsmImpl(
        ManagedHsmInner innerObject, com.azure.resourcemanager.keyvault.generated.KeyVaultManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.name = Utils.getValueFromIdByName(innerObject.id(), "managedHSMs");
    }

    public ManagedHsm refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedHsms()
                .getByResourceGroupWithResponse(resourceGroupName, name, Context.NONE)
                .getValue();
        return this;
    }

    public ManagedHsm refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedHsms()
                .getByResourceGroupWithResponse(resourceGroupName, name, context)
                .getValue();
        return this;
    }

    public ManagedHsmImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public ManagedHsmImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public ManagedHsmImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public ManagedHsmImpl withSku(ManagedHsmSku sku) {
        this.innerModel().withSku(sku);
        return this;
    }

    public ManagedHsmImpl withProperties(ManagedHsmProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
