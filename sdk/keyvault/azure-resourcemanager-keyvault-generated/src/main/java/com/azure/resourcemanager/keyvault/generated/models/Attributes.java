// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.keyvault.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The object attributes managed by the Azure Key Vault service. */
@Fluent
public class Attributes {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(Attributes.class);

    /*
     * Determines whether or not the object is enabled.
     */
    @JsonProperty(value = "enabled")
    private Boolean enabled;

    /*
     * Not before date in seconds since 1970-01-01T00:00:00Z.
     */
    @JsonProperty(value = "nbf")
    private Long notBefore;

    /*
     * Expiry date in seconds since 1970-01-01T00:00:00Z.
     */
    @JsonProperty(value = "exp")
    private Long expires;

    /*
     * Creation time in seconds since 1970-01-01T00:00:00Z.
     */
    @JsonProperty(value = "created", access = JsonProperty.Access.WRITE_ONLY)
    private Long created;

    /*
     * Last updated time in seconds since 1970-01-01T00:00:00Z.
     */
    @JsonProperty(value = "updated", access = JsonProperty.Access.WRITE_ONLY)
    private Long updated;

    /*
     * The deletion recovery level currently in effect for the object. If it
     * contains 'Purgeable', then the object can be permanently deleted by a
     * privileged user; otherwise, only the system can purge the object at the
     * end of the retention interval.
     */
    @JsonProperty(value = "recoveryLevel", access = JsonProperty.Access.WRITE_ONLY)
    private DeletionRecoveryLevel recoveryLevel;

    /**
     * Get the enabled property: Determines whether or not the object is enabled.
     *
     * @return the enabled value.
     */
    public Boolean enabled() {
        return this.enabled;
    }

    /**
     * Set the enabled property: Determines whether or not the object is enabled.
     *
     * @param enabled the enabled value to set.
     * @return the Attributes object itself.
     */
    public Attributes withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Get the notBefore property: Not before date in seconds since 1970-01-01T00:00:00Z.
     *
     * @return the notBefore value.
     */
    public Long notBefore() {
        return this.notBefore;
    }

    /**
     * Set the notBefore property: Not before date in seconds since 1970-01-01T00:00:00Z.
     *
     * @param notBefore the notBefore value to set.
     * @return the Attributes object itself.
     */
    public Attributes withNotBefore(Long notBefore) {
        this.notBefore = notBefore;
        return this;
    }

    /**
     * Get the expires property: Expiry date in seconds since 1970-01-01T00:00:00Z.
     *
     * @return the expires value.
     */
    public Long expires() {
        return this.expires;
    }

    /**
     * Set the expires property: Expiry date in seconds since 1970-01-01T00:00:00Z.
     *
     * @param expires the expires value to set.
     * @return the Attributes object itself.
     */
    public Attributes withExpires(Long expires) {
        this.expires = expires;
        return this;
    }

    /**
     * Get the created property: Creation time in seconds since 1970-01-01T00:00:00Z.
     *
     * @return the created value.
     */
    public Long created() {
        return this.created;
    }

    /**
     * Get the updated property: Last updated time in seconds since 1970-01-01T00:00:00Z.
     *
     * @return the updated value.
     */
    public Long updated() {
        return this.updated;
    }

    /**
     * Get the recoveryLevel property: The deletion recovery level currently in effect for the object. If it contains
     * 'Purgeable', then the object can be permanently deleted by a privileged user; otherwise, only the system can
     * purge the object at the end of the retention interval.
     *
     * @return the recoveryLevel value.
     */
    public DeletionRecoveryLevel recoveryLevel() {
        return this.recoveryLevel;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
