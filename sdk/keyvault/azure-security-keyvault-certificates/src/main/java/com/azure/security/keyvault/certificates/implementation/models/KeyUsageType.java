// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.security.keyvault.certificates.implementation.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Supported usages of a certificate key.
 */
public final class KeyUsageType extends ExpandableStringEnum<KeyUsageType> {

    /**
     * Indicates that the certificate key can be used as a digital signature.
     */
    @Generated
    public static final KeyUsageType DIGITAL_SIGNATURE = fromString("digitalSignature");

    /**
     * Indicates that the certificate key can be used for authentication.
     */
    @Generated
    public static final KeyUsageType NON_REPUDIATION = fromString("nonRepudiation");

    /**
     * Indicates that the certificate key can be used for key encryption.
     */
    @Generated
    public static final KeyUsageType KEY_ENCIPHERMENT = fromString("keyEncipherment");

    /**
     * Indicates that the certificate key can be used for data encryption.
     */
    @Generated
    public static final KeyUsageType DATA_ENCIPHERMENT = fromString("dataEncipherment");

    /**
     * Indicates that the certificate key can be used to determine key agreement, such as a key created using the
     * Diffie-Hellman key agreement algorithm.
     */
    @Generated
    public static final KeyUsageType KEY_AGREEMENT = fromString("keyAgreement");

    /**
     * Indicates that the certificate key can be used to sign certificates.
     */
    @Generated
    public static final KeyUsageType KEY_CERT_SIGN = fromString("keyCertSign");

    /**
     * Indicates that the certificate key can be used to sign a certificate revocation list.
     */
    @Generated
    public static final KeyUsageType C_RLSIGN = fromString("cRLSign");

    /**
     * Indicates that the certificate key can be used for encryption only.
     */
    @Generated
    public static final KeyUsageType ENCIPHER_ONLY = fromString("encipherOnly");

    /**
     * Indicates that the certificate key can be used for decryption only.
     */
    @Generated
    public static final KeyUsageType DECIPHER_ONLY = fromString("decipherOnly");

    /**
     * Creates a new instance of KeyUsageType value.
     *
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public KeyUsageType() {
    }

    /**
     * Creates or finds a KeyUsageType from its string representation.
     *
     * @param name a name to look for.
     * @return the corresponding KeyUsageType.
     */
    @Generated
    public static KeyUsageType fromString(String name) {
        return fromString(name, KeyUsageType.class);
    }

    /**
     * Gets known KeyUsageType values.
     *
     * @return known KeyUsageType values.
     */
    @Generated
    public static Collection<KeyUsageType> values() {
        return values(KeyUsageType.class);
    }
}
