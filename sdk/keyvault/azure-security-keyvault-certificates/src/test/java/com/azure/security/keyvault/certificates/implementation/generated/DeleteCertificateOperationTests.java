// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.security.keyvault.certificates.implementation.generated;

import com.azure.security.keyvault.certificates.implementation.models.CertificateOperation;
import com.azure.security.keyvault.certificates.implementation.models.IssuerParameters;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class DeleteCertificateOperationTests extends CertificateClientTestBase {
    @Test
    @Disabled
    public void testDeleteCertificateOperationTests() {
        // method invocation
        CertificateOperation response = certificateClient.deleteCertificateOperation("deletedRequestedCert01");

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "id"
        Assertions.assertEquals("https://myvault.vault.azure.net/certificates/deletedRequestedCert01/pending",
            response.getId());
        // verify property "issuerParameters"
        IssuerParameters responseIssuerParameters = response.getIssuerParameters();
        Assertions.assertNotNull(responseIssuerParameters);
        Assertions.assertEquals("issuer03", responseIssuerParameters.getName());
        // verify property "csr"
        Assertions.assertNotNull(response.getCsr());
        // verify property "cancellationRequested"
        Assertions.assertEquals(false, response.isCancellationRequested());
        // verify property "status"
        Assertions.assertEquals("inProgress", response.getStatus());
        // verify property "statusDetails"
        Assertions.assertEquals(
            "Pending certificate created. Certificate request is in progress. This may take some time based on the issuer provider. Please check again later.",
            response.getStatusDetails());
        // verify property "requestId"
        Assertions.assertEquals("b88791e33d9c4d609d3e3cc3d2d40d11", response.getRequestId());
    }
}
