// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.security.keyvault.certificates.implementation.generated;

import com.azure.security.keyvault.certificates.implementation.models.CertificateCreateParameters;
import com.azure.security.keyvault.certificates.implementation.models.CertificateOperation;
import com.azure.security.keyvault.certificates.implementation.models.CertificatePolicy;
import com.azure.security.keyvault.certificates.implementation.models.IssuerParameters;
import com.azure.security.keyvault.certificates.implementation.models.JsonWebKeyType;
import com.azure.security.keyvault.certificates.implementation.models.KeyProperties;
import com.azure.security.keyvault.certificates.implementation.models.SecretProperties;
import com.azure.security.keyvault.certificates.implementation.models.SubjectAlternativeNames;
import com.azure.security.keyvault.certificates.implementation.models.X509CertificateProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class CreateCertificateTests extends CertificateClientTestBase {
    @Test
    @Disabled
    public void testCreateCertificateTests() {
        // method invocation
        CertificateOperation response = certificateClient.createCertificate("selfSignedCert01",
            new CertificateCreateParameters().setCertificatePolicy(new CertificatePolicy()
                .setKeyProperties(new KeyProperties().setExportable(true)
                    .setKeyType(JsonWebKeyType.RSA)
                    .setKeySize(2048)
                    .setReuseKey(false))
                .setSecretProperties(new SecretProperties().setContentType("application/x-pkcs12"))
                .setX509CertificateProperties(new X509CertificateProperties().setSubject("CN=*.microsoft.com")
                    .setSubjectAlternativeNames(new SubjectAlternativeNames()
                        .setDnsNames(Arrays.asList("onedrive.microsoft.com", "xbox.microsoft.com"))))
                .setIssuerParameters(new IssuerParameters().setName("Self"))));

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "id"
        Assertions.assertEquals("https://myvault.vault.azure.net/certificates/selfSignedCert01/pending",
            response.getId());
        // verify property "issuerParameters"
        IssuerParameters responseIssuerParameters = response.getIssuerParameters();
        Assertions.assertNotNull(responseIssuerParameters);
        Assertions.assertEquals("Self", responseIssuerParameters.getName());
        // verify property "csr"
        Assertions.assertNotNull(response.getCsr());
        // verify property "cancellationRequested"
        Assertions.assertEquals(false, response.isCancellationRequested());
        // verify property "status"
        Assertions.assertEquals("inProgress", response.getStatus());
        // verify property "statusDetails"
        Assertions.assertEquals(
            "Pending certificate created. Certificate request is in progress. This may take some time based on the issuer provider. Please check again later.",
            response.getStatusDetails());
        // verify property "requestId"
        Assertions.assertEquals("6faacd568ab049a2803861e8dd3ae21f", response.getRequestId());
    }
}
