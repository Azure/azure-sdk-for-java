import { type ModelProperty, type Program, type Type } from "@typespec/compiler";
import type { AttributeDecorator, NameDecorator, NsDeclarationsDecorator, NsDecorator, UnwrappedDecorator } from "../generated-defs/TypeSpec.Xml.js";
import type { XmlNamespace } from "./types.js";
export declare const namespace = "TypeSpec.Xml";
export declare const $name: NameDecorator;
export declare const $attribute: AttributeDecorator;
/**
 * Check if the given property should be serialized as an attribute instead of a node.
 */
export declare function isAttribute(program: Program, target: ModelProperty): boolean;
export declare const $unwrapped: UnwrappedDecorator;
/**
 * Check if the given property should be unwrapped in the XML containing node.
 */
export declare function isUnwrapped(program: Program, target: ModelProperty): boolean;
export declare const $nsDeclarations: NsDeclarationsDecorator;
export declare const $ns: NsDecorator;
/**
 * Get the namespace and prefix for the given type.
 */
export declare function getNs(program: Program, target: Type): XmlNamespace | undefined;
//# sourceMappingURL=decorators.d.ts.map