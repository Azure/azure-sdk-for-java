import type { ObjectType, Program, Type } from "@typespec/compiler";
export declare const namespace = "TypeSpec.Versioning";
/**
 * @returns get old name if applicable.
 */
export declare function getNameAtVersion(p: Program, t: Type, versionKey: ObjectType): string;
/**
 * @returns get old type if applicable.
 */
export declare function getTypeBeforeVersion(p: Program, t: Type, versionKey: ObjectType): Type | undefined;
/**
 * @returns get old type if applicable.
 */
export declare function getReturnTypeBeforeVersion(p: Program, t: Type, versionKey: ObjectType): any;
export declare function madeOptionalAfter(program: Program, type: Type, versionKey: ObjectType): boolean;
export declare function madeRequiredAfter(program: Program, type: Type, versionKey: ObjectType): boolean;
export declare function existsAtVersion(p: Program, type: Type, versionKey: ObjectType): boolean;
export declare function hasDifferentNameAtVersion(p: Program, type: Type, version: ObjectType): boolean;
export declare function hasDifferentTypeAtVersion(p: Program, type: Type, version: ObjectType): boolean;
export declare function hasDifferentReturnTypeAtVersion(p: Program, type: Type, version: ObjectType): boolean;
//# sourceMappingURL=internal-projection-functions.d.ts.map