/** An error here would mean that the decorator is not exported or doesn't have the right name. */
import { $deprecated, $discriminator, $doc, $encode, $encodedName, $error, $errorsDoc, $example, $format, $friendlyName, $inspectType, $inspectTypeName, $key, $knownValues, $list, $maxItems, $maxLength, $maxValue, $maxValueExclusive, $minItems, $minLength, $minValue, $minValueExclusive, $opExample, $overload, $parameterVisibility, $pattern, $projectedName, $returnTypeVisibility, $returnsDoc, $secret, $service, $summary, $tag, $visibility, $withDefaultKeyVisibility, $withOptionalProperties, $withPickedProperties, $withUpdateableProperties, $withVisibility, $withoutDefaultValues, $withoutOmittedProperties, } from "../src/index.js";
/** An error here would mean that the exported decorator is not using the same signature. Make sure to have export const $decName: DecNameDecorator = (...) => ... */
const _ = {
    $encode,
    $doc,
    $withOptionalProperties,
    $withUpdateableProperties,
    $withoutOmittedProperties,
    $withPickedProperties,
    $withoutDefaultValues,
    $withDefaultKeyVisibility,
    $summary,
    $returnsDoc,
    $errorsDoc,
    $deprecated,
    $service,
    $error,
    $format,
    $pattern,
    $minLength,
    $maxLength,
    $minItems,
    $maxItems,
    $minValue,
    $maxValue,
    $minValueExclusive,
    $maxValueExclusive,
    $secret,
    $list,
    $tag,
    $friendlyName,
    $knownValues,
    $key,
    $overload,
    $projectedName,
    $encodedName,
    $discriminator,
    $example,
    $opExample,
    $visibility,
    $withVisibility,
    $inspectType,
    $inspectTypeName,
    $parameterVisibility,
    $returnTypeVisibility,
};
//# sourceMappingURL=TypeSpec.ts-test.js.map