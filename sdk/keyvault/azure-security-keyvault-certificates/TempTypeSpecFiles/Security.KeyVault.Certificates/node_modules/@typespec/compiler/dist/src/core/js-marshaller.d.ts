import type { Checker } from "./checker.js";
import type { MarshalledValue, Type, Value } from "./types.js";
/**
 * Legacy marshalling of values to replicate before 0.56.0 behavior
 *  - string value -> `string`
 *  - numeric value -> `number`
 *  - boolean value -> `boolean`
 *  - null value -> `NullType`
 */
export declare function legacyMarshallTypeForJS(checker: Checker, value: Value): Type | Value | Record<string, unknown> | unknown[] | string | number | boolean;
export declare function marshallTypeForJS<T extends Value>(value: T, valueConstraint: Type | undefined): MarshalledValue<T>;
export declare function canNumericConstraintBeJsNumber(type: Type | undefined): boolean;
//# sourceMappingURL=js-marshaller.d.ts.map