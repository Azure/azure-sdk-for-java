import type { Type } from "../core/index.js";
import type { EmitEntity } from "./types.js";
export interface ReferenceCycleEntry {
    type: Type;
    entity: EmitEntity<unknown>;
}
/**
 * Represent a reference cycle.
 * The cycle entries will always start with a declaration if there is one in the cycle.
 */
export declare class ReferenceCycle implements Iterable<ReferenceCycleEntry> {
    #private;
    /**
     * If this cycle contains a declaration.
     */
    readonly containsDeclaration: boolean;
    constructor(entries: ReferenceCycleEntry[]);
    get first(): ReferenceCycleEntry;
    [Symbol.iterator](): Iterator<ReferenceCycleEntry>;
    [Symbol.toStringTag](): string;
    toString(): string;
}
//# sourceMappingURL=reference-cycle.d.ts.map