import { TextDocument } from "vscode-languageserver-textdocument";
import { Diagnostic } from "vscode-languageserver/node.js";
import { IdentifierNode } from "../core/types.js";
import { Server, ServerHost } from "../server/index.js";
import { TestHostOptions } from "./test-host.js";
import { TestFileSystem } from "./types.js";
export interface TestServerHost extends ServerHost, TestFileSystem {
    server: Server;
    logMessages: readonly string[];
    getOpenDocument(path: string): TextDocument | undefined;
    addOrUpdateDocument(path: string, content: string): TextDocument;
    openDocument(path: string): TextDocument;
    getDiagnostics(path: string): readonly Diagnostic[];
    getURL(path: string): string;
}
export declare function createTestServerHost(options?: TestHostOptions & {
    workspaceDir?: string;
}): Promise<TestServerHost>;
/**
 * Takes source code with a cursor position indicated by the given marker
 * ("â”†" by default), and returns the source without the marker along with
 * the cursor position.
 */
export declare function extractCursor(sourceWithCursor: string, marker?: string): {
    source: string;
    pos: number;
};
/**
 * Takes source code with start and end positions indicated by given marker
 * ("~~~" by default) and returns the source without the markers along with
 * the start and end positions.
 */
export declare function extractSquiggles(sourceWithSquiggles: string, marker?: string): {
    source: string;
    pos: number;
    end: number;
};
/**
 * Extracts all identifiers marked with trailing empty comments from source
 */
export declare function getTestIdentifiers(source: string): IdentifierNode[];
//# sourceMappingURL=test-server-host.d.ts.map