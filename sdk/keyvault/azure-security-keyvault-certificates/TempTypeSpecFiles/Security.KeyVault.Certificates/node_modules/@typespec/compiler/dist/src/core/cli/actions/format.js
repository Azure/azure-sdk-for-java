import { logDiagnostics } from "../../diagnostics.js";
import { findUnformattedTypeSpecFiles, formatTypeSpecFiles } from "../../formatter-fs.js";
export async function formatAction(host, args) {
    if (args["check"]) {
        const unformatted = await findUnformattedTypeSpecFiles(args["include"], {
            exclude: args["exclude"],
            debug: args.debug,
        });
        if (unformatted.length > 0) {
            // eslint-disable-next-line no-console
            console.log(`Found ${unformatted.length} unformatted files:`);
            for (const file of unformatted) {
                // eslint-disable-next-line no-console
                console.log(` - ${file}`);
            }
            process.exit(1);
        }
    }
    else {
        const [_, diagnostics] = await formatTypeSpecFiles(args["include"], {
            exclude: args["exclude"],
            debug: args.debug,
        });
        if (diagnostics.length > 0) {
            logDiagnostics(diagnostics, host.logSink);
            process.exit(1);
        }
    }
}
//# sourceMappingURL=format.js.map