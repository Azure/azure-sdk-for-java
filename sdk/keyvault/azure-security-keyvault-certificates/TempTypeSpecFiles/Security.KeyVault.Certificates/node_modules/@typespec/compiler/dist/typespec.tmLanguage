<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>$schema</key>
    <string>https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json</string>
    <key>name</key>
    <string>TypeSpec</string>
    <key>scopeName</key>
    <string>source.tsp</string>
    <key>fileTypes</key>
    <array>
      <string>tsp</string>
    </array>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#statement</string>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>alias-id</key>
      <dict>
        <key>name</key>
        <string>meta.alias-id.typespec</string>
        <key>begin</key>
        <string>(=)\s*</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>alias-statement</key>
      <dict>
        <key>name</key>
        <string>meta.alias-statement.typespec</string>
        <key>begin</key>
        <string>\b(alias)\b\s+(\b[_$[:alpha:]][_$[:alnum:]]*\b|`(?:[^`\\]|\\.)*`)\s*</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#alias-id</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-parameters</string>
          </dict>
        </array>
      </dict>
      <key>augment-decorator-statement</key>
      <dict>
        <key>name</key>
        <string>meta.augment-decorator-statement.typespec</string>
        <key>begin</key>
        <string>((@@)\b[_$[:alpha:]](?:[_$[:alnum:]]|\.[_$[:alpha:]])*\b)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.tag.tsp</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.tag.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=[_$[:alpha:]])|(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#parenthesized-expression</string>
          </dict>
        </array>
      </dict>
      <key>block-comment</key>
      <dict>
        <key>name</key>
        <string>comment.block.tsp</string>
        <key>begin</key>
        <string>/\*</string>
        <key>end</key>
        <string>\*/</string>
      </dict>
      <key>boolean-literal</key>
      <dict>
        <key>name</key>
        <string>constant.language.tsp</string>
        <key>match</key>
        <string>\b(true|false)\b</string>
      </dict>
      <key>callExpression</key>
      <dict>
        <key>name</key>
        <string>meta.callExpression.typespec</string>
        <key>begin</key>
        <string>(\b[_$[:alpha:]](?:[_$[:alnum:]]|\.[_$[:alpha:]])*\b)\s*(\()</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.tsp</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.open.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.close.tsp</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>const-statement</key>
      <dict>
        <key>name</key>
        <string>meta.const-statement.typespec</string>
        <key>begin</key>
        <string>\b(const)\b\s+(\b[_$[:alpha:]][_$[:alnum:]]*\b|`(?:[^`\\]|\\.)*`)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>variable.name.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#type-annotation</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operator-assignment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>decorator</key>
      <dict>
        <key>name</key>
        <string>meta.decorator.typespec</string>
        <key>begin</key>
        <string>((@)\b[_$[:alpha:]](?:[_$[:alnum:]]|\.[_$[:alpha:]])*\b)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.tag.tsp</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.tag.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=[_$[:alpha:]])|(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#parenthesized-expression</string>
          </dict>
        </array>
      </dict>
      <key>decorator-declaration-statement</key>
      <dict>
        <key>name</key>
        <string>meta.decorator-declaration-statement.typespec</string>
        <key>begin</key>
        <string>(?:(extern)\s+)?\b(dec)\b\s+(\b[_$[:alpha:]][_$[:alnum:]]*\b|`(?:[^`\\]|\\.)*`)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operation-parameters</string>
          </dict>
        </array>
      </dict>
      <key>directive</key>
      <dict>
        <key>name</key>
        <string>meta.directive.typespec</string>
        <key>begin</key>
        <string>\s*(#\b[_$[:alpha:]][_$[:alnum:]]*\b)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.directive.name.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>$|(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#string-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#identifier-expression</string>
          </dict>
        </array>
      </dict>
      <key>doc-comment</key>
      <dict>
        <key>name</key>
        <string>comment.block.tsp</string>
        <key>begin</key>
        <string>/\*\*</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>comment.block.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\*/</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>comment.block.tsp</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#doc-comment-block</string>
          </dict>
        </array>
      </dict>
      <key>doc-comment-block</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#doc-comment-param</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#doc-comment-return-tag</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#doc-comment-unknown-tag</string>
          </dict>
        </array>
      </dict>
      <key>doc-comment-param</key>
      <dict>
        <key>name</key>
        <string>comment.block.tsp</string>
        <key>match</key>
        <string>(?x)((@)(?:param|template|prop))\s+(\b[_$[:alpha:]][_$[:alnum:]]*\b|`(?:[^`\\]|\\.)*`)\b</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.tag.tspdoc</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.tag.tspdoc</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>variable.name.tsp</string>
          </dict>
        </dict>
      </dict>
      <key>doc-comment-return-tag</key>
      <dict>
        <key>name</key>
        <string>comment.block.tsp</string>
        <key>match</key>
        <string>(?x)((@)(?:returns))\b</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.tag.tspdoc</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.tag.tspdoc</string>
          </dict>
        </dict>
      </dict>
      <key>doc-comment-unknown-tag</key>
      <dict>
        <key>name</key>
        <string>comment.block.tsp</string>
        <key>match</key>
        <string>(?x)((@)(?:\b[_$[:alpha:]][_$[:alnum:]]*\b|`(?:[^`\\]|\\.)*`))\b</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.tag.tsp</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.tag.tsp</string>
          </dict>
        </dict>
      </dict>
      <key>else-expression</key>
      <dict>
        <key>name</key>
        <string>meta.else-expression.typespec</string>
        <key>begin</key>
        <string>\b(else)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>((?&lt;=\})|(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#projection-expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#projection-body</string>
          </dict>
        </array>
      </dict>
      <key>else-if-expression</key>
      <dict>
        <key>name</key>
        <string>meta.else-if-expression.typespec</string>
        <key>begin</key>
        <string>\b(else)\s+(if)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>((?&lt;=\})|(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#projection-expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#projection-body</string>
          </dict>
        </array>
      </dict>
      <key>enum-body</key>
      <dict>
        <key>name</key>
        <string>meta.enum-body.typespec</string>
        <key>begin</key>
        <string>\{</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.curlybrace.open.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\}</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.curlybrace.close.tsp</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#enum-member</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#directive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#decorator</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>enum-member</key>
      <dict>
        <key>name</key>
        <string>meta.enum-member.typespec</string>
        <key>begin</key>
        <string>(?:(\b[_$[:alpha:]][_$[:alnum:]]*\b|`(?:[^`\\]|\\.)*`)\s*(:?))</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.name.tsp</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.type.annotation.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-annotation</string>
          </dict>
        </array>
      </dict>
      <key>enum-statement</key>
      <dict>
        <key>name</key>
        <string>meta.enum-statement.typespec</string>
        <key>begin</key>
        <string>\b(enum)\b\s+(\b[_$[:alpha:]][_$[:alnum:]]*\b|`(?:[^`\\]|\\.)*`)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=\})|(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#enum-body</string>
          </dict>
        </array>
      </dict>
      <key>escape-character</key>
      <dict>
        <key>name</key>
        <string>constant.character.escape.tsp</string>
        <key>match</key>
        <string>\\.</string>
      </dict>
      <key>expression</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#directive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#parenthesized-expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#valueof</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#typeof</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-arguments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#object-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#tuple-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#tuple-expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#model-expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#callExpression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#identifier-expression</string>
          </dict>
        </array>
      </dict>
      <key>function-call</key>
      <dict>
        <key>name</key>
        <string>meta.function-call.typespec</string>
        <key>begin</key>
        <string>(\b[_$[:alpha:]][_$[:alnum:]]*\b|`(?:[^`\\]|\\.)*`)\s*(\()</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.tsp</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.open.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.close.tsp</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>function-declaration-statement</key>
      <dict>
        <key>name</key>
        <string>meta.function-declaration-statement.typespec</string>
        <key>begin</key>
        <string>(?:(extern)\s+)?\b(fn)\b\s+(\b[_$[:alpha:]][_$[:alnum:]]*\b|`(?:[^`\\]|\\.)*`)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operation-parameters</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-annotation</string>
          </dict>
        </array>
      </dict>
      <key>identifier-expression</key>
      <dict>
        <key>name</key>
        <string>entity.name.type.tsp</string>
        <key>match</key>
        <string>\b[_$[:alpha:]][_$[:alnum:]]*\b|`(?:[^`\\]|\\.)*`</string>
      </dict>
      <key>if-expression</key>
      <dict>
        <key>name</key>
        <string>meta.if-expression.typespec</string>
        <key>begin</key>
        <string>\b(if)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>((?&lt;=\})|(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#projection-expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#projection-body</string>
          </dict>
        </array>
      </dict>
      <key>import-statement</key>
      <dict>
        <key>name</key>
        <string>meta.import-statement.typespec</string>
        <key>begin</key>
        <string>\b(import)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
        </array>
      </dict>
      <key>interface-body</key>
      <dict>
        <key>name</key>
        <string>meta.interface-body.typespec</string>
        <key>begin</key>
        <string>\{</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.curlybrace.open.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\}</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.curlybrace.close.tsp</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#directive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#decorator</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#interface-member</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-semicolon</string>
          </dict>
        </array>
      </dict>
      <key>interface-heritage</key>
      <dict>
        <key>name</key>
        <string>meta.interface-heritage.typespec</string>
        <key>begin</key>
        <string>\b(extends)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>((?=\{)|(?=;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>interface-member</key>
      <dict>
        <key>name</key>
        <string>meta.interface-member.typespec</string>
        <key>begin</key>
        <string>(?:\b(op)\b\s+)?(\b[_$[:alpha:]][_$[:alnum:]]*\b|`(?:[^`\\]|\\.)*`)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operation-signature</string>
          </dict>
        </array>
      </dict>
      <key>interface-statement</key>
      <dict>
        <key>name</key>
        <string>meta.interface-statement.typespec</string>
        <key>begin</key>
        <string>\b(interface)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=\})|(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-parameters</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#interface-heritage</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#interface-body</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>line-comment</key>
      <dict>
        <key>name</key>
        <string>comment.line.double-slash.tsp</string>
        <key>match</key>
        <string>//.*$</string>
      </dict>
      <key>model-expression</key>
      <dict>
        <key>name</key>
        <string>meta.model-expression.typespec</string>
        <key>begin</key>
        <string>\{</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.curlybrace.open.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\}</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.curlybrace.close.tsp</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#model-property</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#directive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#decorator</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#spread-operator</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-semicolon</string>
          </dict>
        </array>
      </dict>
      <key>model-heritage</key>
      <dict>
        <key>name</key>
        <string>meta.model-heritage.typespec</string>
        <key>begin</key>
        <string>\b(extends|is)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>((?=\{)|(?=;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>model-property</key>
      <dict>
        <key>name</key>
        <string>meta.model-property.typespec</string>
        <key>begin</key>
        <string>(?:(\b[_$[:alpha:]][_$[:alnum:]]*\b|`(?:[^`\\]|\\.)*`)|(\"(?:[^\"\\]|\\.)*\"))</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.name.tsp</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>string.quoted.double.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-annotation</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operator-assignment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>model-statement</key>
      <dict>
        <key>name</key>
        <string>meta.model-statement.typespec</string>
        <key>begin</key>
        <string>\b(model)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=\})|(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-parameters</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#model-heritage</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>namespace-body</key>
      <dict>
        <key>name</key>
        <string>meta.namespace-body.typespec</string>
        <key>begin</key>
        <string>\{</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.curlybrace.open.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\}</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.curlybrace.close.tsp</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#statement</string>
          </dict>
        </array>
      </dict>
      <key>namespace-name</key>
      <dict>
        <key>name</key>
        <string>meta.namespace-name.typespec</string>
        <key>begin</key>
        <string>(?=[_$[:alpha:]])</string>
        <key>end</key>
        <string>((?=\{)|(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#identifier-expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-accessor</string>
          </dict>
        </array>
      </dict>
      <key>namespace-statement</key>
      <dict>
        <key>name</key>
        <string>meta.namespace-statement.typespec</string>
        <key>begin</key>
        <string>\b(namespace)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>((?&lt;=\})|(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#namespace-name</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#namespace-body</string>
          </dict>
        </array>
      </dict>
      <key>numeric-literal</key>
      <dict>
        <key>name</key>
        <string>constant.numeric.tsp</string>
        <key>match</key>
        <string>(?:\b(?&lt;!\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\b(?!\$)|\b(?&lt;!\$)0(?:b|B)[01][01_]*(n)?\b(?!\$)|(?&lt;!\$)(?:(?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|(?:\b[0-9][0-9_]*(\.)[eE][+-]?[0-9][0-9_]*(n)?\b)|(?:\B(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|(?:\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|(?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*(n)?\b)|(?:\b[0-9][0-9_]*(\.)(n)?\B)|(?:\B(\.)[0-9][0-9_]*(n)?\b)|(?:\b[0-9][0-9_]*(n)?\b(?!\.)))(?!\$))</string>
      </dict>
      <key>object-literal</key>
      <dict>
        <key>name</key>
        <string>meta.object-literal.typespec</string>
        <key>begin</key>
        <string>#\{</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.hashcurlybrace.open.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\}</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.curlybrace.close.tsp</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#object-literal-property</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#directive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#spread-operator</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>object-literal-property</key>
      <dict>
        <key>name</key>
        <string>meta.object-literal-property.typespec</string>
        <key>begin</key>
        <string>(?:(\b[_$[:alpha:]][_$[:alnum:]]*\b|`(?:[^`\\]|\\.)*`)\s*(:))</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.name.tsp</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.type.annotation.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>operation-heritage</key>
      <dict>
        <key>name</key>
        <string>meta.operation-heritage.typespec</string>
        <key>begin</key>
        <string>\b(is)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>operation-parameters</key>
      <dict>
        <key>name</key>
        <string>meta.operation-parameters.typespec</string>
        <key>begin</key>
        <string>\(</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.open.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.close.tsp</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#decorator</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#model-property</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#spread-operator</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>operation-signature</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#type-parameters</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operation-heritage</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operation-parameters</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-annotation</string>
          </dict>
        </array>
      </dict>
      <key>operation-statement</key>
      <dict>
        <key>name</key>
        <string>meta.operation-statement.typespec</string>
        <key>begin</key>
        <string>\b(op)\b\s+(\b[_$[:alpha:]][_$[:alnum:]]*\b|`(?:[^`\\]|\\.)*`)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operation-signature</string>
          </dict>
        </array>
      </dict>
      <key>operator-assignment</key>
      <dict>
        <key>name</key>
        <string>keyword.operator.assignment.tsp</string>
        <key>match</key>
        <string>=</string>
      </dict>
      <key>parenthesized-expression</key>
      <dict>
        <key>name</key>
        <string>meta.parenthesized-expression.typespec</string>
        <key>begin</key>
        <string>\(</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.open.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.close.tsp</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>projection</key>
      <dict>
        <key>name</key>
        <string>meta.projection.typespec</string>
        <key>begin</key>
        <string>(from|to)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>((?&lt;=\})|(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#projection-parameters</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#projection-body</string>
          </dict>
        </array>
      </dict>
      <key>projection-body</key>
      <dict>
        <key>name</key>
        <string>meta.projection-body.typespec</string>
        <key>begin</key>
        <string>\{</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.curlybrace.open.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\}</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.curlybrace.close.tsp</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#projection-expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-semicolon</string>
          </dict>
        </array>
      </dict>
      <key>projection-expression</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#else-if-expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#if-expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#else-expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#function-call</string>
          </dict>
        </array>
      </dict>
      <key>projection-parameter</key>
      <dict>
        <key>name</key>
        <string>meta.projection-parameter.typespec</string>
        <key>begin</key>
        <string>(\b[_$[:alpha:]][_$[:alnum:]]*\b|`(?:[^`\\]|\\.)*`)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.name.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=\))|(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array/>
      </dict>
      <key>projection-parameters</key>
      <dict>
        <key>name</key>
        <string>meta.projection-parameters.typespec</string>
        <key>begin</key>
        <string>\(</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.open.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.close.tsp</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#projection-parameter</string>
          </dict>
        </array>
      </dict>
      <key>projection-statement</key>
      <dict>
        <key>name</key>
        <string>meta.projection-statement.typespec</string>
        <key>begin</key>
        <string>\b(projection)\b\s+(\b[_$[:alpha:]][_$[:alnum:]]*\b|`(?:[^`\\]|\\.)*`)(#)(\b[_$[:alpha:]][_$[:alnum:]]*\b|`(?:[^`\\]|\\.)*`)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.selector.tsp</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>variable.name.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>((?&lt;=\})|(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#projection-statement-body</string>
          </dict>
        </array>
      </dict>
      <key>projection-statement-body</key>
      <dict>
        <key>name</key>
        <string>meta.projection-statement-body.typespec</string>
        <key>begin</key>
        <string>\{</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.curlybrace.open.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\}</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.curlybrace.close.tsp</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#projection</string>
          </dict>
        </array>
      </dict>
      <key>punctuation-accessor</key>
      <dict>
        <key>name</key>
        <string>punctuation.accessor.tsp</string>
        <key>match</key>
        <string>\.</string>
      </dict>
      <key>punctuation-comma</key>
      <dict>
        <key>name</key>
        <string>punctuation.comma.tsp</string>
        <key>match</key>
        <string>,</string>
      </dict>
      <key>punctuation-semicolon</key>
      <dict>
        <key>name</key>
        <string>punctuation.terminator.statement.tsp</string>
        <key>match</key>
        <string>;</string>
      </dict>
      <key>scalar-body</key>
      <dict>
        <key>name</key>
        <string>meta.scalar-body.typespec</string>
        <key>begin</key>
        <string>\{</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.curlybrace.open.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\}</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.curlybrace.close.tsp</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#directive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#scalar-constructor</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-semicolon</string>
          </dict>
        </array>
      </dict>
      <key>scalar-constructor</key>
      <dict>
        <key>name</key>
        <string>meta.scalar-constructor.typespec</string>
        <key>begin</key>
        <string>\b(init)\b\s+(\b[_$[:alpha:]][_$[:alnum:]]*\b|`(?:[^`\\]|\\.)*`)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operation-parameters</string>
          </dict>
        </array>
      </dict>
      <key>scalar-extends</key>
      <dict>
        <key>name</key>
        <string>meta.scalar-extends.typespec</string>
        <key>begin</key>
        <string>\b(extends)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>scalar-statement</key>
      <dict>
        <key>name</key>
        <string>meta.scalar-statement.typespec</string>
        <key>begin</key>
        <string>\b(scalar)\b\s+(\b[_$[:alpha:]][_$[:alnum:]]*\b|`(?:[^`\\]|\\.)*`)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=\})|(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-parameters</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#scalar-extends</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#scalar-body</string>
          </dict>
        </array>
      </dict>
      <key>spread-operator</key>
      <dict>
        <key>name</key>
        <string>meta.spread-operator.typespec</string>
        <key>begin</key>
        <string>\.\.\.</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.spread.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>statement</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#directive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#augment-decorator-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#decorator</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#model-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#scalar-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#union-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#interface-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#enum-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#alias-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#const-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#namespace-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operation-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#import-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#using-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#decorator-declaration-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#function-declaration-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#projection-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-semicolon</string>
          </dict>
        </array>
      </dict>
      <key>string-literal</key>
      <dict>
        <key>name</key>
        <string>string.quoted.double.tsp</string>
        <key>begin</key>
        <string>"</string>
        <key>end</key>
        <string>"|$</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#template-expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#escape-character</string>
          </dict>
        </array>
      </dict>
      <key>template-expression</key>
      <dict>
        <key>name</key>
        <string>meta.template-expression.typespec</string>
        <key>begin</key>
        <string>\$\{</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.template-expression.begin.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\}</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.template-expression.end.tsp</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>token</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#doc-comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#line-comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#block-comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#triple-quoted-string-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#boolean-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#numeric-literal</string>
          </dict>
        </array>
      </dict>
      <key>triple-quoted-string-literal</key>
      <dict>
        <key>name</key>
        <string>string.quoted.triple.tsp</string>
        <key>begin</key>
        <string>"""</string>
        <key>end</key>
        <string>"""</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#template-expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#escape-character</string>
          </dict>
        </array>
      </dict>
      <key>tuple-expression</key>
      <dict>
        <key>name</key>
        <string>meta.tuple-expression.typespec</string>
        <key>begin</key>
        <string>\[</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.squarebracket.open.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\]</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.squarebracket.close.tsp</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>tuple-literal</key>
      <dict>
        <key>name</key>
        <string>meta.tuple-literal.typespec</string>
        <key>begin</key>
        <string>#\[</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.hashsquarebracket.open.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\]</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.squarebracket.close.tsp</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>type-annotation</key>
      <dict>
        <key>name</key>
        <string>meta.type-annotation.typespec</string>
        <key>begin</key>
        <string>\s*(\??)\s*(:)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.optional.tsp</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.type.annotation.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=,|;|@|\)|\}|=|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>type-argument</key>
      <dict>
        <key>name</key>
        <string>meta.type-argument.typespec</string>
        <key>begin</key>
        <string>(?:(\b[_$[:alpha:]][_$[:alnum:]]*\b|`(?:[^`\\]|\\.)*`)\s*(=))</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.tsp</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=&gt;)|(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.tsp</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>type-arguments</key>
      <dict>
        <key>name</key>
        <string>meta.type-arguments.typespec</string>
        <key>begin</key>
        <string>&lt;</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.typeparameters.begin.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>&gt;</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.typeparameters.end.tsp</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#type-argument</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>type-parameter</key>
      <dict>
        <key>name</key>
        <string>meta.type-parameter.typespec</string>
        <key>begin</key>
        <string>(\b[_$[:alpha:]][_$[:alnum:]]*\b|`(?:[^`\\]|\\.)*`)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=&gt;)|(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-parameter-constraint</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-parameter-default</string>
          </dict>
        </array>
      </dict>
      <key>type-parameter-constraint</key>
      <dict>
        <key>name</key>
        <string>meta.type-parameter-constraint.typespec</string>
        <key>begin</key>
        <string>extends</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=&gt;)|(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>type-parameter-default</key>
      <dict>
        <key>name</key>
        <string>meta.type-parameter-default.typespec</string>
        <key>begin</key>
        <string>=</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=&gt;)|(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>type-parameters</key>
      <dict>
        <key>name</key>
        <string>meta.type-parameters.typespec</string>
        <key>begin</key>
        <string>&lt;</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.typeparameters.begin.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>&gt;</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.typeparameters.end.tsp</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#type-parameter</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>typeof</key>
      <dict>
        <key>name</key>
        <string>meta.typeof.typespec</string>
        <key>begin</key>
        <string>\b(typeof)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=&gt;)|(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>union-body</key>
      <dict>
        <key>name</key>
        <string>meta.union-body.typespec</string>
        <key>begin</key>
        <string>\{</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.curlybrace.open.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\}</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.curlybrace.close.tsp</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#union-variant</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#directive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#decorator</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>union-statement</key>
      <dict>
        <key>name</key>
        <string>meta.union-statement.typespec</string>
        <key>begin</key>
        <string>\b(union)\b\s+(\b[_$[:alpha:]][_$[:alnum:]]*\b|`(?:[^`\\]|\\.)*`)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=\})|(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#union-body</string>
          </dict>
        </array>
      </dict>
      <key>union-variant</key>
      <dict>
        <key>name</key>
        <string>meta.union-variant.typespec</string>
        <key>begin</key>
        <string>(?:(\b[_$[:alpha:]][_$[:alnum:]]*\b|`(?:[^`\\]|\\.)*`)\s*(:))</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.name.tsp</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.type.annotation.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>using-statement</key>
      <dict>
        <key>name</key>
        <string>meta.using-statement.typespec</string>
        <key>begin</key>
        <string>\b(using)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#token</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#identifier-expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-accessor</string>
          </dict>
        </array>
      </dict>
      <key>valueof</key>
      <dict>
        <key>name</key>
        <string>meta.valueof.typespec</string>
        <key>begin</key>
        <string>\b(valueof)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.tsp</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=&gt;)|(?=,|;|@|\)|\}|\b(?:extern)\b|\b(?:namespace|model|op|using|import|enum|alias|union|interface|dec|fn)\b)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
    </dict>
  </dict>
</plist>