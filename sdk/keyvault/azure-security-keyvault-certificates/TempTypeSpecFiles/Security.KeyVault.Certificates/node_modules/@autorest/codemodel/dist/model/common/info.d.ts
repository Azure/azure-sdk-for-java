import { Initializer, DeepPartial } from "@azure-tools/codegen";
import { Extensions } from "./extensions";
import { ExternalDocumentation } from "./external-documentation";
import { uri } from "./uri";
export type email = string;
/** contact information  */
export interface Contact extends Extensions {
    name?: string;
    url?: uri;
    email?: email;
}
/** license information  */
export interface License extends Extensions {
    /** the nameof the license */
    name: string;
    /** an uri pointing to the full license text */
    url?: uri;
}
/** code model information */
export interface Info extends Extensions {
    /** the title of this service. */
    title: string;
    /** a text description of the service  */
    description?: string;
    /** an uri to the terms of service specified to access the service */
    termsOfService?: uri;
    /** contact information for the service */
    contact?: Contact;
    /** license information for th service */
    license?: License;
    /** External Documentation  */
    externalDocs?: ExternalDocumentation;
}
export declare class Contact extends Initializer implements Contact {
    constructor(initializer?: DeepPartial<Contact>);
}
export declare class Info extends Initializer implements Info {
    title: string;
    constructor(title: string, initializer?: DeepPartial<Info>);
}
export declare class License extends Initializer implements License {
    name: string;
    constructor(name: string, initializer?: DeepPartial<License>);
}
//# sourceMappingURL=info.d.ts.map