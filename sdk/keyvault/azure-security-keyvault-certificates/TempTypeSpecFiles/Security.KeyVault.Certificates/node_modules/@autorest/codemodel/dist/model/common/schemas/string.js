"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArmIdSchema = exports.UuidSchema = exports.UriSchema = exports.CredentialSchema = exports.ODataQuerySchema = exports.StringSchema = void 0;
const schema_1 = require("../schema");
const schema_type_1 = require("../schema-type");
class StringSchema extends schema_1.PrimitiveSchema {
    constructor(name, description, objectInitializer) {
        super(name, description, schema_type_1.SchemaType.String);
        this.apply(objectInitializer);
    }
}
exports.StringSchema = StringSchema;
class ODataQuerySchema extends schema_1.Schema {
    constructor(name, description, objectInitializer) {
        super(name, description, schema_type_1.SchemaType.ODataQuery);
        this.apply(objectInitializer);
    }
}
exports.ODataQuerySchema = ODataQuerySchema;
class CredentialSchema extends schema_1.PrimitiveSchema {
    constructor(name, description, objectInitializer) {
        super(name, description, schema_type_1.SchemaType.Credential);
        this.apply(objectInitializer);
    }
}
exports.CredentialSchema = CredentialSchema;
class UriSchema extends schema_1.PrimitiveSchema {
    constructor(name, description, objectInitializer) {
        super(name, description, schema_type_1.SchemaType.Uri);
        this.apply(objectInitializer);
    }
}
exports.UriSchema = UriSchema;
class UuidSchema extends schema_1.PrimitiveSchema {
    constructor(name, description, objectInitializer) {
        super(name, description, schema_type_1.SchemaType.Uuid);
        this.apply(objectInitializer);
    }
}
exports.UuidSchema = UuidSchema;
class ArmIdSchema extends schema_1.PrimitiveSchema {
    constructor(name, description, objectInitializer) {
        super(name, description, schema_type_1.SchemaType.ArmId);
        this.apply(objectInitializer);
    }
}
exports.ArmIdSchema = ArmIdSchema;
//# sourceMappingURL=string.js.map