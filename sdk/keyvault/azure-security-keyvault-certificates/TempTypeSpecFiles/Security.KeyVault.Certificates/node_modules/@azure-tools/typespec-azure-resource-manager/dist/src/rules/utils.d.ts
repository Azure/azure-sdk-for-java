import { DecoratorArgument, Interface, Model, ModelProperty, Namespace, Operation, Program } from "@typespec/compiler";
import { ArmResourceDetails } from "../resource.js";
/**
 *
 *@param target
 *@returns true if the operation is defined on a templated interface which hasn't had args filled in
 */
export declare function isTemplatedInterfaceOperation(target: Operation): boolean | undefined;
export declare function isTrackedResource(resourceType: Model): boolean;
export declare function isResource(resourceType: Model): boolean;
export declare function isResourceOperation(program: Program, op: Operation): boolean;
export declare function getProperties(model: Model): ModelProperty[];
export declare function getInterface(res: ArmResourceDetails): Interface | undefined;
export declare function getSourceModel(property: ModelProperty): Model | undefined;
export declare function getSourceProperty(property: ModelProperty): ModelProperty;
export declare function isInternalTypeSpec(program: Program, type: Model | Operation | ModelProperty | Interface | Namespace): boolean;
export declare function getNamespaceName(program: Program, type: Model | Operation | ModelProperty | Interface | Namespace | undefined): string;
export declare function isValidKey(key: string): boolean;
export declare function getDecoratorParam(type: Model | ModelProperty, name: string): DecoratorArgument | undefined;
//# sourceMappingURL=utils.d.ts.map