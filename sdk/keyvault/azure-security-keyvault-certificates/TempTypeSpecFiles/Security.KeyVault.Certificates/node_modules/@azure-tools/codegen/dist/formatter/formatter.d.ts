export type Styler = (identifier: string | Array<string>, removeDuplicates: boolean | undefined, overrides: Record<string, string> | undefined) => string;
export declare class Style {
    static select(style: any, fallback: Styler, maxUppercasePreserve: number): Styler;
    static kebab(identifier: string | Array<string>, removeDuplicates?: boolean, overrides?: Record<string, string>, maxUppercasePreserve?: number): string;
    static space(identifier: string | Array<string>, removeDuplicates?: boolean, overrides?: Record<string, string>, maxUppercasePreserve?: number): string;
    static snake(identifier: string | Array<string>, removeDuplicates?: boolean, overrides?: Record<string, string>, maxUppercasePreserve?: number): string;
    static upper(identifier: string | Array<string>, removeDuplicates?: boolean, overrides?: Record<string, string>, maxUppercasePreserve?: number): string;
    static pascal(identifier: string | Array<string>, removeDuplicates?: boolean, overrides?: Record<string, string>, maxUppercasePreserve?: number): string;
    static camel(identifier: string | Array<string>, removeDuplicates?: boolean, overrides?: Record<string, string>, maxUppercasePreserve?: number): string;
}
//# sourceMappingURL=formatter.d.ts.map