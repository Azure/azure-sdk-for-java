import { Program, Type } from "@typespec/compiler";
import { ExampleDecorator, UseRefDecorator } from "../generated-defs/Autorest.js";
export declare const namespace = "Autorest";
export interface Example {
    pathOrUri: string;
    title: string;
}
/**
 * `@example` - attaches example files to an operation. Multiple examples can be specified.
 *
 * @param {string} pathOrUri - path or Uri to the example file.
 * @param {string} title - name or description of the example file.
 *
 * `@example` can be specified on Operations.
 */
export declare const $example: ExampleDecorator;
export declare function getExamples(program: Program, entity: Type): Example[] | undefined;
/**
 * `@useRef` - is used to replace the TypeSpec model type in emitter output with a pre-existing named OpenAPI schema such as ARM common types.
 *
 * @param {string} jsonRef - path or Uri to an OpenAPI schema.
 *
 * `@useRef` can be specified on Models and ModelProperty.
 */
export declare const $useRef: UseRefDecorator;
export declare function getRef(program: Program, entity: Type): string | undefined;
//# sourceMappingURL=decorators.d.ts.map