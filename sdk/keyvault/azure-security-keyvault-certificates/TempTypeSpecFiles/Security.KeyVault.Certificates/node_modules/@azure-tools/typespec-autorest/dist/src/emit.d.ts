import { EmitContext, Program } from "@typespec/compiler";
import { AutorestEmitterOptions } from "./lib.js";
import { AutorestDocumentEmitterOptions } from "./openapi.js";
import type { AutorestServiceRecord } from "./types.js";
/**
 * Extended options specific to the emitting of the typespec-autorest emitter
 */
interface ResolvedAutorestEmitterOptions extends AutorestDocumentEmitterOptions {
    readonly azureResourceProviderFolder?: string;
    /**
     * Set the newline character for emitting files.
     * @default lf
     */
    readonly newLine?: "crlf" | "lf";
    readonly outputDir: string;
    readonly outputFile: string;
    readonly version?: string;
}
export declare function $onEmit(context: EmitContext<AutorestEmitterOptions>): Promise<void>;
export declare function resolveAutorestOptions(program: Program, emitterOutputDir: string, options: AutorestEmitterOptions): ResolvedAutorestEmitterOptions;
export declare function getAllServicesAtAllVersions(program: Program, options: ResolvedAutorestEmitterOptions): Promise<AutorestServiceRecord[]>;
export {};
//# sourceMappingURL=emit.d.ts.map