export declare class Exception extends Error {
    exitCode: number;
    constructor(message: string, exitCode?: number);
}
export declare class TypeException extends Exception {
    constructor(code: string, name: string, expectedType: string, instance?: any);
}
export declare class OperationCanceledException extends Exception {
    exitCode: number;
    constructor(message?: string, exitCode?: number);
}
export declare class OutstandingTaskAlreadyCompletedException extends Exception {
    constructor();
}
export declare class OperationAbortedException extends Exception {
    constructor();
}
export declare class AggregateException extends Exception {
    errors: Array<any>;
    constructor(errors: Array<any>);
}
export declare class ExclusiveLockUnavailableException extends Exception {
    constructor(resource: string, timeout: number);
}
export declare class SharedLockUnavailableException extends Exception {
    constructor(resource: string, timeout: number);
}
//# sourceMappingURL=exception.d.ts.map