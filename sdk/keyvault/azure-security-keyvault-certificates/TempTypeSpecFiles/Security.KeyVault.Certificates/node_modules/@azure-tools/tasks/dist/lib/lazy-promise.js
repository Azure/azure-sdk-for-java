"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.LazyPromise = void 0;
class LazyPromise {
    constructor(factory) {
        this.factory = factory;
        this.promise = null;
    }
    finally(onfinally) {
        return this.getValue().finally(onfinally);
    }
    getValue() {
        if (this.promise === null) {
            this.promise = this.factory();
        }
        return this.promise;
    }
    get [Symbol.toStringTag]() {
        return this.getValue()[Symbol.toStringTag];
    }
    then(onfulfilled, onrejected) {
        return this.getValue().then(onfulfilled, onrejected);
    }
    catch(onrejected) {
        return this.getValue().catch(onrejected);
    }
}
exports.LazyPromise = LazyPromise;
//# sourceMappingURL=lazy-promise.js.map