// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.security.keyvault.keys.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.security.keyvault.keys.implementation.KeyAttestationHelper;

/**
 * The key attestation information.
 */
@Fluent
public final class KeyAttestation {
    static {
        KeyAttestationHelper.setAccessor(new KeyAttestationHelper.KeyAttestationAccessor() {
            @Override
            public KeyAttestation
                createKeyAttestation(com.azure.security.keyvault.keys.implementation.models.KeyAttestation impl) {
                return new KeyAttestation(impl);
            }
        });
    }

    private final byte[] certificatePemFile;
    private final byte[] privateKeyAttestation;
    private final byte[] publicKeyAttestation;
    private final String version;

    /**
     * Creates an instance of {@link KeyAttestation}.
     */
    public KeyAttestation() {
        this(new com.azure.security.keyvault.keys.implementation.models.KeyAttestation());
    }

    KeyAttestation(com.azure.security.keyvault.keys.implementation.models.KeyAttestation impl) {
        this.certificatePemFile = impl.getCertificatePemFile();
        this.privateKeyAttestation = impl.getPrivateKeyAttestation();
        this.publicKeyAttestation = impl.getPublicKeyAttestation();
        this.version = impl.getVersion();
    }

    /**
     * Get a base64url-encoded string containing certificates in PEM format, used for attestation validation.
     *
     * @return The certificates in PEM format.
     */
    public byte[] getCertificatePemFile() {
        return CoreUtils.clone(this.certificatePemFile);
    }

    /**
     * Get the attestation blob bytes encoded as base64url string corresponding to a private key.
     *
     * @return The attestation blob bytes for the private portion of the key.
     */
    public byte[] getPrivateKeyAttestation() {
        return CoreUtils.clone(this.privateKeyAttestation);
    }

    /**
     * Get the attestation blob bytes encoded as base64url string corresponding to a public key in case of asymmetric
     * key.
     *
     * @return The attestation blob bytes for the public portion of the key.
     */
    public byte[] getPublicKeyAttestation() {
        return CoreUtils.clone(this.publicKeyAttestation);
    }

    /**
     * Get the version of the attestation.
     *
     * @return The version of the attestation.
     */
    public String getVersion() {
        return this.version;
    }
}
