// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.v2.security.keyvault.secrets.models;

import io.clientcore.core.annotations.Metadata;
import io.clientcore.core.annotations.TypeConditions;
import io.clientcore.core.serialization.json.JsonReader;
import io.clientcore.core.serialization.json.JsonSerializable;
import io.clientcore.core.serialization.json.JsonToken;
import io.clientcore.core.serialization.json.JsonWriter;
import java.io.IOException;

/**
 * The KeyVaultErrorError model.
 */
@Metadata(conditions = { TypeConditions.IMMUTABLE })
public final class KeyVaultErrorError implements JsonSerializable<KeyVaultErrorError> {
    /*
     * The error code.
     */
    @Metadata(generated = true)
    private String code;

    /*
     * The error message.
     */
    @Metadata(generated = true)
    private String message;

    /*
     * The key vault server error.
     */
    @Metadata(generated = true)
    private KeyVaultErrorError innerError;

    /**
     * Creates an instance of KeyVaultErrorError class.
     */
    @Metadata(generated = true)
    private KeyVaultErrorError() {
    }

    /**
     * Get the code property: The error code.
     * 
     * @return the code value.
     */
    @Metadata(generated = true)
    public String getCode() {
        return this.code;
    }

    /**
     * Get the message property: The error message.
     * 
     * @return the message value.
     */
    @Metadata(generated = true)
    public String getMessage() {
        return this.message;
    }

    /**
     * Get the innerError property: The key vault server error.
     * 
     * @return the innerError value.
     */
    @Metadata(generated = true)
    public KeyVaultErrorError getInnerError() {
        return this.innerError;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of KeyVaultErrorError from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of KeyVaultErrorError if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the KeyVaultErrorError.
     */
    @Metadata(generated = true)
    public static KeyVaultErrorError fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            KeyVaultErrorError deserializedKeyVaultErrorError = new KeyVaultErrorError();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("code".equals(fieldName)) {
                    deserializedKeyVaultErrorError.code = reader.getString();
                } else if ("message".equals(fieldName)) {
                    deserializedKeyVaultErrorError.message = reader.getString();
                } else if ("innererror".equals(fieldName)) {
                    deserializedKeyVaultErrorError.innerError = KeyVaultErrorError.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedKeyVaultErrorError;
        });
    }
}
