// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.v2.security.keyvault.keys.models;

import io.clientcore.core.annotations.Metadata;
import io.clientcore.core.utils.ExpandableEnum;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Map;
import java.util.Objects;
import java.util.concurrent.ConcurrentHashMap;
import java.util.function.Function;

/**
 * Elliptic curve name. For valid values, see JsonWebKeyCurveName.
 */
public final class KeyCurveName implements ExpandableEnum<String> {
    private static final Map<String, KeyCurveName> VALUES = new ConcurrentHashMap<>();

    private static final Function<String, KeyCurveName> NEW_INSTANCE = KeyCurveName::new;

    /**
     * The NIST P-256 elliptic curve, AKA SECG curve SECP256R1.
     */
    @Metadata(generated = true)
    public static final KeyCurveName P256 = fromValue("P-256");

    /**
     * The NIST P-384 elliptic curve, AKA SECG curve SECP384R1.
     */
    @Metadata(generated = true)
    public static final KeyCurveName P384 = fromValue("P-384");

    /**
     * The NIST P-521 elliptic curve, AKA SECG curve SECP521R1.
     */
    @Metadata(generated = true)
    public static final KeyCurveName P521 = fromValue("P-521");

    /**
     * The SECG SECP256K1 elliptic curve.
     */
    @Metadata(generated = true)
    public static final KeyCurveName P256_K = fromValue("P-256K");

    private final String value;

    private KeyCurveName(String value) {
        this.value = value;
    }

    /**
     * Creates or finds a KeyCurveName.
     * 
     * @param value a value to look for.
     * @return the corresponding KeyCurveName.
     * @throws IllegalArgumentException if value is null.
     */
    @Metadata(generated = true)
    public static KeyCurveName fromValue(String value) {
        if (value == null) {
            throw new IllegalArgumentException("'value' cannot be null.");
        }
        return VALUES.computeIfAbsent(value, NEW_INSTANCE);
    }

    /**
     * Gets known KeyCurveName values.
     * 
     * @return Known KeyCurveName values.
     */
    @Metadata(generated = true)
    public static Collection<KeyCurveName> values() {
        return new ArrayList<>(VALUES.values());
    }

    /**
     * Gets the value of the KeyCurveName instance.
     * 
     * @return the value of the KeyCurveName instance.
     */
    @Metadata(generated = true)
    @Override
    public String getValue() {
        return this.value;
    }

    @Metadata(generated = true)
    @Override
    public String toString() {
        return Objects.toString(this.value);
    }

    @Metadata(generated = true)
    @Override
    public boolean equals(Object obj) {
        return this == obj;
    }

    @Metadata(generated = true)
    @Override
    public int hashCode() {
        return Objects.hashCode(this.value);
    }
}
