// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databoxedge.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.databoxedge.models.MetricAggregationType;
import com.azure.resourcemanager.databoxedge.models.MetricCategory;
import com.azure.resourcemanager.databoxedge.models.MetricDimensionV1;
import com.azure.resourcemanager.databoxedge.models.MetricSpecificationV1;
import com.azure.resourcemanager.databoxedge.models.MetricUnit;
import com.azure.resourcemanager.databoxedge.models.ServiceSpecification;
import com.azure.resourcemanager.databoxedge.models.TimeGrain;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ServiceSpecificationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServiceSpecification model = BinaryData.fromString(
            "{\"metricSpecifications\":[{\"name\":\"fxxypininmayhuy\",\"displayName\":\"kpode\",\"displayDescription\":\"oginuvamiheognar\",\"unit\":\"Percent\",\"aggregationType\":\"Total\",\"dimensions\":[{\"name\":\"usivye\",\"displayName\":\"ciqihnhung\",\"toBeExportedForShoebox\":false}],\"fillGapWithZero\":true,\"category\":\"Transaction\",\"resourceIdDimensionNameOverride\":\"gxg\",\"supportedTimeGrainTypes\":[\"PT5M\",\"PT1H\",\"PT5M\",\"PT1H\"],\"supportedAggregationTypes\":[\"Count\",\"Average\"]}]}")
            .toObject(ServiceSpecification.class);
        Assertions.assertEquals("fxxypininmayhuy", model.metricSpecifications().get(0).name());
        Assertions.assertEquals("kpode", model.metricSpecifications().get(0).displayName());
        Assertions.assertEquals("oginuvamiheognar", model.metricSpecifications().get(0).displayDescription());
        Assertions.assertEquals(MetricUnit.PERCENT, model.metricSpecifications().get(0).unit());
        Assertions.assertEquals(MetricAggregationType.TOTAL, model.metricSpecifications().get(0).aggregationType());
        Assertions.assertEquals("usivye", model.metricSpecifications().get(0).dimensions().get(0).name());
        Assertions.assertEquals("ciqihnhung", model.metricSpecifications().get(0).dimensions().get(0).displayName());
        Assertions.assertEquals(false,
            model.metricSpecifications().get(0).dimensions().get(0).toBeExportedForShoebox());
        Assertions.assertEquals(true, model.metricSpecifications().get(0).fillGapWithZero());
        Assertions.assertEquals(MetricCategory.TRANSACTION, model.metricSpecifications().get(0).category());
        Assertions.assertEquals("gxg", model.metricSpecifications().get(0).resourceIdDimensionNameOverride());
        Assertions.assertEquals(TimeGrain.PT5M, model.metricSpecifications().get(0).supportedTimeGrainTypes().get(0));
        Assertions.assertEquals(MetricAggregationType.COUNT,
            model.metricSpecifications().get(0).supportedAggregationTypes().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServiceSpecification model = new ServiceSpecification()
            .withMetricSpecifications(Arrays.asList(new MetricSpecificationV1().withName("fxxypininmayhuy")
                .withDisplayName("kpode")
                .withDisplayDescription("oginuvamiheognar")
                .withUnit(MetricUnit.PERCENT)
                .withAggregationType(MetricAggregationType.TOTAL)
                .withDimensions(Arrays.asList(new MetricDimensionV1().withName("usivye")
                    .withDisplayName("ciqihnhung")
                    .withToBeExportedForShoebox(false)))
                .withFillGapWithZero(true)
                .withCategory(MetricCategory.TRANSACTION)
                .withResourceIdDimensionNameOverride("gxg")
                .withSupportedTimeGrainTypes(
                    Arrays.asList(TimeGrain.PT5M, TimeGrain.PT1H, TimeGrain.PT5M, TimeGrain.PT1H))
                .withSupportedAggregationTypes(
                    Arrays.asList(MetricAggregationType.COUNT, MetricAggregationType.AVERAGE))));
        model = BinaryData.fromObject(model).toObject(ServiceSpecification.class);
        Assertions.assertEquals("fxxypininmayhuy", model.metricSpecifications().get(0).name());
        Assertions.assertEquals("kpode", model.metricSpecifications().get(0).displayName());
        Assertions.assertEquals("oginuvamiheognar", model.metricSpecifications().get(0).displayDescription());
        Assertions.assertEquals(MetricUnit.PERCENT, model.metricSpecifications().get(0).unit());
        Assertions.assertEquals(MetricAggregationType.TOTAL, model.metricSpecifications().get(0).aggregationType());
        Assertions.assertEquals("usivye", model.metricSpecifications().get(0).dimensions().get(0).name());
        Assertions.assertEquals("ciqihnhung", model.metricSpecifications().get(0).dimensions().get(0).displayName());
        Assertions.assertEquals(false,
            model.metricSpecifications().get(0).dimensions().get(0).toBeExportedForShoebox());
        Assertions.assertEquals(true, model.metricSpecifications().get(0).fillGapWithZero());
        Assertions.assertEquals(MetricCategory.TRANSACTION, model.metricSpecifications().get(0).category());
        Assertions.assertEquals("gxg", model.metricSpecifications().get(0).resourceIdDimensionNameOverride());
        Assertions.assertEquals(TimeGrain.PT5M, model.metricSpecifications().get(0).supportedTimeGrainTypes().get(0));
        Assertions.assertEquals(MetricAggregationType.COUNT,
            model.metricSpecifications().get(0).supportedAggregationTypes().get(0));
    }
}
