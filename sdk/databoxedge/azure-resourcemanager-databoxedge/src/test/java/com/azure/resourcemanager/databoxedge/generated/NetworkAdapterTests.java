// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databoxedge.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.databoxedge.models.NetworkAdapter;
import com.azure.resourcemanager.databoxedge.models.NetworkAdapterDhcpStatus;
import com.azure.resourcemanager.databoxedge.models.NetworkAdapterRdmaStatus;
import org.junit.jupiter.api.Assertions;

public final class NetworkAdapterTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkAdapter model = BinaryData.fromString(
            "{\"adapterId\":\"hashsfwxosow\",\"adapterPosition\":{\"networkGroup\":\"NonRDMA\",\"port\":11356345},\"index\":229570932,\"nodeId\":\"oxdjebwpuc\",\"networkAdapterName\":\"fvovbvmeuecivy\",\"label\":\"ce\",\"macAddress\":\"jgjrwjueiotwm\",\"linkSpeed\":7939345805777152857,\"status\":\"Inactive\",\"rdmaStatus\":\"Incapable\",\"dhcpStatus\":\"Disabled\",\"ipv4Configuration\":{\"ipAddress\":\"jawgqwg\",\"subnet\":\"ni\",\"gateway\":\"x\"},\"ipv6Configuration\":{\"ipAddress\":\"py\",\"prefixLength\":1553337592,\"gateway\":\"wndnhj\"},\"ipv6LinkLocalAddress\":\"uwhvylwzbtdhxujz\",\"dnsServers\":[\"pow\",\"wpr\"]}")
            .toObject(NetworkAdapter.class);
        Assertions.assertEquals(NetworkAdapterRdmaStatus.INCAPABLE, model.rdmaStatus());
        Assertions.assertEquals(NetworkAdapterDhcpStatus.DISABLED, model.dhcpStatus());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkAdapter model = new NetworkAdapter().withRdmaStatus(NetworkAdapterRdmaStatus.INCAPABLE)
            .withDhcpStatus(NetworkAdapterDhcpStatus.DISABLED);
        model = BinaryData.fromObject(model).toObject(NetworkAdapter.class);
        Assertions.assertEquals(NetworkAdapterRdmaStatus.INCAPABLE, model.rdmaStatus());
        Assertions.assertEquals(NetworkAdapterDhcpStatus.DISABLED, model.dhcpStatus());
    }
}
