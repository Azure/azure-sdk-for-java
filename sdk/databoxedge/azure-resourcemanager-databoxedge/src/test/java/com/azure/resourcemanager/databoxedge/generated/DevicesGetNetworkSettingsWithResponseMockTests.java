// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databoxedge.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.databoxedge.DataBoxEdgeManager;
import com.azure.resourcemanager.databoxedge.models.NetworkSettings;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DevicesGetNetworkSettingsWithResponseMockTests {
    @Test
    public void testGetNetworkSettingsWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"networkAdapters\":[{\"adapterId\":\"dsofbshrns\",\"adapterPosition\":{\"networkGroup\":\"NonRDMA\",\"port\":674116789},\"index\":106815843,\"nodeId\":\"ybycnunvj\",\"networkAdapterName\":\"tkfa\",\"label\":\"opqgikyzirtxdyux\",\"macAddress\":\"jntpsewgioilqu\",\"linkSpeed\":6255358176857067581,\"status\":\"Inactive\",\"rdmaStatus\":\"Capable\",\"dhcpStatus\":\"Enabled\",\"ipv4Configuration\":{\"ipAddress\":\"orgguf\",\"subnet\":\"aomtbghhavgrvkff\",\"gateway\":\"jzhpjbibgjmfx\"},\"ipv6Configuration\":{\"ipAddress\":\"fcluyov\",\"prefixLength\":592416055,\"gateway\":\"kfezzxscyhwz\"},\"ipv6LinkLocalAddress\":\"irujbz\",\"dnsServers\":[\"vzzbtdcq\",\"pniyujviyl\",\"dshf\"]},{\"adapterId\":\"n\",\"adapterPosition\":{\"networkGroup\":\"None\",\"port\":1591431592},\"index\":934099618,\"nodeId\":\"sgaojfmwncot\",\"networkAdapterName\":\"fhir\",\"label\":\"ymoxoftpipiwyczu\",\"macAddress\":\"a\",\"linkSpeed\":5299678736839094769,\"status\":\"Active\",\"rdmaStatus\":\"Incapable\",\"dhcpStatus\":\"Disabled\",\"ipv4Configuration\":{\"ipAddress\":\"skasdvlmfwdgzxu\",\"subnet\":\"cvpa\",\"gateway\":\"sreuzvxurisjnh\"},\"ipv6Configuration\":{\"ipAddress\":\"xifqjzgxm\",\"prefixLength\":983459975,\"gateway\":\"lw\"},\"ipv6LinkLocalAddress\":\"esutrgjupauutpw\",\"dnsServers\":[\"ih\",\"jqgwzp\",\"fqntcyp\",\"xjvfoimwksl\"]}]},\"id\":\"rcizjxvyd\",\"name\":\"ceacvlhvygdy\",\"type\":\"t\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DataBoxEdgeManager manager = DataBoxEdgeManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        NetworkSettings response = manager.devices()
            .getNetworkSettingsWithResponse("thrrgh", "jbdhqxvc", com.azure.core.util.Context.NONE)
            .getValue();

    }
}
