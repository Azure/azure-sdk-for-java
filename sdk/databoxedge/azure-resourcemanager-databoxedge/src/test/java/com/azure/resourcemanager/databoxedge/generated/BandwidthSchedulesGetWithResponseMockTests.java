// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databoxedge.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.databoxedge.DataBoxEdgeManager;
import com.azure.resourcemanager.databoxedge.models.BandwidthSchedule;
import com.azure.resourcemanager.databoxedge.models.DayOfWeek;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class BandwidthSchedulesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"start\":\"vscx\",\"stop\":\"dmligovibrxk\",\"rateInMbps\":1905790619,\"days\":[\"Monday\",\"Friday\",\"Tuesday\",\"Friday\"]},\"id\":\"ruocbgo\",\"name\":\"rb\",\"type\":\"eoybfhjxakvvjgs\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DataBoxEdgeManager manager = DataBoxEdgeManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        BandwidthSchedule response = manager.bandwidthSchedules()
            .getWithResponse("azivjlfrqttbajl", "atnwxyiopi", "kqqfk", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("vscx", response.start());
        Assertions.assertEquals("dmligovibrxk", response.stop());
        Assertions.assertEquals(1905790619, response.rateInMbps());
        Assertions.assertEquals(DayOfWeek.MONDAY, response.days().get(0));
    }
}
