// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databoxedge.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.databoxedge.models.PeriodicTimerEventTrigger;
import com.azure.resourcemanager.databoxedge.models.PeriodicTimerSourceInfo;
import com.azure.resourcemanager.databoxedge.models.RoleSinkInfo;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class PeriodicTimerEventTriggerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PeriodicTimerEventTrigger model = BinaryData.fromString(
            "{\"kind\":\"PeriodicTimerEvent\",\"properties\":{\"sourceInfo\":{\"startTime\":\"2021-03-25T05:44:29Z\",\"schedule\":\"sybbqwr\",\"topic\":\"ldgmfpgvmpip\"},\"sinkInfo\":{\"roleId\":\"slthaq\"},\"customContextTag\":\"ss\"},\"id\":\"wutwbdsre\",\"name\":\"pdrhne\",\"type\":\"yowqkdwytisibir\"}")
            .toObject(PeriodicTimerEventTrigger.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-25T05:44:29Z"), model.sourceInfo().startTime());
        Assertions.assertEquals("sybbqwr", model.sourceInfo().schedule());
        Assertions.assertEquals("ldgmfpgvmpip", model.sourceInfo().topic());
        Assertions.assertEquals("slthaq", model.sinkInfo().roleId());
        Assertions.assertEquals("ss", model.customContextTag());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PeriodicTimerEventTrigger model = new PeriodicTimerEventTrigger()
            .withSourceInfo(new PeriodicTimerSourceInfo().withStartTime(OffsetDateTime.parse("2021-03-25T05:44:29Z"))
                .withSchedule("sybbqwr")
                .withTopic("ldgmfpgvmpip"))
            .withSinkInfo(new RoleSinkInfo().withRoleId("slthaq"))
            .withCustomContextTag("ss");
        model = BinaryData.fromObject(model).toObject(PeriodicTimerEventTrigger.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-25T05:44:29Z"), model.sourceInfo().startTime());
        Assertions.assertEquals("sybbqwr", model.sourceInfo().schedule());
        Assertions.assertEquals("ldgmfpgvmpip", model.sourceInfo().topic());
        Assertions.assertEquals("slthaq", model.sinkInfo().roleId());
        Assertions.assertEquals("ss", model.customContextTag());
    }
}
