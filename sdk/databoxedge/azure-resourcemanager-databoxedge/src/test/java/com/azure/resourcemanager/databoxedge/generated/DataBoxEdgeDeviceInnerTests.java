// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databoxedge.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.databoxedge.fluent.models.DataBoxEdgeDeviceInner;
import com.azure.resourcemanager.databoxedge.models.DataBoxEdgeDeviceStatus;
import com.azure.resourcemanager.databoxedge.models.Sku;
import com.azure.resourcemanager.databoxedge.models.SkuName;
import com.azure.resourcemanager.databoxedge.models.SkuTier;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class DataBoxEdgeDeviceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataBoxEdgeDeviceInner model = BinaryData.fromString(
            "{\"location\":\"ghmewuam\",\"tags\":{\"t\":\"rzayv\",\"ln\":\"gvdfgiotkftutq\",\"qmi\":\"xlefgugnxkrx\",\"abhjybi\":\"tthzrvqd\"},\"sku\":{\"name\":\"Edge\",\"tier\":\"Standard\"},\"etag\":\"owskanyktz\",\"properties\":{\"dataBoxEdgeDeviceStatus\":\"NeedsAttention\",\"serialNumber\":\"wgqyw\",\"description\":\"drvyn\",\"modelDescription\":\"gpphrcgyn\",\"deviceType\":\"DataBoxEdgeDevice\",\"friendlyName\":\"ecfvmm\",\"culture\":\"ofsx\",\"deviceModel\":\"evgbmqjq\",\"deviceSoftwareVersion\":\"c\",\"deviceLocalCapacity\":2539087817926802481,\"timeZone\":\"kwlzuvccfwnfn\",\"deviceHcsVersion\":\"cfionl\",\"configuredRoleTypes\":[\"Functions\"],\"nodeCount\":1013324715},\"id\":\"gtzxdpn\",\"name\":\"bqqwxrj\",\"type\":\"eallnwsubisnj\"}")
            .toObject(DataBoxEdgeDeviceInner.class);
        Assertions.assertEquals("ghmewuam", model.location());
        Assertions.assertEquals("rzayv", model.tags().get("t"));
        Assertions.assertEquals(SkuName.EDGE, model.sku().name());
        Assertions.assertEquals(SkuTier.STANDARD, model.sku().tier());
        Assertions.assertEquals("owskanyktz", model.etag());
        Assertions.assertEquals(DataBoxEdgeDeviceStatus.NEEDS_ATTENTION, model.dataBoxEdgeDeviceStatus());
        Assertions.assertEquals("drvyn", model.description());
        Assertions.assertEquals("gpphrcgyn", model.modelDescription());
        Assertions.assertEquals("ecfvmm", model.friendlyName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataBoxEdgeDeviceInner model = new DataBoxEdgeDeviceInner().withLocation("ghmewuam")
            .withTags(mapOf("t", "rzayv", "ln", "gvdfgiotkftutq", "qmi", "xlefgugnxkrx", "abhjybi", "tthzrvqd"))
            .withSku(new Sku().withName(SkuName.EDGE).withTier(SkuTier.STANDARD))
            .withEtag("owskanyktz")
            .withDataBoxEdgeDeviceStatus(DataBoxEdgeDeviceStatus.NEEDS_ATTENTION)
            .withDescription("drvyn")
            .withModelDescription("gpphrcgyn")
            .withFriendlyName("ecfvmm");
        model = BinaryData.fromObject(model).toObject(DataBoxEdgeDeviceInner.class);
        Assertions.assertEquals("ghmewuam", model.location());
        Assertions.assertEquals("rzayv", model.tags().get("t"));
        Assertions.assertEquals(SkuName.EDGE, model.sku().name());
        Assertions.assertEquals(SkuTier.STANDARD, model.sku().tier());
        Assertions.assertEquals("owskanyktz", model.etag());
        Assertions.assertEquals(DataBoxEdgeDeviceStatus.NEEDS_ATTENTION, model.dataBoxEdgeDeviceStatus());
        Assertions.assertEquals("drvyn", model.description());
        Assertions.assertEquals("gpphrcgyn", model.modelDescription());
        Assertions.assertEquals("ecfvmm", model.friendlyName());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
