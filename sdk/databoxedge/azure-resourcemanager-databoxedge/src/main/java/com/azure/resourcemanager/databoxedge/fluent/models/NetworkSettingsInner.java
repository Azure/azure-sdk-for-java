// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databoxedge.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.databoxedge.models.ArmBaseModel;
import com.azure.resourcemanager.databoxedge.models.NetworkAdapter;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The network settings of a device. */
@Immutable
public final class NetworkSettingsInner extends ArmBaseModel {
    /*
     * The properties of network settings of a device.
     */
    @JsonProperty(value = "properties", access = JsonProperty.Access.WRITE_ONLY)
    private NetworkSettingsProperties innerProperties;

    /*
     * Metadata pertaining to creation and last modification of NetworkSettings
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Get the innerProperties property: The properties of network settings of a device.
     *
     * @return the innerProperties value.
     */
    private NetworkSettingsProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Metadata pertaining to creation and last modification of NetworkSettings.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the networkAdapters property: The network adapter list on the device.
     *
     * @return the networkAdapters value.
     */
    public List<NetworkAdapter> networkAdapters() {
        return this.innerProperties() == null ? null : this.innerProperties().networkAdapters();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
