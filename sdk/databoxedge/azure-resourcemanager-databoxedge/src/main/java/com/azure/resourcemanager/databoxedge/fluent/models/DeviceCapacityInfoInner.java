// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databoxedge.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.databoxedge.models.ArmBaseModel;
import com.azure.resourcemanager.databoxedge.models.ClusterCapacityViewData;
import com.azure.resourcemanager.databoxedge.models.ClusterStorageViewData;
import com.azure.resourcemanager.databoxedge.models.HostCapacity;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.Map;

/** Object for Capturing DeviceCapacityInfo. */
@Fluent
public final class DeviceCapacityInfoInner extends ArmBaseModel {
    /*
     * The device capacity properties.
     */
    @JsonProperty(value = "properties")
    private DeviceCapacityInfoProperties innerProperties;

    /*
     * Metadata pertaining to device capacity info.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Get the innerProperties property: The device capacity properties.
     *
     * @return the innerProperties value.
     */
    private DeviceCapacityInfoProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Metadata pertaining to device capacity info.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the timestamp property: Timestamp of request in UTC.
     *
     * @return the timestamp value.
     */
    public OffsetDateTime timestamp() {
        return this.innerProperties() == null ? null : this.innerProperties().timestamp();
    }

    /**
     * Set the timestamp property: Timestamp of request in UTC.
     *
     * @param timestamp the timestamp value to set.
     * @return the DeviceCapacityInfoInner object itself.
     */
    public DeviceCapacityInfoInner withTimestamp(OffsetDateTime timestamp) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DeviceCapacityInfoProperties();
        }
        this.innerProperties().withTimestamp(timestamp);
        return this;
    }

    /**
     * Get the clusterStorageCapacityInfo property: Cluster capacity data for storage resources (CSV).
     *
     * @return the clusterStorageCapacityInfo value.
     */
    public ClusterStorageViewData clusterStorageCapacityInfo() {
        return this.innerProperties() == null ? null : this.innerProperties().clusterStorageCapacityInfo();
    }

    /**
     * Set the clusterStorageCapacityInfo property: Cluster capacity data for storage resources (CSV).
     *
     * @param clusterStorageCapacityInfo the clusterStorageCapacityInfo value to set.
     * @return the DeviceCapacityInfoInner object itself.
     */
    public DeviceCapacityInfoInner withClusterStorageCapacityInfo(ClusterStorageViewData clusterStorageCapacityInfo) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DeviceCapacityInfoProperties();
        }
        this.innerProperties().withClusterStorageCapacityInfo(clusterStorageCapacityInfo);
        return this;
    }

    /**
     * Get the clusterComputeCapacityInfo property: Cluster capacity data for compute resources (Memory and GPU).
     *
     * @return the clusterComputeCapacityInfo value.
     */
    public ClusterCapacityViewData clusterComputeCapacityInfo() {
        return this.innerProperties() == null ? null : this.innerProperties().clusterComputeCapacityInfo();
    }

    /**
     * Set the clusterComputeCapacityInfo property: Cluster capacity data for compute resources (Memory and GPU).
     *
     * @param clusterComputeCapacityInfo the clusterComputeCapacityInfo value to set.
     * @return the DeviceCapacityInfoInner object itself.
     */
    public DeviceCapacityInfoInner withClusterComputeCapacityInfo(ClusterCapacityViewData clusterComputeCapacityInfo) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DeviceCapacityInfoProperties();
        }
        this.innerProperties().withClusterComputeCapacityInfo(clusterComputeCapacityInfo);
        return this;
    }

    /**
     * Get the nodeCapacityInfos property: The dictionary of individual node names and node capacities in the cluster.
     *
     * @return the nodeCapacityInfos value.
     */
    public Map<String, HostCapacity> nodeCapacityInfos() {
        return this.innerProperties() == null ? null : this.innerProperties().nodeCapacityInfos();
    }

    /**
     * Set the nodeCapacityInfos property: The dictionary of individual node names and node capacities in the cluster.
     *
     * @param nodeCapacityInfos the nodeCapacityInfos value to set.
     * @return the DeviceCapacityInfoInner object itself.
     */
    public DeviceCapacityInfoInner withNodeCapacityInfos(Map<String, HostCapacity> nodeCapacityInfos) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DeviceCapacityInfoProperties();
        }
        this.innerProperties().withNodeCapacityInfos(nodeCapacityInfos);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
