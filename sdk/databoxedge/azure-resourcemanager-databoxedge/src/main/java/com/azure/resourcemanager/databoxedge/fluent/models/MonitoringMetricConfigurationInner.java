// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databoxedge.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.SystemData;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.databoxedge.models.ArmBaseModel;
import com.azure.resourcemanager.databoxedge.models.MetricConfiguration;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The metric setting details for the role. */
@Fluent
public final class MonitoringMetricConfigurationInner extends ArmBaseModel {
    /*
     * The metric setting properties.
     */
    @JsonProperty(value = "properties", required = true)
    private MonitoringMetricConfigurationProperties innerProperties = new MonitoringMetricConfigurationProperties();

    /*
     * Metadata pertaining to creation and last modification of
     * MonitoringConfiguration
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Get the innerProperties property: The metric setting properties.
     *
     * @return the innerProperties value.
     */
    private MonitoringMetricConfigurationProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Metadata pertaining to creation and last modification of MonitoringConfiguration.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the metricConfigurations property: The metrics configuration details.
     *
     * @return the metricConfigurations value.
     */
    public List<MetricConfiguration> metricConfigurations() {
        return this.innerProperties() == null ? null : this.innerProperties().metricConfigurations();
    }

    /**
     * Set the metricConfigurations property: The metrics configuration details.
     *
     * @param metricConfigurations the metricConfigurations value to set.
     * @return the MonitoringMetricConfigurationInner object itself.
     */
    public MonitoringMetricConfigurationInner withMetricConfigurations(List<MetricConfiguration> metricConfigurations) {
        if (this.innerProperties() == null) {
            this.innerProperties = new MonitoringMetricConfigurationProperties();
        }
        this.innerProperties().withMetricConfigurations(metricConfigurations);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property innerProperties in model MonitoringMetricConfigurationInner"));
        } else {
            innerProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(MonitoringMetricConfigurationInner.class);
}
