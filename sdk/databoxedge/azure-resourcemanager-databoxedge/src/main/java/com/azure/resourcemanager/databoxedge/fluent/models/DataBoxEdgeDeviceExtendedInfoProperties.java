// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databoxedge.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The properties of the Data Box Edge/Gateway device extended info.
 */
@Fluent
public final class DataBoxEdgeDeviceExtendedInfoProperties
    implements JsonSerializable<DataBoxEdgeDeviceExtendedInfoProperties> {
    /*
     * The digital signature of encrypted certificate.
     */
    private String encryptionKeyThumbprint;

    /*
     * The public part of the encryption certificate. Client uses this to encrypt any secret.
     */
    private String encryptionKey;

    /*
     * The Resource ID of the Resource.
     */
    private String resourceKey;

    /**
     * Creates an instance of DataBoxEdgeDeviceExtendedInfoProperties class.
     */
    public DataBoxEdgeDeviceExtendedInfoProperties() {
    }

    /**
     * Get the encryptionKeyThumbprint property: The digital signature of encrypted certificate.
     * 
     * @return the encryptionKeyThumbprint value.
     */
    public String encryptionKeyThumbprint() {
        return this.encryptionKeyThumbprint;
    }

    /**
     * Set the encryptionKeyThumbprint property: The digital signature of encrypted certificate.
     * 
     * @param encryptionKeyThumbprint the encryptionKeyThumbprint value to set.
     * @return the DataBoxEdgeDeviceExtendedInfoProperties object itself.
     */
    public DataBoxEdgeDeviceExtendedInfoProperties withEncryptionKeyThumbprint(String encryptionKeyThumbprint) {
        this.encryptionKeyThumbprint = encryptionKeyThumbprint;
        return this;
    }

    /**
     * Get the encryptionKey property: The public part of the encryption certificate. Client uses this to encrypt any
     * secret.
     * 
     * @return the encryptionKey value.
     */
    public String encryptionKey() {
        return this.encryptionKey;
    }

    /**
     * Set the encryptionKey property: The public part of the encryption certificate. Client uses this to encrypt any
     * secret.
     * 
     * @param encryptionKey the encryptionKey value to set.
     * @return the DataBoxEdgeDeviceExtendedInfoProperties object itself.
     */
    public DataBoxEdgeDeviceExtendedInfoProperties withEncryptionKey(String encryptionKey) {
        this.encryptionKey = encryptionKey;
        return this;
    }

    /**
     * Get the resourceKey property: The Resource ID of the Resource.
     * 
     * @return the resourceKey value.
     */
    public String resourceKey() {
        return this.resourceKey;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("encryptionKeyThumbprint", this.encryptionKeyThumbprint);
        jsonWriter.writeStringField("encryptionKey", this.encryptionKey);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DataBoxEdgeDeviceExtendedInfoProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DataBoxEdgeDeviceExtendedInfoProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the DataBoxEdgeDeviceExtendedInfoProperties.
     */
    public static DataBoxEdgeDeviceExtendedInfoProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DataBoxEdgeDeviceExtendedInfoProperties deserializedDataBoxEdgeDeviceExtendedInfoProperties
                = new DataBoxEdgeDeviceExtendedInfoProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("encryptionKeyThumbprint".equals(fieldName)) {
                    deserializedDataBoxEdgeDeviceExtendedInfoProperties.encryptionKeyThumbprint = reader.getString();
                } else if ("encryptionKey".equals(fieldName)) {
                    deserializedDataBoxEdgeDeviceExtendedInfoProperties.encryptionKey = reader.getString();
                } else if ("resourceKey".equals(fieldName)) {
                    deserializedDataBoxEdgeDeviceExtendedInfoProperties.resourceKey = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDataBoxEdgeDeviceExtendedInfoProperties;
        });
    }
}
