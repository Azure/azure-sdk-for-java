// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databoxedge.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Kubernetes role storage resource. */
@Fluent
public final class KubernetesRoleStorage {
    /*
     * Kubernetes storage class info.
     */
    @JsonProperty(value = "storageClasses", access = JsonProperty.Access.WRITE_ONLY)
    private List<KubernetesRoleStorageClassInfo> storageClasses;

    /*
     * Mount points of shares in role(s).
     */
    @JsonProperty(value = "endpoints")
    private List<MountPointMap> endpoints;

    /**
     * Get the storageClasses property: Kubernetes storage class info.
     *
     * @return the storageClasses value.
     */
    public List<KubernetesRoleStorageClassInfo> storageClasses() {
        return this.storageClasses;
    }

    /**
     * Get the endpoints property: Mount points of shares in role(s).
     *
     * @return the endpoints value.
     */
    public List<MountPointMap> endpoints() {
        return this.endpoints;
    }

    /**
     * Set the endpoints property: Mount points of shares in role(s).
     *
     * @param endpoints the endpoints value to set.
     * @return the KubernetesRoleStorage object itself.
     */
    public KubernetesRoleStorage withEndpoints(List<MountPointMap> endpoints) {
        this.endpoints = endpoints;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (storageClasses() != null) {
            storageClasses().forEach(e -> e.validate());
        }
        if (endpoints() != null) {
            endpoints().forEach(e -> e.validate());
        }
    }
}
