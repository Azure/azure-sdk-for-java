// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databoxedge.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Cluster Compute Data. */
@Fluent
public final class ClusterCapacityViewData {
    /*
     * The FQDN of the cluster.
     */
    @JsonProperty(value = "fqdn")
    private String fqdn;

    /*
     * The cluster's GPU capacity.
     */
    @JsonProperty(value = "gpuCapacity")
    private ClusterGpuCapacity gpuCapacity;

    /*
     * The cluster's memory capacity.
     */
    @JsonProperty(value = "memoryCapacity")
    private ClusterMemoryCapacity memoryCapacity;

    /*
     * The last time at which the ClusterCapacityViewData was set.
     */
    @JsonProperty(value = "lastRefreshedTime")
    private OffsetDateTime lastRefreshedTime;

    /*
     * The total # of vCPUs provisioned by non-HPN VM per appliance.
     */
    @JsonProperty(value = "totalProvisionedNonHpnCores")
    private Long totalProvisionedNonHpnCores;

    /**
     * Get the fqdn property: The FQDN of the cluster.
     *
     * @return the fqdn value.
     */
    public String fqdn() {
        return this.fqdn;
    }

    /**
     * Set the fqdn property: The FQDN of the cluster.
     *
     * @param fqdn the fqdn value to set.
     * @return the ClusterCapacityViewData object itself.
     */
    public ClusterCapacityViewData withFqdn(String fqdn) {
        this.fqdn = fqdn;
        return this;
    }

    /**
     * Get the gpuCapacity property: The cluster's GPU capacity.
     *
     * @return the gpuCapacity value.
     */
    public ClusterGpuCapacity gpuCapacity() {
        return this.gpuCapacity;
    }

    /**
     * Set the gpuCapacity property: The cluster's GPU capacity.
     *
     * @param gpuCapacity the gpuCapacity value to set.
     * @return the ClusterCapacityViewData object itself.
     */
    public ClusterCapacityViewData withGpuCapacity(ClusterGpuCapacity gpuCapacity) {
        this.gpuCapacity = gpuCapacity;
        return this;
    }

    /**
     * Get the memoryCapacity property: The cluster's memory capacity.
     *
     * @return the memoryCapacity value.
     */
    public ClusterMemoryCapacity memoryCapacity() {
        return this.memoryCapacity;
    }

    /**
     * Set the memoryCapacity property: The cluster's memory capacity.
     *
     * @param memoryCapacity the memoryCapacity value to set.
     * @return the ClusterCapacityViewData object itself.
     */
    public ClusterCapacityViewData withMemoryCapacity(ClusterMemoryCapacity memoryCapacity) {
        this.memoryCapacity = memoryCapacity;
        return this;
    }

    /**
     * Get the lastRefreshedTime property: The last time at which the ClusterCapacityViewData was set.
     *
     * @return the lastRefreshedTime value.
     */
    public OffsetDateTime lastRefreshedTime() {
        return this.lastRefreshedTime;
    }

    /**
     * Set the lastRefreshedTime property: The last time at which the ClusterCapacityViewData was set.
     *
     * @param lastRefreshedTime the lastRefreshedTime value to set.
     * @return the ClusterCapacityViewData object itself.
     */
    public ClusterCapacityViewData withLastRefreshedTime(OffsetDateTime lastRefreshedTime) {
        this.lastRefreshedTime = lastRefreshedTime;
        return this;
    }

    /**
     * Get the totalProvisionedNonHpnCores property: The total # of vCPUs provisioned by non-HPN VM per appliance.
     *
     * @return the totalProvisionedNonHpnCores value.
     */
    public Long totalProvisionedNonHpnCores() {
        return this.totalProvisionedNonHpnCores;
    }

    /**
     * Set the totalProvisionedNonHpnCores property: The total # of vCPUs provisioned by non-HPN VM per appliance.
     *
     * @param totalProvisionedNonHpnCores the totalProvisionedNonHpnCores value to set.
     * @return the ClusterCapacityViewData object itself.
     */
    public ClusterCapacityViewData withTotalProvisionedNonHpnCores(Long totalProvisionedNonHpnCores) {
        this.totalProvisionedNonHpnCores = totalProvisionedNonHpnCores;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (gpuCapacity() != null) {
            gpuCapacity().validate();
        }
        if (memoryCapacity() != null) {
            memoryCapacity().validate();
        }
    }
}
