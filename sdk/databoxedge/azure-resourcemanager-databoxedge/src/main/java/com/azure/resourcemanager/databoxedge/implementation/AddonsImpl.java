// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databoxedge.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.databoxedge.fluent.AddonsClient;
import com.azure.resourcemanager.databoxedge.fluent.models.AddonInner;
import com.azure.resourcemanager.databoxedge.models.Addon;
import com.azure.resourcemanager.databoxedge.models.Addons;

public final class AddonsImpl implements Addons {
    private static final ClientLogger LOGGER = new ClientLogger(AddonsImpl.class);

    private final AddonsClient innerClient;

    private final com.azure.resourcemanager.databoxedge.DataBoxEdgeManager serviceManager;

    public AddonsImpl(
        AddonsClient innerClient, com.azure.resourcemanager.databoxedge.DataBoxEdgeManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<Addon> listByRole(String deviceName, String roleName, String resourceGroupName) {
        PagedIterable<AddonInner> inner = this.serviceClient().listByRole(deviceName, roleName, resourceGroupName);
        return Utils.mapPage(inner, inner1 -> new AddonImpl(inner1, this.manager()));
    }

    public PagedIterable<Addon> listByRole(
        String deviceName, String roleName, String resourceGroupName, Context context) {
        PagedIterable<AddonInner> inner =
            this.serviceClient().listByRole(deviceName, roleName, resourceGroupName, context);
        return Utils.mapPage(inner, inner1 -> new AddonImpl(inner1, this.manager()));
    }

    public Addon get(String deviceName, String roleName, String addonName, String resourceGroupName) {
        AddonInner inner = this.serviceClient().get(deviceName, roleName, addonName, resourceGroupName);
        if (inner != null) {
            return new AddonImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<Addon> getWithResponse(
        String deviceName, String roleName, String addonName, String resourceGroupName, Context context) {
        Response<AddonInner> inner =
            this.serviceClient().getWithResponse(deviceName, roleName, addonName, resourceGroupName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new AddonImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public Addon createOrUpdate(
        String deviceName, String roleName, String addonName, String resourceGroupName, AddonInner addon) {
        AddonInner inner =
            this.serviceClient().createOrUpdate(deviceName, roleName, addonName, resourceGroupName, addon);
        if (inner != null) {
            return new AddonImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Addon createOrUpdate(
        String deviceName,
        String roleName,
        String addonName,
        String resourceGroupName,
        AddonInner addon,
        Context context) {
        AddonInner inner =
            this.serviceClient().createOrUpdate(deviceName, roleName, addonName, resourceGroupName, addon, context);
        if (inner != null) {
            return new AddonImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public void delete(String deviceName, String roleName, String addonName, String resourceGroupName) {
        this.serviceClient().delete(deviceName, roleName, addonName, resourceGroupName);
    }

    public void delete(
        String deviceName, String roleName, String addonName, String resourceGroupName, Context context) {
        this.serviceClient().delete(deviceName, roleName, addonName, resourceGroupName, context);
    }

    private AddonsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.databoxedge.DataBoxEdgeManager manager() {
        return this.serviceManager;
    }
}
