// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databoxedge.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.databoxedge.models.VmPlacementRequestResult;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Properties of Device Capacity Request Info containing VM's to be checked and their corresponding results. */
@Fluent
public final class DeviceCapacityRequestInfoProperties {
    /*
     * Array containing the sizes of the VMs for checking if its feasible to
     * create them on the appliance.
     */
    @JsonProperty(value = "vmPlacementQuery", required = true)
    private List<List<String>> vmPlacementQuery;

    /*
     * Array of the VMs of the sizes in VmSizes can be provisioned on the
     * appliance.
     */
    @JsonProperty(value = "vmPlacementResults")
    private List<VmPlacementRequestResult> vmPlacementResults;

    /**
     * Get the vmPlacementQuery property: Array containing the sizes of the VMs for checking if its feasible to create
     * them on the appliance.
     *
     * @return the vmPlacementQuery value.
     */
    public List<List<String>> vmPlacementQuery() {
        return this.vmPlacementQuery;
    }

    /**
     * Set the vmPlacementQuery property: Array containing the sizes of the VMs for checking if its feasible to create
     * them on the appliance.
     *
     * @param vmPlacementQuery the vmPlacementQuery value to set.
     * @return the DeviceCapacityRequestInfoProperties object itself.
     */
    public DeviceCapacityRequestInfoProperties withVmPlacementQuery(List<List<String>> vmPlacementQuery) {
        this.vmPlacementQuery = vmPlacementQuery;
        return this;
    }

    /**
     * Get the vmPlacementResults property: Array of the VMs of the sizes in VmSizes can be provisioned on the
     * appliance.
     *
     * @return the vmPlacementResults value.
     */
    public List<VmPlacementRequestResult> vmPlacementResults() {
        return this.vmPlacementResults;
    }

    /**
     * Set the vmPlacementResults property: Array of the VMs of the sizes in VmSizes can be provisioned on the
     * appliance.
     *
     * @param vmPlacementResults the vmPlacementResults value to set.
     * @return the DeviceCapacityRequestInfoProperties object itself.
     */
    public DeviceCapacityRequestInfoProperties withVmPlacementResults(
        List<VmPlacementRequestResult> vmPlacementResults) {
        this.vmPlacementResults = vmPlacementResults;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (vmPlacementQuery() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property vmPlacementQuery in model DeviceCapacityRequestInfoProperties"));
        }
        if (vmPlacementResults() != null) {
            vmPlacementResults().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(DeviceCapacityRequestInfoProperties.class);
}
