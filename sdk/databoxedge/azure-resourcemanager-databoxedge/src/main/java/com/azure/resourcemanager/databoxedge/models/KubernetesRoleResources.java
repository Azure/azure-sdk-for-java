// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databoxedge.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Kubernetes role resources. */
@Fluent
public final class KubernetesRoleResources {
    /*
     * Kubernetes role storage resource
     */
    @JsonProperty(value = "storage")
    private KubernetesRoleStorage storage;

    /*
     * Kubernetes role compute resource
     */
    @JsonProperty(value = "compute", required = true)
    private KubernetesRoleCompute compute;

    /*
     * Kubernetes role network resource
     */
    @JsonProperty(value = "network", access = JsonProperty.Access.WRITE_ONLY)
    private KubernetesRoleNetwork network;

    /**
     * Get the storage property: Kubernetes role storage resource.
     *
     * @return the storage value.
     */
    public KubernetesRoleStorage storage() {
        return this.storage;
    }

    /**
     * Set the storage property: Kubernetes role storage resource.
     *
     * @param storage the storage value to set.
     * @return the KubernetesRoleResources object itself.
     */
    public KubernetesRoleResources withStorage(KubernetesRoleStorage storage) {
        this.storage = storage;
        return this;
    }

    /**
     * Get the compute property: Kubernetes role compute resource.
     *
     * @return the compute value.
     */
    public KubernetesRoleCompute compute() {
        return this.compute;
    }

    /**
     * Set the compute property: Kubernetes role compute resource.
     *
     * @param compute the compute value to set.
     * @return the KubernetesRoleResources object itself.
     */
    public KubernetesRoleResources withCompute(KubernetesRoleCompute compute) {
        this.compute = compute;
        return this;
    }

    /**
     * Get the network property: Kubernetes role network resource.
     *
     * @return the network value.
     */
    public KubernetesRoleNetwork network() {
        return this.network;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (storage() != null) {
            storage().validate();
        }
        if (compute() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property compute in model KubernetesRoleResources"));
        } else {
            compute().validate();
        }
        if (network() != null) {
            network().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(KubernetesRoleResources.class);
}
