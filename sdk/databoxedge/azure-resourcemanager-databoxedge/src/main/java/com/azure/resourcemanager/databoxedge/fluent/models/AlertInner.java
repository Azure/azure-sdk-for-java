// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databoxedge.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.databoxedge.models.AlertErrorDetails;
import com.azure.resourcemanager.databoxedge.models.AlertSeverity;
import com.azure.resourcemanager.databoxedge.models.ArmBaseModel;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.Map;

/** Alert on the data box edge/gateway device. */
@JsonFlatten
@Immutable
public class AlertInner extends ArmBaseModel {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(AlertInner.class);

    /*
     * Alert title.
     */
    @JsonProperty(value = "properties.title", access = JsonProperty.Access.WRITE_ONLY)
    private String title;

    /*
     * Alert type.
     */
    @JsonProperty(value = "properties.alertType", access = JsonProperty.Access.WRITE_ONLY)
    private String alertType;

    /*
     * UTC time when the alert appeared.
     */
    @JsonProperty(value = "properties.appearedAtDateTime", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime appearedAtDateTime;

    /*
     * Alert recommendation.
     */
    @JsonProperty(value = "properties.recommendation", access = JsonProperty.Access.WRITE_ONLY)
    private String recommendation;

    /*
     * Severity of the alert.
     */
    @JsonProperty(value = "properties.severity", access = JsonProperty.Access.WRITE_ONLY)
    private AlertSeverity severity;

    /*
     * Error details of the alert.
     */
    @JsonProperty(value = "properties.errorDetails", access = JsonProperty.Access.WRITE_ONLY)
    private AlertErrorDetails errorDetails;

    /*
     * Alert details.
     */
    @JsonProperty(value = "properties.detailedInformation", access = JsonProperty.Access.WRITE_ONLY)
    private Map<String, String> detailedInformation;

    /**
     * Get the title property: Alert title.
     *
     * @return the title value.
     */
    public String title() {
        return this.title;
    }

    /**
     * Get the alertType property: Alert type.
     *
     * @return the alertType value.
     */
    public String alertType() {
        return this.alertType;
    }

    /**
     * Get the appearedAtDateTime property: UTC time when the alert appeared.
     *
     * @return the appearedAtDateTime value.
     */
    public OffsetDateTime appearedAtDateTime() {
        return this.appearedAtDateTime;
    }

    /**
     * Get the recommendation property: Alert recommendation.
     *
     * @return the recommendation value.
     */
    public String recommendation() {
        return this.recommendation;
    }

    /**
     * Get the severity property: Severity of the alert.
     *
     * @return the severity value.
     */
    public AlertSeverity severity() {
        return this.severity;
    }

    /**
     * Get the errorDetails property: Error details of the alert.
     *
     * @return the errorDetails value.
     */
    public AlertErrorDetails errorDetails() {
        return this.errorDetails;
    }

    /**
     * Get the detailedInformation property: Alert details.
     *
     * @return the detailedInformation value.
     */
    public Map<String, String> detailedInformation() {
        return this.detailedInformation;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (errorDetails() != null) {
            errorDetails().validate();
        }
    }
}
