// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databoxedge.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.databoxedge.models.MetricConfiguration;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Metrics properties. */
@Fluent
public final class MonitoringMetricConfigurationProperties {
    /*
     * The metrics configuration details
     */
    @JsonProperty(value = "metricConfigurations", required = true)
    private List<MetricConfiguration> metricConfigurations;

    /**
     * Get the metricConfigurations property: The metrics configuration details.
     *
     * @return the metricConfigurations value.
     */
    public List<MetricConfiguration> metricConfigurations() {
        return this.metricConfigurations;
    }

    /**
     * Set the metricConfigurations property: The metrics configuration details.
     *
     * @param metricConfigurations the metricConfigurations value to set.
     * @return the MonitoringMetricConfigurationProperties object itself.
     */
    public MonitoringMetricConfigurationProperties withMetricConfigurations(
        List<MetricConfiguration> metricConfigurations) {
        this.metricConfigurations = metricConfigurations;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (metricConfigurations() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property metricConfigurations in model"
                            + " MonitoringMetricConfigurationProperties"));
        } else {
            metricConfigurations().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(MonitoringMetricConfigurationProperties.class);
}
