/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.databoxedge.v2020_05_01_preview.implementation;

import com.microsoft.azure.AzureEnvironment;
import com.microsoft.azure.AzureResponseBuilder;
import com.microsoft.azure.credentials.AzureTokenCredentials;
import com.microsoft.azure.management.apigeneration.Beta;
import com.microsoft.azure.management.apigeneration.Beta.SinceVersion;
import com.microsoft.azure.arm.resources.AzureConfigurable;
import com.microsoft.azure.serializer.AzureJacksonAdapter;
import com.microsoft.rest.RestClient;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.Operations;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.AvailableSkus;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.Devices;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.Alerts;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.BandwidthSchedules;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.Jobs;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.Nodes;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.OperationsStatus;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.Orders;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.Roles;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.Shares;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.StorageAccountCredentials;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.StorageAccounts;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.Containers;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.Triggers;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.Users;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.Skus;
import com.microsoft.azure.arm.resources.implementation.AzureConfigurableCoreImpl;
import com.microsoft.azure.arm.resources.implementation.ManagerCore;

/**
 * Entry point to Azure DataBoxEdge resource management.
 */
public final class DataBoxEdgeManager extends ManagerCore<DataBoxEdgeManager, DataBoxEdgeManagementClientImpl> {
    private Operations operations;
    private AvailableSkus availableSkus;
    private Devices devices;
    private Alerts alerts;
    private BandwidthSchedules bandwidthSchedules;
    private Jobs jobs;
    private Nodes nodes;
    private OperationsStatus operationsStatus;
    private Orders orders;
    private Roles roles;
    private Shares shares;
    private StorageAccountCredentials storageAccountCredentials;
    private StorageAccounts storageAccounts;
    private Containers containers;
    private Triggers triggers;
    private Users users;
    private Skus skus;
    /**
    * Get a Configurable instance that can be used to create DataBoxEdgeManager with optional configuration.
    *
    * @return the instance allowing configurations
    */
    public static Configurable configure() {
        return new DataBoxEdgeManager.ConfigurableImpl();
    }
    /**
    * Creates an instance of DataBoxEdgeManager that exposes DataBoxEdge resource management API entry points.
    *
    * @param credentials the credentials to use
    * @param subscriptionId the subscription UUID
    * @return the DataBoxEdgeManager
    */
    public static DataBoxEdgeManager authenticate(AzureTokenCredentials credentials, String subscriptionId) {
        return new DataBoxEdgeManager(new RestClient.Builder()
            .withBaseUrl(credentials.environment(), AzureEnvironment.Endpoint.RESOURCE_MANAGER)
            .withCredentials(credentials)
            .withSerializerAdapter(new AzureJacksonAdapter())
            .withResponseBuilderFactory(new AzureResponseBuilder.Factory())
            .build(), subscriptionId);
    }
    /**
    * Creates an instance of DataBoxEdgeManager that exposes DataBoxEdge resource management API entry points.
    *
    * @param restClient the RestClient to be used for API calls.
    * @param subscriptionId the subscription UUID
    * @return the DataBoxEdgeManager
    */
    public static DataBoxEdgeManager authenticate(RestClient restClient, String subscriptionId) {
        return new DataBoxEdgeManager(restClient, subscriptionId);
    }
    /**
    * The interface allowing configurations to be set.
    */
    public interface Configurable extends AzureConfigurable<Configurable> {
        /**
        * Creates an instance of DataBoxEdgeManager that exposes DataBoxEdge management API entry points.
        *
        * @param credentials the credentials to use
        * @param subscriptionId the subscription UUID
        * @return the interface exposing DataBoxEdge management API entry points that work across subscriptions
        */
        DataBoxEdgeManager authenticate(AzureTokenCredentials credentials, String subscriptionId);
    }

    /**
     * @return Entry point to manage Operations.
     */
    public Operations operations() {
        if (this.operations == null) {
            this.operations = new OperationsImpl(this);
        }
        return this.operations;
    }

    /**
     * @return Entry point to manage AvailableSkus.
     */
    public AvailableSkus availableSkus() {
        if (this.availableSkus == null) {
            this.availableSkus = new AvailableSkusImpl(this);
        }
        return this.availableSkus;
    }

    /**
     * @return Entry point to manage Devices.
     */
    public Devices devices() {
        if (this.devices == null) {
            this.devices = new DevicesImpl(this);
        }
        return this.devices;
    }

    /**
     * @return Entry point to manage Alerts.
     */
    public Alerts alerts() {
        if (this.alerts == null) {
            this.alerts = new AlertsImpl(this);
        }
        return this.alerts;
    }

    /**
     * @return Entry point to manage BandwidthSchedules.
     */
    public BandwidthSchedules bandwidthSchedules() {
        if (this.bandwidthSchedules == null) {
            this.bandwidthSchedules = new BandwidthSchedulesImpl(this);
        }
        return this.bandwidthSchedules;
    }

    /**
     * @return Entry point to manage Jobs.
     */
    public Jobs jobs() {
        if (this.jobs == null) {
            this.jobs = new JobsImpl(this);
        }
        return this.jobs;
    }

    /**
     * @return Entry point to manage Nodes.
     */
    public Nodes nodes() {
        if (this.nodes == null) {
            this.nodes = new NodesImpl(this);
        }
        return this.nodes;
    }

    /**
     * @return Entry point to manage OperationsStatus.
     */
    public OperationsStatus operationsStatus() {
        if (this.operationsStatus == null) {
            this.operationsStatus = new OperationsStatusImpl(this);
        }
        return this.operationsStatus;
    }

    /**
     * @return Entry point to manage Orders.
     */
    public Orders orders() {
        if (this.orders == null) {
            this.orders = new OrdersImpl(this);
        }
        return this.orders;
    }

    /**
     * @return Entry point to manage Roles.
     */
    public Roles roles() {
        if (this.roles == null) {
            this.roles = new RolesImpl(this);
        }
        return this.roles;
    }

    /**
     * @return Entry point to manage Shares.
     */
    public Shares shares() {
        if (this.shares == null) {
            this.shares = new SharesImpl(this);
        }
        return this.shares;
    }

    /**
     * @return Entry point to manage StorageAccountCredentials.
     */
    public StorageAccountCredentials storageAccountCredentials() {
        if (this.storageAccountCredentials == null) {
            this.storageAccountCredentials = new StorageAccountCredentialsImpl(this);
        }
        return this.storageAccountCredentials;
    }

    /**
     * @return Entry point to manage StorageAccounts.
     */
    public StorageAccounts storageAccounts() {
        if (this.storageAccounts == null) {
            this.storageAccounts = new StorageAccountsImpl(this);
        }
        return this.storageAccounts;
    }

    /**
     * @return Entry point to manage Containers.
     */
    public Containers containers() {
        if (this.containers == null) {
            this.containers = new ContainersImpl(this);
        }
        return this.containers;
    }

    /**
     * @return Entry point to manage Triggers.
     */
    public Triggers triggers() {
        if (this.triggers == null) {
            this.triggers = new TriggersImpl(this);
        }
        return this.triggers;
    }

    /**
     * @return Entry point to manage Users.
     */
    public Users users() {
        if (this.users == null) {
            this.users = new UsersImpl(this);
        }
        return this.users;
    }

    /**
     * @return Entry point to manage Skus.
     */
    public Skus skus() {
        if (this.skus == null) {
            this.skus = new SkusImpl(this);
        }
        return this.skus;
    }

    /**
    * The implementation for Configurable interface.
    */
    private static final class ConfigurableImpl extends AzureConfigurableCoreImpl<Configurable> implements Configurable {
        public DataBoxEdgeManager authenticate(AzureTokenCredentials credentials, String subscriptionId) {
           return DataBoxEdgeManager.authenticate(buildRestClient(credentials), subscriptionId);
        }
     }
    private DataBoxEdgeManager(RestClient restClient, String subscriptionId) {
        super(
            restClient,
            subscriptionId,
            new DataBoxEdgeManagementClientImpl(restClient).withSubscriptionId(subscriptionId));
    }
}
