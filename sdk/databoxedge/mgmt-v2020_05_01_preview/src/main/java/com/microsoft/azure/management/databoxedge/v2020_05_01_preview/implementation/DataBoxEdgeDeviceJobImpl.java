/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.databoxedge.v2020_05_01_preview.implementation;

import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.DataBoxEdgeDeviceJob;
import com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl;
import rx.Observable;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.UpdateOperationStage;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.UpdateDownloadProgress;
import org.joda.time.DateTime;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.JobErrorDetails;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.UpdateInstallProgress;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.JobType;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.JobStatus;

class DataBoxEdgeDeviceJobImpl extends IndexableRefreshableWrapperImpl<DataBoxEdgeDeviceJob, JobInner> implements DataBoxEdgeDeviceJob {
    private final DataBoxEdgeManager manager;
    private String deviceName;
    private String name;
    private String resourceGroupName;

    DataBoxEdgeDeviceJobImpl(JobInner inner,  DataBoxEdgeManager manager) {
        super(null, inner);
        this.manager = manager;
        // set resource ancestor and positional variables
        this.deviceName = IdParsingUtils.getValueFromIdByName(inner.id(), "dataBoxEdgeDevices");
        this.name = IdParsingUtils.getValueFromIdByName(inner.id(), "jobs");
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
    }

    @Override
    public DataBoxEdgeManager manager() {
        return this.manager;
    }

    @Override
    protected Observable<JobInner> getInnerAsync() {
        JobsInner client = this.manager().inner().jobs();
        return client.getAsync(this.deviceName, this.name, this.resourceGroupName);
    }



    @Override
    public UpdateOperationStage currentStage() {
        return this.inner().currentStage();
    }

    @Override
    public UpdateDownloadProgress downloadProgress() {
        return this.inner().downloadProgress();
    }

    @Override
    public DateTime endTime() {
        return this.inner().endTime();
    }

    @Override
    public JobErrorDetails error() {
        return this.inner().error();
    }

    @Override
    public String errorManifestFile() {
        return this.inner().errorManifestFile();
    }

    @Override
    public String folder() {
        return this.inner().folder();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public UpdateInstallProgress installProgress() {
        return this.inner().installProgress();
    }

    @Override
    public JobType jobType() {
        return this.inner().jobType();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public Integer percentComplete() {
        return this.inner().percentComplete();
    }

    @Override
    public String refreshedEntityId() {
        return this.inner().refreshedEntityId();
    }

    @Override
    public DateTime startTime() {
        return this.inner().startTime();
    }

    @Override
    public JobStatus status() {
        return this.inner().status();
    }

    @Override
    public Integer totalRefreshErrors() {
        return this.inner().totalRefreshErrors();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

}
