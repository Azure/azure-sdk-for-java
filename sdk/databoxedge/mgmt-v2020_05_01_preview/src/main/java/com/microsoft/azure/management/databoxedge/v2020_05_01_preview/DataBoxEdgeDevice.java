/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.databoxedge.v2020_05_01_preview;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.implementation.DataBoxEdgeManager;
import java.util.List;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.implementation.SkuInner;
import com.microsoft.azure.management.databoxedge.v2020_05_01_preview.implementation.DataBoxEdgeDeviceInner;

/**
 * Type representing DataBoxEdgeDevice.
 */
public interface DataBoxEdgeDevice extends HasInner<DataBoxEdgeDeviceInner>, Resource, GroupableResourceCore<DataBoxEdgeManager, DataBoxEdgeDeviceInner>, HasResourceGroup, Refreshable<DataBoxEdgeDevice>, Updatable<DataBoxEdgeDevice.Update>, HasManager<DataBoxEdgeManager> {
    /**
     * @return the configuredRoleTypes value.
     */
    List<RoleTypes> configuredRoleTypes();

    /**
     * @return the culture value.
     */
    String culture();

    /**
     * @return the dataBoxEdgeDeviceStatus value.
     */
    DataBoxEdgeDeviceStatus dataBoxEdgeDeviceStatus();

    /**
     * @return the description value.
     */
    String description();

    /**
     * @return the deviceHcsVersion value.
     */
    String deviceHcsVersion();

    /**
     * @return the deviceLocalCapacity value.
     */
    Long deviceLocalCapacity();

    /**
     * @return the deviceModel value.
     */
    String deviceModel();

    /**
     * @return the deviceSoftwareVersion value.
     */
    String deviceSoftwareVersion();

    /**
     * @return the deviceType value.
     */
    DeviceType deviceType();

    /**
     * @return the etag value.
     */
    String etag();

    /**
     * @return the friendlyName value.
     */
    String friendlyName();

    /**
     * @return the modelDescription value.
     */
    String modelDescription();

    /**
     * @return the nodeCount value.
     */
    Integer nodeCount();

    /**
     * @return the serialNumber value.
     */
    String serialNumber();

    /**
     * @return the sku value.
     */
    SkuInner sku();

    /**
     * @return the timeZone value.
     */
    String timeZone();

    /**
     * The entirety of the DataBoxEdgeDevice definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of DataBoxEdgeDevice definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a DataBoxEdgeDevice definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the DataBoxEdgeDevice definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithCreate> {
        }

        /**
         * The stage of the databoxedgedevice definition allowing to specify DataBoxEdgeDeviceStatus.
         */
        interface WithDataBoxEdgeDeviceStatus {
            /**
             * Specifies dataBoxEdgeDeviceStatus.
             * @param dataBoxEdgeDeviceStatus The status of the Data Box Edge/Gateway device. Possible values include: 'ReadyToSetup', 'Online', 'Offline', 'NeedsAttention', 'Disconnected', 'PartiallyDisconnected', 'Maintenance'
             * @return the next definition stage
             */
            WithCreate withDataBoxEdgeDeviceStatus(DataBoxEdgeDeviceStatus dataBoxEdgeDeviceStatus);
        }

        /**
         * The stage of the databoxedgedevice definition allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             * @param description The Description of the Data Box Edge/Gateway device
             * @return the next definition stage
             */
            WithCreate withDescription(String description);
        }

        /**
         * The stage of the databoxedgedevice definition allowing to specify Etag.
         */
        interface WithEtag {
            /**
             * Specifies etag.
             * @param etag The etag for the devices
             * @return the next definition stage
             */
            WithCreate withEtag(String etag);
        }

        /**
         * The stage of the databoxedgedevice definition allowing to specify FriendlyName.
         */
        interface WithFriendlyName {
            /**
             * Specifies friendlyName.
             * @param friendlyName The Data Box Edge/Gateway device name
             * @return the next definition stage
             */
            WithCreate withFriendlyName(String friendlyName);
        }

        /**
         * The stage of the databoxedgedevice definition allowing to specify ModelDescription.
         */
        interface WithModelDescription {
            /**
             * Specifies modelDescription.
             * @param modelDescription The description of the Data Box Edge/Gateway device model
             * @return the next definition stage
             */
            WithCreate withModelDescription(String modelDescription);
        }

        /**
         * The stage of the databoxedgedevice definition allowing to specify Sku.
         */
        interface WithSku {
            /**
             * Specifies sku.
             * @param sku The SKU type
             * @return the next definition stage
             */
            WithCreate withSku(SkuInner sku);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<DataBoxEdgeDevice>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithDataBoxEdgeDeviceStatus, DefinitionStages.WithDescription, DefinitionStages.WithEtag, DefinitionStages.WithFriendlyName, DefinitionStages.WithModelDescription, DefinitionStages.WithSku {
        }
    }
    /**
     * The template for a DataBoxEdgeDevice update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<DataBoxEdgeDevice>, Resource.UpdateWithTags<Update>, UpdateStages.WithDataBoxEdgeDeviceStatus, UpdateStages.WithDescription, UpdateStages.WithEtag, UpdateStages.WithFriendlyName, UpdateStages.WithModelDescription, UpdateStages.WithSku {
    }

    /**
     * Grouping of DataBoxEdgeDevice update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the databoxedgedevice update allowing to specify DataBoxEdgeDeviceStatus.
         */
        interface WithDataBoxEdgeDeviceStatus {
            /**
             * Specifies dataBoxEdgeDeviceStatus.
             * @param dataBoxEdgeDeviceStatus The status of the Data Box Edge/Gateway device. Possible values include: 'ReadyToSetup', 'Online', 'Offline', 'NeedsAttention', 'Disconnected', 'PartiallyDisconnected', 'Maintenance'
             * @return the next update stage
             */
            Update withDataBoxEdgeDeviceStatus(DataBoxEdgeDeviceStatus dataBoxEdgeDeviceStatus);
        }

        /**
         * The stage of the databoxedgedevice update allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             * @param description The Description of the Data Box Edge/Gateway device
             * @return the next update stage
             */
            Update withDescription(String description);
        }

        /**
         * The stage of the databoxedgedevice update allowing to specify Etag.
         */
        interface WithEtag {
            /**
             * Specifies etag.
             * @param etag The etag for the devices
             * @return the next update stage
             */
            Update withEtag(String etag);
        }

        /**
         * The stage of the databoxedgedevice update allowing to specify FriendlyName.
         */
        interface WithFriendlyName {
            /**
             * Specifies friendlyName.
             * @param friendlyName The Data Box Edge/Gateway device name
             * @return the next update stage
             */
            Update withFriendlyName(String friendlyName);
        }

        /**
         * The stage of the databoxedgedevice update allowing to specify ModelDescription.
         */
        interface WithModelDescription {
            /**
             * Specifies modelDescription.
             * @param modelDescription The description of the Data Box Edge/Gateway device model
             * @return the next update stage
             */
            Update withModelDescription(String modelDescription);
        }

        /**
         * The stage of the databoxedgedevice update allowing to specify Sku.
         */
        interface WithSku {
            /**
             * Specifies sku.
             * @param sku The SKU type
             * @return the next update stage
             */
            Update withSku(SkuInner sku);
        }

    }
}
