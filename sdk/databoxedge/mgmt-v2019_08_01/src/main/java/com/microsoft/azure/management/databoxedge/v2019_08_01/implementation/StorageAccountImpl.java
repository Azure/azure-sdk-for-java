/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.databoxedge.v2019_08_01.implementation;

import com.microsoft.azure.management.databoxedge.v2019_08_01.StorageAccount;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;
import com.microsoft.azure.management.databoxedge.v2019_08_01.StorageAccountStatus;
import com.microsoft.azure.management.databoxedge.v2019_08_01.DataPolicy;

class StorageAccountImpl extends CreatableUpdatableImpl<StorageAccount, StorageAccountInner, StorageAccountImpl> implements StorageAccount, StorageAccount.Definition, StorageAccount.Update {
    private final DataBoxEdgeManager manager;
    private String deviceName;
    private String storageAccountName;
    private String resourceGroupName;

    StorageAccountImpl(String name, DataBoxEdgeManager manager) {
        super(name, new StorageAccountInner());
        this.manager = manager;
        // Set resource name
        this.storageAccountName = name;
        //
    }

    StorageAccountImpl(StorageAccountInner inner, DataBoxEdgeManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.storageAccountName = inner.name();
        // set resource ancestor and positional variables
        this.deviceName = IdParsingUtils.getValueFromIdByName(inner.id(), "dataBoxEdgeDevices");
        this.storageAccountName = IdParsingUtils.getValueFromIdByName(inner.id(), "storageAccounts");
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        //
    }

    @Override
    public DataBoxEdgeManager manager() {
        return this.manager;
    }

    @Override
    public Observable<StorageAccount> createResourceAsync() {
        StorageAccountsInner client = this.manager().inner().storageAccounts();
        return client.createOrUpdateAsync(this.deviceName, this.storageAccountName, this.resourceGroupName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<StorageAccount> updateResourceAsync() {
        StorageAccountsInner client = this.manager().inner().storageAccounts();
        return client.createOrUpdateAsync(this.deviceName, this.storageAccountName, this.resourceGroupName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<StorageAccountInner> getInnerAsync() {
        StorageAccountsInner client = this.manager().inner().storageAccounts();
        return client.getAsync(this.deviceName, this.storageAccountName, this.resourceGroupName);
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public String blobEndpoint() {
        return this.inner().blobEndpoint();
    }

    @Override
    public Integer containerCount() {
        return this.inner().containerCount();
    }

    @Override
    public DataPolicy dataPolicy() {
        return this.inner().dataPolicy();
    }

    @Override
    public String description() {
        return this.inner().description();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String storageAccountCredentialId() {
        return this.inner().storageAccountCredentialId();
    }

    @Override
    public StorageAccountStatus storageAccountStatus() {
        return this.inner().storageAccountStatus();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public StorageAccountImpl withExistingDataBoxEdgeDevice(String deviceName, String resourceGroupName) {
        this.deviceName = deviceName;
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    @Override
    public StorageAccountImpl withDataPolicy(DataPolicy dataPolicy) {
        this.inner().withDataPolicy(dataPolicy);
        return this;
    }

    @Override
    public StorageAccountImpl withDescription(String description) {
        this.inner().withDescription(description);
        return this;
    }

    @Override
    public StorageAccountImpl withStorageAccountCredentialId(String storageAccountCredentialId) {
        this.inner().withStorageAccountCredentialId(storageAccountCredentialId);
        return this;
    }

    @Override
    public StorageAccountImpl withStorageAccountStatus(StorageAccountStatus storageAccountStatus) {
        this.inner().withStorageAccountStatus(storageAccountStatus);
        return this;
    }

}
