/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.databoxedge.v2019_08_01.implementation;

import com.microsoft.azure.management.databoxedge.v2019_08_01.Order;
import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import rx.Observable;
import com.microsoft.azure.management.databoxedge.v2019_08_01.ContactDetails;
import com.microsoft.azure.management.databoxedge.v2019_08_01.OrderStatus;
import java.util.List;
import com.microsoft.azure.management.databoxedge.v2019_08_01.TrackingInfo;
import com.microsoft.azure.management.databoxedge.v2019_08_01.Address;

class OrderImpl extends WrapperImpl<OrderInner> implements Order {
    private final DataBoxEdgeManager manager;

    OrderImpl(OrderInner inner,  DataBoxEdgeManager manager) {
        super(inner);
        this.manager = manager;
    }

    @Override
    public DataBoxEdgeManager manager() {
        return this.manager;
    }



    @Override
    public ContactDetails contactInformation() {
        return this.inner().contactInformation();
    }

    @Override
    public OrderStatus currentStatus() {
        return this.inner().currentStatus();
    }

    @Override
    public List<TrackingInfo> deliveryTrackingInfo() {
        return this.inner().deliveryTrackingInfo();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public List<OrderStatus> orderHistory() {
        return this.inner().orderHistory();
    }

    @Override
    public List<TrackingInfo> returnTrackingInfo() {
        return this.inner().returnTrackingInfo();
    }

    @Override
    public String serialNumber() {
        return this.inner().serialNumber();
    }

    @Override
    public Address shippingAddress() {
        return this.inner().shippingAddress();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

}
