/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.loganalytics.v2020_08_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.loganalytics.v2020_08_01.implementation.SavedSearchInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.loganalytics.v2020_08_01.implementation.LogAnalyticsManager;
import java.util.List;

/**
 * Type representing SavedSearch.
 */
public interface SavedSearch extends HasInner<SavedSearchInner>, Indexable, Refreshable<SavedSearch>, Updatable<SavedSearch.Update>, HasManager<LogAnalyticsManager> {
    /**
     * @return the category value.
     */
    String category();

    /**
     * @return the displayName value.
     */
    String displayName();

    /**
     * @return the etag value.
     */
    String etag();

    /**
     * @return the functionAlias value.
     */
    String functionAlias();

    /**
     * @return the functionParameters value.
     */
    String functionParameters();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the query value.
     */
    String query();

    /**
     * @return the tags value.
     */
    List<Tag> tags();

    /**
     * @return the type value.
     */
    String type();

    /**
     * @return the version value.
     */
    Long version();

    /**
     * The entirety of the SavedSearch definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithWorkspace, DefinitionStages.WithCategory, DefinitionStages.WithDisplayName, DefinitionStages.WithQuery, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of SavedSearch definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a SavedSearch definition.
         */
        interface Blank extends WithWorkspace {
        }

        /**
         * The stage of the savedsearch definition allowing to specify Workspace.
         */
        interface WithWorkspace {
           /**
            * Specifies resourceGroupName, workspaceName.
            * @param resourceGroupName The name of the resource group. The name is case insensitive
            * @param workspaceName The name of the workspace
            * @return the next definition stage
            */
            WithCategory withExistingWorkspace(String resourceGroupName, String workspaceName);
        }

        /**
         * The stage of the savedsearch definition allowing to specify Category.
         */
        interface WithCategory {
           /**
            * Specifies category.
            * @param category The category of the saved search. This helps the user to find a saved search faster
            * @return the next definition stage
            */
            WithDisplayName withCategory(String category);
        }

        /**
         * The stage of the savedsearch definition allowing to specify DisplayName.
         */
        interface WithDisplayName {
           /**
            * Specifies displayName.
            * @param displayName Saved search display name
            * @return the next definition stage
            */
            WithQuery withDisplayName(String displayName);
        }

        /**
         * The stage of the savedsearch definition allowing to specify Query.
         */
        interface WithQuery {
           /**
            * Specifies query.
            * @param query The query expression for the saved search
            * @return the next definition stage
            */
            WithCreate withQuery(String query);
        }

        /**
         * The stage of the savedsearch definition allowing to specify Etag.
         */
        interface WithEtag {
            /**
             * Specifies etag.
             * @param etag The ETag of the saved search
             * @return the next definition stage
             */
            WithCreate withEtag(String etag);
        }

        /**
         * The stage of the savedsearch definition allowing to specify FunctionAlias.
         */
        interface WithFunctionAlias {
            /**
             * Specifies functionAlias.
             * @param functionAlias The function alias if query serves as a function
             * @return the next definition stage
             */
            WithCreate withFunctionAlias(String functionAlias);
        }

        /**
         * The stage of the savedsearch definition allowing to specify FunctionParameters.
         */
        interface WithFunctionParameters {
            /**
             * Specifies functionParameters.
             * @param functionParameters The optional function parameters if query serves as a function. Value should be in the following format: 'param-name1:type1 = default_value1, param-name2:type2 = default_value2'. For more examples and proper syntax please refer to https://docs.microsoft.com/en-us/azure/kusto/query/functions/user-defined-functions
             * @return the next definition stage
             */
            WithCreate withFunctionParameters(String functionParameters);
        }

        /**
         * The stage of the savedsearch definition allowing to specify Tags.
         */
        interface WithTags {
            /**
             * Specifies tags.
             * @param tags The tags attached to the saved search
             * @return the next definition stage
             */
            WithCreate withTags(List<Tag> tags);
        }

        /**
         * The stage of the savedsearch definition allowing to specify Version.
         */
        interface WithVersion {
            /**
             * Specifies version.
             * @param version The version number of the query language. The current version is 2 and is the default
             * @return the next definition stage
             */
            WithCreate withVersion(Long version);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<SavedSearch>, DefinitionStages.WithEtag, DefinitionStages.WithFunctionAlias, DefinitionStages.WithFunctionParameters, DefinitionStages.WithTags, DefinitionStages.WithVersion {
        }
    }
    /**
     * The template for a SavedSearch update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<SavedSearch>, UpdateStages.WithEtag, UpdateStages.WithFunctionAlias, UpdateStages.WithFunctionParameters, UpdateStages.WithTags, UpdateStages.WithVersion {
    }

    /**
     * Grouping of SavedSearch update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the savedsearch update allowing to specify Etag.
         */
        interface WithEtag {
            /**
             * Specifies etag.
             * @param etag The ETag of the saved search
             * @return the next update stage
             */
            Update withEtag(String etag);
        }

        /**
         * The stage of the savedsearch update allowing to specify FunctionAlias.
         */
        interface WithFunctionAlias {
            /**
             * Specifies functionAlias.
             * @param functionAlias The function alias if query serves as a function
             * @return the next update stage
             */
            Update withFunctionAlias(String functionAlias);
        }

        /**
         * The stage of the savedsearch update allowing to specify FunctionParameters.
         */
        interface WithFunctionParameters {
            /**
             * Specifies functionParameters.
             * @param functionParameters The optional function parameters if query serves as a function. Value should be in the following format: 'param-name1:type1 = default_value1, param-name2:type2 = default_value2'. For more examples and proper syntax please refer to https://docs.microsoft.com/en-us/azure/kusto/query/functions/user-defined-functions
             * @return the next update stage
             */
            Update withFunctionParameters(String functionParameters);
        }

        /**
         * The stage of the savedsearch update allowing to specify Tags.
         */
        interface WithTags {
            /**
             * Specifies tags.
             * @param tags The tags attached to the saved search
             * @return the next update stage
             */
            Update withTags(List<Tag> tags);
        }

        /**
         * The stage of the savedsearch update allowing to specify Version.
         */
        interface WithVersion {
            /**
             * Specifies version.
             * @param version The version number of the query language. The current version is 2 and is the default
             * @return the next update stage
             */
            Update withVersion(Long version);
        }

    }
}
