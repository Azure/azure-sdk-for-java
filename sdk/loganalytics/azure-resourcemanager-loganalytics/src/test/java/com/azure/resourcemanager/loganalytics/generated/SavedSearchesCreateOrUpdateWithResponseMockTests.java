// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.loganalytics.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.loganalytics.LogAnalyticsManager;
import com.azure.resourcemanager.loganalytics.models.SavedSearch;
import com.azure.resourcemanager.loganalytics.models.Tag;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SavedSearchesCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"etag\":\"refqy\",\"properties\":{\"category\":\"qotoihiqakydiwfb\",\"displayName\":\"kwpzdqtvh\",\"query\":\"spodaqax\",\"functionAlias\":\"pie\",\"functionParameters\":\"bebjfu\",\"version\":8153035996823274813,\"tags\":[{\"name\":\"h\",\"value\":\"lpnfpubntnb\"},{\"name\":\"tzviqsowsaaelcat\",\"value\":\"cjuhplrvkm\"},{\"name\":\"cwmjvlg\",\"value\":\"ggcvk\"}]},\"id\":\"y\",\"name\":\"izrzb\",\"type\":\"psfxsf\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        LogAnalyticsManager manager = LogAnalyticsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SavedSearch response = manager.savedSearches()
            .define("ikcyyc")
            .withExistingWorkspace("khlowkxxpv", "rdfjmzsyzfhotl")
            .withCategory("hv")
            .withDisplayName("uic")
            .withQuery("hvtrrmhwrbfdpyf")
            .withTags(Arrays.asList(new Tag().withName("ooclutnp").withValue("memczjkmmyk"),
                new Tag().withName("ujxsglhsr").withValue("rye")))
            .withEtag("nsjlpjrtws")
            .withFunctionAlias("bhvjglr")
            .withFunctionParameters("uyzlw")
            .withVersion(5515716031108163936L)
            .create();

        Assertions.assertEquals("refqy", response.etag());
        Assertions.assertEquals("qotoihiqakydiwfb", response.category());
        Assertions.assertEquals("kwpzdqtvh", response.displayName());
        Assertions.assertEquals("spodaqax", response.query());
        Assertions.assertEquals("pie", response.functionAlias());
        Assertions.assertEquals("bebjfu", response.functionParameters());
        Assertions.assertEquals(8153035996823274813L, response.version());
        Assertions.assertEquals("h", response.tags().get(0).name());
        Assertions.assertEquals("lpnfpubntnb", response.tags().get(0).value());
    }
}
