// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.loganalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.loganalytics.fluent.models.UsageMetricInner;
import com.azure.resourcemanager.loganalytics.models.MetricName;
import com.azure.resourcemanager.loganalytics.models.WorkspaceListUsagesResult;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkspaceListUsagesResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkspaceListUsagesResult model = BinaryData.fromString(
            "{\"value\":[{\"name\":{\"value\":\"ibycno\",\"localizedValue\":\"knme\"},\"unit\":\"sgzvahapjyzhpv\",\"currentValue\":87.25675780401417,\"limit\":55.97471576867415,\"nextResetTime\":\"2021-04-03T19:52:37Z\",\"quotaPeriod\":\"zlmwlxkvugfhz\"},{\"name\":{\"value\":\"wjvzunluthnn\",\"localizedValue\":\"nxipeil\"},\"unit\":\"zuaejxd\",\"currentValue\":90.33601925524867,\"limit\":73.93279017728112,\"nextResetTime\":\"2021-04-25T18:40:13Z\",\"quotaPeriod\":\"zumveekgpwo\"},{\"name\":{\"value\":\"kfpbs\",\"localizedValue\":\"ofd\"},\"unit\":\"uusdttouwa\",\"currentValue\":45.35057543626068,\"limit\":0.5889681397022062,\"nextResetTime\":\"2021-03-07T10:01:38Z\",\"quotaPeriod\":\"smv\"}]}")
            .toObject(WorkspaceListUsagesResult.class);
        Assertions.assertEquals("ibycno", model.value().get(0).name().value());
        Assertions.assertEquals("knme", model.value().get(0).name().localizedValue());
        Assertions.assertEquals("sgzvahapjyzhpv", model.value().get(0).unit());
        Assertions.assertEquals(87.25675780401417D, model.value().get(0).currentValue());
        Assertions.assertEquals(55.97471576867415D, model.value().get(0).limit());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-03T19:52:37Z"), model.value().get(0).nextResetTime());
        Assertions.assertEquals("zlmwlxkvugfhz", model.value().get(0).quotaPeriod());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkspaceListUsagesResult model = new WorkspaceListUsagesResult().withValue(Arrays.asList(
            new UsageMetricInner().withName(new MetricName().withValue("ibycno").withLocalizedValue("knme"))
                .withUnit("sgzvahapjyzhpv")
                .withCurrentValue(87.25675780401417D)
                .withLimit(55.97471576867415D)
                .withNextResetTime(OffsetDateTime.parse("2021-04-03T19:52:37Z"))
                .withQuotaPeriod("zlmwlxkvugfhz"),
            new UsageMetricInner().withName(new MetricName().withValue("wjvzunluthnn").withLocalizedValue("nxipeil"))
                .withUnit("zuaejxd")
                .withCurrentValue(90.33601925524867D)
                .withLimit(73.93279017728112D)
                .withNextResetTime(OffsetDateTime.parse("2021-04-25T18:40:13Z"))
                .withQuotaPeriod("zumveekgpwo"),
            new UsageMetricInner().withName(new MetricName().withValue("kfpbs").withLocalizedValue("ofd"))
                .withUnit("uusdttouwa")
                .withCurrentValue(45.35057543626068D)
                .withLimit(0.5889681397022062D)
                .withNextResetTime(OffsetDateTime.parse("2021-03-07T10:01:38Z"))
                .withQuotaPeriod("smv")));
        model = BinaryData.fromObject(model).toObject(WorkspaceListUsagesResult.class);
        Assertions.assertEquals("ibycno", model.value().get(0).name().value());
        Assertions.assertEquals("knme", model.value().get(0).name().localizedValue());
        Assertions.assertEquals("sgzvahapjyzhpv", model.value().get(0).unit());
        Assertions.assertEquals(87.25675780401417D, model.value().get(0).currentValue());
        Assertions.assertEquals(55.97471576867415D, model.value().get(0).limit());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-03T19:52:37Z"), model.value().get(0).nextResetTime());
        Assertions.assertEquals("zlmwlxkvugfhz", model.value().get(0).quotaPeriod());
    }
}
