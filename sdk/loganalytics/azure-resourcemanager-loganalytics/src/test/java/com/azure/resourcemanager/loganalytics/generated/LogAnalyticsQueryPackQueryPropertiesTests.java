// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.loganalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.loganalytics.fluent.models.LogAnalyticsQueryPackQueryProperties;
import com.azure.resourcemanager.loganalytics.models.LogAnalyticsQueryPackQueryPropertiesRelated;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class LogAnalyticsQueryPackQueryPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LogAnalyticsQueryPackQueryProperties model =
            BinaryData
                .fromString(
                    "{\"id\":\"s\",\"displayName\":\"sycbkbfk\",\"timeCreated\":\"2021-04-13T09:52:22Z\",\"timeModified\":\"2021-02-11T20:09:09Z\",\"author\":\"xxppofm\",\"description\":\"x\",\"body\":\"fjpgddtocjjxhvp\",\"related\":{\"categories\":[\"xhdzxibqeojnx\"],\"resourceTypes\":[\"vddntwn\",\"eic\",\"twnpzaoqvuhrhcf\",\"cyddglmjthjqk\"],\"solutions\":[\"eicxmqciwqvhkhi\",\"uigdtopbobjog\",\"m\",\"w\"]},\"tags\":{\"gvdfgiotkftutq\":[\"uhrzayvvt\"]},\"properties\":\"datangxlefgugnxkrxdq\"}")
                .toObject(LogAnalyticsQueryPackQueryProperties.class);
        Assertions.assertEquals("sycbkbfk", model.displayName());
        Assertions.assertEquals("x", model.description());
        Assertions.assertEquals("fjpgddtocjjxhvp", model.body());
        Assertions.assertEquals("xhdzxibqeojnx", model.related().categories().get(0));
        Assertions.assertEquals("vddntwn", model.related().resourceTypes().get(0));
        Assertions.assertEquals("eicxmqciwqvhkhi", model.related().solutions().get(0));
        Assertions.assertEquals("uhrzayvvt", model.tags().get("gvdfgiotkftutq").get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LogAnalyticsQueryPackQueryProperties model =
            new LogAnalyticsQueryPackQueryProperties()
                .withDisplayName("sycbkbfk")
                .withDescription("x")
                .withBody("fjpgddtocjjxhvp")
                .withRelated(
                    new LogAnalyticsQueryPackQueryPropertiesRelated()
                        .withCategories(Arrays.asList("xhdzxibqeojnx"))
                        .withResourceTypes(Arrays.asList("vddntwn", "eic", "twnpzaoqvuhrhcf", "cyddglmjthjqk"))
                        .withSolutions(Arrays.asList("eicxmqciwqvhkhi", "uigdtopbobjog", "m", "w")))
                .withTags(mapOf("gvdfgiotkftutq", Arrays.asList("uhrzayvvt")))
                .withProperties("datangxlefgugnxkrxdq");
        model = BinaryData.fromObject(model).toObject(LogAnalyticsQueryPackQueryProperties.class);
        Assertions.assertEquals("sycbkbfk", model.displayName());
        Assertions.assertEquals("x", model.description());
        Assertions.assertEquals("fjpgddtocjjxhvp", model.body());
        Assertions.assertEquals("xhdzxibqeojnx", model.related().categories().get(0));
        Assertions.assertEquals("vddntwn", model.related().resourceTypes().get(0));
        Assertions.assertEquals("eicxmqciwqvhkhi", model.related().solutions().get(0));
        Assertions.assertEquals("uhrzayvvt", model.tags().get("gvdfgiotkftutq").get(0));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
