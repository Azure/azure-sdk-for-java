// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.loganalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.loganalytics.fluent.models.UsageMetricInner;
import com.azure.resourcemanager.loganalytics.models.MetricName;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class UsageMetricInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UsageMetricInner model = BinaryData.fromString(
            "{\"name\":{\"value\":\"yjsflhhcaalnji\",\"localizedValue\":\"sxyawjoyaqcs\"},\"unit\":\"jpkiidzyexznelix\",\"currentValue\":16.42737179588487,\"limit\":65.0090874045316,\"nextResetTime\":\"2021-01-11T05:27:37Z\",\"quotaPeriod\":\"nxknalaulp\"}")
            .toObject(UsageMetricInner.class);
        Assertions.assertEquals("yjsflhhcaalnji", model.name().value());
        Assertions.assertEquals("sxyawjoyaqcs", model.name().localizedValue());
        Assertions.assertEquals("jpkiidzyexznelix", model.unit());
        Assertions.assertEquals(16.42737179588487D, model.currentValue());
        Assertions.assertEquals(65.0090874045316D, model.limit());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-11T05:27:37Z"), model.nextResetTime());
        Assertions.assertEquals("nxknalaulp", model.quotaPeriod());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UsageMetricInner model = new UsageMetricInner()
            .withName(new MetricName().withValue("yjsflhhcaalnji").withLocalizedValue("sxyawjoyaqcs"))
            .withUnit("jpkiidzyexznelix")
            .withCurrentValue(16.42737179588487D)
            .withLimit(65.0090874045316D)
            .withNextResetTime(OffsetDateTime.parse("2021-01-11T05:27:37Z"))
            .withQuotaPeriod("nxknalaulp");
        model = BinaryData.fromObject(model).toObject(UsageMetricInner.class);
        Assertions.assertEquals("yjsflhhcaalnji", model.name().value());
        Assertions.assertEquals("sxyawjoyaqcs", model.name().localizedValue());
        Assertions.assertEquals("jpkiidzyexznelix", model.unit());
        Assertions.assertEquals(16.42737179588487D, model.currentValue());
        Assertions.assertEquals(65.0090874045316D, model.limit());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-11T05:27:37Z"), model.nextResetTime());
        Assertions.assertEquals("nxknalaulp", model.quotaPeriod());
    }
}
