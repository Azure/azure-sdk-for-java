// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.loganalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.loganalytics.models.Column;
import com.azure.resourcemanager.loganalytics.models.ColumnDataTypeHintEnum;
import com.azure.resourcemanager.loganalytics.models.ColumnTypeEnum;
import com.azure.resourcemanager.loganalytics.models.Schema;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SchemaTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Schema model =
            BinaryData
                .fromString(
                    "{\"name\":\"dmovzvfva\",\"displayName\":\"zqadf\",\"description\":\"z\",\"columns\":[{\"name\":\"laecxndticok\",\"type\":\"dateTime\",\"dataTypeHint\":\"armPath\",\"displayName\":\"t\",\"description\":\"dgxobfircl\",\"isDefaultDisplay\":false,\"isHidden\":false},{\"name\":\"yzriykhy\",\"type\":\"guid\",\"dataTypeHint\":\"uri\",\"displayName\":\"b\",\"description\":\"qvkjlmxho\",\"isDefaultDisplay\":true,\"isHidden\":false}],\"standardColumns\":[{\"name\":\"igu\",\"type\":\"real\",\"dataTypeHint\":\"ip\",\"displayName\":\"uzzptjazysdz\",\"description\":\"zwwva\",\"isDefaultDisplay\":true,\"isHidden\":false},{\"name\":\"fonkphhqyikvyla\",\"type\":\"boolean\",\"dataTypeHint\":\"guid\",\"displayName\":\"wmn\",\"description\":\"ttijfybvpoekrs\",\"isDefaultDisplay\":true,\"isHidden\":true},{\"name\":\"uzqgnjdgkynsc\",\"type\":\"dateTime\",\"dataTypeHint\":\"guid\",\"displayName\":\"h\",\"description\":\"komtkubotppn\",\"isDefaultDisplay\":false,\"isHidden\":true},{\"name\":\"ihfrbbcevqa\",\"type\":\"int\",\"dataTypeHint\":\"ip\",\"displayName\":\"lfkqojpy\",\"description\":\"gtrd\",\"isDefaultDisplay\":false,\"isHidden\":false}],\"categories\":[\"sdymbrn\",\"suxmpraf\",\"g\",\"khocxvdfffwaf\"],\"labels\":[\"udaspavehh\",\"vkbunzozudh\",\"xg\",\"moy\"],\"source\":\"microsoft\",\"tableType\":\"SearchResults\",\"tableSubType\":\"DataCollectionRuleBased\",\"solutions\":[\"fdn\"]}")
                .toObject(Schema.class);
        Assertions.assertEquals("dmovzvfva", model.name());
        Assertions.assertEquals("zqadf", model.displayName());
        Assertions.assertEquals("z", model.description());
        Assertions.assertEquals("laecxndticok", model.columns().get(0).name());
        Assertions.assertEquals(ColumnTypeEnum.DATE_TIME, model.columns().get(0).type());
        Assertions.assertEquals(ColumnDataTypeHintEnum.ARM_PATH, model.columns().get(0).dataTypeHint());
        Assertions.assertEquals("t", model.columns().get(0).displayName());
        Assertions.assertEquals("dgxobfircl", model.columns().get(0).description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Schema model =
            new Schema()
                .withName("dmovzvfva")
                .withDisplayName("zqadf")
                .withDescription("z")
                .withColumns(
                    Arrays
                        .asList(
                            new Column()
                                .withName("laecxndticok")
                                .withType(ColumnTypeEnum.DATE_TIME)
                                .withDataTypeHint(ColumnDataTypeHintEnum.ARM_PATH)
                                .withDisplayName("t")
                                .withDescription("dgxobfircl"),
                            new Column()
                                .withName("yzriykhy")
                                .withType(ColumnTypeEnum.GUID)
                                .withDataTypeHint(ColumnDataTypeHintEnum.URI)
                                .withDisplayName("b")
                                .withDescription("qvkjlmxho")));
        model = BinaryData.fromObject(model).toObject(Schema.class);
        Assertions.assertEquals("dmovzvfva", model.name());
        Assertions.assertEquals("zqadf", model.displayName());
        Assertions.assertEquals("z", model.description());
        Assertions.assertEquals("laecxndticok", model.columns().get(0).name());
        Assertions.assertEquals(ColumnTypeEnum.DATE_TIME, model.columns().get(0).type());
        Assertions.assertEquals(ColumnDataTypeHintEnum.ARM_PATH, model.columns().get(0).dataTypeHint());
        Assertions.assertEquals("t", model.columns().get(0).displayName());
        Assertions.assertEquals("dgxobfircl", model.columns().get(0).description());
    }
}
