// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.loganalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.loganalytics.fluent.models.SavedSearchInner;
import com.azure.resourcemanager.loganalytics.models.Tag;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SavedSearchInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SavedSearchInner model = BinaryData.fromString(
            "{\"etag\":\"xc\",\"properties\":{\"category\":\"sbfov\",\"displayName\":\"srruvwbhsqfsubcg\",\"query\":\"birx\",\"functionAlias\":\"ybsrfbjfdtwss\",\"functionParameters\":\"ftpvjzbexil\",\"version\":8368126717708512338,\"tags\":[{\"name\":\"nvwpmqtaruouj\",\"value\":\"kcjhwqytjrybnwj\"}]},\"id\":\"wgdrjervnaenqp\",\"name\":\"hin\",\"type\":\"oygmift\"}")
            .toObject(SavedSearchInner.class);
        Assertions.assertEquals("xc", model.etag());
        Assertions.assertEquals("sbfov", model.category());
        Assertions.assertEquals("srruvwbhsqfsubcg", model.displayName());
        Assertions.assertEquals("birx", model.query());
        Assertions.assertEquals("ybsrfbjfdtwss", model.functionAlias());
        Assertions.assertEquals("ftpvjzbexil", model.functionParameters());
        Assertions.assertEquals(8368126717708512338L, model.version());
        Assertions.assertEquals("nvwpmqtaruouj", model.tags().get(0).name());
        Assertions.assertEquals("kcjhwqytjrybnwj", model.tags().get(0).value());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SavedSearchInner model = new SavedSearchInner().withEtag("xc")
            .withCategory("sbfov")
            .withDisplayName("srruvwbhsqfsubcg")
            .withQuery("birx")
            .withFunctionAlias("ybsrfbjfdtwss")
            .withFunctionParameters("ftpvjzbexil")
            .withVersion(8368126717708512338L)
            .withTags(Arrays.asList(new Tag().withName("nvwpmqtaruouj").withValue("kcjhwqytjrybnwj")));
        model = BinaryData.fromObject(model).toObject(SavedSearchInner.class);
        Assertions.assertEquals("xc", model.etag());
        Assertions.assertEquals("sbfov", model.category());
        Assertions.assertEquals("srruvwbhsqfsubcg", model.displayName());
        Assertions.assertEquals("birx", model.query());
        Assertions.assertEquals("ybsrfbjfdtwss", model.functionAlias());
        Assertions.assertEquals("ftpvjzbexil", model.functionParameters());
        Assertions.assertEquals(8368126717708512338L, model.version());
        Assertions.assertEquals("nvwpmqtaruouj", model.tags().get(0).name());
        Assertions.assertEquals("kcjhwqytjrybnwj", model.tags().get(0).value());
    }
}
