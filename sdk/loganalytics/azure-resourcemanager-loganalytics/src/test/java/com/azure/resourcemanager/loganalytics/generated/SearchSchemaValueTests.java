// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.loganalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.loganalytics.models.SearchSchemaValue;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SearchSchemaValueTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SearchSchemaValue model = BinaryData.fromString(
            "{\"name\":\"ulpjr\",\"displayName\":\"ag\",\"type\":\"vimjwos\",\"indexed\":false,\"stored\":false,\"facet\":false,\"ownerType\":[\"skfc\",\"tq\",\"miekkezzikhlyfjh\",\"gqggebdunygae\"]}")
            .toObject(SearchSchemaValue.class);
        Assertions.assertEquals("ulpjr", model.name());
        Assertions.assertEquals("ag", model.displayName());
        Assertions.assertEquals("vimjwos", model.type());
        Assertions.assertEquals(false, model.indexed());
        Assertions.assertEquals(false, model.stored());
        Assertions.assertEquals(false, model.facet());
        Assertions.assertEquals("skfc", model.ownerType().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SearchSchemaValue model = new SearchSchemaValue().withName("ulpjr")
            .withDisplayName("ag")
            .withType("vimjwos")
            .withIndexed(false)
            .withStored(false)
            .withFacet(false)
            .withOwnerType(Arrays.asList("skfc", "tq", "miekkezzikhlyfjh", "gqggebdunygae"));
        model = BinaryData.fromObject(model).toObject(SearchSchemaValue.class);
        Assertions.assertEquals("ulpjr", model.name());
        Assertions.assertEquals("ag", model.displayName());
        Assertions.assertEquals("vimjwos", model.type());
        Assertions.assertEquals(false, model.indexed());
        Assertions.assertEquals(false, model.stored());
        Assertions.assertEquals(false, model.facet());
        Assertions.assertEquals("skfc", model.ownerType().get(0));
    }
}
