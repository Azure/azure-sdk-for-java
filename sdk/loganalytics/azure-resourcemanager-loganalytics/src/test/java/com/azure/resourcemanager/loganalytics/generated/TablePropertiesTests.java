// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.loganalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.loganalytics.fluent.models.TableProperties;
import com.azure.resourcemanager.loganalytics.models.Column;
import com.azure.resourcemanager.loganalytics.models.ColumnDataTypeHintEnum;
import com.azure.resourcemanager.loganalytics.models.ColumnTypeEnum;
import com.azure.resourcemanager.loganalytics.models.RestoredLogs;
import com.azure.resourcemanager.loganalytics.models.Schema;
import com.azure.resourcemanager.loganalytics.models.SearchResults;
import com.azure.resourcemanager.loganalytics.models.TablePlanEnum;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class TablePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TableProperties model =
            BinaryData
                .fromString(
                    "{\"retentionInDays\":113648851,\"totalRetentionInDays\":2024292145,\"archiveRetentionInDays\":997116324,\"searchResults\":{\"query\":\"igovi\",\"description\":\"xk\",\"limit\":1244288604,\"startSearchTime\":\"2021-08-05T02:44:40Z\",\"endSearchTime\":\"2021-03-02T16:29:31Z\",\"sourceTable\":\"u\",\"azureAsyncOperationId\":\"bgo\"},\"restoredLogs\":{\"startRestoreTime\":\"2021-07-17T06:26:59Z\",\"endRestoreTime\":\"2021-08-02T17:26:36Z\",\"sourceTable\":\"bfhjxakvvjgsl\",\"azureAsyncOperationId\":\"dilmyww\"},\"resultStatistics\":{\"progress\":12.995845,\"ingestedRecords\":583525950,\"scannedGb\":76.022285},\"plan\":\"Basic\",\"lastPlanModifiedDate\":\"gyvudtjuewbc\",\"schema\":{\"name\":\"uuwhcjyxcc\",\"displayName\":\"vpayakkudzpx\",\"description\":\"jplmagstcy\",\"columns\":[{\"name\":\"kyrk\",\"type\":\"string\",\"dataTypeHint\":\"armPath\",\"displayName\":\"gsj\",\"description\":\"nwqjnoba\",\"isDefaultDisplay\":false,\"isHidden\":false},{\"name\":\"iacegfnmn\",\"type\":\"guid\",\"dataTypeHint\":\"uri\",\"displayName\":\"emfnczdwvvbal\",\"description\":\"l\",\"isDefaultDisplay\":false,\"isHidden\":true},{\"name\":\"bzevwrd\",\"type\":\"dynamic\",\"dataTypeHint\":\"armPath\",\"displayName\":\"vsjcswsmystuluqy\",\"description\":\"cvlerchpqbmfpjba\",\"isDefaultDisplay\":true,\"isHidden\":true},{\"name\":\"xsspuunnoxyhk\",\"type\":\"dynamic\",\"dataTypeHint\":\"ip\",\"displayName\":\"i\",\"description\":\"fhoqca\",\"isDefaultDisplay\":true,\"isHidden\":true}],\"standardColumns\":[{\"name\":\"jvlpjxxkzbr\",\"type\":\"guid\",\"dataTypeHint\":\"guid\",\"displayName\":\"siykzkdncjdxonbz\",\"description\":\"gculap\",\"isDefaultDisplay\":false,\"isHidden\":true},{\"name\":\"ogtqxepnylbf\",\"type\":\"boolean\",\"dataTypeHint\":\"uri\",\"displayName\":\"tlvofq\",\"description\":\"vfcibyfmowux\",\"isDefaultDisplay\":false,\"isHidden\":false}],\"categories\":[\"xfzwi\"],\"labels\":[\"zjb\",\"yzsxjrkambtrne\"],\"source\":\"microsoft\",\"tableType\":\"SearchResults\",\"tableSubType\":\"Classic\",\"solutions\":[\"vldspa\",\"tjb\",\"kdmflvestmjlx\",\"ril\"]},\"provisioningState\":\"Succeeded\",\"retentionInDaysAsDefault\":true,\"totalRetentionInDaysAsDefault\":false}")
                .toObject(TableProperties.class);
        Assertions.assertEquals(113648851, model.retentionInDays());
        Assertions.assertEquals(2024292145, model.totalRetentionInDays());
        Assertions.assertEquals("igovi", model.searchResults().query());
        Assertions.assertEquals("xk", model.searchResults().description());
        Assertions.assertEquals(1244288604, model.searchResults().limit());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-05T02:44:40Z"), model.searchResults().startSearchTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-02T16:29:31Z"), model.searchResults().endSearchTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-17T06:26:59Z"), model.restoredLogs().startRestoreTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-02T17:26:36Z"), model.restoredLogs().endRestoreTime());
        Assertions.assertEquals("bfhjxakvvjgsl", model.restoredLogs().sourceTable());
        Assertions.assertEquals(TablePlanEnum.BASIC, model.plan());
        Assertions.assertEquals("uuwhcjyxcc", model.schema().name());
        Assertions.assertEquals("vpayakkudzpx", model.schema().displayName());
        Assertions.assertEquals("jplmagstcy", model.schema().description());
        Assertions.assertEquals("kyrk", model.schema().columns().get(0).name());
        Assertions.assertEquals(ColumnTypeEnum.STRING, model.schema().columns().get(0).type());
        Assertions.assertEquals(ColumnDataTypeHintEnum.ARM_PATH, model.schema().columns().get(0).dataTypeHint());
        Assertions.assertEquals("gsj", model.schema().columns().get(0).displayName());
        Assertions.assertEquals("nwqjnoba", model.schema().columns().get(0).description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TableProperties model =
            new TableProperties()
                .withRetentionInDays(113648851)
                .withTotalRetentionInDays(2024292145)
                .withSearchResults(
                    new SearchResults()
                        .withQuery("igovi")
                        .withDescription("xk")
                        .withLimit(1244288604)
                        .withStartSearchTime(OffsetDateTime.parse("2021-08-05T02:44:40Z"))
                        .withEndSearchTime(OffsetDateTime.parse("2021-03-02T16:29:31Z")))
                .withRestoredLogs(
                    new RestoredLogs()
                        .withStartRestoreTime(OffsetDateTime.parse("2021-07-17T06:26:59Z"))
                        .withEndRestoreTime(OffsetDateTime.parse("2021-08-02T17:26:36Z"))
                        .withSourceTable("bfhjxakvvjgsl"))
                .withPlan(TablePlanEnum.BASIC)
                .withSchema(
                    new Schema()
                        .withName("uuwhcjyxcc")
                        .withDisplayName("vpayakkudzpx")
                        .withDescription("jplmagstcy")
                        .withColumns(
                            Arrays
                                .asList(
                                    new Column()
                                        .withName("kyrk")
                                        .withType(ColumnTypeEnum.STRING)
                                        .withDataTypeHint(ColumnDataTypeHintEnum.ARM_PATH)
                                        .withDisplayName("gsj")
                                        .withDescription("nwqjnoba"),
                                    new Column()
                                        .withName("iacegfnmn")
                                        .withType(ColumnTypeEnum.GUID)
                                        .withDataTypeHint(ColumnDataTypeHintEnum.URI)
                                        .withDisplayName("emfnczdwvvbal")
                                        .withDescription("l"),
                                    new Column()
                                        .withName("bzevwrd")
                                        .withType(ColumnTypeEnum.DYNAMIC)
                                        .withDataTypeHint(ColumnDataTypeHintEnum.ARM_PATH)
                                        .withDisplayName("vsjcswsmystuluqy")
                                        .withDescription("cvlerchpqbmfpjba"),
                                    new Column()
                                        .withName("xsspuunnoxyhk")
                                        .withType(ColumnTypeEnum.DYNAMIC)
                                        .withDataTypeHint(ColumnDataTypeHintEnum.IP)
                                        .withDisplayName("i")
                                        .withDescription("fhoqca"))));
        model = BinaryData.fromObject(model).toObject(TableProperties.class);
        Assertions.assertEquals(113648851, model.retentionInDays());
        Assertions.assertEquals(2024292145, model.totalRetentionInDays());
        Assertions.assertEquals("igovi", model.searchResults().query());
        Assertions.assertEquals("xk", model.searchResults().description());
        Assertions.assertEquals(1244288604, model.searchResults().limit());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-05T02:44:40Z"), model.searchResults().startSearchTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-02T16:29:31Z"), model.searchResults().endSearchTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-17T06:26:59Z"), model.restoredLogs().startRestoreTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-02T17:26:36Z"), model.restoredLogs().endRestoreTime());
        Assertions.assertEquals("bfhjxakvvjgsl", model.restoredLogs().sourceTable());
        Assertions.assertEquals(TablePlanEnum.BASIC, model.plan());
        Assertions.assertEquals("uuwhcjyxcc", model.schema().name());
        Assertions.assertEquals("vpayakkudzpx", model.schema().displayName());
        Assertions.assertEquals("jplmagstcy", model.schema().description());
        Assertions.assertEquals("kyrk", model.schema().columns().get(0).name());
        Assertions.assertEquals(ColumnTypeEnum.STRING, model.schema().columns().get(0).type());
        Assertions.assertEquals(ColumnDataTypeHintEnum.ARM_PATH, model.schema().columns().get(0).dataTypeHint());
        Assertions.assertEquals("gsj", model.schema().columns().get(0).displayName());
        Assertions.assertEquals("nwqjnoba", model.schema().columns().get(0).description());
    }
}
