// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.loganalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.loganalytics.fluent.models.OperationInner;
import com.azure.resourcemanager.loganalytics.models.OperationDisplay;
import com.azure.resourcemanager.loganalytics.models.OperationListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OperationListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationListResult model = BinaryData.fromString(
            "{\"value\":[{\"name\":\"xzfe\",\"display\":{\"provider\":\"ppriol\",\"resource\":\"rjaltolmncw\",\"operation\":\"bqwcsdbnwdcf\",\"description\":\"cqdpfuv\"}}],\"nextLink\":\"sbjjc\"}")
            .toObject(OperationListResult.class);
        Assertions.assertEquals("xzfe", model.value().get(0).name());
        Assertions.assertEquals("ppriol", model.value().get(0).display().provider());
        Assertions.assertEquals("rjaltolmncw", model.value().get(0).display().resource());
        Assertions.assertEquals("bqwcsdbnwdcf", model.value().get(0).display().operation());
        Assertions.assertEquals("cqdpfuv", model.value().get(0).display().description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationListResult model
            = new OperationListResult().withValue(Arrays.asList(new OperationInner().withName("xzfe")
                .withDisplay(new OperationDisplay().withProvider("ppriol")
                    .withResource("rjaltolmncw")
                    .withOperation("bqwcsdbnwdcf")
                    .withDescription("cqdpfuv"))));
        model = BinaryData.fromObject(model).toObject(OperationListResult.class);
        Assertions.assertEquals("xzfe", model.value().get(0).name());
        Assertions.assertEquals("ppriol", model.value().get(0).display().provider());
        Assertions.assertEquals("rjaltolmncw", model.value().get(0).display().resource());
        Assertions.assertEquals("bqwcsdbnwdcf", model.value().get(0).display().operation());
        Assertions.assertEquals("cqdpfuv", model.value().get(0).display().description());
    }
}
