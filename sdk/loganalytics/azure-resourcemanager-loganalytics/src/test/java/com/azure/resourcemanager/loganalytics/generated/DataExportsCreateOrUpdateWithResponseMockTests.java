// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.loganalytics.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.loganalytics.LogAnalyticsManager;
import com.azure.resourcemanager.loganalytics.models.DataExport;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DataExportsCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"dataExportId\":\"lfmk\",\"tableNames\":[\"cazuaw\",\"tzxpuamwabzxrv\",\"cush\",\"phai\"],\"destination\":{\"resourceId\":\"xyasflvgsgzw\",\"type\":\"StorageAccount\",\"metaData\":{\"eventHubName\":\"ihknsmjbl\"}},\"enable\":true,\"createdDate\":\"lnymzotqy\",\"lastModifiedDate\":\"uzcbmqq\"},\"id\":\"xmvwfg\",\"name\":\"ayxonsupeujl\",\"type\":\"qnhcvsqltnzoibg\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        LogAnalyticsManager manager = LogAnalyticsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DataExport response = manager.dataExports()
            .define("igjkskyrio")
            .withExistingWorkspace("hv", "slkvntjl")
            .withDataExportId("idsxwaabzmifry")
            .withTableNames(Arrays.asList("nmmaxrizkzob", "opxlhslnelxieixy", "llxecwc", "ojphslhc"))
            .withEnable(true)
            .withCreatedDate("n")
            .withLastModifiedDate("ujeickp")
            .withResourceId("jutifdwfmvigorqj")
            .withEventHubName("raglk")
            .create();

        Assertions.assertEquals("lfmk", response.dataExportId());
        Assertions.assertEquals("cazuaw", response.tableNames().get(0));
        Assertions.assertEquals(true, response.enable());
        Assertions.assertEquals("lnymzotqy", response.createdDate());
        Assertions.assertEquals("uzcbmqq", response.lastModifiedDate());
        Assertions.assertEquals("xyasflvgsgzw", response.resourceId());
        Assertions.assertEquals("ihknsmjbl", response.eventHubName());
    }
}
