// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.loganalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.loganalytics.models.CoreSummary;
import com.azure.resourcemanager.loganalytics.models.SearchMetadata;
import com.azure.resourcemanager.loganalytics.models.SearchMetadataSchema;
import com.azure.resourcemanager.loganalytics.models.SearchSort;
import com.azure.resourcemanager.loganalytics.models.SearchSortEnum;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SearchMetadataTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SearchMetadata model = BinaryData.fromString(
            "{\"requestId\":\"lwuip\",\"resultType\":\"cjzkzivgvvcna\",\"total\":8913535749004515550,\"top\":5279516661370439683,\"id\":\"mueedndrdvstk\",\"coreSummaries\":[{\"status\":\"chea\",\"numberOfDocuments\":3646125258806158004}],\"status\":\"tdaaygdvwvg\",\"startTime\":\"2021-06-07T06:53:10Z\",\"lastUpdated\":\"2021-10-23T00:12:41Z\",\"eTag\":\"xrtfudxep\",\"sort\":[{\"name\":\"agvrvmnpkuk\",\"order\":\"asc\"},{\"name\":\"dblx\",\"order\":\"desc\"}],\"requestTime\":7611617377471579634,\"aggregatedValueField\":\"hfjx\",\"aggregatedGroupingFields\":\"szkkfoqre\",\"sum\":8338807266312513089,\"max\":2185206310902116436,\"schema\":{\"name\":\"wneaiv\",\"version\":322973840}}")
            .toObject(SearchMetadata.class);
        Assertions.assertEquals("lwuip", model.searchId());
        Assertions.assertEquals("cjzkzivgvvcna", model.resultType());
        Assertions.assertEquals(8913535749004515550L, model.total());
        Assertions.assertEquals(5279516661370439683L, model.top());
        Assertions.assertEquals("mueedndrdvstk", model.id());
        Assertions.assertEquals("chea", model.coreSummaries().get(0).status());
        Assertions.assertEquals(3646125258806158004L, model.coreSummaries().get(0).numberOfDocuments());
        Assertions.assertEquals("tdaaygdvwvg", model.status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-07T06:53:10Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-23T00:12:41Z"), model.lastUpdated());
        Assertions.assertEquals("xrtfudxep", model.etag());
        Assertions.assertEquals("agvrvmnpkuk", model.sort().get(0).name());
        Assertions.assertEquals(SearchSortEnum.ASC, model.sort().get(0).order());
        Assertions.assertEquals(7611617377471579634L, model.requestTime());
        Assertions.assertEquals("hfjx", model.aggregatedValueField());
        Assertions.assertEquals("szkkfoqre", model.aggregatedGroupingFields());
        Assertions.assertEquals(8338807266312513089L, model.sum());
        Assertions.assertEquals(2185206310902116436L, model.max());
        Assertions.assertEquals("wneaiv", model.schema().name());
        Assertions.assertEquals(322973840, model.schema().version());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SearchMetadata model = new SearchMetadata().withSearchId("lwuip")
            .withResultType("cjzkzivgvvcna")
            .withTotal(8913535749004515550L)
            .withTop(5279516661370439683L)
            .withId("mueedndrdvstk")
            .withCoreSummaries(
                Arrays.asList(new CoreSummary().withStatus("chea").withNumberOfDocuments(3646125258806158004L)))
            .withStatus("tdaaygdvwvg")
            .withStartTime(OffsetDateTime.parse("2021-06-07T06:53:10Z"))
            .withLastUpdated(OffsetDateTime.parse("2021-10-23T00:12:41Z"))
            .withEtag("xrtfudxep")
            .withSort(Arrays.asList(new SearchSort().withName("agvrvmnpkuk").withOrder(SearchSortEnum.ASC),
                new SearchSort().withName("dblx").withOrder(SearchSortEnum.DESC)))
            .withRequestTime(7611617377471579634L)
            .withAggregatedValueField("hfjx")
            .withAggregatedGroupingFields("szkkfoqre")
            .withSum(8338807266312513089L)
            .withMax(2185206310902116436L)
            .withSchema(new SearchMetadataSchema().withName("wneaiv").withVersion(322973840));
        model = BinaryData.fromObject(model).toObject(SearchMetadata.class);
        Assertions.assertEquals("lwuip", model.searchId());
        Assertions.assertEquals("cjzkzivgvvcna", model.resultType());
        Assertions.assertEquals(8913535749004515550L, model.total());
        Assertions.assertEquals(5279516661370439683L, model.top());
        Assertions.assertEquals("mueedndrdvstk", model.id());
        Assertions.assertEquals("chea", model.coreSummaries().get(0).status());
        Assertions.assertEquals(3646125258806158004L, model.coreSummaries().get(0).numberOfDocuments());
        Assertions.assertEquals("tdaaygdvwvg", model.status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-07T06:53:10Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-23T00:12:41Z"), model.lastUpdated());
        Assertions.assertEquals("xrtfudxep", model.etag());
        Assertions.assertEquals("agvrvmnpkuk", model.sort().get(0).name());
        Assertions.assertEquals(SearchSortEnum.ASC, model.sort().get(0).order());
        Assertions.assertEquals(7611617377471579634L, model.requestTime());
        Assertions.assertEquals("hfjx", model.aggregatedValueField());
        Assertions.assertEquals("szkkfoqre", model.aggregatedGroupingFields());
        Assertions.assertEquals(8338807266312513089L, model.sum());
        Assertions.assertEquals(2185206310902116436L, model.max());
        Assertions.assertEquals("wneaiv", model.schema().name());
        Assertions.assertEquals(322973840, model.schema().version());
    }
}
