// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.loganalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.loganalytics.fluent.models.LogAnalyticsQueryPackInner;
import com.azure.resourcemanager.loganalytics.models.LogAnalyticsQueryPackListResult;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class LogAnalyticsQueryPackListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LogAnalyticsQueryPackListResult model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"queryPackId\":\"hq\",\"timeCreated\":\"2021-08-01T15:29:09Z\",\"timeModified\":\"2021-10-26T10:24:19Z\",\"provisioningState\":\"ybczmehmtzo\"},\"location\":\"bsphrupidgsybbe\",\"tags\":{\"xaobhdxbmtqioqjz\":\"hoycm\"},\"id\":\"htbmuf\",\"name\":\"ownoizhw\",\"type\":\"rxybqsoq\"},{\"properties\":{\"queryPackId\":\"gkdmb\",\"timeCreated\":\"2021-12-03T16:46:54Z\",\"timeModified\":\"2021-03-24T06:15:27Z\",\"provisioningState\":\"c\"},\"location\":\"fp\",\"tags\":{\"qqjnqgl\":\"rbt\",\"foooj\":\"qgn\",\"saagdf\":\"wifsq\"},\"id\":\"glzlhjxrifkwmrv\",\"name\":\"tsizntocipaoua\",\"type\":\"psqucmpoyf\"},{\"properties\":{\"queryPackId\":\"fogknygjofjdde\",\"timeCreated\":\"2020-12-22T06:05:56Z\",\"timeModified\":\"2021-06-07T09:35:57Z\",\"provisioningState\":\"pewnw\"},\"location\":\"eitjz\",\"tags\":{\"hs\":\"usarhmofc\",\"xukcdmpar\":\"yurkdtmlxhekuksj\"},\"id\":\"ryuanzwuxzdxtay\",\"name\":\"lhmwhfpmrqobm\",\"type\":\"u\"}],\"nextLink\":\"nryrtihf\"}")
                .toObject(LogAnalyticsQueryPackListResult.class);
        Assertions.assertEquals("bsphrupidgsybbe", model.value().get(0).location());
        Assertions.assertEquals("hoycm", model.value().get(0).tags().get("xaobhdxbmtqioqjz"));
        Assertions.assertEquals("nryrtihf", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LogAnalyticsQueryPackListResult model =
            new LogAnalyticsQueryPackListResult()
                .withValue(
                    Arrays
                        .asList(
                            new LogAnalyticsQueryPackInner()
                                .withLocation("bsphrupidgsybbe")
                                .withTags(mapOf("xaobhdxbmtqioqjz", "hoycm")),
                            new LogAnalyticsQueryPackInner()
                                .withLocation("fp")
                                .withTags(mapOf("qqjnqgl", "rbt", "foooj", "qgn", "saagdf", "wifsq")),
                            new LogAnalyticsQueryPackInner()
                                .withLocation("eitjz")
                                .withTags(mapOf("hs", "usarhmofc", "xukcdmpar", "yurkdtmlxhekuksj"))))
                .withNextLink("nryrtihf");
        model = BinaryData.fromObject(model).toObject(LogAnalyticsQueryPackListResult.class);
        Assertions.assertEquals("bsphrupidgsybbe", model.value().get(0).location());
        Assertions.assertEquals("hoycm", model.value().get(0).tags().get("xaobhdxbmtqioqjz"));
        Assertions.assertEquals("nryrtihf", model.nextLink());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
