// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.loganalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.loganalytics.fluent.models.TableInner;
import com.azure.resourcemanager.loganalytics.models.Column;
import com.azure.resourcemanager.loganalytics.models.RestoredLogs;
import com.azure.resourcemanager.loganalytics.models.Schema;
import com.azure.resourcemanager.loganalytics.models.SearchResults;
import com.azure.resourcemanager.loganalytics.models.TablePlanEnum;
import com.azure.resourcemanager.loganalytics.models.TablesListResult;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class TablesListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TablesListResult model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"retentionInDays\":1528263402,\"totalRetentionInDays\":2021027348,\"archiveRetentionInDays\":1595182067,\"searchResults\":{\"query\":\"uzvx\",\"description\":\"i\",\"limit\":657702258,\"startSearchTime\":\"2021-02-10T22:06:59Z\",\"endSearchTime\":\"2021-02-28T18:44:38Z\",\"sourceTable\":\"ifqjz\",\"azureAsyncOperationId\":\"mrhublwpc\"},\"restoredLogs\":{\"startRestoreTime\":\"2021-05-30T11:00:48Z\",\"endRestoreTime\":\"2021-10-26T03:51:19Z\",\"sourceTable\":\"upauut\",\"azureAsyncOperationId\":\"oqh\"},\"resultStatistics\":{\"progress\":33.277763,\"ingestedRecords\":89548348,\"scannedGb\":77.23144},\"plan\":\"Basic\",\"lastPlanModifiedDate\":\"qntcypsxjvfoimwk\",\"schema\":{\"name\":\"rcizjxvyd\",\"displayName\":\"eacvl\",\"description\":\"ygdyftumrtw\",\"columns\":[{},{},{},{}],\"standardColumns\":[{}],\"categories\":[\"iw\",\"ojgcyzt\",\"fmznba\"],\"labels\":[\"hchqnrnrpx\"],\"source\":\"customer\",\"tableType\":\"SearchResults\",\"tableSubType\":\"DataCollectionRuleBased\",\"solutions\":[\"aifmvikl\",\"ydv\"]},\"provisioningState\":\"Succeeded\",\"retentionInDaysAsDefault\":false,\"totalRetentionInDaysAsDefault\":false},\"systemData\":{\"createdBy\":\"cvdsrhnj\",\"createdByType\":\"ManagedIdentity\",\"createdAt\":\"2020-12-31T10:30:45Z\",\"lastModifiedBy\":\"novqfzge\",\"lastModifiedByType\":\"ManagedIdentity\",\"lastModifiedAt\":\"2021-03-01T12:10:43Z\"},\"id\":\"uljltduceamtmcz\",\"name\":\"o\",\"type\":\"ejwcwwqiok\"},{\"properties\":{\"retentionInDays\":603460584,\"totalRetentionInDays\":1605221592,\"archiveRetentionInDays\":2132194654,\"searchResults\":{\"query\":\"p\",\"description\":\"prvkwcfzqljyxgtc\",\"limit\":1540711967,\"startSearchTime\":\"2020-12-22T20:00:46Z\",\"endSearchTime\":\"2021-09-18T23:49:01Z\",\"sourceTable\":\"shmkxmaehvbbxur\",\"azureAsyncOperationId\":\"ltfnhtbaxkgx\"},\"restoredLogs\":{\"startRestoreTime\":\"2021-10-25T12:11:17Z\",\"endRestoreTime\":\"2021-03-11T22:09:20Z\",\"sourceTable\":\"kl\",\"azureAsyncOperationId\":\"pluodpv\"},\"resultStatistics\":{\"progress\":87.415924,\"ingestedRecords\":1795826446,\"scannedGb\":86.28688},\"plan\":\"Basic\",\"lastPlanModifiedDate\":\"ostgkts\",\"schema\":{\"name\":\"xeclzedqbcvhzlhp\",\"displayName\":\"dqkdlwwqfbu\",\"description\":\"kxtrq\",\"columns\":[{},{},{},{}],\"standardColumns\":[{},{},{},{}],\"categories\":[\"txhwgfws\"],\"labels\":[\"wcoezbrhub\"],\"source\":\"microsoft\",\"tableType\":\"Microsoft\",\"tableSubType\":\"DataCollectionRuleBased\",\"solutions\":[\"okkqfqjbvleo\"]},\"provisioningState\":\"Updating\",\"retentionInDaysAsDefault\":true,\"totalRetentionInDaysAsDefault\":true},\"systemData\":{\"createdBy\":\"zf\",\"createdByType\":\"Key\",\"createdAt\":\"2021-06-05T20:28:23Z\",\"lastModifiedBy\":\"qybaryeua\",\"lastModifiedByType\":\"User\",\"lastModifiedAt\":\"2021-04-14T17:43:50Z\"},\"id\":\"bqgzslesjcbhern\",\"name\":\"tiewdj\",\"type\":\"vbquwr\"}]}")
                .toObject(TablesListResult.class);
        Assertions.assertEquals(1528263402, model.value().get(0).retentionInDays());
        Assertions.assertEquals(2021027348, model.value().get(0).totalRetentionInDays());
        Assertions.assertEquals("uzvx", model.value().get(0).searchResults().query());
        Assertions.assertEquals("i", model.value().get(0).searchResults().description());
        Assertions.assertEquals(657702258, model.value().get(0).searchResults().limit());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-02-10T22:06:59Z"), model.value().get(0).searchResults().startSearchTime());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-02-28T18:44:38Z"), model.value().get(0).searchResults().endSearchTime());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-05-30T11:00:48Z"), model.value().get(0).restoredLogs().startRestoreTime());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-10-26T03:51:19Z"), model.value().get(0).restoredLogs().endRestoreTime());
        Assertions.assertEquals("upauut", model.value().get(0).restoredLogs().sourceTable());
        Assertions.assertEquals(TablePlanEnum.BASIC, model.value().get(0).plan());
        Assertions.assertEquals("rcizjxvyd", model.value().get(0).schema().name());
        Assertions.assertEquals("eacvl", model.value().get(0).schema().displayName());
        Assertions.assertEquals("ygdyftumrtw", model.value().get(0).schema().description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TablesListResult model =
            new TablesListResult()
                .withValue(
                    Arrays
                        .asList(
                            new TableInner()
                                .withRetentionInDays(1528263402)
                                .withTotalRetentionInDays(2021027348)
                                .withSearchResults(
                                    new SearchResults()
                                        .withQuery("uzvx")
                                        .withDescription("i")
                                        .withLimit(657702258)
                                        .withStartSearchTime(OffsetDateTime.parse("2021-02-10T22:06:59Z"))
                                        .withEndSearchTime(OffsetDateTime.parse("2021-02-28T18:44:38Z")))
                                .withRestoredLogs(
                                    new RestoredLogs()
                                        .withStartRestoreTime(OffsetDateTime.parse("2021-05-30T11:00:48Z"))
                                        .withEndRestoreTime(OffsetDateTime.parse("2021-10-26T03:51:19Z"))
                                        .withSourceTable("upauut"))
                                .withPlan(TablePlanEnum.BASIC)
                                .withSchema(
                                    new Schema()
                                        .withName("rcizjxvyd")
                                        .withDisplayName("eacvl")
                                        .withDescription("ygdyftumrtw")
                                        .withColumns(
                                            Arrays.asList(new Column(), new Column(), new Column(), new Column()))),
                            new TableInner()
                                .withRetentionInDays(603460584)
                                .withTotalRetentionInDays(1605221592)
                                .withSearchResults(
                                    new SearchResults()
                                        .withQuery("p")
                                        .withDescription("prvkwcfzqljyxgtc")
                                        .withLimit(1540711967)
                                        .withStartSearchTime(OffsetDateTime.parse("2020-12-22T20:00:46Z"))
                                        .withEndSearchTime(OffsetDateTime.parse("2021-09-18T23:49:01Z")))
                                .withRestoredLogs(
                                    new RestoredLogs()
                                        .withStartRestoreTime(OffsetDateTime.parse("2021-10-25T12:11:17Z"))
                                        .withEndRestoreTime(OffsetDateTime.parse("2021-03-11T22:09:20Z"))
                                        .withSourceTable("kl"))
                                .withPlan(TablePlanEnum.BASIC)
                                .withSchema(
                                    new Schema()
                                        .withName("xeclzedqbcvhzlhp")
                                        .withDisplayName("dqkdlwwqfbu")
                                        .withDescription("kxtrq")
                                        .withColumns(
                                            Arrays.asList(new Column(), new Column(), new Column(), new Column())))));
        model = BinaryData.fromObject(model).toObject(TablesListResult.class);
        Assertions.assertEquals(1528263402, model.value().get(0).retentionInDays());
        Assertions.assertEquals(2021027348, model.value().get(0).totalRetentionInDays());
        Assertions.assertEquals("uzvx", model.value().get(0).searchResults().query());
        Assertions.assertEquals("i", model.value().get(0).searchResults().description());
        Assertions.assertEquals(657702258, model.value().get(0).searchResults().limit());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-02-10T22:06:59Z"), model.value().get(0).searchResults().startSearchTime());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-02-28T18:44:38Z"), model.value().get(0).searchResults().endSearchTime());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-05-30T11:00:48Z"), model.value().get(0).restoredLogs().startRestoreTime());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-10-26T03:51:19Z"), model.value().get(0).restoredLogs().endRestoreTime());
        Assertions.assertEquals("upauut", model.value().get(0).restoredLogs().sourceTable());
        Assertions.assertEquals(TablePlanEnum.BASIC, model.value().get(0).plan());
        Assertions.assertEquals("rcizjxvyd", model.value().get(0).schema().name());
        Assertions.assertEquals("eacvl", model.value().get(0).schema().displayName());
        Assertions.assertEquals("ygdyftumrtw", model.value().get(0).schema().description());
    }
}
