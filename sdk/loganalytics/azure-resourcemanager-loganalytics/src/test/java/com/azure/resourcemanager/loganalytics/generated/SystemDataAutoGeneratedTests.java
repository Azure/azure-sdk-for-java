// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.loganalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.loganalytics.models.CreatedByType;
import com.azure.resourcemanager.loganalytics.models.SystemDataAutoGenerated;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class SystemDataAutoGeneratedTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SystemDataAutoGenerated model = BinaryData.fromString(
            "{\"createdBy\":\"dntwjchrdgo\",\"createdByType\":\"User\",\"createdAt\":\"2021-10-03T14:03:48Z\",\"lastModifiedBy\":\"ctondz\",\"lastModifiedByType\":\"User\",\"lastModifiedAt\":\"2021-02-01T20:04:58Z\"}")
            .toObject(SystemDataAutoGenerated.class);
        Assertions.assertEquals("dntwjchrdgo", model.createdBy());
        Assertions.assertEquals(CreatedByType.USER, model.createdByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-03T14:03:48Z"), model.createdAt());
        Assertions.assertEquals("ctondz", model.lastModifiedBy());
        Assertions.assertEquals(CreatedByType.USER, model.lastModifiedByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-01T20:04:58Z"), model.lastModifiedAt());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SystemDataAutoGenerated model = new SystemDataAutoGenerated().withCreatedBy("dntwjchrdgo")
            .withCreatedByType(CreatedByType.USER)
            .withCreatedAt(OffsetDateTime.parse("2021-10-03T14:03:48Z"))
            .withLastModifiedBy("ctondz")
            .withLastModifiedByType(CreatedByType.USER)
            .withLastModifiedAt(OffsetDateTime.parse("2021-02-01T20:04:58Z"));
        model = BinaryData.fromObject(model).toObject(SystemDataAutoGenerated.class);
        Assertions.assertEquals("dntwjchrdgo", model.createdBy());
        Assertions.assertEquals(CreatedByType.USER, model.createdByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-03T14:03:48Z"), model.createdAt());
        Assertions.assertEquals("ctondz", model.lastModifiedBy());
        Assertions.assertEquals(CreatedByType.USER, model.lastModifiedByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-01T20:04:58Z"), model.lastModifiedAt());
    }
}
