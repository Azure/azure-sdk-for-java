// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.loganalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.loganalytics.fluent.models.DataExportProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DataExportPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataExportProperties model =
            BinaryData
                .fromString(
                    "{\"dataExportId\":\"svexcsonpclhoco\",\"tableNames\":[\"lkevle\",\"gz\"],\"destination\":{\"resourceId\":\"u\",\"type\":\"EventHub\",\"metaData\":{\"eventHubName\":\"axkffei\"}},\"enable\":false,\"createdDate\":\"vmezy\",\"lastModifiedDate\":\"hxmzsbbzoggig\"}")
                .toObject(DataExportProperties.class);
        Assertions.assertEquals("svexcsonpclhoco", model.dataExportId());
        Assertions.assertEquals("lkevle", model.tableNames().get(0));
        Assertions.assertEquals(false, model.enable());
        Assertions.assertEquals("vmezy", model.createdDate());
        Assertions.assertEquals("hxmzsbbzoggig", model.lastModifiedDate());
        Assertions.assertEquals("u", model.resourceId());
        Assertions.assertEquals("axkffei", model.eventHubName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataExportProperties model =
            new DataExportProperties()
                .withDataExportId("svexcsonpclhoco")
                .withTableNames(Arrays.asList("lkevle", "gz"))
                .withEnable(false)
                .withCreatedDate("vmezy")
                .withLastModifiedDate("hxmzsbbzoggig")
                .withResourceId("u")
                .withEventHubName("axkffei");
        model = BinaryData.fromObject(model).toObject(DataExportProperties.class);
        Assertions.assertEquals("svexcsonpclhoco", model.dataExportId());
        Assertions.assertEquals("lkevle", model.tableNames().get(0));
        Assertions.assertEquals(false, model.enable());
        Assertions.assertEquals("vmezy", model.createdDate());
        Assertions.assertEquals("hxmzsbbzoggig", model.lastModifiedDate());
        Assertions.assertEquals("u", model.resourceId());
        Assertions.assertEquals("axkffei", model.eventHubName());
    }
}
