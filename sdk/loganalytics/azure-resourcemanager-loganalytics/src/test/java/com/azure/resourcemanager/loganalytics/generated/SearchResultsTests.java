// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.loganalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.loganalytics.models.SearchResults;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class SearchResultsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SearchResults model =
            BinaryData
                .fromString(
                    "{\"query\":\"hpxlktwkuziycs\",\"description\":\"vu\",\"limit\":1693563757,\"startSearchTime\":\"2021-07-18T01:41:15Z\",\"endSearchTime\":\"2021-01-17T09:58:42Z\",\"sourceTable\":\"h\",\"azureAsyncOperationId\":\"qedcgzulwm\"}")
                .toObject(SearchResults.class);
        Assertions.assertEquals("hpxlktwkuziycs", model.query());
        Assertions.assertEquals("vu", model.description());
        Assertions.assertEquals(1693563757, model.limit());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-18T01:41:15Z"), model.startSearchTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-17T09:58:42Z"), model.endSearchTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SearchResults model =
            new SearchResults()
                .withQuery("hpxlktwkuziycs")
                .withDescription("vu")
                .withLimit(1693563757)
                .withStartSearchTime(OffsetDateTime.parse("2021-07-18T01:41:15Z"))
                .withEndSearchTime(OffsetDateTime.parse("2021-01-17T09:58:42Z"));
        model = BinaryData.fromObject(model).toObject(SearchResults.class);
        Assertions.assertEquals("hpxlktwkuziycs", model.query());
        Assertions.assertEquals("vu", model.description());
        Assertions.assertEquals(1693563757, model.limit());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-18T01:41:15Z"), model.startSearchTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-17T09:58:42Z"), model.endSearchTime());
    }
}
