// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.loganalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.loganalytics.models.SearchResults;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class SearchResultsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SearchResults model = BinaryData.fromString(
            "{\"query\":\"fffwafqroudaspav\",\"description\":\"hrv\",\"limit\":901509130,\"startSearchTime\":\"2021-12-01T01:47:09Z\",\"endSearchTime\":\"2021-08-09T03:45:34Z\",\"sourceTable\":\"dhcxgkmoy\",\"azureAsyncOperationId\":\"dyuib\"}")
            .toObject(SearchResults.class);
        Assertions.assertEquals("fffwafqroudaspav", model.query());
        Assertions.assertEquals("hrv", model.description());
        Assertions.assertEquals(901509130, model.limit());
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-01T01:47:09Z"), model.startSearchTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-09T03:45:34Z"), model.endSearchTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SearchResults model = new SearchResults().withQuery("fffwafqroudaspav")
            .withDescription("hrv")
            .withLimit(901509130)
            .withStartSearchTime(OffsetDateTime.parse("2021-12-01T01:47:09Z"))
            .withEndSearchTime(OffsetDateTime.parse("2021-08-09T03:45:34Z"));
        model = BinaryData.fromObject(model).toObject(SearchResults.class);
        Assertions.assertEquals("fffwafqroudaspav", model.query());
        Assertions.assertEquals("hrv", model.description());
        Assertions.assertEquals(901509130, model.limit());
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-01T01:47:09Z"), model.startSearchTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-09T03:45:34Z"), model.endSearchTime());
    }
}
