/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.loganalytics.v2020_03_01_preview.implementation;

import com.microsoft.azure.management.loganalytics.v2020_03_01_preview.MetricName;
import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * A metric describing the usage of a resource.
 */
public class UsageMetricInner {
    /**
     * The name of the metric.
     */
    @JsonProperty(value = "name")
    private MetricName name;

    /**
     * The units used for the metric.
     */
    @JsonProperty(value = "unit")
    private String unit;

    /**
     * The current value of the metric.
     */
    @JsonProperty(value = "currentValue")
    private Double currentValue;

    /**
     * The quota limit for the metric.
     */
    @JsonProperty(value = "limit")
    private Double limit;

    /**
     * The time that the metric's value will reset.
     */
    @JsonProperty(value = "nextResetTime")
    private DateTime nextResetTime;

    /**
     * The quota period that determines the length of time between value
     * resets.
     */
    @JsonProperty(value = "quotaPeriod")
    private String quotaPeriod;

    /**
     * Get the name of the metric.
     *
     * @return the name value
     */
    public MetricName name() {
        return this.name;
    }

    /**
     * Set the name of the metric.
     *
     * @param name the name value to set
     * @return the UsageMetricInner object itself.
     */
    public UsageMetricInner withName(MetricName name) {
        this.name = name;
        return this;
    }

    /**
     * Get the units used for the metric.
     *
     * @return the unit value
     */
    public String unit() {
        return this.unit;
    }

    /**
     * Set the units used for the metric.
     *
     * @param unit the unit value to set
     * @return the UsageMetricInner object itself.
     */
    public UsageMetricInner withUnit(String unit) {
        this.unit = unit;
        return this;
    }

    /**
     * Get the current value of the metric.
     *
     * @return the currentValue value
     */
    public Double currentValue() {
        return this.currentValue;
    }

    /**
     * Set the current value of the metric.
     *
     * @param currentValue the currentValue value to set
     * @return the UsageMetricInner object itself.
     */
    public UsageMetricInner withCurrentValue(Double currentValue) {
        this.currentValue = currentValue;
        return this;
    }

    /**
     * Get the quota limit for the metric.
     *
     * @return the limit value
     */
    public Double limit() {
        return this.limit;
    }

    /**
     * Set the quota limit for the metric.
     *
     * @param limit the limit value to set
     * @return the UsageMetricInner object itself.
     */
    public UsageMetricInner withLimit(Double limit) {
        this.limit = limit;
        return this;
    }

    /**
     * Get the time that the metric's value will reset.
     *
     * @return the nextResetTime value
     */
    public DateTime nextResetTime() {
        return this.nextResetTime;
    }

    /**
     * Set the time that the metric's value will reset.
     *
     * @param nextResetTime the nextResetTime value to set
     * @return the UsageMetricInner object itself.
     */
    public UsageMetricInner withNextResetTime(DateTime nextResetTime) {
        this.nextResetTime = nextResetTime;
        return this;
    }

    /**
     * Get the quota period that determines the length of time between value resets.
     *
     * @return the quotaPeriod value
     */
    public String quotaPeriod() {
        return this.quotaPeriod;
    }

    /**
     * Set the quota period that determines the length of time between value resets.
     *
     * @param quotaPeriod the quotaPeriod value to set
     * @return the UsageMetricInner object itself.
     */
    public UsageMetricInner withQuotaPeriod(String quotaPeriod) {
        this.quotaPeriod = quotaPeriod;
        return this;
    }

}
