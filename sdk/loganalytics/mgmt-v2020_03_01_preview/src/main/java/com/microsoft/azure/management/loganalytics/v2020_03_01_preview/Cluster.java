/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.loganalytics.v2020_03_01_preview;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.loganalytics.v2020_03_01_preview.implementation.LogAnalyticsManager;
import com.microsoft.azure.management.loganalytics.v2020_03_01_preview.implementation.ClusterInner;

/**
 * Type representing Cluster.
 */
public interface Cluster extends HasInner<ClusterInner>, Resource, GroupableResourceCore<LogAnalyticsManager, ClusterInner>, HasResourceGroup, Refreshable<Cluster>, Updatable<Cluster.Update>, HasManager<LogAnalyticsManager> {
    /**
     * @return the clusterId value.
     */
    String clusterId();

    /**
     * @return the identity value.
     */
    Identity identity();

    /**
     * @return the keyVaultProperties value.
     */
    KeyVaultProperties keyVaultProperties();

    /**
     * @return the nextLink value.
     */
    String nextLink();

    /**
     * @return the provisioningState value.
     */
    ClusterEntityStatus provisioningState();

    /**
     * @return the sku value.
     */
    ClusterSku sku();

    /**
     * The entirety of the Cluster definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of Cluster definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a Cluster definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the Cluster definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithCreate> {
        }

        /**
         * The stage of the cluster definition allowing to specify Identity.
         */
        interface WithIdentity {
            /**
             * Specifies identity.
             * @param identity The identity of the resource
             * @return the next definition stage
             */
            WithCreate withIdentity(Identity identity);
        }

        /**
         * The stage of the cluster definition allowing to specify KeyVaultProperties.
         */
        interface WithKeyVaultProperties {
            /**
             * Specifies keyVaultProperties.
             * @param keyVaultProperties The associated key properties
             * @return the next definition stage
             */
            WithCreate withKeyVaultProperties(KeyVaultProperties keyVaultProperties);
        }

        /**
         * The stage of the cluster definition allowing to specify NextLink.
         */
        interface WithNextLink {
            /**
             * Specifies nextLink.
             * @param nextLink The link used to get the next page of recommendations
             * @return the next definition stage
             */
            WithCreate withNextLink(String nextLink);
        }

        /**
         * The stage of the cluster definition allowing to specify Sku.
         */
        interface WithSku {
            /**
             * Specifies sku.
             * @param sku The sku properties
             * @return the next definition stage
             */
            WithCreate withSku(ClusterSku sku);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<Cluster>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithIdentity, DefinitionStages.WithKeyVaultProperties, DefinitionStages.WithNextLink, DefinitionStages.WithSku {
        }
    }
    /**
     * The template for a Cluster update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<Cluster>, Resource.UpdateWithTags<Update>, UpdateStages.WithKeyVaultProperties, UpdateStages.WithSku {
    }

    /**
     * Grouping of Cluster update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the cluster update allowing to specify KeyVaultProperties.
         */
        interface WithKeyVaultProperties {
            /**
             * Specifies keyVaultProperties.
             * @param keyVaultProperties The associated key properties
             * @return the next update stage
             */
            Update withKeyVaultProperties(KeyVaultProperties keyVaultProperties);
        }

        /**
         * The stage of the cluster update allowing to specify Sku.
         */
        interface WithSku {
            /**
             * Specifies sku.
             * @param sku The sku properties
             * @return the next update stage
             */
            Update withSku(ClusterSku sku);
        }

    }
}
