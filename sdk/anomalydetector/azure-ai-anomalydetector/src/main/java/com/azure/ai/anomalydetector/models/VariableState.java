// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.anomalydetector.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** The VariableState model. */
@Fluent
public final class VariableState {
    /*
     * Variable name.
     */
    @JsonProperty(value = "variable")
    private String variable;

    /*
     * Proportion of NaN values filled of the variable.
     */
    @JsonProperty(value = "filledNARatio")
    private Float filledNARatio;

    /*
     * Number of effective points counted.
     */
    @JsonProperty(value = "effectiveCount")
    private Integer effectiveCount;

    /*
     * Start time of the variable.
     */
    @JsonProperty(value = "startTime")
    private OffsetDateTime startTime;

    /*
     * End time of the variable.
     */
    @JsonProperty(value = "endTime")
    private OffsetDateTime endTime;

    /**
     * Get the variable property: Variable name.
     *
     * @return the variable value.
     */
    public String getVariable() {
        return this.variable;
    }

    /**
     * Set the variable property: Variable name.
     *
     * @param variable the variable value to set.
     * @return the VariableState object itself.
     */
    public VariableState setVariable(String variable) {
        this.variable = variable;
        return this;
    }

    /**
     * Get the filledNARatio property: Proportion of NaN values filled of the variable.
     *
     * @return the filledNARatio value.
     */
    public Float getFilledNARatio() {
        return this.filledNARatio;
    }

    /**
     * Set the filledNARatio property: Proportion of NaN values filled of the variable.
     *
     * @param filledNARatio the filledNARatio value to set.
     * @return the VariableState object itself.
     */
    public VariableState setFilledNARatio(Float filledNARatio) {
        this.filledNARatio = filledNARatio;
        return this;
    }

    /**
     * Get the effectiveCount property: Number of effective points counted.
     *
     * @return the effectiveCount value.
     */
    public Integer getEffectiveCount() {
        return this.effectiveCount;
    }

    /**
     * Set the effectiveCount property: Number of effective points counted.
     *
     * @param effectiveCount the effectiveCount value to set.
     * @return the VariableState object itself.
     */
    public VariableState setEffectiveCount(Integer effectiveCount) {
        this.effectiveCount = effectiveCount;
        return this;
    }

    /**
     * Get the startTime property: Start time of the variable.
     *
     * @return the startTime value.
     */
    public OffsetDateTime getStartTime() {
        return this.startTime;
    }

    /**
     * Set the startTime property: Start time of the variable.
     *
     * @param startTime the startTime value to set.
     * @return the VariableState object itself.
     */
    public VariableState setStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * Get the endTime property: End time of the variable.
     *
     * @return the endTime value.
     */
    public OffsetDateTime getEndTime() {
        return this.endTime;
    }

    /**
     * Set the endTime property: End time of the variable.
     *
     * @param endTime the endTime value to set.
     * @return the VariableState object itself.
     */
    public VariableState setEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
}
