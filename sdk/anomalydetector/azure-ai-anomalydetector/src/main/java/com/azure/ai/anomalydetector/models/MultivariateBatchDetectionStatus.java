// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.anomalydetector.models;

import com.azure.core.util.ExpandableStringEnum;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.Collection;

/** Defines values for MultivariateBatchDetectionStatus. */
public final class MultivariateBatchDetectionStatus extends ExpandableStringEnum<MultivariateBatchDetectionStatus> {
    /** Static value CREATED for MultivariateBatchDetectionStatus. */
    public static final MultivariateBatchDetectionStatus CREATED = fromString("CREATED");

    /** Static value RUNNING for MultivariateBatchDetectionStatus. */
    public static final MultivariateBatchDetectionStatus RUNNING = fromString("RUNNING");

    /** Static value READY for MultivariateBatchDetectionStatus. */
    public static final MultivariateBatchDetectionStatus READY = fromString("READY");

    /** Static value FAILED for MultivariateBatchDetectionStatus. */
    public static final MultivariateBatchDetectionStatus FAILED = fromString("FAILED");

    /**
     * Creates a new instance of MultivariateBatchDetectionStatus value.
     *
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public MultivariateBatchDetectionStatus() {}

    /**
     * Creates or finds a MultivariateBatchDetectionStatus from its string representation.
     *
     * @param name a name to look for.
     * @return the corresponding MultivariateBatchDetectionStatus.
     */
    @JsonCreator
    public static MultivariateBatchDetectionStatus fromString(String name) {
        return fromString(name, MultivariateBatchDetectionStatus.class);
    }

    /**
     * Gets known MultivariateBatchDetectionStatus values.
     *
     * @return known MultivariateBatchDetectionStatus values.
     */
    public static Collection<MultivariateBatchDetectionStatus> values() {
        return values(MultivariateBatchDetectionStatus.class);
    }
}
