// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.anomalydetector.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Request to submit a detection. */
@Fluent
public final class DetectionRequest {
    /*
     * source file link of the input variables, each variable will be a csv
     * with two columns, the first column will be timestamp, the second column
     * will be value.Besides these variable csv files, a extra meta.json can be
     * included in th zip file if you would like to rename a variable.Be
     * default, the file name of the variable will be used as the variable
     * name. The variables used in detection should be consistent with
     * variables in the model used for detection.
     */
    @JsonProperty(value = "source", required = true)
    private String source;

    /*
     * A require field, start time of data be used for detection, should be
     * date-time.
     */
    @JsonProperty(value = "startTime", required = true)
    private OffsetDateTime startTime;

    /*
     * A require field, end time of data be used for detection, should be
     * date-time.
     */
    @JsonProperty(value = "endTime", required = true)
    private OffsetDateTime endTime;

    /**
     * Get the source property: source file link of the input variables, each variable will be a csv with two columns,
     * the first column will be timestamp, the second column will be value.Besides these variable csv files, a extra
     * meta.json can be included in th zip file if you would like to rename a variable.Be default, the file name of the
     * variable will be used as the variable name. The variables used in detection should be consistent with variables
     * in the model used for detection.
     *
     * @return the source value.
     */
    public String getSource() {
        return this.source;
    }

    /**
     * Set the source property: source file link of the input variables, each variable will be a csv with two columns,
     * the first column will be timestamp, the second column will be value.Besides these variable csv files, a extra
     * meta.json can be included in th zip file if you would like to rename a variable.Be default, the file name of the
     * variable will be used as the variable name. The variables used in detection should be consistent with variables
     * in the model used for detection.
     *
     * @param source the source value to set.
     * @return the DetectionRequest object itself.
     */
    public DetectionRequest setSource(String source) {
        this.source = source;
        return this;
    }

    /**
     * Get the startTime property: A require field, start time of data be used for detection, should be date-time.
     *
     * @return the startTime value.
     */
    public OffsetDateTime getStartTime() {
        return this.startTime;
    }

    /**
     * Set the startTime property: A require field, start time of data be used for detection, should be date-time.
     *
     * @param startTime the startTime value to set.
     * @return the DetectionRequest object itself.
     */
    public DetectionRequest setStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * Get the endTime property: A require field, end time of data be used for detection, should be date-time.
     *
     * @return the endTime value.
     */
    public OffsetDateTime getEndTime() {
        return this.endTime;
    }

    /**
     * Set the endTime property: A require field, end time of data be used for detection, should be date-time.
     *
     * @param endTime the endTime value to set.
     * @return the DetectionRequest object itself.
     */
    public DetectionRequest setEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
}
