// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.anomalydetector.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The AnomalyValue model. */
@Fluent
public final class AnomalyValue {
    /*
     * If current timestamp is an anomaly, contributors will show potential
     * root cause for thus anomaly. Contributors can help us understand why
     * current timestamp has been detected as an anomaly.
     */
    @JsonProperty(value = "contributors")
    private List<AnomalyContributor> contributors;

    /*
     * To indicate whether current timestamp is anomaly or not
     */
    @JsonProperty(value = "isAnomaly", required = true)
    private boolean isAnomaly;

    /*
     * anomaly score of the current timestamp, the more significant an anomaly
     * is, the higher the score will be
     */
    @JsonProperty(value = "severity", required = true)
    private float severity;

    /*
     * anomaly score of the current timestamp, the more significant an anomaly
     * is, the higher the score will be, score measures global significance
     */
    @JsonProperty(value = "score")
    private Float score;

    /**
     * Get the contributors property: If current timestamp is an anomaly, contributors will show potential root cause
     * for thus anomaly. Contributors can help us understand why current timestamp has been detected as an anomaly.
     *
     * @return the contributors value.
     */
    public List<AnomalyContributor> getContributors() {
        return this.contributors;
    }

    /**
     * Set the contributors property: If current timestamp is an anomaly, contributors will show potential root cause
     * for thus anomaly. Contributors can help us understand why current timestamp has been detected as an anomaly.
     *
     * @param contributors the contributors value to set.
     * @return the AnomalyValue object itself.
     */
    public AnomalyValue setContributors(List<AnomalyContributor> contributors) {
        this.contributors = contributors;
        return this;
    }

    /**
     * Get the isAnomaly property: To indicate whether current timestamp is anomaly or not.
     *
     * @return the isAnomaly value.
     */
    public boolean isAnomaly() {
        return this.isAnomaly;
    }

    /**
     * Set the isAnomaly property: To indicate whether current timestamp is anomaly or not.
     *
     * @param isAnomaly the isAnomaly value to set.
     * @return the AnomalyValue object itself.
     */
    public AnomalyValue setIsAnomaly(boolean isAnomaly) {
        this.isAnomaly = isAnomaly;
        return this;
    }

    /**
     * Get the severity property: anomaly score of the current timestamp, the more significant an anomaly is, the higher
     * the score will be.
     *
     * @return the severity value.
     */
    public float getSeverity() {
        return this.severity;
    }

    /**
     * Set the severity property: anomaly score of the current timestamp, the more significant an anomaly is, the higher
     * the score will be.
     *
     * @param severity the severity value to set.
     * @return the AnomalyValue object itself.
     */
    public AnomalyValue setSeverity(float severity) {
        this.severity = severity;
        return this;
    }

    /**
     * Get the score property: anomaly score of the current timestamp, the more significant an anomaly is, the higher
     * the score will be, score measures global significance.
     *
     * @return the score value.
     */
    public Float getScore() {
        return this.score;
    }

    /**
     * Set the score property: anomaly score of the current timestamp, the more significant an anomaly is, the higher
     * the score will be, score measures global significance.
     *
     * @param score the score value to set.
     * @return the AnomalyValue object itself.
     */
    public AnomalyValue setScore(Float score) {
        this.score = score;
        return this;
    }
}
