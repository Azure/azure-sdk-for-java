// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.advisor.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.advisor.models.Category;
import com.azure.resourcemanager.advisor.models.DigestConfig;
import com.azure.resourcemanager.advisor.models.DigestConfigState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DigestConfigTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DigestConfig model = BinaryData.fromString(
            "{\"name\":\"qi\",\"actionGroupResourceId\":\"hungbwjzrnf\",\"frequency\":1847576577,\"categories\":[\"OperationalExcellence\"],\"language\":\"emv\",\"state\":\"Active\"}")
            .toObject(DigestConfig.class);
        Assertions.assertEquals("qi", model.name());
        Assertions.assertEquals("hungbwjzrnf", model.actionGroupResourceId());
        Assertions.assertEquals(1847576577, model.frequency());
        Assertions.assertEquals(Category.OPERATIONAL_EXCELLENCE, model.categories().get(0));
        Assertions.assertEquals("emv", model.language());
        Assertions.assertEquals(DigestConfigState.ACTIVE, model.state());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DigestConfig model = new DigestConfig().withName("qi")
            .withActionGroupResourceId("hungbwjzrnf")
            .withFrequency(1847576577)
            .withCategories(Arrays.asList(Category.OPERATIONAL_EXCELLENCE))
            .withLanguage("emv")
            .withState(DigestConfigState.ACTIVE);
        model = BinaryData.fromObject(model).toObject(DigestConfig.class);
        Assertions.assertEquals("qi", model.name());
        Assertions.assertEquals("hungbwjzrnf", model.actionGroupResourceId());
        Assertions.assertEquals(1847576577, model.frequency());
        Assertions.assertEquals(Category.OPERATIONAL_EXCELLENCE, model.categories().get(0));
        Assertions.assertEquals("emv", model.language());
        Assertions.assertEquals(DigestConfigState.ACTIVE, model.state());
    }
}
