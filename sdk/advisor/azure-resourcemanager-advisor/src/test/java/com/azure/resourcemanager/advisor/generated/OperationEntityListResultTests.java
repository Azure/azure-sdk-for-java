// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.advisor.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.advisor.fluent.models.OperationEntityInner;
import com.azure.resourcemanager.advisor.models.OperationDisplayInfo;
import com.azure.resourcemanager.advisor.models.OperationEntityListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OperationEntityListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationEntityListResult model = BinaryData.fromString(
            "{\"nextLink\":\"mpukgriw\",\"value\":[{\"name\":\"fbxzpuzycisp\",\"display\":{\"description\":\"ahmgkbrp\",\"operation\":\"dhibnuq\",\"provider\":\"pikad\",\"resource\":\"vtq\"}},{\"name\":\"n\",\"display\":{\"description\":\"nhijggmebfsi\",\"operation\":\"butr\",\"provider\":\"pnazzm\",\"resource\":\"runmp\"}},{\"name\":\"tdbhrbnla\",\"display\":{\"description\":\"myskpbhenbtkcxy\",\"operation\":\"y\",\"provider\":\"rsyn\",\"resource\":\"idybyxczf\"}},{\"name\":\"haaxdbabphl\",\"display\":{\"description\":\"lfktsths\",\"operation\":\"ocmnyyazttbtwwrq\",\"provider\":\"edckzywbiexzfey\",\"resource\":\"axibxujw\"}}]}")
            .toObject(OperationEntityListResult.class);
        Assertions.assertEquals("mpukgriw", model.nextLink());
        Assertions.assertEquals("fbxzpuzycisp", model.value().get(0).name());
        Assertions.assertEquals("ahmgkbrp", model.value().get(0).display().description());
        Assertions.assertEquals("dhibnuq", model.value().get(0).display().operation());
        Assertions.assertEquals("pikad", model.value().get(0).display().provider());
        Assertions.assertEquals("vtq", model.value().get(0).display().resource());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationEntityListResult model = new OperationEntityListResult().withNextLink("mpukgriw")
            .withValue(Arrays.asList(
                new OperationEntityInner().withName("fbxzpuzycisp")
                    .withDisplay(new OperationDisplayInfo().withDescription("ahmgkbrp")
                        .withOperation("dhibnuq")
                        .withProvider("pikad")
                        .withResource("vtq")),
                new OperationEntityInner().withName("n")
                    .withDisplay(new OperationDisplayInfo().withDescription("nhijggmebfsi")
                        .withOperation("butr")
                        .withProvider("pnazzm")
                        .withResource("runmp")),
                new OperationEntityInner().withName("tdbhrbnla")
                    .withDisplay(new OperationDisplayInfo().withDescription("myskpbhenbtkcxy")
                        .withOperation("y")
                        .withProvider("rsyn")
                        .withResource("idybyxczf")),
                new OperationEntityInner().withName("haaxdbabphl")
                    .withDisplay(new OperationDisplayInfo().withDescription("lfktsths")
                        .withOperation("ocmnyyazttbtwwrq")
                        .withProvider("edckzywbiexzfey")
                        .withResource("axibxujw"))));
        model = BinaryData.fromObject(model).toObject(OperationEntityListResult.class);
        Assertions.assertEquals("mpukgriw", model.nextLink());
        Assertions.assertEquals("fbxzpuzycisp", model.value().get(0).name());
        Assertions.assertEquals("ahmgkbrp", model.value().get(0).display().description());
        Assertions.assertEquals("dhibnuq", model.value().get(0).display().operation());
        Assertions.assertEquals("pikad", model.value().get(0).display().provider());
        Assertions.assertEquals("vtq", model.value().get(0).display().resource());
    }
}
