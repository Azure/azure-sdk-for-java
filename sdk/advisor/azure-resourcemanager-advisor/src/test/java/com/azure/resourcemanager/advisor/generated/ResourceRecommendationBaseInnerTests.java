// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.advisor.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.advisor.fluent.models.ResourceRecommendationBaseInner;
import com.azure.resourcemanager.advisor.models.Category;
import com.azure.resourcemanager.advisor.models.Impact;
import com.azure.resourcemanager.advisor.models.ResourceMetadata;
import com.azure.resourcemanager.advisor.models.ShortDescription;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class ResourceRecommendationBaseInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ResourceRecommendationBaseInner model = BinaryData.fromString(
            "{\"properties\":{\"category\":\"Cost\",\"impact\":\"Low\",\"impactedField\":\"hrc\",\"impactedValue\":\"nc\",\"lastUpdated\":\"2021-10-26T02:35:50Z\",\"metadata\":{\"coofsxlzev\":\"datafvm\",\"abcypmivk\":\"databmqj\"},\"recommendationTypeId\":\"zuvccfwnfnbacfio\",\"shortDescription\":{\"problem\":\"bxetqgtzxdpn\",\"solution\":\"qqwx\"},\"suppressionIds\":[\"37839f42-46dc-43e1-9db9-ca4fa26ae387\",\"3a7ecc4d-1550-44cd-80f0-5d2e3013b46e\",\"ca1cfab0-831f-429b-bc10-f401505cd32e\"],\"extendedProperties\":{\"njampm\":\"llnwsubi\"},\"resourceMetadata\":{\"resourceId\":\"zscxaqwo\",\"source\":\"hcbonqvpkvlr\",\"action\":{\"eipheoflokeyy\":\"dataea\",\"jp\":\"dataenjbdlwtgrhp\"},\"singular\":\"masxazjpqyegu\",\"plural\":\"hb\"},\"description\":\"hejjz\",\"label\":\"dudgwdslfhot\",\"learnMoreLink\":\"cynpwlbjnp\",\"potentialBenefits\":\"cftadeh\",\"actions\":[{\"uesnzwdejbavo\":\"datayfsoppu\",\"vudwx\":\"dataxzdmohctb\",\"gujjugwdkcglh\":\"datandnvo\",\"ofqweykhmenevfye\":\"datalazjdyggdtjixhbk\"},{\"yvdcsitynnaa\":\"datawhybcib\",\"eypvhezrkg\":\"datadectehfiqsc\",\"sle\":\"datahcjrefovgmk\"}],\"remediation\":{\"k\":\"dataxyqj\",\"jh\":\"dataattpngjcrcczsq\",\"ysou\":\"datamdajv\",\"canoaeupf\":\"dataq\"},\"exposedMetadataProperties\":{\"cma\":\"dataltrpmopj\",\"kthfui\":\"datau\",\"odpuozmyzydag\":\"dataaodsfcpkv\",\"hrdxwzywqsmbs\":\"datauaxbezyiuokkt\"}},\"id\":\"reximoryocfs\",\"name\":\"ksymd\",\"type\":\"ys\"}")
            .toObject(ResourceRecommendationBaseInner.class);
        Assertions.assertEquals(Category.COST, model.category());
        Assertions.assertEquals(Impact.LOW, model.impact());
        Assertions.assertEquals("hrc", model.impactedField());
        Assertions.assertEquals("nc", model.impactedValue());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-26T02:35:50Z"), model.lastUpdated());
        Assertions.assertEquals("zuvccfwnfnbacfio", model.recommendationTypeId());
        Assertions.assertEquals("bxetqgtzxdpn", model.shortDescription().problem());
        Assertions.assertEquals("qqwx", model.shortDescription().solution());
        Assertions.assertEquals(UUID.fromString("37839f42-46dc-43e1-9db9-ca4fa26ae387"), model.suppressionIds().get(0));
        Assertions.assertEquals("llnwsubi", model.extendedProperties().get("njampm"));
        Assertions.assertEquals("zscxaqwo", model.resourceMetadata().resourceId());
        Assertions.assertEquals("hcbonqvpkvlr", model.resourceMetadata().source());
        Assertions.assertEquals("masxazjpqyegu", model.resourceMetadata().singular());
        Assertions.assertEquals("hb", model.resourceMetadata().plural());
        Assertions.assertEquals("hejjz", model.description());
        Assertions.assertEquals("dudgwdslfhot", model.label());
        Assertions.assertEquals("cynpwlbjnp", model.learnMoreLink());
        Assertions.assertEquals("cftadeh", model.potentialBenefits());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ResourceRecommendationBaseInner model = new ResourceRecommendationBaseInner().withCategory(Category.COST)
            .withImpact(Impact.LOW)
            .withImpactedField("hrc")
            .withImpactedValue("nc")
            .withLastUpdated(OffsetDateTime.parse("2021-10-26T02:35:50Z"))
            .withMetadata(mapOf("coofsxlzev", "datafvm", "abcypmivk", "databmqj"))
            .withRecommendationTypeId("zuvccfwnfnbacfio")
            .withShortDescription(new ShortDescription().withProblem("bxetqgtzxdpn").withSolution("qqwx"))
            .withSuppressionIds(Arrays.asList(UUID.fromString("37839f42-46dc-43e1-9db9-ca4fa26ae387"),
                UUID.fromString("3a7ecc4d-1550-44cd-80f0-5d2e3013b46e"),
                UUID.fromString("ca1cfab0-831f-429b-bc10-f401505cd32e")))
            .withExtendedProperties(mapOf("njampm", "llnwsubi"))
            .withResourceMetadata(new ResourceMetadata().withResourceId("zscxaqwo")
                .withSource("hcbonqvpkvlr")
                .withAction(mapOf("eipheoflokeyy", "dataea", "jp", "dataenjbdlwtgrhp"))
                .withSingular("masxazjpqyegu")
                .withPlural("hb"))
            .withDescription("hejjz")
            .withLabel("dudgwdslfhot")
            .withLearnMoreLink("cynpwlbjnp")
            .withPotentialBenefits("cftadeh")
            .withActions(Arrays.asList(
                mapOf("uesnzwdejbavo", "datayfsoppu", "vudwx", "dataxzdmohctb", "gujjugwdkcglh", "datandnvo",
                    "ofqweykhmenevfye", "datalazjdyggdtjixhbk"),
                mapOf("yvdcsitynnaa", "datawhybcib", "eypvhezrkg", "datadectehfiqsc", "sle", "datahcjrefovgmk")))
            .withRemediation(
                mapOf("k", "dataxyqj", "jh", "dataattpngjcrcczsq", "ysou", "datamdajv", "canoaeupf", "dataq"))
            .withExposedMetadataProperties(mapOf("cma", "dataltrpmopj", "kthfui", "datau", "odpuozmyzydag",
                "dataaodsfcpkv", "hrdxwzywqsmbs", "datauaxbezyiuokkt"));
        model = BinaryData.fromObject(model).toObject(ResourceRecommendationBaseInner.class);
        Assertions.assertEquals(Category.COST, model.category());
        Assertions.assertEquals(Impact.LOW, model.impact());
        Assertions.assertEquals("hrc", model.impactedField());
        Assertions.assertEquals("nc", model.impactedValue());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-26T02:35:50Z"), model.lastUpdated());
        Assertions.assertEquals("zuvccfwnfnbacfio", model.recommendationTypeId());
        Assertions.assertEquals("bxetqgtzxdpn", model.shortDescription().problem());
        Assertions.assertEquals("qqwx", model.shortDescription().solution());
        Assertions.assertEquals(UUID.fromString("37839f42-46dc-43e1-9db9-ca4fa26ae387"), model.suppressionIds().get(0));
        Assertions.assertEquals("llnwsubi", model.extendedProperties().get("njampm"));
        Assertions.assertEquals("zscxaqwo", model.resourceMetadata().resourceId());
        Assertions.assertEquals("hcbonqvpkvlr", model.resourceMetadata().source());
        Assertions.assertEquals("masxazjpqyegu", model.resourceMetadata().singular());
        Assertions.assertEquals("hb", model.resourceMetadata().plural());
        Assertions.assertEquals("hejjz", model.description());
        Assertions.assertEquals("dudgwdslfhot", model.label());
        Assertions.assertEquals("cynpwlbjnp", model.learnMoreLink());
        Assertions.assertEquals("cftadeh", model.potentialBenefits());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
