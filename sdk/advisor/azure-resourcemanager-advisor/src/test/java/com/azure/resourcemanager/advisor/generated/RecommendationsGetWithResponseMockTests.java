// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.advisor.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.advisor.AdvisorManager;
import com.azure.resourcemanager.advisor.models.Category;
import com.azure.resourcemanager.advisor.models.Impact;
import com.azure.resourcemanager.advisor.models.ResourceRecommendationBase;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RecommendationsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"category\":\"HighAvailability\",\"impact\":\"High\",\"impactedField\":\"vfbtkuwh\",\"impactedValue\":\"hykojoxafnndlpic\",\"lastUpdated\":\"2021-09-25T08:27:56Z\",\"metadata\":{\"pwdreqnovvqf\":\"datakcdyhbpk\",\"syrsndsytgadgvra\":\"datavljxywsu\",\"uu\":\"dataaeneqnzarrwl\",\"e\":\"datajfqka\"},\"recommendationTypeId\":\"ipfpubji\",\"shortDescription\":{\"problem\":\"iftohqkvpu\",\"solution\":\"sgplsakn\"},\"suppressionIds\":[\"f1a42f8d-1b83-49bc-a8c2-1e8a90fc1316\",\"9f255689-d5b1-4bcd-b67b-985b47dea14c\",\"2c2196ba-31ea-480c-9abc-f004c6d96853\"],\"extendedProperties\":{\"jphuopxodlqi\":\"n\"},\"resourceMetadata\":{\"resourceId\":\"orzihle\",\"source\":\"jswsrmslyz\",\"action\":{\"iysui\":\"databchckqqzqio\",\"rwyhqmibzyhwitsm\":\"datazynkedya\",\"pcdpumnz\":\"datapyy\",\"abikns\":\"datamwzn\"},\"singular\":\"gj\",\"plural\":\"bldtlww\"},\"description\":\"kdmtncvokotll\",\"label\":\"yhgsy\",\"learnMoreLink\":\"ogjltdtbnnhad\",\"potentialBenefits\":\"crkvcikhnv\",\"actions\":[{\"wggxkallat\":\"datagxqquezik\",\"cjzkzivgvvcna\":\"dataelwuipi\",\"drd\":\"datarhyrnxxmueed\"}],\"remediation\":{\"tdaaygdvwvg\":\"datakwqqtchealmf\",\"epxgyqagvr\":\"dataiohgwxrtfud\",\"imfnjhfjx\":\"datamnpkukghimdblxg\"},\"exposedMetadataProperties\":{\"foqreyfkzik\":\"datazk\",\"wczelpci\":\"datajawneaiv\",\"abfatkl\":\"dataelsfeaen\"}},\"id\":\"dxbjhwuaanozj\",\"name\":\"sphyoulpjrvxa\",\"type\":\"l\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AdvisorManager manager = AdvisorManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ResourceRecommendationBase response = manager.recommendations()
            .getWithResponse("obyu", "erpqlpqwcciuqg", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(Category.HIGH_AVAILABILITY, response.category());
        Assertions.assertEquals(Impact.HIGH, response.impact());
        Assertions.assertEquals("vfbtkuwh", response.impactedField());
        Assertions.assertEquals("hykojoxafnndlpic", response.impactedValue());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-25T08:27:56Z"), response.lastUpdated());
        Assertions.assertEquals("ipfpubji", response.recommendationTypeId());
        Assertions.assertEquals("iftohqkvpu", response.shortDescription().problem());
        Assertions.assertEquals("sgplsakn", response.shortDescription().solution());
        Assertions.assertEquals(UUID.fromString("f1a42f8d-1b83-49bc-a8c2-1e8a90fc1316"),
            response.suppressionIds().get(0));
        Assertions.assertEquals("n", response.extendedProperties().get("jphuopxodlqi"));
        Assertions.assertEquals("orzihle", response.resourceMetadata().resourceId());
        Assertions.assertEquals("jswsrmslyz", response.resourceMetadata().source());
        Assertions.assertEquals("gj", response.resourceMetadata().singular());
        Assertions.assertEquals("bldtlww", response.resourceMetadata().plural());
        Assertions.assertEquals("kdmtncvokotll", response.description());
        Assertions.assertEquals("yhgsy", response.label());
        Assertions.assertEquals("ogjltdtbnnhad", response.learnMoreLink());
        Assertions.assertEquals("crkvcikhnv", response.potentialBenefits());
    }
}
