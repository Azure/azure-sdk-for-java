// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.advisor.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.advisor.AdvisorManager;
import com.azure.resourcemanager.advisor.models.MetadataEntity;
import com.azure.resourcemanager.advisor.models.Scenario;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RecommendationMetadatasGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"id\":\"laocqxtccmg\",\"type\":\"dxyt\",\"name\":\"oyrxvwfudwpzntxh\",\"properties\":{\"displayName\":\"lrqjbhckfr\",\"dependsOn\":[\"xsbkyvpyca\",\"uzbpzkafku\"],\"applicableScenarios\":[\"Alerts\",\"Alerts\"],\"supportedValues\":[{\"id\":\"ehhseyvjusrts\",\"displayName\":\"spkdee\"},{\"id\":\"ofmxagkvtmelmqkr\",\"displayName\":\"hvljuahaquh\"}]}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AdvisorManager manager = AdvisorManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        MetadataEntity response = manager.recommendationMetadatas()
            .getWithResponse("kqujidsuyono", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("laocqxtccmg", response.id());
        Assertions.assertEquals("dxyt", response.type());
        Assertions.assertEquals("oyrxvwfudwpzntxh", response.name());
        Assertions.assertEquals("lrqjbhckfr", response.displayName());
        Assertions.assertEquals("xsbkyvpyca", response.dependsOn().get(0));
        Assertions.assertEquals(Scenario.ALERTS, response.applicableScenarios().get(0));
        Assertions.assertEquals("ehhseyvjusrts", response.supportedValues().get(0).id());
        Assertions.assertEquals("spkdee", response.supportedValues().get(0).displayName());
    }
}
