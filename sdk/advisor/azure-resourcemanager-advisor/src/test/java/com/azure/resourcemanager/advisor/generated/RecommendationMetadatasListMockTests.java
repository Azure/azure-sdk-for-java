// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.advisor.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.advisor.AdvisorManager;
import com.azure.resourcemanager.advisor.models.MetadataEntity;
import com.azure.resourcemanager.advisor.models.Scenario;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RecommendationMetadatasListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"id\":\"hmdua\",\"type\":\"exq\",\"name\":\"fadmws\",\"properties\":{\"displayName\":\"gvxp\",\"dependsOn\":[\"mzlfmisgwb\",\"b\"],\"applicableScenarios\":[\"Alerts\",\"Alerts\",\"Alerts\",\"Alerts\"],\"supportedValues\":[{\"id\":\"liourqhak\",\"displayName\":\"hashsfwxosow\"},{\"id\":\"cugicjoox\",\"displayName\":\"ebwpucwwfvo\"},{\"id\":\"vmeueci\",\"displayName\":\"hzceuojgjrwjue\"},{\"id\":\"twm\",\"displayName\":\"ytdxwit\"}]}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AdvisorManager manager = AdvisorManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<MetadataEntity> response
            = manager.recommendationMetadatas().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("hmdua", response.iterator().next().id());
        Assertions.assertEquals("exq", response.iterator().next().type());
        Assertions.assertEquals("fadmws", response.iterator().next().name());
        Assertions.assertEquals("gvxp", response.iterator().next().displayName());
        Assertions.assertEquals("mzlfmisgwb", response.iterator().next().dependsOn().get(0));
        Assertions.assertEquals(Scenario.ALERTS, response.iterator().next().applicableScenarios().get(0));
        Assertions.assertEquals("liourqhak", response.iterator().next().supportedValues().get(0).id());
        Assertions.assertEquals("hashsfwxosow", response.iterator().next().supportedValues().get(0).displayName());
    }
}
