/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.advisor.v2017_03_31.implementation;

import com.microsoft.azure.management.advisor.v2017_03_31.Category;
import com.microsoft.azure.management.advisor.v2017_03_31.Impact;
import org.joda.time.DateTime;
import java.util.Map;
import com.microsoft.azure.management.advisor.v2017_03_31.Risk;
import com.microsoft.azure.management.advisor.v2017_03_31.ShortDescription;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.ProxyResource;

/**
 * Advisor Recommendation.
 */
@JsonFlatten
public class ResourceRecommendationBaseInner extends ProxyResource {
    /**
     * The category of the recommendation. Possible values include:
     * 'HighAvailability', 'Security', 'Performance', 'Cost',
     * 'OperationalExcellence'.
     */
    @JsonProperty(value = "properties.category")
    private Category category;

    /**
     * The business impact of the recommendation. Possible values include:
     * 'High', 'Medium', 'Low'.
     */
    @JsonProperty(value = "properties.impact")
    private Impact impact;

    /**
     * The resource type identified by Advisor.
     */
    @JsonProperty(value = "properties.impactedField")
    private String impactedField;

    /**
     * The resource identified by Advisor.
     */
    @JsonProperty(value = "properties.impactedValue")
    private String impactedValue;

    /**
     * The most recent time that Advisor checked the validity of the
     * recommendation.
     */
    @JsonProperty(value = "properties.lastUpdated")
    private DateTime lastUpdated;

    /**
     * The recommendation metadata.
     */
    @JsonProperty(value = "properties.metadata")
    private Map<String, Object> metadata;

    /**
     * The recommendation-type GUID.
     */
    @JsonProperty(value = "properties.recommendationTypeId")
    private String recommendationTypeId;

    /**
     * The potential risk of not implementing the recommendation. Possible
     * values include: 'Error', 'Warning', 'None'.
     */
    @JsonProperty(value = "properties.risk")
    private Risk risk;

    /**
     * A summary of the recommendation.
     */
    @JsonProperty(value = "properties.shortDescription")
    private ShortDescription shortDescription;

    /**
     * The list of snoozed and dismissed rules for the recommendation.
     */
    @JsonProperty(value = "properties.suppressionIds")
    private List<UUID> suppressionIds;

    /**
     * Get the category of the recommendation. Possible values include: 'HighAvailability', 'Security', 'Performance', 'Cost', 'OperationalExcellence'.
     *
     * @return the category value
     */
    public Category category() {
        return this.category;
    }

    /**
     * Set the category of the recommendation. Possible values include: 'HighAvailability', 'Security', 'Performance', 'Cost', 'OperationalExcellence'.
     *
     * @param category the category value to set
     * @return the ResourceRecommendationBaseInner object itself.
     */
    public ResourceRecommendationBaseInner withCategory(Category category) {
        this.category = category;
        return this;
    }

    /**
     * Get the business impact of the recommendation. Possible values include: 'High', 'Medium', 'Low'.
     *
     * @return the impact value
     */
    public Impact impact() {
        return this.impact;
    }

    /**
     * Set the business impact of the recommendation. Possible values include: 'High', 'Medium', 'Low'.
     *
     * @param impact the impact value to set
     * @return the ResourceRecommendationBaseInner object itself.
     */
    public ResourceRecommendationBaseInner withImpact(Impact impact) {
        this.impact = impact;
        return this;
    }

    /**
     * Get the resource type identified by Advisor.
     *
     * @return the impactedField value
     */
    public String impactedField() {
        return this.impactedField;
    }

    /**
     * Set the resource type identified by Advisor.
     *
     * @param impactedField the impactedField value to set
     * @return the ResourceRecommendationBaseInner object itself.
     */
    public ResourceRecommendationBaseInner withImpactedField(String impactedField) {
        this.impactedField = impactedField;
        return this;
    }

    /**
     * Get the resource identified by Advisor.
     *
     * @return the impactedValue value
     */
    public String impactedValue() {
        return this.impactedValue;
    }

    /**
     * Set the resource identified by Advisor.
     *
     * @param impactedValue the impactedValue value to set
     * @return the ResourceRecommendationBaseInner object itself.
     */
    public ResourceRecommendationBaseInner withImpactedValue(String impactedValue) {
        this.impactedValue = impactedValue;
        return this;
    }

    /**
     * Get the most recent time that Advisor checked the validity of the recommendation.
     *
     * @return the lastUpdated value
     */
    public DateTime lastUpdated() {
        return this.lastUpdated;
    }

    /**
     * Set the most recent time that Advisor checked the validity of the recommendation.
     *
     * @param lastUpdated the lastUpdated value to set
     * @return the ResourceRecommendationBaseInner object itself.
     */
    public ResourceRecommendationBaseInner withLastUpdated(DateTime lastUpdated) {
        this.lastUpdated = lastUpdated;
        return this;
    }

    /**
     * Get the recommendation metadata.
     *
     * @return the metadata value
     */
    public Map<String, Object> metadata() {
        return this.metadata;
    }

    /**
     * Set the recommendation metadata.
     *
     * @param metadata the metadata value to set
     * @return the ResourceRecommendationBaseInner object itself.
     */
    public ResourceRecommendationBaseInner withMetadata(Map<String, Object> metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Get the recommendation-type GUID.
     *
     * @return the recommendationTypeId value
     */
    public String recommendationTypeId() {
        return this.recommendationTypeId;
    }

    /**
     * Set the recommendation-type GUID.
     *
     * @param recommendationTypeId the recommendationTypeId value to set
     * @return the ResourceRecommendationBaseInner object itself.
     */
    public ResourceRecommendationBaseInner withRecommendationTypeId(String recommendationTypeId) {
        this.recommendationTypeId = recommendationTypeId;
        return this;
    }

    /**
     * Get the potential risk of not implementing the recommendation. Possible values include: 'Error', 'Warning', 'None'.
     *
     * @return the risk value
     */
    public Risk risk() {
        return this.risk;
    }

    /**
     * Set the potential risk of not implementing the recommendation. Possible values include: 'Error', 'Warning', 'None'.
     *
     * @param risk the risk value to set
     * @return the ResourceRecommendationBaseInner object itself.
     */
    public ResourceRecommendationBaseInner withRisk(Risk risk) {
        this.risk = risk;
        return this;
    }

    /**
     * Get a summary of the recommendation.
     *
     * @return the shortDescription value
     */
    public ShortDescription shortDescription() {
        return this.shortDescription;
    }

    /**
     * Set a summary of the recommendation.
     *
     * @param shortDescription the shortDescription value to set
     * @return the ResourceRecommendationBaseInner object itself.
     */
    public ResourceRecommendationBaseInner withShortDescription(ShortDescription shortDescription) {
        this.shortDescription = shortDescription;
        return this;
    }

    /**
     * Get the list of snoozed and dismissed rules for the recommendation.
     *
     * @return the suppressionIds value
     */
    public List<UUID> suppressionIds() {
        return this.suppressionIds;
    }

    /**
     * Set the list of snoozed and dismissed rules for the recommendation.
     *
     * @param suppressionIds the suppressionIds value to set
     * @return the ResourceRecommendationBaseInner object itself.
     */
    public ResourceRecommendationBaseInner withSuppressionIds(List<UUID> suppressionIds) {
        this.suppressionIds = suppressionIds;
        return this;
    }

}
