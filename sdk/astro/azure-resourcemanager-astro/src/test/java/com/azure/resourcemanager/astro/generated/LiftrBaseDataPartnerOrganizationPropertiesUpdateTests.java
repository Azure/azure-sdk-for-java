// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.astro.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.astro.models.LiftrBaseDataPartnerOrganizationPropertiesUpdate;
import com.azure.resourcemanager.astro.models.LiftrBaseSingleSignOnProperties;
import com.azure.resourcemanager.astro.models.SingleSignOnStates;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class LiftrBaseDataPartnerOrganizationPropertiesUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LiftrBaseDataPartnerOrganizationPropertiesUpdate model = BinaryData.fromString(
            "{\"organizationId\":\"gual\",\"workspaceId\":\"xxhejjzzvd\",\"organizationName\":\"gwdslfhotwm\",\"workspaceName\":\"npwlbjnpg\",\"singleSignOnProperties\":{\"singleSignOnState\":\"Enable\",\"enterpriseAppId\":\"dehxnltyfsoppu\",\"singleSignOnUrl\":\"esnzwde\",\"aadDomains\":[\"vorxzdmohct\"],\"provisioningState\":\"Canceled\"}}")
            .toObject(LiftrBaseDataPartnerOrganizationPropertiesUpdate.class);
        Assertions.assertEquals("gual", model.organizationId());
        Assertions.assertEquals("xxhejjzzvd", model.workspaceId());
        Assertions.assertEquals("gwdslfhotwm", model.organizationName());
        Assertions.assertEquals("npwlbjnpg", model.workspaceName());
        Assertions.assertEquals(SingleSignOnStates.ENABLE, model.singleSignOnProperties().singleSignOnState());
        Assertions.assertEquals("dehxnltyfsoppu", model.singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("esnzwde", model.singleSignOnProperties().singleSignOnUrl());
        Assertions.assertEquals("vorxzdmohct", model.singleSignOnProperties().aadDomains().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LiftrBaseDataPartnerOrganizationPropertiesUpdate model
            = new LiftrBaseDataPartnerOrganizationPropertiesUpdate().withOrganizationId("gual")
                .withWorkspaceId("xxhejjzzvd").withOrganizationName("gwdslfhotwm").withWorkspaceName("npwlbjnpg")
                .withSingleSignOnProperties(new LiftrBaseSingleSignOnProperties()
                    .withSingleSignOnState(SingleSignOnStates.ENABLE).withEnterpriseAppId("dehxnltyfsoppu")
                    .withSingleSignOnUrl("esnzwde").withAadDomains(Arrays.asList("vorxzdmohct")));
        model = BinaryData.fromObject(model).toObject(LiftrBaseDataPartnerOrganizationPropertiesUpdate.class);
        Assertions.assertEquals("gual", model.organizationId());
        Assertions.assertEquals("xxhejjzzvd", model.workspaceId());
        Assertions.assertEquals("gwdslfhotwm", model.organizationName());
        Assertions.assertEquals("npwlbjnpg", model.workspaceName());
        Assertions.assertEquals(SingleSignOnStates.ENABLE, model.singleSignOnProperties().singleSignOnState());
        Assertions.assertEquals("dehxnltyfsoppu", model.singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("esnzwde", model.singleSignOnProperties().singleSignOnUrl());
        Assertions.assertEquals("vorxzdmohct", model.singleSignOnProperties().aadDomains().get(0));
    }
}
