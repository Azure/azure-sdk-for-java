// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.astro.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.astro.models.LiftrBaseMarketplaceDetailsUpdate;
import com.azure.resourcemanager.astro.models.LiftrBaseOfferDetailsUpdate;
import com.azure.resourcemanager.astro.models.MarketplaceSubscriptionStatus;
import org.junit.jupiter.api.Assertions;

public final class LiftrBaseMarketplaceDetailsUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LiftrBaseMarketplaceDetailsUpdate model = BinaryData.fromString(
            "{\"subscriptionId\":\"kgqhcjrefovg\",\"subscriptionStatus\":\"PendingFulfillmentStart\",\"offerDetails\":{\"publisherId\":\"eyyvxyqjpkcat\",\"offerId\":\"ngj\",\"planId\":\"cczsq\",\"planName\":\"hvmdajvnysounq\",\"termUnit\":\"a\",\"termId\":\"ae\"}}")
            .toObject(LiftrBaseMarketplaceDetailsUpdate.class);
        Assertions.assertEquals("kgqhcjrefovg", model.subscriptionId());
        Assertions.assertEquals(MarketplaceSubscriptionStatus.PENDING_FULFILLMENT_START, model.subscriptionStatus());
        Assertions.assertEquals("eyyvxyqjpkcat", model.offerDetails().publisherId());
        Assertions.assertEquals("ngj", model.offerDetails().offerId());
        Assertions.assertEquals("cczsq", model.offerDetails().planId());
        Assertions.assertEquals("hvmdajvnysounq", model.offerDetails().planName());
        Assertions.assertEquals("a", model.offerDetails().termUnit());
        Assertions.assertEquals("ae", model.offerDetails().termId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LiftrBaseMarketplaceDetailsUpdate model
            = new LiftrBaseMarketplaceDetailsUpdate().withSubscriptionId("kgqhcjrefovg")
                .withSubscriptionStatus(MarketplaceSubscriptionStatus.PENDING_FULFILLMENT_START)
                .withOfferDetails(new LiftrBaseOfferDetailsUpdate().withPublisherId("eyyvxyqjpkcat")
                    .withOfferId("ngj")
                    .withPlanId("cczsq")
                    .withPlanName("hvmdajvnysounq")
                    .withTermUnit("a")
                    .withTermId("ae"));
        model = BinaryData.fromObject(model).toObject(LiftrBaseMarketplaceDetailsUpdate.class);
        Assertions.assertEquals("kgqhcjrefovg", model.subscriptionId());
        Assertions.assertEquals(MarketplaceSubscriptionStatus.PENDING_FULFILLMENT_START, model.subscriptionStatus());
        Assertions.assertEquals("eyyvxyqjpkcat", model.offerDetails().publisherId());
        Assertions.assertEquals("ngj", model.offerDetails().offerId());
        Assertions.assertEquals("cczsq", model.offerDetails().planId());
        Assertions.assertEquals("hvmdajvnysounq", model.offerDetails().planName());
        Assertions.assertEquals("a", model.offerDetails().termUnit());
        Assertions.assertEquals("ae", model.offerDetails().termId());
    }
}
