// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.astro.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.astro.models.LiftrBaseMarketplaceDetails;
import com.azure.resourcemanager.astro.models.LiftrBaseOfferDetails;
import com.azure.resourcemanager.astro.models.MarketplaceSubscriptionStatus;
import org.junit.jupiter.api.Assertions;

public final class LiftrBaseMarketplaceDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LiftrBaseMarketplaceDetails model = BinaryData.fromString(
            "{\"subscriptionId\":\"kyfi\",\"subscriptionStatus\":\"Subscribed\",\"offerDetails\":{\"publisherId\":\"idf\",\"offerId\":\"zwdzuh\",\"planId\":\"ymwisdkft\",\"planName\":\"xmnteiwaop\",\"termUnit\":\"mijcmmxdcufufs\",\"termId\":\"ymzidn\"}}")
            .toObject(LiftrBaseMarketplaceDetails.class);
        Assertions.assertEquals("kyfi", model.subscriptionId());
        Assertions.assertEquals(MarketplaceSubscriptionStatus.SUBSCRIBED, model.subscriptionStatus());
        Assertions.assertEquals("idf", model.offerDetails().publisherId());
        Assertions.assertEquals("zwdzuh", model.offerDetails().offerId());
        Assertions.assertEquals("ymwisdkft", model.offerDetails().planId());
        Assertions.assertEquals("xmnteiwaop", model.offerDetails().planName());
        Assertions.assertEquals("mijcmmxdcufufs", model.offerDetails().termUnit());
        Assertions.assertEquals("ymzidn", model.offerDetails().termId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LiftrBaseMarketplaceDetails model = new LiftrBaseMarketplaceDetails().withSubscriptionId("kyfi")
            .withSubscriptionStatus(MarketplaceSubscriptionStatus.SUBSCRIBED)
            .withOfferDetails(new LiftrBaseOfferDetails().withPublisherId("idf")
                .withOfferId("zwdzuh")
                .withPlanId("ymwisdkft")
                .withPlanName("xmnteiwaop")
                .withTermUnit("mijcmmxdcufufs")
                .withTermId("ymzidn"));
        model = BinaryData.fromObject(model).toObject(LiftrBaseMarketplaceDetails.class);
        Assertions.assertEquals("kyfi", model.subscriptionId());
        Assertions.assertEquals(MarketplaceSubscriptionStatus.SUBSCRIBED, model.subscriptionStatus());
        Assertions.assertEquals("idf", model.offerDetails().publisherId());
        Assertions.assertEquals("zwdzuh", model.offerDetails().offerId());
        Assertions.assertEquals("ymwisdkft", model.offerDetails().planId());
        Assertions.assertEquals("xmnteiwaop", model.offerDetails().planName());
        Assertions.assertEquals("mijcmmxdcufufs", model.offerDetails().termUnit());
        Assertions.assertEquals("ymzidn", model.offerDetails().termId());
    }
}
