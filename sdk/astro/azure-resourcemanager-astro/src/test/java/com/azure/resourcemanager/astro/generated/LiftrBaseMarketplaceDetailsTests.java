// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.astro.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.astro.models.LiftrBaseMarketplaceDetails;
import com.azure.resourcemanager.astro.models.LiftrBaseOfferDetails;
import com.azure.resourcemanager.astro.models.MarketplaceSubscriptionStatus;
import org.junit.jupiter.api.Assertions;

public final class LiftrBaseMarketplaceDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LiftrBaseMarketplaceDetails model = BinaryData.fromString(
            "{\"subscriptionId\":\"muouqfp\",\"subscriptionStatus\":\"PendingFulfillmentStart\",\"offerDetails\":{\"publisherId\":\"wbnguitnwui\",\"offerId\":\"gazxuf\",\"planId\":\"zuckyfi\",\"planName\":\"fidfvzw\",\"termUnit\":\"uht\",\"termId\":\"wisdkft\"}}")
            .toObject(LiftrBaseMarketplaceDetails.class);
        Assertions.assertEquals("muouqfp", model.subscriptionId());
        Assertions.assertEquals(MarketplaceSubscriptionStatus.PENDING_FULFILLMENT_START, model.subscriptionStatus());
        Assertions.assertEquals("wbnguitnwui", model.offerDetails().publisherId());
        Assertions.assertEquals("gazxuf", model.offerDetails().offerId());
        Assertions.assertEquals("zuckyfi", model.offerDetails().planId());
        Assertions.assertEquals("fidfvzw", model.offerDetails().planName());
        Assertions.assertEquals("uht", model.offerDetails().termUnit());
        Assertions.assertEquals("wisdkft", model.offerDetails().termId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LiftrBaseMarketplaceDetails model = new LiftrBaseMarketplaceDetails().withSubscriptionId("muouqfp")
            .withSubscriptionStatus(MarketplaceSubscriptionStatus.PENDING_FULFILLMENT_START)
            .withOfferDetails(new LiftrBaseOfferDetails().withPublisherId("wbnguitnwui").withOfferId("gazxuf")
                .withPlanId("zuckyfi").withPlanName("fidfvzw").withTermUnit("uht").withTermId("wisdkft"));
        model = BinaryData.fromObject(model).toObject(LiftrBaseMarketplaceDetails.class);
        Assertions.assertEquals("muouqfp", model.subscriptionId());
        Assertions.assertEquals(MarketplaceSubscriptionStatus.PENDING_FULFILLMENT_START, model.subscriptionStatus());
        Assertions.assertEquals("wbnguitnwui", model.offerDetails().publisherId());
        Assertions.assertEquals("gazxuf", model.offerDetails().offerId());
        Assertions.assertEquals("zuckyfi", model.offerDetails().planId());
        Assertions.assertEquals("fidfvzw", model.offerDetails().planName());
        Assertions.assertEquals("uht", model.offerDetails().termUnit());
        Assertions.assertEquals("wisdkft", model.offerDetails().termId());
    }
}
