// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.astro.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.astro.models.LiftrBaseDataOrganizationProperties;
import com.azure.resourcemanager.astro.models.LiftrBaseDataPartnerOrganizationProperties;
import com.azure.resourcemanager.astro.models.LiftrBaseMarketplaceDetails;
import com.azure.resourcemanager.astro.models.LiftrBaseOfferDetails;
import com.azure.resourcemanager.astro.models.LiftrBaseSingleSignOnProperties;
import com.azure.resourcemanager.astro.models.LiftrBaseUserDetails;
import com.azure.resourcemanager.astro.models.MarketplaceSubscriptionStatus;
import com.azure.resourcemanager.astro.models.SingleSignOnStates;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class LiftrBaseDataOrganizationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LiftrBaseDataOrganizationProperties model = BinaryData.fromString(
            "{\"marketplace\":{\"subscriptionId\":\"likwyqkgfgib\",\"subscriptionStatus\":\"PendingFulfillmentStart\",\"offerDetails\":{\"publisherId\":\"gakeqsr\",\"offerId\":\"yb\",\"planId\":\"qqedqytbciqfou\",\"planName\":\"mmnkzsmodmgl\",\"termUnit\":\"gpbkwtmut\",\"termId\":\"qktapspwgcuert\"}},\"user\":{\"firstName\":\"mkdo\",\"lastName\":\"vqwhbmdgbbjfd\",\"emailAddress\":\"gmbmbexppbh\",\"upn\":\"qrolfpf\",\"phoneNumber\":\"algbquxigjyjg\"},\"provisioningState\":\"Canceled\",\"partnerOrganizationProperties\":{\"organizationId\":\"fhrtxilnerkujysv\",\"workspaceId\":\"juvf\",\"organizationName\":\"awrlyx\",\"workspaceName\":\"kcprbnw\",\"singleSignOnProperties\":{\"singleSignOnState\":\"Disable\",\"enterpriseAppId\":\"tbvpysszdnru\",\"singleSignOnUrl\":\"guhmuouqfpr\",\"aadDomains\":[\"bngui\",\"nwui\",\"gazxuf\"],\"provisioningState\":\"Canceled\"}}}")
            .toObject(LiftrBaseDataOrganizationProperties.class);
        Assertions.assertEquals("likwyqkgfgib", model.marketplace().subscriptionId());
        Assertions.assertEquals(MarketplaceSubscriptionStatus.PENDING_FULFILLMENT_START,
            model.marketplace().subscriptionStatus());
        Assertions.assertEquals("gakeqsr", model.marketplace().offerDetails().publisherId());
        Assertions.assertEquals("yb", model.marketplace().offerDetails().offerId());
        Assertions.assertEquals("qqedqytbciqfou", model.marketplace().offerDetails().planId());
        Assertions.assertEquals("mmnkzsmodmgl", model.marketplace().offerDetails().planName());
        Assertions.assertEquals("gpbkwtmut", model.marketplace().offerDetails().termUnit());
        Assertions.assertEquals("qktapspwgcuert", model.marketplace().offerDetails().termId());
        Assertions.assertEquals("mkdo", model.user().firstName());
        Assertions.assertEquals("vqwhbmdgbbjfd", model.user().lastName());
        Assertions.assertEquals("gmbmbexppbh", model.user().emailAddress());
        Assertions.assertEquals("qrolfpf", model.user().upn());
        Assertions.assertEquals("algbquxigjyjg", model.user().phoneNumber());
        Assertions.assertEquals("fhrtxilnerkujysv", model.partnerOrganizationProperties().organizationId());
        Assertions.assertEquals("juvf", model.partnerOrganizationProperties().workspaceId());
        Assertions.assertEquals("awrlyx", model.partnerOrganizationProperties().organizationName());
        Assertions.assertEquals("kcprbnw", model.partnerOrganizationProperties().workspaceName());
        Assertions.assertEquals(SingleSignOnStates.DISABLE,
            model.partnerOrganizationProperties().singleSignOnProperties().singleSignOnState());
        Assertions.assertEquals("tbvpysszdnru",
            model.partnerOrganizationProperties().singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("guhmuouqfpr",
            model.partnerOrganizationProperties().singleSignOnProperties().singleSignOnUrl());
        Assertions.assertEquals("bngui",
            model.partnerOrganizationProperties().singleSignOnProperties().aadDomains().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LiftrBaseDataOrganizationProperties model = new LiftrBaseDataOrganizationProperties()
            .withMarketplace(new LiftrBaseMarketplaceDetails().withSubscriptionId("likwyqkgfgib")
                .withSubscriptionStatus(MarketplaceSubscriptionStatus.PENDING_FULFILLMENT_START)
                .withOfferDetails(new LiftrBaseOfferDetails().withPublisherId("gakeqsr")
                    .withOfferId("yb")
                    .withPlanId("qqedqytbciqfou")
                    .withPlanName("mmnkzsmodmgl")
                    .withTermUnit("gpbkwtmut")
                    .withTermId("qktapspwgcuert")))
            .withUser(new LiftrBaseUserDetails().withFirstName("mkdo")
                .withLastName("vqwhbmdgbbjfd")
                .withEmailAddress("gmbmbexppbh")
                .withUpn("qrolfpf")
                .withPhoneNumber("algbquxigjyjg"))
            .withPartnerOrganizationProperties(
                new LiftrBaseDataPartnerOrganizationProperties().withOrganizationId("fhrtxilnerkujysv")
                    .withWorkspaceId("juvf")
                    .withOrganizationName("awrlyx")
                    .withWorkspaceName("kcprbnw")
                    .withSingleSignOnProperties(
                        new LiftrBaseSingleSignOnProperties().withSingleSignOnState(SingleSignOnStates.DISABLE)
                            .withEnterpriseAppId("tbvpysszdnru")
                            .withSingleSignOnUrl("guhmuouqfpr")
                            .withAadDomains(Arrays.asList("bngui", "nwui", "gazxuf"))));
        model = BinaryData.fromObject(model).toObject(LiftrBaseDataOrganizationProperties.class);
        Assertions.assertEquals("likwyqkgfgib", model.marketplace().subscriptionId());
        Assertions.assertEquals(MarketplaceSubscriptionStatus.PENDING_FULFILLMENT_START,
            model.marketplace().subscriptionStatus());
        Assertions.assertEquals("gakeqsr", model.marketplace().offerDetails().publisherId());
        Assertions.assertEquals("yb", model.marketplace().offerDetails().offerId());
        Assertions.assertEquals("qqedqytbciqfou", model.marketplace().offerDetails().planId());
        Assertions.assertEquals("mmnkzsmodmgl", model.marketplace().offerDetails().planName());
        Assertions.assertEquals("gpbkwtmut", model.marketplace().offerDetails().termUnit());
        Assertions.assertEquals("qktapspwgcuert", model.marketplace().offerDetails().termId());
        Assertions.assertEquals("mkdo", model.user().firstName());
        Assertions.assertEquals("vqwhbmdgbbjfd", model.user().lastName());
        Assertions.assertEquals("gmbmbexppbh", model.user().emailAddress());
        Assertions.assertEquals("qrolfpf", model.user().upn());
        Assertions.assertEquals("algbquxigjyjg", model.user().phoneNumber());
        Assertions.assertEquals("fhrtxilnerkujysv", model.partnerOrganizationProperties().organizationId());
        Assertions.assertEquals("juvf", model.partnerOrganizationProperties().workspaceId());
        Assertions.assertEquals("awrlyx", model.partnerOrganizationProperties().organizationName());
        Assertions.assertEquals("kcprbnw", model.partnerOrganizationProperties().workspaceName());
        Assertions.assertEquals(SingleSignOnStates.DISABLE,
            model.partnerOrganizationProperties().singleSignOnProperties().singleSignOnState());
        Assertions.assertEquals("tbvpysszdnru",
            model.partnerOrganizationProperties().singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("guhmuouqfpr",
            model.partnerOrganizationProperties().singleSignOnProperties().singleSignOnUrl());
        Assertions.assertEquals("bngui",
            model.partnerOrganizationProperties().singleSignOnProperties().aadDomains().get(0));
    }
}
