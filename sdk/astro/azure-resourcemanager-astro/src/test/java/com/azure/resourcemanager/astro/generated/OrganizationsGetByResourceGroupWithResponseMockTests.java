// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.astro.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.astro.AstroManager;
import com.azure.resourcemanager.astro.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.astro.models.MarketplaceSubscriptionStatus;
import com.azure.resourcemanager.astro.models.OrganizationResource;
import com.azure.resourcemanager.astro.models.SingleSignOnStates;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OrganizationsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"marketplace\":{\"subscriptionId\":\"bpg\",\"subscriptionStatus\":\"Subscribed\",\"offerDetails\":{\"publisherId\":\"txhp\",\"offerId\":\"xbzpfzab\",\"planId\":\"lcuhxwtctyqiklb\",\"planName\":\"vplwzbhv\",\"termUnit\":\"u\",\"termId\":\"osvmk\"}},\"user\":{\"firstName\":\"ss\",\"lastName\":\"qukkfp\",\"emailAddress\":\"gmgsxnkjzkde\",\"upn\":\"pvlopwiyighxpkd\",\"phoneNumber\":\"baiuebbaumny\"},\"provisioningState\":\"Failed\",\"partnerOrganizationProperties\":{\"organizationId\":\"eojnabc\",\"workspaceId\":\"smtxpsieb\",\"organizationName\":\"fhvpesaps\",\"workspaceName\":\"dqmh\",\"singleSignOnProperties\":{\"singleSignOnState\":\"Disable\",\"enterpriseAppId\":\"ldwkyzxuutkn\",\"singleSignOnUrl\":\"scwsv\",\"aadDomains\":[\"togt\",\"rupqsxvnmicy\",\"vce\"],\"provisioningState\":\"Succeeded\"}}},\"identity\":{\"principalId\":\"ac0fd26d-e686-46da-b659-241dc343a7d6\",\"tenantId\":\"a4fca98f-0eb6-44fb-9b9c-d0e76034b477\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"fj\":{\"principalId\":\"8eea3fd6-f257-4ec4-983f-617d031b3276\",\"clientId\":\"833285e4-98f3-41a3-9c1a-52831835fa29\"}}},\"location\":\"njbkcnxdhbttkph\",\"tags\":{\"t\":\"nv\",\"crpab\":\"qnermclfplphoxu\",\"sbj\":\"ye\",\"wfqkquj\":\"azqugxywpmueefj\"},\"id\":\"dsuyonobgla\",\"name\":\"cq\",\"type\":\"tcc\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AstroManager manager = AstroManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        OrganizationResource response = manager.organizations()
            .getByResourceGroupWithResponse("bniwdj", "wz", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("njbkcnxdhbttkph", response.location());
        Assertions.assertEquals("nv", response.tags().get("t"));
        Assertions.assertEquals("bpg", response.properties().marketplace().subscriptionId());
        Assertions.assertEquals(MarketplaceSubscriptionStatus.SUBSCRIBED,
            response.properties().marketplace().subscriptionStatus());
        Assertions.assertEquals("txhp", response.properties().marketplace().offerDetails().publisherId());
        Assertions.assertEquals("xbzpfzab", response.properties().marketplace().offerDetails().offerId());
        Assertions.assertEquals("lcuhxwtctyqiklb", response.properties().marketplace().offerDetails().planId());
        Assertions.assertEquals("vplwzbhv", response.properties().marketplace().offerDetails().planName());
        Assertions.assertEquals("u", response.properties().marketplace().offerDetails().termUnit());
        Assertions.assertEquals("osvmk", response.properties().marketplace().offerDetails().termId());
        Assertions.assertEquals("ss", response.properties().user().firstName());
        Assertions.assertEquals("qukkfp", response.properties().user().lastName());
        Assertions.assertEquals("gmgsxnkjzkde", response.properties().user().emailAddress());
        Assertions.assertEquals("pvlopwiyighxpkd", response.properties().user().upn());
        Assertions.assertEquals("baiuebbaumny", response.properties().user().phoneNumber());
        Assertions.assertEquals("eojnabc", response.properties().partnerOrganizationProperties().organizationId());
        Assertions.assertEquals("smtxpsieb", response.properties().partnerOrganizationProperties().workspaceId());
        Assertions.assertEquals("fhvpesaps", response.properties().partnerOrganizationProperties().organizationName());
        Assertions.assertEquals("dqmh", response.properties().partnerOrganizationProperties().workspaceName());
        Assertions.assertEquals(SingleSignOnStates.DISABLE,
            response.properties().partnerOrganizationProperties().singleSignOnProperties().singleSignOnState());
        Assertions.assertEquals("ldwkyzxuutkn",
            response.properties().partnerOrganizationProperties().singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("scwsv",
            response.properties().partnerOrganizationProperties().singleSignOnProperties().singleSignOnUrl());
        Assertions.assertEquals("togt",
            response.properties().partnerOrganizationProperties().singleSignOnProperties().aadDomains().get(0));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, response.identity().type());
    }
}
