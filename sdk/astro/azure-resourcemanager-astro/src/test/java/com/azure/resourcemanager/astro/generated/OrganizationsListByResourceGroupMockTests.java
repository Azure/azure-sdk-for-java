// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.astro.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.astro.AstroManager;
import com.azure.resourcemanager.astro.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.astro.models.MarketplaceSubscriptionStatus;
import com.azure.resourcemanager.astro.models.OrganizationResource;
import com.azure.resourcemanager.astro.models.SingleSignOnStates;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OrganizationsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"marketplace\":{\"subscriptionId\":\"snkymuctq\",\"subscriptionStatus\":\"Suspended\",\"offerDetails\":{\"publisherId\":\"bebrjcxerfuwuttt\",\"offerId\":\"fvjrbirphxepcy\",\"planId\":\"ahfn\",\"planName\":\"kyqxjvuujqgidokg\",\"termUnit\":\"jyoxgvclt\",\"termId\":\"sncghkjeszz\"}},\"user\":{\"firstName\":\"bijhtxfvgxbf\",\"lastName\":\"mxnehmp\",\"emailAddress\":\"ec\",\"upn\":\"odebfqkkrbmpu\",\"phoneNumber\":\"riwflzlfb\"},\"provisioningState\":\"Succeeded\",\"partnerOrganizationProperties\":{\"organizationId\":\"ycispnqzahmgkb\",\"workspaceId\":\"yydhibnuqqk\",\"organizationName\":\"ik\",\"workspaceName\":\"rgvtqag\",\"singleSignOnProperties\":{\"singleSignOnState\":\"Disable\",\"enterpriseAppId\":\"hijggme\",\"singleSignOnUrl\":\"siarbutrcvpn\",\"aadDomains\":[\"mhjrunmpxttdbhr\",\"nlankxmyskpb\",\"enbtkcxywny\"],\"provisioningState\":\"Failed\"}}},\"identity\":{\"principalId\":\"083a8956-e500-4f51-b141-5cad09d29e69\",\"tenantId\":\"816395ad-1658-41a8-8b46-ccf1e0f51d16\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"by\":{\"principalId\":\"b3355588-39e7-42d3-b9d4-cab16001a274\",\"clientId\":\"70feed02-48d3-4ea1-97ab-539d7d4df955\"},\"fclhaaxdbabphlwr\":{\"principalId\":\"c36ea6aa-9277-4d48-8d51-9cafe11e47ec\",\"clientId\":\"6056914b-1f7f-4bd4-93e5-f179d56cef0c\"},\"ktsthsucocmny\":{\"principalId\":\"9f41975a-c860-469d-9ba1-42ed88d71cba\",\"clientId\":\"936fb883-28ad-48dd-91b2-a5345e1e047a\"}}},\"location\":\"zt\",\"tags\":{\"uedck\":\"wwrq\",\"bxu\":\"ywbiexzfeyueax\"},\"id\":\"wbhqwal\",\"name\":\"uzyoxaep\",\"type\":\"kzjancuxrhdwbav\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AstroManager manager = AstroManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<OrganizationResource> response
            = manager.organizations().listByResourceGroup("ihkaetcktvfc", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("zt", response.iterator().next().location());
        Assertions.assertEquals("wwrq", response.iterator().next().tags().get("uedck"));
        Assertions.assertEquals("snkymuctq", response.iterator().next().properties().marketplace().subscriptionId());
        Assertions.assertEquals(MarketplaceSubscriptionStatus.SUSPENDED,
            response.iterator().next().properties().marketplace().subscriptionStatus());
        Assertions.assertEquals("bebrjcxerfuwuttt",
            response.iterator().next().properties().marketplace().offerDetails().publisherId());
        Assertions.assertEquals("fvjrbirphxepcy",
            response.iterator().next().properties().marketplace().offerDetails().offerId());
        Assertions.assertEquals("ahfn", response.iterator().next().properties().marketplace().offerDetails().planId());
        Assertions.assertEquals("kyqxjvuujqgidokg",
            response.iterator().next().properties().marketplace().offerDetails().planName());
        Assertions.assertEquals("jyoxgvclt",
            response.iterator().next().properties().marketplace().offerDetails().termUnit());
        Assertions.assertEquals("sncghkjeszz",
            response.iterator().next().properties().marketplace().offerDetails().termId());
        Assertions.assertEquals("bijhtxfvgxbf", response.iterator().next().properties().user().firstName());
        Assertions.assertEquals("mxnehmp", response.iterator().next().properties().user().lastName());
        Assertions.assertEquals("ec", response.iterator().next().properties().user().emailAddress());
        Assertions.assertEquals("odebfqkkrbmpu", response.iterator().next().properties().user().upn());
        Assertions.assertEquals("riwflzlfb", response.iterator().next().properties().user().phoneNumber());
        Assertions.assertEquals("ycispnqzahmgkb",
            response.iterator().next().properties().partnerOrganizationProperties().organizationId());
        Assertions.assertEquals("yydhibnuqqk",
            response.iterator().next().properties().partnerOrganizationProperties().workspaceId());
        Assertions.assertEquals("ik",
            response.iterator().next().properties().partnerOrganizationProperties().organizationName());
        Assertions.assertEquals("rgvtqag",
            response.iterator().next().properties().partnerOrganizationProperties().workspaceName());
        Assertions.assertEquals(SingleSignOnStates.DISABLE,
            response.iterator()
                .next()
                .properties()
                .partnerOrganizationProperties()
                .singleSignOnProperties()
                .singleSignOnState());
        Assertions.assertEquals("hijggme",
            response.iterator()
                .next()
                .properties()
                .partnerOrganizationProperties()
                .singleSignOnProperties()
                .enterpriseAppId());
        Assertions.assertEquals("siarbutrcvpn",
            response.iterator()
                .next()
                .properties()
                .partnerOrganizationProperties()
                .singleSignOnProperties()
                .singleSignOnUrl());
        Assertions.assertEquals("mhjrunmpxttdbhr",
            response.iterator()
                .next()
                .properties()
                .partnerOrganizationProperties()
                .singleSignOnProperties()
                .aadDomains()
                .get(0));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED,
            response.iterator().next().identity().type());
    }
}
