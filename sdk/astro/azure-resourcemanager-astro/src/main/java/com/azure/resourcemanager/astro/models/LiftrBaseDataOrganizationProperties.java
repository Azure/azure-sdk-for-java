// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.astro.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Properties specific to Data Organization resource.
 */
@Fluent
public final class LiftrBaseDataOrganizationProperties {
    /*
     * Marketplace details of the resource.
     */
    @JsonProperty(value = "marketplace", required = true)
    private LiftrBaseMarketplaceDetails marketplace;

    /*
     * Details of the user.
     */
    @JsonProperty(value = "user", required = true)
    private LiftrBaseUserDetails user;

    /*
     * Provisioning state of the resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ResourceProvisioningState provisioningState;

    /*
     * Organization properties
     */
    @JsonProperty(value = "partnerOrganizationProperties")
    private LiftrBaseDataPartnerOrganizationProperties partnerOrganizationProperties;

    /**
     * Creates an instance of LiftrBaseDataOrganizationProperties class.
     */
    public LiftrBaseDataOrganizationProperties() {
    }

    /**
     * Get the marketplace property: Marketplace details of the resource.
     * 
     * @return the marketplace value.
     */
    public LiftrBaseMarketplaceDetails marketplace() {
        return this.marketplace;
    }

    /**
     * Set the marketplace property: Marketplace details of the resource.
     * 
     * @param marketplace the marketplace value to set.
     * @return the LiftrBaseDataOrganizationProperties object itself.
     */
    public LiftrBaseDataOrganizationProperties withMarketplace(LiftrBaseMarketplaceDetails marketplace) {
        this.marketplace = marketplace;
        return this;
    }

    /**
     * Get the user property: Details of the user.
     * 
     * @return the user value.
     */
    public LiftrBaseUserDetails user() {
        return this.user;
    }

    /**
     * Set the user property: Details of the user.
     * 
     * @param user the user value to set.
     * @return the LiftrBaseDataOrganizationProperties object itself.
     */
    public LiftrBaseDataOrganizationProperties withUser(LiftrBaseUserDetails user) {
        this.user = user;
        return this;
    }

    /**
     * Get the provisioningState property: Provisioning state of the resource.
     * 
     * @return the provisioningState value.
     */
    public ResourceProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the partnerOrganizationProperties property: Organization properties.
     * 
     * @return the partnerOrganizationProperties value.
     */
    public LiftrBaseDataPartnerOrganizationProperties partnerOrganizationProperties() {
        return this.partnerOrganizationProperties;
    }

    /**
     * Set the partnerOrganizationProperties property: Organization properties.
     * 
     * @param partnerOrganizationProperties the partnerOrganizationProperties value to set.
     * @return the LiftrBaseDataOrganizationProperties object itself.
     */
    public LiftrBaseDataOrganizationProperties
        withPartnerOrganizationProperties(LiftrBaseDataPartnerOrganizationProperties partnerOrganizationProperties) {
        this.partnerOrganizationProperties = partnerOrganizationProperties;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (marketplace() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property marketplace in model LiftrBaseDataOrganizationProperties"));
        } else {
            marketplace().validate();
        }
        if (user() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property user in model LiftrBaseDataOrganizationProperties"));
        } else {
            user().validate();
        }
        if (partnerOrganizationProperties() != null) {
            partnerOrganizationProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(LiftrBaseDataOrganizationProperties.class);
}
