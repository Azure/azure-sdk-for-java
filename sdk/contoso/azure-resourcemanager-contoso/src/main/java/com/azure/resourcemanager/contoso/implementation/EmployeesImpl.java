// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.contoso.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.contoso.fluent.EmployeesClient;
import com.azure.resourcemanager.contoso.fluent.models.EmployeeInner;
import com.azure.resourcemanager.contoso.models.Employee;
import com.azure.resourcemanager.contoso.models.Employees;

public final class EmployeesImpl implements Employees {
    private static final ClientLogger LOGGER = new ClientLogger(EmployeesImpl.class);

    private final EmployeesClient innerClient;

    private final com.azure.resourcemanager.contoso.ContosoManager serviceManager;

    public EmployeesImpl(EmployeesClient innerClient, com.azure.resourcemanager.contoso.ContosoManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<Employee> getByResourceGroupWithResponse(String apiVersion, String resourceGroupName,
        String employeeName, Context context) {
        Response<EmployeeInner> inner
            = this.serviceClient().getByResourceGroupWithResponse(apiVersion, resourceGroupName, employeeName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new EmployeeImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public Employee getByResourceGroup(String apiVersion, String resourceGroupName, String employeeName) {
        EmployeeInner inner = this.serviceClient().getByResourceGroup(apiVersion, resourceGroupName, employeeName);
        if (inner != null) {
            return new EmployeeImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public void delete(String apiVersion, String resourceGroupName, String employeeName) {
        this.serviceClient().delete(apiVersion, resourceGroupName, employeeName);
    }

    public void delete(String apiVersion, String resourceGroupName, String employeeName, Context context) {
        this.serviceClient().delete(apiVersion, resourceGroupName, employeeName, context);
    }

    public PagedIterable<Employee> listByResourceGroup(String apiVersion, String resourceGroupName) {
        PagedIterable<EmployeeInner> inner = this.serviceClient().listByResourceGroup(apiVersion, resourceGroupName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new EmployeeImpl(inner1, this.manager()));
    }

    public PagedIterable<Employee> listByResourceGroup(String apiVersion, String resourceGroupName, Context context) {
        PagedIterable<EmployeeInner> inner
            = this.serviceClient().listByResourceGroup(apiVersion, resourceGroupName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new EmployeeImpl(inner1, this.manager()));
    }

    public PagedIterable<Employee> list(String apiVersion) {
        PagedIterable<EmployeeInner> inner = this.serviceClient().list(apiVersion);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new EmployeeImpl(inner1, this.manager()));
    }

    public PagedIterable<Employee> list(String apiVersion, Context context) {
        PagedIterable<EmployeeInner> inner = this.serviceClient().list(apiVersion, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new EmployeeImpl(inner1, this.manager()));
    }

    private EmployeesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.contoso.ContosoManager manager() {
        return this.serviceManager;
    }

    public EmployeeImpl define(String name) {
        return new EmployeeImpl(name, this.manager());
    }
}
