// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.contoso.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of Employees.
 */
public interface Employees {
    /**
     * Get a Employee.
     * 
     * @param apiVersion The API version to use for this operation.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param employeeName The name of the Employee.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Employee along with {@link Response}.
     */
    Response<Employee> getByResourceGroupWithResponse(String apiVersion, String resourceGroupName, String employeeName,
        Context context);

    /**
     * Get a Employee.
     * 
     * @param apiVersion The API version to use for this operation.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param employeeName The name of the Employee.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Employee.
     */
    Employee getByResourceGroup(String apiVersion, String resourceGroupName, String employeeName);

    /**
     * Delete a Employee.
     * 
     * @param apiVersion The API version to use for this operation.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param employeeName The name of the Employee.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String apiVersion, String resourceGroupName, String employeeName);

    /**
     * Delete a Employee.
     * 
     * @param apiVersion The API version to use for this operation.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param employeeName The name of the Employee.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String apiVersion, String resourceGroupName, String employeeName, Context context);

    /**
     * List Employee resources by resource group.
     * 
     * @param apiVersion The API version to use for this operation.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Employee list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Employee> listByResourceGroup(String apiVersion, String resourceGroupName);

    /**
     * List Employee resources by resource group.
     * 
     * @param apiVersion The API version to use for this operation.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Employee list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Employee> listByResourceGroup(String apiVersion, String resourceGroupName, Context context);

    /**
     * List Employee resources by subscription ID.
     * 
     * @param apiVersion The API version to use for this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Employee list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Employee> list(String apiVersion);

    /**
     * List Employee resources by subscription ID.
     * 
     * @param apiVersion The API version to use for this operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Employee list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Employee> list(String apiVersion, Context context);

    /**
     * Begins definition for a new Employee resource.
     * 
     * @param name resource name.
     * @return the first stage of the new Employee definition.
     */
    Employee.DefinitionStages.Blank define(String name);
}
