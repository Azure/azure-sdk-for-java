// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.contoso.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.contoso.fluent.models.EmployeeInner;
import com.azure.resourcemanager.contoso.models.Employee;
import com.azure.resourcemanager.contoso.models.EmployeeProperties;
import java.util.Collections;
import java.util.Map;

public final class EmployeeImpl implements Employee, Employee.Definition, Employee.Update {
    private EmployeeInner innerObject;

    private final com.azure.resourcemanager.contoso.ContosoManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public EmployeeProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public EmployeeInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.contoso.ContosoManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String employeeName;

    private String createApiVersion;

    private String updateApiVersion;

    public EmployeeImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public Employee create() {
        this.innerObject = serviceManager.serviceClient()
            .getEmployees()
            .createOrUpdate(createApiVersion, resourceGroupName, employeeName, this.innerModel(), Context.NONE);
        return this;
    }

    public Employee create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getEmployees()
            .createOrUpdate(createApiVersion, resourceGroupName, employeeName, this.innerModel(), context);
        return this;
    }

    EmployeeImpl(String name, com.azure.resourcemanager.contoso.ContosoManager serviceManager) {
        this.innerObject = new EmployeeInner();
        this.serviceManager = serviceManager;
        this.employeeName = name;
        this.createApiVersion = null;
    }

    public EmployeeImpl update() {
        this.updateApiVersion = null;
        return this;
    }

    public Employee apply() {
        this.innerObject = serviceManager.serviceClient()
            .getEmployees()
            .updateWithResponse(updateApiVersion, resourceGroupName, employeeName, this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public Employee apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getEmployees()
            .updateWithResponse(updateApiVersion, resourceGroupName, employeeName, this.innerModel(), context)
            .getValue();
        return this;
    }

    EmployeeImpl(EmployeeInner innerObject, com.azure.resourcemanager.contoso.ContosoManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.employeeName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "employees");
    }

    public EmployeeImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public EmployeeImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public EmployeeImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public EmployeeImpl withProperties(EmployeeProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public EmployeeImpl withApiVersion(String apiVersion) {
        if (isInCreateMode()) {
            this.createApiVersion = apiVersion;
            return this;
        } else {
            this.updateApiVersion = apiVersion;
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
