cosmos.uri=${ACCOUNT_HOST}
cosmos.key=${ACCOUNT_KEY}
cosmos.secondaryKey=${SECONDARY_ACCOUNT_KEY}

dynamic.collection.name=spel-property-collection
# Populate query metrics
cosmos.queryMetricsEnabled=true
# Max Degree of Parallelism allowed
cosmos.maxDegreeOfParallelism=0
# Max number of items to buffer
cosmos.maxBufferedItemCount=0
# Max size of the response continuation token
cosmos.responseContinuationTokenLimitInKb=0
# The latency threshold to determine whether to include request diagnostics or not for point operations (in milliseconds)
cosmos.diagnosticsThresholds.pointOperationLatencyThresholdInMS=1000
# The latency threshold to determine whether to include request diagnostics or not for non-point operations (in milliseconds)
cosmos.diagnosticsThresholds.nonPointOperationLatencyThresholdInMS=3000
# The request charge (RU) threshold to determine whether to include request diagnostics or not
cosmos.diagnosticsThresholds.requestChargeThresholdInRU=1000
# The payload size (in bytes) threshold to determine whether to include request diagnostics or not (in bytes)
cosmos.diagnosticsThresholds.payloadSizeThresholdInBytes=2147483647

# Secondary DataSource Config
cosmos.secondary.uri=${NEW_ACCOUNT_HOST}
cosmos.secondary.key=${NEW_ACCOUNT_KEY}
cosmos.secondary.secondaryKey=${NEW_SECONDARY_ACCOUNT_KEY}

# Populate query metrics
cosmos.secondary.queryMetricsEnabled=true
# Max Degree of Parallelism allowed
cosmos.secondary.maxDegreeOfParallelism=0
# Max number of items to buffer
cosmos.secondary.maxBufferedItemCount=0
# Max size of the response continuation token
cosmos.secondary.responseContinuationTokenLimitInKb=0
# The latency threshold to determine whether to include request diagnostics or not for point operations (in milliseconds)
cosmos.secondary.diagnosticsThresholds.pointOperationLatencyThresholdInMS=1000
# The latency threshold to determine whether to include request diagnostics or not for non-point operations (in milliseconds)
cosmos.secondary.diagnosticsThresholds.nonPointOperationLatencyThresholdInMS=3000
# The request charge (RU) threshold to determine whether to include request diagnostics or not
cosmos.secondary.diagnosticsThresholds.requestChargeThresholdInRU=1000
# The payload size (in bytes) threshold to determine whether to include request diagnostics or not (in bytes)
cosmos.secondary.diagnosticsThresholds.payloadSizeThresholdInBytes=2147483647

