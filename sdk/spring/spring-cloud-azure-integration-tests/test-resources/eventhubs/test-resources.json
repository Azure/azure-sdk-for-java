{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "testApplicationOid": {
      "type": "String"
    },
    "subscriptionId": {
      "defaultValue": "[subscription().subscriptionId]",
      "type": "string"
    },
    "baseName": {
      "defaultValue": "[resourceGroup().name]",
      "type": "String"
    }
  },
  "variables": {
    "eventHubNamespaceName": "[concat(parameters('baseName'),'-test-eventhub')]",
    "azureEventHubsDataOwnerRoleId": "/subscriptions/[parameters('subscriptionId')]/providers/Microsoft.Authorization/roleDefinitions/f526a384-b230-433a-b45c-95f59c4a2dec",
    "location": "[resourceGroup().location]"
  },
  "resources": [
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "2022-01-01-preview",
      "name": "[variables('eventHubNamespaceName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {
        "minimumTlsVersion": "1.2",
        "publicNetworkAccess": "Enabled",
        "disableLocalAuth": false,
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0,
        "kafkaEnabled": true
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
      "apiVersion": "2022-01-01-preview",
      "name": "[concat(variables('eventHubNamespaceName'), '/RootManageSharedAccessKey')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]"
      ],
      "properties": {
        "rights": [
          "Listen",
          "Manage",
          "Send"
        ]
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "apiVersion": "2022-01-01-preview",
      "name": "[concat(variables('eventHubNamespaceName'), '/processoreventhub')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]"
      ],
      "properties": {
        "messageRetentionInDays": 1,
        "partitionCount": 1,
        "status": "Active"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/networkRuleSets",
      "apiVersion": "2022-01-01-preview",
      "name": "[concat(variables('eventHubNamespaceName'), '/default')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]"
      ],
      "properties": {
        "publicNetworkAccess": "Enabled",
        "defaultAction": "Allow",
        "virtualNetworkRules": [],
        "ipRules": []
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
      "apiVersion": "2022-01-01-preview",
      "name": "[concat(variables('eventHubNamespaceName'), '/processoreventhub/$Default')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventHubNamespaceName'), 'processoreventhub')]",
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]"
      ],
      "properties": {}
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-10-01-preview",
      "name": "[guid(concat(variables('azureEventHubsDataOwnerRoleId'), parameters('baseName')))]",
      "properties": {
        "roleDefinitionId": "[variables('azureEventHubsDataOwnerRoleId')]",
        "principalId": "[parameters('testApplicationOid')]"
      }
    }
  ],
  "outputs": {
    "AZURE_EVENTHUBS_NAMESPACE": {
      "type": "string",
      "value": "[variables('eventHubNamespaceName')]"
    }
  }
}
