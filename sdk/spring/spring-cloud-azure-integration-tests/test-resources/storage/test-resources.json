{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "testApplicationOid": {
      "type": "String"
    },
    "subscriptionId": {
      "defaultValue": "[subscription().subscriptionId]",
      "type": "string"
    },
    "baseName": {
      "defaultValue": "[resourceGroup().name]",
      "type": "String"
    }
  },
  "variables": {
    "storageAccountsName": "[substring(uniqueString(parameters('baseName')), 0, 11)]",
    "azureStorageBlobDataOwnerRoleId": "/subscriptions/[parameters('subscriptionId')]/providers/Microsoft.Authorization/roleDefinitions/b7e6dc6d-f1e8-4753-8033-0f276bb0955b",
    "azureStorageQueueDataContributorRoleId": "/subscriptions/[parameters('subscriptionId')]/providers/Microsoft.Authorization/roleDefinitions/974c5e8b-45b9-4653-ba55-5f855dd0fb88",
    "location": "[resourceGroup().location]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('storageAccountsName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-10-01-preview",
      "name": "[guid(concat(variables('azureStorageQueueDataContributorRoleId'), variables('storageAccountsName')))]",
      "scope": "[concat('Microsoft.Storage/storageAccounts', '/', variables('storageAccountsName'))]",
      "dependsOn": [
        "[variables('storageAccountsName')]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('azureStorageQueueDataContributorRoleId')]",
        "principalId": "[parameters('testApplicationOid')]"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-10-01-preview",
      "name": "[guid(concat(variables('azureStorageBlobDataOwnerRoleId'), variables('storageAccountsName')))]",
      "scope": "[concat('Microsoft.Storage/storageAccounts', '/', variables('storageAccountsName'))]",
      "dependsOn": [
        "[variables('storageAccountsName')]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('azureStorageBlobDataOwnerRoleId')]",
        "principalId": "[parameters('testApplicationOid')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountsName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountsName'))]"
      ],
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountsName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountsName'))]"
      ],
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountsName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountsName'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountsName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountsName'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountsName'), '/default/processorcontainer')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountsName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountsName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountsName'), '/default/blobcontainer')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountsName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountsName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2021-09-01",
      "name": "[concat(variables('storageAccountsName'), '/default/fileshare')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('storageAccountsName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountsName'))]"
      ],
      "properties": {
        "accessTier": "TransactionOptimized",
        "shareQuota": 5120,
        "enabledProtocols": "SMB"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountsName'), '/default/test-eventhub-message')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountsName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountsName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountsName'), '/default/test-eventhub-batch')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountsName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountsName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountsName'), '/default/test-eventhub-manual')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountsName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountsName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountsName'), '/default/test-eventhub-record')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountsName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountsName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountsName'), '/default/test-eventhub-sync')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountsName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountsName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountsName'), '/default/test-eventhub-health')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountsName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountsName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    }
  ],
  "outputs": {
    "AZURE_STORAGE_ACCOUNT_NAME": {
      "type": "string",
      "value": "[variables('storageAccountsName')]"
    },
    "AZURE_STORAGE_CONTAINER_NAME_FOR_EVENTHUB": {
      "type": "string",
      "value": "processorcontainer"
    },
    "AZURE_STORAGE_CONTAINER_NAME_FOR_BLOB": {
      "type": "string",
      "value": "blobcontainer"
    },
    "AZURE_STORAGE_CONTAINER_NAME_FOR_FILE": {
      "type": "string",
      "value": "fileshare"
    },
    "AZURE_STORAGE_ACCOUNT_KEY": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountsName')), '2019-06-01').keys[0].value]"
    },
    "AZURE_STORAGE_BLOB_ENDPOINT": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountsName')), '2019-06-01').primaryEndpoints.blob]"
    },
    "AZURE_STORAGE_QUEUE_NAME": {
      "type": "string",
      "value": "test"
    }
  }
}
