parameters:
  Matrix: ''
  MaxParallel: 10
  SkipOptions: "-Dcheckstyle.skip -Dcodesnippet.skip -Denforcer.skip -Djacoco.skip -Dmaven.javadoc.skip -Drevapi.skip -Dspotbugs.skip"
  BuildParallelization: '2C'

jobs:
  - job: 'compatibility_test_${{ parameters.OSName }}'
    dependsOn: ${{ parameters.DependsOn }}
    condition: and(succeededOrFailed(), ne(${{ parameters.Matrix }}, '{}'))
    strategy:
      maxParallel: ${{ parameters.MaxParallel }}
      matrix: $[ ${{ parameters.Matrix }} ]
    variables:
      - template: ../../../eng/pipelines/templates/variables/globals.yml
      - name: SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_BOOT_VERSION
        value: ${{ parameters.Matrix.SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_BOOT_VERSION }}
    steps:
      - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
        parameters:
          Paths:
            - 'sdk/spring'
            - 'sdk/parents/azure-client-sdk-parent'
            - 'sdk/boms/spring-cloud-azure-dependencies'
            - 'sdk/parents/azure-client-sdk-parent'
            - 'sdk/jdbc'
            - 'sdk/servicebus'
            - 'sdk/eventhubs'
            - 'common/perf-test-core'
            - 'sdk/monitor/azure-monitor-opentelemetry-exporter'
            - 'sdk/parents/azure-perf-test-parent'
            - 'sdk/parents/azure-sdk-parent'
            - 'eng/code-quality-reports'
      - task: Maven@4
        displayName: 'Install Unreleased Dependencies'
        inputs:
          mavenPomFile: sdk/spring/pipeline/ClientFromSourcePom.xml
          goals: 'install'
          options: $(DefaultOptions) -DskipTests $(DefaultSkipOptions) -Djacoco.skip=true ${{ parameters.BuildOptions }} -T ${{ parameters.BuildParallelization }}
          mavenOptions: '$(MemoryOptions) $(LoggingOptions)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: $(JavaTestVersion)
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false
      - script: |
          python -m pip install termcolor
        displayName: 'Install python module'
      - bash: |
          echo "##vso[task.setVariable variable=SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_CLOUD_VERSION]$(python ./sdk/spring/scripts/compatibility_get_spring_cloud_version.py -b $(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_BOOT_VERSION))"
        displayName: 'Set supported Spring version to environment variables'
      - bash: |
          echo "$(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_BOOT_VERSION):"
          echo "https://repo1.maven.org/maven2/org/springframework/boot/spring-boot-dependencies/$(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_BOOT_VERSION)/spring-boot-dependencies-$(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_BOOT_VERSION).pom"
          echo "$(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_CLOUD_VERSION):"
          echo "https://repo1.maven.org/maven2/org/springframework/cloud/spring-cloud-dependencies/$(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_CLOUD_VERSION)/spring-cloud-dependencies-$(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_CLOUD_VERSION).pom"
        displayName: 'Log Spring version and Maven pom path'
      - script: |
          python ./sdk/spring/scripts/compatibility_insert_dependencymanagement.py -b $(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_BOOT_VERSION) -c $(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_CLOUD_VERSION)
        displayName: 'Insert Spring dependency managements'
      - script: |
            python ./sdk/spring/scripts/compatibility_delete_version.py -b $(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_BOOT_VERSION)
        displayName: 'Remove unused dependency versions'
      - task: Maven@4
        displayName: 'Run tests'
        inputs:
          options: '$(DefaultOptions) -ntp -T ${{parameters.BuildParallelization}} ${{parameters.SkipOptions}} -Dcompiler.failondeprecatedstatus=-'
          mavenPomFile: sdk/spring/pom.xml
          mavenOptions: '$(MemoryOptions)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: $(JavaTestVersion)
          jdkArchitectureOption: 'x64'
          goals: 'clean install -Pdev '

