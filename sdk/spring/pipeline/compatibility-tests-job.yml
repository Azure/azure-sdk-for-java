parameters:
  Matrix: ''
  MaxParallel: 10
  SkipOptions: "-Dcheckstyle.skip -Dcodesnippet.skip -Denforcer.skip -Djacoco.skip -Dmaven.javadoc.skip -Drevapi.skip -Dspotbugs.skip"
  BuildParallelization: '2C'
  ArtifactsList: "com.azure:azure-spring-data-cosmos,com.azure.spring:spring-cloud-azure-core,com.azure.spring:spring-cloud-azure-docker-compose,com.azure.spring:spring-cloud-azure-service,com.azure.spring:spring-cloud-azure-resourcemanager,com.azure.spring:spring-messaging-azure,com.azure.spring:spring-messaging-azure-eventhubs,com.azure.spring:spring-messaging-azure-servicebus,com.azure.spring:spring-messaging-azure-storage-queue,com.azure.spring:spring-integration-azure-core,com.azure.spring:spring-integration-azure-eventhubs,com.azure.spring:spring-integration-azure-servicebus,com.azure.spring:spring-integration-azure-storage-queue,com.azure.spring:spring-cloud-azure-autoconfigure,com.azure.spring:spring-cloud-azure-actuator,com.azure.spring:spring-cloud-azure-actuator-autoconfigure,com.azure.spring:spring-cloud-azure-starter,com.azure.spring:spring-cloud-azure-starter-actuator,com.azure.spring:spring-cloud-azure-starter-active-directory,com.azure.spring:spring-cloud-azure-starter-active-directory-b2c,com.azure.spring:spring-cloud-azure-starter-appconfiguration,com.azure.spring:spring-cloud-azure-starter-cosmos,com.azure.spring:spring-cloud-azure-starter-data-cosmos,com.azure.spring:spring-cloud-azure-starter-data-redis-lettuce,com.azure.spring:spring-cloud-azure-starter-eventhubs,com.azure.spring:spring-cloud-azure-starter-eventgrid,com.azure.spring:spring-cloud-azure-starter-keyvault,com.azure.spring:spring-cloud-azure-starter-keyvault-certificates,com.azure.spring:spring-cloud-azure-starter-keyvault-secrets,com.azure.spring:spring-cloud-azure-starter-servicebus,com.azure.spring:spring-cloud-azure-starter-servicebus-jms,com.azure.spring:spring-cloud-azure-starter-storage,com.azure.spring:spring-cloud-azure-starter-storage-blob,com.azure.spring:spring-cloud-azure-starter-storage-file-share,com.azure.spring:spring-cloud-azure-starter-storage-queue,com.azure.spring:spring-cloud-azure-starter-integration-eventhubs,com.azure.spring:spring-cloud-azure-starter-integration-servicebus,com.azure.spring:spring-cloud-azure-starter-integration-storage-queue,com.azure.spring:spring-cloud-azure-stream-binder-servicebus-core,com.azure.spring:spring-cloud-azure-stream-binder-servicebus,com.azure.spring:spring-cloud-azure-stream-binder-eventhubs,com.azure.spring:spring-cloud-azure-stream-binder-eventhubs-core,com.azure.spring:spring-cloud-azure-starter-stream-eventhubs,com.azure.spring:spring-cloud-azure-starter-stream-servicebus,com.azure.spring:spring-cloud-azure-starter-jdbc-mysql,com.azure.spring:spring-cloud-azure-starter-jdbc-postgresql,com.azure.spring:spring-cloud-azure-testcontainers,com.azure.spring:spring-cloud-azure-appconfiguration-config,com.azure.spring:spring-cloud-azure-appconfiguration-config-web,com.azure.spring:spring-cloud-azure-feature-management,com.azure.spring:spring-cloud-azure-feature-management-web,com.azure.spring:spring-cloud-azure-starter-appconfiguration-config"

jobs:
  - job: 'compatibility_test_${{ parameters.OSName }}'
    dependsOn: ${{ parameters.DependsOn }}
    condition: and(succeededOrFailed(), ne(${{ parameters.Matrix }}, '{}'))
    strategy:
      maxParallel: ${{ parameters.MaxParallel }}
      matrix: $[ ${{ parameters.Matrix }} ]
    variables:
      - template: ../../../eng/pipelines/templates/variables/globals.yml
      - name: SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_BOOT_VERSION
        value: ${{ parameters.Matrix.SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_BOOT_VERSION }}
      - name: ArtifactName
        value: 'packages'
      - name: ArtifactsJson
        value: '${{ convertToJson(parameters.Artifacts) }}'
      - name: ArtifactsJsonEscaped
        value: "${{ replace(convertToJson(parameters.Artifacts), '''', '`''') }}"
      - name: AdditionalModulesJson
        value: '${{ convertToJson(parameters.AdditionalModules) }}'
    steps:
      - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
        parameters:
          Paths:
            - '**/*.xml'
            - '**/*.md'
            - '.vscode/cspell.json'
            - '!sdk/**/test-recordings/*'
            - '!sdk/**/session-records/*'
      - template: ../../../eng/pipelines/templates/steps/generate-project-list-and-cache-maven-repository.yml
        parameters:
          JobType: 'Build'
      - task: PythonScript@0
        displayName: 'Generate FromSource POM for unreleased dependencies'
        inputs:
          scriptPath: 'eng/scripts/generate_from_source_pom.py'
          arguments: '--artifacts-list ${{ parameters.ArtifactsList }}'
          workingDirectory: '$(System.DefaultWorkingDirectory)'
#      - script: |
#          python ./eng/scripts/generate_from_source_pom.py --al com.azure:azure-messaging-servicebus,com.azure:azure-messaging-eventhubs
#        displayName: 'Generate FromSource POM for unreleased dependencies'
      - task: Maven@4
        displayName: 'Build for From Source run'
        inputs:
          mavenPomFile: ClientFromSourcePom.xml
          goals: 'install'
          # Build and install every track 2, client, library. The purpose is to have all the libraries installed on the
          # machine, so we can simply run tests with the -amd switch and we can remove the SNAFU of dependencies that
          # bloated the ci.yml files' AdditionalModules because we ended up having to list every transitive azure client
          # dependency. Note: The -T 1C says spin up a build thread per core. Since we're building
          # all the track 2, client, libraries (which is now over 100) this effectively cuts the build time in half.
          options: '$(DefaultOptions) $(DefaultSkipOptions) -Djacoco.skip=true -T ${{ parameters.BuildParallelization }} -Pnative'
          mavenOptions: '$(MemoryOptions) $(LoggingOptions)'
          javaHomeOption: 'Path'
          jdkDirectory: $(Agent.BuildDirectory)/graalvm-22.3.0
          publishJUnitResults: false
#        env: ${{ parameters.TestEnvVars }}
#        condition: and(succeeded(), eq(variables['TestFromSource'], 'true'))
      - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
        parameters:
          Paths:
            - 'sdk/spring'
            - 'sdk/parents/azure-client-sdk-parent'
            - 'sdk/boms/spring-cloud-azure-dependencies'
            - 'sdk/parents/azure-client-sdk-parent'
            - 'sdk/jdbc'
            - 'sdk/servicebus'
            - 'sdk/eventhubs'
      - script: |
          python -m pip install termcolor
        displayName: 'Install python module'
      - bash: |
          echo "##vso[task.setVariable variable=SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_CLOUD_VERSION]$(python ./sdk/spring/scripts/compatibility_get_spring_cloud_version.py -b $(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_BOOT_VERSION))"
        displayName: 'Set supported Spring version to environment variables'
      - bash: |
          echo "$(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_BOOT_VERSION):"
          echo "https://repo1.maven.org/maven2/org/springframework/boot/spring-boot-dependencies/$(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_BOOT_VERSION)/spring-boot-dependencies-$(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_BOOT_VERSION).pom"
          echo "$(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_CLOUD_VERSION):"
          echo "https://repo1.maven.org/maven2/org/springframework/cloud/spring-cloud-dependencies/$(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_CLOUD_VERSION)/spring-cloud-dependencies-$(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_CLOUD_VERSION).pom"
        displayName: 'Log Spring version and Maven pom path'
      - script: |
          python ./sdk/spring/scripts/compatibility_insert_dependencymanagement.py -b $(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_BOOT_VERSION) -c $(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_CLOUD_VERSION)
        displayName: 'Insert Spring dependency managements'
      - script: |
            python ./sdk/spring/scripts/compatibility_delete_version.py -b $(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_BOOT_VERSION)
        displayName: 'Remove unused dependency versions'
      - task: Maven@4
        displayName: 'Run tests'
        inputs:
          options: '$(DefaultOptions) -ntp -T ${{parameters.BuildParallelization}} ${{parameters.SkipOptions}} -Dcompiler.failondeprecatedstatus=-'
          mavenPomFile: sdk/spring/pom.xml
          mavenOptions: '$(MemoryOptions)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: $(JavaTestVersion)
          jdkArchitectureOption: 'x64'
          goals: 'clean install -Pdev '

