resources:
  repositories:
    - repository: azure-sdk-build-tools
      type: git
      name: internal/azure-sdk-build-tools
      ref: refs/tags/azure-sdk-build-tools_20211019.1

parameters:
  - name: Artifacts
    type: object
    default: []
  - name: TestPipeline
    type: boolean
    default: false
  - name: AdditionalModules
    type: object
    default: []
  - name: SDKType
    type: string
    default: client
  - name: ServiceDirectory
    type: string
    default: not-specified
  - name: TargetDocRepoName
    type: string
    default: azure-docs-sdk-java
  - name: MatrixConfigs
    type: object
    default:
      - Name: Java_ci_test_base
        Path: eng/pipelines/templates/stages/platform-matrix.json
        Selection: sparse
        NonSparseParameters: Agent
        GenerateVMJobs: true
  - name: AdditionalMatrixConfigs
    type: object
    default: []
  - name: MatrixFilters
    type: object
    default: []
  - name: MatrixReplace
    type: object
    default: []
  - name: SkipAggregateReports
    type: boolean
    default: false
  - name: PreBuildSteps
    type: object
    default: []
  - name: NewSpringBootVersion
    type: string
    default: 2.6.1
  - name: NewSpringCloudVersion
    type: string
    default: 2021.0.0
  - name: LastSpringBootVersion
    type: string
    default: 2.5.7
  - name: LastSpringCloudVersion
    type: string
    default: 2020.0.4

stages:
  - stage: Build
    jobs:
      - template: /eng/pipelines/templates/jobs/ci.yml
        parameters:
          ServiceDirectory: ${{ parameters.ServiceDirectory }}
          ${{ if eq(parameters.ServiceDirectory, 'template') }}:
            TestPipeline: true
          SDKType: ${{ parameters.SDKType }}
          Artifacts: ${{ parameters.Artifacts }}
          AdditionalModules: ${{ parameters.AdditionalModules }}
          SkipAggregateReports: ${{ parameters.SkipAggregateReports }}
          MatrixConfigs:
            - ${{ each config in parameters.MatrixConfigs }}:
                - ${{ config }}
            - ${{ each config in parameters.AdditionalMatrixConfigs }}:
                - ${{ config }}
          MatrixFilters:
            - ${{ each filter in parameters.MatrixFilters }}:
                - ${{ filter }}
            # Skip TestFromSource jobs for SDKType data
            - ${{ if eq(parameters.SDKType, 'data') }}:
                - TestFromSource=^(?!true).*
          MatrixReplace:
            - ${{ each replacement in parameters.MatrixReplace }}:
                - ${{ replacement }}
            - ${{ if eq(parameters.SDKType, 'data') }}:
                - TestGoals=.*/verify
                - TestOptions=.*/-am
            - AZURE_TEST.*=.*/
          PreBuildSteps: ${{ parameters.PreBuildSteps }}

  - stage: TestNewSpringBootVersion
    jobs:
      - template: ../../sdk/spring/spring-sdk-client-test.yml
        parameters:
          - Artifacts: ${{ parameters.Artifacts }}
          - NewSpringBootVersion: ${{ parameters.NewSpringBootVersion }}
          - NewSpringCloudVersion: ${{ parameters.NewSpringCloudVersion }}
          - ServiceDirectory: ${{ parameters.ServiceDirectory }}
#      - template: /eng/common/pipelines/templates/jobs/archetype-sdk-tests-generate.yml
#        parameters:
#          JobTemplatePath: /eng/pipelines/templates/jobs/ci.tests.yml
#          CloudConfig:
#            Cloud: Public
#          MatrixConfigs:
#            - ${{ each config in parameters.MatrixConfigs }}:
#                - ${{ config }}
#            - ${{ each config in parameters.AdditionalMatrixConfigs }}:
#                - ${{ config }}
#          MatrixFilters:
#            - ${{ each filter in parameters.MatrixFilters }}:
#                - ${{ filter }}
#            # Skip TestFromSource jobs for SDKType data
#            - ${{ if eq(parameters.SDKType, 'data') }}:
#                - TestFromSource=^(?!true).*
#          MatrixReplace:
#            - ${{ each replacement in parameters.MatrixReplace }}:
#                - ${{ replacement }}
#            - ${{ if eq(parameters.SDKType, 'data') }}:
#                - TestGoals=.*/verify
#                - TestOptions=.*/-am
#            - AZURE_TEST.*=.*/
#          AdditionalParameters:
#            SDKType: ${{ parameters.SDKType }}
#            ServiceDirectory: ${{ parameters.ServiceDirectory }}
#            TestPipeline: ${{ parameters.TestPipeline }}
#            Artifacts: ${{ parameters.Artifacts }}
#            AdditionalModules: ${{ parameters.AdditionalModules }}
#            SkipAggregateReports: ${{ parameters.SkipAggregateReports }}
#            PreBuildSteps:
#              - script: |
#                  pip install in-place & pip install termcolor
#                displayName: 'python module install'
#              - script: |
#                  python ./sdk/spring/scripts/ci_update_versions.py --sbv ${{parameters.NewSpringBootVersion}}
#                displayName: 'update spring boot versions'
#              - script: |
#                  python ./sdk/spring/scripts/ci_insert_dependency_management_in_pom_files.py -b ${{parameters.NewSpringBootVersion}} -c ${{parameters.NewSpringCloudVersion}}
#                displayName: 'insert dependency management'
#
#      - job: 'maven_dependency'
#        variables:
#          - template: ../../eng/pipelines/templates/variables/globals.yml
#        pool:
#          name: azsdk-pool-mms-ubuntu-2004-general
#          vmImage: MMSUbuntu20.04
#        steps:
#          - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
#            parameters:
#              Paths:
#                - 'sdk/${{ parameters.ServiceDirectory }}'
#                - '**/*.xml'
#                - '**/*.md'
#                - '.vscode/cspell.json'
#                - '!sdk/**/test-recordings'
#                - '!sdk/**/session-records'
#          - template: ../../eng/pipelines/templates/steps/generate-project-list.yml
#            parameters:
#              Artifacts: ${{ parameters.Artifacts }}
#              AdditionalModules: ${{ parameters.AdditionalModules }}
#              JobType: 'maven_dependency'
#              SDKType: ${{parameters.SDKType}}
#          - task: PythonScript@0
#            displayName: 'Generate directories variable for sparse checkout'
#            inputs:
#              scriptPath: 'eng/scripts/generate_from_source_pom.py'
#              arguments: '--set-pipeline-variable CheckoutDirectories --project-list $(ProjectList)'
#              workingDirectory: '$(System.DefaultWorkingDirectory)'
#          - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
#            parameters:
#              Paths: $(CheckoutDirectories)
#              SkipDefaultCheckout: true
#          - template: ../../eng/pipelines/templates/steps/install-reporting-tools.yml
#          - script: |
#              pip install in-place & pip install termcolor
#            displayName: 'python module install'
#          - script: |
#              python ./sdk/spring/scripts/ci_update_versions.py --sbv ${{parameters.NewSpringBootVersion}}
#            displayName: 'update spring boot versions'
#          - script: |
#              python ./sdk/spring/scripts/ci_insert_dependency_management_in_pom_files.py -b ${{parameters.NewSpringBootVersion}} -c ${{parameters.NewSpringCloudVersion}}
#            displayName: 'insert dependency management'
#          - script: |
#              mvn -f sdk/spring/pom.xml -P dev --batch-mode --fail-at-end $(WagonOptions) -T 2C -DskipTests -Dgpg.skip -DtrimStackTrace=false -Dmaven.javadoc.skip=true -Dcodesnippet.skip=true -Dspotbugs.skip=true -Dcheckstyle.skip=true -Drevapi.skip=true -Djacoco.skip=true -pl $(ProjectList) -am install
#            displayName: 'maven_install'
#          - script: |
#              cd ./sdk/spring && mvn dependency:tree>tree.txt
#            displayName: 'maven_dependency'
#          - script: |
#              python ./sdk/spring/scripts/ci_read_dptree.py
#            displayName: '${{parameters.NewSpringBootVersion}}_dependencyTree_output'

  - stage: TestLastSpringBootVersion
    jobs:
      - template: /eng/common/pipelines/templates/jobs/archetype-sdk-tests-generate.yml
        parameters:
          JobTemplatePath: /eng/pipelines/templates/jobs/ci.tests.yml
          CloudConfig:
            Cloud: Public
          MatrixConfigs:
            - ${{ each config in parameters.MatrixConfigs }}:
                - ${{ config }}
            - ${{ each config in parameters.AdditionalMatrixConfigs }}:
                - ${{ config }}
          MatrixFilters:
            - ${{ each filter in parameters.MatrixFilters }}:
                - ${{ filter }}
            # Skip TestFromSource jobs for SDKType data
            - ${{ if eq(parameters.SDKType, 'data') }}:
                - TestFromSource=^(?!true).*
          MatrixReplace:
            - ${{ each replacement in parameters.MatrixReplace }}:
                - ${{ replacement }}
            - ${{ if eq(parameters.SDKType, 'data') }}:
                - TestGoals=.*/verify
                - TestOptions=.*/-am
            - AZURE_TEST.*=.*/
          AdditionalParameters:
            SDKType: ${{ parameters.SDKType }}
            ServiceDirectory: ${{ parameters.ServiceDirectory }}
            TestPipeline: ${{ parameters.TestPipeline }}
            Artifacts: ${{ parameters.Artifacts }}
            AdditionalModules: ${{ parameters.AdditionalModules }}
            SkipAggregateReports: ${{ parameters.SkipAggregateReports }}
            PreBuildSteps:
              - script: |
                  pip install in-place & pip install termcolor
                displayName: 'python module install'
              - script: |
                  python ./sdk/spring/scripts/ci_update_versions.py --sbv ${{parameters.LastSpringBootVersion}}
                displayName: 'update spring boot versions'
              - script: |
                  python ./sdk/spring/scripts/ci_insert_dependency_management_in_pom_files.py -b ${{parameters.LastSpringBootVersion}} -c ${{parameters.LastSpringCloudVersion}}
                displayName: 'insert dependency management'
      - job: 'maven_dependency'
        variables:
          - template: ../../eng/pipelines/templates/variables/globals.yml
        pool:
          name: azsdk-pool-mms-ubuntu-2004-general
          vmImage: MMSUbuntu20.04
        steps:
          - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
            parameters:
              Paths:
                - 'sdk/${{ parameters.ServiceDirectory }}'
                - '**/*.xml'
                - '**/*.md'
                - '.vscode/cspell.json'
                - '!sdk/**/test-recordings'
                - '!sdk/**/session-records'
          - template: ../../eng/pipelines/templates/steps/generate-project-list.yml
            parameters:
              Artifacts: ${{ parameters.Artifacts }}
              AdditionalModules: ${{ parameters.AdditionalModules }}
              JobType: 'maven_dependency'
              SDKType: ${{parameters.SDKType}}
          - task: PythonScript@0
            displayName: 'Generate directories variable for sparse checkout'
            inputs:
              scriptPath: 'eng/scripts/generate_from_source_pom.py'
              arguments: '--set-pipeline-variable CheckoutDirectories --project-list $(ProjectList)'
              workingDirectory: '$(System.DefaultWorkingDirectory)'
          - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
            parameters:
              Paths: $(CheckoutDirectories)
              SkipDefaultCheckout: true
          - template: ../../eng/pipelines/templates/steps/install-reporting-tools.yml
          - script: |
              pip install in-place & pip install termcolor
            displayName: 'python module install'
          - script: |
              python ./sdk/spring/scripts/ci_update_versions.py --sbv ${{parameters.LastSpringBootVersion}}
            displayName: 'update spring boot versions'
          - script: |
              python ./sdk/spring/scripts/ci_insert_dependency_management_in_pom_files.py -b ${{parameters.LastSpringBootVersion}} -c ${{parameters.LastSpringCloudVersion}}
            displayName: 'insert dependency management'
          - script: |
              mvn -f sdk/spring/pom.xml -P dev --batch-mode --fail-at-end -Dmaven.wagon.httpconnectionManager.ttlSeconds=60 -T 2C -DskipTests -Dgpg.skip -DtrimStackTrace=false -Dmaven.javadoc.skip=true -Dcodesnippet.skip=true -Dspotbugs.skip=true -Dcheckstyle.skip=true -Drevapi.skip=true -Djacoco.skip=true -pl $(ProjectList) -am install
            displayName: 'maven_install'
          - script: |
              cd ./sdk/spring && mvn dependency:tree>tree.txt
            displayName: 'maven_dependency'
          - script: |
              python ./sdk/spring/scripts/ci_read_dptree.py
            displayName: '${{parameters.LastSpringBootVersion}}_dependencyTree_output'

  # The Prerelease and Release stages are conditioned on whether we are building a pull request and the branch.
  - ${{if and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['System.TeamProject'], 'internal'))}}:
      - template: archetype-java-release.yml
        parameters:
          DependsOn:
            - Build
          ServiceDirectory: ${{ parameters.ServiceDirectory }}
          SDKType: ${{ parameters.SDKType }}
          Artifacts: ${{ parameters.Artifacts }}
          ${{ if eq(parameters.ServiceDirectory, 'template') }}:
            TestPipeline: true
          ArtifactName: packages
          TargetDocRepoName: ${{ parameters.TargetDocRepoName }}