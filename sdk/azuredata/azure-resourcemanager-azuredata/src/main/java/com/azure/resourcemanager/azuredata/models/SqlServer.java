// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azuredata.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.azuredata.fluent.models.SqlServerInner;

/** An immutable client-side representation of SqlServer. */
public interface SqlServer {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the cores property: Cores of the Sql Server.
     *
     * @return the cores value.
     */
    Integer cores();

    /**
     * Gets the version property: Version of the Sql Server.
     *
     * @return the version value.
     */
    String version();

    /**
     * Gets the edition property: Sql Server Edition.
     *
     * @return the edition value.
     */
    String edition();

    /**
     * Gets the registrationId property: ID for Parent Sql Server Registration.
     *
     * @return the registrationId value.
     */
    String registrationId();

    /**
     * Gets the propertyBag property: Sql Server Json Property Bag.
     *
     * @return the propertyBag value.
     */
    String propertyBag();

    /**
     * Gets the inner com.azure.resourcemanager.azuredata.fluent.models.SqlServerInner object.
     *
     * @return the inner object.
     */
    SqlServerInner innerModel();

    /** The entirety of the SqlServer definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The SqlServer definition stages. */
    interface DefinitionStages {
        /** The first stage of the SqlServer definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the SqlServer definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, sqlServerRegistrationName.
             *
             * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this value
             *     from the Azure Resource Manager API or the portal.
             * @param sqlServerRegistrationName Name of the SQL Server registration.
             * @return the next definition stage.
             */
            WithCreate withExistingSqlServerRegistration(String resourceGroupName, String sqlServerRegistrationName);
        }
        /**
         * The stage of the SqlServer definition which contains all the minimum required properties for the resource to
         * be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithVersion,
                DefinitionStages.WithEdition,
                DefinitionStages.WithRegistrationId,
                DefinitionStages.WithPropertyBag {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            SqlServer create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            SqlServer create(Context context);
        }
        /** The stage of the SqlServer definition allowing to specify version. */
        interface WithVersion {
            /**
             * Specifies the version property: Version of the Sql Server..
             *
             * @param version Version of the Sql Server.
             * @return the next definition stage.
             */
            WithCreate withVersion(String version);
        }
        /** The stage of the SqlServer definition allowing to specify edition. */
        interface WithEdition {
            /**
             * Specifies the edition property: Sql Server Edition..
             *
             * @param edition Sql Server Edition.
             * @return the next definition stage.
             */
            WithCreate withEdition(String edition);
        }
        /** The stage of the SqlServer definition allowing to specify registrationId. */
        interface WithRegistrationId {
            /**
             * Specifies the registrationId property: ID for Parent Sql Server Registration..
             *
             * @param registrationId ID for Parent Sql Server Registration.
             * @return the next definition stage.
             */
            WithCreate withRegistrationId(String registrationId);
        }
        /** The stage of the SqlServer definition allowing to specify propertyBag. */
        interface WithPropertyBag {
            /**
             * Specifies the propertyBag property: Sql Server Json Property Bag..
             *
             * @param propertyBag Sql Server Json Property Bag.
             * @return the next definition stage.
             */
            WithCreate withPropertyBag(String propertyBag);
        }
    }
    /**
     * Begins update for the SqlServer resource.
     *
     * @return the stage of resource update.
     */
    SqlServer.Update update();

    /** The template for SqlServer update. */
    interface Update
        extends UpdateStages.WithCores,
            UpdateStages.WithVersion,
            UpdateStages.WithEdition,
            UpdateStages.WithRegistrationId,
            UpdateStages.WithPropertyBag {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        SqlServer apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        SqlServer apply(Context context);
    }
    /** The SqlServer update stages. */
    interface UpdateStages {
        /** The stage of the SqlServer update allowing to specify cores. */
        interface WithCores {
            /**
             * Specifies the cores property: Cores of the Sql Server..
             *
             * @param cores Cores of the Sql Server.
             * @return the next definition stage.
             */
            Update withCores(Integer cores);
        }
        /** The stage of the SqlServer update allowing to specify version. */
        interface WithVersion {
            /**
             * Specifies the version property: Version of the Sql Server..
             *
             * @param version Version of the Sql Server.
             * @return the next definition stage.
             */
            Update withVersion(String version);
        }
        /** The stage of the SqlServer update allowing to specify edition. */
        interface WithEdition {
            /**
             * Specifies the edition property: Sql Server Edition..
             *
             * @param edition Sql Server Edition.
             * @return the next definition stage.
             */
            Update withEdition(String edition);
        }
        /** The stage of the SqlServer update allowing to specify registrationId. */
        interface WithRegistrationId {
            /**
             * Specifies the registrationId property: ID for Parent Sql Server Registration..
             *
             * @param registrationId ID for Parent Sql Server Registration.
             * @return the next definition stage.
             */
            Update withRegistrationId(String registrationId);
        }
        /** The stage of the SqlServer update allowing to specify propertyBag. */
        interface WithPropertyBag {
            /**
             * Specifies the propertyBag property: Sql Server Json Property Bag..
             *
             * @param propertyBag Sql Server Json Property Bag.
             * @return the next definition stage.
             */
            Update withPropertyBag(String propertyBag);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    SqlServer refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    SqlServer refresh(Context context);
}
