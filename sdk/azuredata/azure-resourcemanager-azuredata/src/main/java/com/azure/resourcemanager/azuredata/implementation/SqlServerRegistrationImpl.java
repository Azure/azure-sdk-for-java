// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azuredata.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.azuredata.fluent.models.SqlServerRegistrationInner;
import com.azure.resourcemanager.azuredata.models.SqlServerRegistration;
import com.azure.resourcemanager.azuredata.models.SqlServerRegistrationUpdate;
import com.azure.resourcemanager.azuredata.models.SystemData;
import java.util.Collections;
import java.util.Map;

public final class SqlServerRegistrationImpl
    implements SqlServerRegistration, SqlServerRegistration.Definition, SqlServerRegistration.Update {
    private SqlServerRegistrationInner innerObject;

    private final com.azure.resourcemanager.azuredata.AzureDataManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String subscriptionId() {
        return this.innerModel().subscriptionId();
    }

    public String resourceGroup() {
        return this.innerModel().resourceGroup();
    }

    public String propertyBag() {
        return this.innerModel().propertyBag();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public SqlServerRegistrationInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.azuredata.AzureDataManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String sqlServerRegistrationName;

    private SqlServerRegistrationUpdate updateParameters;

    public SqlServerRegistrationImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public SqlServerRegistration create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSqlServerRegistrations()
                .createOrUpdateWithResponse(
                    resourceGroupName, sqlServerRegistrationName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public SqlServerRegistration create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSqlServerRegistrations()
                .createOrUpdateWithResponse(resourceGroupName, sqlServerRegistrationName, this.innerModel(), context)
                .getValue();
        return this;
    }

    SqlServerRegistrationImpl(String name, com.azure.resourcemanager.azuredata.AzureDataManager serviceManager) {
        this.innerObject = new SqlServerRegistrationInner();
        this.serviceManager = serviceManager;
        this.sqlServerRegistrationName = name;
    }

    public SqlServerRegistrationImpl update() {
        this.updateParameters = new SqlServerRegistrationUpdate();
        return this;
    }

    public SqlServerRegistration apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSqlServerRegistrations()
                .updateWithResponse(resourceGroupName, sqlServerRegistrationName, updateParameters, Context.NONE)
                .getValue();
        return this;
    }

    public SqlServerRegistration apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSqlServerRegistrations()
                .updateWithResponse(resourceGroupName, sqlServerRegistrationName, updateParameters, context)
                .getValue();
        return this;
    }

    SqlServerRegistrationImpl(
        SqlServerRegistrationInner innerObject, com.azure.resourcemanager.azuredata.AzureDataManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.sqlServerRegistrationName = Utils.getValueFromIdByName(innerObject.id(), "sqlServerRegistrations");
    }

    public SqlServerRegistration refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSqlServerRegistrations()
                .getByResourceGroupWithResponse(resourceGroupName, sqlServerRegistrationName, Context.NONE)
                .getValue();
        return this;
    }

    public SqlServerRegistration refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSqlServerRegistrations()
                .getByResourceGroupWithResponse(resourceGroupName, sqlServerRegistrationName, context)
                .getValue();
        return this;
    }

    public SqlServerRegistrationImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public SqlServerRegistrationImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public SqlServerRegistrationImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateParameters.withTags(tags);
            return this;
        }
    }

    public SqlServerRegistrationImpl withSubscriptionId(String subscriptionId) {
        this.innerModel().withSubscriptionId(subscriptionId);
        return this;
    }

    public SqlServerRegistrationImpl withResourceGroup(String resourceGroup) {
        this.innerModel().withResourceGroup(resourceGroup);
        return this;
    }

    public SqlServerRegistrationImpl withPropertyBag(String propertyBag) {
        this.innerModel().withPropertyBag(propertyBag);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
