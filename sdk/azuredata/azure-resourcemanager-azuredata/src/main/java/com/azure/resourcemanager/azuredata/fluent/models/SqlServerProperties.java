// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azuredata.fluent.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The SQL server properties. */
@Fluent
public final class SqlServerProperties {
    /*
     * Cores of the Sql Server.
     */
    @JsonProperty(value = "cores")
    private Integer cores;

    /*
     * Version of the Sql Server.
     */
    @JsonProperty(value = "version")
    private String version;

    /*
     * Sql Server Edition.
     */
    @JsonProperty(value = "edition")
    private String edition;

    /*
     * ID for Parent Sql Server Registration.
     */
    @JsonProperty(value = "registrationID")
    private String registrationId;

    /*
     * Sql Server Json Property Bag.
     */
    @JsonProperty(value = "propertyBag")
    private String propertyBag;

    /**
     * Get the cores property: Cores of the Sql Server.
     *
     * @return the cores value.
     */
    public Integer cores() {
        return this.cores;
    }

    /**
     * Set the cores property: Cores of the Sql Server.
     *
     * @param cores the cores value to set.
     * @return the SqlServerProperties object itself.
     */
    public SqlServerProperties withCores(Integer cores) {
        this.cores = cores;
        return this;
    }

    /**
     * Get the version property: Version of the Sql Server.
     *
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Set the version property: Version of the Sql Server.
     *
     * @param version the version value to set.
     * @return the SqlServerProperties object itself.
     */
    public SqlServerProperties withVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get the edition property: Sql Server Edition.
     *
     * @return the edition value.
     */
    public String edition() {
        return this.edition;
    }

    /**
     * Set the edition property: Sql Server Edition.
     *
     * @param edition the edition value to set.
     * @return the SqlServerProperties object itself.
     */
    public SqlServerProperties withEdition(String edition) {
        this.edition = edition;
        return this;
    }

    /**
     * Get the registrationId property: ID for Parent Sql Server Registration.
     *
     * @return the registrationId value.
     */
    public String registrationId() {
        return this.registrationId;
    }

    /**
     * Set the registrationId property: ID for Parent Sql Server Registration.
     *
     * @param registrationId the registrationId value to set.
     * @return the SqlServerProperties object itself.
     */
    public SqlServerProperties withRegistrationId(String registrationId) {
        this.registrationId = registrationId;
        return this;
    }

    /**
     * Get the propertyBag property: Sql Server Json Property Bag.
     *
     * @return the propertyBag value.
     */
    public String propertyBag() {
        return this.propertyBag;
    }

    /**
     * Set the propertyBag property: Sql Server Json Property Bag.
     *
     * @param propertyBag the propertyBag value to set.
     * @return the SqlServerProperties object itself.
     */
    public SqlServerProperties withPropertyBag(String propertyBag) {
        this.propertyBag = propertyBag;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
