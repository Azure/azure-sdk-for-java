/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.recoveryservices.siterecovery.v2018_01_10;

import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Base class to define the health summary of the resources contained under an
 * Arm resource.
 */
public class ResourceHealthSummary {
    /**
     * The count of total resources under the container.
     */
    @JsonProperty(value = "resourceCount")
    private Integer resourceCount;

    /**
     * The list of summary of health errors across the resources under the
     * container.
     */
    @JsonProperty(value = "issues")
    private List<HealthErrorSummary> issues;

    /**
     * The categorized resource counts.
     */
    @JsonProperty(value = "categorizedResourceCounts")
    private Map<String, Integer> categorizedResourceCounts;

    /**
     * Get the count of total resources under the container.
     *
     * @return the resourceCount value
     */
    public Integer resourceCount() {
        return this.resourceCount;
    }

    /**
     * Set the count of total resources under the container.
     *
     * @param resourceCount the resourceCount value to set
     * @return the ResourceHealthSummary object itself.
     */
    public ResourceHealthSummary withResourceCount(Integer resourceCount) {
        this.resourceCount = resourceCount;
        return this;
    }

    /**
     * Get the list of summary of health errors across the resources under the container.
     *
     * @return the issues value
     */
    public List<HealthErrorSummary> issues() {
        return this.issues;
    }

    /**
     * Set the list of summary of health errors across the resources under the container.
     *
     * @param issues the issues value to set
     * @return the ResourceHealthSummary object itself.
     */
    public ResourceHealthSummary withIssues(List<HealthErrorSummary> issues) {
        this.issues = issues;
        return this;
    }

    /**
     * Get the categorized resource counts.
     *
     * @return the categorizedResourceCounts value
     */
    public Map<String, Integer> categorizedResourceCounts() {
        return this.categorizedResourceCounts;
    }

    /**
     * Set the categorized resource counts.
     *
     * @param categorizedResourceCounts the categorizedResourceCounts value to set
     * @return the ResourceHealthSummary object itself.
     */
    public ResourceHealthSummary withCategorizedResourceCounts(Map<String, Integer> categorizedResourceCounts) {
        this.categorizedResourceCounts = categorizedResourceCounts;
        return this;
    }

}
