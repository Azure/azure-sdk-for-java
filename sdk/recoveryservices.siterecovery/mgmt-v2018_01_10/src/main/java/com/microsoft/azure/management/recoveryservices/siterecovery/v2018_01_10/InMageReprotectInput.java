/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.recoveryservices.siterecovery.v2018_01_10;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * InMageAzureV2 specific provider input.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "instanceType", defaultImpl = InMageReprotectInput.class)
@JsonTypeName("InMage")
public class InMageReprotectInput extends ReverseReplicationProviderSpecificInput {
    /**
     * The Master Target Id.
     */
    @JsonProperty(value = "masterTargetId", required = true)
    private String masterTargetId;

    /**
     * The Process Server Id.
     */
    @JsonProperty(value = "processServerId", required = true)
    private String processServerId;

    /**
     * The retention drive to use on the MT.
     */
    @JsonProperty(value = "retentionDrive", required = true)
    private String retentionDrive;

    /**
     * The CS account Id.
     */
    @JsonProperty(value = "runAsAccountId")
    private String runAsAccountId;

    /**
     * The target data store name.
     */
    @JsonProperty(value = "datastoreName")
    private String datastoreName;

    /**
     * The enable disk exclusion input.
     */
    @JsonProperty(value = "diskExclusionInput")
    private InMageDiskExclusionInput diskExclusionInput;

    /**
     * The Policy Id.
     */
    @JsonProperty(value = "profileId", required = true)
    private String profileId;

    /**
     * The disks to include list.
     */
    @JsonProperty(value = "disksToInclude")
    private List<String> disksToInclude;

    /**
     * Get the Master Target Id.
     *
     * @return the masterTargetId value
     */
    public String masterTargetId() {
        return this.masterTargetId;
    }

    /**
     * Set the Master Target Id.
     *
     * @param masterTargetId the masterTargetId value to set
     * @return the InMageReprotectInput object itself.
     */
    public InMageReprotectInput withMasterTargetId(String masterTargetId) {
        this.masterTargetId = masterTargetId;
        return this;
    }

    /**
     * Get the Process Server Id.
     *
     * @return the processServerId value
     */
    public String processServerId() {
        return this.processServerId;
    }

    /**
     * Set the Process Server Id.
     *
     * @param processServerId the processServerId value to set
     * @return the InMageReprotectInput object itself.
     */
    public InMageReprotectInput withProcessServerId(String processServerId) {
        this.processServerId = processServerId;
        return this;
    }

    /**
     * Get the retention drive to use on the MT.
     *
     * @return the retentionDrive value
     */
    public String retentionDrive() {
        return this.retentionDrive;
    }

    /**
     * Set the retention drive to use on the MT.
     *
     * @param retentionDrive the retentionDrive value to set
     * @return the InMageReprotectInput object itself.
     */
    public InMageReprotectInput withRetentionDrive(String retentionDrive) {
        this.retentionDrive = retentionDrive;
        return this;
    }

    /**
     * Get the CS account Id.
     *
     * @return the runAsAccountId value
     */
    public String runAsAccountId() {
        return this.runAsAccountId;
    }

    /**
     * Set the CS account Id.
     *
     * @param runAsAccountId the runAsAccountId value to set
     * @return the InMageReprotectInput object itself.
     */
    public InMageReprotectInput withRunAsAccountId(String runAsAccountId) {
        this.runAsAccountId = runAsAccountId;
        return this;
    }

    /**
     * Get the target data store name.
     *
     * @return the datastoreName value
     */
    public String datastoreName() {
        return this.datastoreName;
    }

    /**
     * Set the target data store name.
     *
     * @param datastoreName the datastoreName value to set
     * @return the InMageReprotectInput object itself.
     */
    public InMageReprotectInput withDatastoreName(String datastoreName) {
        this.datastoreName = datastoreName;
        return this;
    }

    /**
     * Get the enable disk exclusion input.
     *
     * @return the diskExclusionInput value
     */
    public InMageDiskExclusionInput diskExclusionInput() {
        return this.diskExclusionInput;
    }

    /**
     * Set the enable disk exclusion input.
     *
     * @param diskExclusionInput the diskExclusionInput value to set
     * @return the InMageReprotectInput object itself.
     */
    public InMageReprotectInput withDiskExclusionInput(InMageDiskExclusionInput diskExclusionInput) {
        this.diskExclusionInput = diskExclusionInput;
        return this;
    }

    /**
     * Get the Policy Id.
     *
     * @return the profileId value
     */
    public String profileId() {
        return this.profileId;
    }

    /**
     * Set the Policy Id.
     *
     * @param profileId the profileId value to set
     * @return the InMageReprotectInput object itself.
     */
    public InMageReprotectInput withProfileId(String profileId) {
        this.profileId = profileId;
        return this;
    }

    /**
     * Get the disks to include list.
     *
     * @return the disksToInclude value
     */
    public List<String> disksToInclude() {
        return this.disksToInclude;
    }

    /**
     * Set the disks to include list.
     *
     * @param disksToInclude the disksToInclude value to set
     * @return the InMageReprotectInput object itself.
     */
    public InMageReprotectInput withDisksToInclude(List<String> disksToInclude) {
        this.disksToInclude = disksToInclude;
        return this;
    }

}
