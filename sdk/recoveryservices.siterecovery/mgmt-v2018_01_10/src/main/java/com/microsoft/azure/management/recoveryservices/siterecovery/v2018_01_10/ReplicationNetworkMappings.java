/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.recoveryservices.siterecovery.v2018_01_10;

import com.microsoft.azure.arm.collection.SupportsCreating;
import rx.Completable;
import rx.Observable;
import com.microsoft.azure.management.recoveryservices.siterecovery.v2018_01_10.implementation.ReplicationNetworkMappingsInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing ReplicationNetworkMappings.
 */
public interface ReplicationNetworkMappings extends SupportsCreating<NetworkMapping.DefinitionStages.Blank>, HasInner<ReplicationNetworkMappingsInner> {
    /**
     * Gets all the network mappings under a vault.
     * Lists all ASR network mappings in the vault.
     *
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<NetworkMapping> listAsync();

    /**
     * Gets network mapping by name.
     * Gets the details of an ASR network mapping.
     *
     * @param fabricName Primary fabric name.
     * @param networkName Primary network name.
     * @param networkMappingName Network mapping name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<NetworkMapping> getAsync(String fabricName, String networkName, String networkMappingName);

    /**
     * Gets all the network mappings under a network.
     * Lists all ASR network mappings for the specified network.
     *
     * @param fabricName Primary fabric name.
     * @param networkName Primary network name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<NetworkMapping> listByReplicationNetworksAsync(final String fabricName, final String networkName);

    /**
     * Delete network mapping.
     * The operation to delete a network mapping.
     *
     * @param fabricName Primary fabric name.
     * @param networkName Primary network name.
     * @param networkMappingName ARM Resource Name for network mapping.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteAsync(String fabricName, String networkName, String networkMappingName);

}
