/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.recoveryservices.siterecovery.v2018_01_10;

import org.joda.time.DateTime;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Migration item properties.
 */
public class MigrationItemProperties {
    /**
     * The on-premise virtual machine name.
     */
    @JsonProperty(value = "machineName", access = JsonProperty.Access.WRITE_ONLY)
    private String machineName;

    /**
     * The ARM Id of policy governing this item.
     */
    @JsonProperty(value = "policyId", access = JsonProperty.Access.WRITE_ONLY)
    private String policyId;

    /**
     * The name of policy governing this item.
     */
    @JsonProperty(value = "policyFriendlyName", access = JsonProperty.Access.WRITE_ONLY)
    private String policyFriendlyName;

    /**
     * The migration status. Possible values include: 'None',
     * 'EnableMigrationInProgress', 'EnableMigrationFailed',
     * 'DisableMigrationInProgress', 'DisableMigrationFailed',
     * 'InitialSeedingInProgress', 'InitialSeedingFailed', 'Replicating',
     * 'MigrationInProgress', 'MigrationSucceeded', 'MigrationFailed'.
     */
    @JsonProperty(value = "migrationState", access = JsonProperty.Access.WRITE_ONLY)
    private MigrationState migrationState;

    /**
     * The migration state description.
     */
    @JsonProperty(value = "migrationStateDescription", access = JsonProperty.Access.WRITE_ONLY)
    private String migrationStateDescription;

    /**
     * The last test migration time.
     */
    @JsonProperty(value = "lastTestMigrationTime", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime lastTestMigrationTime;

    /**
     * The status of the last test migration.
     */
    @JsonProperty(value = "lastTestMigrationStatus", access = JsonProperty.Access.WRITE_ONLY)
    private String lastTestMigrationStatus;

    /**
     * The test migrate state. Possible values include: 'None',
     * 'TestMigrationInProgress', 'TestMigrationSucceeded',
     * 'TestMigrationFailed', 'TestMigrationCleanupInProgress'.
     */
    @JsonProperty(value = "testMigrateState", access = JsonProperty.Access.WRITE_ONLY)
    private TestMigrationState testMigrateState;

    /**
     * The test migrate state description.
     */
    @JsonProperty(value = "testMigrateStateDescription", access = JsonProperty.Access.WRITE_ONLY)
    private String testMigrateStateDescription;

    /**
     * The consolidated health. Possible values include: 'None', 'Normal',
     * 'Warning', 'Critical'.
     */
    @JsonProperty(value = "health", access = JsonProperty.Access.WRITE_ONLY)
    private ProtectionHealth health;

    /**
     * The list of health errors.
     */
    @JsonProperty(value = "healthErrors", access = JsonProperty.Access.WRITE_ONLY)
    private List<HealthError> healthErrors;

    /**
     * The allowed operations on the migration item, based on the current
     * migration state of the item.
     */
    @JsonProperty(value = "allowedOperations", access = JsonProperty.Access.WRITE_ONLY)
    private List<MigrationItemOperation> allowedOperations;

    /**
     * The current job details.
     */
    @JsonProperty(value = "currentJob", access = JsonProperty.Access.WRITE_ONLY)
    private CurrentJobDetails currentJob;

    /**
     * The correlation Id for events associated with this migration item.
     */
    @JsonProperty(value = "eventCorrelationId", access = JsonProperty.Access.WRITE_ONLY)
    private String eventCorrelationId;

    /**
     * The migration provider custom settings.
     */
    @JsonProperty(value = "providerSpecificDetails")
    private MigrationProviderSpecificSettings providerSpecificDetails;

    /**
     * Get the on-premise virtual machine name.
     *
     * @return the machineName value
     */
    public String machineName() {
        return this.machineName;
    }

    /**
     * Get the ARM Id of policy governing this item.
     *
     * @return the policyId value
     */
    public String policyId() {
        return this.policyId;
    }

    /**
     * Get the name of policy governing this item.
     *
     * @return the policyFriendlyName value
     */
    public String policyFriendlyName() {
        return this.policyFriendlyName;
    }

    /**
     * Get the migration status. Possible values include: 'None', 'EnableMigrationInProgress', 'EnableMigrationFailed', 'DisableMigrationInProgress', 'DisableMigrationFailed', 'InitialSeedingInProgress', 'InitialSeedingFailed', 'Replicating', 'MigrationInProgress', 'MigrationSucceeded', 'MigrationFailed'.
     *
     * @return the migrationState value
     */
    public MigrationState migrationState() {
        return this.migrationState;
    }

    /**
     * Get the migration state description.
     *
     * @return the migrationStateDescription value
     */
    public String migrationStateDescription() {
        return this.migrationStateDescription;
    }

    /**
     * Get the last test migration time.
     *
     * @return the lastTestMigrationTime value
     */
    public DateTime lastTestMigrationTime() {
        return this.lastTestMigrationTime;
    }

    /**
     * Get the status of the last test migration.
     *
     * @return the lastTestMigrationStatus value
     */
    public String lastTestMigrationStatus() {
        return this.lastTestMigrationStatus;
    }

    /**
     * Get the test migrate state. Possible values include: 'None', 'TestMigrationInProgress', 'TestMigrationSucceeded', 'TestMigrationFailed', 'TestMigrationCleanupInProgress'.
     *
     * @return the testMigrateState value
     */
    public TestMigrationState testMigrateState() {
        return this.testMigrateState;
    }

    /**
     * Get the test migrate state description.
     *
     * @return the testMigrateStateDescription value
     */
    public String testMigrateStateDescription() {
        return this.testMigrateStateDescription;
    }

    /**
     * Get the consolidated health. Possible values include: 'None', 'Normal', 'Warning', 'Critical'.
     *
     * @return the health value
     */
    public ProtectionHealth health() {
        return this.health;
    }

    /**
     * Get the list of health errors.
     *
     * @return the healthErrors value
     */
    public List<HealthError> healthErrors() {
        return this.healthErrors;
    }

    /**
     * Get the allowed operations on the migration item, based on the current migration state of the item.
     *
     * @return the allowedOperations value
     */
    public List<MigrationItemOperation> allowedOperations() {
        return this.allowedOperations;
    }

    /**
     * Get the current job details.
     *
     * @return the currentJob value
     */
    public CurrentJobDetails currentJob() {
        return this.currentJob;
    }

    /**
     * Get the correlation Id for events associated with this migration item.
     *
     * @return the eventCorrelationId value
     */
    public String eventCorrelationId() {
        return this.eventCorrelationId;
    }

    /**
     * Get the migration provider custom settings.
     *
     * @return the providerSpecificDetails value
     */
    public MigrationProviderSpecificSettings providerSpecificDetails() {
        return this.providerSpecificDetails;
    }

    /**
     * Set the migration provider custom settings.
     *
     * @param providerSpecificDetails the providerSpecificDetails value to set
     * @return the MigrationItemProperties object itself.
     */
    public MigrationItemProperties withProviderSpecificDetails(MigrationProviderSpecificSettings providerSpecificDetails) {
        this.providerSpecificDetails = providerSpecificDetails;
        return this;
    }

}
