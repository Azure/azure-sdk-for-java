/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.recoveryservices.siterecovery.v2016_08_10;

import com.microsoft.azure.arm.collection.SupportsCreating;
import rx.Completable;
import rx.Observable;
import com.microsoft.azure.management.recoveryservices.siterecovery.v2016_08_10.implementation.ReplicationFabricsInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing ReplicationFabrics.
 */
public interface ReplicationFabrics extends SupportsCreating<Fabric.DefinitionStages.Blank>, HasInner<ReplicationFabricsInner> {
    /**
     * Migrates the site to AAD.
     * The operation to migrate an Azure Site Recovery fabric to AAD.
     *
     * @param fabricName ASR fabric to migrate.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable migrateToAadAsync(String fabricName);

    /**
     * Renews certificate for the fabric.
     * Renews the connection certificate for the ASR replication fabric.
     *
     * @param fabricName fabric name to renew certs for.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<Fabric> renewCertificateAsync(String fabricName);

    /**
     * Perform failover of the process server.
     * The operation to move replications from a process server to another process server.
     *
     * @param fabricName The name of the fabric containing the process server.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<Fabric> reassociateGatewayAsync(String fabricName);

    /**
     * Checks the consistency of the ASR fabric.
     * The operation to perform a consistency check on the fabric.
     *
     * @param fabricName Fabric name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<Fabric> checkConsistencyAsync(String fabricName);

    /**
     * Deletes the site.
     * The operation to delete or remove an Azure Site Recovery fabric.
     *
     * @param fabricName ASR fabric to delete
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteAsync(String fabricName);

    /**
     * Gets the details of an ASR fabric.
     * Gets the details of an Azure Site Recovery fabric.
     *
     * @param fabricName Fabric name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<Fabric> getAsync(String fabricName);

    /**
     * Gets the list of ASR fabrics.
     * Gets a list of the Azure Site Recovery fabrics in the vault.
     *
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<Fabric> listAsync();

    /**
     * Purges the site.
     * The operation to purge(force delete) an Azure Site Recovery fabric.
     *
     * @param fabricName ASR fabric to purge.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable purgeAsync(String fabricName);

}
