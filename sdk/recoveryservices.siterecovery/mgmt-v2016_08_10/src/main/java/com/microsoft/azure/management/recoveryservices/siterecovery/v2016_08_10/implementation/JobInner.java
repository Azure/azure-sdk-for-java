/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.recoveryservices.siterecovery.v2016_08_10.implementation;

import com.microsoft.azure.management.recoveryservices.siterecovery.v2016_08_10.JobProperties;
import com.microsoft.azure.management.recoveryservices.siterecovery.v2016_08_10.ARMException;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.azure.ProxyResource;

/**
 * Job details.
 */
public class JobInner extends ProxyResource {
    /**
     * The custom data.
     */
    @JsonProperty(value = "properties")
    private JobProperties properties;

    /**
     * The status of the Job. ARM expects the terminal status to be one of (1)
     * Succeeded, (2) Failed or (3) Canceled. All other values imply that the
     * operation is still running / being applied.
     */
    @JsonProperty(value = "status")
    private String status;

    /**
     * The error.
     */
    @JsonProperty(value = "error")
    private ARMException error;

    /**
     * The start time.
     */
    @JsonProperty(value = "startTime")
    private String startTime;

    /**
     * The start time.
     */
    @JsonProperty(value = "endTime")
    private String endTime;

    /**
     * Resource Location.
     */
    @JsonProperty(value = "location")
    private String location;

    /**
     * Get the custom data.
     *
     * @return the properties value
     */
    public JobProperties properties() {
        return this.properties;
    }

    /**
     * Set the custom data.
     *
     * @param properties the properties value to set
     * @return the JobInner object itself.
     */
    public JobInner withProperties(JobProperties properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Get the status of the Job. ARM expects the terminal status to be one of (1) Succeeded, (2) Failed or (3) Canceled. All other values imply that the operation is still running / being applied.
     *
     * @return the status value
     */
    public String status() {
        return this.status;
    }

    /**
     * Set the status of the Job. ARM expects the terminal status to be one of (1) Succeeded, (2) Failed or (3) Canceled. All other values imply that the operation is still running / being applied.
     *
     * @param status the status value to set
     * @return the JobInner object itself.
     */
    public JobInner withStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Get the error.
     *
     * @return the error value
     */
    public ARMException error() {
        return this.error;
    }

    /**
     * Set the error.
     *
     * @param error the error value to set
     * @return the JobInner object itself.
     */
    public JobInner withError(ARMException error) {
        this.error = error;
        return this;
    }

    /**
     * Get the start time.
     *
     * @return the startTime value
     */
    public String startTime() {
        return this.startTime;
    }

    /**
     * Set the start time.
     *
     * @param startTime the startTime value to set
     * @return the JobInner object itself.
     */
    public JobInner withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * Get the start time.
     *
     * @return the endTime value
     */
    public String endTime() {
        return this.endTime;
    }

    /**
     * Set the start time.
     *
     * @param endTime the endTime value to set
     * @return the JobInner object itself.
     */
    public JobInner withEndTime(String endTime) {
        this.endTime = endTime;
        return this;
    }

    /**
     * Get resource Location.
     *
     * @return the location value
     */
    public String location() {
        return this.location;
    }

    /**
     * Set resource Location.
     *
     * @param location the location value to set
     * @return the JobInner object itself.
     */
    public JobInner withLocation(String location) {
        this.location = location;
        return this;
    }

}
