// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.deviceupdate.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.deviceupdate.fluent.models.InstanceInner;
import com.azure.resourcemanager.deviceupdate.models.TagUpdate;

/** An instance of this class provides access to all the operations defined in InstancesClient. */
public interface InstancesClient {
    /**
     * Returns instances for the given account name.
     *
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of Instances as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<InstanceInner> listByAccount(String resourceGroupName, String accountName);

    /**
     * Returns instances for the given account name.
     *
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of Instances as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<InstanceInner> listByAccount(String resourceGroupName, String accountName, Context context);

    /**
     * Returns instance details for the given instance and account name.
     *
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param instanceName Instance name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return device Update instance details.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    InstanceInner get(String resourceGroupName, String accountName, String instanceName);

    /**
     * Returns instance details for the given instance and account name.
     *
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param instanceName Instance name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return device Update instance details along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<InstanceInner> getWithResponse(
        String resourceGroupName, String accountName, String instanceName, Context context);

    /**
     * Checks whether instance exists.
     *
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param instanceName Instance name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void head(String resourceGroupName, String accountName, String instanceName);

    /**
     * Checks whether instance exists.
     *
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param instanceName Instance name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> headWithResponse(String resourceGroupName, String accountName, String instanceName, Context context);

    /**
     * Creates or updates instance.
     *
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param instanceName Instance name.
     * @param instance Instance details.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of device Update instance details.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<InstanceInner>, InstanceInner> beginCreate(
        String resourceGroupName, String accountName, String instanceName, InstanceInner instance);

    /**
     * Creates or updates instance.
     *
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param instanceName Instance name.
     * @param instance Instance details.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of device Update instance details.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<InstanceInner>, InstanceInner> beginCreate(
        String resourceGroupName, String accountName, String instanceName, InstanceInner instance, Context context);

    /**
     * Creates or updates instance.
     *
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param instanceName Instance name.
     * @param instance Instance details.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return device Update instance details.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    InstanceInner create(String resourceGroupName, String accountName, String instanceName, InstanceInner instance);

    /**
     * Creates or updates instance.
     *
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param instanceName Instance name.
     * @param instance Instance details.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return device Update instance details.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    InstanceInner create(
        String resourceGroupName, String accountName, String instanceName, InstanceInner instance, Context context);

    /**
     * Deletes instance.
     *
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param instanceName Instance name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String accountName, String instanceName);

    /**
     * Deletes instance.
     *
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param instanceName Instance name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String accountName, String instanceName, Context context);

    /**
     * Deletes instance.
     *
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param instanceName Instance name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String accountName, String instanceName);

    /**
     * Deletes instance.
     *
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param instanceName Instance name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String accountName, String instanceName, Context context);

    /**
     * Updates instance's tags.
     *
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param instanceName Instance name.
     * @param tagUpdatePayload Updated tags.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return device Update instance details.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    InstanceInner update(String resourceGroupName, String accountName, String instanceName, TagUpdate tagUpdatePayload);

    /**
     * Updates instance's tags.
     *
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param instanceName Instance name.
     * @param tagUpdatePayload Updated tags.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return device Update instance details along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<InstanceInner> updateWithResponse(
        String resourceGroupName, String accountName, String instanceName, TagUpdate tagUpdatePayload, Context context);
}
