// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.deviceupdate.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.deviceupdate.models.PrivateEndpointConnectionProxyProvisioningState;
import com.azure.resourcemanager.deviceupdate.models.RemotePrivateEndpoint;
import java.io.IOException;

/**
 * Private endpoint connection proxy details.
 */
@Fluent
public final class PrivateEndpointConnectionProxyInner extends ProxyResource {
    /*
     * Private endpoint connection proxy object property bag.
     */
    private PrivateEndpointConnectionProxyProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    private SystemData systemData;

    /*
     * ETag from NRP.
     */
    private String etag;

    /*
     * Remote private endpoint details.
     */
    private RemotePrivateEndpoint remotePrivateEndpoint;

    /*
     * Operation status.
     */
    private String status;

    /*
     * The type of the resource.
     */
    private String type;

    /*
     * The name of the resource.
     */
    private String name;

    /*
     * Fully qualified resource Id for the resource.
     */
    private String id;

    /**
     * Creates an instance of PrivateEndpointConnectionProxyInner class.
     */
    public PrivateEndpointConnectionProxyInner() {
    }

    /**
     * Get the innerProperties property: Private endpoint connection proxy object property bag.
     * 
     * @return the innerProperties value.
     */
    private PrivateEndpointConnectionProxyProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the etag property: ETag from NRP.
     * 
     * @return the etag value.
     */
    public String etag() {
        return this.etag;
    }

    /**
     * Get the remotePrivateEndpoint property: Remote private endpoint details.
     * 
     * @return the remotePrivateEndpoint value.
     */
    public RemotePrivateEndpoint remotePrivateEndpoint() {
        return this.remotePrivateEndpoint;
    }

    /**
     * Set the remotePrivateEndpoint property: Remote private endpoint details.
     * 
     * @param remotePrivateEndpoint the remotePrivateEndpoint value to set.
     * @return the PrivateEndpointConnectionProxyInner object itself.
     */
    public PrivateEndpointConnectionProxyInner withRemotePrivateEndpoint(RemotePrivateEndpoint remotePrivateEndpoint) {
        this.remotePrivateEndpoint = remotePrivateEndpoint;
        return this;
    }

    /**
     * Get the status property: Operation status.
     * 
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Set the status property: Operation status.
     * 
     * @param status the status value to set.
     * @return the PrivateEndpointConnectionProxyInner object itself.
     */
    public PrivateEndpointConnectionProxyInner withStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Get the type property: The type of the resource.
     * 
     * @return the type value.
     */
    @Override
    public String type() {
        return this.type;
    }

    /**
     * Get the name property: The name of the resource.
     * 
     * @return the name value.
     */
    @Override
    public String name() {
        return this.name;
    }

    /**
     * Get the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    @Override
    public String id() {
        return this.id;
    }

    /**
     * Get the provisioningState property: The provisioning state of the private endpoint connection proxy resource.
     * 
     * @return the provisioningState value.
     */
    public PrivateEndpointConnectionProxyProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
        if (remotePrivateEndpoint() != null) {
            remotePrivateEndpoint().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.innerProperties);
        jsonWriter.writeJsonField("remotePrivateEndpoint", this.remotePrivateEndpoint);
        jsonWriter.writeStringField("status", this.status);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PrivateEndpointConnectionProxyInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of PrivateEndpointConnectionProxyInner if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the PrivateEndpointConnectionProxyInner.
     */
    public static PrivateEndpointConnectionProxyInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PrivateEndpointConnectionProxyInner deserializedPrivateEndpointConnectionProxyInner
                = new PrivateEndpointConnectionProxyInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedPrivateEndpointConnectionProxyInner.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedPrivateEndpointConnectionProxyInner.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedPrivateEndpointConnectionProxyInner.type = reader.getString();
                } else if ("properties".equals(fieldName)) {
                    deserializedPrivateEndpointConnectionProxyInner.innerProperties
                        = PrivateEndpointConnectionProxyProperties.fromJson(reader);
                } else if ("systemData".equals(fieldName)) {
                    deserializedPrivateEndpointConnectionProxyInner.systemData = SystemData.fromJson(reader);
                } else if ("eTag".equals(fieldName)) {
                    deserializedPrivateEndpointConnectionProxyInner.etag = reader.getString();
                } else if ("remotePrivateEndpoint".equals(fieldName)) {
                    deserializedPrivateEndpointConnectionProxyInner.remotePrivateEndpoint
                        = RemotePrivateEndpoint.fromJson(reader);
                } else if ("status".equals(fieldName)) {
                    deserializedPrivateEndpointConnectionProxyInner.status = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPrivateEndpointConnectionProxyInner;
        });
    }
}
