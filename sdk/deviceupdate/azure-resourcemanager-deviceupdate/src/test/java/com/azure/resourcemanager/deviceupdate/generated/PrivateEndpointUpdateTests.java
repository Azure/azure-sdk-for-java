// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.deviceupdate.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.deviceupdate.models.PrivateEndpointUpdate;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointUpdate model = BinaryData.fromString(
            "{\"id\":\"gdknnqv\",\"location\":\"znqntoru\",\"immutableSubscriptionId\":\"gsahmkycgrauw\",\"immutableResourceId\":\"etaebu\",\"vnetTrafficTag\":\"vdmovsmzlxwabm\"}")
            .toObject(PrivateEndpointUpdate.class);
        Assertions.assertEquals("gdknnqv", model.id());
        Assertions.assertEquals("znqntoru", model.location());
        Assertions.assertEquals("gsahmkycgrauw", model.immutableSubscriptionId());
        Assertions.assertEquals("etaebu", model.immutableResourceId());
        Assertions.assertEquals("vdmovsmzlxwabm", model.vnetTrafficTag());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointUpdate model = new PrivateEndpointUpdate().withId("gdknnqv").withLocation("znqntoru")
            .withImmutableSubscriptionId("gsahmkycgrauw").withImmutableResourceId("etaebu")
            .withVnetTrafficTag("vdmovsmzlxwabm");
        model = BinaryData.fromObject(model).toObject(PrivateEndpointUpdate.class);
        Assertions.assertEquals("gdknnqv", model.id());
        Assertions.assertEquals("znqntoru", model.location());
        Assertions.assertEquals("gsahmkycgrauw", model.immutableSubscriptionId());
        Assertions.assertEquals("etaebu", model.immutableResourceId());
        Assertions.assertEquals("vdmovsmzlxwabm", model.vnetTrafficTag());
    }
}
