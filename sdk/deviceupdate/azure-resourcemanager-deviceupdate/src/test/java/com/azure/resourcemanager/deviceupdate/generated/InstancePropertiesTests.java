// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.deviceupdate.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.deviceupdate.fluent.models.InstanceProperties;
import com.azure.resourcemanager.deviceupdate.models.AuthenticationType;
import com.azure.resourcemanager.deviceupdate.models.DiagnosticStorageProperties;
import com.azure.resourcemanager.deviceupdate.models.IotHubSettings;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class InstancePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InstanceProperties model = BinaryData.fromString(
            "{\"provisioningState\":\"Accepted\",\"accountName\":\"c\",\"iotHubs\":[{\"resourceId\":\"dcuf\"}],\"enableDiagnostics\":false,\"diagnosticStorageProperties\":{\"authenticationType\":\"KeyBased\",\"connectionString\":\"mzidnsezcxtb\",\"resourceId\":\"sgfyccsnew\"}}")
            .toObject(InstanceProperties.class);
        Assertions.assertEquals("dcuf", model.iotHubs().get(0).resourceId());
        Assertions.assertEquals(false, model.enableDiagnostics());
        Assertions.assertEquals(AuthenticationType.KEY_BASED, model.diagnosticStorageProperties().authenticationType());
        Assertions.assertEquals("mzidnsezcxtb", model.diagnosticStorageProperties().connectionString());
        Assertions.assertEquals("sgfyccsnew", model.diagnosticStorageProperties().resourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InstanceProperties model
            = new InstanceProperties().withIotHubs(Arrays.asList(new IotHubSettings().withResourceId("dcuf")))
                .withEnableDiagnostics(false).withDiagnosticStorageProperties(
                    new DiagnosticStorageProperties().withAuthenticationType(AuthenticationType.KEY_BASED)
                        .withConnectionString("mzidnsezcxtb").withResourceId("sgfyccsnew"));
        model = BinaryData.fromObject(model).toObject(InstanceProperties.class);
        Assertions.assertEquals("dcuf", model.iotHubs().get(0).resourceId());
        Assertions.assertEquals(false, model.enableDiagnostics());
        Assertions.assertEquals(AuthenticationType.KEY_BASED, model.diagnosticStorageProperties().authenticationType());
        Assertions.assertEquals("mzidnsezcxtb", model.diagnosticStorageProperties().connectionString());
        Assertions.assertEquals("sgfyccsnew", model.diagnosticStorageProperties().resourceId());
    }
}
