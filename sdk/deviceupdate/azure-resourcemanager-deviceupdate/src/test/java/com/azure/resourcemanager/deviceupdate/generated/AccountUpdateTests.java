// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.deviceupdate.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.deviceupdate.models.AccountUpdate;
import com.azure.resourcemanager.deviceupdate.models.ManagedServiceIdentity;
import com.azure.resourcemanager.deviceupdate.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.deviceupdate.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AccountUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AccountUpdate model = BinaryData.fromString(
            "{\"identity\":{\"principalId\":\"7c099291-1044-4a4c-81c6-ac4ac1fcd4a9\",\"tenantId\":\"4ac4af88-70ba-4d46-bef1-7cbfda7fd24f\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"wjzrnfygxgisp\":{\"principalId\":\"d13fb7af-034c-472c-9b5a-a47085384ed2\",\"clientId\":\"741d702c-9613-4a03-bef7-904133895b77\"},\"tzfkufubl\":{\"principalId\":\"23cddf20-a410-4978-86b1-f84b09e59e4a\",\"clientId\":\"4bfef0a7-ccc8-4122-ab72-998b167484d5\"}}},\"location\":\"fxqeof\",\"tags\":{\"msmjqulngsntn\":\"qjhqjbas\"}}")
            .toObject(AccountUpdate.class);
        Assertions.assertEquals("qjhqjbas", model.tags().get("msmjqulngsntn"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("fxqeof", model.location());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AccountUpdate model = new AccountUpdate().withTags(mapOf("msmjqulngsntn", "qjhqjbas"))
            .withIdentity(new ManagedServiceIdentity().withType(ManagedServiceIdentityType.USER_ASSIGNED)
                .withUserAssignedIdentities(
                    mapOf("wjzrnfygxgisp", new UserAssignedIdentity(), "tzfkufubl", new UserAssignedIdentity())))
            .withLocation("fxqeof");
        model = BinaryData.fromObject(model).toObject(AccountUpdate.class);
        Assertions.assertEquals("qjhqjbas", model.tags().get("msmjqulngsntn"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("fxqeof", model.location());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
