// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.deviceupdate.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.deviceupdate.models.ConnectionDetails;
import com.azure.resourcemanager.deviceupdate.models.GroupConnectivityInformation;
import com.azure.resourcemanager.deviceupdate.models.PrivateEndpointConnectionProxyPropertiesAutoGenerated;
import com.azure.resourcemanager.deviceupdate.models.PrivateEndpointServiceConnectionStatus;
import com.azure.resourcemanager.deviceupdate.models.PrivateLinkServiceConnection;
import com.azure.resourcemanager.deviceupdate.models.PrivateLinkServiceConnectionState;
import com.azure.resourcemanager.deviceupdate.models.PrivateLinkServiceProxy;
import com.azure.resourcemanager.deviceupdate.models.PrivateLinkServiceProxyRemotePrivateEndpointConnection;
import com.azure.resourcemanager.deviceupdate.models.RemotePrivateEndpoint;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionProxyPropertiesAutoGeneratedTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionProxyPropertiesAutoGenerated model = BinaryData.fromString(
            "{\"eTag\":\"vxqtayriwwroyqbe\",\"remotePrivateEndpoint\":{\"id\":\"cqibycnojv\",\"location\":\"mefqsgzvahapjyzh\",\"immutableSubscriptionId\":\"gqzcjr\",\"immutableResourceId\":\"djzlmwlx\",\"vnetTrafficTag\":\"ug\",\"manualPrivateLinkServiceConnections\":[{\"name\":\"vawjvzunlu\",\"groupIds\":[\"n\",\"rnxipei\"],\"requestMessage\":\"jzuaejxdultskzbb\"},{\"name\":\"zumveekgpwo\",\"groupIds\":[\"kfpbs\",\"yofd\"],\"requestMessage\":\"uusdttouwa\"}],\"privateLinkServiceConnections\":[{\"name\":\"qvkelnsm\",\"groupIds\":[\"wyjsflhhcaalnjix\",\"sxyawjoyaqcs\",\"yjpkiidzyexz\"],\"requestMessage\":\"lixhnrztfol\"},{\"name\":\"nxknalaulp\",\"groupIds\":[\"dtpnapnyiropuhp\",\"gvpgy\",\"gqgitxmedjvcsl\"],\"requestMessage\":\"qwwncw\"}],\"privateLinkServiceProxies\":[{\"id\":\"gktrmgucnapkte\",\"remotePrivateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"pt\",\"actionsRequired\":\"ygpfqb\"},\"remotePrivateEndpointConnection\":{\"id\":\"eopzfqrhhuaopp\"},\"groupConnectivityInformation\":[{\"groupId\":\"qxolzdahzx\",\"memberName\":\"obgbkdmoizp\",\"customerVisibleFqdns\":[\"mgrcfbu\",\"rmfqjhhkxbpvj\",\"mjh\"],\"internalFqdn\":\"j\",\"redirectMapId\":\"gudivkrtswbxqz\",\"privateLinkServiceArmRegion\":\"zjf\"},{\"groupId\":\"vjfdx\",\"memberName\":\"vetvt\",\"customerVisibleFqdns\":[\"qtdo\",\"mcbxvwvxysl\",\"bhsfxob\"],\"internalFqdn\":\"tkblmpewww\",\"redirectMapId\":\"krvrns\",\"privateLinkServiceArmRegion\":\"hqjohxcrsbfova\"}]}],\"connectionDetails\":[{\"id\":\"v\",\"privateIpAddress\":\"hsqfsubcgjbirxbp\",\"linkIdentifier\":\"srfbjfdtwss\",\"groupId\":\"ftpvjzbexil\",\"memberName\":\"nfqqnvwp\"}]},\"status\":\"taruoujmkcj\"}")
            .toObject(PrivateEndpointConnectionProxyPropertiesAutoGenerated.class);
        Assertions.assertEquals("cqibycnojv", model.remotePrivateEndpoint().id());
        Assertions.assertEquals("mefqsgzvahapjyzh", model.remotePrivateEndpoint().location());
        Assertions.assertEquals("gqzcjr", model.remotePrivateEndpoint().immutableSubscriptionId());
        Assertions.assertEquals("djzlmwlx", model.remotePrivateEndpoint().immutableResourceId());
        Assertions.assertEquals("ug", model.remotePrivateEndpoint().vnetTrafficTag());
        Assertions.assertEquals("vawjvzunlu",
            model.remotePrivateEndpoint().manualPrivateLinkServiceConnections().get(0).name());
        Assertions.assertEquals("n",
            model.remotePrivateEndpoint().manualPrivateLinkServiceConnections().get(0).groupIds().get(0));
        Assertions.assertEquals("jzuaejxdultskzbb",
            model.remotePrivateEndpoint().manualPrivateLinkServiceConnections().get(0).requestMessage());
        Assertions.assertEquals("qvkelnsm",
            model.remotePrivateEndpoint().privateLinkServiceConnections().get(0).name());
        Assertions.assertEquals("wyjsflhhcaalnjix",
            model.remotePrivateEndpoint().privateLinkServiceConnections().get(0).groupIds().get(0));
        Assertions.assertEquals("lixhnrztfol",
            model.remotePrivateEndpoint().privateLinkServiceConnections().get(0).requestMessage());
        Assertions.assertEquals("gktrmgucnapkte",
            model.remotePrivateEndpoint().privateLinkServiceProxies().get(0).id());
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.APPROVED, model.remotePrivateEndpoint()
            .privateLinkServiceProxies().get(0).remotePrivateLinkServiceConnectionState().status());
        Assertions.assertEquals("pt", model.remotePrivateEndpoint().privateLinkServiceProxies().get(0)
            .remotePrivateLinkServiceConnectionState().description());
        Assertions.assertEquals("ygpfqb", model.remotePrivateEndpoint().privateLinkServiceProxies().get(0)
            .remotePrivateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("mgrcfbu", model.remotePrivateEndpoint().privateLinkServiceProxies().get(0)
            .groupConnectivityInformation().get(0).customerVisibleFqdns().get(0));
        Assertions.assertEquals("gudivkrtswbxqz", model.remotePrivateEndpoint().privateLinkServiceProxies().get(0)
            .groupConnectivityInformation().get(0).redirectMapId());
        Assertions.assertEquals("zjf", model.remotePrivateEndpoint().privateLinkServiceProxies().get(0)
            .groupConnectivityInformation().get(0).privateLinkServiceArmRegion());
        Assertions.assertEquals("taruoujmkcj", model.status());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionProxyPropertiesAutoGenerated model
            = new PrivateEndpointConnectionProxyPropertiesAutoGenerated().withRemotePrivateEndpoint(
                new RemotePrivateEndpoint().withId("cqibycnojv").withLocation("mefqsgzvahapjyzh")
                    .withImmutableSubscriptionId("gqzcjr").withImmutableResourceId("djzlmwlx").withVnetTrafficTag("ug")
                    .withManualPrivateLinkServiceConnections(Arrays.asList(
                        new PrivateLinkServiceConnection().withName("vawjvzunlu")
                            .withGroupIds(Arrays.asList("n", "rnxipei")).withRequestMessage("jzuaejxdultskzbb"),
                        new PrivateLinkServiceConnection()
                            .withName("zumveekgpwo").withGroupIds(Arrays.asList("kfpbs", "yofd"))
                            .withRequestMessage("uusdttouwa")))
                    .withPrivateLinkServiceConnections(Arrays.asList(
                        new PrivateLinkServiceConnection().withName("qvkelnsm")
                            .withGroupIds(Arrays.asList("wyjsflhhcaalnjix", "sxyawjoyaqcs", "yjpkiidzyexz"))
                            .withRequestMessage("lixhnrztfol"),
                        new PrivateLinkServiceConnection().withName("nxknalaulp")
                            .withGroupIds(Arrays.asList("dtpnapnyiropuhp", "gvpgy", "gqgitxmedjvcsl"))
                            .withRequestMessage("qwwncw")))
                    .withPrivateLinkServiceProxies(
                        Arrays
                            .asList(
                                new PrivateLinkServiceProxy().withId("gktrmgucnapkte")
                                    .withRemotePrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                                        .withStatus(PrivateEndpointServiceConnectionStatus.APPROVED)
                                        .withDescription("pt").withActionsRequired("ygpfqb"))
                                    .withRemotePrivateEndpointConnection(
                                        new PrivateLinkServiceProxyRemotePrivateEndpointConnection())
                                    .withGroupConnectivityInformation(
                                        Arrays.asList(
                                            new GroupConnectivityInformation()
                                                .withCustomerVisibleFqdns(
                                                    Arrays.asList("mgrcfbu", "rmfqjhhkxbpvj", "mjh"))
                                                .withRedirectMapId("gudivkrtswbxqz")
                                                .withPrivateLinkServiceArmRegion("zjf"),
                                            new GroupConnectivityInformation()
                                                .withCustomerVisibleFqdns(
                                                    Arrays.asList("qtdo", "mcbxvwvxysl", "bhsfxob"))
                                                .withRedirectMapId("krvrns")
                                                .withPrivateLinkServiceArmRegion("hqjohxcrsbfova")))))
                    .withConnectionDetails(Arrays.asList(new ConnectionDetails())))
                .withStatus("taruoujmkcj");
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionProxyPropertiesAutoGenerated.class);
        Assertions.assertEquals("cqibycnojv", model.remotePrivateEndpoint().id());
        Assertions.assertEquals("mefqsgzvahapjyzh", model.remotePrivateEndpoint().location());
        Assertions.assertEquals("gqzcjr", model.remotePrivateEndpoint().immutableSubscriptionId());
        Assertions.assertEquals("djzlmwlx", model.remotePrivateEndpoint().immutableResourceId());
        Assertions.assertEquals("ug", model.remotePrivateEndpoint().vnetTrafficTag());
        Assertions.assertEquals("vawjvzunlu",
            model.remotePrivateEndpoint().manualPrivateLinkServiceConnections().get(0).name());
        Assertions.assertEquals("n",
            model.remotePrivateEndpoint().manualPrivateLinkServiceConnections().get(0).groupIds().get(0));
        Assertions.assertEquals("jzuaejxdultskzbb",
            model.remotePrivateEndpoint().manualPrivateLinkServiceConnections().get(0).requestMessage());
        Assertions.assertEquals("qvkelnsm",
            model.remotePrivateEndpoint().privateLinkServiceConnections().get(0).name());
        Assertions.assertEquals("wyjsflhhcaalnjix",
            model.remotePrivateEndpoint().privateLinkServiceConnections().get(0).groupIds().get(0));
        Assertions.assertEquals("lixhnrztfol",
            model.remotePrivateEndpoint().privateLinkServiceConnections().get(0).requestMessage());
        Assertions.assertEquals("gktrmgucnapkte",
            model.remotePrivateEndpoint().privateLinkServiceProxies().get(0).id());
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.APPROVED, model.remotePrivateEndpoint()
            .privateLinkServiceProxies().get(0).remotePrivateLinkServiceConnectionState().status());
        Assertions.assertEquals("pt", model.remotePrivateEndpoint().privateLinkServiceProxies().get(0)
            .remotePrivateLinkServiceConnectionState().description());
        Assertions.assertEquals("ygpfqb", model.remotePrivateEndpoint().privateLinkServiceProxies().get(0)
            .remotePrivateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("mgrcfbu", model.remotePrivateEndpoint().privateLinkServiceProxies().get(0)
            .groupConnectivityInformation().get(0).customerVisibleFqdns().get(0));
        Assertions.assertEquals("gudivkrtswbxqz", model.remotePrivateEndpoint().privateLinkServiceProxies().get(0)
            .groupConnectivityInformation().get(0).redirectMapId());
        Assertions.assertEquals("zjf", model.remotePrivateEndpoint().privateLinkServiceProxies().get(0)
            .groupConnectivityInformation().get(0).privateLinkServiceArmRegion());
        Assertions.assertEquals("taruoujmkcj", model.status());
    }
}
