// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.deviceupdate.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.deviceupdate.models.GroupConnectivityInformation;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class GroupConnectivityInformationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GroupConnectivityInformation model = BinaryData.fromString(
            "{\"groupId\":\"cckwyfzqwhxxbu\",\"memberName\":\"a\",\"customerVisibleFqdns\":[\"eqz\",\"ppriol\",\"or\"],\"internalFqdn\":\"lt\",\"redirectMapId\":\"mncwsobqwcsdb\",\"privateLinkServiceArmRegion\":\"dcfhucqdpf\"}")
            .toObject(GroupConnectivityInformation.class);
        Assertions.assertEquals("eqz", model.customerVisibleFqdns().get(0));
        Assertions.assertEquals("mncwsobqwcsdb", model.redirectMapId());
        Assertions.assertEquals("dcfhucqdpf", model.privateLinkServiceArmRegion());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GroupConnectivityInformation model
            = new GroupConnectivityInformation().withCustomerVisibleFqdns(Arrays.asList("eqz", "ppriol", "or"))
                .withRedirectMapId("mncwsobqwcsdb").withPrivateLinkServiceArmRegion("dcfhucqdpf");
        model = BinaryData.fromObject(model).toObject(GroupConnectivityInformation.class);
        Assertions.assertEquals("eqz", model.customerVisibleFqdns().get(0));
        Assertions.assertEquals("mncwsobqwcsdb", model.redirectMapId());
        Assertions.assertEquals("dcfhucqdpf", model.privateLinkServiceArmRegion());
    }
}
