// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.qumulo.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.qumulo.fluent.models.FileSystemResourceInner;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of FileSystemResource. */
public interface FileSystemResource {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the identity property: The managed service identities assigned to this resource.
     *
     * @return the identity value.
     */
    ManagedServiceIdentity identity();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the marketplaceDetails property: Marketplace details.
     *
     * @return the marketplaceDetails value.
     */
    MarketplaceDetails marketplaceDetails();

    /**
     * Gets the provisioningState property: Provisioning State of the resource.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the storageSku property: Storage Sku.
     *
     * @return the storageSku value.
     */
    StorageSku storageSku();

    /**
     * Gets the userDetails property: User Details.
     *
     * @return the userDetails value.
     */
    UserDetails userDetails();

    /**
     * Gets the delegatedSubnetId property: Delegated subnet id for Vnet injection.
     *
     * @return the delegatedSubnetId value.
     */
    String delegatedSubnetId();

    /**
     * Gets the clusterLoginUrl property: File system Id of the resource.
     *
     * @return the clusterLoginUrl value.
     */
    String clusterLoginUrl();

    /**
     * Gets the privateIPs property: Private IPs of the resource.
     *
     * @return the privateIPs value.
     */
    List<String> privateIPs();

    /**
     * Gets the adminPassword property: Initial administrator password of the resource.
     *
     * @return the adminPassword value.
     */
    String adminPassword();

    /**
     * Gets the initialCapacity property: Storage capacity in TB.
     *
     * @return the initialCapacity value.
     */
    int initialCapacity();

    /**
     * Gets the availabilityZone property: Availability zone.
     *
     * @return the availabilityZone value.
     */
    String availabilityZone();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.qumulo.fluent.models.FileSystemResourceInner object.
     *
     * @return the inner object.
     */
    FileSystemResourceInner innerModel();

    /** The entirety of the FileSystemResource definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithMarketplaceDetails,
            DefinitionStages.WithStorageSku,
            DefinitionStages.WithUserDetails,
            DefinitionStages.WithDelegatedSubnetId,
            DefinitionStages.WithAdminPassword,
            DefinitionStages.WithInitialCapacity,
            DefinitionStages.WithCreate {
    }
    /** The FileSystemResource definition stages. */
    interface DefinitionStages {
        /** The first stage of the FileSystemResource definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the FileSystemResource definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the FileSystemResource definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithMarketplaceDetails withExistingResourceGroup(String resourceGroupName);
        }
        /** The stage of the FileSystemResource definition allowing to specify marketplaceDetails. */
        interface WithMarketplaceDetails {
            /**
             * Specifies the marketplaceDetails property: Marketplace details.
             *
             * @param marketplaceDetails Marketplace details.
             * @return the next definition stage.
             */
            WithStorageSku withMarketplaceDetails(MarketplaceDetails marketplaceDetails);
        }
        /** The stage of the FileSystemResource definition allowing to specify storageSku. */
        interface WithStorageSku {
            /**
             * Specifies the storageSku property: Storage Sku.
             *
             * @param storageSku Storage Sku.
             * @return the next definition stage.
             */
            WithUserDetails withStorageSku(StorageSku storageSku);
        }
        /** The stage of the FileSystemResource definition allowing to specify userDetails. */
        interface WithUserDetails {
            /**
             * Specifies the userDetails property: User Details.
             *
             * @param userDetails User Details.
             * @return the next definition stage.
             */
            WithDelegatedSubnetId withUserDetails(UserDetails userDetails);
        }
        /** The stage of the FileSystemResource definition allowing to specify delegatedSubnetId. */
        interface WithDelegatedSubnetId {
            /**
             * Specifies the delegatedSubnetId property: Delegated subnet id for Vnet injection.
             *
             * @param delegatedSubnetId Delegated subnet id for Vnet injection.
             * @return the next definition stage.
             */
            WithAdminPassword withDelegatedSubnetId(String delegatedSubnetId);
        }
        /** The stage of the FileSystemResource definition allowing to specify adminPassword. */
        interface WithAdminPassword {
            /**
             * Specifies the adminPassword property: Initial administrator password of the resource.
             *
             * @param adminPassword Initial administrator password of the resource.
             * @return the next definition stage.
             */
            WithInitialCapacity withAdminPassword(String adminPassword);
        }
        /** The stage of the FileSystemResource definition allowing to specify initialCapacity. */
        interface WithInitialCapacity {
            /**
             * Specifies the initialCapacity property: Storage capacity in TB.
             *
             * @param initialCapacity Storage capacity in TB.
             * @return the next definition stage.
             */
            WithCreate withInitialCapacity(int initialCapacity);
        }
        /**
         * The stage of the FileSystemResource definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithIdentity,
                DefinitionStages.WithClusterLoginUrl,
                DefinitionStages.WithPrivateIPs,
                DefinitionStages.WithAvailabilityZone {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            FileSystemResource create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            FileSystemResource create(Context context);
        }
        /** The stage of the FileSystemResource definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the FileSystemResource definition allowing to specify identity. */
        interface WithIdentity {
            /**
             * Specifies the identity property: The managed service identities assigned to this resource..
             *
             * @param identity The managed service identities assigned to this resource.
             * @return the next definition stage.
             */
            WithCreate withIdentity(ManagedServiceIdentity identity);
        }
        /** The stage of the FileSystemResource definition allowing to specify clusterLoginUrl. */
        interface WithClusterLoginUrl {
            /**
             * Specifies the clusterLoginUrl property: File system Id of the resource.
             *
             * @param clusterLoginUrl File system Id of the resource.
             * @return the next definition stage.
             */
            WithCreate withClusterLoginUrl(String clusterLoginUrl);
        }
        /** The stage of the FileSystemResource definition allowing to specify privateIPs. */
        interface WithPrivateIPs {
            /**
             * Specifies the privateIPs property: Private IPs of the resource.
             *
             * @param privateIPs Private IPs of the resource.
             * @return the next definition stage.
             */
            WithCreate withPrivateIPs(List<String> privateIPs);
        }
        /** The stage of the FileSystemResource definition allowing to specify availabilityZone. */
        interface WithAvailabilityZone {
            /**
             * Specifies the availabilityZone property: Availability zone.
             *
             * @param availabilityZone Availability zone.
             * @return the next definition stage.
             */
            WithCreate withAvailabilityZone(String availabilityZone);
        }
    }
    /**
     * Begins update for the FileSystemResource resource.
     *
     * @return the stage of resource update.
     */
    FileSystemResource.Update update();

    /** The template for FileSystemResource update. */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithIdentity, UpdateStages.WithProperties {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        FileSystemResource apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        FileSystemResource apply(Context context);
    }
    /** The FileSystemResource update stages. */
    interface UpdateStages {
        /** The stage of the FileSystemResource update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the FileSystemResource update allowing to specify identity. */
        interface WithIdentity {
            /**
             * Specifies the identity property: The managed service identities assigned to this resource..
             *
             * @param identity The managed service identities assigned to this resource.
             * @return the next definition stage.
             */
            Update withIdentity(ManagedServiceIdentity identity);
        }
        /** The stage of the FileSystemResource update allowing to specify properties. */
        interface WithProperties {
            /**
             * Specifies the properties property: The updatable properties of the FileSystemResource..
             *
             * @param properties The updatable properties of the FileSystemResource.
             * @return the next definition stage.
             */
            Update withProperties(FileSystemResourceUpdateProperties properties);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    FileSystemResource refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    FileSystemResource refresh(Context context);
}
