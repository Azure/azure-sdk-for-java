// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The NspConfigAccessRuleProperties model.
 */
@Fluent
public final class NspConfigAccessRuleProperties {
    /*
     * The direction property.
     */
    @JsonProperty(value = "direction")
    private String direction;

    /*
     * The addressPrefixes property.
     */
    @JsonProperty(value = "addressPrefixes")
    private List<String> addressPrefixes;

    /*
     * The fullyQualifiedDomainNames property.
     */
    @JsonProperty(value = "fullyQualifiedDomainNames")
    private List<String> fullyQualifiedDomainNames;

    /*
     * The subscriptions property.
     */
    @JsonProperty(value = "subscriptions")
    private List<String> subscriptions;

    /*
     * The networkSecurityPerimeters property.
     */
    @JsonProperty(value = "networkSecurityPerimeters")
    private List<NspConfigNetworkSecurityPerimeterRule> networkSecurityPerimeters;

    /**
     * Creates an instance of NspConfigAccessRuleProperties class.
     */
    public NspConfigAccessRuleProperties() {
    }

    /**
     * Get the direction property: The direction property.
     * 
     * @return the direction value.
     */
    public String direction() {
        return this.direction;
    }

    /**
     * Set the direction property: The direction property.
     * 
     * @param direction the direction value to set.
     * @return the NspConfigAccessRuleProperties object itself.
     */
    public NspConfigAccessRuleProperties withDirection(String direction) {
        this.direction = direction;
        return this;
    }

    /**
     * Get the addressPrefixes property: The addressPrefixes property.
     * 
     * @return the addressPrefixes value.
     */
    public List<String> addressPrefixes() {
        return this.addressPrefixes;
    }

    /**
     * Set the addressPrefixes property: The addressPrefixes property.
     * 
     * @param addressPrefixes the addressPrefixes value to set.
     * @return the NspConfigAccessRuleProperties object itself.
     */
    public NspConfigAccessRuleProperties withAddressPrefixes(List<String> addressPrefixes) {
        this.addressPrefixes = addressPrefixes;
        return this;
    }

    /**
     * Get the fullyQualifiedDomainNames property: The fullyQualifiedDomainNames property.
     * 
     * @return the fullyQualifiedDomainNames value.
     */
    public List<String> fullyQualifiedDomainNames() {
        return this.fullyQualifiedDomainNames;
    }

    /**
     * Set the fullyQualifiedDomainNames property: The fullyQualifiedDomainNames property.
     * 
     * @param fullyQualifiedDomainNames the fullyQualifiedDomainNames value to set.
     * @return the NspConfigAccessRuleProperties object itself.
     */
    public NspConfigAccessRuleProperties withFullyQualifiedDomainNames(List<String> fullyQualifiedDomainNames) {
        this.fullyQualifiedDomainNames = fullyQualifiedDomainNames;
        return this;
    }

    /**
     * Get the subscriptions property: The subscriptions property.
     * 
     * @return the subscriptions value.
     */
    public List<String> subscriptions() {
        return this.subscriptions;
    }

    /**
     * Set the subscriptions property: The subscriptions property.
     * 
     * @param subscriptions the subscriptions value to set.
     * @return the NspConfigAccessRuleProperties object itself.
     */
    public NspConfigAccessRuleProperties withSubscriptions(List<String> subscriptions) {
        this.subscriptions = subscriptions;
        return this;
    }

    /**
     * Get the networkSecurityPerimeters property: The networkSecurityPerimeters property.
     * 
     * @return the networkSecurityPerimeters value.
     */
    public List<NspConfigNetworkSecurityPerimeterRule> networkSecurityPerimeters() {
        return this.networkSecurityPerimeters;
    }

    /**
     * Set the networkSecurityPerimeters property: The networkSecurityPerimeters property.
     * 
     * @param networkSecurityPerimeters the networkSecurityPerimeters value to set.
     * @return the NspConfigAccessRuleProperties object itself.
     */
    public NspConfigAccessRuleProperties
        withNetworkSecurityPerimeters(List<NspConfigNetworkSecurityPerimeterRule> networkSecurityPerimeters) {
        this.networkSecurityPerimeters = networkSecurityPerimeters;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (networkSecurityPerimeters() != null) {
            networkSecurityPerimeters().forEach(e -> e.validate());
        }
    }
}
