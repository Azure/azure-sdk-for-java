// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * A job agent private endpoint.
 */
@Fluent
public final class JobPrivateEndpointInner extends ProxyResource {
    /*
     * Resource properties.
     */
    @JsonProperty(value = "properties")
    private JobPrivateEndpointProperties innerProperties;

    /**
     * Creates an instance of JobPrivateEndpointInner class.
     */
    public JobPrivateEndpointInner() {
    }

    /**
     * Get the innerProperties property: Resource properties.
     * 
     * @return the innerProperties value.
     */
    private JobPrivateEndpointProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the targetServerAzureResourceId property: ARM resource id of the server the private endpoint will target.
     * 
     * @return the targetServerAzureResourceId value.
     */
    public String targetServerAzureResourceId() {
        return this.innerProperties() == null ? null : this.innerProperties().targetServerAzureResourceId();
    }

    /**
     * Set the targetServerAzureResourceId property: ARM resource id of the server the private endpoint will target.
     * 
     * @param targetServerAzureResourceId the targetServerAzureResourceId value to set.
     * @return the JobPrivateEndpointInner object itself.
     */
    public JobPrivateEndpointInner withTargetServerAzureResourceId(String targetServerAzureResourceId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new JobPrivateEndpointProperties();
        }
        this.innerProperties().withTargetServerAzureResourceId(targetServerAzureResourceId);
        return this;
    }

    /**
     * Get the privateEndpointId property: Private endpoint id of the private endpoint.
     * 
     * @return the privateEndpointId value.
     */
    public String privateEndpointId() {
        return this.innerProperties() == null ? null : this.innerProperties().privateEndpointId();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
