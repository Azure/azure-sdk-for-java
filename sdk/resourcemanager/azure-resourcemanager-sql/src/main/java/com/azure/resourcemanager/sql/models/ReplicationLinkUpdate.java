// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.resourcemanager.sql.fluent.models.ReplicationLinkUpdateProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * A replication link update request.
 */
@Fluent
public final class ReplicationLinkUpdate extends ProxyResource {
    /*
     * Resource properties.
     */
    @JsonProperty(value = "properties")
    private ReplicationLinkUpdateProperties innerProperties;

    /**
     * Creates an instance of ReplicationLinkUpdate class.
     */
    public ReplicationLinkUpdate() {
    }

    /**
     * Get the innerProperties property: Resource properties.
     * 
     * @return the innerProperties value.
     */
    private ReplicationLinkUpdateProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the linkType property: Link type (GEO, NAMED, STANDBY). Update operation does not support NAMED.
     * 
     * @return the linkType value.
     */
    public ReplicationLinkType linkType() {
        return this.innerProperties() == null ? null : this.innerProperties().linkType();
    }

    /**
     * Set the linkType property: Link type (GEO, NAMED, STANDBY). Update operation does not support NAMED.
     * 
     * @param linkType the linkType value to set.
     * @return the ReplicationLinkUpdate object itself.
     */
    public ReplicationLinkUpdate withLinkType(ReplicationLinkType linkType) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ReplicationLinkUpdateProperties();
        }
        this.innerProperties().withLinkType(linkType);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
