// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedFlux;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.PollerFlux;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.sql.fluent.models.ServerConfigurationOptionInner;
import com.azure.resourcemanager.sql.models.ServerConfigurationOptionName;
import java.nio.ByteBuffer;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

/** An instance of this class provides access to all the operations defined in ServerConfigurationOptionsClient. */
public interface ServerConfigurationOptionsClient {
    /**
     * Gets a list of managed instance server configuration options.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of managed instance server configuration options as paginated response with {@link PagedFlux}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedFlux<ServerConfigurationOptionInner> listByManagedInstanceAsync(
        String resourceGroupName, String managedInstanceName);

    /**
     * Gets a list of managed instance server configuration options.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of managed instance server configuration options as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ServerConfigurationOptionInner> listByManagedInstance(
        String resourceGroupName, String managedInstanceName);

    /**
     * Gets a list of managed instance server configuration options.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of managed instance server configuration options as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ServerConfigurationOptionInner> listByManagedInstance(
        String resourceGroupName, String managedInstanceName, Context context);

    /**
     * Gets managed instance server configuration option.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param serverConfigurationOptionName The name of the server configuration option.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return managed instance server configuration option along with {@link Response} on successful completion of
     *     {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<ServerConfigurationOptionInner>> getWithResponseAsync(
        String resourceGroupName,
        String managedInstanceName,
        ServerConfigurationOptionName serverConfigurationOptionName);

    /**
     * Gets managed instance server configuration option.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param serverConfigurationOptionName The name of the server configuration option.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return managed instance server configuration option on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<ServerConfigurationOptionInner> getAsync(
        String resourceGroupName,
        String managedInstanceName,
        ServerConfigurationOptionName serverConfigurationOptionName);

    /**
     * Gets managed instance server configuration option.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param serverConfigurationOptionName The name of the server configuration option.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return managed instance server configuration option along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ServerConfigurationOptionInner> getWithResponse(
        String resourceGroupName,
        String managedInstanceName,
        ServerConfigurationOptionName serverConfigurationOptionName,
        Context context);

    /**
     * Gets managed instance server configuration option.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param serverConfigurationOptionName The name of the server configuration option.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return managed instance server configuration option.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ServerConfigurationOptionInner get(
        String resourceGroupName,
        String managedInstanceName,
        ServerConfigurationOptionName serverConfigurationOptionName);

    /**
     * Updates managed instance server configuration option.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param serverConfigurationOptionName The name of the server configuration option.
     * @param parameters Server configuration option parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a server configuration option along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(
        String resourceGroupName,
        String managedInstanceName,
        ServerConfigurationOptionName serverConfigurationOptionName,
        ServerConfigurationOptionInner parameters);

    /**
     * Updates managed instance server configuration option.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param serverConfigurationOptionName The name of the server configuration option.
     * @param parameters Server configuration option parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link PollerFlux} for polling of a server configuration option.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    PollerFlux<PollResult<ServerConfigurationOptionInner>, ServerConfigurationOptionInner> beginCreateOrUpdateAsync(
        String resourceGroupName,
        String managedInstanceName,
        ServerConfigurationOptionName serverConfigurationOptionName,
        ServerConfigurationOptionInner parameters);

    /**
     * Updates managed instance server configuration option.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param serverConfigurationOptionName The name of the server configuration option.
     * @param parameters Server configuration option parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a server configuration option.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ServerConfigurationOptionInner>, ServerConfigurationOptionInner> beginCreateOrUpdate(
        String resourceGroupName,
        String managedInstanceName,
        ServerConfigurationOptionName serverConfigurationOptionName,
        ServerConfigurationOptionInner parameters);

    /**
     * Updates managed instance server configuration option.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param serverConfigurationOptionName The name of the server configuration option.
     * @param parameters Server configuration option parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a server configuration option.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ServerConfigurationOptionInner>, ServerConfigurationOptionInner> beginCreateOrUpdate(
        String resourceGroupName,
        String managedInstanceName,
        ServerConfigurationOptionName serverConfigurationOptionName,
        ServerConfigurationOptionInner parameters,
        Context context);

    /**
     * Updates managed instance server configuration option.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param serverConfigurationOptionName The name of the server configuration option.
     * @param parameters Server configuration option parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a server configuration option on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<ServerConfigurationOptionInner> createOrUpdateAsync(
        String resourceGroupName,
        String managedInstanceName,
        ServerConfigurationOptionName serverConfigurationOptionName,
        ServerConfigurationOptionInner parameters);

    /**
     * Updates managed instance server configuration option.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param serverConfigurationOptionName The name of the server configuration option.
     * @param parameters Server configuration option parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a server configuration option.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ServerConfigurationOptionInner createOrUpdate(
        String resourceGroupName,
        String managedInstanceName,
        ServerConfigurationOptionName serverConfigurationOptionName,
        ServerConfigurationOptionInner parameters);

    /**
     * Updates managed instance server configuration option.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param serverConfigurationOptionName The name of the server configuration option.
     * @param parameters Server configuration option parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a server configuration option.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ServerConfigurationOptionInner createOrUpdate(
        String resourceGroupName,
        String managedInstanceName,
        ServerConfigurationOptionName serverConfigurationOptionName,
        ServerConfigurationOptionInner parameters,
        Context context);
}
