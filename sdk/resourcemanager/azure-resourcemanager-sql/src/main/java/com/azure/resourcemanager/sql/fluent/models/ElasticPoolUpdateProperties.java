// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.sql.models.AlwaysEncryptedEnclaveType;
import com.azure.resourcemanager.sql.models.AvailabilityZoneType;
import com.azure.resourcemanager.sql.models.ElasticPoolLicenseType;
import com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseSettings;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Properties of an elastic pool.
 */
@Fluent
public final class ElasticPoolUpdateProperties {
    /*
     * The storage limit for the database elastic pool in bytes.
     */
    @JsonProperty(value = "maxSizeBytes")
    private Long maxSizeBytes;

    /*
     * Minimal capacity that serverless pool will not shrink below, if not paused
     */
    @JsonProperty(value = "minCapacity")
    private Double minCapacity;

    /*
     * The per database settings for the elastic pool.
     */
    @JsonProperty(value = "perDatabaseSettings")
    private ElasticPoolPerDatabaseSettings perDatabaseSettings;

    /*
     * Whether or not this elastic pool is zone redundant, which means the replicas of this elastic pool will be spread
     * across multiple availability zones.
     */
    @JsonProperty(value = "zoneRedundant")
    private Boolean zoneRedundant;

    /*
     * The license type to apply for this elastic pool.
     */
    @JsonProperty(value = "licenseType")
    private ElasticPoolLicenseType licenseType;

    /*
     * Maintenance configuration id assigned to the elastic pool. This configuration defines the period when the
     * maintenance updates will will occur.
     */
    @JsonProperty(value = "maintenanceConfigurationId")
    private String maintenanceConfigurationId;

    /*
     * The number of secondary replicas associated with the elastic pool that are used to provide high availability.
     * Applicable only to Hyperscale elastic pools.
     */
    @JsonProperty(value = "highAvailabilityReplicaCount")
    private Integer highAvailabilityReplicaCount;

    /*
     * Time in minutes after which elastic pool is automatically paused. A value of -1 means that automatic pause is
     * disabled
     */
    @JsonProperty(value = "autoPauseDelay")
    private Integer autoPauseDelay;

    /*
     * Type of enclave requested on the elastic pool.
     */
    @JsonProperty(value = "preferredEnclaveType")
    private AlwaysEncryptedEnclaveType preferredEnclaveType;

    /*
     * Specifies the availability zone the pool's primary replica is pinned to.
     */
    @JsonProperty(value = "availabilityZone")
    private AvailabilityZoneType availabilityZone;

    /**
     * Creates an instance of ElasticPoolUpdateProperties class.
     */
    public ElasticPoolUpdateProperties() {
    }

    /**
     * Get the maxSizeBytes property: The storage limit for the database elastic pool in bytes.
     * 
     * @return the maxSizeBytes value.
     */
    public Long maxSizeBytes() {
        return this.maxSizeBytes;
    }

    /**
     * Set the maxSizeBytes property: The storage limit for the database elastic pool in bytes.
     * 
     * @param maxSizeBytes the maxSizeBytes value to set.
     * @return the ElasticPoolUpdateProperties object itself.
     */
    public ElasticPoolUpdateProperties withMaxSizeBytes(Long maxSizeBytes) {
        this.maxSizeBytes = maxSizeBytes;
        return this;
    }

    /**
     * Get the minCapacity property: Minimal capacity that serverless pool will not shrink below, if not paused.
     * 
     * @return the minCapacity value.
     */
    public Double minCapacity() {
        return this.minCapacity;
    }

    /**
     * Set the minCapacity property: Minimal capacity that serverless pool will not shrink below, if not paused.
     * 
     * @param minCapacity the minCapacity value to set.
     * @return the ElasticPoolUpdateProperties object itself.
     */
    public ElasticPoolUpdateProperties withMinCapacity(Double minCapacity) {
        this.minCapacity = minCapacity;
        return this;
    }

    /**
     * Get the perDatabaseSettings property: The per database settings for the elastic pool.
     * 
     * @return the perDatabaseSettings value.
     */
    public ElasticPoolPerDatabaseSettings perDatabaseSettings() {
        return this.perDatabaseSettings;
    }

    /**
     * Set the perDatabaseSettings property: The per database settings for the elastic pool.
     * 
     * @param perDatabaseSettings the perDatabaseSettings value to set.
     * @return the ElasticPoolUpdateProperties object itself.
     */
    public ElasticPoolUpdateProperties withPerDatabaseSettings(ElasticPoolPerDatabaseSettings perDatabaseSettings) {
        this.perDatabaseSettings = perDatabaseSettings;
        return this;
    }

    /**
     * Get the zoneRedundant property: Whether or not this elastic pool is zone redundant, which means the replicas of
     * this elastic pool will be spread across multiple availability zones.
     * 
     * @return the zoneRedundant value.
     */
    public Boolean zoneRedundant() {
        return this.zoneRedundant;
    }

    /**
     * Set the zoneRedundant property: Whether or not this elastic pool is zone redundant, which means the replicas of
     * this elastic pool will be spread across multiple availability zones.
     * 
     * @param zoneRedundant the zoneRedundant value to set.
     * @return the ElasticPoolUpdateProperties object itself.
     */
    public ElasticPoolUpdateProperties withZoneRedundant(Boolean zoneRedundant) {
        this.zoneRedundant = zoneRedundant;
        return this;
    }

    /**
     * Get the licenseType property: The license type to apply for this elastic pool.
     * 
     * @return the licenseType value.
     */
    public ElasticPoolLicenseType licenseType() {
        return this.licenseType;
    }

    /**
     * Set the licenseType property: The license type to apply for this elastic pool.
     * 
     * @param licenseType the licenseType value to set.
     * @return the ElasticPoolUpdateProperties object itself.
     */
    public ElasticPoolUpdateProperties withLicenseType(ElasticPoolLicenseType licenseType) {
        this.licenseType = licenseType;
        return this;
    }

    /**
     * Get the maintenanceConfigurationId property: Maintenance configuration id assigned to the elastic pool. This
     * configuration defines the period when the maintenance updates will will occur.
     * 
     * @return the maintenanceConfigurationId value.
     */
    public String maintenanceConfigurationId() {
        return this.maintenanceConfigurationId;
    }

    /**
     * Set the maintenanceConfigurationId property: Maintenance configuration id assigned to the elastic pool. This
     * configuration defines the period when the maintenance updates will will occur.
     * 
     * @param maintenanceConfigurationId the maintenanceConfigurationId value to set.
     * @return the ElasticPoolUpdateProperties object itself.
     */
    public ElasticPoolUpdateProperties withMaintenanceConfigurationId(String maintenanceConfigurationId) {
        this.maintenanceConfigurationId = maintenanceConfigurationId;
        return this;
    }

    /**
     * Get the highAvailabilityReplicaCount property: The number of secondary replicas associated with the elastic pool
     * that are used to provide high availability. Applicable only to Hyperscale elastic pools.
     * 
     * @return the highAvailabilityReplicaCount value.
     */
    public Integer highAvailabilityReplicaCount() {
        return this.highAvailabilityReplicaCount;
    }

    /**
     * Set the highAvailabilityReplicaCount property: The number of secondary replicas associated with the elastic pool
     * that are used to provide high availability. Applicable only to Hyperscale elastic pools.
     * 
     * @param highAvailabilityReplicaCount the highAvailabilityReplicaCount value to set.
     * @return the ElasticPoolUpdateProperties object itself.
     */
    public ElasticPoolUpdateProperties withHighAvailabilityReplicaCount(Integer highAvailabilityReplicaCount) {
        this.highAvailabilityReplicaCount = highAvailabilityReplicaCount;
        return this;
    }

    /**
     * Get the autoPauseDelay property: Time in minutes after which elastic pool is automatically paused. A value of -1
     * means that automatic pause is disabled.
     * 
     * @return the autoPauseDelay value.
     */
    public Integer autoPauseDelay() {
        return this.autoPauseDelay;
    }

    /**
     * Set the autoPauseDelay property: Time in minutes after which elastic pool is automatically paused. A value of -1
     * means that automatic pause is disabled.
     * 
     * @param autoPauseDelay the autoPauseDelay value to set.
     * @return the ElasticPoolUpdateProperties object itself.
     */
    public ElasticPoolUpdateProperties withAutoPauseDelay(Integer autoPauseDelay) {
        this.autoPauseDelay = autoPauseDelay;
        return this;
    }

    /**
     * Get the preferredEnclaveType property: Type of enclave requested on the elastic pool.
     * 
     * @return the preferredEnclaveType value.
     */
    public AlwaysEncryptedEnclaveType preferredEnclaveType() {
        return this.preferredEnclaveType;
    }

    /**
     * Set the preferredEnclaveType property: Type of enclave requested on the elastic pool.
     * 
     * @param preferredEnclaveType the preferredEnclaveType value to set.
     * @return the ElasticPoolUpdateProperties object itself.
     */
    public ElasticPoolUpdateProperties withPreferredEnclaveType(AlwaysEncryptedEnclaveType preferredEnclaveType) {
        this.preferredEnclaveType = preferredEnclaveType;
        return this;
    }

    /**
     * Get the availabilityZone property: Specifies the availability zone the pool's primary replica is pinned to.
     * 
     * @return the availabilityZone value.
     */
    public AvailabilityZoneType availabilityZone() {
        return this.availabilityZone;
    }

    /**
     * Set the availabilityZone property: Specifies the availability zone the pool's primary replica is pinned to.
     * 
     * @param availabilityZone the availabilityZone value to set.
     * @return the ElasticPoolUpdateProperties object itself.
     */
    public ElasticPoolUpdateProperties withAvailabilityZone(AvailabilityZoneType availabilityZone) {
        this.availabilityZone = availabilityZone;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (perDatabaseSettings() != null) {
            perDatabaseSettings().validate();
        }
    }
}
