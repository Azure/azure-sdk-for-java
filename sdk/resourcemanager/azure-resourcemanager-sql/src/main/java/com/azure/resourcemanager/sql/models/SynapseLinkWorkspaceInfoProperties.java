// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Properties of a Synapse link workspaces.
 */
@Fluent
public final class SynapseLinkWorkspaceInfoProperties implements JsonSerializable<SynapseLinkWorkspaceInfoProperties> {
    /*
     * Synapse link workspace id.
     */
    private String workspaceId;

    /*
     * Link connection name.
     */
    private String linkConnectionName;

    /**
     * Creates an instance of SynapseLinkWorkspaceInfoProperties class.
     */
    public SynapseLinkWorkspaceInfoProperties() {
    }

    /**
     * Get the workspaceId property: Synapse link workspace id.
     * 
     * @return the workspaceId value.
     */
    public String workspaceId() {
        return this.workspaceId;
    }

    /**
     * Set the workspaceId property: Synapse link workspace id.
     * 
     * @param workspaceId the workspaceId value to set.
     * @return the SynapseLinkWorkspaceInfoProperties object itself.
     */
    public SynapseLinkWorkspaceInfoProperties withWorkspaceId(String workspaceId) {
        this.workspaceId = workspaceId;
        return this;
    }

    /**
     * Get the linkConnectionName property: Link connection name.
     * 
     * @return the linkConnectionName value.
     */
    public String linkConnectionName() {
        return this.linkConnectionName;
    }

    /**
     * Set the linkConnectionName property: Link connection name.
     * 
     * @param linkConnectionName the linkConnectionName value to set.
     * @return the SynapseLinkWorkspaceInfoProperties object itself.
     */
    public SynapseLinkWorkspaceInfoProperties withLinkConnectionName(String linkConnectionName) {
        this.linkConnectionName = linkConnectionName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("workspaceId", this.workspaceId);
        jsonWriter.writeStringField("linkConnectionName", this.linkConnectionName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SynapseLinkWorkspaceInfoProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SynapseLinkWorkspaceInfoProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SynapseLinkWorkspaceInfoProperties.
     */
    public static SynapseLinkWorkspaceInfoProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SynapseLinkWorkspaceInfoProperties deserializedSynapseLinkWorkspaceInfoProperties
                = new SynapseLinkWorkspaceInfoProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("workspaceId".equals(fieldName)) {
                    deserializedSynapseLinkWorkspaceInfoProperties.workspaceId = reader.getString();
                } else if ("linkConnectionName".equals(fieldName)) {
                    deserializedSynapseLinkWorkspaceInfoProperties.linkConnectionName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSynapseLinkWorkspaceInfoProperties;
        });
    }
}
