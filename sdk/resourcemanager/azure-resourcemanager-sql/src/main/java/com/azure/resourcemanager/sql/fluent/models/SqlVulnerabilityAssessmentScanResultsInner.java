// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.sql.models.BaselineAdjustedResult;
import com.azure.resourcemanager.sql.models.Remediation;
import com.azure.resourcemanager.sql.models.RuleStatus;
import com.azure.resourcemanager.sql.models.VaRule;
import java.io.IOException;
import java.util.List;

/**
 * The SqlVulnerabilityAssessmentScanResults model.
 */
@Immutable
public final class SqlVulnerabilityAssessmentScanResultsInner extends ProxyResource {
    /*
     * SystemData of AdvancedThreatProtectionResource.
     */
    private SystemData systemData;

    /*
     * Resource properties.
     */
    private SqlVulnerabilityAssessmentScanResultProperties innerProperties;

    /*
     * The type of the resource.
     */
    private String type;

    /*
     * The name of the resource.
     */
    private String name;

    /*
     * Fully qualified resource Id for the resource.
     */
    private String id;

    /**
     * Creates an instance of SqlVulnerabilityAssessmentScanResultsInner class.
     */
    public SqlVulnerabilityAssessmentScanResultsInner() {
    }

    /**
     * Get the systemData property: SystemData of AdvancedThreatProtectionResource.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the innerProperties property: Resource properties.
     * 
     * @return the innerProperties value.
     */
    private SqlVulnerabilityAssessmentScanResultProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the type property: The type of the resource.
     * 
     * @return the type value.
     */
    @Override
    public String type() {
        return this.type;
    }

    /**
     * Get the name property: The name of the resource.
     * 
     * @return the name value.
     */
    @Override
    public String name() {
        return this.name;
    }

    /**
     * Get the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    @Override
    public String id() {
        return this.id;
    }

    /**
     * Get the ruleId property: SQL Vulnerability Assessment rule Id.
     * 
     * @return the ruleId value.
     */
    public String ruleId() {
        return this.innerProperties() == null ? null : this.innerProperties().ruleId();
    }

    /**
     * Get the status property: SQL Vulnerability Assessment rule result status.
     * 
     * @return the status value.
     */
    public RuleStatus status() {
        return this.innerProperties() == null ? null : this.innerProperties().status();
    }

    /**
     * Get the errorMessage property: SQL Vulnerability Assessment error message.
     * 
     * @return the errorMessage value.
     */
    public String errorMessage() {
        return this.innerProperties() == null ? null : this.innerProperties().errorMessage();
    }

    /**
     * Get the isTrimmed property: SQL Vulnerability Assessment is the query results trimmed.
     * 
     * @return the isTrimmed value.
     */
    public Boolean isTrimmed() {
        return this.innerProperties() == null ? null : this.innerProperties().isTrimmed();
    }

    /**
     * Get the queryResults property: SQL Vulnerability Assessment query results that was run.
     * 
     * @return the queryResults value.
     */
    public List<List<String>> queryResults() {
        return this.innerProperties() == null ? null : this.innerProperties().queryResults();
    }

    /**
     * Get the remediation property: SQL Vulnerability Assessment the remediation details.
     * 
     * @return the remediation value.
     */
    public Remediation remediation() {
        return this.innerProperties() == null ? null : this.innerProperties().remediation();
    }

    /**
     * Get the baselineAdjustedResult property: SQL Vulnerability Assessment rule result adjusted with baseline.
     * 
     * @return the baselineAdjustedResult value.
     */
    public BaselineAdjustedResult baselineAdjustedResult() {
        return this.innerProperties() == null ? null : this.innerProperties().baselineAdjustedResult();
    }

    /**
     * Get the ruleMetadata property: SQL Vulnerability Assessment rule metadata.
     * 
     * @return the ruleMetadata value.
     */
    public VaRule ruleMetadata() {
        return this.innerProperties() == null ? null : this.innerProperties().ruleMetadata();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SqlVulnerabilityAssessmentScanResultsInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SqlVulnerabilityAssessmentScanResultsInner if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the SqlVulnerabilityAssessmentScanResultsInner.
     */
    public static SqlVulnerabilityAssessmentScanResultsInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SqlVulnerabilityAssessmentScanResultsInner deserializedSqlVulnerabilityAssessmentScanResultsInner
                = new SqlVulnerabilityAssessmentScanResultsInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedSqlVulnerabilityAssessmentScanResultsInner.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedSqlVulnerabilityAssessmentScanResultsInner.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedSqlVulnerabilityAssessmentScanResultsInner.type = reader.getString();
                } else if ("systemData".equals(fieldName)) {
                    deserializedSqlVulnerabilityAssessmentScanResultsInner.systemData = SystemData.fromJson(reader);
                } else if ("properties".equals(fieldName)) {
                    deserializedSqlVulnerabilityAssessmentScanResultsInner.innerProperties
                        = SqlVulnerabilityAssessmentScanResultProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSqlVulnerabilityAssessmentScanResultsInner;
        });
    }
}
