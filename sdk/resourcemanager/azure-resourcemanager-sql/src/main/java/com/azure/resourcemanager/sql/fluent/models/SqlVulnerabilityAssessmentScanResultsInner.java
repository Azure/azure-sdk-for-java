// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.sql.models.BaselineAdjustedResult;
import com.azure.resourcemanager.sql.models.Remediation;
import com.azure.resourcemanager.sql.models.RuleStatus;
import com.azure.resourcemanager.sql.models.VaRule;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The SqlVulnerabilityAssessmentScanResults model. */
@Immutable
public final class SqlVulnerabilityAssessmentScanResultsInner extends ProxyResource {
    /*
     * SystemData of AdvancedThreatProtectionResource.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /*
     * Resource properties.
     */
    @JsonProperty(value = "properties")
    private SqlVulnerabilityAssessmentScanResultProperties innerProperties;

    /** Creates an instance of SqlVulnerabilityAssessmentScanResultsInner class. */
    public SqlVulnerabilityAssessmentScanResultsInner() {
    }

    /**
     * Get the systemData property: SystemData of AdvancedThreatProtectionResource.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the innerProperties property: Resource properties.
     *
     * @return the innerProperties value.
     */
    private SqlVulnerabilityAssessmentScanResultProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the ruleId property: SQL Vulnerability Assessment rule Id.
     *
     * @return the ruleId value.
     */
    public String ruleId() {
        return this.innerProperties() == null ? null : this.innerProperties().ruleId();
    }

    /**
     * Get the status property: SQL Vulnerability Assessment rule result status.
     *
     * @return the status value.
     */
    public RuleStatus status() {
        return this.innerProperties() == null ? null : this.innerProperties().status();
    }

    /**
     * Get the errorMessage property: SQL Vulnerability Assessment error message.
     *
     * @return the errorMessage value.
     */
    public String errorMessage() {
        return this.innerProperties() == null ? null : this.innerProperties().errorMessage();
    }

    /**
     * Get the isTrimmed property: SQL Vulnerability Assessment is the query results trimmed.
     *
     * @return the isTrimmed value.
     */
    public Boolean isTrimmed() {
        return this.innerProperties() == null ? null : this.innerProperties().isTrimmed();
    }

    /**
     * Get the queryResults property: SQL Vulnerability Assessment query results that was run.
     *
     * @return the queryResults value.
     */
    public List<List<String>> queryResults() {
        return this.innerProperties() == null ? null : this.innerProperties().queryResults();
    }

    /**
     * Get the remediation property: SQL Vulnerability Assessment the remediation details.
     *
     * @return the remediation value.
     */
    public Remediation remediation() {
        return this.innerProperties() == null ? null : this.innerProperties().remediation();
    }

    /**
     * Get the baselineAdjustedResult property: SQL Vulnerability Assessment rule result adjusted with baseline.
     *
     * @return the baselineAdjustedResult value.
     */
    public BaselineAdjustedResult baselineAdjustedResult() {
        return this.innerProperties() == null ? null : this.innerProperties().baselineAdjustedResult();
    }

    /**
     * Get the ruleMetadata property: SQL Vulnerability Assessment rule metadata.
     *
     * @return the ruleMetadata value.
     */
    public VaRule ruleMetadata() {
        return this.innerProperties() == null ? null : this.innerProperties().ruleMetadata();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
