// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.resourcemanager.sql.models.ManagedInstanceDtcSecuritySettings;
import com.azure.resourcemanager.sql.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * SQL Managed Instance DTC.
 */
@Fluent
public final class ManagedInstanceDtcInner extends ProxyResource {
    /*
     * Resource properties.
     */
    @JsonProperty(value = "properties")
    private ManagedInstanceDtcProperties innerProperties;

    /**
     * Creates an instance of ManagedInstanceDtcInner class.
     */
    public ManagedInstanceDtcInner() {
    }

    /**
     * Get the innerProperties property: Resource properties.
     * 
     * @return the innerProperties value.
     */
    private ManagedInstanceDtcProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the dtcEnabled property: Active status of managed instance DTC.
     * 
     * @return the dtcEnabled value.
     */
    public Boolean dtcEnabled() {
        return this.innerProperties() == null ? null : this.innerProperties().dtcEnabled();
    }

    /**
     * Set the dtcEnabled property: Active status of managed instance DTC.
     * 
     * @param dtcEnabled the dtcEnabled value to set.
     * @return the ManagedInstanceDtcInner object itself.
     */
    public ManagedInstanceDtcInner withDtcEnabled(Boolean dtcEnabled) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ManagedInstanceDtcProperties();
        }
        this.innerProperties().withDtcEnabled(dtcEnabled);
        return this;
    }

    /**
     * Get the securitySettings property: Security settings of managed instance DTC.
     * 
     * @return the securitySettings value.
     */
    public ManagedInstanceDtcSecuritySettings securitySettings() {
        return this.innerProperties() == null ? null : this.innerProperties().securitySettings();
    }

    /**
     * Set the securitySettings property: Security settings of managed instance DTC.
     * 
     * @param securitySettings the securitySettings value to set.
     * @return the ManagedInstanceDtcInner object itself.
     */
    public ManagedInstanceDtcInner withSecuritySettings(ManagedInstanceDtcSecuritySettings securitySettings) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ManagedInstanceDtcProperties();
        }
        this.innerProperties().withSecuritySettings(securitySettings);
        return this;
    }

    /**
     * Get the externalDnsSuffixSearchList property: External dns suffix search list of managed instance DTC.
     * 
     * @return the externalDnsSuffixSearchList value.
     */
    public List<String> externalDnsSuffixSearchList() {
        return this.innerProperties() == null ? null : this.innerProperties().externalDnsSuffixSearchList();
    }

    /**
     * Set the externalDnsSuffixSearchList property: External dns suffix search list of managed instance DTC.
     * 
     * @param externalDnsSuffixSearchList the externalDnsSuffixSearchList value to set.
     * @return the ManagedInstanceDtcInner object itself.
     */
    public ManagedInstanceDtcInner withExternalDnsSuffixSearchList(List<String> externalDnsSuffixSearchList) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ManagedInstanceDtcProperties();
        }
        this.innerProperties().withExternalDnsSuffixSearchList(externalDnsSuffixSearchList);
        return this;
    }

    /**
     * Get the dtcHostnameDnsSuffix property: Host name dns suffix of managed instance DTC.
     * 
     * @return the dtcHostnameDnsSuffix value.
     */
    public String dtcHostnameDnsSuffix() {
        return this.innerProperties() == null ? null : this.innerProperties().dtcHostnameDnsSuffix();
    }

    /**
     * Get the provisioningState property: Provisioning state of managed instance DTC.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
