// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;
import java.util.Map;

/**
 * Properties of a database Sql Vulnerability Assessment baseline set.
 */
@Fluent
public final class DatabaseSqlVulnerabilityAssessmentBaselineSetProperties
    implements JsonSerializable<DatabaseSqlVulnerabilityAssessmentBaselineSetProperties> {
    /*
     * The baseline set result
     */
    private Map<String, List<List<String>>> results;

    /**
     * Creates an instance of DatabaseSqlVulnerabilityAssessmentBaselineSetProperties class.
     */
    public DatabaseSqlVulnerabilityAssessmentBaselineSetProperties() {
    }

    /**
     * Get the results property: The baseline set result.
     * 
     * @return the results value.
     */
    public Map<String, List<List<String>>> results() {
        return this.results;
    }

    /**
     * Set the results property: The baseline set result.
     * 
     * @param results the results value to set.
     * @return the DatabaseSqlVulnerabilityAssessmentBaselineSetProperties object itself.
     */
    public DatabaseSqlVulnerabilityAssessmentBaselineSetProperties
        withResults(Map<String, List<List<String>>> results) {
        this.results = results;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (results() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property results in model DatabaseSqlVulnerabilityAssessmentBaselineSetProperties"));
        }
    }

    private static final ClientLogger LOGGER
        = new ClientLogger(DatabaseSqlVulnerabilityAssessmentBaselineSetProperties.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeMapField("results", this.results, (writer, element) -> writer.writeArray(element,
            (writer1, element1) -> writer1.writeArray(element1, (writer2, element2) -> writer2.writeString(element2))));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DatabaseSqlVulnerabilityAssessmentBaselineSetProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DatabaseSqlVulnerabilityAssessmentBaselineSetProperties if the JsonReader was pointing to
     * an instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the DatabaseSqlVulnerabilityAssessmentBaselineSetProperties.
     */
    public static DatabaseSqlVulnerabilityAssessmentBaselineSetProperties fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            DatabaseSqlVulnerabilityAssessmentBaselineSetProperties deserializedDatabaseSqlVulnerabilityAssessmentBaselineSetProperties
                = new DatabaseSqlVulnerabilityAssessmentBaselineSetProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("results".equals(fieldName)) {
                    Map<String, List<List<String>>> results = reader.readMap(
                        reader1 -> reader1.readArray(reader2 -> reader2.readArray(reader3 -> reader3.getString())));
                    deserializedDatabaseSqlVulnerabilityAssessmentBaselineSetProperties.results = results;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDatabaseSqlVulnerabilityAssessmentBaselineSetProperties;
        });
    }
}
