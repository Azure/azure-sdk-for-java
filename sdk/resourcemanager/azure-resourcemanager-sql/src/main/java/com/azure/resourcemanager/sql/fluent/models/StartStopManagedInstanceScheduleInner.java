// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.sql.models.ScheduleItem;
import java.io.IOException;
import java.util.List;

/**
 * Managed instance's Start/Stop schedule.
 */
@Fluent
public final class StartStopManagedInstanceScheduleInner extends ProxyResource {
    /*
     * System data of the scheduled resource.
     */
    private SystemData systemData;

    /*
     * Resource properties.
     */
    private StartStopManagedInstanceScheduleProperties innerProperties;

    /*
     * The type of the resource.
     */
    private String type;

    /*
     * The name of the resource.
     */
    private String name;

    /*
     * Fully qualified resource Id for the resource.
     */
    private String id;

    /**
     * Creates an instance of StartStopManagedInstanceScheduleInner class.
     */
    public StartStopManagedInstanceScheduleInner() {
    }

    /**
     * Get the systemData property: System data of the scheduled resource.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the innerProperties property: Resource properties.
     * 
     * @return the innerProperties value.
     */
    private StartStopManagedInstanceScheduleProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the type property: The type of the resource.
     * 
     * @return the type value.
     */
    @Override
    public String type() {
        return this.type;
    }

    /**
     * Get the name property: The name of the resource.
     * 
     * @return the name value.
     */
    @Override
    public String name() {
        return this.name;
    }

    /**
     * Get the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    @Override
    public String id() {
        return this.id;
    }

    /**
     * Get the description property: The description of the schedule.
     * 
     * @return the description value.
     */
    public String description() {
        return this.innerProperties() == null ? null : this.innerProperties().description();
    }

    /**
     * Set the description property: The description of the schedule.
     * 
     * @param description the description value to set.
     * @return the StartStopManagedInstanceScheduleInner object itself.
     */
    public StartStopManagedInstanceScheduleInner withDescription(String description) {
        if (this.innerProperties() == null) {
            this.innerProperties = new StartStopManagedInstanceScheduleProperties();
        }
        this.innerProperties().withDescription(description);
        return this;
    }

    /**
     * Get the timeZoneId property: The time zone of the schedule.
     * 
     * @return the timeZoneId value.
     */
    public String timeZoneId() {
        return this.innerProperties() == null ? null : this.innerProperties().timeZoneId();
    }

    /**
     * Set the timeZoneId property: The time zone of the schedule.
     * 
     * @param timeZoneId the timeZoneId value to set.
     * @return the StartStopManagedInstanceScheduleInner object itself.
     */
    public StartStopManagedInstanceScheduleInner withTimeZoneId(String timeZoneId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new StartStopManagedInstanceScheduleProperties();
        }
        this.innerProperties().withTimeZoneId(timeZoneId);
        return this;
    }

    /**
     * Get the scheduleList property: Schedule list.
     * 
     * @return the scheduleList value.
     */
    public List<ScheduleItem> scheduleList() {
        return this.innerProperties() == null ? null : this.innerProperties().scheduleList();
    }

    /**
     * Set the scheduleList property: Schedule list.
     * 
     * @param scheduleList the scheduleList value to set.
     * @return the StartStopManagedInstanceScheduleInner object itself.
     */
    public StartStopManagedInstanceScheduleInner withScheduleList(List<ScheduleItem> scheduleList) {
        if (this.innerProperties() == null) {
            this.innerProperties = new StartStopManagedInstanceScheduleProperties();
        }
        this.innerProperties().withScheduleList(scheduleList);
        return this;
    }

    /**
     * Get the nextRunAction property: Next action to be executed (Start or Stop).
     * 
     * @return the nextRunAction value.
     */
    public String nextRunAction() {
        return this.innerProperties() == null ? null : this.innerProperties().nextRunAction();
    }

    /**
     * Get the nextExecutionTime property: Timestamp when the next action will be executed in the corresponding schedule
     * time zone.
     * 
     * @return the nextExecutionTime value.
     */
    public String nextExecutionTime() {
        return this.innerProperties() == null ? null : this.innerProperties().nextExecutionTime();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of StartStopManagedInstanceScheduleInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of StartStopManagedInstanceScheduleInner if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the StartStopManagedInstanceScheduleInner.
     */
    public static StartStopManagedInstanceScheduleInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            StartStopManagedInstanceScheduleInner deserializedStartStopManagedInstanceScheduleInner
                = new StartStopManagedInstanceScheduleInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedStartStopManagedInstanceScheduleInner.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedStartStopManagedInstanceScheduleInner.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedStartStopManagedInstanceScheduleInner.type = reader.getString();
                } else if ("systemData".equals(fieldName)) {
                    deserializedStartStopManagedInstanceScheduleInner.systemData = SystemData.fromJson(reader);
                } else if ("properties".equals(fieldName)) {
                    deserializedStartStopManagedInstanceScheduleInner.innerProperties
                        = StartStopManagedInstanceScheduleProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedStartStopManagedInstanceScheduleInner;
        });
    }
}
