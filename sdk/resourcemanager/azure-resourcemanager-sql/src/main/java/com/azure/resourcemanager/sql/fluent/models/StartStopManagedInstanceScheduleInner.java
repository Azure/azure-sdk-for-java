// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.sql.models.ScheduleItem;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Managed instance's Start/Stop schedule. */
@Fluent
public final class StartStopManagedInstanceScheduleInner extends ProxyResource {
    /*
     * System data of the scheduled resource.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /*
     * Resource properties.
     */
    @JsonProperty(value = "properties")
    private StartStopManagedInstanceScheduleProperties innerProperties;

    /** Creates an instance of StartStopManagedInstanceScheduleInner class. */
    public StartStopManagedInstanceScheduleInner() {
    }

    /**
     * Get the systemData property: System data of the scheduled resource.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the innerProperties property: Resource properties.
     *
     * @return the innerProperties value.
     */
    private StartStopManagedInstanceScheduleProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the description property: The description of the schedule.
     *
     * @return the description value.
     */
    public String description() {
        return this.innerProperties() == null ? null : this.innerProperties().description();
    }

    /**
     * Set the description property: The description of the schedule.
     *
     * @param description the description value to set.
     * @return the StartStopManagedInstanceScheduleInner object itself.
     */
    public StartStopManagedInstanceScheduleInner withDescription(String description) {
        if (this.innerProperties() == null) {
            this.innerProperties = new StartStopManagedInstanceScheduleProperties();
        }
        this.innerProperties().withDescription(description);
        return this;
    }

    /**
     * Get the timeZoneId property: The time zone of the schedule.
     *
     * @return the timeZoneId value.
     */
    public String timeZoneId() {
        return this.innerProperties() == null ? null : this.innerProperties().timeZoneId();
    }

    /**
     * Set the timeZoneId property: The time zone of the schedule.
     *
     * @param timeZoneId the timeZoneId value to set.
     * @return the StartStopManagedInstanceScheduleInner object itself.
     */
    public StartStopManagedInstanceScheduleInner withTimeZoneId(String timeZoneId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new StartStopManagedInstanceScheduleProperties();
        }
        this.innerProperties().withTimeZoneId(timeZoneId);
        return this;
    }

    /**
     * Get the scheduleList property: Schedule list.
     *
     * @return the scheduleList value.
     */
    public List<ScheduleItem> scheduleList() {
        return this.innerProperties() == null ? null : this.innerProperties().scheduleList();
    }

    /**
     * Set the scheduleList property: Schedule list.
     *
     * @param scheduleList the scheduleList value to set.
     * @return the StartStopManagedInstanceScheduleInner object itself.
     */
    public StartStopManagedInstanceScheduleInner withScheduleList(List<ScheduleItem> scheduleList) {
        if (this.innerProperties() == null) {
            this.innerProperties = new StartStopManagedInstanceScheduleProperties();
        }
        this.innerProperties().withScheduleList(scheduleList);
        return this;
    }

    /**
     * Get the nextRunAction property: Next action to be executed (Start or Stop).
     *
     * @return the nextRunAction value.
     */
    public String nextRunAction() {
        return this.innerProperties() == null ? null : this.innerProperties().nextRunAction();
    }

    /**
     * Get the nextExecutionTime property: Timestamp when the next action will be executed in the corresponding schedule
     * time zone.
     *
     * @return the nextExecutionTime value.
     */
    public String nextExecutionTime() {
        return this.innerProperties() == null ? null : this.innerProperties().nextExecutionTime();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
