// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.sql.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The properties of server configuration option.
 */
@Fluent
public final class ServerConfigurationOptionProperties {
    /*
     * Value of the server configuration option.
     */
    @JsonProperty(value = "serverConfigurationOptionValue", required = true)
    private int serverConfigurationOptionValue;

    /*
     * Provisioning state of server configuration option.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /**
     * Creates an instance of ServerConfigurationOptionProperties class.
     */
    public ServerConfigurationOptionProperties() {
    }

    /**
     * Get the serverConfigurationOptionValue property: Value of the server configuration option.
     * 
     * @return the serverConfigurationOptionValue value.
     */
    public int serverConfigurationOptionValue() {
        return this.serverConfigurationOptionValue;
    }

    /**
     * Set the serverConfigurationOptionValue property: Value of the server configuration option.
     * 
     * @param serverConfigurationOptionValue the serverConfigurationOptionValue value to set.
     * @return the ServerConfigurationOptionProperties object itself.
     */
    public ServerConfigurationOptionProperties withServerConfigurationOptionValue(int serverConfigurationOptionValue) {
        this.serverConfigurationOptionValue = serverConfigurationOptionValue;
        return this;
    }

    /**
     * Get the provisioningState property: Provisioning state of server configuration option.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
