// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.sql.models.ProvisioningState;
import java.io.IOException;

/**
 * The properties of server configuration option.
 */
@Fluent
public final class ServerConfigurationOptionProperties
    implements JsonSerializable<ServerConfigurationOptionProperties> {
    /*
     * Value of the server configuration option.
     */
    private int serverConfigurationOptionValue;

    /*
     * Provisioning state of server configuration option.
     */
    private ProvisioningState provisioningState;

    /**
     * Creates an instance of ServerConfigurationOptionProperties class.
     */
    public ServerConfigurationOptionProperties() {
    }

    /**
     * Get the serverConfigurationOptionValue property: Value of the server configuration option.
     * 
     * @return the serverConfigurationOptionValue value.
     */
    public int serverConfigurationOptionValue() {
        return this.serverConfigurationOptionValue;
    }

    /**
     * Set the serverConfigurationOptionValue property: Value of the server configuration option.
     * 
     * @param serverConfigurationOptionValue the serverConfigurationOptionValue value to set.
     * @return the ServerConfigurationOptionProperties object itself.
     */
    public ServerConfigurationOptionProperties withServerConfigurationOptionValue(int serverConfigurationOptionValue) {
        this.serverConfigurationOptionValue = serverConfigurationOptionValue;
        return this;
    }

    /**
     * Get the provisioningState property: Provisioning state of server configuration option.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeIntField("serverConfigurationOptionValue", this.serverConfigurationOptionValue);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ServerConfigurationOptionProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ServerConfigurationOptionProperties if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ServerConfigurationOptionProperties.
     */
    public static ServerConfigurationOptionProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ServerConfigurationOptionProperties deserializedServerConfigurationOptionProperties
                = new ServerConfigurationOptionProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("serverConfigurationOptionValue".equals(fieldName)) {
                    deserializedServerConfigurationOptionProperties.serverConfigurationOptionValue = reader.getInt();
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedServerConfigurationOptionProperties.provisioningState
                        = ProvisioningState.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedServerConfigurationOptionProperties;
        });
    }
}
