// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.resourcemanager.sql.models.BaselineAdjustedResult;
import com.azure.resourcemanager.sql.models.Remediation;
import com.azure.resourcemanager.sql.models.RuleStatus;
import com.azure.resourcemanager.sql.models.VaRule;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** SQL Vulnerability Assessment scan result properties for a single rule. */
@Immutable
public final class SqlVulnerabilityAssessmentScanResultProperties {
    /*
     * SQL Vulnerability Assessment rule Id.
     */
    @JsonProperty(value = "ruleId", access = JsonProperty.Access.WRITE_ONLY)
    private String ruleId;

    /*
     * SQL Vulnerability Assessment rule result status.
     */
    @JsonProperty(value = "status", access = JsonProperty.Access.WRITE_ONLY)
    private RuleStatus status;

    /*
     * SQL Vulnerability Assessment error message.
     */
    @JsonProperty(value = "errorMessage", access = JsonProperty.Access.WRITE_ONLY)
    private String errorMessage;

    /*
     * SQL Vulnerability Assessment is the query results trimmed.
     */
    @JsonProperty(value = "isTrimmed", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean isTrimmed;

    /*
     * SQL Vulnerability Assessment query results that was run.
     */
    @JsonProperty(value = "queryResults", access = JsonProperty.Access.WRITE_ONLY)
    private List<List<String>> queryResults;

    /*
     * SQL Vulnerability Assessment the remediation details.
     */
    @JsonProperty(value = "remediation", access = JsonProperty.Access.WRITE_ONLY)
    private Remediation remediation;

    /*
     * SQL Vulnerability Assessment rule result adjusted with baseline.
     */
    @JsonProperty(value = "baselineAdjustedResult", access = JsonProperty.Access.WRITE_ONLY)
    private BaselineAdjustedResult baselineAdjustedResult;

    /*
     * SQL Vulnerability Assessment rule metadata.
     */
    @JsonProperty(value = "ruleMetadata", access = JsonProperty.Access.WRITE_ONLY)
    private VaRule ruleMetadata;

    /** Creates an instance of SqlVulnerabilityAssessmentScanResultProperties class. */
    public SqlVulnerabilityAssessmentScanResultProperties() {
    }

    /**
     * Get the ruleId property: SQL Vulnerability Assessment rule Id.
     *
     * @return the ruleId value.
     */
    public String ruleId() {
        return this.ruleId;
    }

    /**
     * Get the status property: SQL Vulnerability Assessment rule result status.
     *
     * @return the status value.
     */
    public RuleStatus status() {
        return this.status;
    }

    /**
     * Get the errorMessage property: SQL Vulnerability Assessment error message.
     *
     * @return the errorMessage value.
     */
    public String errorMessage() {
        return this.errorMessage;
    }

    /**
     * Get the isTrimmed property: SQL Vulnerability Assessment is the query results trimmed.
     *
     * @return the isTrimmed value.
     */
    public Boolean isTrimmed() {
        return this.isTrimmed;
    }

    /**
     * Get the queryResults property: SQL Vulnerability Assessment query results that was run.
     *
     * @return the queryResults value.
     */
    public List<List<String>> queryResults() {
        return this.queryResults;
    }

    /**
     * Get the remediation property: SQL Vulnerability Assessment the remediation details.
     *
     * @return the remediation value.
     */
    public Remediation remediation() {
        return this.remediation;
    }

    /**
     * Get the baselineAdjustedResult property: SQL Vulnerability Assessment rule result adjusted with baseline.
     *
     * @return the baselineAdjustedResult value.
     */
    public BaselineAdjustedResult baselineAdjustedResult() {
        return this.baselineAdjustedResult;
    }

    /**
     * Get the ruleMetadata property: SQL Vulnerability Assessment rule metadata.
     *
     * @return the ruleMetadata value.
     */
    public VaRule ruleMetadata() {
        return this.ruleMetadata;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (remediation() != null) {
            remediation().validate();
        }
        if (baselineAdjustedResult() != null) {
            baselineAdjustedResult().validate();
        }
        if (ruleMetadata() != null) {
            ruleMetadata().validate();
        }
    }
}
