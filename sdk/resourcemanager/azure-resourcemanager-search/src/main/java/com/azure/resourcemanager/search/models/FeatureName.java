// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.search.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * The name of the feature offered in this region.
 */
public final class FeatureName extends ExpandableStringEnum<FeatureName> {
    /**
     * Static value Grok for FeatureName.
     */
    public static final FeatureName GROK = fromString("Grok");

    /**
     * Static value ImageVectorization for FeatureName.
     */
    public static final FeatureName IMAGE_VECTORIZATION = fromString("ImageVectorization");

    /**
     * Static value DocumentIntelligence for FeatureName.
     */
    public static final FeatureName DOCUMENT_INTELLIGENCE = fromString("DocumentIntelligence");

    /**
     * Static value QueryRewrite for FeatureName.
     */
    public static final FeatureName QUERY_REWRITE = fromString("QueryRewrite");

    /**
     * Static value S3 for FeatureName.
     */
    public static final FeatureName S3 = fromString("S3");

    /**
     * Static value StorageOptimized for FeatureName.
     */
    public static final FeatureName STORAGE_OPTIMIZED = fromString("StorageOptimized");

    /**
     * Static value SemanticSearch for FeatureName.
     */
    public static final FeatureName SEMANTIC_SEARCH = fromString("SemanticSearch");

    /**
     * Static value MegaStore for FeatureName.
     */
    public static final FeatureName MEGA_STORE = fromString("MegaStore");

    /**
     * Static value AvailabilityZones for FeatureName.
     */
    public static final FeatureName AVAILABILITY_ZONES = fromString("AvailabilityZones");

    /**
     * Creates a new instance of FeatureName value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public FeatureName() {
    }

    /**
     * Creates or finds a FeatureName from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding FeatureName.
     */
    public static FeatureName fromString(String name) {
        return fromString(name, FeatureName.class);
    }

    /**
     * Gets known FeatureName values.
     * 
     * @return known FeatureName values.
     */
    public static Collection<FeatureName> values() {
        return values(FeatureName.class);
    }
}
