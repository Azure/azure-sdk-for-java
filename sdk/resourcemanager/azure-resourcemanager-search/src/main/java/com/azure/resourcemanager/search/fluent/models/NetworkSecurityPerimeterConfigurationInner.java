// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.search.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.search.models.NspConfigAssociation;
import com.azure.resourcemanager.search.models.NspConfigPerimeter;
import com.azure.resourcemanager.search.models.NspConfigProfile;
import com.azure.resourcemanager.search.models.NspProvisioningIssue;
import java.io.IOException;
import java.util.List;

/**
 * Network security perimeter configuration for a server.
 */
@Fluent
public final class NetworkSecurityPerimeterConfigurationInner extends ProxyResource {
    /*
     * Resource properties.
     */
    private NetworkSecurityPerimeterConfigurationProperties innerProperties;

    /*
     * The type of the resource.
     */
    private String type;

    /*
     * The name of the resource.
     */
    private String name;

    /*
     * Fully qualified resource Id for the resource.
     */
    private String id;

    /**
     * Creates an instance of NetworkSecurityPerimeterConfigurationInner class.
     */
    public NetworkSecurityPerimeterConfigurationInner() {
    }

    /**
     * Get the innerProperties property: Resource properties.
     * 
     * @return the innerProperties value.
     */
    private NetworkSecurityPerimeterConfigurationProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the type property: The type of the resource.
     * 
     * @return the type value.
     */
    @Override
    public String type() {
        return this.type;
    }

    /**
     * Get the name property: The name of the resource.
     * 
     * @return the name value.
     */
    @Override
    public String name() {
        return this.name;
    }

    /**
     * Get the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    @Override
    public String id() {
        return this.id;
    }

    /**
     * Get the provisioningState property: The provisioningState property.
     * 
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the networkSecurityPerimeter property: The perimeter for a network security perimeter configuration.
     * 
     * @return the networkSecurityPerimeter value.
     */
    public NspConfigPerimeter networkSecurityPerimeter() {
        return this.innerProperties() == null ? null : this.innerProperties().networkSecurityPerimeter();
    }

    /**
     * Set the networkSecurityPerimeter property: The perimeter for a network security perimeter configuration.
     * 
     * @param networkSecurityPerimeter the networkSecurityPerimeter value to set.
     * @return the NetworkSecurityPerimeterConfigurationInner object itself.
     */
    public NetworkSecurityPerimeterConfigurationInner
        withNetworkSecurityPerimeter(NspConfigPerimeter networkSecurityPerimeter) {
        if (this.innerProperties() == null) {
            this.innerProperties = new NetworkSecurityPerimeterConfigurationProperties();
        }
        this.innerProperties().withNetworkSecurityPerimeter(networkSecurityPerimeter);
        return this;
    }

    /**
     * Get the resourceAssociation property: The resource association for the network security perimeter.
     * 
     * @return the resourceAssociation value.
     */
    public NspConfigAssociation resourceAssociation() {
        return this.innerProperties() == null ? null : this.innerProperties().resourceAssociation();
    }

    /**
     * Set the resourceAssociation property: The resource association for the network security perimeter.
     * 
     * @param resourceAssociation the resourceAssociation value to set.
     * @return the NetworkSecurityPerimeterConfigurationInner object itself.
     */
    public NetworkSecurityPerimeterConfigurationInner
        withResourceAssociation(NspConfigAssociation resourceAssociation) {
        if (this.innerProperties() == null) {
            this.innerProperties = new NetworkSecurityPerimeterConfigurationProperties();
        }
        this.innerProperties().withResourceAssociation(resourceAssociation);
        return this;
    }

    /**
     * Get the profile property: The profile for a network security perimeter configuration.
     * 
     * @return the profile value.
     */
    public NspConfigProfile profile() {
        return this.innerProperties() == null ? null : this.innerProperties().profile();
    }

    /**
     * Set the profile property: The profile for a network security perimeter configuration.
     * 
     * @param profile the profile value to set.
     * @return the NetworkSecurityPerimeterConfigurationInner object itself.
     */
    public NetworkSecurityPerimeterConfigurationInner withProfile(NspConfigProfile profile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new NetworkSecurityPerimeterConfigurationProperties();
        }
        this.innerProperties().withProfile(profile);
        return this;
    }

    /**
     * Get the provisioningIssues property: The provisioningIssues property.
     * 
     * @return the provisioningIssues value.
     */
    public List<NspProvisioningIssue> provisioningIssues() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningIssues();
    }

    /**
     * Set the provisioningIssues property: The provisioningIssues property.
     * 
     * @param provisioningIssues the provisioningIssues value to set.
     * @return the NetworkSecurityPerimeterConfigurationInner object itself.
     */
    public NetworkSecurityPerimeterConfigurationInner
        withProvisioningIssues(List<NspProvisioningIssue> provisioningIssues) {
        if (this.innerProperties() == null) {
            this.innerProperties = new NetworkSecurityPerimeterConfigurationProperties();
        }
        this.innerProperties().withProvisioningIssues(provisioningIssues);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of NetworkSecurityPerimeterConfigurationInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of NetworkSecurityPerimeterConfigurationInner if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the NetworkSecurityPerimeterConfigurationInner.
     */
    public static NetworkSecurityPerimeterConfigurationInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            NetworkSecurityPerimeterConfigurationInner deserializedNetworkSecurityPerimeterConfigurationInner
                = new NetworkSecurityPerimeterConfigurationInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedNetworkSecurityPerimeterConfigurationInner.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedNetworkSecurityPerimeterConfigurationInner.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedNetworkSecurityPerimeterConfigurationInner.type = reader.getString();
                } else if ("properties".equals(fieldName)) {
                    deserializedNetworkSecurityPerimeterConfigurationInner.innerProperties
                        = NetworkSecurityPerimeterConfigurationProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedNetworkSecurityPerimeterConfigurationInner;
        });
    }
}
