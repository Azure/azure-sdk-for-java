// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.SubResource;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.network.models.BastionHostIpConfiguration;
import com.azure.resourcemanager.network.models.BastionHostPropertiesFormatNetworkAcls;
import com.azure.resourcemanager.network.models.ProvisioningState;
import java.io.IOException;
import java.util.List;

/**
 * Properties of the Bastion Host.
 */
@Fluent
public final class BastionHostPropertiesFormat implements JsonSerializable<BastionHostPropertiesFormat> {
    /*
     * IP configuration of the Bastion Host resource.
     */
    private List<BastionHostIpConfiguration> ipConfigurations;

    /*
     * FQDN for the endpoint on which bastion host is accessible.
     */
    private String dnsName;

    /*
     * Reference to an existing virtual network required for Developer Bastion Host only.
     */
    private SubResource virtualNetwork;

    /*
     * The networkAcls property.
     */
    private BastionHostPropertiesFormatNetworkAcls networkAcls;

    /*
     * The provisioning state of the bastion host resource.
     */
    private ProvisioningState provisioningState;

    /*
     * The scale units for the Bastion Host resource.
     */
    private Integer scaleUnits;

    /*
     * Enable/Disable Copy/Paste feature of the Bastion Host resource.
     */
    private Boolean disableCopyPaste;

    /*
     * Enable/Disable File Copy feature of the Bastion Host resource.
     */
    private Boolean enableFileCopy;

    /*
     * Enable/Disable IP Connect feature of the Bastion Host resource.
     */
    private Boolean enableIpConnect;

    /*
     * Enable/Disable Shareable Link of the Bastion Host resource.
     */
    private Boolean enableShareableLink;

    /*
     * Enable/Disable Tunneling feature of the Bastion Host resource.
     */
    private Boolean enableTunneling;

    /*
     * Enable/Disable Kerberos feature of the Bastion Host resource.
     */
    private Boolean enableKerberos;

    /*
     * Enable/Disable Session Recording feature of the Bastion Host resource.
     */
    private Boolean enableSessionRecording;

    /**
     * Creates an instance of BastionHostPropertiesFormat class.
     */
    public BastionHostPropertiesFormat() {
    }

    /**
     * Get the ipConfigurations property: IP configuration of the Bastion Host resource.
     * 
     * @return the ipConfigurations value.
     */
    public List<BastionHostIpConfiguration> ipConfigurations() {
        return this.ipConfigurations;
    }

    /**
     * Set the ipConfigurations property: IP configuration of the Bastion Host resource.
     * 
     * @param ipConfigurations the ipConfigurations value to set.
     * @return the BastionHostPropertiesFormat object itself.
     */
    public BastionHostPropertiesFormat withIpConfigurations(List<BastionHostIpConfiguration> ipConfigurations) {
        this.ipConfigurations = ipConfigurations;
        return this;
    }

    /**
     * Get the dnsName property: FQDN for the endpoint on which bastion host is accessible.
     * 
     * @return the dnsName value.
     */
    public String dnsName() {
        return this.dnsName;
    }

    /**
     * Set the dnsName property: FQDN for the endpoint on which bastion host is accessible.
     * 
     * @param dnsName the dnsName value to set.
     * @return the BastionHostPropertiesFormat object itself.
     */
    public BastionHostPropertiesFormat withDnsName(String dnsName) {
        this.dnsName = dnsName;
        return this;
    }

    /**
     * Get the virtualNetwork property: Reference to an existing virtual network required for Developer Bastion Host
     * only.
     * 
     * @return the virtualNetwork value.
     */
    public SubResource virtualNetwork() {
        return this.virtualNetwork;
    }

    /**
     * Set the virtualNetwork property: Reference to an existing virtual network required for Developer Bastion Host
     * only.
     * 
     * @param virtualNetwork the virtualNetwork value to set.
     * @return the BastionHostPropertiesFormat object itself.
     */
    public BastionHostPropertiesFormat withVirtualNetwork(SubResource virtualNetwork) {
        this.virtualNetwork = virtualNetwork;
        return this;
    }

    /**
     * Get the networkAcls property: The networkAcls property.
     * 
     * @return the networkAcls value.
     */
    public BastionHostPropertiesFormatNetworkAcls networkAcls() {
        return this.networkAcls;
    }

    /**
     * Set the networkAcls property: The networkAcls property.
     * 
     * @param networkAcls the networkAcls value to set.
     * @return the BastionHostPropertiesFormat object itself.
     */
    public BastionHostPropertiesFormat withNetworkAcls(BastionHostPropertiesFormatNetworkAcls networkAcls) {
        this.networkAcls = networkAcls;
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning state of the bastion host resource.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the scaleUnits property: The scale units for the Bastion Host resource.
     * 
     * @return the scaleUnits value.
     */
    public Integer scaleUnits() {
        return this.scaleUnits;
    }

    /**
     * Set the scaleUnits property: The scale units for the Bastion Host resource.
     * 
     * @param scaleUnits the scaleUnits value to set.
     * @return the BastionHostPropertiesFormat object itself.
     */
    public BastionHostPropertiesFormat withScaleUnits(Integer scaleUnits) {
        this.scaleUnits = scaleUnits;
        return this;
    }

    /**
     * Get the disableCopyPaste property: Enable/Disable Copy/Paste feature of the Bastion Host resource.
     * 
     * @return the disableCopyPaste value.
     */
    public Boolean disableCopyPaste() {
        return this.disableCopyPaste;
    }

    /**
     * Set the disableCopyPaste property: Enable/Disable Copy/Paste feature of the Bastion Host resource.
     * 
     * @param disableCopyPaste the disableCopyPaste value to set.
     * @return the BastionHostPropertiesFormat object itself.
     */
    public BastionHostPropertiesFormat withDisableCopyPaste(Boolean disableCopyPaste) {
        this.disableCopyPaste = disableCopyPaste;
        return this;
    }

    /**
     * Get the enableFileCopy property: Enable/Disable File Copy feature of the Bastion Host resource.
     * 
     * @return the enableFileCopy value.
     */
    public Boolean enableFileCopy() {
        return this.enableFileCopy;
    }

    /**
     * Set the enableFileCopy property: Enable/Disable File Copy feature of the Bastion Host resource.
     * 
     * @param enableFileCopy the enableFileCopy value to set.
     * @return the BastionHostPropertiesFormat object itself.
     */
    public BastionHostPropertiesFormat withEnableFileCopy(Boolean enableFileCopy) {
        this.enableFileCopy = enableFileCopy;
        return this;
    }

    /**
     * Get the enableIpConnect property: Enable/Disable IP Connect feature of the Bastion Host resource.
     * 
     * @return the enableIpConnect value.
     */
    public Boolean enableIpConnect() {
        return this.enableIpConnect;
    }

    /**
     * Set the enableIpConnect property: Enable/Disable IP Connect feature of the Bastion Host resource.
     * 
     * @param enableIpConnect the enableIpConnect value to set.
     * @return the BastionHostPropertiesFormat object itself.
     */
    public BastionHostPropertiesFormat withEnableIpConnect(Boolean enableIpConnect) {
        this.enableIpConnect = enableIpConnect;
        return this;
    }

    /**
     * Get the enableShareableLink property: Enable/Disable Shareable Link of the Bastion Host resource.
     * 
     * @return the enableShareableLink value.
     */
    public Boolean enableShareableLink() {
        return this.enableShareableLink;
    }

    /**
     * Set the enableShareableLink property: Enable/Disable Shareable Link of the Bastion Host resource.
     * 
     * @param enableShareableLink the enableShareableLink value to set.
     * @return the BastionHostPropertiesFormat object itself.
     */
    public BastionHostPropertiesFormat withEnableShareableLink(Boolean enableShareableLink) {
        this.enableShareableLink = enableShareableLink;
        return this;
    }

    /**
     * Get the enableTunneling property: Enable/Disable Tunneling feature of the Bastion Host resource.
     * 
     * @return the enableTunneling value.
     */
    public Boolean enableTunneling() {
        return this.enableTunneling;
    }

    /**
     * Set the enableTunneling property: Enable/Disable Tunneling feature of the Bastion Host resource.
     * 
     * @param enableTunneling the enableTunneling value to set.
     * @return the BastionHostPropertiesFormat object itself.
     */
    public BastionHostPropertiesFormat withEnableTunneling(Boolean enableTunneling) {
        this.enableTunneling = enableTunneling;
        return this;
    }

    /**
     * Get the enableKerberos property: Enable/Disable Kerberos feature of the Bastion Host resource.
     * 
     * @return the enableKerberos value.
     */
    public Boolean enableKerberos() {
        return this.enableKerberos;
    }

    /**
     * Set the enableKerberos property: Enable/Disable Kerberos feature of the Bastion Host resource.
     * 
     * @param enableKerberos the enableKerberos value to set.
     * @return the BastionHostPropertiesFormat object itself.
     */
    public BastionHostPropertiesFormat withEnableKerberos(Boolean enableKerberos) {
        this.enableKerberos = enableKerberos;
        return this;
    }

    /**
     * Get the enableSessionRecording property: Enable/Disable Session Recording feature of the Bastion Host resource.
     * 
     * @return the enableSessionRecording value.
     */
    public Boolean enableSessionRecording() {
        return this.enableSessionRecording;
    }

    /**
     * Set the enableSessionRecording property: Enable/Disable Session Recording feature of the Bastion Host resource.
     * 
     * @param enableSessionRecording the enableSessionRecording value to set.
     * @return the BastionHostPropertiesFormat object itself.
     */
    public BastionHostPropertiesFormat withEnableSessionRecording(Boolean enableSessionRecording) {
        this.enableSessionRecording = enableSessionRecording;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (ipConfigurations() != null) {
            ipConfigurations().forEach(e -> e.validate());
        }
        if (networkAcls() != null) {
            networkAcls().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("ipConfigurations", this.ipConfigurations,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("dnsName", this.dnsName);
        jsonWriter.writeJsonField("virtualNetwork", this.virtualNetwork);
        jsonWriter.writeJsonField("networkAcls", this.networkAcls);
        jsonWriter.writeNumberField("scaleUnits", this.scaleUnits);
        jsonWriter.writeBooleanField("disableCopyPaste", this.disableCopyPaste);
        jsonWriter.writeBooleanField("enableFileCopy", this.enableFileCopy);
        jsonWriter.writeBooleanField("enableIpConnect", this.enableIpConnect);
        jsonWriter.writeBooleanField("enableShareableLink", this.enableShareableLink);
        jsonWriter.writeBooleanField("enableTunneling", this.enableTunneling);
        jsonWriter.writeBooleanField("enableKerberos", this.enableKerberos);
        jsonWriter.writeBooleanField("enableSessionRecording", this.enableSessionRecording);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BastionHostPropertiesFormat from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of BastionHostPropertiesFormat if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the BastionHostPropertiesFormat.
     */
    public static BastionHostPropertiesFormat fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BastionHostPropertiesFormat deserializedBastionHostPropertiesFormat = new BastionHostPropertiesFormat();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("ipConfigurations".equals(fieldName)) {
                    List<BastionHostIpConfiguration> ipConfigurations
                        = reader.readArray(reader1 -> BastionHostIpConfiguration.fromJson(reader1));
                    deserializedBastionHostPropertiesFormat.ipConfigurations = ipConfigurations;
                } else if ("dnsName".equals(fieldName)) {
                    deserializedBastionHostPropertiesFormat.dnsName = reader.getString();
                } else if ("virtualNetwork".equals(fieldName)) {
                    deserializedBastionHostPropertiesFormat.virtualNetwork = SubResource.fromJson(reader);
                } else if ("networkAcls".equals(fieldName)) {
                    deserializedBastionHostPropertiesFormat.networkAcls
                        = BastionHostPropertiesFormatNetworkAcls.fromJson(reader);
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedBastionHostPropertiesFormat.provisioningState
                        = ProvisioningState.fromString(reader.getString());
                } else if ("scaleUnits".equals(fieldName)) {
                    deserializedBastionHostPropertiesFormat.scaleUnits = reader.getNullable(JsonReader::getInt);
                } else if ("disableCopyPaste".equals(fieldName)) {
                    deserializedBastionHostPropertiesFormat.disableCopyPaste
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("enableFileCopy".equals(fieldName)) {
                    deserializedBastionHostPropertiesFormat.enableFileCopy = reader.getNullable(JsonReader::getBoolean);
                } else if ("enableIpConnect".equals(fieldName)) {
                    deserializedBastionHostPropertiesFormat.enableIpConnect
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("enableShareableLink".equals(fieldName)) {
                    deserializedBastionHostPropertiesFormat.enableShareableLink
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("enableTunneling".equals(fieldName)) {
                    deserializedBastionHostPropertiesFormat.enableTunneling
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("enableKerberos".equals(fieldName)) {
                    deserializedBastionHostPropertiesFormat.enableKerberos = reader.getNullable(JsonReader::getBoolean);
                } else if ("enableSessionRecording".equals(fieldName)) {
                    deserializedBastionHostPropertiesFormat.enableSessionRecording
                        = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedBastionHostPropertiesFormat;
        });
    }
}
