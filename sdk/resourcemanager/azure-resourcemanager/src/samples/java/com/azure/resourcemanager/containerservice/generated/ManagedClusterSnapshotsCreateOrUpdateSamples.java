// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservice.generated;

import com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterSnapshotInner;
import com.azure.resourcemanager.containerservice.models.CreationData;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for ManagedClusterSnapshots CreateOrUpdate.
 */
public final class ManagedClusterSnapshotsCreateOrUpdateSamples {
    /*
     * x-ms-original-file:
     * specification/containerservice/resource-manager/Microsoft.ContainerService/aks/preview/2025-08-02-preview/
     * examples/ManagedClusterSnapshotsCreate.json
     */
    /**
     * Sample code: Create/Update Managed Cluster Snapshot.
     * 
     * @param azure The entry point for accessing resource management APIs in Azure.
     */
    public static void createUpdateManagedClusterSnapshot(com.azure.resourcemanager.AzureResourceManager azure) {
        azure.kubernetesClusters()
            .manager()
            .serviceClient()
            .getManagedClusterSnapshots()
            .createOrUpdateWithResponse("rg1", "snapshot1", new ManagedClusterSnapshotInner().withLocation("westus")
                .withTags(mapOf("key1", "fakeTokenPlaceholder", "key2", "fakeTokenPlaceholder"))
                .withCreationData(new CreationData().withSourceResourceId(
                    "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/cluster1")),
                com.azure.core.util.Context.NONE);
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
