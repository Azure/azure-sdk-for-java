// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storage.generated;

import com.azure.resourcemanager.storage.fluent.models.FileShareInner;
import com.azure.resourcemanager.storage.models.EnabledProtocols;
import com.azure.resourcemanager.storage.models.FileSharePropertiesFileSharePaidBursting;
import com.azure.resourcemanager.storage.models.ShareAccessTier;

/**
 * Samples for FileShares Create.
 */
public final class FileSharesCreateSamples {
    /*
     * x-ms-original-file:
     * specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/examples/FileSharesPut_ProvisionedV2.
     * json
     */
    /**
     * Sample code: PutSharesProvisionedV2.
     * 
     * @param azure The entry point for accessing resource management APIs in Azure.
     */
    public static void putSharesProvisionedV2(com.azure.resourcemanager.AzureResourceManager azure) {
        azure.storageAccounts()
            .manager()
            .serviceClient()
            .getFileShares()
            .createWithResponse("res346", "sto666", "share1235",
                new FileShareInner().withShareQuota(100).withProvisionedIops(5000).withProvisionedBandwidthMibps(200),
                null, com.azure.core.util.Context.NONE);
    }

    /*
     * x-ms-original-file:
     * specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/examples/FileSharesPut_AccessTier.json
     */
    /**
     * Sample code: PutShares with Access Tier.
     * 
     * @param azure The entry point for accessing resource management APIs in Azure.
     */
    public static void putSharesWithAccessTier(com.azure.resourcemanager.AzureResourceManager azure) {
        azure.storageAccounts()
            .manager()
            .serviceClient()
            .getFileShares()
            .createWithResponse("res346", "sto666", "share1235",
                new FileShareInner().withAccessTier(ShareAccessTier.HOT), null, com.azure.core.util.Context.NONE);
    }

    /*
     * x-ms-original-file:
     * specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/examples/FileSharesPut_NFS.json
     */
    /**
     * Sample code: Create NFS Shares.
     * 
     * @param azure The entry point for accessing resource management APIs in Azure.
     */
    public static void createNFSShares(com.azure.resourcemanager.AzureResourceManager azure) {
        azure.storageAccounts()
            .manager()
            .serviceClient()
            .getFileShares()
            .createWithResponse("res346", "sto666", "share1235",
                new FileShareInner().withEnabledProtocols(EnabledProtocols.NFS), null,
                com.azure.core.util.Context.NONE);
    }

    /*
     * x-ms-original-file:
     * specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/examples/FileSharesPut_PaidBursting.
     * json
     */
    /**
     * Sample code: PutShares with Paid Bursting.
     * 
     * @param azure The entry point for accessing resource management APIs in Azure.
     */
    public static void putSharesWithPaidBursting(com.azure.resourcemanager.AzureResourceManager azure) {
        azure.storageAccounts()
            .manager()
            .serviceClient()
            .getFileShares()
            .createWithResponse("res346", "sto666", "share1235",
                new FileShareInner().withFileSharePaidBursting(
                    new FileSharePropertiesFileSharePaidBursting().withPaidBurstingEnabled(true)
                        .withPaidBurstingMaxIops(102400)
                        .withPaidBurstingMaxBandwidthMibps(10340)),
                null, com.azure.core.util.Context.NONE);
    }

    /*
     * x-ms-original-file:
     * specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/examples/FileSharesPut.json
     */
    /**
     * Sample code: PutShares.
     * 
     * @param azure The entry point for accessing resource management APIs in Azure.
     */
    public static void putShares(com.azure.resourcemanager.AzureResourceManager azure) {
        azure.storageAccounts()
            .manager()
            .serviceClient()
            .getFileShares()
            .createWithResponse("res3376", "sto328", "share6185", new FileShareInner(), null,
                com.azure.core.util.Context.NONE);
    }
}
