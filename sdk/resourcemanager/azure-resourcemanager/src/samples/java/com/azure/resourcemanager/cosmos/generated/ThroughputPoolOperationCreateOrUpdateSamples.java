// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated;

import com.azure.resourcemanager.cosmos.fluent.models.ThroughputPoolResourceInner;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for ThroughputPoolOperation CreateOrUpdate.
 */
public final class ThroughputPoolOperationCreateOrUpdateSamples {
    /*
     * x-ms-original-file:
     * issue%234977/specification/cosmos-db/resource-manager/Microsoft.DocumentDB/preview/2024-02-15-preview/examples/
     * throughputPool/CosmosDBThroughputPoolCreate.json
     */
    /**
     * Sample code: CosmosDB ThroughputPool Create.
     * 
     * @param azure The entry point for accessing resource management APIs in Azure.
     */
    public static void cosmosDBThroughputPoolCreate(com.azure.resourcemanager.AzureResourceManager azure) {
        azure.cosmosDBAccounts().manager().serviceClient().getThroughputPoolOperations().createOrUpdate("rg1", "tp1",
            new ThroughputPoolResourceInner().withLocation("westus2").withTags(mapOf()).withMaxThroughput(10000),
            com.azure.core.util.Context.NONE);
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
