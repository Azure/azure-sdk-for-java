// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** Duplicate role created alert incident properties. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "alertIncidentType")
@JsonTypeName("DuplicateRoleCreatedAlertIncident")
@Immutable
public final class DuplicateRoleCreatedAlertIncidentProperties extends AlertIncidentProperties {
    /*
     * The role name.
     */
    @JsonProperty(value = "roleName", access = JsonProperty.Access.WRITE_ONLY)
    private String roleName;

    /*
     * The duplicate roles.
     */
    @JsonProperty(value = "duplicateRoles", access = JsonProperty.Access.WRITE_ONLY)
    private String duplicateRoles;

    /*
     * The reason for the incident.
     */
    @JsonProperty(value = "reason", access = JsonProperty.Access.WRITE_ONLY)
    private String reason;

    /** Creates an instance of DuplicateRoleCreatedAlertIncidentProperties class. */
    public DuplicateRoleCreatedAlertIncidentProperties() {
    }

    /**
     * Get the roleName property: The role name.
     *
     * @return the roleName value.
     */
    public String roleName() {
        return this.roleName;
    }

    /**
     * Get the duplicateRoles property: The duplicate roles.
     *
     * @return the duplicateRoles value.
     */
    public String duplicateRoles() {
        return this.duplicateRoles;
    }

    /**
     * Get the reason property: The reason for the incident.
     *
     * @return the reason value.
     */
    public String reason() {
        return this.reason;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
