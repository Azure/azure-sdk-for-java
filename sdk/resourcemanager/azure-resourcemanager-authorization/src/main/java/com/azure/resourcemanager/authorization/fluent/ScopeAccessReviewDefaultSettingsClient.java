// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.authorization.fluent.models.AccessReviewDefaultSettingsInner;
import com.azure.resourcemanager.authorization.fluent.models.AccessReviewScheduleSettings;
import reactor.core.publisher.Mono;

/**
 * An instance of this class provides access to all the operations defined in ScopeAccessReviewDefaultSettingsClient.
 */
public interface ScopeAccessReviewDefaultSettingsClient {
    /**
     * Get access review default settings for the subscription.
     *
     * @param scope The scope of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return access review default settings for the subscription along with {@link Response} on successful completion
     *     of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<AccessReviewDefaultSettingsInner>> getWithResponseAsync(String scope);

    /**
     * Get access review default settings for the subscription.
     *
     * @param scope The scope of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return access review default settings for the subscription on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<AccessReviewDefaultSettingsInner> getAsync(String scope);

    /**
     * Get access review default settings for the subscription.
     *
     * @param scope The scope of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return access review default settings for the subscription along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AccessReviewDefaultSettingsInner> getWithResponse(String scope, Context context);

    /**
     * Get access review default settings for the subscription.
     *
     * @param scope The scope of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return access review default settings for the subscription.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AccessReviewDefaultSettingsInner get(String scope);

    /**
     * Get access review default settings for the subscription.
     *
     * @param scope The scope of the resource.
     * @param properties Access review schedule settings.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return access review default settings for the subscription along with {@link Response} on successful completion
     *     of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<AccessReviewDefaultSettingsInner>> putWithResponseAsync(
        String scope, AccessReviewScheduleSettings properties);

    /**
     * Get access review default settings for the subscription.
     *
     * @param scope The scope of the resource.
     * @param properties Access review schedule settings.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return access review default settings for the subscription on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<AccessReviewDefaultSettingsInner> putAsync(String scope, AccessReviewScheduleSettings properties);

    /**
     * Get access review default settings for the subscription.
     *
     * @param scope The scope of the resource.
     * @param properties Access review schedule settings.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return access review default settings for the subscription along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AccessReviewDefaultSettingsInner> putWithResponse(
        String scope, AccessReviewScheduleSettings properties, Context context);

    /**
     * Get access review default settings for the subscription.
     *
     * @param scope The scope of the resource.
     * @param properties Access review schedule settings.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return access review default settings for the subscription.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AccessReviewDefaultSettingsInner put(String scope, AccessReviewScheduleSettings properties);
}
