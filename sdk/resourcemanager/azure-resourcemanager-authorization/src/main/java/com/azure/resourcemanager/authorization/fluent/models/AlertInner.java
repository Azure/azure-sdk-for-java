// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.fluent.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;

/** The alert. */
@Fluent
public final class AlertInner {
    /*
     * The alert ID.
     */
    @JsonProperty(value = "id", access = JsonProperty.Access.WRITE_ONLY)
    private String id;

    /*
     * The alert name.
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /*
     * The alert type.
     */
    @JsonProperty(value = "type", access = JsonProperty.Access.WRITE_ONLY)
    private String type;

    /*
     * Alert properties.
     */
    @JsonProperty(value = "properties")
    private AlertPropertiesInner innerProperties;

    /** Creates an instance of AlertInner class. */
    public AlertInner() {
    }

    /**
     * Get the id property: The alert ID.
     *
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the name property: The alert name.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the type property: The alert type.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Get the innerProperties property: Alert properties.
     *
     * @return the innerProperties value.
     */
    private AlertPropertiesInner innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the scope property: The alert scope.
     *
     * @return the scope value.
     */
    public String scope() {
        return this.innerProperties() == null ? null : this.innerProperties().scope();
    }

    /**
     * Get the isActive property: False by default; true if the alert is active.
     *
     * @return the isActive value.
     */
    public Boolean isActive() {
        return this.innerProperties() == null ? null : this.innerProperties().isActive();
    }

    /**
     * Set the isActive property: False by default; true if the alert is active.
     *
     * @param isActive the isActive value to set.
     * @return the AlertInner object itself.
     */
    public AlertInner withIsActive(Boolean isActive) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AlertPropertiesInner();
        }
        this.innerProperties().withIsActive(isActive);
        return this;
    }

    /**
     * Get the incidentCount property: The number of generated incidents of the alert.
     *
     * @return the incidentCount value.
     */
    public Integer incidentCount() {
        return this.innerProperties() == null ? null : this.innerProperties().incidentCount();
    }

    /**
     * Get the lastModifiedDateTime property: The date time when the alert configuration was updated or new incidents
     * were generated.
     *
     * @return the lastModifiedDateTime value.
     */
    public OffsetDateTime lastModifiedDateTime() {
        return this.innerProperties() == null ? null : this.innerProperties().lastModifiedDateTime();
    }

    /**
     * Get the lastScannedDateTime property: The date time when the alert was last scanned.
     *
     * @return the lastScannedDateTime value.
     */
    public OffsetDateTime lastScannedDateTime() {
        return this.innerProperties() == null ? null : this.innerProperties().lastScannedDateTime();
    }

    /**
     * Get the alertDefinition property: The alert definition.
     *
     * @return the alertDefinition value.
     */
    public AlertDefinitionInner alertDefinition() {
        return this.innerProperties() == null ? null : this.innerProperties().alertDefinition();
    }

    /**
     * Get the alertIncidents property: The alert incidents.
     *
     * @return the alertIncidents value.
     */
    public List<AlertIncidentInner> alertIncidents() {
        return this.innerProperties() == null ? null : this.innerProperties().alertIncidents();
    }

    /**
     * Get the alertConfiguration property: The alert configuration.
     *
     * @return the alertConfiguration value.
     */
    public AlertConfigurationInner alertConfiguration() {
        return this.innerProperties() == null ? null : this.innerProperties().alertConfiguration();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
