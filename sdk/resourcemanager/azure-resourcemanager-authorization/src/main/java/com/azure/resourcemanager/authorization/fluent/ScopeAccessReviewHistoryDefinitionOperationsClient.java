// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.authorization.fluent.models.AccessReviewHistoryDefinitionInner;
import com.azure.resourcemanager.authorization.fluent.models.AccessReviewHistoryDefinitionProperties;
import reactor.core.publisher.Mono;

/**
 * An instance of this class provides access to all the operations defined in
 * ScopeAccessReviewHistoryDefinitionOperationsClient.
 */
public interface ScopeAccessReviewHistoryDefinitionOperationsClient {
    /**
     * Create a scheduled or one-time Access Review History Definition.
     *
     * @param scope The scope of the resource.
     * @param historyDefinitionId The id of the access review history definition.
     * @param properties Access review history definition properties.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return access Review History Definition along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<AccessReviewHistoryDefinitionInner>> createWithResponseAsync(
        String scope, String historyDefinitionId, AccessReviewHistoryDefinitionProperties properties);

    /**
     * Create a scheduled or one-time Access Review History Definition.
     *
     * @param scope The scope of the resource.
     * @param historyDefinitionId The id of the access review history definition.
     * @param properties Access review history definition properties.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return access Review History Definition on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<AccessReviewHistoryDefinitionInner> createAsync(
        String scope, String historyDefinitionId, AccessReviewHistoryDefinitionProperties properties);

    /**
     * Create a scheduled or one-time Access Review History Definition.
     *
     * @param scope The scope of the resource.
     * @param historyDefinitionId The id of the access review history definition.
     * @param properties Access review history definition properties.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return access Review History Definition along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AccessReviewHistoryDefinitionInner> createWithResponse(
        String scope, String historyDefinitionId, AccessReviewHistoryDefinitionProperties properties, Context context);

    /**
     * Create a scheduled or one-time Access Review History Definition.
     *
     * @param scope The scope of the resource.
     * @param historyDefinitionId The id of the access review history definition.
     * @param properties Access review history definition properties.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return access Review History Definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AccessReviewHistoryDefinitionInner create(
        String scope, String historyDefinitionId, AccessReviewHistoryDefinitionProperties properties);

    /**
     * Delete an access review history definition.
     *
     * @param scope The scope of the resource.
     * @param historyDefinitionId The id of the access review history definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<Void>> deleteByIdWithResponseAsync(String scope, String historyDefinitionId);

    /**
     * Delete an access review history definition.
     *
     * @param scope The scope of the resource.
     * @param historyDefinitionId The id of the access review history definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return A {@link Mono} that completes when a successful response is received.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Void> deleteByIdAsync(String scope, String historyDefinitionId);

    /**
     * Delete an access review history definition.
     *
     * @param scope The scope of the resource.
     * @param historyDefinitionId The id of the access review history definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteByIdWithResponse(String scope, String historyDefinitionId, Context context);

    /**
     * Delete an access review history definition.
     *
     * @param scope The scope of the resource.
     * @param historyDefinitionId The id of the access review history definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void deleteById(String scope, String historyDefinitionId);
}
