// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.authorization.fluent.models.GroupsOnenoteNotebooksCopyNotebookRequestBody;
import com.azure.resourcemanager.authorization.fluent.models.GroupsOnenoteNotebooksGetNotebookFromWebUrlRequestBody;
import com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphCopyNotebookModelInner;
import com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOnenoteOperationInner;
import com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphRecentNotebookInner;
import java.util.List;
import reactor.core.publisher.Mono;

/** An instance of this class provides access to all the operations defined in GroupsOnenoteNotebooksClient. */
public interface GroupsOnenoteNotebooksClient {
    /**
     * Invoke action copyNotebook.
     *
     * @param groupId key: id of group.
     * @param notebookId key: id of notebook.
     * @param body Action parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.authorization.fluent.models.OdataErrorMainException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return onenoteOperation.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<MicrosoftGraphOnenoteOperationInner>> copyNotebookWithResponseAsync(
        String groupId, String notebookId, GroupsOnenoteNotebooksCopyNotebookRequestBody body);

    /**
     * Invoke action copyNotebook.
     *
     * @param groupId key: id of group.
     * @param notebookId key: id of notebook.
     * @param body Action parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.authorization.fluent.models.OdataErrorMainException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return onenoteOperation.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<MicrosoftGraphOnenoteOperationInner> copyNotebookAsync(
        String groupId, String notebookId, GroupsOnenoteNotebooksCopyNotebookRequestBody body);

    /**
     * Invoke action copyNotebook.
     *
     * @param groupId key: id of group.
     * @param notebookId key: id of notebook.
     * @param body Action parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.authorization.fluent.models.OdataErrorMainException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return onenoteOperation.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MicrosoftGraphOnenoteOperationInner copyNotebook(
        String groupId, String notebookId, GroupsOnenoteNotebooksCopyNotebookRequestBody body);

    /**
     * Invoke action copyNotebook.
     *
     * @param groupId key: id of group.
     * @param notebookId key: id of notebook.
     * @param body Action parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.authorization.fluent.models.OdataErrorMainException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return onenoteOperation.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<MicrosoftGraphOnenoteOperationInner> copyNotebookWithResponse(
        String groupId, String notebookId, GroupsOnenoteNotebooksCopyNotebookRequestBody body, Context context);

    /**
     * Invoke action getNotebookFromWebUrl.
     *
     * @param groupId key: id of group.
     * @param body Action parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.authorization.fluent.models.OdataErrorMainException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return copyNotebookModel.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<MicrosoftGraphCopyNotebookModelInner>> getNotebookFromWebUrlWithResponseAsync(
        String groupId, GroupsOnenoteNotebooksGetNotebookFromWebUrlRequestBody body);

    /**
     * Invoke action getNotebookFromWebUrl.
     *
     * @param groupId key: id of group.
     * @param body Action parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.authorization.fluent.models.OdataErrorMainException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return copyNotebookModel.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<MicrosoftGraphCopyNotebookModelInner> getNotebookFromWebUrlAsync(
        String groupId, GroupsOnenoteNotebooksGetNotebookFromWebUrlRequestBody body);

    /**
     * Invoke action getNotebookFromWebUrl.
     *
     * @param groupId key: id of group.
     * @param body Action parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.authorization.fluent.models.OdataErrorMainException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return copyNotebookModel.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MicrosoftGraphCopyNotebookModelInner getNotebookFromWebUrl(
        String groupId, GroupsOnenoteNotebooksGetNotebookFromWebUrlRequestBody body);

    /**
     * Invoke action getNotebookFromWebUrl.
     *
     * @param groupId key: id of group.
     * @param body Action parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.authorization.fluent.models.OdataErrorMainException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return copyNotebookModel.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<MicrosoftGraphCopyNotebookModelInner> getNotebookFromWebUrlWithResponse(
        String groupId, GroupsOnenoteNotebooksGetNotebookFromWebUrlRequestBody body, Context context);

    /**
     * Invoke function getRecentNotebooks.
     *
     * @param groupId key: id of group.
     * @param includePersonalNotebooks The includePersonalNotebooks parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.authorization.fluent.models.OdataErrorMainException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of microsoft.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<List<MicrosoftGraphRecentNotebookInner>>> getRecentNotebooksWithResponseAsync(
        String groupId, boolean includePersonalNotebooks);

    /**
     * Invoke function getRecentNotebooks.
     *
     * @param groupId key: id of group.
     * @param includePersonalNotebooks The includePersonalNotebooks parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.authorization.fluent.models.OdataErrorMainException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of microsoft.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<List<MicrosoftGraphRecentNotebookInner>> getRecentNotebooksAsync(
        String groupId, boolean includePersonalNotebooks);

    /**
     * Invoke function getRecentNotebooks.
     *
     * @param groupId key: id of group.
     * @param includePersonalNotebooks The includePersonalNotebooks parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.authorization.fluent.models.OdataErrorMainException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of microsoft.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    List<MicrosoftGraphRecentNotebookInner> getRecentNotebooks(String groupId, boolean includePersonalNotebooks);

    /**
     * Invoke function getRecentNotebooks.
     *
     * @param groupId key: id of group.
     * @param includePersonalNotebooks The includePersonalNotebooks parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.authorization.fluent.models.OdataErrorMainException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of microsoft.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<List<MicrosoftGraphRecentNotebookInner>> getRecentNotebooksWithResponse(
        String groupId, boolean includePersonalNotebooks, Context context);
}
