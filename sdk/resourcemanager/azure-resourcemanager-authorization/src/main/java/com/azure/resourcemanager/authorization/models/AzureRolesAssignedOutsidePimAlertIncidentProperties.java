// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.time.OffsetDateTime;

/** Azure roles assigned outside PIM alert incident properties. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "alertIncidentType")
@JsonTypeName("AzureRolesAssignedOutsidePimAlertIncident")
@Immutable
public final class AzureRolesAssignedOutsidePimAlertIncidentProperties extends AlertIncidentProperties {
    /*
     * The assignee display name.
     */
    @JsonProperty(value = "assigneeDisplayName", access = JsonProperty.Access.WRITE_ONLY)
    private String assigneeDisplayName;

    /*
     * The assignee user principal name.
     */
    @JsonProperty(value = "assigneeUserPrincipalName", access = JsonProperty.Access.WRITE_ONLY)
    private String assigneeUserPrincipalName;

    /*
     * The assignee ID.
     */
    @JsonProperty(value = "assigneeId", access = JsonProperty.Access.WRITE_ONLY)
    private String assigneeId;

    /*
     * The role display name.
     */
    @JsonProperty(value = "roleDisplayName", access = JsonProperty.Access.WRITE_ONLY)
    private String roleDisplayName;

    /*
     * The role template ID.
     */
    @JsonProperty(value = "roleTemplateId", access = JsonProperty.Access.WRITE_ONLY)
    private String roleTemplateId;

    /*
     * The role definition ID.
     */
    @JsonProperty(value = "roleDefinitionId", access = JsonProperty.Access.WRITE_ONLY)
    private String roleDefinitionId;

    /*
     * The date the assignment was activated.
     */
    @JsonProperty(value = "assignmentActivatedDate", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime assignmentActivatedDate;

    /*
     * The requestor ID.
     */
    @JsonProperty(value = "requestorId", access = JsonProperty.Access.WRITE_ONLY)
    private String requestorId;

    /*
     * The requestor display name.
     */
    @JsonProperty(value = "requestorDisplayName", access = JsonProperty.Access.WRITE_ONLY)
    private String requestorDisplayName;

    /*
     * The requestor user principal name.
     */
    @JsonProperty(value = "requestorUserPrincipalName", access = JsonProperty.Access.WRITE_ONLY)
    private String requestorUserPrincipalName;

    /** Creates an instance of AzureRolesAssignedOutsidePimAlertIncidentProperties class. */
    public AzureRolesAssignedOutsidePimAlertIncidentProperties() {
    }

    /**
     * Get the assigneeDisplayName property: The assignee display name.
     *
     * @return the assigneeDisplayName value.
     */
    public String assigneeDisplayName() {
        return this.assigneeDisplayName;
    }

    /**
     * Get the assigneeUserPrincipalName property: The assignee user principal name.
     *
     * @return the assigneeUserPrincipalName value.
     */
    public String assigneeUserPrincipalName() {
        return this.assigneeUserPrincipalName;
    }

    /**
     * Get the assigneeId property: The assignee ID.
     *
     * @return the assigneeId value.
     */
    public String assigneeId() {
        return this.assigneeId;
    }

    /**
     * Get the roleDisplayName property: The role display name.
     *
     * @return the roleDisplayName value.
     */
    public String roleDisplayName() {
        return this.roleDisplayName;
    }

    /**
     * Get the roleTemplateId property: The role template ID.
     *
     * @return the roleTemplateId value.
     */
    public String roleTemplateId() {
        return this.roleTemplateId;
    }

    /**
     * Get the roleDefinitionId property: The role definition ID.
     *
     * @return the roleDefinitionId value.
     */
    public String roleDefinitionId() {
        return this.roleDefinitionId;
    }

    /**
     * Get the assignmentActivatedDate property: The date the assignment was activated.
     *
     * @return the assignmentActivatedDate value.
     */
    public OffsetDateTime assignmentActivatedDate() {
        return this.assignmentActivatedDate;
    }

    /**
     * Get the requestorId property: The requestor ID.
     *
     * @return the requestorId value.
     */
    public String requestorId() {
        return this.requestorId;
    }

    /**
     * Get the requestorDisplayName property: The requestor display name.
     *
     * @return the requestorDisplayName value.
     */
    public String requestorDisplayName() {
        return this.requestorDisplayName;
    }

    /**
     * Get the requestorUserPrincipalName property: The requestor user principal name.
     *
     * @return the requestorUserPrincipalName value.
     */
    public String requestorUserPrincipalName() {
        return this.requestorUserPrincipalName;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
