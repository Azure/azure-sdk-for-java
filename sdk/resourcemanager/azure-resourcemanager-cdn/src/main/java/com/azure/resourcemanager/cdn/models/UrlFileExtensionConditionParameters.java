// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cdn.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Defines the parameters for the URL file extension condition. */
@Fluent
public final class UrlFileExtensionConditionParameters {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(UrlFileExtensionConditionParameters.class);

    /*
     * The @odata.type property.
     */
    @JsonProperty(value = "@odata.type", required = true)
    private String odataType;

    /*
     * A list of extensions for the condition of the delivery rule.
     */
    @JsonProperty(value = "extensions", required = true)
    private List<String> extensions;

    /** Creates an instance of UrlFileExtensionConditionParameters class. */
    public UrlFileExtensionConditionParameters() {
        odataType = "Microsoft.Azure.Cdn.Models.DeliveryRuleUrlFileExtensionConditionParameters";
    }

    /**
     * Get the odataType property: The @odata.type property.
     *
     * @return the odataType value.
     */
    public String odataType() {
        return this.odataType;
    }

    /**
     * Set the odataType property: The @odata.type property.
     *
     * @param odataType the odataType value to set.
     * @return the UrlFileExtensionConditionParameters object itself.
     */
    public UrlFileExtensionConditionParameters withOdataType(String odataType) {
        this.odataType = odataType;
        return this;
    }

    /**
     * Get the extensions property: A list of extensions for the condition of the delivery rule.
     *
     * @return the extensions value.
     */
    public List<String> extensions() {
        return this.extensions;
    }

    /**
     * Set the extensions property: A list of extensions for the condition of the delivery rule.
     *
     * @param extensions the extensions value to set.
     * @return the UrlFileExtensionConditionParameters object itself.
     */
    public UrlFileExtensionConditionParameters withExtensions(List<String> extensions) {
        this.extensions = extensions;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (extensions() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property extensions in model UrlFileExtensionConditionParameters"));
        }
    }
}
