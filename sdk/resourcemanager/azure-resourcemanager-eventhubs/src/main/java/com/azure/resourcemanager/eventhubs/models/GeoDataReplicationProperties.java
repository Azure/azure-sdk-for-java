// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventhubs.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * GeoDR Replication properties.
 */
@Fluent
public final class GeoDataReplicationProperties {
    /*
     * The maximum acceptable lag for data replication operations from the primary replica to a quorum of secondary
     * replicas. When the lag exceeds the configured amount, operations on the primary replica will be failed. The
     * allowed values are 0 and 5 minutes to 1 day.
     */
    @JsonProperty(value = "maxReplicationLagDurationInSeconds")
    private Integer maxReplicationLagDurationInSeconds;

    /*
     * A list of regions where replicas of the namespace are maintained.
     */
    @JsonProperty(value = "locations")
    private List<NamespaceReplicaLocation> locations;

    /**
     * Creates an instance of GeoDataReplicationProperties class.
     */
    public GeoDataReplicationProperties() {
    }

    /**
     * Get the maxReplicationLagDurationInSeconds property: The maximum acceptable lag for data replication operations
     * from the primary replica to a quorum of secondary replicas. When the lag exceeds the configured amount,
     * operations on the primary replica will be failed. The allowed values are 0 and 5 minutes to 1 day.
     * 
     * @return the maxReplicationLagDurationInSeconds value.
     */
    public Integer maxReplicationLagDurationInSeconds() {
        return this.maxReplicationLagDurationInSeconds;
    }

    /**
     * Set the maxReplicationLagDurationInSeconds property: The maximum acceptable lag for data replication operations
     * from the primary replica to a quorum of secondary replicas. When the lag exceeds the configured amount,
     * operations on the primary replica will be failed. The allowed values are 0 and 5 minutes to 1 day.
     * 
     * @param maxReplicationLagDurationInSeconds the maxReplicationLagDurationInSeconds value to set.
     * @return the GeoDataReplicationProperties object itself.
     */
    public GeoDataReplicationProperties
        withMaxReplicationLagDurationInSeconds(Integer maxReplicationLagDurationInSeconds) {
        this.maxReplicationLagDurationInSeconds = maxReplicationLagDurationInSeconds;
        return this;
    }

    /**
     * Get the locations property: A list of regions where replicas of the namespace are maintained.
     * 
     * @return the locations value.
     */
    public List<NamespaceReplicaLocation> locations() {
        return this.locations;
    }

    /**
     * Set the locations property: A list of regions where replicas of the namespace are maintained.
     * 
     * @param locations the locations value to set.
     * @return the GeoDataReplicationProperties object itself.
     */
    public GeoDataReplicationProperties withLocations(List<NamespaceReplicaLocation> locations) {
        this.locations = locations;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (locations() != null) {
            locations().forEach(e -> e.validate());
        }
    }
}
