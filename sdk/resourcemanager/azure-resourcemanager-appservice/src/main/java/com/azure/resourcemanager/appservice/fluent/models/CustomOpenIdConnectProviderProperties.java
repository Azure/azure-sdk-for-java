// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.appservice.models.OpenIdConnectLogin;
import com.azure.resourcemanager.appservice.models.OpenIdConnectRegistration;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** CustomOpenIdConnectProvider resource specific properties. */
@Fluent
public final class CustomOpenIdConnectProviderProperties {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(CustomOpenIdConnectProviderProperties.class);

    /*
     * <code>false</code> if the custom Open ID provider provider should not be
     * enabled; otherwise, <code>true</code>.
     */
    @JsonProperty(value = "enabled")
    private Boolean enabled;

    /*
     * The configuration settings of the app registration for the custom Open
     * ID Connect provider.
     */
    @JsonProperty(value = "registration")
    private OpenIdConnectRegistration registration;

    /*
     * The configuration settings of the login flow of the custom Open ID
     * Connect provider.
     */
    @JsonProperty(value = "login")
    private OpenIdConnectLogin login;

    /**
     * Get the enabled property: &lt;code&gt;false&lt;/code&gt; if the custom Open ID provider provider should not be
     * enabled; otherwise, &lt;code&gt;true&lt;/code&gt;.
     *
     * @return the enabled value.
     */
    public Boolean enabled() {
        return this.enabled;
    }

    /**
     * Set the enabled property: &lt;code&gt;false&lt;/code&gt; if the custom Open ID provider provider should not be
     * enabled; otherwise, &lt;code&gt;true&lt;/code&gt;.
     *
     * @param enabled the enabled value to set.
     * @return the CustomOpenIdConnectProviderProperties object itself.
     */
    public CustomOpenIdConnectProviderProperties withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Get the registration property: The configuration settings of the app registration for the custom Open ID Connect
     * provider.
     *
     * @return the registration value.
     */
    public OpenIdConnectRegistration registration() {
        return this.registration;
    }

    /**
     * Set the registration property: The configuration settings of the app registration for the custom Open ID Connect
     * provider.
     *
     * @param registration the registration value to set.
     * @return the CustomOpenIdConnectProviderProperties object itself.
     */
    public CustomOpenIdConnectProviderProperties withRegistration(OpenIdConnectRegistration registration) {
        this.registration = registration;
        return this;
    }

    /**
     * Get the login property: The configuration settings of the login flow of the custom Open ID Connect provider.
     *
     * @return the login value.
     */
    public OpenIdConnectLogin login() {
        return this.login;
    }

    /**
     * Set the login property: The configuration settings of the login flow of the custom Open ID Connect provider.
     *
     * @param login the login value to set.
     * @return the CustomOpenIdConnectProviderProperties object itself.
     */
    public CustomOpenIdConnectProviderProperties withLogin(OpenIdConnectLogin login) {
        this.login = login;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (registration() != null) {
            registration().validate();
        }
        if (login() != null) {
            login().validate();
        }
    }
}
