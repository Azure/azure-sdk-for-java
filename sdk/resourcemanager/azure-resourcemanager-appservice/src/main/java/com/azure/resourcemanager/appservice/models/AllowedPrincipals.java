// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.appservice.fluent.models.AllowedPrincipalsProperties;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The configuration settings of the Azure Active Directory allowed principals. */
@Fluent
public final class AllowedPrincipals extends ProxyOnlyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(AllowedPrincipals.class);

    /*
     * AllowedPrincipals resource specific properties
     */
    @JsonProperty(value = "properties")
    private AllowedPrincipalsProperties innerProperties;

    /**
     * Get the innerProperties property: AllowedPrincipals resource specific properties.
     *
     * @return the innerProperties value.
     */
    private AllowedPrincipalsProperties innerProperties() {
        return this.innerProperties;
    }

    /** {@inheritDoc} */
    @Override
    public AllowedPrincipals withKind(String kind) {
        super.withKind(kind);
        return this;
    }

    /**
     * Get the groups property: The list of the allowed groups.
     *
     * @return the groups value.
     */
    public List<String> groups() {
        return this.innerProperties() == null ? null : this.innerProperties().groups();
    }

    /**
     * Set the groups property: The list of the allowed groups.
     *
     * @param groups the groups value to set.
     * @return the AllowedPrincipals object itself.
     */
    public AllowedPrincipals withGroups(List<String> groups) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AllowedPrincipalsProperties();
        }
        this.innerProperties().withGroups(groups);
        return this;
    }

    /**
     * Get the identities property: The list of the allowed identities.
     *
     * @return the identities value.
     */
    public List<String> identities() {
        return this.innerProperties() == null ? null : this.innerProperties().identities();
    }

    /**
     * Set the identities property: The list of the allowed identities.
     *
     * @param identities the identities value to set.
     * @return the AllowedPrincipals object itself.
     */
    public AllowedPrincipals withIdentities(List<String> identities) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AllowedPrincipalsProperties();
        }
        this.innerProperties().withIdentities(identities);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
