// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerinstance.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedFlux;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.containerinstance.fluent.models.ContainerGroupProfileInner;
import com.azure.resourcemanager.containerinstance.models.ContainerGroupProfilePatch;
import com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete;
import com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet;
import com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing;
import reactor.core.publisher.Mono;

/**
 * An instance of this class provides access to all the operations defined in ContainerGroupProfilesClient.
 */
public interface ContainerGroupProfilesClient extends InnerSupportsGet<ContainerGroupProfileInner>,
    InnerSupportsListing<ContainerGroupProfileInner>, InnerSupportsDelete<Void> {
    /**
     * Get a list of container group profiles in the specified subscription.
     * 
     * Get a list of container group profiles in the specified subscription. This operation returns properties of each
     * container group profile including containers, image registry credentials, restart policy, IP address type, OS
     * type,volumes,current revision number, etc.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of container group profiles in the specified subscription as paginated response with
     * {@link PagedFlux}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedFlux<ContainerGroupProfileInner> listAsync();

    /**
     * Get a list of container group profiles in the specified subscription.
     * 
     * Get a list of container group profiles in the specified subscription. This operation returns properties of each
     * container group profile including containers, image registry credentials, restart policy, IP address type, OS
     * type,volumes,current revision number, etc.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of container group profiles in the specified subscription as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ContainerGroupProfileInner> list();

    /**
     * Get a list of container group profiles in the specified subscription.
     * 
     * Get a list of container group profiles in the specified subscription. This operation returns properties of each
     * container group profile including containers, image registry credentials, restart policy, IP address type, OS
     * type,volumes,current revision number, etc.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of container group profiles in the specified subscription as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ContainerGroupProfileInner> list(Context context);

    /**
     * Get a list of container group profiles in the specified subscription and resource group.
     * 
     * Get a list of container group profiles in a specified subscription and resource group. This operation returns
     * properties of each container group profile including containers, image registry credentials, restart policy, IP
     * address type, OS type volumes, current revision number, etc.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of container group profiles in a specified subscription and resource group as paginated response
     * with {@link PagedFlux}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedFlux<ContainerGroupProfileInner> listByResourceGroupAsync(String resourceGroupName);

    /**
     * Get a list of container group profiles in the specified subscription and resource group.
     * 
     * Get a list of container group profiles in a specified subscription and resource group. This operation returns
     * properties of each container group profile including containers, image registry credentials, restart policy, IP
     * address type, OS type volumes, current revision number, etc.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of container group profiles in a specified subscription and resource group as paginated response
     * with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ContainerGroupProfileInner> listByResourceGroup(String resourceGroupName);

    /**
     * Get a list of container group profiles in the specified subscription and resource group.
     * 
     * Get a list of container group profiles in a specified subscription and resource group. This operation returns
     * properties of each container group profile including containers, image registry credentials, restart policy, IP
     * address type, OS type volumes, current revision number, etc.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of container group profiles in a specified subscription and resource group as paginated response
     * with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ContainerGroupProfileInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Get the properties of the specified container group profile.
     * 
     * Gets the properties of the specified container group profile in the specified subscription and resource group.
     * The operation returns the properties of container group profile including containers, image registry credentials,
     * restart policy, IP address type, OS type, volumes, current revision number, etc.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerGroupProfileName The name of the container group profile.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the properties of the specified container group profile in the specified subscription and resource group
     * along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<ContainerGroupProfileInner>> getByResourceGroupWithResponseAsync(String resourceGroupName,
        String containerGroupProfileName);

    /**
     * Get the properties of the specified container group profile.
     * 
     * Gets the properties of the specified container group profile in the specified subscription and resource group.
     * The operation returns the properties of container group profile including containers, image registry credentials,
     * restart policy, IP address type, OS type, volumes, current revision number, etc.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerGroupProfileName The name of the container group profile.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the properties of the specified container group profile in the specified subscription and resource group
     * on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<ContainerGroupProfileInner> getByResourceGroupAsync(String resourceGroupName,
        String containerGroupProfileName);

    /**
     * Get the properties of the specified container group profile.
     * 
     * Gets the properties of the specified container group profile in the specified subscription and resource group.
     * The operation returns the properties of container group profile including containers, image registry credentials,
     * restart policy, IP address type, OS type, volumes, current revision number, etc.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerGroupProfileName The name of the container group profile.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the properties of the specified container group profile in the specified subscription and resource group
     * along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ContainerGroupProfileInner> getByResourceGroupWithResponse(String resourceGroupName,
        String containerGroupProfileName, Context context);

    /**
     * Get the properties of the specified container group profile.
     * 
     * Gets the properties of the specified container group profile in the specified subscription and resource group.
     * The operation returns the properties of container group profile including containers, image registry credentials,
     * restart policy, IP address type, OS type, volumes, current revision number, etc.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerGroupProfileName The name of the container group profile.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the properties of the specified container group profile in the specified subscription and resource group.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ContainerGroupProfileInner getByResourceGroup(String resourceGroupName, String containerGroupProfileName);

    /**
     * Create or update container group profiles.
     * 
     * Create or update container group profiles with specified configurations.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerGroupProfileName The name of the container group profile.
     * @param containerGroupProfile The properties of the container group profile to be created or updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a container group profile along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<ContainerGroupProfileInner>> createOrUpdateWithResponseAsync(String resourceGroupName,
        String containerGroupProfileName, ContainerGroupProfileInner containerGroupProfile);

    /**
     * Create or update container group profiles.
     * 
     * Create or update container group profiles with specified configurations.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerGroupProfileName The name of the container group profile.
     * @param containerGroupProfile The properties of the container group profile to be created or updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a container group profile on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<ContainerGroupProfileInner> createOrUpdateAsync(String resourceGroupName, String containerGroupProfileName,
        ContainerGroupProfileInner containerGroupProfile);

    /**
     * Create or update container group profiles.
     * 
     * Create or update container group profiles with specified configurations.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerGroupProfileName The name of the container group profile.
     * @param containerGroupProfile The properties of the container group profile to be created or updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a container group profile along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ContainerGroupProfileInner> createOrUpdateWithResponse(String resourceGroupName,
        String containerGroupProfileName, ContainerGroupProfileInner containerGroupProfile, Context context);

    /**
     * Create or update container group profiles.
     * 
     * Create or update container group profiles with specified configurations.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerGroupProfileName The name of the container group profile.
     * @param containerGroupProfile The properties of the container group profile to be created or updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a container group profile.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ContainerGroupProfileInner createOrUpdate(String resourceGroupName, String containerGroupProfileName,
        ContainerGroupProfileInner containerGroupProfile);

    /**
     * Patch container group profiles.
     * 
     * Patches container group profile with specified properties.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerGroupProfileName The name of the container group profile.
     * @param properties The container group profile properties that need to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a container group profile along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<ContainerGroupProfileInner>> patchWithResponseAsync(String resourceGroupName,
        String containerGroupProfileName, ContainerGroupProfilePatch properties);

    /**
     * Patch container group profiles.
     * 
     * Patches container group profile with specified properties.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerGroupProfileName The name of the container group profile.
     * @param properties The container group profile properties that need to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a container group profile on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<ContainerGroupProfileInner> patchAsync(String resourceGroupName, String containerGroupProfileName,
        ContainerGroupProfilePatch properties);

    /**
     * Patch container group profiles.
     * 
     * Patches container group profile with specified properties.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerGroupProfileName The name of the container group profile.
     * @param properties The container group profile properties that need to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a container group profile along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ContainerGroupProfileInner> patchWithResponse(String resourceGroupName, String containerGroupProfileName,
        ContainerGroupProfilePatch properties, Context context);

    /**
     * Patch container group profiles.
     * 
     * Patches container group profile with specified properties.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerGroupProfileName The name of the container group profile.
     * @param properties The container group profile properties that need to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a container group profile.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ContainerGroupProfileInner patch(String resourceGroupName, String containerGroupProfileName,
        ContainerGroupProfilePatch properties);

    /**
     * Delete the specified container group profile.
     * 
     * Delete the specified container group profile in the specified subscription and resource group. The operation does
     * not delete other resources provided by the user, such as volumes.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerGroupProfileName The name of the container group profile.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<Void>> deleteWithResponseAsync(String resourceGroupName, String containerGroupProfileName);

    /**
     * Delete the specified container group profile.
     * 
     * Delete the specified container group profile in the specified subscription and resource group. The operation does
     * not delete other resources provided by the user, such as volumes.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerGroupProfileName The name of the container group profile.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return A {@link Mono} that completes when a successful response is received.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Void> deleteAsync(String resourceGroupName, String containerGroupProfileName);

    /**
     * Delete the specified container group profile.
     * 
     * Delete the specified container group profile in the specified subscription and resource group. The operation does
     * not delete other resources provided by the user, such as volumes.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerGroupProfileName The name of the container group profile.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String containerGroupProfileName, Context context);

    /**
     * Delete the specified container group profile.
     * 
     * Delete the specified container group profile in the specified subscription and resource group. The operation does
     * not delete other resources provided by the user, such as volumes.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerGroupProfileName The name of the container group profile.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String containerGroupProfileName);
}
