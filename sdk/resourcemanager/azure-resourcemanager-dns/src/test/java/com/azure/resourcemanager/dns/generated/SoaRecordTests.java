// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dns.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dns.models.SoaRecord;
import org.junit.jupiter.api.Assertions;

public final class SoaRecordTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SoaRecord model = BinaryData.fromString(
            "{\"host\":\"snb\",\"email\":\"qabnmoc\",\"serialNumber\":2499108016153241620,\"refreshTime\":5770924139957385488,\"retryTime\":8690617744614156568,\"expireTime\":5870721365546095663,\"minimumTTL\":3628038635149128704}")
            .toObject(SoaRecord.class);
        Assertions.assertEquals("snb", model.host());
        Assertions.assertEquals("qabnmoc", model.email());
        Assertions.assertEquals(2499108016153241620L, model.serialNumber());
        Assertions.assertEquals(5770924139957385488L, model.refreshTime());
        Assertions.assertEquals(8690617744614156568L, model.retryTime());
        Assertions.assertEquals(5870721365546095663L, model.expireTime());
        Assertions.assertEquals(3628038635149128704L, model.minimumTtl());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SoaRecord model = new SoaRecord().withHost("snb")
            .withEmail("qabnmoc")
            .withSerialNumber(2499108016153241620L)
            .withRefreshTime(5770924139957385488L)
            .withRetryTime(8690617744614156568L)
            .withExpireTime(5870721365546095663L)
            .withMinimumTtl(3628038635149128704L);
        model = BinaryData.fromObject(model).toObject(SoaRecord.class);
        Assertions.assertEquals("snb", model.host());
        Assertions.assertEquals("qabnmoc", model.email());
        Assertions.assertEquals(2499108016153241620L, model.serialNumber());
        Assertions.assertEquals(5770924139957385488L, model.refreshTime());
        Assertions.assertEquals(8690617744614156568L, model.retryTime());
        Assertions.assertEquals(5870721365546095663L, model.expireTime());
        Assertions.assertEquals(3628038635149128704L, model.minimumTtl());
    }
}
