// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dns.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A digest.
 */
@Fluent
public final class Digest implements JsonSerializable<Digest> {
    /*
     * The digest algorithm type represents the standard digest algorithm number used to construct the digest. See:
     * https://www.iana.org/assignments/ds-rr-types/ds-rr-types.xhtml
     */
    private Integer algorithmType;

    /*
     * The digest value is a cryptographic hash value of the referenced DNSKEY Resource Record.
     */
    private String value;

    /**
     * Creates an instance of Digest class.
     */
    public Digest() {
    }

    /**
     * Get the algorithmType property: The digest algorithm type represents the standard digest algorithm number used to
     * construct the digest. See: https://www.iana.org/assignments/ds-rr-types/ds-rr-types.xhtml.
     * 
     * @return the algorithmType value.
     */
    public Integer algorithmType() {
        return this.algorithmType;
    }

    /**
     * Set the algorithmType property: The digest algorithm type represents the standard digest algorithm number used to
     * construct the digest. See: https://www.iana.org/assignments/ds-rr-types/ds-rr-types.xhtml.
     * 
     * @param algorithmType the algorithmType value to set.
     * @return the Digest object itself.
     */
    public Digest withAlgorithmType(Integer algorithmType) {
        this.algorithmType = algorithmType;
        return this;
    }

    /**
     * Get the value property: The digest value is a cryptographic hash value of the referenced DNSKEY Resource Record.
     * 
     * @return the value value.
     */
    public String value() {
        return this.value;
    }

    /**
     * Set the value property: The digest value is a cryptographic hash value of the referenced DNSKEY Resource Record.
     * 
     * @param value the value value to set.
     * @return the Digest object itself.
     */
    public Digest withValue(String value) {
        this.value = value;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("algorithmType", this.algorithmType);
        jsonWriter.writeStringField("value", this.value);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of Digest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of Digest if the JsonReader was pointing to an instance of it, or null if it was pointing to
     * JSON null.
     * @throws IOException If an error occurs while reading the Digest.
     */
    public static Digest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            Digest deserializedDigest = new Digest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("algorithmType".equals(fieldName)) {
                    deserializedDigest.algorithmType = reader.getNullable(JsonReader::getInt);
                } else if ("value".equals(fieldName)) {
                    deserializedDigest.value = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDigest;
        });
    }
}
