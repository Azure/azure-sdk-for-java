// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Properties of a monitoring account. */
@Immutable
public class MonitoringAccount {
    /*
     * The immutable ID of the monitoring account. This property is read-only.
     */
    @JsonProperty(value = "accountId", access = JsonProperty.Access.WRITE_ONLY)
    private String accountId;

    /*
     * Information about metrics for the monitoring account
     */
    @JsonProperty(value = "metrics", access = JsonProperty.Access.WRITE_ONLY)
    private MonitoringAccountMetrics metrics;

    /*
     * The provisioning state of the monitoring account. Set to Succeeded if everything is healthy.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * The Data Collection Rule and Endpoint used for ingestion by default.
     */
    @JsonProperty(value = "defaultIngestionSettings", access = JsonProperty.Access.WRITE_ONLY)
    private MonitoringAccountDefaultIngestionSettings defaultIngestionSettings;

    /** Creates an instance of MonitoringAccount class. */
    public MonitoringAccount() {
    }

    /**
     * Get the accountId property: The immutable ID of the monitoring account. This property is read-only.
     *
     * @return the accountId value.
     */
    public String accountId() {
        return this.accountId;
    }

    /**
     * Get the metrics property: Information about metrics for the monitoring account.
     *
     * @return the metrics value.
     */
    public MonitoringAccountMetrics metrics() {
        return this.metrics;
    }

    /**
     * Get the provisioningState property: The provisioning state of the monitoring account. Set to Succeeded if
     * everything is healthy.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the defaultIngestionSettings property: The Data Collection Rule and Endpoint used for ingestion by default.
     *
     * @return the defaultIngestionSettings value.
     */
    public MonitoringAccountDefaultIngestionSettings defaultIngestionSettings() {
        return this.defaultIngestionSettings;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (metrics() != null) {
            metrics().validate();
        }
        if (defaultIngestionSettings() != null) {
            defaultIngestionSettings().validate();
        }
    }
}
