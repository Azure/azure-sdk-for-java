// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedFlux;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.monitor.fluent.models.AzureMonitorWorkspaceResourceInner;
import com.azure.resourcemanager.monitor.models.AzureMonitorWorkspaceResourceForUpdate;
import com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete;
import com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet;
import com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing;
import reactor.core.publisher.Mono;

/**
 * An instance of this class provides access to all the operations defined in AzureMonitorWorkspacesClient.
 */
public interface AzureMonitorWorkspacesClient extends InnerSupportsGet<AzureMonitorWorkspaceResourceInner>, InnerSupportsListing<AzureMonitorWorkspaceResourceInner>, InnerSupportsDelete<Void> {
    /**
     * Lists all workspaces in the specified resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a pageable list of resources as paginated response with {@link PagedFlux}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedFlux<AzureMonitorWorkspaceResourceInner> listByResourceGroupAsync(String resourceGroupName);

    /**
     * Lists all workspaces in the specified resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a pageable list of resources as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AzureMonitorWorkspaceResourceInner> listByResourceGroup(String resourceGroupName);

    /**
     * Lists all workspaces in the specified resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a pageable list of resources as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AzureMonitorWorkspaceResourceInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Lists all workspaces in the specified subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a pageable list of resources as paginated response with {@link PagedFlux}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedFlux<AzureMonitorWorkspaceResourceInner> listAsync();

    /**
     * Lists all workspaces in the specified subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a pageable list of resources as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AzureMonitorWorkspaceResourceInner> list();

    /**
     * Lists all workspaces in the specified subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a pageable list of resources as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AzureMonitorWorkspaceResourceInner> list(Context context);

    /**
     * Returns the specific Azure Monitor workspace.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param azureMonitorWorkspaceName The name of the Azure Monitor workspace.  The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure Monitor Workspace definition along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<AzureMonitorWorkspaceResourceInner>> getByResourceGroupWithResponseAsync(String resourceGroupName, String azureMonitorWorkspaceName);

    /**
     * Returns the specific Azure Monitor workspace.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param azureMonitorWorkspaceName The name of the Azure Monitor workspace.  The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure Monitor Workspace definition on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<AzureMonitorWorkspaceResourceInner> getByResourceGroupAsync(String resourceGroupName, String azureMonitorWorkspaceName);

    /**
     * Returns the specific Azure Monitor workspace.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param azureMonitorWorkspaceName The name of the Azure Monitor workspace.  The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure Monitor Workspace definition along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AzureMonitorWorkspaceResourceInner> getByResourceGroupWithResponse(String resourceGroupName, String azureMonitorWorkspaceName, Context context);

    /**
     * Returns the specific Azure Monitor workspace.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param azureMonitorWorkspaceName The name of the Azure Monitor workspace.  The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure Monitor Workspace definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AzureMonitorWorkspaceResourceInner getByResourceGroup(String resourceGroupName, String azureMonitorWorkspaceName);

    /**
     * Create or update a workspace.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param azureMonitorWorkspaceName The name of the Azure Monitor workspace.  The name is case insensitive.
     * @param azureMonitorWorkspaceProperties Properties that need to be specified to create a new workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure Monitor Workspace definition along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<AzureMonitorWorkspaceResourceInner>> createWithResponseAsync(String resourceGroupName, String azureMonitorWorkspaceName, AzureMonitorWorkspaceResourceInner azureMonitorWorkspaceProperties);

    /**
     * Create or update a workspace.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param azureMonitorWorkspaceName The name of the Azure Monitor workspace.  The name is case insensitive.
     * @param azureMonitorWorkspaceProperties Properties that need to be specified to create a new workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure Monitor Workspace definition on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<AzureMonitorWorkspaceResourceInner> createAsync(String resourceGroupName, String azureMonitorWorkspaceName, AzureMonitorWorkspaceResourceInner azureMonitorWorkspaceProperties);

    /**
     * Create or update a workspace.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param azureMonitorWorkspaceName The name of the Azure Monitor workspace.  The name is case insensitive.
     * @param azureMonitorWorkspaceProperties Properties that need to be specified to create a new workspace.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure Monitor Workspace definition along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AzureMonitorWorkspaceResourceInner> createWithResponse(String resourceGroupName, String azureMonitorWorkspaceName, AzureMonitorWorkspaceResourceInner azureMonitorWorkspaceProperties, Context context);

    /**
     * Create or update a workspace.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param azureMonitorWorkspaceName The name of the Azure Monitor workspace.  The name is case insensitive.
     * @param azureMonitorWorkspaceProperties Properties that need to be specified to create a new workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure Monitor Workspace definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AzureMonitorWorkspaceResourceInner create(String resourceGroupName, String azureMonitorWorkspaceName, AzureMonitorWorkspaceResourceInner azureMonitorWorkspaceProperties);

    /**
     * Updates part of a workspace.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param azureMonitorWorkspaceName The name of the Azure Monitor workspace.  The name is case insensitive.
     * @param azureMonitorWorkspaceProperties The payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure Monitor Workspace definition along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<AzureMonitorWorkspaceResourceInner>> updateWithResponseAsync(String resourceGroupName, String azureMonitorWorkspaceName, AzureMonitorWorkspaceResourceForUpdate azureMonitorWorkspaceProperties);

    /**
     * Updates part of a workspace.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param azureMonitorWorkspaceName The name of the Azure Monitor workspace.  The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure Monitor Workspace definition on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<AzureMonitorWorkspaceResourceInner> updateAsync(String resourceGroupName, String azureMonitorWorkspaceName);

    /**
     * Updates part of a workspace.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param azureMonitorWorkspaceName The name of the Azure Monitor workspace.  The name is case insensitive.
     * @param azureMonitorWorkspaceProperties The payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure Monitor Workspace definition along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AzureMonitorWorkspaceResourceInner> updateWithResponse(String resourceGroupName, String azureMonitorWorkspaceName, AzureMonitorWorkspaceResourceForUpdate azureMonitorWorkspaceProperties, Context context);

    /**
     * Updates part of a workspace.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param azureMonitorWorkspaceName The name of the Azure Monitor workspace.  The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure Monitor Workspace definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AzureMonitorWorkspaceResourceInner update(String resourceGroupName, String azureMonitorWorkspaceName);

    /**
     * Delete a workspace.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param azureMonitorWorkspaceName The name of the Azure Monitor workspace.  The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<Void>> deleteWithResponseAsync(String resourceGroupName, String azureMonitorWorkspaceName);

    /**
     * Delete a workspace.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param azureMonitorWorkspaceName The name of the Azure Monitor workspace.  The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return A {@link Mono} that completes when a successful response is received.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Void> deleteAsync(String resourceGroupName, String azureMonitorWorkspaceName);

    /**
     * Delete a workspace.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param azureMonitorWorkspaceName The name of the Azure Monitor workspace.  The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String azureMonitorWorkspaceName, Context context);

    /**
     * Delete a workspace.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param azureMonitorWorkspaceName The name of the Azure Monitor workspace.  The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String azureMonitorWorkspaceName);
}
