// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * A CosmosDB Cassandra API data source/sink.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "component",
    defaultImpl = CosmosCassandraDataTransferDataSourceSink.class,
    visible = true)
@JsonTypeName("CosmosDBCassandra")
@Fluent
public final class CosmosCassandraDataTransferDataSourceSink extends BaseCosmosDataTransferDataSourceSink {
    /*
     * The component property.
     */
    @JsonTypeId
    @JsonProperty(value = "component", required = true)
    private DataTransferComponent component = DataTransferComponent.COSMOS_DBCASSANDRA;

    /*
     * The keyspaceName property.
     */
    @JsonProperty(value = "keyspaceName", required = true)
    private String keyspaceName;

    /*
     * The tableName property.
     */
    @JsonProperty(value = "tableName", required = true)
    private String tableName;

    /**
     * Creates an instance of CosmosCassandraDataTransferDataSourceSink class.
     */
    public CosmosCassandraDataTransferDataSourceSink() {
    }

    /**
     * Get the component property: The component property.
     * 
     * @return the component value.
     */
    @Override
    public DataTransferComponent component() {
        return this.component;
    }

    /**
     * Get the keyspaceName property: The keyspaceName property.
     * 
     * @return the keyspaceName value.
     */
    public String keyspaceName() {
        return this.keyspaceName;
    }

    /**
     * Set the keyspaceName property: The keyspaceName property.
     * 
     * @param keyspaceName the keyspaceName value to set.
     * @return the CosmosCassandraDataTransferDataSourceSink object itself.
     */
    public CosmosCassandraDataTransferDataSourceSink withKeyspaceName(String keyspaceName) {
        this.keyspaceName = keyspaceName;
        return this;
    }

    /**
     * Get the tableName property: The tableName property.
     * 
     * @return the tableName value.
     */
    public String tableName() {
        return this.tableName;
    }

    /**
     * Set the tableName property: The tableName property.
     * 
     * @param tableName the tableName value to set.
     * @return the CosmosCassandraDataTransferDataSourceSink object itself.
     */
    public CosmosCassandraDataTransferDataSourceSink withTableName(String tableName) {
        this.tableName = tableName;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CosmosCassandraDataTransferDataSourceSink withRemoteAccountName(String remoteAccountName) {
        super.withRemoteAccountName(remoteAccountName);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (keyspaceName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property keyspaceName in model CosmosCassandraDataTransferDataSourceSink"));
        }
        if (tableName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property tableName in model CosmosCassandraDataTransferDataSourceSink"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(CosmosCassandraDataTransferDataSourceSink.class);
}
