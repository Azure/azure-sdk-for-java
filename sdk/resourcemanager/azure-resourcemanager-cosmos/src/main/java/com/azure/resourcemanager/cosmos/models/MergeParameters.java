// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The properties of an Azure Cosmos DB merge operations.
 */
@Fluent
public final class MergeParameters implements JsonSerializable<MergeParameters> {
    /*
     * Specifies whether the operation is a real merge operation or a simulation.
     */
    private Boolean isDryRun;

    /**
     * Creates an instance of MergeParameters class.
     */
    public MergeParameters() {
    }

    /**
     * Get the isDryRun property: Specifies whether the operation is a real merge operation or a simulation.
     * 
     * @return the isDryRun value.
     */
    public Boolean isDryRun() {
        return this.isDryRun;
    }

    /**
     * Set the isDryRun property: Specifies whether the operation is a real merge operation or a simulation.
     * 
     * @param isDryRun the isDryRun value to set.
     * @return the MergeParameters object itself.
     */
    public MergeParameters withIsDryRun(Boolean isDryRun) {
        this.isDryRun = isDryRun;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("isDryRun", this.isDryRun);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MergeParameters from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MergeParameters if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the MergeParameters.
     */
    public static MergeParameters fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MergeParameters deserializedMergeParameters = new MergeParameters();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("isDryRun".equals(fieldName)) {
                    deserializedMergeParameters.isDryRun = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMergeParameters;
        });
    }
}
