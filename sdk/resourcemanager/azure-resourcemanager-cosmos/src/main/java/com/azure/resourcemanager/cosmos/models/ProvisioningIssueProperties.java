// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.List;

/**
 * Details of a provisioning issue for a network security perimeter (NSP) configuration. Resource providers should
 * generate separate provisioning issue elements for each separate issue detected, and include a meaningful and
 * distinctive description, as well as any appropriate suggestedResourceIds and suggestedAccessRules.
 */
@Immutable
public final class ProvisioningIssueProperties {
    /*
     * Type of issue
     */
    @JsonProperty(value = "issueType", access = JsonProperty.Access.WRITE_ONLY)
    private IssueType issueType;

    /*
     * Severity of the issue.
     */
    @JsonProperty(value = "severity", access = JsonProperty.Access.WRITE_ONLY)
    private Severity severity;

    /*
     * Description of the issue
     */
    @JsonProperty(value = "description", access = JsonProperty.Access.WRITE_ONLY)
    private String description;

    /*
     * Fully qualified resource IDs of suggested resources that can be associated to the network security perimeter (NSP) to remediate the issue.
     */
    @JsonProperty(value = "suggestedResourceIds", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> suggestedResourceIds;

    /*
     * Access rules that can be added to the network security profile (NSP) to remediate the issue.
     */
    @JsonProperty(value = "suggestedAccessRules", access = JsonProperty.Access.WRITE_ONLY)
    private List<AccessRule> suggestedAccessRules;

    /**
     * Creates an instance of ProvisioningIssueProperties class.
     */
    public ProvisioningIssueProperties() {
    }

    /**
     * Get the issueType property: Type of issue.
     *
     * @return the issueType value.
     */
    public IssueType issueType() {
        return this.issueType;
    }

    /**
     * Get the severity property: Severity of the issue.
     *
     * @return the severity value.
     */
    public Severity severity() {
        return this.severity;
    }

    /**
     * Get the description property: Description of the issue.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Get the suggestedResourceIds property: Fully qualified resource IDs of suggested resources that can be associated
     * to the network security perimeter (NSP) to remediate the issue.
     *
     * @return the suggestedResourceIds value.
     */
    public List<String> suggestedResourceIds() {
        return this.suggestedResourceIds;
    }

    /**
     * Get the suggestedAccessRules property: Access rules that can be added to the network security profile (NSP) to
     * remediate the issue.
     *
     * @return the suggestedAccessRules value.
     */
    public List<AccessRule> suggestedAccessRules() {
        return this.suggestedAccessRules;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (suggestedAccessRules() != null) {
            suggestedAccessRules().forEach(e -> e.validate());
        }
    }
}
