// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** A CosmosDB Cassandra API data source/sink. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "component")
@JsonTypeName("CosmosDBMongo")
@Fluent
public final class CosmosMongoDataTransferDataSourceSink extends DataTransferDataSourceSink {
    /*
     * The databaseName property.
     */
    @JsonProperty(value = "databaseName", required = true)
    private String databaseName;

    /*
     * The collectionName property.
     */
    @JsonProperty(value = "collectionName", required = true)
    private String collectionName;

    /** Creates an instance of CosmosMongoDataTransferDataSourceSink class. */
    public CosmosMongoDataTransferDataSourceSink() {
    }

    /**
     * Get the databaseName property: The databaseName property.
     *
     * @return the databaseName value.
     */
    public String databaseName() {
        return this.databaseName;
    }

    /**
     * Set the databaseName property: The databaseName property.
     *
     * @param databaseName the databaseName value to set.
     * @return the CosmosMongoDataTransferDataSourceSink object itself.
     */
    public CosmosMongoDataTransferDataSourceSink withDatabaseName(String databaseName) {
        this.databaseName = databaseName;
        return this;
    }

    /**
     * Get the collectionName property: The collectionName property.
     *
     * @return the collectionName value.
     */
    public String collectionName() {
        return this.collectionName;
    }

    /**
     * Set the collectionName property: The collectionName property.
     *
     * @param collectionName the collectionName value to set.
     * @return the CosmosMongoDataTransferDataSourceSink object itself.
     */
    public CosmosMongoDataTransferDataSourceSink withCollectionName(String collectionName) {
        this.collectionName = collectionName;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (databaseName() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property databaseName in model CosmosMongoDataTransferDataSourceSink"));
        }
        if (collectionName() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property collectionName in model CosmosMongoDataTransferDataSourceSink"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(CosmosMongoDataTransferDataSourceSink.class);
}
