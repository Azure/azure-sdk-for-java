// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Specification for a node group. */
@Fluent
public final class NodeGroupSpec extends NodeGroupProperties {
    /*
     * The node type deployed in the node group.
     */
    @JsonProperty(value = "kind")
    private NodeKind kind;

    /*
     * The number of nodes in the node group.
     */
    @JsonProperty(value = "nodeCount")
    private Integer nodeCount;

    /** Creates an instance of NodeGroupSpec class. */
    public NodeGroupSpec() {
    }

    /**
     * Get the kind property: The node type deployed in the node group.
     *
     * @return the kind value.
     */
    public NodeKind kind() {
        return this.kind;
    }

    /**
     * Set the kind property: The node type deployed in the node group.
     *
     * @param kind the kind value to set.
     * @return the NodeGroupSpec object itself.
     */
    public NodeGroupSpec withKind(NodeKind kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Get the nodeCount property: The number of nodes in the node group.
     *
     * @return the nodeCount value.
     */
    public Integer nodeCount() {
        return this.nodeCount;
    }

    /**
     * Set the nodeCount property: The number of nodes in the node group.
     *
     * @param nodeCount the nodeCount value to set.
     * @return the NodeGroupSpec object itself.
     */
    public NodeGroupSpec withNodeCount(Integer nodeCount) {
        this.nodeCount = nodeCount;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NodeGroupSpec withSku(String sku) {
        super.withSku(sku);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NodeGroupSpec withDiskSizeGB(Long diskSizeGB) {
        super.withDiskSizeGB(diskSizeGB);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NodeGroupSpec withEnableHa(Boolean enableHa) {
        super.withEnableHa(enableHa);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
