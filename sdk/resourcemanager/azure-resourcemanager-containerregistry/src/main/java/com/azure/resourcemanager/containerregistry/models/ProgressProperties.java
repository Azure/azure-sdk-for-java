// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerregistry.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The ProgressProperties model.
 */
@Fluent
public final class ProgressProperties implements JsonSerializable<ProgressProperties> {
    /*
     * The percentage complete of the copy operation.
     */
    private String percentage;

    /**
     * Creates an instance of ProgressProperties class.
     */
    public ProgressProperties() {
    }

    /**
     * Get the percentage property: The percentage complete of the copy operation.
     * 
     * @return the percentage value.
     */
    public String percentage() {
        return this.percentage;
    }

    /**
     * Set the percentage property: The percentage complete of the copy operation.
     * 
     * @param percentage the percentage value to set.
     * @return the ProgressProperties object itself.
     */
    public ProgressProperties withPercentage(String percentage) {
        this.percentage = percentage;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("percentage", this.percentage);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ProgressProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ProgressProperties if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ProgressProperties.
     */
    public static ProgressProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ProgressProperties deserializedProgressProperties = new ProgressProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("percentage".equals(fieldName)) {
                    deserializedProgressProperties.percentage = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedProgressProperties;
        });
    }
}
