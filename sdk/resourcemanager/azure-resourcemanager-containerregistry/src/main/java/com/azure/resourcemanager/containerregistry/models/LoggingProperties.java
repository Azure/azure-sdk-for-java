// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerregistry.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The logging properties of the connected registry. */
@Fluent
public final class LoggingProperties {
    /*
     * The verbosity of logs persisted on the connected registry.
     */
    @JsonProperty(value = "logLevel")
    private LogLevel logLevel;

    /*
     * Indicates whether audit logs are enabled on the connected registry.
     */
    @JsonProperty(value = "auditLogStatus")
    private AuditLogStatus auditLogStatus;

    /** Creates an instance of LoggingProperties class. */
    public LoggingProperties() {
    }

    /**
     * Get the logLevel property: The verbosity of logs persisted on the connected registry.
     *
     * @return the logLevel value.
     */
    public LogLevel logLevel() {
        return this.logLevel;
    }

    /**
     * Set the logLevel property: The verbosity of logs persisted on the connected registry.
     *
     * @param logLevel the logLevel value to set.
     * @return the LoggingProperties object itself.
     */
    public LoggingProperties withLogLevel(LogLevel logLevel) {
        this.logLevel = logLevel;
        return this;
    }

    /**
     * Get the auditLogStatus property: Indicates whether audit logs are enabled on the connected registry.
     *
     * @return the auditLogStatus value.
     */
    public AuditLogStatus auditLogStatus() {
        return this.auditLogStatus;
    }

    /**
     * Set the auditLogStatus property: Indicates whether audit logs are enabled on the connected registry.
     *
     * @param auditLogStatus the auditLogStatus value to set.
     * @return the LoggingProperties object itself.
     */
    public LoggingProperties withAuditLogStatus(AuditLogStatus auditLogStatus) {
        this.auditLogStatus = auditLogStatus;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
