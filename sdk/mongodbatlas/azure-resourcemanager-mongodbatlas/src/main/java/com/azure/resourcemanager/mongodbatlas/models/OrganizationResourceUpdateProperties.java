// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.mongodbatlas.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The updatable properties of the OrganizationResource.
 */
@Fluent
public final class OrganizationResourceUpdateProperties
    implements JsonSerializable<OrganizationResourceUpdateProperties> {
    /*
     * Details of the user.
     */
    private UserDetails user;

    /*
     * MongoDB properties
     */
    private PartnerProperties partnerProperties;

    /**
     * Creates an instance of OrganizationResourceUpdateProperties class.
     */
    public OrganizationResourceUpdateProperties() {
    }

    /**
     * Get the user property: Details of the user.
     * 
     * @return the user value.
     */
    public UserDetails user() {
        return this.user;
    }

    /**
     * Set the user property: Details of the user.
     * 
     * @param user the user value to set.
     * @return the OrganizationResourceUpdateProperties object itself.
     */
    public OrganizationResourceUpdateProperties withUser(UserDetails user) {
        this.user = user;
        return this;
    }

    /**
     * Get the partnerProperties property: MongoDB properties.
     * 
     * @return the partnerProperties value.
     */
    public PartnerProperties partnerProperties() {
        return this.partnerProperties;
    }

    /**
     * Set the partnerProperties property: MongoDB properties.
     * 
     * @param partnerProperties the partnerProperties value to set.
     * @return the OrganizationResourceUpdateProperties object itself.
     */
    public OrganizationResourceUpdateProperties withPartnerProperties(PartnerProperties partnerProperties) {
        this.partnerProperties = partnerProperties;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("user", this.user);
        jsonWriter.writeJsonField("partnerProperties", this.partnerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OrganizationResourceUpdateProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of OrganizationResourceUpdateProperties if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the OrganizationResourceUpdateProperties.
     */
    public static OrganizationResourceUpdateProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OrganizationResourceUpdateProperties deserializedOrganizationResourceUpdateProperties
                = new OrganizationResourceUpdateProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("user".equals(fieldName)) {
                    deserializedOrganizationResourceUpdateProperties.user = UserDetails.fromJson(reader);
                } else if ("partnerProperties".equals(fieldName)) {
                    deserializedOrganizationResourceUpdateProperties.partnerProperties
                        = PartnerProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedOrganizationResourceUpdateProperties;
        });
    }
}
