// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.mongodbatlas.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mongodbatlas.models.OrganizationResourceUpdateProperties;
import com.azure.resourcemanager.mongodbatlas.models.PartnerProperties;
import com.azure.resourcemanager.mongodbatlas.models.UserDetails;
import org.junit.jupiter.api.Assertions;

public final class OrganizationResourceUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OrganizationResourceUpdateProperties model = BinaryData.fromString(
            "{\"user\":{\"firstName\":\"oifiyipjxsqwpgr\",\"lastName\":\"bznorcjxvsnby\",\"emailAddress\":\"qabnmoc\",\"upn\":\"ysh\",\"phoneNumber\":\"zafb\",\"companyName\":\"j\"},\"partnerProperties\":{\"organizationId\":\"toqcjmklja\",\"redirectUrl\":\"qidtqajzyu\",\"organizationName\":\"pku\"}}")
            .toObject(OrganizationResourceUpdateProperties.class);
        Assertions.assertEquals("oifiyipjxsqwpgr", model.user().firstName());
        Assertions.assertEquals("bznorcjxvsnby", model.user().lastName());
        Assertions.assertEquals("qabnmoc", model.user().emailAddress());
        Assertions.assertEquals("ysh", model.user().upn());
        Assertions.assertEquals("zafb", model.user().phoneNumber());
        Assertions.assertEquals("j", model.user().companyName());
        Assertions.assertEquals("toqcjmklja", model.partnerProperties().organizationId());
        Assertions.assertEquals("qidtqajzyu", model.partnerProperties().redirectUrl());
        Assertions.assertEquals("pku", model.partnerProperties().organizationName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OrganizationResourceUpdateProperties model = new OrganizationResourceUpdateProperties()
            .withUser(new UserDetails().withFirstName("oifiyipjxsqwpgr")
                .withLastName("bznorcjxvsnby")
                .withEmailAddress("qabnmoc")
                .withUpn("ysh")
                .withPhoneNumber("zafb")
                .withCompanyName("j"))
            .withPartnerProperties(new PartnerProperties().withOrganizationId("toqcjmklja")
                .withRedirectUrl("qidtqajzyu")
                .withOrganizationName("pku"));
        model = BinaryData.fromObject(model).toObject(OrganizationResourceUpdateProperties.class);
        Assertions.assertEquals("oifiyipjxsqwpgr", model.user().firstName());
        Assertions.assertEquals("bznorcjxvsnby", model.user().lastName());
        Assertions.assertEquals("qabnmoc", model.user().emailAddress());
        Assertions.assertEquals("ysh", model.user().upn());
        Assertions.assertEquals("zafb", model.user().phoneNumber());
        Assertions.assertEquals("j", model.user().companyName());
        Assertions.assertEquals("toqcjmklja", model.partnerProperties().organizationId());
        Assertions.assertEquals("qidtqajzyu", model.partnerProperties().redirectUrl());
        Assertions.assertEquals("pku", model.partnerProperties().organizationName());
    }
}
