// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.mongodbatlas.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mongodbatlas.MongoDBAtlasManager;
import com.azure.resourcemanager.mongodbatlas.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.mongodbatlas.models.OrganizationResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OrganizationsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"marketplace\":{\"subscriptionId\":\"ck\",\"subscriptionStatus\":\"Suspended\",\"offerDetails\":{\"publisherId\":\"hrxsbk\",\"offerId\":\"vpycanuzbp\",\"planId\":\"kafkuwbcrnwbm\",\"planName\":\"hseyvju\",\"termUnit\":\"tslhspkdeem\",\"termId\":\"fm\"}},\"user\":{\"firstName\":\"ag\",\"lastName\":\"vt\",\"emailAddress\":\"elmqk\",\"upn\":\"ahvljuaha\",\"phoneNumber\":\"hcdhmdual\",\"companyName\":\"xqpvfadmw\"},\"provisioningState\":\"Failed\",\"partnerProperties\":{\"organizationId\":\"vxpvgomz\",\"redirectUrl\":\"misgwbnb\",\"organizationName\":\"e\"}},\"identity\":{\"principalId\":\"wkz\",\"tenantId\":\"liourqhak\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"ucww\":{\"principalId\":\"hsfwxosowzxcug\",\"clientId\":\"jooxdjebw\"},\"ueiotwmcdyt\":{\"principalId\":\"ovbvmeueciv\",\"clientId\":\"zceuojgjrw\"},\"qwgxhniskx\":{\"principalId\":\"wit\",\"clientId\":\"rjaw\"}}},\"location\":\"kpycgklwndnhjd\",\"tags\":{\"h\":\"hvylwzbt\",\"pow\":\"ujznb\"},\"id\":\"wpr\",\"name\":\"qlveualupjmkh\",\"type\":\"xobbcswsrt\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MongoDBAtlasManager manager = MongoDBAtlasManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<OrganizationResource> response
            = manager.organizations().listByResourceGroup("qj", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("kpycgklwndnhjd", response.iterator().next().location());
        Assertions.assertEquals("hvylwzbt", response.iterator().next().tags().get("h"));
        Assertions.assertEquals("ck", response.iterator().next().properties().marketplace().subscriptionId());
        Assertions.assertEquals("hrxsbk",
            response.iterator().next().properties().marketplace().offerDetails().publisherId());
        Assertions.assertEquals("vpycanuzbp",
            response.iterator().next().properties().marketplace().offerDetails().offerId());
        Assertions.assertEquals("kafkuwbcrnwbm",
            response.iterator().next().properties().marketplace().offerDetails().planId());
        Assertions.assertEquals("hseyvju",
            response.iterator().next().properties().marketplace().offerDetails().planName());
        Assertions.assertEquals("tslhspkdeem",
            response.iterator().next().properties().marketplace().offerDetails().termUnit());
        Assertions.assertEquals("fm", response.iterator().next().properties().marketplace().offerDetails().termId());
        Assertions.assertEquals("ag", response.iterator().next().properties().user().firstName());
        Assertions.assertEquals("vt", response.iterator().next().properties().user().lastName());
        Assertions.assertEquals("elmqk", response.iterator().next().properties().user().emailAddress());
        Assertions.assertEquals("ahvljuaha", response.iterator().next().properties().user().upn());
        Assertions.assertEquals("hcdhmdual", response.iterator().next().properties().user().phoneNumber());
        Assertions.assertEquals("xqpvfadmw", response.iterator().next().properties().user().companyName());
        Assertions.assertEquals("vxpvgomz",
            response.iterator().next().properties().partnerProperties().organizationId());
        Assertions.assertEquals("misgwbnb", response.iterator().next().properties().partnerProperties().redirectUrl());
        Assertions.assertEquals("e", response.iterator().next().properties().partnerProperties().organizationName());
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, response.iterator().next().identity().type());
    }
}
