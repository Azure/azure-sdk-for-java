// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.mongodbatlas.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mongodbatlas.MongoDBAtlasManager;
import com.azure.resourcemanager.mongodbatlas.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.mongodbatlas.models.OrganizationResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OrganizationsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"marketplace\":{\"subscriptionId\":\"twwrqp\",\"subscriptionStatus\":\"Suspended\",\"offerDetails\":{\"publisherId\":\"ckzywbiexzfeyue\",\"offerId\":\"xibxujwbhqwalm\",\"planId\":\"zyoxaepdkzjan\",\"planName\":\"xrhdwbavxbniwdjs\",\"termUnit\":\"tsdbpgn\",\"termId\":\"txhp\"}},\"user\":{\"firstName\":\"xbzpfzab\",\"lastName\":\"lcuhxwtctyqiklb\",\"emailAddress\":\"ovplw\",\"upn\":\"hvgyuguosvmk\",\"phoneNumber\":\"sxqu\",\"companyName\":\"fpl\"},\"provisioningState\":\"Canceled\",\"partnerProperties\":{\"organizationId\":\"nkjzkdeslpvlop\",\"redirectUrl\":\"yighxpk\",\"organizationName\":\"wzbaiue\"}},\"identity\":{\"principalId\":\"umnyqu\",\"tenantId\":\"deoj\",\"type\":\"None\",\"userAssignedIdentities\":{\"jjdhtld\":{\"principalId\":\"hsmtxpsiebtfhvp\",\"clientId\":\"apskrdqm\"},\"vnm\":{\"principalId\":\"yzxuutkncw\",\"clientId\":\"wsvlxotogtwrupqs\"},\"dhbt\":{\"principalId\":\"ykvceoveil\",\"clientId\":\"notyfjfcnjbkcn\"}}},\"location\":\"phywpnvj\",\"tags\":{\"plpho\":\"nermcl\",\"tazqugxywpmueefj\":\"uscrpabgyepsb\",\"dsuyonobgla\":\"wfqkquj\",\"tcc\":\"cq\"},\"id\":\"g\",\"name\":\"udxytlmoyrx\",\"type\":\"wfudwpzntxhdzhl\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MongoDBAtlasManager manager = MongoDBAtlasManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        OrganizationResource response = manager.organizations()
            .getByResourceGroupWithResponse("ktsthsucocmny", "azt", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("phywpnvj", response.location());
        Assertions.assertEquals("nermcl", response.tags().get("plpho"));
        Assertions.assertEquals("twwrqp", response.properties().marketplace().subscriptionId());
        Assertions.assertEquals("ckzywbiexzfeyue", response.properties().marketplace().offerDetails().publisherId());
        Assertions.assertEquals("xibxujwbhqwalm", response.properties().marketplace().offerDetails().offerId());
        Assertions.assertEquals("zyoxaepdkzjan", response.properties().marketplace().offerDetails().planId());
        Assertions.assertEquals("xrhdwbavxbniwdjs", response.properties().marketplace().offerDetails().planName());
        Assertions.assertEquals("tsdbpgn", response.properties().marketplace().offerDetails().termUnit());
        Assertions.assertEquals("txhp", response.properties().marketplace().offerDetails().termId());
        Assertions.assertEquals("xbzpfzab", response.properties().user().firstName());
        Assertions.assertEquals("lcuhxwtctyqiklb", response.properties().user().lastName());
        Assertions.assertEquals("ovplw", response.properties().user().emailAddress());
        Assertions.assertEquals("hvgyuguosvmk", response.properties().user().upn());
        Assertions.assertEquals("sxqu", response.properties().user().phoneNumber());
        Assertions.assertEquals("fpl", response.properties().user().companyName());
        Assertions.assertEquals("nkjzkdeslpvlop", response.properties().partnerProperties().organizationId());
        Assertions.assertEquals("yighxpk", response.properties().partnerProperties().redirectUrl());
        Assertions.assertEquals("wzbaiue", response.properties().partnerProperties().organizationName());
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.identity().type());
    }
}
