// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.neonpostgres.NeonPostgresManager;
import com.azure.resourcemanager.neonpostgres.models.Compute;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ComputesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"entityId\":\"fppqcwdnnj\",\"entityName\":\"h\",\"createdAt\":\"nxebycympohx\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"nsebcxnouspdyzs\",\"value\":\"jl\"}],\"region\":\"kdygjvgs\",\"cpuCores\":1566118783,\"memory\":1659142430,\"status\":\"j\"},\"id\":\"wqxcrb\",\"name\":\"rgyoimmssz\",\"type\":\"cctvkog\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NeonPostgresManager manager = NeonPostgresManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Compute> response = manager.computes()
            .list("efpubaldjcgldryv", "r", "kbhzi", "mxcaujbfomfbozpj", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("h", response.iterator().next().properties().entityName());
        Assertions.assertEquals("nsebcxnouspdyzs", response.iterator().next().properties().attributes().get(0).name());
        Assertions.assertEquals("jl", response.iterator().next().properties().attributes().get(0).value());
        Assertions.assertEquals("kdygjvgs", response.iterator().next().properties().region());
        Assertions.assertEquals(1566118783, response.iterator().next().properties().cpuCores());
        Assertions.assertEquals(1659142430, response.iterator().next().properties().memory());
        Assertions.assertEquals("j", response.iterator().next().properties().status());
    }
}
