// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.neonpostgres.NeonPostgresManager;
import com.azure.resourcemanager.neonpostgres.models.Endpoint;
import com.azure.resourcemanager.neonpostgres.models.EndpointType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class EndpointsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"entityId\":\"o\",\"entityName\":\"ezchmeodhzjlrknc\",\"createdAt\":\"fxmuqeq\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"fvsftsstwlpx\",\"value\":\"achdtezgfctu\"},{\"name\":\"z\",\"value\":\"wqrzvuxnxauohsh\"}],\"projectId\":\"ltdbvmjdhy\",\"branchId\":\"gocbdxvr\",\"endpointType\":\"read_write\",\"endpointId\":\"bczs\",\"computeName\":\"grzukekyt\",\"status\":\"idle\",\"lastActive\":\"vmaatvogp\",\"size\":{\"autoscalingLimitMinCu\":12.784983529360684,\"autoscalingLimitMaxCu\":42.97409451268916}},\"id\":\"rhbd\",\"name\":\"sbyplskhwfju\",\"type\":\"apbqps\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NeonPostgresManager manager = NeonPostgresManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Endpoint> response = manager.endpoints()
            .list("nsgvxhxrm", "atrtcqyfjvifbmo", "tehqyoytrcoufkq", "bhukdfpknv", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ezchmeodhzjlrknc", response.iterator().next().properties().entityName());
        Assertions.assertEquals("fvsftsstwlpx", response.iterator().next().properties().attributes().get(0).name());
        Assertions.assertEquals("achdtezgfctu", response.iterator().next().properties().attributes().get(0).value());
        Assertions.assertEquals("ltdbvmjdhy", response.iterator().next().properties().projectId());
        Assertions.assertEquals("gocbdxvr", response.iterator().next().properties().branchId());
        Assertions.assertEquals(EndpointType.READ_WRITE, response.iterator().next().properties().endpointType());
        Assertions.assertEquals("bczs", response.iterator().next().properties().endpointId());
        Assertions.assertEquals("grzukekyt", response.iterator().next().properties().computeName());
        Assertions.assertEquals(12.784983529360684,
            response.iterator().next().properties().size().autoscalingLimitMinCu());
        Assertions.assertEquals(42.97409451268916,
            response.iterator().next().properties().size().autoscalingLimitMaxCu());
    }
}
