// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.neonpostgres.NeonPostgresManager;
import com.azure.resourcemanager.neonpostgres.models.EndpointType;
import com.azure.resourcemanager.neonpostgres.models.MarketplaceSubscriptionStatus;
import com.azure.resourcemanager.neonpostgres.models.OrganizationResource;
import com.azure.resourcemanager.neonpostgres.models.SingleSignOnStates;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OrganizationsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"marketplaceDetails\":{\"subscriptionId\":\"efiqdktwtkv\",\"subscriptionStatus\":\"Suspended\",\"offerDetails\":{\"publisherId\":\"pfliwo\",\"offerId\":\"nguuzhwvla\",\"planId\":\"p\",\"planName\":\"hjhausy\",\"termUnit\":\"ekymffztsilscvqs\",\"termId\":\"iihfymkoui\"}},\"userDetails\":{\"firstName\":\"eseuugci\",\"lastName\":\"hogsmgbvmtd\",\"emailAddress\":\"qbe\",\"upn\":\"nfvegl\",\"phoneNumber\":\"tvkbiwznht\"},\"companyDetails\":{\"companyName\":\"ficudyhiz\",\"country\":\"czmuhbca\",\"officeAddress\":\"nhokh\",\"businessPhone\":\"twhrjsdm\",\"domain\":\"zdnckidbj\",\"numberOfEmployees\":8107058050263084038},\"provisioningState\":\"Succeeded\",\"partnerOrganizationProperties\":{\"organizationId\":\"zbawkikcdgfh\",\"organizationName\":\"ssdpjeyoqxded\",\"singleSignOnProperties\":{\"singleSignOnState\":\"Disable\",\"enterpriseAppId\":\"hagxsure\",\"singleSignOnUrl\":\"rshzzbgullcxiqqz\",\"aadDomains\":[\"xdupnamg\"]}},\"projectProperties\":{\"entityId\":\"uigdmfivjqterdq\",\"entityName\":\"gd\",\"createdAt\":\"kghpcv\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"vtktyhh\",\"value\":\"vfxlapjajodmkrr\"},{\"name\":\"epgqvqokqlujqg\",\"value\":\"rabwlyvxc\"},{\"name\":\"pqvctsfaeuhwwsk\",\"value\":\"stvzuzhasupml\"}],\"regionId\":\"dpgzvzqazv\",\"storage\":8553063108448344009,\"pgVersion\":387260273,\"historyRetention\":1121842631,\"defaultEndpointSettings\":{\"autoscalingLimitMinCu\":21.47505721407965,\"autoscalingLimitMaxCu\":81.48534278970834},\"branch\":{\"entityId\":\"s\",\"entityName\":\"y\",\"createdAt\":\"qheni\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"gubabyjde\",\"value\":\"ysc\"}],\"projectId\":\"ydzjemexm\",\"parentId\":\"kvmuwrxlniwmcp\",\"roleName\":\"rdlhvdvmiphbe\",\"databaseName\":\"qjzmhkdcl\",\"roles\":[{},{},{}],\"databases\":[{},{},{},{}],\"endpoints\":[{},{},{}],\"branchId\":\"unerke\",\"branch\":\"xzs\",\"dataSize\":\"zezbzu\",\"lastActive\":\"dlevzskejcgw\",\"computeHours\":\"gqkstyecupyu\",\"protected\":false,\"isDefault\":true},\"roles\":[{\"entityId\":\"sjcfma\",\"entityName\":\"zdqwuzvcm\",\"createdAt\":\"kxizek\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"wucaonzvajbvb\",\"value\":\"krdemdi\"},{\"name\":\"ackzidgzw\",\"value\":\"ydamisvpztdivykp\"},{\"name\":\"kqejtpjfojiunr\",\"value\":\"shxuknsykdtoi\"}],\"branchId\":\"ancdrc\",\"permissions\":[\"vx\",\"ldxonckb\",\"lblfxlupibaqzizx\"],\"isSuperUser\":true,\"roleName\":\"eghlw\",\"lastUpdated\":\"ogvgfklqiyn\",\"owns\":\"eqelsb\"},{\"entityId\":\"dstrkzxsgtz\",\"entityName\":\"vlrdsmovpi\",\"createdAt\":\"ndnoxaxnrqaq\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"xolousdv\",\"value\":\"g\"},{\"name\":\"tqm\",\"value\":\"wz\"},{\"name\":\"drpizfulgyctsdb\",\"value\":\"qgkujds\"}],\"branchId\":\"xrqwo\",\"permissions\":[\"btigapdyarikeejd\",\"dfhtwmmkfqbriqul\"],\"isSuperUser\":false,\"roleName\":\"jmeqkvy\",\"lastUpdated\":\"okpoyuoh\",\"owns\":\"nsnaajphmp\"},{\"entityId\":\"jnglpwsad\",\"entityName\":\"jsumxpezcoio\",\"createdAt\":\"rmfqzwq\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"e\",\"value\":\"c\"},{\"name\":\"wmywxfqzkvemy\",\"value\":\"dpczaqpqifd\"},{\"name\":\"m\",\"value\":\"trwtxzuisam\"}],\"branchId\":\"at\",\"permissions\":[\"exroqsqjghrmth\",\"plwsttxsrgxfqp\",\"niceovxgzwh\"],\"isSuperUser\":false,\"roleName\":\"ujmtikesliky\",\"lastUpdated\":\"zix\",\"owns\":\"hfnkvycqqqds\"},{\"entityId\":\"pnq\",\"entityName\":\"zxhrptyodlhkfktl\",\"createdAt\":\"dsobjopnouhbq\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"saluzyi\",\"value\":\"fcvcewbwq\"}],\"branchId\":\"gsjs\",\"permissions\":[\"rncmazdfsqxh\",\"qmr\"],\"isSuperUser\":false,\"roleName\":\"r\",\"lastUpdated\":\"vgrszr\",\"owns\":\"tdrcwgzwl\"}],\"databases\":[{\"entityId\":\"hhfi\",\"entityName\":\"cfculzj\",\"createdAt\":\"hp\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"ldqpzf\",\"value\":\"xsoxi\"},{\"name\":\"unjlzkdrocq\",\"value\":\"xytqq\"},{\"name\":\"cmiwdw\",\"value\":\"svnmeylajamcajy\"}],\"branchId\":\"tpzcr\",\"ownerName\":\"kll\",\"databaseName\":\"nqanhkigglclwal\",\"lastUpdated\":\"ubhg\"},{\"entityId\":\"hetxdqcmyctajqz\",\"entityName\":\"alec\",\"createdAt\":\"ibiwksdegyxsb\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"ikvntw\",\"value\":\"zfzwush\"},{\"name\":\"cxpblalhhezpfk\",\"value\":\"s\"},{\"name\":\"aidqzsaaoqdsgpto\",\"value\":\"xjqfiafcnlrtbfi\"}],\"branchId\":\"z\",\"ownerName\":\"o\",\"databaseName\":\"olbuauktwieope\",\"lastUpdated\":\"lxqdwr\"}],\"endpoints\":[{\"entityId\":\"ljpibkgxyxyauxre\",\"entityName\":\"obmc\",\"createdAt\":\"tmwytkujsqycm\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"bl\",\"value\":\"gpwb\"},{\"name\":\"whrialiwrycgn\",\"value\":\"plrr\"},{\"name\":\"phctsbbibticu\",\"value\":\"qvumspbfsfeqbbe\"},{\"name\":\"f\",\"value\":\"uqfpyyxmzrmtm\"}],\"projectId\":\"ituweyyj\",\"branchId\":\"cybwfuppoxprcm\",\"endpointType\":\"read_only\",\"endpointId\":\"jxdiikmoxrezsv\",\"computeName\":\"lrxikj\",\"status\":\"init\",\"lastActive\":\"lu\",\"size\":{\"autoscalingLimitMinCu\":12.29962769063241,\"autoscalingLimitMaxCu\":96.18086557685858}}]}},\"location\":\"bszfncnpat\",\"tags\":{\"zwuge\":\"saebwfwhxorpwal\",\"vazjpwexcd\":\"ojfccylhtrht\",\"o\":\"zp\",\"pjeuxsp\":\"zzxezmnrkj\"},\"id\":\"lokfpmijpdvzv\",\"name\":\"bhwbdqufvcgnrgla\",\"type\":\"rwyambhbafebzxfk\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NeonPostgresManager manager = NeonPostgresManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        OrganizationResource response = manager.organizations()
            .getByResourceGroupWithResponse("hksnyzmspamwbw", "bnl", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("bszfncnpat", response.location());
        Assertions.assertEquals("saebwfwhxorpwal", response.tags().get("zwuge"));
        Assertions.assertEquals("efiqdktwtkv", response.properties().marketplaceDetails().subscriptionId());
        Assertions.assertEquals(MarketplaceSubscriptionStatus.SUSPENDED,
            response.properties().marketplaceDetails().subscriptionStatus());
        Assertions.assertEquals("pfliwo", response.properties().marketplaceDetails().offerDetails().publisherId());
        Assertions.assertEquals("nguuzhwvla", response.properties().marketplaceDetails().offerDetails().offerId());
        Assertions.assertEquals("p", response.properties().marketplaceDetails().offerDetails().planId());
        Assertions.assertEquals("hjhausy", response.properties().marketplaceDetails().offerDetails().planName());
        Assertions.assertEquals("ekymffztsilscvqs",
            response.properties().marketplaceDetails().offerDetails().termUnit());
        Assertions.assertEquals("iihfymkoui", response.properties().marketplaceDetails().offerDetails().termId());
        Assertions.assertEquals("eseuugci", response.properties().userDetails().firstName());
        Assertions.assertEquals("hogsmgbvmtd", response.properties().userDetails().lastName());
        Assertions.assertEquals("qbe", response.properties().userDetails().emailAddress());
        Assertions.assertEquals("nfvegl", response.properties().userDetails().upn());
        Assertions.assertEquals("tvkbiwznht", response.properties().userDetails().phoneNumber());
        Assertions.assertEquals("ficudyhiz", response.properties().companyDetails().companyName());
        Assertions.assertEquals("czmuhbca", response.properties().companyDetails().country());
        Assertions.assertEquals("nhokh", response.properties().companyDetails().officeAddress());
        Assertions.assertEquals("twhrjsdm", response.properties().companyDetails().businessPhone());
        Assertions.assertEquals("zdnckidbj", response.properties().companyDetails().domain());
        Assertions.assertEquals(8107058050263084038L, response.properties().companyDetails().numberOfEmployees());
        Assertions.assertEquals("zbawkikcdgfh", response.properties().partnerOrganizationProperties().organizationId());
        Assertions.assertEquals("ssdpjeyoqxded",
            response.properties().partnerOrganizationProperties().organizationName());
        Assertions.assertEquals(SingleSignOnStates.DISABLE,
            response.properties().partnerOrganizationProperties().singleSignOnProperties().singleSignOnState());
        Assertions.assertEquals("hagxsure",
            response.properties().partnerOrganizationProperties().singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("rshzzbgullcxiqqz",
            response.properties().partnerOrganizationProperties().singleSignOnProperties().singleSignOnUrl());
        Assertions.assertEquals("xdupnamg",
            response.properties().partnerOrganizationProperties().singleSignOnProperties().aadDomains().get(0));
        Assertions.assertEquals("gd", response.properties().projectProperties().entityName());
        Assertions.assertEquals("vtktyhh", response.properties().projectProperties().attributes().get(0).name());
        Assertions.assertEquals("vfxlapjajodmkrr",
            response.properties().projectProperties().attributes().get(0).value());
        Assertions.assertEquals("dpgzvzqazv", response.properties().projectProperties().regionId());
        Assertions.assertEquals(8553063108448344009L, response.properties().projectProperties().storage());
        Assertions.assertEquals(387260273, response.properties().projectProperties().pgVersion());
        Assertions.assertEquals(1121842631, response.properties().projectProperties().historyRetention());
        Assertions.assertEquals(21.47505721407965,
            response.properties().projectProperties().defaultEndpointSettings().autoscalingLimitMinCu());
        Assertions.assertEquals(81.48534278970834,
            response.properties().projectProperties().defaultEndpointSettings().autoscalingLimitMaxCu());
        Assertions.assertEquals("y", response.properties().projectProperties().branch().entityName());
        Assertions.assertEquals("gubabyjde",
            response.properties().projectProperties().branch().attributes().get(0).name());
        Assertions.assertEquals("ysc", response.properties().projectProperties().branch().attributes().get(0).value());
        Assertions.assertEquals("ydzjemexm", response.properties().projectProperties().branch().projectId());
        Assertions.assertEquals("kvmuwrxlniwmcp", response.properties().projectProperties().branch().parentId());
        Assertions.assertEquals("rdlhvdvmiphbe", response.properties().projectProperties().branch().roleName());
        Assertions.assertEquals("qjzmhkdcl", response.properties().projectProperties().branch().databaseName());
        Assertions.assertEquals("unerke", response.properties().projectProperties().branch().branchId());
        Assertions.assertEquals("xzs", response.properties().projectProperties().branch().branch());
        Assertions.assertEquals("zdqwuzvcm", response.properties().projectProperties().roles().get(0).entityName());
        Assertions.assertEquals("wucaonzvajbvb",
            response.properties().projectProperties().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("krdemdi",
            response.properties().projectProperties().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("ancdrc", response.properties().projectProperties().roles().get(0).branchId());
        Assertions.assertEquals("vx", response.properties().projectProperties().roles().get(0).permissions().get(0));
        Assertions.assertTrue(response.properties().projectProperties().roles().get(0).isSuperUser());
        Assertions.assertEquals("eghlw", response.properties().projectProperties().roles().get(0).roleName());
        Assertions.assertEquals("cfculzj", response.properties().projectProperties().databases().get(0).entityName());
        Assertions.assertEquals("ldqpzf",
            response.properties().projectProperties().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("xsoxi",
            response.properties().projectProperties().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("tpzcr", response.properties().projectProperties().databases().get(0).branchId());
        Assertions.assertEquals("kll", response.properties().projectProperties().databases().get(0).ownerName());
        Assertions.assertEquals("nqanhkigglclwal",
            response.properties().projectProperties().databases().get(0).databaseName());
        Assertions.assertEquals("obmc", response.properties().projectProperties().endpoints().get(0).entityName());
        Assertions.assertEquals("bl",
            response.properties().projectProperties().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("gpwb",
            response.properties().projectProperties().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("ituweyyj", response.properties().projectProperties().endpoints().get(0).projectId());
        Assertions.assertEquals("cybwfuppoxprcm",
            response.properties().projectProperties().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_ONLY,
            response.properties().projectProperties().endpoints().get(0).endpointType());
        Assertions.assertEquals("jxdiikmoxrezsv",
            response.properties().projectProperties().endpoints().get(0).endpointId());
        Assertions.assertEquals("lrxikj", response.properties().projectProperties().endpoints().get(0).computeName());
        Assertions.assertEquals(12.29962769063241,
            response.properties().projectProperties().endpoints().get(0).size().autoscalingLimitMinCu());
        Assertions.assertEquals(96.18086557685858,
            response.properties().projectProperties().endpoints().get(0).size().autoscalingLimitMaxCu());
    }
}
