// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.neonpostgres.implementation.models.EndpointListResult;
import com.azure.resourcemanager.neonpostgres.models.EndpointType;
import org.junit.jupiter.api.Assertions;

public final class EndpointListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EndpointListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"entityId\":\"dusztekxby\",\"entityName\":\"msfe\",\"createdAt\":\"yihpqadagrh\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"dw\",\"value\":\"jfowxwy\"}],\"projectId\":\"c\",\"branchId\":\"sgbipcukdveksbuh\",\"endpointType\":\"read_write\",\"endpointId\":\"hvlscrdp\",\"computeName\":\"fdyjdu\",\"status\":\"active\",\"lastActive\":\"szekbh\",\"size\":{\"autoscalingLimitMinCu\":53.354222176454435,\"autoscalingLimitMaxCu\":67.88441158726816}},\"id\":\"krehbfrnuybfflj\",\"name\":\"iimreoagsqta\",\"type\":\"dusr\"}],\"nextLink\":\"xfavsqwudoh\"}")
            .toObject(EndpointListResult.class);
        Assertions.assertEquals("msfe", model.value().get(0).properties().entityName());
        Assertions.assertEquals("dw", model.value().get(0).properties().attributes().get(0).name());
        Assertions.assertEquals("jfowxwy", model.value().get(0).properties().attributes().get(0).value());
        Assertions.assertEquals("c", model.value().get(0).properties().projectId());
        Assertions.assertEquals("sgbipcukdveksbuh", model.value().get(0).properties().branchId());
        Assertions.assertEquals(EndpointType.READ_WRITE, model.value().get(0).properties().endpointType());
        Assertions.assertEquals("hvlscrdp", model.value().get(0).properties().endpointId());
        Assertions.assertEquals("fdyjdu", model.value().get(0).properties().computeName());
        Assertions.assertEquals(53.354222176454435, model.value().get(0).properties().size().autoscalingLimitMinCu());
        Assertions.assertEquals(67.88441158726816, model.value().get(0).properties().size().autoscalingLimitMaxCu());
        Assertions.assertEquals("xfavsqwudoh", model.nextLink());
    }
}
