// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.neonpostgres.NeonPostgresManager;
import com.azure.resourcemanager.neonpostgres.models.EndpointType;
import com.azure.resourcemanager.neonpostgres.models.MarketplaceSubscriptionStatus;
import com.azure.resourcemanager.neonpostgres.models.OrganizationResource;
import com.azure.resourcemanager.neonpostgres.models.SingleSignOnStates;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OrganizationsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"marketplaceDetails\":{\"subscriptionId\":\"fyrlmwkptskwxj\",\"subscriptionStatus\":\"Suspended\",\"offerDetails\":{\"publisherId\":\"xccb\",\"offerId\":\"kakmkookbputmgvm\",\"planId\":\"yakmlwktf\",\"planName\":\"zkroyrdur\",\"termUnit\":\"lzqjimejtgzjxx\",\"termId\":\"e\"}},\"userDetails\":{\"firstName\":\"zuqloiwyayyzivr\",\"lastName\":\"tcdqlh\",\"emailAddress\":\"whrktjleifibfipl\",\"upn\":\"fnsmycjowly\",\"phoneNumber\":\"zmudsqcm\"},\"companyDetails\":{\"companyName\":\"x\",\"country\":\"buwodmachbkv\",\"officeAddress\":\"pbjrmvgoqplehm\",\"businessPhone\":\"kzdllczdprwnhkgq\",\"domain\":\"oxsstc\",\"numberOfEmployees\":3416788953896972023},\"provisioningState\":\"Canceled\",\"partnerOrganizationProperties\":{\"organizationId\":\"ynjcwmhlymgnukxr\",\"organizationName\":\"emjpequ\",\"singleSignOnProperties\":{\"singleSignOnState\":\"Initial\",\"enterpriseAppId\":\"udgjtfb\",\"singleSignOnUrl\":\"akkuc\",\"aadDomains\":[\"nhczbutoucgjt\",\"rjwayhicqq\",\"wvgwkslvli\"]}},\"projectProperties\":{\"entityId\":\"vbia\",\"entityName\":\"n\",\"createdAt\":\"ge\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"adyfhbmwkho\",\"value\":\"qttbspvkhgla\"},{\"name\":\"jsgyzstujrzxrk\",\"value\":\"sf\"}],\"regionId\":\"lduyehiiittugyuq\",\"storage\":3070050618791449846,\"pgVersion\":1403614552,\"historyRetention\":590341144,\"defaultEndpointSettings\":{\"autoscalingLimitMinCu\":11.595930940995958,\"autoscalingLimitMaxCu\":58.78075416272356},\"branch\":{\"entityId\":\"zjvxdzcigg\",\"entityName\":\"vt\",\"createdAt\":\"fwalzyxwhoeamo\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"eysf\",\"value\":\"nimtwuuhaueg\"},{\"name\":\"kwmnfeub\",\"value\":\"zjy\"}],\"projectId\":\"wfugiph\",\"parentId\":\"kuumnqdurhzzfo\",\"roleName\":\"eoq\",\"databaseName\":\"vwlujopwnib\",\"roles\":[{},{}],\"databases\":[{}],\"endpoints\":[{}],\"branchId\":\"qumqvfmwcaddt\",\"branch\":\"txegtvgwyurbelfn\",\"dataSize\":\"ryizwbxgde\",\"lastActive\":\"layunomirhpfabe\",\"computeHours\":\"lamwmgewa\",\"protected\":false,\"isDefault\":true},\"roles\":[{\"entityId\":\"jstbhemhcucsqsnx\",\"entityName\":\"xufeapd\",\"createdAt\":\"zyvbsuadulpodk\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"bkzhmhjd\",\"value\":\"lt\"},{\"name\":\"eluqr\",\"value\":\"jadhfztl\"},{\"name\":\"aysrkgzky\",\"value\":\"udbkuwpzq\"},{\"name\":\"lcwe\",\"value\":\"kfecjvxf\"}],\"branchId\":\"ufqizjvppw\",\"permissions\":[\"jeyyjmjjxizxp\"],\"isSuperUser\":false,\"roleName\":\"lslekcttgzkj\",\"lastUpdated\":\"qpdwad\",\"owns\":\"hz\"}],\"databases\":[{\"entityId\":\"vczdjiahuqymjzu\",\"entityName\":\"wmejjqhd\",\"createdAt\":\"vmqxi\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"fozkbnz\",\"value\":\"by\"},{\"name\":\"fqpgaixwrgr\",\"value\":\"kderf\"},{\"name\":\"swqi\",\"value\":\"wepwoggg\"},{\"name\":\"cwn\",\"value\":\"htfmcqbsudzpgc\"}],\"branchId\":\"pgfqum\",\"ownerName\":\"jxhzghgo\",\"databaseName\":\"ynrceqavfdbdf\",\"lastUpdated\":\"xjdnajuo\"},{\"entityId\":\"y\",\"entityName\":\"mk\",\"createdAt\":\"hvcw\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"jk\",\"value\":\"uxxrwzobuzms\"},{\"name\":\"g\",\"value\":\"mtdtkwppthuzd\"}],\"branchId\":\"mimrljdpoqfxyemh\",\"ownerName\":\"tbaewhte\",\"databaseName\":\"oamfmxtllfltymqc\",\"lastUpdated\":\"rfijhggabq\"}],\"endpoints\":[{\"entityId\":\"klilirwdv\",\"entityName\":\"hsdp\",\"createdAt\":\"uhktq\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"njxrd\",\"value\":\"ddtullygta\"},{\"name\":\"czcxdfw\",\"value\":\"a\"},{\"name\":\"yf\",\"value\":\"lxrljphraspifl\"}],\"projectId\":\"m\",\"branchId\":\"lmdbgic\",\"endpointType\":\"read_write\",\"endpointId\":\"sm\",\"computeName\":\"juqbpx\",\"status\":\"active\",\"lastActive\":\"jmtznpaxwfqt\",\"size\":{\"autoscalingLimitMinCu\":11.730981398310881,\"autoscalingLimitMaxCu\":48.80647348869831}},{\"entityId\":\"ltungbsolj\",\"entityName\":\"miigzb\",\"createdAt\":\"ckgk\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"tiiqqcqikclsmaln\",\"value\":\"swoykdn\"}],\"projectId\":\"aaxwmgzr\",\"branchId\":\"lqcwnynll\",\"endpointType\":\"read_only\",\"endpointId\":\"cbgvsbt\",\"computeName\":\"rtoxadhxuvjhxm\",\"status\":\"active\",\"lastActive\":\"tjc\",\"size\":{\"autoscalingLimitMinCu\":28.49274662352872,\"autoscalingLimitMaxCu\":96.69004681641867}},{\"entityId\":\"icvnpvvdh\",\"entityName\":\"naqyqipslzmvcds\",\"createdAt\":\"wbitekdtfob\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"x\",\"value\":\"ich\"},{\"name\":\"ybfzdqekivycp\",\"value\":\"cv\"},{\"name\":\"izulrqtbht\",\"value\":\"ezp\"},{\"name\":\"lpryf\",\"value\":\"xmdutzfkgilnou\"}],\"projectId\":\"cgndjgdp\",\"branchId\":\"ggqqyeqfcb\",\"endpointType\":\"read_write\",\"endpointId\":\"yuf\",\"computeName\":\"jfshtujcyo\",\"status\":\"active\",\"lastActive\":\"mwdcsklkqnqvki\",\"size\":{\"autoscalingLimitMinCu\":47.438259934784135,\"autoscalingLimitMaxCu\":21.130586600794242}}]}},\"location\":\"cuyrzwim\",\"tags\":{\"vfph\":\"yspzvrie\",\"dvatlzmgschn\":\"dzxplgtp\",\"sx\":\"rsbkkzovlzdmnfmf\"},\"id\":\"fo\",\"name\":\"uworimmov\",\"type\":\"wdehk\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NeonPostgresManager manager = NeonPostgresManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<OrganizationResource> response = manager.organizations().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("cuyrzwim", response.iterator().next().location());
        Assertions.assertEquals("yspzvrie", response.iterator().next().tags().get("vfph"));
        Assertions.assertEquals("fyrlmwkptskwxj",
            response.iterator().next().properties().marketplaceDetails().subscriptionId());
        Assertions.assertEquals(MarketplaceSubscriptionStatus.SUSPENDED,
            response.iterator().next().properties().marketplaceDetails().subscriptionStatus());
        Assertions.assertEquals("xccb",
            response.iterator().next().properties().marketplaceDetails().offerDetails().publisherId());
        Assertions.assertEquals("kakmkookbputmgvm",
            response.iterator().next().properties().marketplaceDetails().offerDetails().offerId());
        Assertions.assertEquals("yakmlwktf",
            response.iterator().next().properties().marketplaceDetails().offerDetails().planId());
        Assertions.assertEquals("zkroyrdur",
            response.iterator().next().properties().marketplaceDetails().offerDetails().planName());
        Assertions.assertEquals("lzqjimejtgzjxx",
            response.iterator().next().properties().marketplaceDetails().offerDetails().termUnit());
        Assertions.assertEquals("e",
            response.iterator().next().properties().marketplaceDetails().offerDetails().termId());
        Assertions.assertEquals("zuqloiwyayyzivr", response.iterator().next().properties().userDetails().firstName());
        Assertions.assertEquals("tcdqlh", response.iterator().next().properties().userDetails().lastName());
        Assertions.assertEquals("whrktjleifibfipl",
            response.iterator().next().properties().userDetails().emailAddress());
        Assertions.assertEquals("fnsmycjowly", response.iterator().next().properties().userDetails().upn());
        Assertions.assertEquals("zmudsqcm", response.iterator().next().properties().userDetails().phoneNumber());
        Assertions.assertEquals("x", response.iterator().next().properties().companyDetails().companyName());
        Assertions.assertEquals("buwodmachbkv", response.iterator().next().properties().companyDetails().country());
        Assertions.assertEquals("pbjrmvgoqplehm",
            response.iterator().next().properties().companyDetails().officeAddress());
        Assertions.assertEquals("kzdllczdprwnhkgq",
            response.iterator().next().properties().companyDetails().businessPhone());
        Assertions.assertEquals("oxsstc", response.iterator().next().properties().companyDetails().domain());
        Assertions.assertEquals(3416788953896972023L,
            response.iterator().next().properties().companyDetails().numberOfEmployees());
        Assertions.assertEquals("ynjcwmhlymgnukxr",
            response.iterator().next().properties().partnerOrganizationProperties().organizationId());
        Assertions.assertEquals("emjpequ",
            response.iterator().next().properties().partnerOrganizationProperties().organizationName());
        Assertions.assertEquals(SingleSignOnStates.INITIAL,
            response.iterator()
                .next()
                .properties()
                .partnerOrganizationProperties()
                .singleSignOnProperties()
                .singleSignOnState());
        Assertions.assertEquals("udgjtfb",
            response.iterator()
                .next()
                .properties()
                .partnerOrganizationProperties()
                .singleSignOnProperties()
                .enterpriseAppId());
        Assertions.assertEquals("akkuc",
            response.iterator()
                .next()
                .properties()
                .partnerOrganizationProperties()
                .singleSignOnProperties()
                .singleSignOnUrl());
        Assertions.assertEquals("nhczbutoucgjt",
            response.iterator()
                .next()
                .properties()
                .partnerOrganizationProperties()
                .singleSignOnProperties()
                .aadDomains()
                .get(0));
        Assertions.assertEquals("n", response.iterator().next().properties().projectProperties().entityName());
        Assertions.assertEquals("adyfhbmwkho",
            response.iterator().next().properties().projectProperties().attributes().get(0).name());
        Assertions.assertEquals("qttbspvkhgla",
            response.iterator().next().properties().projectProperties().attributes().get(0).value());
        Assertions.assertEquals("lduyehiiittugyuq",
            response.iterator().next().properties().projectProperties().regionId());
        Assertions.assertEquals(3070050618791449846L,
            response.iterator().next().properties().projectProperties().storage());
        Assertions.assertEquals(1403614552, response.iterator().next().properties().projectProperties().pgVersion());
        Assertions.assertEquals(590341144,
            response.iterator().next().properties().projectProperties().historyRetention());
        Assertions.assertEquals(11.595930940995958,
            response.iterator()
                .next()
                .properties()
                .projectProperties()
                .defaultEndpointSettings()
                .autoscalingLimitMinCu());
        Assertions.assertEquals(58.78075416272356,
            response.iterator()
                .next()
                .properties()
                .projectProperties()
                .defaultEndpointSettings()
                .autoscalingLimitMaxCu());
        Assertions.assertEquals("vt",
            response.iterator().next().properties().projectProperties().branch().entityName());
        Assertions.assertEquals("eysf",
            response.iterator().next().properties().projectProperties().branch().attributes().get(0).name());
        Assertions.assertEquals("nimtwuuhaueg",
            response.iterator().next().properties().projectProperties().branch().attributes().get(0).value());
        Assertions.assertEquals("wfugiph",
            response.iterator().next().properties().projectProperties().branch().projectId());
        Assertions.assertEquals("kuumnqdurhzzfo",
            response.iterator().next().properties().projectProperties().branch().parentId());
        Assertions.assertEquals("eoq", response.iterator().next().properties().projectProperties().branch().roleName());
        Assertions.assertEquals("vwlujopwnib",
            response.iterator().next().properties().projectProperties().branch().databaseName());
        Assertions.assertEquals("qumqvfmwcaddt",
            response.iterator().next().properties().projectProperties().branch().branchId());
        Assertions.assertEquals("txegtvgwyurbelfn",
            response.iterator().next().properties().projectProperties().branch().branch());
        Assertions.assertEquals("xufeapd",
            response.iterator().next().properties().projectProperties().roles().get(0).entityName());
        Assertions.assertEquals("bkzhmhjd",
            response.iterator().next().properties().projectProperties().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("lt",
            response.iterator().next().properties().projectProperties().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("ufqizjvppw",
            response.iterator().next().properties().projectProperties().roles().get(0).branchId());
        Assertions.assertEquals("jeyyjmjjxizxp",
            response.iterator().next().properties().projectProperties().roles().get(0).permissions().get(0));
        Assertions
            .assertFalse(response.iterator().next().properties().projectProperties().roles().get(0).isSuperUser());
        Assertions.assertEquals("lslekcttgzkj",
            response.iterator().next().properties().projectProperties().roles().get(0).roleName());
        Assertions.assertEquals("wmejjqhd",
            response.iterator().next().properties().projectProperties().databases().get(0).entityName());
        Assertions.assertEquals("fozkbnz",
            response.iterator().next().properties().projectProperties().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("by",
            response.iterator().next().properties().projectProperties().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("pgfqum",
            response.iterator().next().properties().projectProperties().databases().get(0).branchId());
        Assertions.assertEquals("jxhzghgo",
            response.iterator().next().properties().projectProperties().databases().get(0).ownerName());
        Assertions.assertEquals("ynrceqavfdbdf",
            response.iterator().next().properties().projectProperties().databases().get(0).databaseName());
        Assertions.assertEquals("hsdp",
            response.iterator().next().properties().projectProperties().endpoints().get(0).entityName());
        Assertions.assertEquals("njxrd",
            response.iterator().next().properties().projectProperties().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("ddtullygta",
            response.iterator().next().properties().projectProperties().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("m",
            response.iterator().next().properties().projectProperties().endpoints().get(0).projectId());
        Assertions.assertEquals("lmdbgic",
            response.iterator().next().properties().projectProperties().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_WRITE,
            response.iterator().next().properties().projectProperties().endpoints().get(0).endpointType());
        Assertions.assertEquals("sm",
            response.iterator().next().properties().projectProperties().endpoints().get(0).endpointId());
        Assertions.assertEquals("juqbpx",
            response.iterator().next().properties().projectProperties().endpoints().get(0).computeName());
        Assertions.assertEquals(11.730981398310881,
            response.iterator()
                .next()
                .properties()
                .projectProperties()
                .endpoints()
                .get(0)
                .size()
                .autoscalingLimitMinCu());
        Assertions.assertEquals(48.80647348869831,
            response.iterator()
                .next()
                .properties()
                .projectProperties()
                .endpoints()
                .get(0)
                .size()
                .autoscalingLimitMaxCu());
    }
}
