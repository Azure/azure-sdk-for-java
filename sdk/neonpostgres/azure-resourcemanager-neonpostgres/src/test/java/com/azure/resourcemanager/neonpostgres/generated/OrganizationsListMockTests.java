// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.neonpostgres.NeonPostgresManager;
import com.azure.resourcemanager.neonpostgres.models.EndpointType;
import com.azure.resourcemanager.neonpostgres.models.MarketplaceSubscriptionStatus;
import com.azure.resourcemanager.neonpostgres.models.OrganizationResource;
import com.azure.resourcemanager.neonpostgres.models.SingleSignOnStates;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OrganizationsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"marketplaceDetails\":{\"subscriptionId\":\"pgidnw\",\"subscriptionStatus\":\"Unsubscribed\",\"offerDetails\":{\"publisherId\":\"aqidoyzltgiomqo\",\"offerId\":\"pepiaeapfs\",\"planId\":\"rgdtpeqnacyheqw\",\"planName\":\"qq\",\"termUnit\":\"jubkhjozfymcwmb\",\"termId\":\"yvqyvliqiips\"}},\"userDetails\":{\"firstName\":\"bsvs\",\"lastName\":\"ieswhddzydisn\",\"emailAddress\":\"pywyjlnld\",\"upn\":\"ottdiiaocqibzj\",\"phoneNumber\":\"weebiphryv\"},\"companyDetails\":{\"companyName\":\"wqwoqsratjhdhzyb\",\"country\":\"ijh\",\"officeAddress\":\"zgdkkagvwu\",\"businessPhone\":\"susmmorfmzhwi\",\"domain\":\"zhnijmr\",\"numberOfEmployees\":728687115256086654},\"provisioningState\":\"Failed\",\"partnerOrganizationProperties\":{\"organizationId\":\"yttlrcxiv\",\"organizationName\":\"bkut\",\"singleSignOnProperties\":{\"singleSignOnState\":\"Enable\",\"enterpriseAppId\":\"wjfl\",\"singleSignOnUrl\":\"ynbpvzlqywauy\",\"aadDomains\":[\"ckhmocgjshgouarh\",\"vi\",\"qqgglj\"]}},\"projectProperties\":{\"entityId\":\"sjrclrvtzq\",\"entityName\":\"bctbhp\",\"createdAt\":\"xpc\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"eitaneqadynzjahw\",\"value\":\"iuomzczfkiceevs\"}],\"regionId\":\"xwspcaxikhfjq\",\"storage\":7011522113612580672,\"pgVersion\":152934060,\"historyRetention\":1169446065,\"defaultEndpointSettings\":{\"autoscalingLimitMinCu\":96.28691752419815,\"autoscalingLimitMaxCu\":19.181829886419045},\"branch\":{\"entityId\":\"ygysemtme\",\"entityName\":\"fsvpink\",\"createdAt\":\"atqtdiswxspvckoj\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"spftesubzpv\",\"value\":\"vdylytcovqseusrf\"},{\"name\":\"bdxzfxnxmlbmu\",\"value\":\"swkjmdihdcyyyz\"}],\"projectId\":\"hbw\",\"parentId\":\"nufzr\",\"roleName\":\"m\",\"databaseName\":\"gnnbzrtf\",\"roles\":[{},{},{},{}],\"databases\":[{},{},{},{}],\"endpoints\":[{},{},{},{}],\"branchId\":\"tvgj\",\"branch\":\"mt\",\"dataSize\":\"jvavdpwwo\",\"lastActive\":\"d\",\"computeHours\":\"titsf\",\"protected\":false,\"isDefault\":true},\"roles\":[{\"entityId\":\"k\",\"entityName\":\"auwazcgwd\",\"createdAt\":\"iwgy\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"ok\",\"value\":\"cvgllixdg\"},{\"name\":\"yfgwewqkj\",\"value\":\"xprwpxs\"}],\"branchId\":\"hu\",\"permissions\":[\"cskltezuuggg\",\"lfb\"],\"isSuperUser\":false,\"roleName\":\"gubsrtmdylpe\",\"lastUpdated\":\"ilttjzgczfcmfpfb\",\"owns\":\"etre\"}],\"databases\":[{\"entityId\":\"tshuvftwaivm\",\"entityName\":\"kevz\",\"createdAt\":\"ypanhxmpdxxzet\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"otnxlkfhglh\",\"value\":\"foxqwecrsn\"}],\"branchId\":\"cselqxovppqibuk\",\"ownerName\":\"vzrlrmlcc\",\"databaseName\":\"tjsczivfq\",\"lastUpdated\":\"nasd\"},{\"entityId\":\"enz\",\"entityName\":\"euscplhyv\",\"createdAt\":\"xlyzkxit\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"svkolru\",\"value\":\"jovmozsaye\"},{\"name\":\"razwzlpzbt\",\"value\":\"uykykipfsd\"}],\"branchId\":\"pfnocm\",\"ownerName\":\"zacfpztgazw\",\"databaseName\":\"ejgaaokct\",\"lastUpdated\":\"ppgkqzkc\"}],\"endpoints\":[{\"entityId\":\"fngdyfcixr\",\"entityName\":\"cqvhoejgoiutgwrm\",\"createdAt\":\"hpqhazyntacihn\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"pnmliq\",\"value\":\"v\"},{\"name\":\"bhikeaqgr\",\"value\":\"gpomxpu\"},{\"name\":\"dtsdfjy\",\"value\":\"esocwiqbuou\"}],\"projectId\":\"py\",\"branchId\":\"leofj\",\"endpointType\":\"read_only\",\"endpointId\":\"wwzvdaj\",\"computeName\":\"nncfmaciqgjjrlhi\",\"status\":\"idle\",\"lastActive\":\"xvtbougux\",\"size\":{\"autoscalingLimitMinCu\":17.04236633548586,\"autoscalingLimitMaxCu\":11.172509143670394}},{\"entityId\":\"ttbas\",\"entityName\":\"lapdlnd\",\"createdAt\":\"aqbkixvvlwynpbbf\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"msp\",\"value\":\"gzfeuzj\"},{\"name\":\"jmphfkyezolgj\",\"value\":\"mi\"},{\"name\":\"uydoccnx\",\"value\":\"hanzbuiad\"},{\"name\":\"batecaat\",\"value\":\"dohzniucbdaombwi\"}],\"projectId\":\"jdllwktle\",\"branchId\":\"wavvqxuajgcqwuly\",\"endpointType\":\"read_write\",\"endpointId\":\"cfdruwsikxx\",\"computeName\":\"lhuulriqb\",\"status\":\"init\",\"lastActive\":\"jgb\",\"size\":{\"autoscalingLimitMinCu\":1.6370028936230407,\"autoscalingLimitMaxCu\":10.378855924297481}},{\"entityId\":\"lttfyhc\",\"entityName\":\"wsuoardnagttpu\",\"createdAt\":\"bpgnrholhujbf\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"kysolsyjprxs\",\"value\":\"whdmcvhtbbz\"},{\"name\":\"hfvhuwzbxpcqz\",\"value\":\"ihotjecohmxv\"},{\"name\":\"lrrskap\",\"value\":\"xwieexuyade\"}],\"projectId\":\"tfo\",\"branchId\":\"k\",\"endpointType\":\"read_only\",\"endpointId\":\"yc\",\"computeName\":\"r\",\"status\":\"active\",\"lastActive\":\"zznnuif\",\"size\":{\"autoscalingLimitMinCu\":65.06607714897784,\"autoscalingLimitMaxCu\":33.91679023821161}}]}},\"location\":\"prkjg\",\"tags\":{\"wgxql\":\"jmwvvbtuqkxxi\",\"qfkyfhiwvjaqu\":\"ekotjgxi\",\"nvskpaj\":\"by\",\"exmj\":\"mgeu\"},\"id\":\"xcbccwkqmt\",\"name\":\"apeqiscrpil\",\"type\":\"ftr\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NeonPostgresManager manager = NeonPostgresManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<OrganizationResource> response = manager.organizations().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("prkjg", response.iterator().next().location());
        Assertions.assertEquals("jmwvvbtuqkxxi", response.iterator().next().tags().get("wgxql"));
        Assertions.assertEquals("pgidnw",
            response.iterator().next().properties().marketplaceDetails().subscriptionId());
        Assertions.assertEquals(MarketplaceSubscriptionStatus.UNSUBSCRIBED,
            response.iterator().next().properties().marketplaceDetails().subscriptionStatus());
        Assertions.assertEquals("aqidoyzltgiomqo",
            response.iterator().next().properties().marketplaceDetails().offerDetails().publisherId());
        Assertions.assertEquals("pepiaeapfs",
            response.iterator().next().properties().marketplaceDetails().offerDetails().offerId());
        Assertions.assertEquals("rgdtpeqnacyheqw",
            response.iterator().next().properties().marketplaceDetails().offerDetails().planId());
        Assertions.assertEquals("qq",
            response.iterator().next().properties().marketplaceDetails().offerDetails().planName());
        Assertions.assertEquals("jubkhjozfymcwmb",
            response.iterator().next().properties().marketplaceDetails().offerDetails().termUnit());
        Assertions.assertEquals("yvqyvliqiips",
            response.iterator().next().properties().marketplaceDetails().offerDetails().termId());
        Assertions.assertEquals("bsvs", response.iterator().next().properties().userDetails().firstName());
        Assertions.assertEquals("ieswhddzydisn", response.iterator().next().properties().userDetails().lastName());
        Assertions.assertEquals("pywyjlnld", response.iterator().next().properties().userDetails().emailAddress());
        Assertions.assertEquals("ottdiiaocqibzj", response.iterator().next().properties().userDetails().upn());
        Assertions.assertEquals("weebiphryv", response.iterator().next().properties().userDetails().phoneNumber());
        Assertions.assertEquals("wqwoqsratjhdhzyb",
            response.iterator().next().properties().companyDetails().companyName());
        Assertions.assertEquals("ijh", response.iterator().next().properties().companyDetails().country());
        Assertions.assertEquals("zgdkkagvwu", response.iterator().next().properties().companyDetails().officeAddress());
        Assertions.assertEquals("susmmorfmzhwi",
            response.iterator().next().properties().companyDetails().businessPhone());
        Assertions.assertEquals("zhnijmr", response.iterator().next().properties().companyDetails().domain());
        Assertions.assertEquals(728687115256086654L,
            response.iterator().next().properties().companyDetails().numberOfEmployees());
        Assertions.assertEquals("yttlrcxiv",
            response.iterator().next().properties().partnerOrganizationProperties().organizationId());
        Assertions.assertEquals("bkut",
            response.iterator().next().properties().partnerOrganizationProperties().organizationName());
        Assertions.assertEquals(SingleSignOnStates.ENABLE,
            response.iterator()
                .next()
                .properties()
                .partnerOrganizationProperties()
                .singleSignOnProperties()
                .singleSignOnState());
        Assertions.assertEquals("wjfl",
            response.iterator()
                .next()
                .properties()
                .partnerOrganizationProperties()
                .singleSignOnProperties()
                .enterpriseAppId());
        Assertions.assertEquals("ynbpvzlqywauy",
            response.iterator()
                .next()
                .properties()
                .partnerOrganizationProperties()
                .singleSignOnProperties()
                .singleSignOnUrl());
        Assertions.assertEquals("ckhmocgjshgouarh",
            response.iterator()
                .next()
                .properties()
                .partnerOrganizationProperties()
                .singleSignOnProperties()
                .aadDomains()
                .get(0));
        Assertions.assertEquals("bctbhp", response.iterator().next().properties().projectProperties().entityName());
        Assertions.assertEquals("eitaneqadynzjahw",
            response.iterator().next().properties().projectProperties().attributes().get(0).name());
        Assertions.assertEquals("iuomzczfkiceevs",
            response.iterator().next().properties().projectProperties().attributes().get(0).value());
        Assertions.assertEquals("xwspcaxikhfjq",
            response.iterator().next().properties().projectProperties().regionId());
        Assertions.assertEquals(7011522113612580672L,
            response.iterator().next().properties().projectProperties().storage());
        Assertions.assertEquals(152934060, response.iterator().next().properties().projectProperties().pgVersion());
        Assertions.assertEquals(1169446065,
            response.iterator().next().properties().projectProperties().historyRetention());
        Assertions.assertEquals(96.28691752419815,
            response.iterator()
                .next()
                .properties()
                .projectProperties()
                .defaultEndpointSettings()
                .autoscalingLimitMinCu());
        Assertions.assertEquals(19.181829886419045,
            response.iterator()
                .next()
                .properties()
                .projectProperties()
                .defaultEndpointSettings()
                .autoscalingLimitMaxCu());
        Assertions.assertEquals("fsvpink",
            response.iterator().next().properties().projectProperties().branch().entityName());
        Assertions.assertEquals("spftesubzpv",
            response.iterator().next().properties().projectProperties().branch().attributes().get(0).name());
        Assertions.assertEquals("vdylytcovqseusrf",
            response.iterator().next().properties().projectProperties().branch().attributes().get(0).value());
        Assertions.assertEquals("hbw",
            response.iterator().next().properties().projectProperties().branch().projectId());
        Assertions.assertEquals("nufzr",
            response.iterator().next().properties().projectProperties().branch().parentId());
        Assertions.assertEquals("m", response.iterator().next().properties().projectProperties().branch().roleName());
        Assertions.assertEquals("gnnbzrtf",
            response.iterator().next().properties().projectProperties().branch().databaseName());
        Assertions.assertEquals("tvgj",
            response.iterator().next().properties().projectProperties().branch().branchId());
        Assertions.assertEquals("mt", response.iterator().next().properties().projectProperties().branch().branch());
        Assertions.assertEquals("auwazcgwd",
            response.iterator().next().properties().projectProperties().roles().get(0).entityName());
        Assertions.assertEquals("ok",
            response.iterator().next().properties().projectProperties().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("cvgllixdg",
            response.iterator().next().properties().projectProperties().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("hu",
            response.iterator().next().properties().projectProperties().roles().get(0).branchId());
        Assertions.assertEquals("cskltezuuggg",
            response.iterator().next().properties().projectProperties().roles().get(0).permissions().get(0));
        Assertions
            .assertFalse(response.iterator().next().properties().projectProperties().roles().get(0).isSuperUser());
        Assertions.assertEquals("gubsrtmdylpe",
            response.iterator().next().properties().projectProperties().roles().get(0).roleName());
        Assertions.assertEquals("kevz",
            response.iterator().next().properties().projectProperties().databases().get(0).entityName());
        Assertions.assertEquals("otnxlkfhglh",
            response.iterator().next().properties().projectProperties().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("foxqwecrsn",
            response.iterator().next().properties().projectProperties().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("cselqxovppqibuk",
            response.iterator().next().properties().projectProperties().databases().get(0).branchId());
        Assertions.assertEquals("vzrlrmlcc",
            response.iterator().next().properties().projectProperties().databases().get(0).ownerName());
        Assertions.assertEquals("tjsczivfq",
            response.iterator().next().properties().projectProperties().databases().get(0).databaseName());
        Assertions.assertEquals("cqvhoejgoiutgwrm",
            response.iterator().next().properties().projectProperties().endpoints().get(0).entityName());
        Assertions.assertEquals("pnmliq",
            response.iterator().next().properties().projectProperties().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("v",
            response.iterator().next().properties().projectProperties().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("py",
            response.iterator().next().properties().projectProperties().endpoints().get(0).projectId());
        Assertions.assertEquals("leofj",
            response.iterator().next().properties().projectProperties().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_ONLY,
            response.iterator().next().properties().projectProperties().endpoints().get(0).endpointType());
        Assertions.assertEquals("wwzvdaj",
            response.iterator().next().properties().projectProperties().endpoints().get(0).endpointId());
        Assertions.assertEquals("nncfmaciqgjjrlhi",
            response.iterator().next().properties().projectProperties().endpoints().get(0).computeName());
        Assertions.assertEquals(17.04236633548586,
            response.iterator()
                .next()
                .properties()
                .projectProperties()
                .endpoints()
                .get(0)
                .size()
                .autoscalingLimitMinCu());
        Assertions.assertEquals(11.172509143670394,
            response.iterator()
                .next()
                .properties()
                .projectProperties()
                .endpoints()
                .get(0)
                .size()
                .autoscalingLimitMaxCu());
    }
}
