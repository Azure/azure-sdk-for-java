// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.neonpostgres.models.Attributes;
import com.azure.resourcemanager.neonpostgres.models.BranchProperties;
import com.azure.resourcemanager.neonpostgres.models.DefaultEndpointSettings;
import com.azure.resourcemanager.neonpostgres.models.EndpointProperties;
import com.azure.resourcemanager.neonpostgres.models.EndpointType;
import com.azure.resourcemanager.neonpostgres.models.NeonDatabaseProperties;
import com.azure.resourcemanager.neonpostgres.models.NeonRoleProperties;
import com.azure.resourcemanager.neonpostgres.models.ProjectProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ProjectPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProjectProperties model = BinaryData.fromString(
            "{\"entityId\":\"kcpwiy\",\"entityName\":\"qtmnubexkpzk\",\"createdAt\":\"ondjmq\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"omgkopkwho\",\"value\":\"v\"},{\"name\":\"ajqgxy\",\"value\":\"mocmbqfqvmk\"},{\"name\":\"xozap\",\"value\":\"helxprglya\"},{\"name\":\"dd\",\"value\":\"kcbcue\"}],\"regionId\":\"jxgciqibrh\",\"storage\":8083841694155689486,\"pgVersion\":1655789286,\"historyRetention\":656063523,\"defaultEndpointSettings\":{\"autoscalingLimitMinCu\":5.093772778811212,\"autoscalingLimitMaxCu\":4.957571627554625},\"branch\":{\"entityId\":\"rq\",\"entityName\":\"bahwfl\",\"createdAt\":\"zdtmhrkwofy\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"cpi\",\"value\":\"xpbtgiwbwo\"},{\"name\":\"nwashrtd\",\"value\":\"kcnqxwbpo\"}],\"projectId\":\"lpiujwaa\",\"parentId\":\"pqiiobyuqe\",\"roleName\":\"qlpqwcciuq\",\"databaseName\":\"dbutauvfbtkuwhh\",\"roles\":[{\"entityId\":\"ojoxafnndlp\",\"entityName\":\"hkoymkcdyhbp\",\"createdAt\":\"pwdreqnovvqf\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"ywsuwsy\",\"value\":\"s\"},{\"name\":\"dsytgadgvr\",\"value\":\"ea\"}],\"branchId\":\"e\",\"permissions\":[\"arrwlquu\"],\"isSuperUser\":false},{\"entityId\":\"kacewiipfp\",\"entityName\":\"ji\",\"createdAt\":\"wifto\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"uvksgplsaknynfsy\",\"value\":\"ljphuopxodl\"},{\"name\":\"iyntorzihle\",\"value\":\"sjswsrms\"}],\"branchId\":\"zrpzb\",\"permissions\":[\"kqqzqioxiysu\",\"i\",\"ynkedyatrwyhqmib\",\"yhwitsmypyynpcdp\"],\"isSuperUser\":true},{\"entityId\":\"g\",\"entityName\":\"z\",\"createdAt\":\"abikns\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"xbldtlwwrlkdmtn\",\"value\":\"vokotllxdyh\"},{\"name\":\"syocogjltdtbnnha\",\"value\":\"oocrkvcikhnv\"}],\"branchId\":\"mqg\",\"permissions\":[\"u\",\"zikywgg\"],\"isSuperUser\":true},{\"entityId\":\"la\",\"entityName\":\"elwuipi\",\"createdAt\":\"jzkzi\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"nayrhyrnxxmueedn\",\"value\":\"rdvstkwqqtch\"}],\"branchId\":\"lmfmtdaay\",\"permissions\":[\"wvgpiohg\"],\"isSuperUser\":true}],\"databases\":[{\"entityId\":\"dxepxgyq\",\"entityName\":\"vrvmnpkukghim\",\"createdAt\":\"lxgwimfnjhf\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"zk\",\"value\":\"foqreyfkzik\"},{\"name\":\"jawneaiv\",\"value\":\"wczelpci\"},{\"name\":\"elsfeaen\",\"value\":\"abfatkl\"}],\"branchId\":\"xbjhwuaanozjosph\",\"ownerName\":\"ulpjr\"},{\"entityId\":\"ag\",\"entityName\":\"vimjwos\",\"createdAt\":\"xitc\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"tq\",\"value\":\"miekkezzikhlyfjh\"}],\"branchId\":\"qgge\",\"ownerName\":\"unygaeqid\"},{\"entityId\":\"fatpxllrxcyjmoa\",\"entityName\":\"uvarmywdmjsjq\",\"createdAt\":\"hhyxxrw\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"uhpkxkgymar\",\"value\":\"qnajxqugj\"},{\"name\":\"ky\",\"value\":\"ubeddg\"}],\"branchId\":\"ofwq\",\"ownerName\":\"qal\"},{\"entityId\":\"mnjijpxacqqudf\",\"entityName\":\"yxbaaabjyvayf\",\"createdAt\":\"m\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"zqogse\",\"value\":\"nevfdnw\"},{\"name\":\"wmewzsyy\",\"value\":\"euzsoi\"},{\"name\":\"judpfrxt\",\"value\":\"thzvaytdwkqbrqu\"}],\"branchId\":\"axhexiilivp\",\"ownerName\":\"iirqtd\"}],\"endpoints\":[{\"entityId\":\"oruzfgsquyfxrxx\",\"entityName\":\"ptramxj\",\"createdAt\":\"wlwnwxuqlcv\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"tdooaoj\",\"value\":\"niodkooeb\"},{\"name\":\"nuj\",\"value\":\"emmsbvdkc\"},{\"name\":\"odtji\",\"value\":\"fw\"},{\"name\":\"lfltka\",\"value\":\"jvefkdlfoakggkfp\"}],\"projectId\":\"ao\",\"branchId\":\"ulpqblylsyxkqjn\",\"endpointType\":\"read_write\"},{\"entityId\":\"vti\",\"entityName\":\"xsdszuempsb\",\"createdAt\":\"f\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"pnqi\",\"value\":\"vinvkj\"}],\"projectId\":\"dxrbuukzcle\",\"branchId\":\"hmlwpaztzpo\",\"endpointType\":\"read_write\"},{\"entityId\":\"kwyfzqwhxxbuyqax\",\"entityName\":\"eqz\",\"createdAt\":\"priolx\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"tolmncwsobqw\",\"value\":\"sdbnwdcfhucqdpf\"}],\"projectId\":\"glsbjjc\",\"branchId\":\"vxb\",\"endpointType\":\"read_write\"}]},\"roles\":[{\"entityId\":\"tncormrlxqtvco\",\"entityName\":\"dflvkg\",\"createdAt\":\"bgdknnqv\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"n\",\"value\":\"orudsgsa\"},{\"name\":\"mkycgra\",\"value\":\"wjue\"},{\"name\":\"aeburuvdmo\",\"value\":\"s\"},{\"name\":\"zlxwabmqoefkifr\",\"value\":\"tpuqujmq\"}],\"branchId\":\"kfbtndoaongbjc\",\"permissions\":[\"jitcjedftwwaez\",\"ojvdcpzfoqo\",\"i\"],\"isSuperUser\":true}],\"databases\":[{\"entityId\":\"zg\",\"entityName\":\"ufoxc\",\"createdAt\":\"opidoamciodh\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"khnzbonlw\",\"value\":\"toego\"},{\"name\":\"dwbwhkszzcmrvexz\",\"value\":\"vbtqgsfraoyzk\"},{\"name\":\"owtlmnguxawqald\",\"value\":\"yuuximerqfobwyzn\"},{\"name\":\"bykutw\",\"value\":\"fhpagmhrskdsnf\"}],\"branchId\":\"doakgtdlmkkzevdl\",\"ownerName\":\"wpusdsttwvogv\"}],\"endpoints\":[{\"entityId\":\"dcngqqmoakufgmj\",\"entityName\":\"wr\",\"createdAt\":\"rtwaenuuzko\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"rfdwoyu\",\"value\":\"hziuiefozbhdms\"},{\"name\":\"l\",\"value\":\"zqhof\"}],\"projectId\":\"maequiahxicslfa\",\"branchId\":\"z\",\"endpointType\":\"read_write\"},{\"entityId\":\"lhalnswh\",\"entityName\":\"sp\",\"createdAt\":\"aivwitqscywu\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"uhczbwemh\",\"value\":\"i\"},{\"name\":\"sbrgz\",\"value\":\"wmsweypqwd\"}],\"projectId\":\"gicccnxqhuex\",\"branchId\":\"ttlstvlzywemhz\",\"endpointType\":\"read_write\"},{\"entityId\":\"dtclusiypb\",\"entityName\":\"gytguslfead\",\"createdAt\":\"gq\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"jhzi\",\"value\":\"xgfpelolppv\"},{\"name\":\"srp\",\"value\":\"vu\"}],\"projectId\":\"raehtwdwrft\",\"branchId\":\"iby\",\"endpointType\":\"read_only\"},{\"entityId\":\"bhshfwpracstwity\",\"entityName\":\"evxccedcp\",\"createdAt\":\"dyodnwzxltj\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"tiugcxnav\",\"value\":\"wxqibyq\"},{\"name\":\"nyowxwlmdjrkvfg\",\"value\":\"vfvpdbodaciz\"},{\"name\":\"j\",\"value\":\"lhkrribdeibqipqk\"}],\"projectId\":\"vxndz\",\"branchId\":\"krefajpjo\",\"endpointType\":\"read_only\"}]}")
            .toObject(ProjectProperties.class);
        Assertions.assertEquals("qtmnubexkpzk", model.entityName());
        Assertions.assertEquals("omgkopkwho", model.attributes().get(0).name());
        Assertions.assertEquals("v", model.attributes().get(0).value());
        Assertions.assertEquals("jxgciqibrh", model.regionId());
        Assertions.assertEquals(8083841694155689486L, model.storage());
        Assertions.assertEquals(1655789286, model.pgVersion());
        Assertions.assertEquals(656063523, model.historyRetention());
        Assertions.assertEquals(5.093772778811212, model.defaultEndpointSettings().autoscalingLimitMinCu());
        Assertions.assertEquals(4.957571627554625, model.defaultEndpointSettings().autoscalingLimitMaxCu());
        Assertions.assertEquals("bahwfl", model.branch().entityName());
        Assertions.assertEquals("cpi", model.branch().attributes().get(0).name());
        Assertions.assertEquals("xpbtgiwbwo", model.branch().attributes().get(0).value());
        Assertions.assertEquals("lpiujwaa", model.branch().projectId());
        Assertions.assertEquals("pqiiobyuqe", model.branch().parentId());
        Assertions.assertEquals("qlpqwcciuq", model.branch().roleName());
        Assertions.assertEquals("dbutauvfbtkuwhh", model.branch().databaseName());
        Assertions.assertEquals("hkoymkcdyhbp", model.branch().roles().get(0).entityName());
        Assertions.assertEquals("ywsuwsy", model.branch().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("s", model.branch().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("e", model.branch().roles().get(0).branchId());
        Assertions.assertEquals("arrwlquu", model.branch().roles().get(0).permissions().get(0));
        Assertions.assertEquals(false, model.branch().roles().get(0).isSuperUser());
        Assertions.assertEquals("vrvmnpkukghim", model.branch().databases().get(0).entityName());
        Assertions.assertEquals("zk", model.branch().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("foqreyfkzik", model.branch().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("xbjhwuaanozjosph", model.branch().databases().get(0).branchId());
        Assertions.assertEquals("ulpjr", model.branch().databases().get(0).ownerName());
        Assertions.assertEquals("ptramxj", model.branch().endpoints().get(0).entityName());
        Assertions.assertEquals("tdooaoj", model.branch().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("niodkooeb", model.branch().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("ao", model.branch().endpoints().get(0).projectId());
        Assertions.assertEquals("ulpqblylsyxkqjn", model.branch().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_WRITE, model.branch().endpoints().get(0).endpointType());
        Assertions.assertEquals("dflvkg", model.roles().get(0).entityName());
        Assertions.assertEquals("n", model.roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("orudsgsa", model.roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("kfbtndoaongbjc", model.roles().get(0).branchId());
        Assertions.assertEquals("jitcjedftwwaez", model.roles().get(0).permissions().get(0));
        Assertions.assertEquals(true, model.roles().get(0).isSuperUser());
        Assertions.assertEquals("ufoxc", model.databases().get(0).entityName());
        Assertions.assertEquals("khnzbonlw", model.databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("toego", model.databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("doakgtdlmkkzevdl", model.databases().get(0).branchId());
        Assertions.assertEquals("wpusdsttwvogv", model.databases().get(0).ownerName());
        Assertions.assertEquals("wr", model.endpoints().get(0).entityName());
        Assertions.assertEquals("rfdwoyu", model.endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("hziuiefozbhdms", model.endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("maequiahxicslfa", model.endpoints().get(0).projectId());
        Assertions.assertEquals("z", model.endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_WRITE, model.endpoints().get(0).endpointType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProjectProperties model = new ProjectProperties().withEntityName("qtmnubexkpzk")
            .withAttributes(Arrays.asList(new Attributes().withName("omgkopkwho").withValue("v"),
                new Attributes().withName("ajqgxy").withValue("mocmbqfqvmk"),
                new Attributes().withName("xozap").withValue("helxprglya"),
                new Attributes().withName("dd").withValue("kcbcue")))
            .withRegionId("jxgciqibrh")
            .withStorage(8083841694155689486L)
            .withPgVersion(1655789286)
            .withHistoryRetention(656063523)
            .withDefaultEndpointSettings(new DefaultEndpointSettings().withAutoscalingLimitMinCu(5.093772778811212)
                .withAutoscalingLimitMaxCu(4.957571627554625))
            .withBranch(
                new BranchProperties().withEntityName("bahwfl")
                    .withAttributes(Arrays.asList(new Attributes().withName("cpi").withValue("xpbtgiwbwo"),
                        new Attributes().withName("nwashrtd").withValue("kcnqxwbpo")))
                    .withProjectId("lpiujwaa")
                    .withParentId("pqiiobyuqe")
                    .withRoleName("qlpqwcciuq")
                    .withDatabaseName("dbutauvfbtkuwhh")
                    .withRoles(
                        Arrays.asList(
                            new NeonRoleProperties().withEntityName("hkoymkcdyhbp")
                                .withAttributes(Arrays.asList(new Attributes().withName("ywsuwsy").withValue("s"),
                                    new Attributes().withName("dsytgadgvr").withValue("ea")))
                                .withBranchId("e")
                                .withPermissions(Arrays.asList("arrwlquu"))
                                .withIsSuperUser(false),
                            new NeonRoleProperties().withEntityName("ji")
                                .withAttributes(Arrays.asList(
                                    new Attributes().withName("uvksgplsaknynfsy").withValue("ljphuopxodl"),
                                    new Attributes().withName("iyntorzihle").withValue("sjswsrms")))
                                .withBranchId("zrpzb")
                                .withPermissions(
                                    Arrays.asList("kqqzqioxiysu", "i", "ynkedyatrwyhqmib", "yhwitsmypyynpcdp"))
                                .withIsSuperUser(true),
                            new NeonRoleProperties().withEntityName("z")
                                .withAttributes(
                                    Arrays.asList(new Attributes().withName("xbldtlwwrlkdmtn").withValue("vokotllxdyh"),
                                        new Attributes().withName("syocogjltdtbnnha").withValue("oocrkvcikhnv")))
                                .withBranchId("mqg")
                                .withPermissions(Arrays.asList("u", "zikywgg"))
                                .withIsSuperUser(true),
                            new NeonRoleProperties().withEntityName("elwuipi")
                                .withAttributes(Arrays
                                    .asList(new Attributes().withName("nayrhyrnxxmueedn").withValue("rdvstkwqqtch")))
                                .withBranchId("lmfmtdaay")
                                .withPermissions(Arrays.asList("wvgpiohg"))
                                .withIsSuperUser(true)))
                    .withDatabases(Arrays.asList(new NeonDatabaseProperties().withEntityName("vrvmnpkukghim")
                        .withAttributes(Arrays.asList(new Attributes().withName("zk").withValue("foqreyfkzik"),
                            new Attributes().withName("jawneaiv").withValue("wczelpci"),
                            new Attributes().withName("elsfeaen").withValue("abfatkl")))
                        .withBranchId("xbjhwuaanozjosph")
                        .withOwnerName("ulpjr"),
                        new NeonDatabaseProperties().withEntityName("vimjwos")
                            .withAttributes(
                                Arrays.asList(new Attributes().withName("tq").withValue("miekkezzikhlyfjh")))
                            .withBranchId("qgge")
                            .withOwnerName("unygaeqid"),
                        new NeonDatabaseProperties().withEntityName("uvarmywdmjsjq")
                            .withAttributes(
                                Arrays.asList(new Attributes().withName("uhpkxkgymar").withValue("qnajxqugj"),
                                    new Attributes().withName("ky").withValue("ubeddg")))
                            .withBranchId("ofwq")
                            .withOwnerName("qal"),
                        new NeonDatabaseProperties().withEntityName("yxbaaabjyvayf")
                            .withAttributes(Arrays.asList(new Attributes().withName("zqogse").withValue("nevfdnw"),
                                new Attributes().withName("wmewzsyy").withValue("euzsoi"),
                                new Attributes().withName("judpfrxt").withValue("thzvaytdwkqbrqu")))
                            .withBranchId("axhexiilivp")
                            .withOwnerName("iirqtd")))
                    .withEndpoints(Arrays.asList(
                        new EndpointProperties().withEntityName("ptramxj")
                            .withAttributes(Arrays.asList(new Attributes().withName("tdooaoj").withValue("niodkooeb"),
                                new Attributes().withName("nuj").withValue("emmsbvdkc"),
                                new Attributes().withName("odtji").withValue("fw"),
                                new Attributes().withName("lfltka").withValue("jvefkdlfoakggkfp")))
                            .withProjectId("ao")
                            .withBranchId("ulpqblylsyxkqjn")
                            .withEndpointType(EndpointType.READ_WRITE),
                        new EndpointProperties().withEntityName("xsdszuempsb")
                            .withAttributes(Arrays.asList(new Attributes().withName("pnqi").withValue("vinvkj")))
                            .withProjectId("dxrbuukzcle")
                            .withBranchId("hmlwpaztzpo")
                            .withEndpointType(EndpointType.READ_WRITE),
                        new EndpointProperties().withEntityName("eqz")
                            .withAttributes(
                                Arrays.asList(new Attributes().withName("tolmncwsobqw").withValue("sdbnwdcfhucqdpf")))
                            .withProjectId("glsbjjc")
                            .withBranchId("vxb")
                            .withEndpointType(EndpointType.READ_WRITE))))
            .withRoles(Arrays.asList(new NeonRoleProperties().withEntityName("dflvkg")
                .withAttributes(Arrays.asList(new Attributes().withName("n").withValue("orudsgsa"),
                    new Attributes().withName("mkycgra").withValue("wjue"),
                    new Attributes().withName("aeburuvdmo").withValue("s"),
                    new Attributes().withName("zlxwabmqoefkifr").withValue("tpuqujmq")))
                .withBranchId("kfbtndoaongbjc")
                .withPermissions(Arrays.asList("jitcjedftwwaez", "ojvdcpzfoqo", "i"))
                .withIsSuperUser(true)))
            .withDatabases(Arrays.asList(new NeonDatabaseProperties().withEntityName("ufoxc")
                .withAttributes(Arrays.asList(new Attributes().withName("khnzbonlw").withValue("toego"),
                    new Attributes().withName("dwbwhkszzcmrvexz").withValue("vbtqgsfraoyzk"),
                    new Attributes().withName("owtlmnguxawqald").withValue("yuuximerqfobwyzn"),
                    new Attributes().withName("bykutw").withValue("fhpagmhrskdsnf")))
                .withBranchId("doakgtdlmkkzevdl")
                .withOwnerName("wpusdsttwvogv")))
            .withEndpoints(Arrays.asList(
                new EndpointProperties().withEntityName("wr")
                    .withAttributes(Arrays.asList(new Attributes().withName("rfdwoyu").withValue("hziuiefozbhdms"),
                        new Attributes().withName("l").withValue("zqhof")))
                    .withProjectId("maequiahxicslfa")
                    .withBranchId("z")
                    .withEndpointType(EndpointType.READ_WRITE),
                new EndpointProperties().withEntityName("sp")
                    .withAttributes(Arrays.asList(new Attributes().withName("uhczbwemh").withValue("i"),
                        new Attributes().withName("sbrgz").withValue("wmsweypqwd")))
                    .withProjectId("gicccnxqhuex")
                    .withBranchId("ttlstvlzywemhz")
                    .withEndpointType(EndpointType.READ_WRITE),
                new EndpointProperties().withEntityName("gytguslfead")
                    .withAttributes(Arrays.asList(new Attributes().withName("jhzi").withValue("xgfpelolppv"),
                        new Attributes().withName("srp").withValue("vu")))
                    .withProjectId("raehtwdwrft")
                    .withBranchId("iby")
                    .withEndpointType(EndpointType.READ_ONLY),
                new EndpointProperties().withEntityName("evxccedcp")
                    .withAttributes(Arrays.asList(new Attributes().withName("tiugcxnav").withValue("wxqibyq"),
                        new Attributes().withName("nyowxwlmdjrkvfg").withValue("vfvpdbodaciz"),
                        new Attributes().withName("j").withValue("lhkrribdeibqipqk")))
                    .withProjectId("vxndz")
                    .withBranchId("krefajpjo")
                    .withEndpointType(EndpointType.READ_ONLY)));
        model = BinaryData.fromObject(model).toObject(ProjectProperties.class);
        Assertions.assertEquals("qtmnubexkpzk", model.entityName());
        Assertions.assertEquals("omgkopkwho", model.attributes().get(0).name());
        Assertions.assertEquals("v", model.attributes().get(0).value());
        Assertions.assertEquals("jxgciqibrh", model.regionId());
        Assertions.assertEquals(8083841694155689486L, model.storage());
        Assertions.assertEquals(1655789286, model.pgVersion());
        Assertions.assertEquals(656063523, model.historyRetention());
        Assertions.assertEquals(5.093772778811212, model.defaultEndpointSettings().autoscalingLimitMinCu());
        Assertions.assertEquals(4.957571627554625, model.defaultEndpointSettings().autoscalingLimitMaxCu());
        Assertions.assertEquals("bahwfl", model.branch().entityName());
        Assertions.assertEquals("cpi", model.branch().attributes().get(0).name());
        Assertions.assertEquals("xpbtgiwbwo", model.branch().attributes().get(0).value());
        Assertions.assertEquals("lpiujwaa", model.branch().projectId());
        Assertions.assertEquals("pqiiobyuqe", model.branch().parentId());
        Assertions.assertEquals("qlpqwcciuq", model.branch().roleName());
        Assertions.assertEquals("dbutauvfbtkuwhh", model.branch().databaseName());
        Assertions.assertEquals("hkoymkcdyhbp", model.branch().roles().get(0).entityName());
        Assertions.assertEquals("ywsuwsy", model.branch().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("s", model.branch().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("e", model.branch().roles().get(0).branchId());
        Assertions.assertEquals("arrwlquu", model.branch().roles().get(0).permissions().get(0));
        Assertions.assertEquals(false, model.branch().roles().get(0).isSuperUser());
        Assertions.assertEquals("vrvmnpkukghim", model.branch().databases().get(0).entityName());
        Assertions.assertEquals("zk", model.branch().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("foqreyfkzik", model.branch().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("xbjhwuaanozjosph", model.branch().databases().get(0).branchId());
        Assertions.assertEquals("ulpjr", model.branch().databases().get(0).ownerName());
        Assertions.assertEquals("ptramxj", model.branch().endpoints().get(0).entityName());
        Assertions.assertEquals("tdooaoj", model.branch().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("niodkooeb", model.branch().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("ao", model.branch().endpoints().get(0).projectId());
        Assertions.assertEquals("ulpqblylsyxkqjn", model.branch().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_WRITE, model.branch().endpoints().get(0).endpointType());
        Assertions.assertEquals("dflvkg", model.roles().get(0).entityName());
        Assertions.assertEquals("n", model.roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("orudsgsa", model.roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("kfbtndoaongbjc", model.roles().get(0).branchId());
        Assertions.assertEquals("jitcjedftwwaez", model.roles().get(0).permissions().get(0));
        Assertions.assertEquals(true, model.roles().get(0).isSuperUser());
        Assertions.assertEquals("ufoxc", model.databases().get(0).entityName());
        Assertions.assertEquals("khnzbonlw", model.databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("toego", model.databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("doakgtdlmkkzevdl", model.databases().get(0).branchId());
        Assertions.assertEquals("wpusdsttwvogv", model.databases().get(0).ownerName());
        Assertions.assertEquals("wr", model.endpoints().get(0).entityName());
        Assertions.assertEquals("rfdwoyu", model.endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("hziuiefozbhdms", model.endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("maequiahxicslfa", model.endpoints().get(0).projectId());
        Assertions.assertEquals("z", model.endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_WRITE, model.endpoints().get(0).endpointType());
    }
}
