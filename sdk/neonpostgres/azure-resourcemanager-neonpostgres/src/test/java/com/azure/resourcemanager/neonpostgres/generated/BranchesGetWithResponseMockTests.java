// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.neonpostgres.NeonPostgresManager;
import com.azure.resourcemanager.neonpostgres.models.Branch;
import com.azure.resourcemanager.neonpostgres.models.EndpointType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class BranchesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"entityId\":\"qnl\",\"entityName\":\"xc\",\"createdAt\":\"nitodmrahj\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"nvlt\",\"value\":\"vmah\"},{\"name\":\"uwkup\",\"value\":\"bnhi\"},{\"name\":\"lh\",\"value\":\"zhrcqdfwbif\"}],\"projectId\":\"hlsforsimtf\",\"parentId\":\"mmynbrpelpfi\",\"roleName\":\"ezgxmpeszam\",\"databaseName\":\"ler\",\"roles\":[{\"entityId\":\"ui\",\"entityName\":\"z\",\"createdAt\":\"llxsw\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"mirmnrijefmrt\",\"value\":\"xcevdspth\"},{\"name\":\"ffmwt\",\"value\":\"lgmkokqoi\"},{\"name\":\"xie\",\"value\":\"wlnm\"},{\"name\":\"kffcnuestbsl\",\"value\":\"e\"}],\"branchId\":\"nccoteli\",\"permissions\":[\"ytehhxtzxq\",\"wby\",\"uqlngncrdor\",\"tysecpekhxdb\"],\"isSuperUser\":false,\"roleName\":\"zcvimmwcko\",\"lastUpdated\":\"lfymtrts\",\"owns\":\"upqtzckj\"}],\"databases\":[{\"entityId\":\"gnr\",\"entityName\":\"j\",\"createdAt\":\"hjxncqzahg\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"obimorzolxosgi\",\"value\":\"trxueqbmxqfgv\"}],\"branchId\":\"jqswshesgcs\",\"ownerName\":\"secxlngouf\",\"databaseName\":\"zpbm\",\"lastUpdated\":\"zspfyvslaz\"},{\"entityId\":\"plxg\",\"entityName\":\"um\",\"createdAt\":\"ycildrzn\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"qthkwxfugfz\",\"value\":\"zy\"}],\"branchId\":\"uyjnqzbrqcakm\",\"ownerName\":\"kviyjucamnsbqoit\",\"databaseName\":\"mucjiuh\",\"lastUpdated\":\"yvehyk\"}],\"endpoints\":[{\"entityId\":\"qdvpqfbxgycudusd\",\"entityName\":\"xql\",\"createdAt\":\"no\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"fopkyll\",\"value\":\"ey\"},{\"name\":\"nj\",\"value\":\"w\"}],\"projectId\":\"sfwtwrsvev\",\"branchId\":\"e\",\"endpointType\":\"read_only\",\"endpointId\":\"hqhg\",\"computeName\":\"tbzvulqevvjncp\",\"status\":\"active\",\"lastActive\":\"xgdmvghcmixmlwkf\",\"size\":{\"autoscalingLimitMinCu\":66.53454982521654,\"autoscalingLimitMaxCu\":62.96809272950972}},{\"entityId\":\"talqee\",\"entityName\":\"dfyimooaezk\",\"createdAt\":\"ms\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"qwbywaazbaeee\",\"value\":\"fztvnabfbbtown\"},{\"name\":\"ljdkxhmewyaolc\",\"value\":\"zxkrdpuyytbpkrpk\"},{\"name\":\"qetp\",\"value\":\"enefnoafpcnrx\"}],\"projectId\":\"rxowvhufcmuajwb\",\"branchId\":\"p\",\"endpointType\":\"read_write\",\"endpointId\":\"frfa\",\"computeName\":\"nnsvrfajynihti\",\"status\":\"idle\",\"lastActive\":\"zq\",\"size\":{\"autoscalingLimitMinCu\":38.46188918133775,\"autoscalingLimitMaxCu\":44.689102582224606}},{\"entityId\":\"lf\",\"entityName\":\"bgcgyohrcmeqlj\",\"createdAt\":\"umhycxonebld\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"fjwcngkwxjsjquvo\",\"value\":\"ufzdtsrpju\"}],\"projectId\":\"zacrzhnsbylgmgbh\",\"branchId\":\"czouan\",\"endpointType\":\"read_only\",\"endpointId\":\"vcxglxoqwb\",\"computeName\":\"ilqbzbwbgwzhb\",\"status\":\"init\",\"lastActive\":\"eyodpiovnl\",\"size\":{\"autoscalingLimitMinCu\":97.3235381100841,\"autoscalingLimitMaxCu\":33.72096296186551}},{\"entityId\":\"uafapwxsvdeatjio\",\"entityName\":\"irgoextqdn\",\"createdAt\":\"gntimz\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"tbsetko\",\"value\":\"sqvhe\"},{\"name\":\"aakghcrzmmmjyvdh\",\"value\":\"gdiwmlgstm\"},{\"name\":\"etqjisjm\",\"value\":\"lzcaqfkakhgkrvt\"},{\"name\":\"ycvytv\",\"value\":\"ejqaw\"}],\"projectId\":\"sqpfzx\",\"branchId\":\"zbdypbbimhjbozv\",\"endpointType\":\"read_only\",\"endpointId\":\"clnh\",\"computeName\":\"cyuzlybqscibv\",\"status\":\"active\",\"lastActive\":\"ckcafnwqh\",\"size\":{\"autoscalingLimitMinCu\":87.848671509364,\"autoscalingLimitMaxCu\":77.62741655539035}}],\"branchId\":\"ulbylmgjzrycwpbg\",\"branch\":\"whm\",\"dataSize\":\"ucknsastlps\",\"lastActive\":\"omic\",\"computeHours\":\"rvlvvjmx\",\"protected\":false,\"isDefault\":false},\"id\":\"qecjrzvlcivqx\",\"name\":\"emklphx\",\"type\":\"wwlojkbgnf\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NeonPostgresManager manager = NeonPostgresManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Branch response = manager.branches()
            .getWithResponse("xfkz", "ztirjvqxvwkiocxo", "rjwbuocqflm", "lrlqxbctatezyozd",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("xc", response.properties().entityName());
        Assertions.assertEquals("nvlt", response.properties().attributes().get(0).name());
        Assertions.assertEquals("vmah", response.properties().attributes().get(0).value());
        Assertions.assertEquals("hlsforsimtf", response.properties().projectId());
        Assertions.assertEquals("mmynbrpelpfi", response.properties().parentId());
        Assertions.assertEquals("ezgxmpeszam", response.properties().roleName());
        Assertions.assertEquals("ler", response.properties().databaseName());
        Assertions.assertEquals("z", response.properties().roles().get(0).entityName());
        Assertions.assertEquals("mirmnrijefmrt", response.properties().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("xcevdspth", response.properties().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("nccoteli", response.properties().roles().get(0).branchId());
        Assertions.assertEquals("ytehhxtzxq", response.properties().roles().get(0).permissions().get(0));
        Assertions.assertFalse(response.properties().roles().get(0).isSuperUser());
        Assertions.assertEquals("zcvimmwcko", response.properties().roles().get(0).roleName());
        Assertions.assertEquals("j", response.properties().databases().get(0).entityName());
        Assertions.assertEquals("obimorzolxosgi", response.properties().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("trxueqbmxqfgv", response.properties().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("jqswshesgcs", response.properties().databases().get(0).branchId());
        Assertions.assertEquals("secxlngouf", response.properties().databases().get(0).ownerName());
        Assertions.assertEquals("zpbm", response.properties().databases().get(0).databaseName());
        Assertions.assertEquals("xql", response.properties().endpoints().get(0).entityName());
        Assertions.assertEquals("fopkyll", response.properties().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("ey", response.properties().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("sfwtwrsvev", response.properties().endpoints().get(0).projectId());
        Assertions.assertEquals("e", response.properties().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_ONLY, response.properties().endpoints().get(0).endpointType());
        Assertions.assertEquals("hqhg", response.properties().endpoints().get(0).endpointId());
        Assertions.assertEquals("tbzvulqevvjncp", response.properties().endpoints().get(0).computeName());
        Assertions.assertEquals(66.53454982521654,
            response.properties().endpoints().get(0).size().autoscalingLimitMinCu());
        Assertions.assertEquals(62.96809272950972,
            response.properties().endpoints().get(0).size().autoscalingLimitMaxCu());
        Assertions.assertEquals("ulbylmgjzrycwpbg", response.properties().branchId());
        Assertions.assertEquals("whm", response.properties().branch());
    }
}
