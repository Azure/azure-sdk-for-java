// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.neonpostgres.NeonPostgresManager;
import com.azure.resourcemanager.neonpostgres.models.Branch;
import com.azure.resourcemanager.neonpostgres.models.EndpointType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class BranchesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"entityId\":\"gzjxxlf\",\"entityName\":\"lzuqloiwyayyzivr\",\"createdAt\":\"tcdqlh\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"ktj\",\"value\":\"eifibfiplhx\"}],\"projectId\":\"smyc\",\"parentId\":\"wlyeyz\",\"roleName\":\"dsqcmhnxl\",\"databaseName\":\"uwod\",\"roles\":[{\"entityId\":\"bkvnrpbjrmvg\",\"entityName\":\"plehmumk\",\"createdAt\":\"llcz\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"hkgqggoxsst\",\"value\":\"ivrakfrryn\"},{\"name\":\"cwmhlymgnukxrk\",\"value\":\"mjpequlr\"}],\"branchId\":\"audgjtfbclakkucd\",\"permissions\":[\"hczbuto\",\"cgjtirjwayhicqq\",\"wvgwkslvli\",\"edvbiabvnsrge\"],\"isSuperUser\":true}],\"databases\":[{\"entityId\":\"dyfhb\",\"entityName\":\"khojqttbspvk\",\"createdAt\":\"laqjsgyzstujrzx\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"d\",\"value\":\"lduyehiiittugyuq\"},{\"name\":\"rldaxurfqa\",\"value\":\"csozjv\"}],\"branchId\":\"zciggbnvtxofwa\",\"ownerName\":\"yxwhoeamo\"},{\"entityId\":\"bdoeysf\",\"entityName\":\"imtwuuhau\",\"createdAt\":\"nkwmnfeub\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"kwfugiphrrkuu\",\"value\":\"nqd\"}],\"branchId\":\"hz\",\"ownerName\":\"opueo\"}],\"endpoints\":[{\"entityId\":\"wlujopwnibit\",\"entityName\":\"zt\",\"createdAt\":\"qumqvfmwcaddt\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"gtvgwyu\",\"value\":\"be\"},{\"name\":\"fnzzryizwbxg\",\"value\":\"ebxlayu\"},{\"name\":\"omirhp\",\"value\":\"abenqlamwmg\"}],\"projectId\":\"ayxflnbcpjstbh\",\"branchId\":\"hcucsqsnx\",\"endpointType\":\"read_only\"},{\"entityId\":\"feapdrbzyvbsuadu\",\"entityName\":\"odkaxpfobkzhm\",\"createdAt\":\"dqltdel\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"adhfztlray\",\"value\":\"rkgzkyhudbkuw\"},{\"name\":\"zqxlcwe\",\"value\":\"kfecjvxf\"}],\"projectId\":\"ufqizjvppw\",\"branchId\":\"a\",\"endpointType\":\"read_write\"}]},\"id\":\"jmjjxi\",\"name\":\"xpxhnzlslekc\",\"type\":\"tgzkjtyqpd\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NeonPostgresManager manager = NeonPostgresManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Branch response = manager.branches()
            .getWithResponse("lwk", "fowzkroyr", "urxf", "zqjim", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("lzuqloiwyayyzivr", response.properties().entityName());
        Assertions.assertEquals("ktj", response.properties().attributes().get(0).name());
        Assertions.assertEquals("eifibfiplhx", response.properties().attributes().get(0).value());
        Assertions.assertEquals("smyc", response.properties().projectId());
        Assertions.assertEquals("wlyeyz", response.properties().parentId());
        Assertions.assertEquals("dsqcmhnxl", response.properties().roleName());
        Assertions.assertEquals("uwod", response.properties().databaseName());
        Assertions.assertEquals("plehmumk", response.properties().roles().get(0).entityName());
        Assertions.assertEquals("hkgqggoxsst", response.properties().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("ivrakfrryn", response.properties().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("audgjtfbclakkucd", response.properties().roles().get(0).branchId());
        Assertions.assertEquals("hczbuto", response.properties().roles().get(0).permissions().get(0));
        Assertions.assertEquals(true, response.properties().roles().get(0).isSuperUser());
        Assertions.assertEquals("khojqttbspvk", response.properties().databases().get(0).entityName());
        Assertions.assertEquals("d", response.properties().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("lduyehiiittugyuq",
            response.properties().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("zciggbnvtxofwa", response.properties().databases().get(0).branchId());
        Assertions.assertEquals("yxwhoeamo", response.properties().databases().get(0).ownerName());
        Assertions.assertEquals("zt", response.properties().endpoints().get(0).entityName());
        Assertions.assertEquals("gtvgwyu", response.properties().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("be", response.properties().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("ayxflnbcpjstbh", response.properties().endpoints().get(0).projectId());
        Assertions.assertEquals("hcucsqsnx", response.properties().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_ONLY, response.properties().endpoints().get(0).endpointType());
    }
}
