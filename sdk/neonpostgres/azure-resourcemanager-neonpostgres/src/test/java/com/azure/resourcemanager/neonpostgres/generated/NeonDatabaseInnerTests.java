// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.neonpostgres.fluent.models.NeonDatabaseInner;
import com.azure.resourcemanager.neonpostgres.models.models.Attributes;
import com.azure.resourcemanager.neonpostgres.models.models.NeonDatabaseProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NeonDatabaseInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NeonDatabaseInner model = BinaryData.fromString(
            "{\"properties\":{\"entityId\":\"qffawey\",\"entityName\":\"kphyjdxrav\",\"createdAt\":\"qdbrxmrgc\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"kiyfjjkbajbusc\",\"value\":\"duusioycblevpmcl\"}],\"branchId\":\"yxkyxlz\",\"ownerName\":\"jgkz\"},\"id\":\"taf\",\"name\":\"bzf\",\"type\":\"ovwmbjlzqsczpgvd\"}")
            .toObject(NeonDatabaseInner.class);
        Assertions.assertEquals("kphyjdxrav", model.properties().entityName());
        Assertions.assertEquals("kiyfjjkbajbusc", model.properties().attributes().get(0).name());
        Assertions.assertEquals("duusioycblevpmcl", model.properties().attributes().get(0).value());
        Assertions.assertEquals("yxkyxlz", model.properties().branchId());
        Assertions.assertEquals("jgkz", model.properties().ownerName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NeonDatabaseInner model = new NeonDatabaseInner().withProperties(new NeonDatabaseProperties()
            .withEntityName("kphyjdxrav")
            .withAttributes(Arrays.asList(new Attributes().withName("kiyfjjkbajbusc").withValue("duusioycblevpmcl")))
            .withBranchId("yxkyxlz")
            .withOwnerName("jgkz"));
        model = BinaryData.fromObject(model).toObject(NeonDatabaseInner.class);
        Assertions.assertEquals("kphyjdxrav", model.properties().entityName());
        Assertions.assertEquals("kiyfjjkbajbusc", model.properties().attributes().get(0).name());
        Assertions.assertEquals("duusioycblevpmcl", model.properties().attributes().get(0).value());
        Assertions.assertEquals("yxkyxlz", model.properties().branchId());
        Assertions.assertEquals("jgkz", model.properties().ownerName());
    }
}
