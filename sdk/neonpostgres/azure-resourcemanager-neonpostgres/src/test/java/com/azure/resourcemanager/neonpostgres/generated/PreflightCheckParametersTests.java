// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.neonpostgres.models.Attributes;
import com.azure.resourcemanager.neonpostgres.models.AutoscalingSize;
import com.azure.resourcemanager.neonpostgres.models.BranchProperties;
import com.azure.resourcemanager.neonpostgres.models.EndpointProperties;
import com.azure.resourcemanager.neonpostgres.models.EndpointType;
import com.azure.resourcemanager.neonpostgres.models.EntityType;
import com.azure.resourcemanager.neonpostgres.models.NeonDatabaseProperties;
import com.azure.resourcemanager.neonpostgres.models.NeonRoleProperties;
import com.azure.resourcemanager.neonpostgres.models.PreflightCheckParameters;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PreflightCheckParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PreflightCheckParameters model = BinaryData.fromString(
            "{\"projectId\":\"tmbozomtzamicbig\",\"branchId\":\"cdgzseznux\",\"entityType\":\"endpoint\",\"branchProperties\":{\"entityId\":\"iraabmdlqjbedpf\",\"entityName\":\"lhupmomihzbdnpxp\",\"createdAt\":\"dpr\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"yi\",\"value\":\"ghflrufssjyghsf\"},{\"name\":\"rkbhammgmqfm\",\"value\":\"fgvqcpdw\"},{\"name\":\"gquxweysland\",\"value\":\"dcdjhunh\"}],\"projectId\":\"cgawnrrnquo\",\"parentId\":\"otire\",\"roleName\":\"seob\",\"databaseName\":\"xstcyilbvzm\",\"roles\":[{\"entityId\":\"zlquzexo\",\"entityName\":\"xebjvbz\",\"createdAt\":\"zabwmvog\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"pgidnw\",\"value\":\"ehaqidoyzltgio\"},{\"name\":\"qoqpepiaeap\",\"value\":\"sergdtpe\"}],\"branchId\":\"acyh\",\"permissions\":[\"b\",\"qq\",\"cjubkhjozfymcwm\",\"upyvqyvliq\"],\"isSuperUser\":true,\"roleName\":\"ejbsvsiaies\",\"lastUpdated\":\"ddzydisnu\",\"owns\":\"ywyjlnldpxot\"},{\"entityId\":\"iiaocqib\",\"entityName\":\"ihweeb\",\"createdAt\":\"hryvcjwqwoqsra\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"zybspijhfrzgdkk\",\"value\":\"gv\"},{\"name\":\"ukhsusmmorf\",\"value\":\"zhwilzzh\"},{\"name\":\"ijmri\",\"value\":\"r\"}],\"branchId\":\"dneyttlr\",\"permissions\":[\"v\",\"bkut\",\"umltwjflu\",\"ynbpvzlqywauy\"],\"isSuperUser\":true,\"roleName\":\"khmocgjs\",\"lastUpdated\":\"ouarhwvixqqggljk\",\"owns\":\"sjrclrvtzq\"},{\"entityId\":\"bctbhp\",\"entityName\":\"xpc\",\"createdAt\":\"dnyeita\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"y\",\"value\":\"zjahwriuomz\"},{\"name\":\"zfkiceevsaaxwsp\",\"value\":\"axikhfjqebglcxk\"},{\"name\":\"gzzromv\",\"value\":\"g\"}],\"branchId\":\"emtm\",\"permissions\":[\"fsvpink\"],\"isSuperUser\":true,\"roleName\":\"qtdiswxspvckoj\",\"lastUpdated\":\"bbg\",\"owns\":\"ft\"},{\"entityId\":\"ubz\",\"entityName\":\"p\",\"createdAt\":\"ylytcovqseusr\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"zfxnxmlbmuos\",\"value\":\"kjmdihdcyy\"},{\"name\":\"zlwhbwzjnufzrfgm\",\"value\":\"qgnnbz\"}],\"branchId\":\"ftedzuubjtvgjsx\",\"permissions\":[\"jjvavdpww\"],\"isSuperUser\":false,\"roleName\":\"phtitsffofwanmhk\",\"lastUpdated\":\"auwazcgwd\",\"owns\":\"iwgy\"}],\"databases\":[{\"entityId\":\"zokscvg\",\"entityName\":\"ixdgbyfgwewqkj\",\"createdAt\":\"prwpxsoohu\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"klt\",\"value\":\"zuu\"}],\"branchId\":\"gzlf\",\"ownerName\":\"rdcgu\",\"databaseName\":\"rtmdylperpil\",\"lastUpdated\":\"jzgc\"}],\"endpoints\":[{\"entityId\":\"fpfbodetres\",\"entityName\":\"vtshuvf\",\"createdAt\":\"ai\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"evzgjypanh\",\"value\":\"mpdxxzetwwzjwotn\"}],\"projectId\":\"kf\",\"branchId\":\"lhrfox\",\"endpointType\":\"read_only\",\"endpointId\":\"rsnhpcs\",\"computeName\":\"qxovppqibukk\",\"status\":\"idle\",\"lastActive\":\"lrmlccmetjscz\",\"size\":{\"autoscalingLimitMinCu\":44.11713486567413,\"autoscalingLimitMaxCu\":71.7851174215937}},{\"entityId\":\"asdsyenzsie\",\"entityName\":\"cplhyvdgxlyzkxi\",\"createdAt\":\"shezs\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"upjo\",\"value\":\"mozsayebrazwz\"},{\"name\":\"pzbtzuyk\",\"value\":\"kipfsdyepf\"},{\"name\":\"ocmbezacf\",\"value\":\"ztgaz\"},{\"name\":\"yqejga\",\"value\":\"okctgkppgkqzkc\"}],\"projectId\":\"mffngdyfcixr\",\"branchId\":\"cqvhoejgoiutgwrm\",\"endpointType\":\"read_write\",\"endpointId\":\"qha\",\"computeName\":\"ntacih\",\"status\":\"idle\",\"lastActive\":\"mip\",\"size\":{\"autoscalingLimitMinCu\":76.23832100976136,\"autoscalingLimitMaxCu\":5.042113071765463}},{\"entityId\":\"lbhik\",\"entityName\":\"qgrvg\",\"createdAt\":\"mxpu\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"fjyi\",\"value\":\"socwiqbuout\"}],\"projectId\":\"yzgleofjs\",\"branchId\":\"bwwzvdajf\",\"endpointType\":\"read_only\",\"endpointId\":\"fmaciqgjjrlhiq\",\"computeName\":\"ixvt\",\"status\":\"idle\",\"lastActive\":\"uxtndopgjttbasua\",\"size\":{\"autoscalingLimitMinCu\":93.41435149022843,\"autoscalingLimitMaxCu\":74.58497589837098}}],\"branchId\":\"bea\",\"branch\":\"kixvvlwy\",\"dataSize\":\"bb\",\"lastActive\":\"vzfjm\",\"computeHours\":\"ugzfeuzjl\",\"protected\":false,\"isDefault\":true},\"roleProperties\":{\"entityId\":\"ezolgjzm\",\"entityName\":\"uydoccnx\",\"createdAt\":\"anzbui\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"tecaa\",\"value\":\"sdohz\"},{\"name\":\"iucbda\",\"value\":\"mbwiinjdllwktl\"}],\"branchId\":\"owavvqxuajgcqw\",\"permissions\":[\"nkgfcfdr\",\"wsikxxtclhuulr\"],\"isSuperUser\":true,\"roleName\":\"okvjgbzsxebrslt\",\"lastUpdated\":\"yhcdjwsuoardnag\",\"owns\":\"pufpbpgnrholhu\"},\"databaseProperties\":{\"entityId\":\"wxiplkyso\",\"entityName\":\"yjprxslw\",\"createdAt\":\"mcvht\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"f\",\"value\":\"huwzbxpcqzgi\"},{\"name\":\"otjecohmxvvl\",\"value\":\"rskapbxwieexu\"},{\"name\":\"aderltfokyk\",\"value\":\"yimyccgrvk\"},{\"name\":\"xzznnui\",\"value\":\"ersejeg\"}],\"branchId\":\"kjguwrjmwvvbtuq\",\"ownerName\":\"ximwgxqldeko\",\"databaseName\":\"gxieqfkyfhi\",\"lastUpdated\":\"jaqupbyynvskpaj\"},\"endpointProperties\":{\"entityId\":\"eumexmjbxc\",\"entityName\":\"cwkqmtxape\",\"createdAt\":\"scrpilgftrqrej\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"qimlda\",\"value\":\"lfxlmuifmuadj\"},{\"name\":\"fsn\",\"value\":\"skiioshjgczetybn\"},{\"name\":\"gztlcgc\",\"value\":\"j\"}],\"projectId\":\"fjvmy\",\"branchId\":\"zebecuvl\",\"endpointType\":\"read_only\",\"endpointId\":\"wc\",\"computeName\":\"kxpylrwox\",\"status\":\"init\",\"lastActive\":\"syxjijeyp\",\"size\":{\"autoscalingLimitMinCu\":45.75339741827176,\"autoscalingLimitMaxCu\":80.05558843336877}}}")
            .toObject(PreflightCheckParameters.class);
        Assertions.assertEquals("tmbozomtzamicbig", model.projectId());
        Assertions.assertEquals("cdgzseznux", model.branchId());
        Assertions.assertEquals(EntityType.ENDPOINT, model.entityType());
        Assertions.assertEquals("lhupmomihzbdnpxp", model.branchProperties().entityName());
        Assertions.assertEquals("yi", model.branchProperties().attributes().get(0).name());
        Assertions.assertEquals("ghflrufssjyghsf", model.branchProperties().attributes().get(0).value());
        Assertions.assertEquals("cgawnrrnquo", model.branchProperties().projectId());
        Assertions.assertEquals("otire", model.branchProperties().parentId());
        Assertions.assertEquals("seob", model.branchProperties().roleName());
        Assertions.assertEquals("xstcyilbvzm", model.branchProperties().databaseName());
        Assertions.assertEquals("xebjvbz", model.branchProperties().roles().get(0).entityName());
        Assertions.assertEquals("pgidnw", model.branchProperties().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("ehaqidoyzltgio", model.branchProperties().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("acyh", model.branchProperties().roles().get(0).branchId());
        Assertions.assertEquals("b", model.branchProperties().roles().get(0).permissions().get(0));
        Assertions.assertTrue(model.branchProperties().roles().get(0).isSuperUser());
        Assertions.assertEquals("ejbsvsiaies", model.branchProperties().roles().get(0).roleName());
        Assertions.assertEquals("ixdgbyfgwewqkj", model.branchProperties().databases().get(0).entityName());
        Assertions.assertEquals("klt", model.branchProperties().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("zuu", model.branchProperties().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("gzlf", model.branchProperties().databases().get(0).branchId());
        Assertions.assertEquals("rdcgu", model.branchProperties().databases().get(0).ownerName());
        Assertions.assertEquals("rtmdylperpil", model.branchProperties().databases().get(0).databaseName());
        Assertions.assertEquals("vtshuvf", model.branchProperties().endpoints().get(0).entityName());
        Assertions.assertEquals("evzgjypanh", model.branchProperties().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("mpdxxzetwwzjwotn",
            model.branchProperties().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("kf", model.branchProperties().endpoints().get(0).projectId());
        Assertions.assertEquals("lhrfox", model.branchProperties().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_ONLY, model.branchProperties().endpoints().get(0).endpointType());
        Assertions.assertEquals("rsnhpcs", model.branchProperties().endpoints().get(0).endpointId());
        Assertions.assertEquals("qxovppqibukk", model.branchProperties().endpoints().get(0).computeName());
        Assertions.assertEquals(44.11713486567413,
            model.branchProperties().endpoints().get(0).size().autoscalingLimitMinCu());
        Assertions.assertEquals(71.7851174215937,
            model.branchProperties().endpoints().get(0).size().autoscalingLimitMaxCu());
        Assertions.assertEquals("bea", model.branchProperties().branchId());
        Assertions.assertEquals("kixvvlwy", model.branchProperties().branch());
        Assertions.assertEquals("uydoccnx", model.roleProperties().entityName());
        Assertions.assertEquals("tecaa", model.roleProperties().attributes().get(0).name());
        Assertions.assertEquals("sdohz", model.roleProperties().attributes().get(0).value());
        Assertions.assertEquals("owavvqxuajgcqw", model.roleProperties().branchId());
        Assertions.assertEquals("nkgfcfdr", model.roleProperties().permissions().get(0));
        Assertions.assertTrue(model.roleProperties().isSuperUser());
        Assertions.assertEquals("okvjgbzsxebrslt", model.roleProperties().roleName());
        Assertions.assertEquals("yjprxslw", model.databaseProperties().entityName());
        Assertions.assertEquals("f", model.databaseProperties().attributes().get(0).name());
        Assertions.assertEquals("huwzbxpcqzgi", model.databaseProperties().attributes().get(0).value());
        Assertions.assertEquals("kjguwrjmwvvbtuq", model.databaseProperties().branchId());
        Assertions.assertEquals("ximwgxqldeko", model.databaseProperties().ownerName());
        Assertions.assertEquals("gxieqfkyfhi", model.databaseProperties().databaseName());
        Assertions.assertEquals("cwkqmtxape", model.endpointProperties().entityName());
        Assertions.assertEquals("qimlda", model.endpointProperties().attributes().get(0).name());
        Assertions.assertEquals("lfxlmuifmuadj", model.endpointProperties().attributes().get(0).value());
        Assertions.assertEquals("fjvmy", model.endpointProperties().projectId());
        Assertions.assertEquals("zebecuvl", model.endpointProperties().branchId());
        Assertions.assertEquals(EndpointType.READ_ONLY, model.endpointProperties().endpointType());
        Assertions.assertEquals("wc", model.endpointProperties().endpointId());
        Assertions.assertEquals("kxpylrwox", model.endpointProperties().computeName());
        Assertions.assertEquals(45.75339741827176, model.endpointProperties().size().autoscalingLimitMinCu());
        Assertions.assertEquals(80.05558843336877, model.endpointProperties().size().autoscalingLimitMaxCu());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PreflightCheckParameters model = new PreflightCheckParameters().withProjectId("tmbozomtzamicbig")
            .withBranchId("cdgzseznux")
            .withEntityType(EntityType.ENDPOINT)
            .withBranchProperties(new BranchProperties().withEntityName("lhupmomihzbdnpxp")
                .withAttributes(Arrays.asList(new Attributes().withName("yi").withValue("ghflrufssjyghsf"),
                    new Attributes().withName("rkbhammgmqfm").withValue("fgvqcpdw"),
                    new Attributes().withName("gquxweysland").withValue("dcdjhunh")))
                .withProjectId("cgawnrrnquo")
                .withParentId("otire")
                .withRoleName("seob")
                .withDatabaseName("xstcyilbvzm")
                .withRoles(Arrays.asList(
                    new NeonRoleProperties().withEntityName("xebjvbz")
                        .withAttributes(Arrays.asList(new Attributes().withName("pgidnw").withValue("ehaqidoyzltgio"),
                            new Attributes().withName("qoqpepiaeap").withValue("sergdtpe")))
                        .withBranchId("acyh")
                        .withPermissions(Arrays.asList("b", "qq", "cjubkhjozfymcwm", "upyvqyvliq"))
                        .withIsSuperUser(true)
                        .withRoleName("ejbsvsiaies"),
                    new NeonRoleProperties().withEntityName("ihweeb")
                        .withAttributes(Arrays.asList(new Attributes().withName("zybspijhfrzgdkk").withValue("gv"),
                            new Attributes().withName("ukhsusmmorf").withValue("zhwilzzh"),
                            new Attributes().withName("ijmri").withValue("r")))
                        .withBranchId("dneyttlr")
                        .withPermissions(Arrays.asList("v", "bkut", "umltwjflu", "ynbpvzlqywauy"))
                        .withIsSuperUser(true)
                        .withRoleName("khmocgjs"),
                    new NeonRoleProperties().withEntityName("xpc")
                        .withAttributes(Arrays.asList(new Attributes().withName("y").withValue("zjahwriuomz"),
                            new Attributes().withName("zfkiceevsaaxwsp").withValue("axikhfjqebglcxk"),
                            new Attributes().withName("gzzromv").withValue("g")))
                        .withBranchId("emtm")
                        .withPermissions(Arrays.asList("fsvpink"))
                        .withIsSuperUser(true)
                        .withRoleName("qtdiswxspvckoj"),
                    new NeonRoleProperties().withEntityName("p")
                        .withAttributes(Arrays.asList(new Attributes().withName("zfxnxmlbmuos").withValue("kjmdihdcyy"),
                            new Attributes().withName("zlwhbwzjnufzrfgm").withValue("qgnnbz")))
                        .withBranchId("ftedzuubjtvgjsx")
                        .withPermissions(Arrays.asList("jjvavdpww"))
                        .withIsSuperUser(false)
                        .withRoleName("phtitsffofwanmhk")))
                .withDatabases(Arrays.asList(new NeonDatabaseProperties().withEntityName("ixdgbyfgwewqkj")
                    .withAttributes(Arrays.asList(new Attributes().withName("klt").withValue("zuu")))
                    .withBranchId("gzlf")
                    .withOwnerName("rdcgu")
                    .withDatabaseName("rtmdylperpil")))
                .withEndpoints(
                    Arrays
                        .asList(
                            new EndpointProperties().withEntityName("vtshuvf")
                                .withAttributes(Arrays
                                    .asList(new Attributes().withName("evzgjypanh").withValue("mpdxxzetwwzjwotn")))
                                .withProjectId("kf")
                                .withBranchId("lhrfox")
                                .withEndpointType(EndpointType.READ_ONLY)
                                .withEndpointId("rsnhpcs")
                                .withComputeName("qxovppqibukk")
                                .withSize(new AutoscalingSize()
                                    .withAutoscalingLimitMinCu(44.11713486567413)
                                    .withAutoscalingLimitMaxCu(71.7851174215937)),
                            new EndpointProperties().withEntityName("cplhyvdgxlyzkxi")
                                .withAttributes(
                                    Arrays.asList(new Attributes().withName("upjo").withValue("mozsayebrazwz"),
                                        new Attributes().withName("pzbtzuyk").withValue("kipfsdyepf"),
                                        new Attributes().withName("ocmbezacf").withValue("ztgaz"),
                                        new Attributes().withName("yqejga").withValue("okctgkppgkqzkc")))
                                .withProjectId("mffngdyfcixr")
                                .withBranchId("cqvhoejgoiutgwrm")
                                .withEndpointType(EndpointType.READ_WRITE)
                                .withEndpointId("qha")
                                .withComputeName("ntacih")
                                .withSize(new AutoscalingSize()
                                    .withAutoscalingLimitMinCu(76.23832100976136)
                                    .withAutoscalingLimitMaxCu(5.042113071765463)),
                            new EndpointProperties().withEntityName("qgrvg")
                                .withAttributes(
                                    Arrays.asList(new Attributes().withName("fjyi").withValue("socwiqbuout")))
                                .withProjectId("yzgleofjs")
                                .withBranchId("bwwzvdajf")
                                .withEndpointType(EndpointType.READ_ONLY)
                                .withEndpointId("fmaciqgjjrlhiq")
                                .withComputeName("ixvt")
                                .withSize(new AutoscalingSize().withAutoscalingLimitMinCu(93.41435149022843)
                                    .withAutoscalingLimitMaxCu(74.58497589837098))))
                .withBranchId("bea")
                .withBranch("kixvvlwy"))
            .withRoleProperties(new NeonRoleProperties().withEntityName("uydoccnx")
                .withAttributes(Arrays.asList(new Attributes().withName("tecaa").withValue("sdohz"),
                    new Attributes().withName("iucbda").withValue("mbwiinjdllwktl")))
                .withBranchId("owavvqxuajgcqw")
                .withPermissions(Arrays.asList("nkgfcfdr", "wsikxxtclhuulr"))
                .withIsSuperUser(true)
                .withRoleName("okvjgbzsxebrslt"))
            .withDatabaseProperties(new NeonDatabaseProperties().withEntityName("yjprxslw")
                .withAttributes(Arrays.asList(new Attributes().withName("f").withValue("huwzbxpcqzgi"),
                    new Attributes().withName("otjecohmxvvl").withValue("rskapbxwieexu"),
                    new Attributes().withName("aderltfokyk").withValue("yimyccgrvk"),
                    new Attributes().withName("xzznnui").withValue("ersejeg")))
                .withBranchId("kjguwrjmwvvbtuq")
                .withOwnerName("ximwgxqldeko")
                .withDatabaseName("gxieqfkyfhi"))
            .withEndpointProperties(new EndpointProperties().withEntityName("cwkqmtxape")
                .withAttributes(Arrays.asList(new Attributes().withName("qimlda").withValue("lfxlmuifmuadj"),
                    new Attributes().withName("fsn").withValue("skiioshjgczetybn"),
                    new Attributes().withName("gztlcgc").withValue("j")))
                .withProjectId("fjvmy")
                .withBranchId("zebecuvl")
                .withEndpointType(EndpointType.READ_ONLY)
                .withEndpointId("wc")
                .withComputeName("kxpylrwox")
                .withSize(new AutoscalingSize().withAutoscalingLimitMinCu(45.75339741827176)
                    .withAutoscalingLimitMaxCu(80.05558843336877)));
        model = BinaryData.fromObject(model).toObject(PreflightCheckParameters.class);
        Assertions.assertEquals("tmbozomtzamicbig", model.projectId());
        Assertions.assertEquals("cdgzseznux", model.branchId());
        Assertions.assertEquals(EntityType.ENDPOINT, model.entityType());
        Assertions.assertEquals("lhupmomihzbdnpxp", model.branchProperties().entityName());
        Assertions.assertEquals("yi", model.branchProperties().attributes().get(0).name());
        Assertions.assertEquals("ghflrufssjyghsf", model.branchProperties().attributes().get(0).value());
        Assertions.assertEquals("cgawnrrnquo", model.branchProperties().projectId());
        Assertions.assertEquals("otire", model.branchProperties().parentId());
        Assertions.assertEquals("seob", model.branchProperties().roleName());
        Assertions.assertEquals("xstcyilbvzm", model.branchProperties().databaseName());
        Assertions.assertEquals("xebjvbz", model.branchProperties().roles().get(0).entityName());
        Assertions.assertEquals("pgidnw", model.branchProperties().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("ehaqidoyzltgio", model.branchProperties().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("acyh", model.branchProperties().roles().get(0).branchId());
        Assertions.assertEquals("b", model.branchProperties().roles().get(0).permissions().get(0));
        Assertions.assertTrue(model.branchProperties().roles().get(0).isSuperUser());
        Assertions.assertEquals("ejbsvsiaies", model.branchProperties().roles().get(0).roleName());
        Assertions.assertEquals("ixdgbyfgwewqkj", model.branchProperties().databases().get(0).entityName());
        Assertions.assertEquals("klt", model.branchProperties().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("zuu", model.branchProperties().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("gzlf", model.branchProperties().databases().get(0).branchId());
        Assertions.assertEquals("rdcgu", model.branchProperties().databases().get(0).ownerName());
        Assertions.assertEquals("rtmdylperpil", model.branchProperties().databases().get(0).databaseName());
        Assertions.assertEquals("vtshuvf", model.branchProperties().endpoints().get(0).entityName());
        Assertions.assertEquals("evzgjypanh", model.branchProperties().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("mpdxxzetwwzjwotn",
            model.branchProperties().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("kf", model.branchProperties().endpoints().get(0).projectId());
        Assertions.assertEquals("lhrfox", model.branchProperties().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_ONLY, model.branchProperties().endpoints().get(0).endpointType());
        Assertions.assertEquals("rsnhpcs", model.branchProperties().endpoints().get(0).endpointId());
        Assertions.assertEquals("qxovppqibukk", model.branchProperties().endpoints().get(0).computeName());
        Assertions.assertEquals(44.11713486567413,
            model.branchProperties().endpoints().get(0).size().autoscalingLimitMinCu());
        Assertions.assertEquals(71.7851174215937,
            model.branchProperties().endpoints().get(0).size().autoscalingLimitMaxCu());
        Assertions.assertEquals("bea", model.branchProperties().branchId());
        Assertions.assertEquals("kixvvlwy", model.branchProperties().branch());
        Assertions.assertEquals("uydoccnx", model.roleProperties().entityName());
        Assertions.assertEquals("tecaa", model.roleProperties().attributes().get(0).name());
        Assertions.assertEquals("sdohz", model.roleProperties().attributes().get(0).value());
        Assertions.assertEquals("owavvqxuajgcqw", model.roleProperties().branchId());
        Assertions.assertEquals("nkgfcfdr", model.roleProperties().permissions().get(0));
        Assertions.assertTrue(model.roleProperties().isSuperUser());
        Assertions.assertEquals("okvjgbzsxebrslt", model.roleProperties().roleName());
        Assertions.assertEquals("yjprxslw", model.databaseProperties().entityName());
        Assertions.assertEquals("f", model.databaseProperties().attributes().get(0).name());
        Assertions.assertEquals("huwzbxpcqzgi", model.databaseProperties().attributes().get(0).value());
        Assertions.assertEquals("kjguwrjmwvvbtuq", model.databaseProperties().branchId());
        Assertions.assertEquals("ximwgxqldeko", model.databaseProperties().ownerName());
        Assertions.assertEquals("gxieqfkyfhi", model.databaseProperties().databaseName());
        Assertions.assertEquals("cwkqmtxape", model.endpointProperties().entityName());
        Assertions.assertEquals("qimlda", model.endpointProperties().attributes().get(0).name());
        Assertions.assertEquals("lfxlmuifmuadj", model.endpointProperties().attributes().get(0).value());
        Assertions.assertEquals("fjvmy", model.endpointProperties().projectId());
        Assertions.assertEquals("zebecuvl", model.endpointProperties().branchId());
        Assertions.assertEquals(EndpointType.READ_ONLY, model.endpointProperties().endpointType());
        Assertions.assertEquals("wc", model.endpointProperties().endpointId());
        Assertions.assertEquals("kxpylrwox", model.endpointProperties().computeName());
        Assertions.assertEquals(45.75339741827176, model.endpointProperties().size().autoscalingLimitMinCu());
        Assertions.assertEquals(80.05558843336877, model.endpointProperties().size().autoscalingLimitMaxCu());
    }
}
