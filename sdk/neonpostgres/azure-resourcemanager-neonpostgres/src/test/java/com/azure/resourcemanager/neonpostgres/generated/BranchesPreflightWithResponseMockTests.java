// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.neonpostgres.NeonPostgresManager;
import com.azure.resourcemanager.neonpostgres.models.Attributes;
import com.azure.resourcemanager.neonpostgres.models.AutoscalingSize;
import com.azure.resourcemanager.neonpostgres.models.BranchProperties;
import com.azure.resourcemanager.neonpostgres.models.EndpointProperties;
import com.azure.resourcemanager.neonpostgres.models.EndpointType;
import com.azure.resourcemanager.neonpostgres.models.EntityType;
import com.azure.resourcemanager.neonpostgres.models.NeonDatabaseProperties;
import com.azure.resourcemanager.neonpostgres.models.NeonRoleProperties;
import com.azure.resourcemanager.neonpostgres.models.PreflightCheckParameters;
import com.azure.resourcemanager.neonpostgres.models.PreflightCheckResult;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class BranchesPreflightWithResponseMockTests {
    @Test
    public void testPreflightWithResponse() throws Exception {
        String responseStr = "{\"isValid\":false,\"reason\":\"dwuwedupbk\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NeonPostgresManager manager = NeonPostgresManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PreflightCheckResult response
            = manager.branches()
                .preflightWithResponse("xmwefcbybpc", "rtczwjcujyznvyrj", "djlgkuirxxeuwii", "rcvnfg",
                    new PreflightCheckParameters().withProjectId("dviw")
                        .withBranchId("ohktxagfujdbqjny")
                        .withEntityType(EntityType.NEON_ROLE)
                        .withBranchProperties(
                            new BranchProperties().withEntityName("pvevtarphklql")
                                .withAttributes(Arrays.asList(new Attributes().withName("gjn").withValue("fgijydgs"),
                                    new Attributes().withName("bjuymtevaebzmw").withValue("whrjkejvaedogzo"),
                                    new Attributes().withName("gxbxxgj").withValue("gcphivfhrmte")))
                                .withProjectId("dvd")
                                .withParentId("arywus")
                                .withRoleName("zhdtrsyfe")
                                .withDatabaseName("smyljdzyyrwnmwt")
                                .withRoles(
                                    Arrays
                                        .asList(
                                            new NeonRoleProperties().withEntityName("tdt")
                                                .withAttributes(Arrays.asList(
                                                    new Attributes().withName("sckfavhk").withValue("psp"),
                                                    new Attributes().withName("weifdyfa")
                                                        .withValue("exnguwnrdpuz"),
                                                    new Attributes().withName("a").withValue("hsujtggybsz")))
                                                .withBranchId("ijxe")
                                                .withPermissions(Arrays.asList("cliqwzutiyelrnh", "jt"))
                                                .withIsSuperUser(true)
                                                .withRoleName("z"),
                                            new NeonRoleProperties().withEntityName("x")
                                                .withAttributes(Arrays.asList(
                                                    new Attributes().withName("xuktdrsjtmnkxjou")
                                                        .withValue("fzcfdtstiax"),
                                                    new Attributes().withName("yrnuhcfhepisqb")
                                                        .withValue("mlroiommemsoqgb"),
                                                    new Attributes().withName("cyeqd")
                                                        .withValue("bobaqca"),
                                                    new Attributes().withName("ebckcesrsixwnlpj").withValue("xbj")))
                                                .withBranchId("myqyyfrridzfps")
                                                .withPermissions(Arrays.asList("kidfhmlxrqkeknu", "kqafzvptriysjrgt",
                                                    "uwpuqpsrcekdvvo"))
                                                .withIsSuperUser(false)
                                                .withRoleName("dggwgclvbw"),
                                            new NeonRoleProperties().withEntityName("iapypimr")
                                                .withAttributes(
                                                    Arrays.asList(new Attributes().withName("stuinytkmlfupjzc")
                                                        .withValue("xvzjoyxj")))
                                                .withBranchId("hxuerrd")
                                                .withPermissions(
                                                    Arrays.asList(
                                                        "nytkbcerfcvcp", "fqjckmpwyvlhnhhc", "khlebgjgylsacagi",
                                                        "lrcygotohzwto"))
                                                .withIsSuperUser(true)
                                                .withRoleName("xitr"),
                                            new NeonRoleProperties().withEntityName("bsaipusuofkegbvb")
                                                .withAttributes(
                                                    Arrays.asList(new Attributes().withName("veugpx").withValue("ee"),
                                                        new Attributes().withName("pup").withValue("scboxra"),
                                                        new Attributes().withName("dczmrjgobekx")
                                                            .withValue("heowsecaf")))
                                                .withBranchId("zzbsk")
                                                .withPermissions(Arrays.asList("jsb", "bmseesacuicnvq"))
                                                .withIsSuperUser(false)
                                                .withRoleName("ivmrfap")))
                                .withDatabases(
                                    Arrays
                                        .asList(
                                            new NeonDatabaseProperties().withEntityName("tsiucepl")
                                                .withAttributes(Arrays
                                                    .asList(new Attributes().withName("scruykkiela").withValue("ynoy")))
                                                .withBranchId("flsmsbnlyoifg")
                                                .withOwnerName("zjqthykcvo")
                                                .withDatabaseName("cwfzotkxxl"),
                                            new NeonDatabaseProperties().withEntityName("mgobxehujcqgzw")
                                                .withAttributes(Arrays.asList(
                                                    new Attributes().withName("mjklqrljd").withValue("uky"),
                                                    new Attributes().withName("ax")
                                                        .withValue("jiqoq"),
                                                    new Attributes().withName("vqhgphgxuwu").withValue("gcyqruvumry")))
                                                .withBranchId("nqivahf")
                                                .withOwnerName("wnjzebpicciyoy")
                                                .withDatabaseName("edkspwwibpyb"),
                                            new NeonDatabaseProperties().withEntityName("qsrmrfqderk")
                                                .withAttributes(Arrays.asList(
                                                    new Attributes().withName("yzposzfutgpbyg")
                                                        .withValue("nbcmoiqgtzpvqew"),
                                                    new Attributes().withName("lwzhxzuxerx")
                                                        .withValue("ywlrkqsqvvdkfpfj"),
                                                    new Attributes().withName("ajdqxymxx").withValue("fr"),
                                                    new Attributes().withName("j").withValue("dcetfvgwfwsldig")))
                                                .withBranchId("uppvyddqsvc")
                                                .withOwnerName("snxfrppwwqc")
                                                .withDatabaseName("dmtfxxepzpxzxlc"),
                                            new NeonDatabaseProperties().withEntityName("dmhk")
                                                .withAttributes(Arrays.asList(
                                                    new Attributes().withName("zesndoduomtx").withValue("brixymc"),
                                                    new Attributes().withName("ikkqyvurhwishyfm").withValue("zcq")))
                                                .withBranchId("vnkyakck")
                                                .withOwnerName("h")
                                                .withDatabaseName("nsddjkkd")))
                                .withEndpoints(
                                    Arrays
                                        .asList(
                                            new EndpointProperties().withEntityName("xumtcqxmyvk")
                                                .withAttributes(Arrays.asList(
                                                    new Attributes().withName("g").withValue("hvpsuwichm"),
                                                    new Attributes().withName("czbyfkocgm").withValue("dctsnlwscrngt")))
                                                .withProjectId("xrolwvplksdksuta")
                                                .withBranchId("ctihavishbv")
                                                .withEndpointType(EndpointType.READ_ONLY)
                                                .withEndpointId("pmqququxl")
                                                .withComputeName("n")
                                                .withSize(new AutoscalingSize()
                                                    .withAutoscalingLimitMinCu(24.999180578066603)
                                                    .withAutoscalingLimitMaxCu(54.165460889590975)),
                                            new EndpointProperties().withEntityName("yrvhtv")
                                                .withAttributes(
                                                    Arrays.asList(new Attributes().withName("quuu").withValue("q")))
                                                .withProjectId("btqyzycgcmbkygv")
                                                .withBranchId("dqosxzmdzly")
                                                .withEndpointType(EndpointType.READ_WRITE)
                                                .withEndpointId("fk")
                                                .withComputeName("zf")
                                                .withSize(new AutoscalingSize()
                                                    .withAutoscalingLimitMinCu(59.19214813176211)
                                                    .withAutoscalingLimitMaxCu(56.50378233170215)),
                                            new EndpointProperties().withEntityName("xsv")
                                                .withAttributes(Arrays.asList(
                                                    new Attributes().withName("bbfpxxa").withValue("lozukgs"),
                                                    new Attributes().withName("uhwyxjsfmaxcebn").withValue("eoskem")))
                                                .withProjectId("erwqxpjpv")
                                                .withBranchId("dfkhttuobrxz")
                                                .withEndpointType(EndpointType.READ_WRITE)
                                                .withEndpointId("e")
                                                .withComputeName("kjgeecwtfma")
                                                .withSize(
                                                    new AutoscalingSize().withAutoscalingLimitMinCu(45.87286723672999)
                                                        .withAutoscalingLimitMaxCu(25.294606654927122))))
                                .withBranchId("lqkiekhjgqqru")
                                .withBranch("espscvsm"))
                        .withRoleProperties(new NeonRoleProperties().withEntityName("vqxuyiarznhdqse")
                            .withAttributes(
                                Arrays.asList(new Attributes().withName("gccynbuvmsieh").withValue("dmmvoneeyr"),
                                    new Attributes().withName("parxtzayq").withValue("ddigeblsplzdss")))
                            .withBranchId("wveeozbjkj")
                            .withPermissions(Arrays.asList("zdnuehxwltss", "dyw"))
                            .withIsSuperUser(true)
                            .withRoleName("ge"))
                        .withDatabaseProperties(new NeonDatabaseProperties().withEntityName("rotgeysyq")
                            .withAttributes(
                                Arrays.asList(new Attributes().withName("nxiajuvj").withValue("cfjisosfzlnraxn")))
                            .withBranchId("zguaxfhvjixgofqd")
                            .withOwnerName("sjmih")
                            .withDatabaseName("rq"))
                        .withEndpointProperties(new EndpointProperties().withEntityName("sbmzjritu")
                            .withAttributes(Arrays.asList(new Attributes().withName("m").withValue("zz"),
                                new Attributes().withName("xwjoqfzwand").withValue("hduwdvolxtqmr"),
                                new Attributes().withName("c").withValue("s")))
                            .withProjectId("zbkiumjf")
                            .withBranchId("xedrmr")
                            .withEndpointType(EndpointType.READ_ONLY)
                            .withEndpointId("chvvoyiogbntnwz")
                            .withComputeName("zsoowxcsmxtlcapp")
                            .withSize(new AutoscalingSize().withAutoscalingLimitMinCu(68.29757967668941)
                                .withAutoscalingLimitMaxCu(79.54755401975211))),
                    com.azure.core.util.Context.NONE)
                .getValue();

        Assertions.assertFalse(response.isValid());
        Assertions.assertEquals("dwuwedupbk", response.reason());
    }
}
