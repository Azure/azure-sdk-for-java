// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.neonpostgres.models.PartnerOrganizationProperties;
import com.azure.resourcemanager.neonpostgres.models.SingleSignOnProperties;
import com.azure.resourcemanager.neonpostgres.models.SingleSignOnStates;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PartnerOrganizationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PartnerOrganizationProperties model = BinaryData.fromString(
            "{\"organizationId\":\"nedgfbc\",\"organizationName\":\"kcvqvpke\",\"singleSignOnProperties\":{\"singleSignOnState\":\"Initial\",\"enterpriseAppId\":\"rhvoods\",\"singleSignOnUrl\":\"bobzdopcjwvnhd\",\"aadDomains\":[\"mgxcxrslpm\",\"twuoegrpkhjwni\",\"qsluicp\"]}}")
            .toObject(PartnerOrganizationProperties.class);
        Assertions.assertEquals("nedgfbc", model.organizationId());
        Assertions.assertEquals("kcvqvpke", model.organizationName());
        Assertions.assertEquals(SingleSignOnStates.INITIAL, model.singleSignOnProperties().singleSignOnState());
        Assertions.assertEquals("rhvoods", model.singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("bobzdopcjwvnhd", model.singleSignOnProperties().singleSignOnUrl());
        Assertions.assertEquals("mgxcxrslpm", model.singleSignOnProperties().aadDomains().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PartnerOrganizationProperties model = new PartnerOrganizationProperties().withOrganizationId("nedgfbc")
            .withOrganizationName("kcvqvpke")
            .withSingleSignOnProperties(new SingleSignOnProperties().withSingleSignOnState(SingleSignOnStates.INITIAL)
                .withEnterpriseAppId("rhvoods")
                .withSingleSignOnUrl("bobzdopcjwvnhd")
                .withAadDomains(Arrays.asList("mgxcxrslpm", "twuoegrpkhjwni", "qsluicp")));
        model = BinaryData.fromObject(model).toObject(PartnerOrganizationProperties.class);
        Assertions.assertEquals("nedgfbc", model.organizationId());
        Assertions.assertEquals("kcvqvpke", model.organizationName());
        Assertions.assertEquals(SingleSignOnStates.INITIAL, model.singleSignOnProperties().singleSignOnState());
        Assertions.assertEquals("rhvoods", model.singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("bobzdopcjwvnhd", model.singleSignOnProperties().singleSignOnUrl());
        Assertions.assertEquals("mgxcxrslpm", model.singleSignOnProperties().aadDomains().get(0));
    }
}
