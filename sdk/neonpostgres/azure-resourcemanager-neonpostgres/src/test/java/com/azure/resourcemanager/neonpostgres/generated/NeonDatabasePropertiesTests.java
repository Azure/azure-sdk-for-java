// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.neonpostgres.models.Attributes;
import com.azure.resourcemanager.neonpostgres.models.NeonDatabaseProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NeonDatabasePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NeonDatabaseProperties model = BinaryData.fromString(
            "{\"entityId\":\"uzqgnjdgkynsc\",\"entityName\":\"qhzvhxnkomt\",\"createdAt\":\"bo\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"dxzxhi\",\"value\":\"frbbc\"},{\"name\":\"vqagtltdhlf\",\"value\":\"qojpy\"},{\"name\":\"vgtrdcnifmzzs\",\"value\":\"ymbrnysuxmpraf\"},{\"name\":\"g\",\"value\":\"khocxvdfffwaf\"}],\"branchId\":\"oudaspavehhrvk\",\"ownerName\":\"n\",\"databaseName\":\"zudhcxg\",\"lastUpdated\":\"oyxcdyuib\"}")
            .toObject(NeonDatabaseProperties.class);
        Assertions.assertEquals("qhzvhxnkomt", model.entityName());
        Assertions.assertEquals("dxzxhi", model.attributes().get(0).name());
        Assertions.assertEquals("frbbc", model.attributes().get(0).value());
        Assertions.assertEquals("oudaspavehhrvk", model.branchId());
        Assertions.assertEquals("n", model.ownerName());
        Assertions.assertEquals("zudhcxg", model.databaseName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NeonDatabaseProperties model = new NeonDatabaseProperties().withEntityName("qhzvhxnkomt")
            .withAttributes(Arrays.asList(new Attributes().withName("dxzxhi").withValue("frbbc"),
                new Attributes().withName("vqagtltdhlf").withValue("qojpy"),
                new Attributes().withName("vgtrdcnifmzzs").withValue("ymbrnysuxmpraf"),
                new Attributes().withName("g").withValue("khocxvdfffwaf")))
            .withBranchId("oudaspavehhrvk")
            .withOwnerName("n")
            .withDatabaseName("zudhcxg");
        model = BinaryData.fromObject(model).toObject(NeonDatabaseProperties.class);
        Assertions.assertEquals("qhzvhxnkomt", model.entityName());
        Assertions.assertEquals("dxzxhi", model.attributes().get(0).name());
        Assertions.assertEquals("frbbc", model.attributes().get(0).value());
        Assertions.assertEquals("oudaspavehhrvk", model.branchId());
        Assertions.assertEquals("n", model.ownerName());
        Assertions.assertEquals("zudhcxg", model.databaseName());
    }
}
