// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.neonpostgres.models.models.Attributes;
import com.azure.resourcemanager.neonpostgres.models.models.EndpointProperties;
import com.azure.resourcemanager.neonpostgres.models.models.EndpointType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class EndpointPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EndpointProperties model = BinaryData.fromString(
            "{\"entityId\":\"oiwiithtywub\",\"entityName\":\"bihwqknfdnt\",\"createdAt\":\"chrdgoihxumwcto\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"uu\",\"value\":\"fdlwg\"},{\"name\":\"ytsbwtovv\",\"value\":\"gseinq\"},{\"name\":\"iufxqknpir\",\"value\":\"nepttwqmsni\"},{\"name\":\"fcdmqnrojlpijn\",\"value\":\"rxfrddhc\"}],\"projectId\":\"tizzronasxif\",\"branchId\":\"zq\",\"endpointType\":\"read_write\"}")
            .toObject(EndpointProperties.class);
        Assertions.assertEquals("bihwqknfdnt", model.entityName());
        Assertions.assertEquals("uu", model.attributes().get(0).name());
        Assertions.assertEquals("fdlwg", model.attributes().get(0).value());
        Assertions.assertEquals("tizzronasxif", model.projectId());
        Assertions.assertEquals("zq", model.branchId());
        Assertions.assertEquals(EndpointType.READ_WRITE, model.endpointType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EndpointProperties model = new EndpointProperties().withEntityName("bihwqknfdnt")
            .withAttributes(Arrays.asList(new Attributes().withName("uu").withValue("fdlwg"),
                new Attributes().withName("ytsbwtovv").withValue("gseinq"),
                new Attributes().withName("iufxqknpir").withValue("nepttwqmsni"),
                new Attributes().withName("fcdmqnrojlpijn").withValue("rxfrddhc")))
            .withProjectId("tizzronasxif")
            .withBranchId("zq")
            .withEndpointType(EndpointType.READ_WRITE);
        model = BinaryData.fromObject(model).toObject(EndpointProperties.class);
        Assertions.assertEquals("bihwqknfdnt", model.entityName());
        Assertions.assertEquals("uu", model.attributes().get(0).name());
        Assertions.assertEquals("fdlwg", model.attributes().get(0).value());
        Assertions.assertEquals("tizzronasxif", model.projectId());
        Assertions.assertEquals("zq", model.branchId());
        Assertions.assertEquals(EndpointType.READ_WRITE, model.endpointType());
    }
}
