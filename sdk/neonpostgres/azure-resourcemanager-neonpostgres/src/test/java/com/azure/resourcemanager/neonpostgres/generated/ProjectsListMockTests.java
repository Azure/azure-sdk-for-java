// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.neonpostgres.NeonPostgresManager;
import com.azure.resourcemanager.neonpostgres.models.EndpointType;
import com.azure.resourcemanager.neonpostgres.models.Project;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ProjectsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"entityId\":\"okvjgbzsxebrslt\",\"entityName\":\"yhcdjwsuoardnag\",\"createdAt\":\"pufpbpgnrholhu\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"iplkysolsyjprxs\",\"value\":\"whdmcvhtbbz\"},{\"name\":\"hfvhuwzbxpcqz\",\"value\":\"ihotjecohmxv\"},{\"name\":\"lrrskap\",\"value\":\"xwieexuyade\"}],\"regionId\":\"tfo\",\"storage\":47887958579734245,\"pgVersion\":935611244,\"historyRetention\":424856717,\"defaultEndpointSettings\":{\"autoscalingLimitMinCu\":98.68591392968551,\"autoscalingLimitMaxCu\":2.367622336840902},\"branch\":{\"entityId\":\"xzznnui\",\"entityName\":\"rsejegprkj\",\"createdAt\":\"wrjmwv\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"kxxi\",\"value\":\"wgxql\"},{\"name\":\"ekotjgxi\",\"value\":\"qfkyfhiwvjaqu\"},{\"name\":\"by\",\"value\":\"nvskpaj\"}],\"projectId\":\"geumexm\",\"parentId\":\"xcbccwkqmt\",\"roleName\":\"p\",\"databaseName\":\"iscr\",\"roles\":[{\"entityId\":\"ftr\",\"entityName\":\"ejdaahuqimld\",\"createdAt\":\"lfxlmuifmuadj\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"skiioshjgczetybn\",\"value\":\"gztlcgc\"},{\"name\":\"j\",\"value\":\"hfjv\"},{\"name\":\"ywjzebecuvlbefvw\",\"value\":\"ljkxpylrwoxz\"}],\"branchId\":\"psyxjije\",\"permissions\":[\"vrbkerdkdkgaw\",\"wjxildfkcefeyg\"],\"isSuperUser\":false},{\"entityId\":\"oisfmnaybdjn\",\"entityName\":\"mentqo\",\"createdAt\":\"why\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"lwivqt\",\"value\":\"wlhlsycoybajasq\"},{\"name\":\"bfajcywhjqwmchq\",\"value\":\"htfxcpupuki\"},{\"name\":\"mjzpwdlvwtiwsm\",\"value\":\"sa\"},{\"name\":\"nhqnampp\",\"value\":\"ltassaekewna\"}],\"branchId\":\"ajbk\",\"permissions\":[\"cyizy\",\"dcvxodkrvfsxxby\",\"e\"],\"isSuperUser\":true},{\"entityId\":\"gecpwgoljtzx\",\"entityName\":\"xsdobygoogxqapjx\",\"createdAt\":\"zyjfuc\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"nosdkvi\",\"value\":\"fasgm\"},{\"name\":\"trnzpducdaaktu\",\"value\":\"ktz\"}],\"branchId\":\"imyfpqdo\",\"permissions\":[\"pnw\",\"ytfvpctfji\",\"ffffg\",\"uhznwhvuldbk\"],\"isSuperUser\":false}],\"databases\":[{\"entityId\":\"igaw\",\"entityName\":\"zmxjqif\",\"createdAt\":\"jjsbcmlzaahzbhur\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"lirh\",\"value\":\"mojusuz\"},{\"name\":\"fjzc\",\"value\":\"aaxoialahfxwcc\"},{\"name\":\"kdxkuk\",\"value\":\"kczynuhhoqeqsh\"},{\"name\":\"vl\",\"value\":\"q\"}],\"branchId\":\"yrqolnthbbnkgz\",\"ownerName\":\"wdrnzkj\"}],\"endpoints\":[{\"entityId\":\"eyjncjmlfuy\",\"entityName\":\"bpfiddhlrufz\",\"createdAt\":\"yjmqrf\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"selqkrsazrhxud\",\"value\":\"qmdtffi\"},{\"name\":\"jmr\",\"value\":\"khmwdmd\"}],\"projectId\":\"yqixokwtjawhv\",\"branchId\":\"nqf\",\"endpointType\":\"read_only\"},{\"entityId\":\"cvmyolcaymjchtv\",\"entityName\":\"vlaqdnzyzawa\",\"createdAt\":\"wqkokbczothymg\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"snwgwimaa\",\"value\":\"eakhtmhobcya\"}],\"projectId\":\"fvqtvkhgvoo\",\"branchId\":\"kfnaoaqymhc\",\"endpointType\":\"read_write\"}]},\"roles\":[{\"entityId\":\"wyrnskbyh\",\"entityName\":\"hczygxvhajpxe\",\"createdAt\":\"qnwhscozawmvg\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"npwirfljf\",\"value\":\"wxqouoxudnmc\"},{\"name\":\"aprhknqiijgencdg\",\"value\":\"oqueqihkkyowltj\"},{\"name\":\"uwhldxwhieproqks\",\"value\":\"fxmcvprstvk\"}],\"branchId\":\"b\",\"permissions\":[\"dyotnplfacqoccq\",\"qxwetjtd\",\"hutfdoadtxopge\"],\"isSuperUser\":false},{\"entityId\":\"k\",\"entityName\":\"zgssz\",\"createdAt\":\"ctkbbxuha\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"ncclabvoyngsuxxc\",\"value\":\"bmyqjog\"},{\"name\":\"dsaidjanormovdxx\",\"value\":\"rntu\"}],\"branchId\":\"oilunwemhdee\",\"permissions\":[\"lkyozdsfzj\",\"egrhrh\"],\"isSuperUser\":false},{\"entityId\":\"jtv\",\"entityName\":\"nxvgjb\",\"createdAt\":\"obpnjodf\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"wmtqsmoxsaz\",\"value\":\"xej\"}],\"branchId\":\"ecywn\",\"permissions\":[\"zzaczsinqbdn\",\"dbbo\"],\"isSuperUser\":false},{\"entityId\":\"rmkjmyitrchwudlx\",\"entityName\":\"ihtpmnoejhql\",\"createdAt\":\"sibz\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"xkyd\",\"value\":\"mypgfqvmty\"},{\"name\":\"hl\",\"value\":\"kxp\"}],\"branchId\":\"pewpyj\",\"permissions\":[\"ampqcrzgeuq\",\"b\"],\"isSuperUser\":false}],\"databases\":[{\"entityId\":\"aujegqdtadra\",\"entityName\":\"ddhjkr\",\"createdAt\":\"izyh\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"qsktxqf\",\"value\":\"jbqggweeiwdhdm\"},{\"name\":\"cgbfzuscstun\",\"value\":\"lhxd\"}],\"branchId\":\"klciichgjsysm\",\"ownerName\":\"o\"}],\"endpoints\":[{\"entityId\":\"f\",\"entityName\":\"sifcuvbdujgc\",\"createdAt\":\"vecb\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"dxrizagb\",\"value\":\"giarksykpgdqxw\"},{\"name\":\"b\",\"value\":\"rwiqrxhacl\"},{\"name\":\"dosqkptjqg\",\"value\":\"ifmmainwh\"},{\"name\":\"d\",\"value\":\"kp\"}],\"projectId\":\"wuntobuiz\",\"branchId\":\"zelwgvydjufbnkl\",\"endpointType\":\"read_only\"},{\"entityId\":\"peg\",\"entityName\":\"dabalfdxaglzfytl\",\"createdAt\":\"lqhopxouvmrs\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"y\",\"value\":\"pzkgxfxfmyrqsd\"},{\"name\":\"pokszanmhwgpt\",\"value\":\"rdiuwkirksk\"},{\"name\":\"ztsdetjygow\",\"value\":\"fcqpol\"},{\"name\":\"kg\",\"value\":\"sdgzyy\"}],\"projectId\":\"oxlvocptvdxxheig\",\"branchId\":\"ilwzghj\",\"endpointType\":\"read_write\"},{\"entityId\":\"abzzbwaybfmdafb\",\"entityName\":\"mqtnap\",\"createdAt\":\"ojxrjnbsconxavi\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"hbjizqfsgnwdx\",\"value\":\"edpqlrfbo\"}],\"projectId\":\"ipmlnfyzavf\",\"branchId\":\"ypi\",\"endpointType\":\"read_write\"},{\"entityId\":\"pdjtaqh\",\"entityName\":\"q\",\"createdAt\":\"pdgonjhxs\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"pczqulptkbvcp\",\"value\":\"tzhigqqbtim\"},{\"name\":\"kjblornsihqh\",\"value\":\"dsmusuaawjakxwj\"},{\"name\":\"fczmnn\",\"value\":\"ixyxvqbanosjt\"}],\"projectId\":\"rnbg\",\"branchId\":\"m\",\"endpointType\":\"read_write\"}]},\"id\":\"gm\",\"name\":\"nltwmpftmfoeajog\",\"type\":\"yxwe\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NeonPostgresManager manager = NeonPostgresManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Project> response
            = manager.projects().list("si", "xxtclhuulri", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("yhcdjwsuoardnag", response.iterator().next().properties().entityName());
        Assertions.assertEquals("iplkysolsyjprxs", response.iterator().next().properties().attributes().get(0).name());
        Assertions.assertEquals("whdmcvhtbbz", response.iterator().next().properties().attributes().get(0).value());
        Assertions.assertEquals("tfo", response.iterator().next().properties().regionId());
        Assertions.assertEquals(47887958579734245L, response.iterator().next().properties().storage());
        Assertions.assertEquals(935611244, response.iterator().next().properties().pgVersion());
        Assertions.assertEquals(424856717, response.iterator().next().properties().historyRetention());
        Assertions.assertEquals(98.68591392968551,
            response.iterator().next().properties().defaultEndpointSettings().autoscalingLimitMinCu());
        Assertions.assertEquals(2.367622336840902,
            response.iterator().next().properties().defaultEndpointSettings().autoscalingLimitMaxCu());
        Assertions.assertEquals("rsejegprkj", response.iterator().next().properties().branch().entityName());
        Assertions.assertEquals("kxxi", response.iterator().next().properties().branch().attributes().get(0).name());
        Assertions.assertEquals("wgxql", response.iterator().next().properties().branch().attributes().get(0).value());
        Assertions.assertEquals("geumexm", response.iterator().next().properties().branch().projectId());
        Assertions.assertEquals("xcbccwkqmt", response.iterator().next().properties().branch().parentId());
        Assertions.assertEquals("p", response.iterator().next().properties().branch().roleName());
        Assertions.assertEquals("iscr", response.iterator().next().properties().branch().databaseName());
        Assertions.assertEquals("ejdaahuqimld",
            response.iterator().next().properties().branch().roles().get(0).entityName());
        Assertions.assertEquals("skiioshjgczetybn",
            response.iterator().next().properties().branch().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("gztlcgc",
            response.iterator().next().properties().branch().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("psyxjije", response.iterator().next().properties().branch().roles().get(0).branchId());
        Assertions.assertEquals("vrbkerdkdkgaw",
            response.iterator().next().properties().branch().roles().get(0).permissions().get(0));
        Assertions.assertFalse(response.iterator().next().properties().branch().roles().get(0).isSuperUser());
        Assertions.assertEquals("zmxjqif",
            response.iterator().next().properties().branch().databases().get(0).entityName());
        Assertions.assertEquals("lirh",
            response.iterator().next().properties().branch().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("mojusuz",
            response.iterator().next().properties().branch().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("yrqolnthbbnkgz",
            response.iterator().next().properties().branch().databases().get(0).branchId());
        Assertions.assertEquals("wdrnzkj",
            response.iterator().next().properties().branch().databases().get(0).ownerName());
        Assertions.assertEquals("bpfiddhlrufz",
            response.iterator().next().properties().branch().endpoints().get(0).entityName());
        Assertions.assertEquals("selqkrsazrhxud",
            response.iterator().next().properties().branch().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("qmdtffi",
            response.iterator().next().properties().branch().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("yqixokwtjawhv",
            response.iterator().next().properties().branch().endpoints().get(0).projectId());
        Assertions.assertEquals("nqf", response.iterator().next().properties().branch().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_ONLY,
            response.iterator().next().properties().branch().endpoints().get(0).endpointType());
        Assertions.assertEquals("hczygxvhajpxe", response.iterator().next().properties().roles().get(0).entityName());
        Assertions.assertEquals("npwirfljf",
            response.iterator().next().properties().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("wxqouoxudnmc",
            response.iterator().next().properties().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("b", response.iterator().next().properties().roles().get(0).branchId());
        Assertions.assertEquals("dyotnplfacqoccq",
            response.iterator().next().properties().roles().get(0).permissions().get(0));
        Assertions.assertFalse(response.iterator().next().properties().roles().get(0).isSuperUser());
        Assertions.assertEquals("ddhjkr", response.iterator().next().properties().databases().get(0).entityName());
        Assertions.assertEquals("qsktxqf",
            response.iterator().next().properties().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("jbqggweeiwdhdm",
            response.iterator().next().properties().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("klciichgjsysm", response.iterator().next().properties().databases().get(0).branchId());
        Assertions.assertEquals("o", response.iterator().next().properties().databases().get(0).ownerName());
        Assertions.assertEquals("sifcuvbdujgc",
            response.iterator().next().properties().endpoints().get(0).entityName());
        Assertions.assertEquals("dxrizagb",
            response.iterator().next().properties().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("giarksykpgdqxw",
            response.iterator().next().properties().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("wuntobuiz", response.iterator().next().properties().endpoints().get(0).projectId());
        Assertions.assertEquals("zelwgvydjufbnkl",
            response.iterator().next().properties().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_ONLY,
            response.iterator().next().properties().endpoints().get(0).endpointType());
    }
}
