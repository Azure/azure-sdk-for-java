// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.neonpostgres.fluent.models.EndpointInner;
import com.azure.resourcemanager.neonpostgres.models.Attributes;
import com.azure.resourcemanager.neonpostgres.models.AutoscalingSize;
import com.azure.resourcemanager.neonpostgres.models.EndpointProperties;
import com.azure.resourcemanager.neonpostgres.models.EndpointType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class EndpointInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EndpointInner model = BinaryData.fromString(
            "{\"properties\":{\"entityId\":\"fmnlikpsims\",\"entityName\":\"ypofqpmbhyqgs\",\"createdAt\":\"mmttjxophge\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"gohtwz\",\"value\":\"qilrixysfn\"},{\"name\":\"msqywwwmhkruwae\",\"value\":\"rympmlq\"}],\"projectId\":\"nhzd\",\"branchId\":\"wih\",\"endpointType\":\"read_write\",\"endpointId\":\"iiknjdiq\",\"computeName\":\"iej\",\"status\":\"idle\",\"lastActive\":\"bi\",\"size\":{\"autoscalingLimitMinCu\":20.83248816151557,\"autoscalingLimitMaxCu\":67.7583716236574}},\"id\":\"eivbvz\",\"name\":\"pbwxgoooxz\",\"type\":\"rad\"}")
            .toObject(EndpointInner.class);
        Assertions.assertEquals("ypofqpmbhyqgs", model.properties().entityName());
        Assertions.assertEquals("gohtwz", model.properties().attributes().get(0).name());
        Assertions.assertEquals("qilrixysfn", model.properties().attributes().get(0).value());
        Assertions.assertEquals("nhzd", model.properties().projectId());
        Assertions.assertEquals("wih", model.properties().branchId());
        Assertions.assertEquals(EndpointType.READ_WRITE, model.properties().endpointType());
        Assertions.assertEquals("iiknjdiq", model.properties().endpointId());
        Assertions.assertEquals("iej", model.properties().computeName());
        Assertions.assertEquals(20.83248816151557, model.properties().size().autoscalingLimitMinCu());
        Assertions.assertEquals(67.7583716236574, model.properties().size().autoscalingLimitMaxCu());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EndpointInner model
            = new EndpointInner().withProperties(new EndpointProperties().withEntityName("ypofqpmbhyqgs")
                .withAttributes(Arrays.asList(new Attributes().withName("gohtwz").withValue("qilrixysfn"),
                    new Attributes().withName("msqywwwmhkruwae").withValue("rympmlq")))
                .withProjectId("nhzd")
                .withBranchId("wih")
                .withEndpointType(EndpointType.READ_WRITE)
                .withEndpointId("iiknjdiq")
                .withComputeName("iej")
                .withSize(new AutoscalingSize().withAutoscalingLimitMinCu(20.83248816151557)
                    .withAutoscalingLimitMaxCu(67.7583716236574)));
        model = BinaryData.fromObject(model).toObject(EndpointInner.class);
        Assertions.assertEquals("ypofqpmbhyqgs", model.properties().entityName());
        Assertions.assertEquals("gohtwz", model.properties().attributes().get(0).name());
        Assertions.assertEquals("qilrixysfn", model.properties().attributes().get(0).value());
        Assertions.assertEquals("nhzd", model.properties().projectId());
        Assertions.assertEquals("wih", model.properties().branchId());
        Assertions.assertEquals(EndpointType.READ_WRITE, model.properties().endpointType());
        Assertions.assertEquals("iiknjdiq", model.properties().endpointId());
        Assertions.assertEquals("iej", model.properties().computeName());
        Assertions.assertEquals(20.83248816151557, model.properties().size().autoscalingLimitMinCu());
        Assertions.assertEquals(67.7583716236574, model.properties().size().autoscalingLimitMaxCu());
    }
}
