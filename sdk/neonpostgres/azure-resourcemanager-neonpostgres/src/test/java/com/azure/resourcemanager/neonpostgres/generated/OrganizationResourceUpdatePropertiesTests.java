// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.neonpostgres.models.Attributes;
import com.azure.resourcemanager.neonpostgres.models.AutoscalingSize;
import com.azure.resourcemanager.neonpostgres.models.BranchProperties;
import com.azure.resourcemanager.neonpostgres.models.CompanyDetails;
import com.azure.resourcemanager.neonpostgres.models.DefaultEndpointSettings;
import com.azure.resourcemanager.neonpostgres.models.EndpointProperties;
import com.azure.resourcemanager.neonpostgres.models.EndpointType;
import com.azure.resourcemanager.neonpostgres.models.MarketplaceDetails;
import com.azure.resourcemanager.neonpostgres.models.MarketplaceSubscriptionStatus;
import com.azure.resourcemanager.neonpostgres.models.NeonDatabaseProperties;
import com.azure.resourcemanager.neonpostgres.models.NeonRoleProperties;
import com.azure.resourcemanager.neonpostgres.models.OfferDetails;
import com.azure.resourcemanager.neonpostgres.models.OrganizationResourceUpdateProperties;
import com.azure.resourcemanager.neonpostgres.models.PartnerOrganizationProperties;
import com.azure.resourcemanager.neonpostgres.models.ProjectProperties;
import com.azure.resourcemanager.neonpostgres.models.SingleSignOnProperties;
import com.azure.resourcemanager.neonpostgres.models.SingleSignOnStates;
import com.azure.resourcemanager.neonpostgres.models.UserDetails;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OrganizationResourceUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OrganizationResourceUpdateProperties model = BinaryData.fromString(
            "{\"marketplaceDetails\":{\"subscriptionId\":\"yurmochpprprs\",\"subscriptionStatus\":\"Unsubscribed\",\"offerDetails\":{\"publisherId\":\"k\",\"offerId\":\"yzejnhlbk\",\"planId\":\"bzpcpiljhahzvec\",\"planName\":\"dbn\",\"termUnit\":\"ehol\",\"termId\":\"jwiuubwefqsfapaq\"}},\"userDetails\":{\"firstName\":\"rrqwexjk\",\"lastName\":\"xap\",\"emailAddress\":\"og\",\"upn\":\"nobpudcdabtqwpw\",\"phoneNumber\":\"wbzasqbuclj\"},\"companyDetails\":{\"companyName\":\"exaoguya\",\"country\":\"ids\",\"officeAddress\":\"ultxijjumfq\",\"businessPhone\":\"z\",\"domain\":\"qnmcjngzqdqx\",\"numberOfEmployees\":1193005536048743154},\"partnerOrganizationProperties\":{\"organizationId\":\"yfu\",\"organizationName\":\"fzsvtuikzh\",\"singleSignOnProperties\":{\"singleSignOnState\":\"Initial\",\"enterpriseAppId\":\"cfhmlrqryxyn\",\"singleSignOnUrl\":\"zrdpsovwxznptgoe\",\"aadDomains\":[\"b\",\"bp\"]}},\"projectProperties\":{\"entityId\":\"f\",\"entityName\":\"kvntjlrigjkskyri\",\"createdAt\":\"vzidsxwaab\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"ygznmmaxrizk\",\"value\":\"obgop\"},{\"name\":\"lhslnelxieixyn\",\"value\":\"lxecwcrojphslh\"},{\"name\":\"awjutifd\",\"value\":\"fmvigorqjbttzh\"}],\"regionId\":\"glka\",\"storage\":8554452024860981836,\"pgVersion\":710596828,\"historyRetention\":1111132453,\"defaultEndpointSettings\":{\"autoscalingLimitMinCu\":29.717381078722262,\"autoscalingLimitMaxCu\":89.75453356283948},\"branch\":{\"entityId\":\"cpopmxel\",\"entityName\":\"clt\",\"createdAt\":\"edexxmlfm\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"zuawxtzxpuamwa\",\"value\":\"zxrvxcus\"},{\"name\":\"sphaivmxyasflvg\",\"value\":\"gzwywak\"}],\"projectId\":\"hknsmjbl\",\"parentId\":\"jhlnymzotqyryu\",\"roleName\":\"bmqqvxmvw\",\"databaseName\":\"tayx\",\"roles\":[{\"entityId\":\"peujlzqn\",\"entityName\":\"vsqltnzoibgsxg\",\"createdAt\":\"fyq\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"ox\",\"value\":\"dofdbxiqx\"},{\"name\":\"iiqbi\",\"value\":\"htmwwinh\"}],\"branchId\":\"f\",\"permissions\":[\"fvwbcb\",\"embnkbw\"],\"isSuperUser\":true,\"roleName\":\"kdi\",\"lastUpdated\":\"ihebwtsw\",\"owns\":\"uwfmduragegizvc\"}],\"databases\":[{\"entityId\":\"isdju\",\"entityName\":\"gbqi\",\"createdAt\":\"xkbsazgakgac\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"dmspof\",\"value\":\"pv\"},{\"name\":\"hryl\",\"value\":\"iofrzgbzjedmstk\"},{\"name\":\"nlvxbcuii\",\"value\":\"nktwfansnvpdibmi\"},{\"name\":\"ostbzbkiwb\",\"value\":\"qnyophzfyls\"}],\"branchId\":\"rpfbcunezz\",\"ownerName\":\"zelfwyfwl\",\"databaseName\":\"jwetnpsihcla\",\"lastUpdated\":\"va\"},{\"entityId\":\"pt\",\"entityName\":\"qqwzt\",\"createdAt\":\"w\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"xwaxfewzjkj\",\"value\":\"xfdeqvhpsyl\"},{\"name\":\"ksh\",\"value\":\"bffmbmxz\"},{\"name\":\"rgywwp\",\"value\":\"jx\"}],\"branchId\":\"ptfujgicgaaoept\",\"ownerName\":\"qutdewemxs\",\"databaseName\":\"ruunzzjgehkf\",\"lastUpdated\":\"m\"}],\"endpoints\":[{\"entityId\":\"okffqyinljqepqwh\",\"entityName\":\"monstshiyxgve\",\"createdAt\":\"clduc\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"svu\",\"value\":\"cobiegstmninwjiz\"}],\"projectId\":\"lnghgshejjtbxqmu\",\"branchId\":\"xlxqzvn\",\"endpointType\":\"read_write\",\"endpointId\":\"ycucrwnamikzeb\",\"computeName\":\"bsmswziqgf\",\"status\":\"idle\",\"lastActive\":\"zruswh\",\"size\":{\"autoscalingLimitMinCu\":79.71306219690383,\"autoscalingLimitMaxCu\":75.90546610663729}},{\"entityId\":\"fbycjs\",\"entityName\":\"wwixzvumw\",\"createdAt\":\"qhndvnoam\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"aohdjh\",\"value\":\"flzokxco\"},{\"name\":\"pelnjetag\",\"value\":\"tsxoatftgz\"},{\"name\":\"npbs\",\"value\":\"vefloccsrmozihmi\"},{\"name\":\"g\",\"value\":\"wtxxpkyjcx\"}],\"projectId\":\"xgrytfmp\",\"branchId\":\"cil\",\"endpointType\":\"read_write\",\"endpointId\":\"ykggnoxuztrksx\",\"computeName\":\"ndfcpfn\",\"status\":\"idle\",\"lastActive\":\"jtwkjaos\",\"size\":{\"autoscalingLimitMinCu\":84.35982235030613,\"autoscalingLimitMaxCu\":81.08620111797609}},{\"entityId\":\"mktcqiosmgbza\",\"entityName\":\"xqdlyrtltlapr\",\"createdAt\":\"zkatb\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"nbsoqeqalarv\",\"value\":\"agunbtgfebw\"},{\"name\":\"nbmhyree\",\"value\":\"dzqavbpdqmjxlyyz\"},{\"name\":\"lgouwtlmjj\",\"value\":\"uojqt\"}],\"projectId\":\"axkjeytunlbfjk\",\"branchId\":\"u\",\"endpointType\":\"read_only\",\"endpointId\":\"bhsy\",\"computeName\":\"unjqh\",\"status\":\"active\",\"lastActive\":\"aulk\",\"size\":{\"autoscalingLimitMinCu\":13.435660335940725,\"autoscalingLimitMaxCu\":35.27596497723506}}],\"branchId\":\"mjnnawtq\",\"branch\":\"pxuckpggq\",\"dataSize\":\"eyirdhlisngw\",\"lastActive\":\"qqmpizruwnpqx\",\"computeHours\":\"iwfcngjsa\",\"protected\":false,\"isDefault\":true},\"roles\":[{\"entityId\":\"zjvkviirhgfgrws\",\"entityName\":\"gratzvzbglbyvict\",\"createdAt\":\"brxkjzwr\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"shkwfbkgozxwopd\",\"value\":\"yd\"},{\"name\":\"izqaclnapxbiyg\",\"value\":\"ugjknf\"},{\"name\":\"mfcttux\",\"value\":\"uyilflqoiquvrehm\"}],\"branchId\":\"jhvsujztczyt\",\"permissions\":[\"w\"],\"isSuperUser\":true,\"roleName\":\"nfprnjletlxs\",\"lastUpdated\":\"pddouifamowaziyn\",\"owns\":\"lqwzdvpiwhxqsz\"},{\"entityId\":\"maajquhuxylr\",\"entityName\":\"m\",\"createdAt\":\"g\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"ospspshckf\",\"value\":\"yjpmspbpssdfppyo\"},{\"name\":\"tieyujtvczkcny\",\"value\":\"rxmunjdxvgln\"},{\"name\":\"vxlx\",\"value\":\"aglqivbgkcvkh\"}],\"branchId\":\"vuqd\",\"permissions\":[\"oniypfpubcpzgp\",\"tivhjknidibgqjx\"],\"isSuperUser\":false,\"roleName\":\"hgovfgp\",\"lastUpdated\":\"qmhhaowj\",\"owns\":\"zvuporqzdfuydz\"},{\"entityId\":\"fvxcnqmxqpswo\",\"entityName\":\"vkhlggdhbemz\",\"createdAt\":\"zszuwiwtglxx\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"gpicr\",\"value\":\"nzhrgmqgjsxvpqcb\"}],\"branchId\":\"mbodthsqqgvri\",\"permissions\":[\"kclacjfrn\"],\"isSuperUser\":false,\"roleName\":\"xauzlwvsgmwohqfz\",\"lastUpdated\":\"vux\",\"owns\":\"kjsvthnwpzteko\"}],\"databases\":[{\"entityId\":\"biattgplucfotan\",\"entityName\":\"fhnykzcugs\",\"createdAt\":\"x\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"wmvtxnjm\",\"value\":\"mcuqudtcvc\"}],\"branchId\":\"ynpdkvgfab\",\"ownerName\":\"yjibuzphdugne\",\"databaseName\":\"n\",\"lastUpdated\":\"oxgjiuqhibt\"}],\"endpoints\":[{\"entityId\":\"qw\",\"entityName\":\"d\",\"createdAt\":\"rrxxgewpktvq\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"pzoyhlfbcg\",\"value\":\"gcl\"},{\"name\":\"xoe\",\"value\":\"qinjipnwjf\"},{\"name\":\"jqlafcbahhpzp\",\"value\":\"foiyjwpfilk\"},{\"name\":\"kkholvdndvia\",\"value\":\"ogphuartvtiu\"}],\"projectId\":\"efchn\",\"branchId\":\"ahmnxhkxjqirw\",\"endpointType\":\"read_write\",\"endpointId\":\"oxffif\",\"computeName\":\"wrsnewmozqvbu\",\"status\":\"idle\",\"lastActive\":\"m\",\"size\":{\"autoscalingLimitMinCu\":73.05400087818032,\"autoscalingLimitMaxCu\":96.36484422071473}}]}}")
            .toObject(OrganizationResourceUpdateProperties.class);
        Assertions.assertEquals("yurmochpprprs", model.marketplaceDetails().subscriptionId());
        Assertions.assertEquals(MarketplaceSubscriptionStatus.UNSUBSCRIBED,
            model.marketplaceDetails().subscriptionStatus());
        Assertions.assertEquals("k", model.marketplaceDetails().offerDetails().publisherId());
        Assertions.assertEquals("yzejnhlbk", model.marketplaceDetails().offerDetails().offerId());
        Assertions.assertEquals("bzpcpiljhahzvec", model.marketplaceDetails().offerDetails().planId());
        Assertions.assertEquals("dbn", model.marketplaceDetails().offerDetails().planName());
        Assertions.assertEquals("ehol", model.marketplaceDetails().offerDetails().termUnit());
        Assertions.assertEquals("jwiuubwefqsfapaq", model.marketplaceDetails().offerDetails().termId());
        Assertions.assertEquals("rrqwexjk", model.userDetails().firstName());
        Assertions.assertEquals("xap", model.userDetails().lastName());
        Assertions.assertEquals("og", model.userDetails().emailAddress());
        Assertions.assertEquals("nobpudcdabtqwpw", model.userDetails().upn());
        Assertions.assertEquals("wbzasqbuclj", model.userDetails().phoneNumber());
        Assertions.assertEquals("exaoguya", model.companyDetails().companyName());
        Assertions.assertEquals("ids", model.companyDetails().country());
        Assertions.assertEquals("ultxijjumfq", model.companyDetails().officeAddress());
        Assertions.assertEquals("z", model.companyDetails().businessPhone());
        Assertions.assertEquals("qnmcjngzqdqx", model.companyDetails().domain());
        Assertions.assertEquals(1193005536048743154L, model.companyDetails().numberOfEmployees());
        Assertions.assertEquals("yfu", model.partnerOrganizationProperties().organizationId());
        Assertions.assertEquals("fzsvtuikzh", model.partnerOrganizationProperties().organizationName());
        Assertions.assertEquals(SingleSignOnStates.INITIAL,
            model.partnerOrganizationProperties().singleSignOnProperties().singleSignOnState());
        Assertions.assertEquals("cfhmlrqryxyn",
            model.partnerOrganizationProperties().singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("zrdpsovwxznptgoe",
            model.partnerOrganizationProperties().singleSignOnProperties().singleSignOnUrl());
        Assertions.assertEquals("b",
            model.partnerOrganizationProperties().singleSignOnProperties().aadDomains().get(0));
        Assertions.assertEquals("kvntjlrigjkskyri", model.projectProperties().entityName());
        Assertions.assertEquals("ygznmmaxrizk", model.projectProperties().attributes().get(0).name());
        Assertions.assertEquals("obgop", model.projectProperties().attributes().get(0).value());
        Assertions.assertEquals("glka", model.projectProperties().regionId());
        Assertions.assertEquals(8554452024860981836L, model.projectProperties().storage());
        Assertions.assertEquals(710596828, model.projectProperties().pgVersion());
        Assertions.assertEquals(1111132453, model.projectProperties().historyRetention());
        Assertions.assertEquals(29.717381078722262,
            model.projectProperties().defaultEndpointSettings().autoscalingLimitMinCu());
        Assertions.assertEquals(89.75453356283948,
            model.projectProperties().defaultEndpointSettings().autoscalingLimitMaxCu());
        Assertions.assertEquals("clt", model.projectProperties().branch().entityName());
        Assertions.assertEquals("zuawxtzxpuamwa", model.projectProperties().branch().attributes().get(0).name());
        Assertions.assertEquals("zxrvxcus", model.projectProperties().branch().attributes().get(0).value());
        Assertions.assertEquals("hknsmjbl", model.projectProperties().branch().projectId());
        Assertions.assertEquals("jhlnymzotqyryu", model.projectProperties().branch().parentId());
        Assertions.assertEquals("bmqqvxmvw", model.projectProperties().branch().roleName());
        Assertions.assertEquals("tayx", model.projectProperties().branch().databaseName());
        Assertions.assertEquals("vsqltnzoibgsxg", model.projectProperties().branch().roles().get(0).entityName());
        Assertions.assertEquals("ox", model.projectProperties().branch().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("dofdbxiqx",
            model.projectProperties().branch().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("f", model.projectProperties().branch().roles().get(0).branchId());
        Assertions.assertEquals("fvwbcb", model.projectProperties().branch().roles().get(0).permissions().get(0));
        Assertions.assertTrue(model.projectProperties().branch().roles().get(0).isSuperUser());
        Assertions.assertEquals("kdi", model.projectProperties().branch().roles().get(0).roleName());
        Assertions.assertEquals("gbqi", model.projectProperties().branch().databases().get(0).entityName());
        Assertions.assertEquals("dmspof",
            model.projectProperties().branch().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("pv",
            model.projectProperties().branch().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("rpfbcunezz", model.projectProperties().branch().databases().get(0).branchId());
        Assertions.assertEquals("zelfwyfwl", model.projectProperties().branch().databases().get(0).ownerName());
        Assertions.assertEquals("jwetnpsihcla", model.projectProperties().branch().databases().get(0).databaseName());
        Assertions.assertEquals("monstshiyxgve", model.projectProperties().branch().endpoints().get(0).entityName());
        Assertions.assertEquals("svu",
            model.projectProperties().branch().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("cobiegstmninwjiz",
            model.projectProperties().branch().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("lnghgshejjtbxqmu", model.projectProperties().branch().endpoints().get(0).projectId());
        Assertions.assertEquals("xlxqzvn", model.projectProperties().branch().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_WRITE,
            model.projectProperties().branch().endpoints().get(0).endpointType());
        Assertions.assertEquals("ycucrwnamikzeb", model.projectProperties().branch().endpoints().get(0).endpointId());
        Assertions.assertEquals("bsmswziqgf", model.projectProperties().branch().endpoints().get(0).computeName());
        Assertions.assertEquals(79.71306219690383,
            model.projectProperties().branch().endpoints().get(0).size().autoscalingLimitMinCu());
        Assertions.assertEquals(75.90546610663729,
            model.projectProperties().branch().endpoints().get(0).size().autoscalingLimitMaxCu());
        Assertions.assertEquals("mjnnawtq", model.projectProperties().branch().branchId());
        Assertions.assertEquals("pxuckpggq", model.projectProperties().branch().branch());
        Assertions.assertEquals("gratzvzbglbyvict", model.projectProperties().roles().get(0).entityName());
        Assertions.assertEquals("shkwfbkgozxwopd", model.projectProperties().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("yd", model.projectProperties().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("jhvsujztczyt", model.projectProperties().roles().get(0).branchId());
        Assertions.assertEquals("w", model.projectProperties().roles().get(0).permissions().get(0));
        Assertions.assertTrue(model.projectProperties().roles().get(0).isSuperUser());
        Assertions.assertEquals("nfprnjletlxs", model.projectProperties().roles().get(0).roleName());
        Assertions.assertEquals("fhnykzcugs", model.projectProperties().databases().get(0).entityName());
        Assertions.assertEquals("wmvtxnjm", model.projectProperties().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("mcuqudtcvc", model.projectProperties().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("ynpdkvgfab", model.projectProperties().databases().get(0).branchId());
        Assertions.assertEquals("yjibuzphdugne", model.projectProperties().databases().get(0).ownerName());
        Assertions.assertEquals("n", model.projectProperties().databases().get(0).databaseName());
        Assertions.assertEquals("d", model.projectProperties().endpoints().get(0).entityName());
        Assertions.assertEquals("pzoyhlfbcg", model.projectProperties().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("gcl", model.projectProperties().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("efchn", model.projectProperties().endpoints().get(0).projectId());
        Assertions.assertEquals("ahmnxhkxjqirw", model.projectProperties().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_WRITE, model.projectProperties().endpoints().get(0).endpointType());
        Assertions.assertEquals("oxffif", model.projectProperties().endpoints().get(0).endpointId());
        Assertions.assertEquals("wrsnewmozqvbu", model.projectProperties().endpoints().get(0).computeName());
        Assertions.assertEquals(73.05400087818032,
            model.projectProperties().endpoints().get(0).size().autoscalingLimitMinCu());
        Assertions.assertEquals(96.36484422071473,
            model.projectProperties().endpoints().get(0).size().autoscalingLimitMaxCu());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OrganizationResourceUpdateProperties model = new OrganizationResourceUpdateProperties()
            .withMarketplaceDetails(new MarketplaceDetails().withSubscriptionId("yurmochpprprs")
                .withSubscriptionStatus(MarketplaceSubscriptionStatus.UNSUBSCRIBED)
                .withOfferDetails(new OfferDetails().withPublisherId("k")
                    .withOfferId("yzejnhlbk")
                    .withPlanId("bzpcpiljhahzvec")
                    .withPlanName("dbn")
                    .withTermUnit("ehol")
                    .withTermId("jwiuubwefqsfapaq")))
            .withUserDetails(new UserDetails().withFirstName("rrqwexjk")
                .withLastName("xap")
                .withEmailAddress("og")
                .withUpn("nobpudcdabtqwpw")
                .withPhoneNumber("wbzasqbuclj"))
            .withCompanyDetails(new CompanyDetails().withCompanyName("exaoguya")
                .withCountry("ids")
                .withOfficeAddress("ultxijjumfq")
                .withBusinessPhone("z")
                .withDomain("qnmcjngzqdqx")
                .withNumberOfEmployees(1193005536048743154L))
            .withPartnerOrganizationProperties(new PartnerOrganizationProperties().withOrganizationId("yfu")
                .withOrganizationName("fzsvtuikzh")
                .withSingleSignOnProperties(
                    new SingleSignOnProperties().withSingleSignOnState(SingleSignOnStates.INITIAL)
                        .withEnterpriseAppId("cfhmlrqryxyn")
                        .withSingleSignOnUrl("zrdpsovwxznptgoe")
                        .withAadDomains(Arrays.asList("b", "bp"))))
            .withProjectProperties(new ProjectProperties().withEntityName("kvntjlrigjkskyri")
                .withAttributes(Arrays.asList(new Attributes().withName("ygznmmaxrizk").withValue("obgop"),
                    new Attributes().withName("lhslnelxieixyn").withValue("lxecwcrojphslh"),
                    new Attributes().withName("awjutifd").withValue("fmvigorqjbttzh")))
                .withRegionId("glka")
                .withStorage(8554452024860981836L)
                .withPgVersion(710596828)
                .withHistoryRetention(1111132453)
                .withDefaultEndpointSettings(new DefaultEndpointSettings().withAutoscalingLimitMinCu(29.717381078722262)
                    .withAutoscalingLimitMaxCu(89.75453356283948))
                .withBranch(new BranchProperties().withEntityName("clt")
                    .withAttributes(Arrays.asList(new Attributes().withName("zuawxtzxpuamwa").withValue("zxrvxcus"),
                        new Attributes().withName("sphaivmxyasflvg").withValue("gzwywak")))
                    .withProjectId("hknsmjbl")
                    .withParentId("jhlnymzotqyryu")
                    .withRoleName("bmqqvxmvw")
                    .withDatabaseName("tayx")
                    .withRoles(Arrays.asList(new NeonRoleProperties().withEntityName("vsqltnzoibgsxg")
                        .withAttributes(Arrays.asList(new Attributes().withName("ox").withValue("dofdbxiqx"),
                            new Attributes().withName("iiqbi").withValue("htmwwinh")))
                        .withBranchId("f")
                        .withPermissions(Arrays.asList("fvwbcb", "embnkbw"))
                        .withIsSuperUser(true)
                        .withRoleName("kdi")))
                    .withDatabases(Arrays.asList(
                        new NeonDatabaseProperties().withEntityName("gbqi")
                            .withAttributes(Arrays.asList(new Attributes().withName("dmspof").withValue("pv"),
                                new Attributes().withName("hryl").withValue("iofrzgbzjedmstk"),
                                new Attributes().withName("nlvxbcuii").withValue("nktwfansnvpdibmi"),
                                new Attributes().withName("ostbzbkiwb").withValue("qnyophzfyls")))
                            .withBranchId("rpfbcunezz")
                            .withOwnerName("zelfwyfwl")
                            .withDatabaseName("jwetnpsihcla"),
                        new NeonDatabaseProperties().withEntityName("qqwzt")
                            .withAttributes(
                                Arrays.asList(new Attributes().withName("xwaxfewzjkj").withValue("xfdeqvhpsyl"),
                                    new Attributes().withName("ksh").withValue("bffmbmxz"),
                                    new Attributes().withName("rgywwp").withValue("jx")))
                            .withBranchId("ptfujgicgaaoept")
                            .withOwnerName("qutdewemxs")
                            .withDatabaseName("ruunzzjgehkf")))
                    .withEndpoints(Arrays.asList(
                        new EndpointProperties().withEntityName("monstshiyxgve")
                            .withAttributes(
                                Arrays.asList(new Attributes().withName("svu").withValue("cobiegstmninwjiz")))
                            .withProjectId("lnghgshejjtbxqmu")
                            .withBranchId("xlxqzvn")
                            .withEndpointType(EndpointType.READ_WRITE)
                            .withEndpointId("ycucrwnamikzeb")
                            .withComputeName("bsmswziqgf")
                            .withSize(new AutoscalingSize().withAutoscalingLimitMinCu(79.71306219690383)
                                .withAutoscalingLimitMaxCu(75.90546610663729)),
                        new EndpointProperties().withEntityName("wwixzvumw")
                            .withAttributes(Arrays.asList(new Attributes().withName("aohdjh").withValue("flzokxco"),
                                new Attributes().withName("pelnjetag").withValue("tsxoatftgz"),
                                new Attributes().withName("npbs").withValue("vefloccsrmozihmi"),
                                new Attributes().withName("g").withValue("wtxxpkyjcx")))
                            .withProjectId("xgrytfmp")
                            .withBranchId("cil")
                            .withEndpointType(EndpointType.READ_WRITE)
                            .withEndpointId("ykggnoxuztrksx")
                            .withComputeName("ndfcpfn")
                            .withSize(new AutoscalingSize().withAutoscalingLimitMinCu(84.35982235030613)
                                .withAutoscalingLimitMaxCu(81.08620111797609)),
                        new EndpointProperties().withEntityName("xqdlyrtltlapr")
                            .withAttributes(
                                Arrays.asList(new Attributes().withName("nbsoqeqalarv").withValue("agunbtgfebw"),
                                    new Attributes().withName("nbmhyree").withValue("dzqavbpdqmjxlyyz"),
                                    new Attributes().withName("lgouwtlmjj").withValue("uojqt")))
                            .withProjectId("axkjeytunlbfjk")
                            .withBranchId("u")
                            .withEndpointType(EndpointType.READ_ONLY)
                            .withEndpointId("bhsy")
                            .withComputeName("unjqh")
                            .withSize(new AutoscalingSize().withAutoscalingLimitMinCu(13.435660335940725)
                                .withAutoscalingLimitMaxCu(35.27596497723506))))
                    .withBranchId("mjnnawtq")
                    .withBranch("pxuckpggq"))
                .withRoles(Arrays.asList(
                    new NeonRoleProperties()
                        .withEntityName("gratzvzbglbyvict")
                        .withAttributes(Arrays.asList(new Attributes().withName("shkwfbkgozxwopd").withValue("yd"),
                            new Attributes().withName("izqaclnapxbiyg").withValue("ugjknf"),
                            new Attributes().withName("mfcttux").withValue("uyilflqoiquvrehm")))
                        .withBranchId("jhvsujztczyt")
                        .withPermissions(Arrays.asList("w"))
                        .withIsSuperUser(true)
                        .withRoleName("nfprnjletlxs"),
                    new NeonRoleProperties().withEntityName("m")
                        .withAttributes(
                            Arrays.asList(new Attributes().withName("ospspshckf").withValue("yjpmspbpssdfppyo"),
                                new Attributes().withName("tieyujtvczkcny").withValue("rxmunjdxvgln"),
                                new Attributes().withName("vxlx").withValue("aglqivbgkcvkh")))
                        .withBranchId("vuqd")
                        .withPermissions(Arrays.asList("oniypfpubcpzgp", "tivhjknidibgqjx"))
                        .withIsSuperUser(false)
                        .withRoleName("hgovfgp"),
                    new NeonRoleProperties().withEntityName("vkhlggdhbemz")
                        .withAttributes(Arrays.asList(new Attributes().withName("gpicr").withValue("nzhrgmqgjsxvpqcb")))
                        .withBranchId("mbodthsqqgvri")
                        .withPermissions(Arrays.asList("kclacjfrn"))
                        .withIsSuperUser(false)
                        .withRoleName("xauzlwvsgmwohqfz")))
                .withDatabases(Arrays.asList(new NeonDatabaseProperties().withEntityName("fhnykzcugs")
                    .withAttributes(Arrays.asList(new Attributes().withName("wmvtxnjm").withValue("mcuqudtcvc")))
                    .withBranchId("ynpdkvgfab")
                    .withOwnerName("yjibuzphdugne")
                    .withDatabaseName("n")))
                .withEndpoints(Arrays.asList(new EndpointProperties().withEntityName("d")
                    .withAttributes(Arrays.asList(new Attributes().withName("pzoyhlfbcg").withValue("gcl"),
                        new Attributes().withName("xoe").withValue("qinjipnwjf"),
                        new Attributes().withName("jqlafcbahhpzp").withValue("foiyjwpfilk"),
                        new Attributes().withName("kkholvdndvia").withValue("ogphuartvtiu")))
                    .withProjectId("efchn")
                    .withBranchId("ahmnxhkxjqirw")
                    .withEndpointType(EndpointType.READ_WRITE)
                    .withEndpointId("oxffif")
                    .withComputeName("wrsnewmozqvbu")
                    .withSize(new AutoscalingSize().withAutoscalingLimitMinCu(73.05400087818032)
                        .withAutoscalingLimitMaxCu(96.36484422071473)))));
        model = BinaryData.fromObject(model).toObject(OrganizationResourceUpdateProperties.class);
        Assertions.assertEquals("yurmochpprprs", model.marketplaceDetails().subscriptionId());
        Assertions.assertEquals(MarketplaceSubscriptionStatus.UNSUBSCRIBED,
            model.marketplaceDetails().subscriptionStatus());
        Assertions.assertEquals("k", model.marketplaceDetails().offerDetails().publisherId());
        Assertions.assertEquals("yzejnhlbk", model.marketplaceDetails().offerDetails().offerId());
        Assertions.assertEquals("bzpcpiljhahzvec", model.marketplaceDetails().offerDetails().planId());
        Assertions.assertEquals("dbn", model.marketplaceDetails().offerDetails().planName());
        Assertions.assertEquals("ehol", model.marketplaceDetails().offerDetails().termUnit());
        Assertions.assertEquals("jwiuubwefqsfapaq", model.marketplaceDetails().offerDetails().termId());
        Assertions.assertEquals("rrqwexjk", model.userDetails().firstName());
        Assertions.assertEquals("xap", model.userDetails().lastName());
        Assertions.assertEquals("og", model.userDetails().emailAddress());
        Assertions.assertEquals("nobpudcdabtqwpw", model.userDetails().upn());
        Assertions.assertEquals("wbzasqbuclj", model.userDetails().phoneNumber());
        Assertions.assertEquals("exaoguya", model.companyDetails().companyName());
        Assertions.assertEquals("ids", model.companyDetails().country());
        Assertions.assertEquals("ultxijjumfq", model.companyDetails().officeAddress());
        Assertions.assertEquals("z", model.companyDetails().businessPhone());
        Assertions.assertEquals("qnmcjngzqdqx", model.companyDetails().domain());
        Assertions.assertEquals(1193005536048743154L, model.companyDetails().numberOfEmployees());
        Assertions.assertEquals("yfu", model.partnerOrganizationProperties().organizationId());
        Assertions.assertEquals("fzsvtuikzh", model.partnerOrganizationProperties().organizationName());
        Assertions.assertEquals(SingleSignOnStates.INITIAL,
            model.partnerOrganizationProperties().singleSignOnProperties().singleSignOnState());
        Assertions.assertEquals("cfhmlrqryxyn",
            model.partnerOrganizationProperties().singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("zrdpsovwxznptgoe",
            model.partnerOrganizationProperties().singleSignOnProperties().singleSignOnUrl());
        Assertions.assertEquals("b",
            model.partnerOrganizationProperties().singleSignOnProperties().aadDomains().get(0));
        Assertions.assertEquals("kvntjlrigjkskyri", model.projectProperties().entityName());
        Assertions.assertEquals("ygznmmaxrizk", model.projectProperties().attributes().get(0).name());
        Assertions.assertEquals("obgop", model.projectProperties().attributes().get(0).value());
        Assertions.assertEquals("glka", model.projectProperties().regionId());
        Assertions.assertEquals(8554452024860981836L, model.projectProperties().storage());
        Assertions.assertEquals(710596828, model.projectProperties().pgVersion());
        Assertions.assertEquals(1111132453, model.projectProperties().historyRetention());
        Assertions.assertEquals(29.717381078722262,
            model.projectProperties().defaultEndpointSettings().autoscalingLimitMinCu());
        Assertions.assertEquals(89.75453356283948,
            model.projectProperties().defaultEndpointSettings().autoscalingLimitMaxCu());
        Assertions.assertEquals("clt", model.projectProperties().branch().entityName());
        Assertions.assertEquals("zuawxtzxpuamwa", model.projectProperties().branch().attributes().get(0).name());
        Assertions.assertEquals("zxrvxcus", model.projectProperties().branch().attributes().get(0).value());
        Assertions.assertEquals("hknsmjbl", model.projectProperties().branch().projectId());
        Assertions.assertEquals("jhlnymzotqyryu", model.projectProperties().branch().parentId());
        Assertions.assertEquals("bmqqvxmvw", model.projectProperties().branch().roleName());
        Assertions.assertEquals("tayx", model.projectProperties().branch().databaseName());
        Assertions.assertEquals("vsqltnzoibgsxg", model.projectProperties().branch().roles().get(0).entityName());
        Assertions.assertEquals("ox", model.projectProperties().branch().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("dofdbxiqx",
            model.projectProperties().branch().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("f", model.projectProperties().branch().roles().get(0).branchId());
        Assertions.assertEquals("fvwbcb", model.projectProperties().branch().roles().get(0).permissions().get(0));
        Assertions.assertTrue(model.projectProperties().branch().roles().get(0).isSuperUser());
        Assertions.assertEquals("kdi", model.projectProperties().branch().roles().get(0).roleName());
        Assertions.assertEquals("gbqi", model.projectProperties().branch().databases().get(0).entityName());
        Assertions.assertEquals("dmspof",
            model.projectProperties().branch().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("pv",
            model.projectProperties().branch().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("rpfbcunezz", model.projectProperties().branch().databases().get(0).branchId());
        Assertions.assertEquals("zelfwyfwl", model.projectProperties().branch().databases().get(0).ownerName());
        Assertions.assertEquals("jwetnpsihcla", model.projectProperties().branch().databases().get(0).databaseName());
        Assertions.assertEquals("monstshiyxgve", model.projectProperties().branch().endpoints().get(0).entityName());
        Assertions.assertEquals("svu",
            model.projectProperties().branch().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("cobiegstmninwjiz",
            model.projectProperties().branch().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("lnghgshejjtbxqmu", model.projectProperties().branch().endpoints().get(0).projectId());
        Assertions.assertEquals("xlxqzvn", model.projectProperties().branch().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_WRITE,
            model.projectProperties().branch().endpoints().get(0).endpointType());
        Assertions.assertEquals("ycucrwnamikzeb", model.projectProperties().branch().endpoints().get(0).endpointId());
        Assertions.assertEquals("bsmswziqgf", model.projectProperties().branch().endpoints().get(0).computeName());
        Assertions.assertEquals(79.71306219690383,
            model.projectProperties().branch().endpoints().get(0).size().autoscalingLimitMinCu());
        Assertions.assertEquals(75.90546610663729,
            model.projectProperties().branch().endpoints().get(0).size().autoscalingLimitMaxCu());
        Assertions.assertEquals("mjnnawtq", model.projectProperties().branch().branchId());
        Assertions.assertEquals("pxuckpggq", model.projectProperties().branch().branch());
        Assertions.assertEquals("gratzvzbglbyvict", model.projectProperties().roles().get(0).entityName());
        Assertions.assertEquals("shkwfbkgozxwopd", model.projectProperties().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("yd", model.projectProperties().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("jhvsujztczyt", model.projectProperties().roles().get(0).branchId());
        Assertions.assertEquals("w", model.projectProperties().roles().get(0).permissions().get(0));
        Assertions.assertTrue(model.projectProperties().roles().get(0).isSuperUser());
        Assertions.assertEquals("nfprnjletlxs", model.projectProperties().roles().get(0).roleName());
        Assertions.assertEquals("fhnykzcugs", model.projectProperties().databases().get(0).entityName());
        Assertions.assertEquals("wmvtxnjm", model.projectProperties().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("mcuqudtcvc", model.projectProperties().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("ynpdkvgfab", model.projectProperties().databases().get(0).branchId());
        Assertions.assertEquals("yjibuzphdugne", model.projectProperties().databases().get(0).ownerName());
        Assertions.assertEquals("n", model.projectProperties().databases().get(0).databaseName());
        Assertions.assertEquals("d", model.projectProperties().endpoints().get(0).entityName());
        Assertions.assertEquals("pzoyhlfbcg", model.projectProperties().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("gcl", model.projectProperties().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("efchn", model.projectProperties().endpoints().get(0).projectId());
        Assertions.assertEquals("ahmnxhkxjqirw", model.projectProperties().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_WRITE, model.projectProperties().endpoints().get(0).endpointType());
        Assertions.assertEquals("oxffif", model.projectProperties().endpoints().get(0).endpointId());
        Assertions.assertEquals("wrsnewmozqvbu", model.projectProperties().endpoints().get(0).computeName());
        Assertions.assertEquals(73.05400087818032,
            model.projectProperties().endpoints().get(0).size().autoscalingLimitMinCu());
        Assertions.assertEquals(96.36484422071473,
            model.projectProperties().endpoints().get(0).size().autoscalingLimitMaxCu());
    }
}
