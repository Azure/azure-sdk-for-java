// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.neonpostgres.models.OfferDetails;
import org.junit.jupiter.api.Assertions;

public final class OfferDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OfferDetails model = BinaryData.fromString(
            "{\"publisherId\":\"ckbasyypndd\",\"offerId\":\"sgcbac\",\"planId\":\"hejkotynqgou\",\"planName\":\"ndlik\",\"termUnit\":\"qkgfgibma\",\"termId\":\"akeqs\"}")
            .toObject(OfferDetails.class);
        Assertions.assertEquals("ckbasyypndd", model.publisherId());
        Assertions.assertEquals("sgcbac", model.offerId());
        Assertions.assertEquals("hejkotynqgou", model.planId());
        Assertions.assertEquals("ndlik", model.planName());
        Assertions.assertEquals("qkgfgibma", model.termUnit());
        Assertions.assertEquals("akeqs", model.termId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OfferDetails model = new OfferDetails().withPublisherId("ckbasyypndd")
            .withOfferId("sgcbac")
            .withPlanId("hejkotynqgou")
            .withPlanName("ndlik")
            .withTermUnit("qkgfgibma")
            .withTermId("akeqs");
        model = BinaryData.fromObject(model).toObject(OfferDetails.class);
        Assertions.assertEquals("ckbasyypndd", model.publisherId());
        Assertions.assertEquals("sgcbac", model.offerId());
        Assertions.assertEquals("hejkotynqgou", model.planId());
        Assertions.assertEquals("ndlik", model.planName());
        Assertions.assertEquals("qkgfgibma", model.termUnit());
        Assertions.assertEquals("akeqs", model.termId());
    }
}
