// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.neonpostgres.models.Attributes;
import com.azure.resourcemanager.neonpostgres.models.BranchProperties;
import com.azure.resourcemanager.neonpostgres.models.CompanyDetails;
import com.azure.resourcemanager.neonpostgres.models.DefaultEndpointSettings;
import com.azure.resourcemanager.neonpostgres.models.EndpointProperties;
import com.azure.resourcemanager.neonpostgres.models.EndpointType;
import com.azure.resourcemanager.neonpostgres.models.MarketplaceDetails;
import com.azure.resourcemanager.neonpostgres.models.MarketplaceSubscriptionStatus;
import com.azure.resourcemanager.neonpostgres.models.NeonDatabaseProperties;
import com.azure.resourcemanager.neonpostgres.models.NeonRoleProperties;
import com.azure.resourcemanager.neonpostgres.models.OfferDetails;
import com.azure.resourcemanager.neonpostgres.models.OrganizationProperties;
import com.azure.resourcemanager.neonpostgres.models.PartnerOrganizationProperties;
import com.azure.resourcemanager.neonpostgres.models.ProjectProperties;
import com.azure.resourcemanager.neonpostgres.models.SingleSignOnProperties;
import com.azure.resourcemanager.neonpostgres.models.SingleSignOnStates;
import com.azure.resourcemanager.neonpostgres.models.UserDetails;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OrganizationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OrganizationProperties model = BinaryData.fromString(
            "{\"marketplaceDetails\":{\"subscriptionId\":\"deyeamdphagalpbu\",\"subscriptionStatus\":\"Suspended\",\"offerDetails\":{\"publisherId\":\"ipwhonowk\",\"offerId\":\"shwankixzbinje\",\"planId\":\"uttmrywnuzoqft\",\"planName\":\"qzrnkcqvyxlwhz\",\"termUnit\":\"icohoqqnwvl\",\"termId\":\"avwhheunm\"}},\"userDetails\":{\"firstName\":\"hgyxzkonoc\",\"lastName\":\"oklyaxuconuq\",\"emailAddress\":\"fkbey\",\"upn\":\"wrmjmwvvjektc\",\"phoneNumber\":\"enhwlrs\"},\"companyDetails\":{\"companyName\":\"rzpwvlqdqgbiq\",\"country\":\"ihkaetcktvfc\",\"officeAddress\":\"fsnkymuctq\",\"businessPhone\":\"fbebrjcxer\",\"domain\":\"wutttxfvjrbi\",\"numberOfEmployees\":5311297680590236186},\"provisioningState\":\"Failed\",\"partnerOrganizationProperties\":{\"organizationId\":\"vahfn\",\"organizationName\":\"jky\",\"singleSignOnProperties\":{\"singleSignOnState\":\"Disable\",\"enterpriseAppId\":\"ujqgidok\",\"singleSignOnUrl\":\"ljyoxgvcltb\",\"aadDomains\":[\"c\",\"hkjeszzhbi\"]}},\"projectProperties\":{\"entityId\":\"xfvgxbfsmxne\",\"entityName\":\"pvecxgodeb\",\"createdAt\":\"kk\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"kgriwflzlfbx\",\"value\":\"puz\"},{\"name\":\"cispnqzahmgkbr\",\"value\":\"yydhibnuqqk\"}],\"regionId\":\"kadrgvt\",\"storage\":4999068038306600813,\"pgVersion\":1873718862,\"historyRetention\":855671205,\"defaultEndpointSettings\":{\"autoscalingLimitMinCu\":69.79849601313212,\"autoscalingLimitMaxCu\":11.829791845904447},\"branch\":{\"entityId\":\"bfs\",\"entityName\":\"rbu\",\"createdAt\":\"cvpnazzmhjrunmpx\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"rbnlankxmyskp\",\"value\":\"henbtkcxywnytn\"},{\"name\":\"synlqidybyxczfc\",\"value\":\"haaxdbabphl\"},{\"name\":\"rqlfktsthsucocmn\",\"value\":\"yazttbtwwrqpue\"},{\"name\":\"ckzywbiexzfeyue\",\"value\":\"xibxujwbhqwalm\"}],\"projectId\":\"yoxa\",\"parentId\":\"dkzjancuxrh\",\"roleName\":\"bavxbniwdjswzt\",\"databaseName\":\"bpg\",\"roles\":[{\"entityId\":\"x\",\"entityName\":\"zxbzpfzabglc\",\"createdAt\":\"xwtctyqiklbbovpl\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"gy\",\"value\":\"gu\"},{\"name\":\"svmkfssxquk\",\"value\":\"fpl\"}],\"branchId\":\"gsxnkjzkdeslpv\",\"permissions\":[\"wiyighxpkdw\",\"baiuebbaumny\"],\"isSuperUser\":false},{\"entityId\":\"deoj\",\"entityName\":\"bckhsmtxpsi\",\"createdAt\":\"tfhvpesapskrdqmh\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"ldwkyzxuutkn\",\"value\":\"ws\"},{\"name\":\"wsvlxotogtwrupqs\",\"value\":\"vnm\"},{\"name\":\"cykvceo\",\"value\":\"eil\"}],\"branchId\":\"notyfjfcnjbkcn\",\"permissions\":[\"bttk\",\"h\",\"wpn\"],\"isSuperUser\":false}],\"databases\":[{\"entityId\":\"ermclfplphoxuscr\",\"entityName\":\"bgyepsbj\",\"createdAt\":\"zq\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"pmueefjzwfqk\",\"value\":\"ujidsuyono\"},{\"name\":\"glaocq\",\"value\":\"tcc\"}],\"branchId\":\"yudxytlmoy\",\"ownerName\":\"vwfudwpzntxhd\"},{\"entityId\":\"lrqjbhckfr\",\"entityName\":\"rxsbkyvp\",\"createdAt\":\"anuzbpzkafkuw\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"bmehh\",\"value\":\"eyvjusrtslhspkde\"}],\"branchId\":\"aofmxagkvtme\",\"ownerName\":\"qkrhahvljua\"},{\"entityId\":\"quhcdhmduala\",\"entityName\":\"qpv\",\"createdAt\":\"dmwsrcrgvxpvgomz\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"gwb\",\"value\":\"b\"},{\"name\":\"e\",\"value\":\"dawkzbali\"},{\"name\":\"urqhaka\",\"value\":\"hashsfwxosow\"}],\"branchId\":\"cugicjoox\",\"ownerName\":\"ebwpucwwfvo\"},{\"entityId\":\"vmeueci\",\"entityName\":\"hzceuojgjrwjue\",\"createdAt\":\"twm\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"x\",\"value\":\"it\"},{\"name\":\"nrjawgqwg\",\"value\":\"hniskxfbkpyc\"}],\"branchId\":\"lwn\",\"ownerName\":\"hjdauwhvylwz\"}],\"endpoints\":[{\"entityId\":\"xujznbmpowu\",\"entityName\":\"rzqlveu\",\"createdAt\":\"upjm\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"bbcswsrtjri\",\"value\":\"lrbpbewtghfgbl\"}],\"projectId\":\"wxzvlvqhjkb\",\"branchId\":\"ibtnmxiebwwaloay\",\"endpointType\":\"read_only\"},{\"entityId\":\"rtzju\",\"entityName\":\"wyzmhtxon\",\"createdAt\":\"ts\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"pwxqp\",\"value\":\"rknftguvriuhprwm\"}],\"projectId\":\"vxqtayriwwroyqbe\",\"branchId\":\"mcqibycnojv\",\"endpointType\":\"read_write\"},{\"entityId\":\"fqsgzvahapjy\",\"entityName\":\"pvgqzcjrvxdjzlm\",\"createdAt\":\"xkvugfhzov\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"u\",\"value\":\"luthn\"},{\"name\":\"prnxipeil\",\"value\":\"jzuaejxdultskzbb\"}],\"projectId\":\"zumveekgpwo\",\"branchId\":\"hkfpbs\",\"endpointType\":\"read_only\"}]},\"roles\":[{\"entityId\":\"luu\",\"entityName\":\"ttouwaboekqvkel\",\"createdAt\":\"mvb\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"flhhcaal\",\"value\":\"jixisxyawjoyaqcs\"},{\"name\":\"yjpkiidzyexz\",\"value\":\"eli\"}],\"branchId\":\"nr\",\"permissions\":[\"o\",\"hb\",\"xknalaulppg\"],\"isSuperUser\":true},{\"entityId\":\"napnyiropuhpigv\",\"entityName\":\"ylgqgitxmedjvcsl\",\"createdAt\":\"qwwncw\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"ktrmgucnapkt\",\"value\":\"oellwp\"},{\"name\":\"fdygpfqbuaceopz\",\"value\":\"qrhhu\"},{\"name\":\"opppcqeq\",\"value\":\"ol\"},{\"name\":\"dahzxctobg\",\"value\":\"kdmoi\"}],\"branchId\":\"ostmgrcf\",\"permissions\":[\"rmfqjhhkxbpvj\",\"mjh\",\"xjyngudivk\"],\"isSuperUser\":false}],\"databases\":[{\"entityId\":\"qzvszjf\",\"entityName\":\"vjfdx\",\"createdAt\":\"vetvt\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"doqmcbxvwvxys\",\"value\":\"qbhsfxobl\"}],\"branchId\":\"k\",\"ownerName\":\"mpew\"}],\"endpoints\":[{\"entityId\":\"krvrns\",\"entityName\":\"hqjohxcrsbfova\",\"createdAt\":\"ruvw\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"sub\",\"value\":\"gjb\"},{\"name\":\"rxbpyb\",\"value\":\"rfbjf\"},{\"name\":\"twss\",\"value\":\"t\"},{\"name\":\"tpvjzbexilzznfqq\",\"value\":\"vwpm\"}],\"projectId\":\"aruoujmkcjhwqyt\",\"branchId\":\"ybn\",\"endpointType\":\"read_write\"},{\"entityId\":\"gdrjervnaenqpe\",\"entityName\":\"ndoygmifthnzdnd\",\"createdAt\":\"gnayqigynduh\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"kthumaqolbgycdui\",\"value\":\"r\"},{\"name\":\"gccymvaolpssl\",\"value\":\"lfmmdnbbglzpswi\"}],\"projectId\":\"mcwyhzdxssadb\",\"branchId\":\"nvdfznuda\",\"endpointType\":\"read_only\"},{\"entityId\":\"zbn\",\"entityName\":\"lylpstdb\",\"createdAt\":\"xsrz\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"rsc\",\"value\":\"ntnev\"},{\"name\":\"iwjmygtdssls\",\"value\":\"tmweriofzpyq\"},{\"name\":\"emwabnet\",\"value\":\"hhszh\"}],\"projectId\":\"plvwiwubmwmbes\",\"branchId\":\"nkww\",\"endpointType\":\"read_write\"}]}}")
            .toObject(OrganizationProperties.class);
        Assertions.assertEquals("deyeamdphagalpbu", model.marketplaceDetails().subscriptionId());
        Assertions.assertEquals(MarketplaceSubscriptionStatus.SUSPENDED,
            model.marketplaceDetails().subscriptionStatus());
        Assertions.assertEquals("ipwhonowk", model.marketplaceDetails().offerDetails().publisherId());
        Assertions.assertEquals("shwankixzbinje", model.marketplaceDetails().offerDetails().offerId());
        Assertions.assertEquals("uttmrywnuzoqft", model.marketplaceDetails().offerDetails().planId());
        Assertions.assertEquals("qzrnkcqvyxlwhz", model.marketplaceDetails().offerDetails().planName());
        Assertions.assertEquals("icohoqqnwvl", model.marketplaceDetails().offerDetails().termUnit());
        Assertions.assertEquals("avwhheunm", model.marketplaceDetails().offerDetails().termId());
        Assertions.assertEquals("hgyxzkonoc", model.userDetails().firstName());
        Assertions.assertEquals("oklyaxuconuq", model.userDetails().lastName());
        Assertions.assertEquals("fkbey", model.userDetails().emailAddress());
        Assertions.assertEquals("wrmjmwvvjektc", model.userDetails().upn());
        Assertions.assertEquals("enhwlrs", model.userDetails().phoneNumber());
        Assertions.assertEquals("rzpwvlqdqgbiq", model.companyDetails().companyName());
        Assertions.assertEquals("ihkaetcktvfc", model.companyDetails().country());
        Assertions.assertEquals("fsnkymuctq", model.companyDetails().officeAddress());
        Assertions.assertEquals("fbebrjcxer", model.companyDetails().businessPhone());
        Assertions.assertEquals("wutttxfvjrbi", model.companyDetails().domain());
        Assertions.assertEquals(5311297680590236186L, model.companyDetails().numberOfEmployees());
        Assertions.assertEquals("vahfn", model.partnerOrganizationProperties().organizationId());
        Assertions.assertEquals("jky", model.partnerOrganizationProperties().organizationName());
        Assertions.assertEquals(SingleSignOnStates.DISABLE,
            model.partnerOrganizationProperties().singleSignOnProperties().singleSignOnState());
        Assertions.assertEquals("ujqgidok",
            model.partnerOrganizationProperties().singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("ljyoxgvcltb",
            model.partnerOrganizationProperties().singleSignOnProperties().singleSignOnUrl());
        Assertions.assertEquals("c",
            model.partnerOrganizationProperties().singleSignOnProperties().aadDomains().get(0));
        Assertions.assertEquals("pvecxgodeb", model.projectProperties().entityName());
        Assertions.assertEquals("kgriwflzlfbx", model.projectProperties().attributes().get(0).name());
        Assertions.assertEquals("puz", model.projectProperties().attributes().get(0).value());
        Assertions.assertEquals("kadrgvt", model.projectProperties().regionId());
        Assertions.assertEquals(4999068038306600813L, model.projectProperties().storage());
        Assertions.assertEquals(1873718862, model.projectProperties().pgVersion());
        Assertions.assertEquals(855671205, model.projectProperties().historyRetention());
        Assertions.assertEquals(69.79849601313212,
            model.projectProperties().defaultEndpointSettings().autoscalingLimitMinCu());
        Assertions.assertEquals(11.829791845904447,
            model.projectProperties().defaultEndpointSettings().autoscalingLimitMaxCu());
        Assertions.assertEquals("rbu", model.projectProperties().branch().entityName());
        Assertions.assertEquals("rbnlankxmyskp", model.projectProperties().branch().attributes().get(0).name());
        Assertions.assertEquals("henbtkcxywnytn", model.projectProperties().branch().attributes().get(0).value());
        Assertions.assertEquals("yoxa", model.projectProperties().branch().projectId());
        Assertions.assertEquals("dkzjancuxrh", model.projectProperties().branch().parentId());
        Assertions.assertEquals("bavxbniwdjswzt", model.projectProperties().branch().roleName());
        Assertions.assertEquals("bpg", model.projectProperties().branch().databaseName());
        Assertions.assertEquals("zxbzpfzabglc", model.projectProperties().branch().roles().get(0).entityName());
        Assertions.assertEquals("gy", model.projectProperties().branch().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("gu", model.projectProperties().branch().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("gsxnkjzkdeslpv", model.projectProperties().branch().roles().get(0).branchId());
        Assertions.assertEquals("wiyighxpkdw", model.projectProperties().branch().roles().get(0).permissions().get(0));
        Assertions.assertFalse(model.projectProperties().branch().roles().get(0).isSuperUser());
        Assertions.assertEquals("bgyepsbj", model.projectProperties().branch().databases().get(0).entityName());
        Assertions.assertEquals("pmueefjzwfqk",
            model.projectProperties().branch().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("ujidsuyono",
            model.projectProperties().branch().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("yudxytlmoy", model.projectProperties().branch().databases().get(0).branchId());
        Assertions.assertEquals("vwfudwpzntxhd", model.projectProperties().branch().databases().get(0).ownerName());
        Assertions.assertEquals("rzqlveu", model.projectProperties().branch().endpoints().get(0).entityName());
        Assertions.assertEquals("bbcswsrtjri",
            model.projectProperties().branch().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("lrbpbewtghfgbl",
            model.projectProperties().branch().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("wxzvlvqhjkb", model.projectProperties().branch().endpoints().get(0).projectId());
        Assertions.assertEquals("ibtnmxiebwwaloay", model.projectProperties().branch().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_ONLY,
            model.projectProperties().branch().endpoints().get(0).endpointType());
        Assertions.assertEquals("ttouwaboekqvkel", model.projectProperties().roles().get(0).entityName());
        Assertions.assertEquals("flhhcaal", model.projectProperties().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("jixisxyawjoyaqcs",
            model.projectProperties().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("nr", model.projectProperties().roles().get(0).branchId());
        Assertions.assertEquals("o", model.projectProperties().roles().get(0).permissions().get(0));
        Assertions.assertTrue(model.projectProperties().roles().get(0).isSuperUser());
        Assertions.assertEquals("vjfdx", model.projectProperties().databases().get(0).entityName());
        Assertions.assertEquals("doqmcbxvwvxys",
            model.projectProperties().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("qbhsfxobl", model.projectProperties().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("k", model.projectProperties().databases().get(0).branchId());
        Assertions.assertEquals("mpew", model.projectProperties().databases().get(0).ownerName());
        Assertions.assertEquals("hqjohxcrsbfova", model.projectProperties().endpoints().get(0).entityName());
        Assertions.assertEquals("sub", model.projectProperties().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("gjb", model.projectProperties().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("aruoujmkcjhwqyt", model.projectProperties().endpoints().get(0).projectId());
        Assertions.assertEquals("ybn", model.projectProperties().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_WRITE, model.projectProperties().endpoints().get(0).endpointType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OrganizationProperties model = new OrganizationProperties()
            .withMarketplaceDetails(new MarketplaceDetails().withSubscriptionId("deyeamdphagalpbu")
                .withSubscriptionStatus(MarketplaceSubscriptionStatus.SUSPENDED)
                .withOfferDetails(new OfferDetails().withPublisherId("ipwhonowk")
                    .withOfferId("shwankixzbinje")
                    .withPlanId("uttmrywnuzoqft")
                    .withPlanName("qzrnkcqvyxlwhz")
                    .withTermUnit("icohoqqnwvl")
                    .withTermId("avwhheunm")))
            .withUserDetails(new UserDetails().withFirstName("hgyxzkonoc")
                .withLastName("oklyaxuconuq")
                .withEmailAddress("fkbey")
                .withUpn("wrmjmwvvjektc")
                .withPhoneNumber("enhwlrs"))
            .withCompanyDetails(new CompanyDetails().withCompanyName("rzpwvlqdqgbiq")
                .withCountry("ihkaetcktvfc")
                .withOfficeAddress("fsnkymuctq")
                .withBusinessPhone("fbebrjcxer")
                .withDomain("wutttxfvjrbi")
                .withNumberOfEmployees(5311297680590236186L))
            .withPartnerOrganizationProperties(new PartnerOrganizationProperties().withOrganizationId("vahfn")
                .withOrganizationName("jky")
                .withSingleSignOnProperties(
                    new SingleSignOnProperties().withSingleSignOnState(SingleSignOnStates.DISABLE)
                        .withEnterpriseAppId("ujqgidok")
                        .withSingleSignOnUrl("ljyoxgvcltb")
                        .withAadDomains(Arrays.asList("c", "hkjeszzhbi"))))
            .withProjectProperties(
                new ProjectProperties().withEntityName("pvecxgodeb")
                    .withAttributes(Arrays.asList(new Attributes().withName("kgriwflzlfbx").withValue("puz"),
                        new Attributes().withName("cispnqzahmgkbr").withValue("yydhibnuqqk")))
                    .withRegionId("kadrgvt")
                    .withStorage(4999068038306600813L)
                    .withPgVersion(1873718862)
                    .withHistoryRetention(855671205)
                    .withDefaultEndpointSettings(
                        new DefaultEndpointSettings().withAutoscalingLimitMinCu(69.79849601313212)
                            .withAutoscalingLimitMaxCu(11.829791845904447))
                    .withBranch(
                        new BranchProperties().withEntityName("rbu")
                            .withAttributes(Arrays.asList(
                                new Attributes().withName("rbnlankxmyskp").withValue("henbtkcxywnytn"),
                                new Attributes().withName("synlqidybyxczfc").withValue("haaxdbabphl"),
                                new Attributes().withName("rqlfktsthsucocmn").withValue("yazttbtwwrqpue"),
                                new Attributes().withName("ckzywbiexzfeyue").withValue("xibxujwbhqwalm")))
                            .withProjectId("yoxa")
                            .withParentId("dkzjancuxrh")
                            .withRoleName("bavxbniwdjswzt")
                            .withDatabaseName("bpg")
                            .withRoles(Arrays.asList(new NeonRoleProperties()
                                .withEntityName("zxbzpfzabglc")
                                .withAttributes(
                                    Arrays.asList(new Attributes().withName("gy").withValue("gu"),
                                        new Attributes().withName("svmkfssxquk").withValue("fpl")))
                                .withBranchId("gsxnkjzkdeslpv")
                                .withPermissions(Arrays.asList("wiyighxpkdw", "baiuebbaumny"))
                                .withIsSuperUser(false),
                                new NeonRoleProperties().withEntityName("bckhsmtxpsi")
                                    .withAttributes(
                                        Arrays.asList(new Attributes().withName("ldwkyzxuutkn").withValue("ws"),
                                            new Attributes().withName("wsvlxotogtwrupqs").withValue("vnm"),
                                            new Attributes().withName("cykvceo").withValue("eil")))
                                    .withBranchId("notyfjfcnjbkcn")
                                    .withPermissions(Arrays.asList("bttk", "h", "wpn"))
                                    .withIsSuperUser(false)))
                            .withDatabases(
                                Arrays.asList(
                                    new NeonDatabaseProperties().withEntityName("bgyepsbj")
                                        .withAttributes(Arrays.asList(
                                            new Attributes().withName("pmueefjzwfqk").withValue("ujidsuyono"),
                                            new Attributes().withName("glaocq").withValue("tcc")))
                                        .withBranchId("yudxytlmoy")
                                        .withOwnerName("vwfudwpzntxhd"),
                                    new NeonDatabaseProperties().withEntityName("rxsbkyvp")
                                        .withAttributes(Arrays
                                            .asList(new Attributes().withName("bmehh").withValue("eyvjusrtslhspkde")))
                                        .withBranchId("aofmxagkvtme")
                                        .withOwnerName("qkrhahvljua"),
                                    new NeonDatabaseProperties().withEntityName("qpv")
                                        .withAttributes(Arrays.asList(new Attributes().withName("gwb").withValue("b"),
                                            new Attributes().withName("e").withValue("dawkzbali"),
                                            new Attributes().withName("urqhaka").withValue("hashsfwxosow")))
                                        .withBranchId("cugicjoox")
                                        .withOwnerName("ebwpucwwfvo"),
                                    new NeonDatabaseProperties().withEntityName("hzceuojgjrwjue")
                                        .withAttributes(Arrays.asList(new Attributes().withName("x").withValue("it"),
                                            new Attributes().withName("nrjawgqwg").withValue("hniskxfbkpyc")))
                                        .withBranchId("lwn")
                                        .withOwnerName("hjdauwhvylwz")))
                            .withEndpoints(Arrays
                                .asList(
                                    new EndpointProperties().withEntityName("rzqlveu")
                                        .withAttributes(Arrays.asList(
                                            new Attributes().withName("bbcswsrtjri").withValue("lrbpbewtghfgbl")))
                                        .withProjectId("wxzvlvqhjkb")
                                        .withBranchId("ibtnmxiebwwaloay")
                                        .withEndpointType(EndpointType.READ_ONLY),
                                    new EndpointProperties().withEntityName("wyzmhtxon")
                                        .withAttributes(Arrays
                                            .asList(new Attributes().withName("pwxqp").withValue("rknftguvriuhprwm")))
                                        .withProjectId("vxqtayriwwroyqbe")
                                        .withBranchId("mcqibycnojv")
                                        .withEndpointType(EndpointType.READ_WRITE),
                                    new EndpointProperties().withEntityName("pvgqzcjrvxdjzlm")
                                        .withAttributes(Arrays.asList(new Attributes().withName("u").withValue("luthn"),
                                            new Attributes().withName("prnxipeil").withValue("jzuaejxdultskzbb")))
                                        .withProjectId("zumveekgpwo")
                                        .withBranchId("hkfpbs")
                                        .withEndpointType(EndpointType.READ_ONLY))))
                    .withRoles(
                        Arrays.asList(
                            new NeonRoleProperties().withEntityName("ttouwaboekqvkel")
                                .withAttributes(Arrays.asList(
                                    new Attributes().withName("flhhcaal").withValue("jixisxyawjoyaqcs"),
                                    new Attributes().withName("yjpkiidzyexz").withValue("eli")))
                                .withBranchId("nr")
                                .withPermissions(Arrays.asList("o", "hb", "xknalaulppg"))
                                .withIsSuperUser(true),
                            new NeonRoleProperties().withEntityName("ylgqgitxmedjvcsl")
                                .withAttributes(
                                    Arrays.asList(new Attributes().withName("ktrmgucnapkt").withValue("oellwp"),
                                        new Attributes().withName("fdygpfqbuaceopz").withValue("qrhhu"),
                                        new Attributes().withName("opppcqeq").withValue("ol"),
                                        new Attributes().withName("dahzxctobg").withValue("kdmoi")))
                                .withBranchId("ostmgrcf")
                                .withPermissions(Arrays.asList("rmfqjhhkxbpvj", "mjh", "xjyngudivk"))
                                .withIsSuperUser(false)))
                    .withDatabases(Arrays.asList(new NeonDatabaseProperties().withEntityName("vjfdx")
                        .withAttributes(
                            Arrays.asList(new Attributes().withName("doqmcbxvwvxys").withValue("qbhsfxobl")))
                        .withBranchId("k")
                        .withOwnerName("mpew")))
                    .withEndpoints(Arrays.asList(
                        new EndpointProperties().withEntityName("hqjohxcrsbfova")
                            .withAttributes(Arrays.asList(new Attributes().withName("sub").withValue("gjb"),
                                new Attributes().withName("rxbpyb").withValue("rfbjf"),
                                new Attributes().withName("twss").withValue("t"),
                                new Attributes().withName("tpvjzbexilzznfqq").withValue("vwpm")))
                            .withProjectId("aruoujmkcjhwqyt")
                            .withBranchId("ybn")
                            .withEndpointType(EndpointType.READ_WRITE),
                        new EndpointProperties().withEntityName("ndoygmifthnzdnd")
                            .withAttributes(Arrays.asList(new Attributes().withName("kthumaqolbgycdui").withValue("r"),
                                new Attributes().withName("gccymvaolpssl").withValue("lfmmdnbbglzpswi")))
                            .withProjectId("mcwyhzdxssadb")
                            .withBranchId("nvdfznuda")
                            .withEndpointType(EndpointType.READ_ONLY),
                        new EndpointProperties().withEntityName("lylpstdb")
                            .withAttributes(Arrays.asList(new Attributes().withName("rsc").withValue("ntnev"),
                                new Attributes().withName("iwjmygtdssls").withValue("tmweriofzpyq"),
                                new Attributes().withName("emwabnet").withValue("hhszh")))
                            .withProjectId("plvwiwubmwmbes")
                            .withBranchId("nkww")
                            .withEndpointType(EndpointType.READ_WRITE))));
        model = BinaryData.fromObject(model).toObject(OrganizationProperties.class);
        Assertions.assertEquals("deyeamdphagalpbu", model.marketplaceDetails().subscriptionId());
        Assertions.assertEquals(MarketplaceSubscriptionStatus.SUSPENDED,
            model.marketplaceDetails().subscriptionStatus());
        Assertions.assertEquals("ipwhonowk", model.marketplaceDetails().offerDetails().publisherId());
        Assertions.assertEquals("shwankixzbinje", model.marketplaceDetails().offerDetails().offerId());
        Assertions.assertEquals("uttmrywnuzoqft", model.marketplaceDetails().offerDetails().planId());
        Assertions.assertEquals("qzrnkcqvyxlwhz", model.marketplaceDetails().offerDetails().planName());
        Assertions.assertEquals("icohoqqnwvl", model.marketplaceDetails().offerDetails().termUnit());
        Assertions.assertEquals("avwhheunm", model.marketplaceDetails().offerDetails().termId());
        Assertions.assertEquals("hgyxzkonoc", model.userDetails().firstName());
        Assertions.assertEquals("oklyaxuconuq", model.userDetails().lastName());
        Assertions.assertEquals("fkbey", model.userDetails().emailAddress());
        Assertions.assertEquals("wrmjmwvvjektc", model.userDetails().upn());
        Assertions.assertEquals("enhwlrs", model.userDetails().phoneNumber());
        Assertions.assertEquals("rzpwvlqdqgbiq", model.companyDetails().companyName());
        Assertions.assertEquals("ihkaetcktvfc", model.companyDetails().country());
        Assertions.assertEquals("fsnkymuctq", model.companyDetails().officeAddress());
        Assertions.assertEquals("fbebrjcxer", model.companyDetails().businessPhone());
        Assertions.assertEquals("wutttxfvjrbi", model.companyDetails().domain());
        Assertions.assertEquals(5311297680590236186L, model.companyDetails().numberOfEmployees());
        Assertions.assertEquals("vahfn", model.partnerOrganizationProperties().organizationId());
        Assertions.assertEquals("jky", model.partnerOrganizationProperties().organizationName());
        Assertions.assertEquals(SingleSignOnStates.DISABLE,
            model.partnerOrganizationProperties().singleSignOnProperties().singleSignOnState());
        Assertions.assertEquals("ujqgidok",
            model.partnerOrganizationProperties().singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("ljyoxgvcltb",
            model.partnerOrganizationProperties().singleSignOnProperties().singleSignOnUrl());
        Assertions.assertEquals("c",
            model.partnerOrganizationProperties().singleSignOnProperties().aadDomains().get(0));
        Assertions.assertEquals("pvecxgodeb", model.projectProperties().entityName());
        Assertions.assertEquals("kgriwflzlfbx", model.projectProperties().attributes().get(0).name());
        Assertions.assertEquals("puz", model.projectProperties().attributes().get(0).value());
        Assertions.assertEquals("kadrgvt", model.projectProperties().regionId());
        Assertions.assertEquals(4999068038306600813L, model.projectProperties().storage());
        Assertions.assertEquals(1873718862, model.projectProperties().pgVersion());
        Assertions.assertEquals(855671205, model.projectProperties().historyRetention());
        Assertions.assertEquals(69.79849601313212,
            model.projectProperties().defaultEndpointSettings().autoscalingLimitMinCu());
        Assertions.assertEquals(11.829791845904447,
            model.projectProperties().defaultEndpointSettings().autoscalingLimitMaxCu());
        Assertions.assertEquals("rbu", model.projectProperties().branch().entityName());
        Assertions.assertEquals("rbnlankxmyskp", model.projectProperties().branch().attributes().get(0).name());
        Assertions.assertEquals("henbtkcxywnytn", model.projectProperties().branch().attributes().get(0).value());
        Assertions.assertEquals("yoxa", model.projectProperties().branch().projectId());
        Assertions.assertEquals("dkzjancuxrh", model.projectProperties().branch().parentId());
        Assertions.assertEquals("bavxbniwdjswzt", model.projectProperties().branch().roleName());
        Assertions.assertEquals("bpg", model.projectProperties().branch().databaseName());
        Assertions.assertEquals("zxbzpfzabglc", model.projectProperties().branch().roles().get(0).entityName());
        Assertions.assertEquals("gy", model.projectProperties().branch().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("gu", model.projectProperties().branch().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("gsxnkjzkdeslpv", model.projectProperties().branch().roles().get(0).branchId());
        Assertions.assertEquals("wiyighxpkdw", model.projectProperties().branch().roles().get(0).permissions().get(0));
        Assertions.assertFalse(model.projectProperties().branch().roles().get(0).isSuperUser());
        Assertions.assertEquals("bgyepsbj", model.projectProperties().branch().databases().get(0).entityName());
        Assertions.assertEquals("pmueefjzwfqk",
            model.projectProperties().branch().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("ujidsuyono",
            model.projectProperties().branch().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("yudxytlmoy", model.projectProperties().branch().databases().get(0).branchId());
        Assertions.assertEquals("vwfudwpzntxhd", model.projectProperties().branch().databases().get(0).ownerName());
        Assertions.assertEquals("rzqlveu", model.projectProperties().branch().endpoints().get(0).entityName());
        Assertions.assertEquals("bbcswsrtjri",
            model.projectProperties().branch().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("lrbpbewtghfgbl",
            model.projectProperties().branch().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("wxzvlvqhjkb", model.projectProperties().branch().endpoints().get(0).projectId());
        Assertions.assertEquals("ibtnmxiebwwaloay", model.projectProperties().branch().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_ONLY,
            model.projectProperties().branch().endpoints().get(0).endpointType());
        Assertions.assertEquals("ttouwaboekqvkel", model.projectProperties().roles().get(0).entityName());
        Assertions.assertEquals("flhhcaal", model.projectProperties().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("jixisxyawjoyaqcs",
            model.projectProperties().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("nr", model.projectProperties().roles().get(0).branchId());
        Assertions.assertEquals("o", model.projectProperties().roles().get(0).permissions().get(0));
        Assertions.assertTrue(model.projectProperties().roles().get(0).isSuperUser());
        Assertions.assertEquals("vjfdx", model.projectProperties().databases().get(0).entityName());
        Assertions.assertEquals("doqmcbxvwvxys",
            model.projectProperties().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("qbhsfxobl", model.projectProperties().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("k", model.projectProperties().databases().get(0).branchId());
        Assertions.assertEquals("mpew", model.projectProperties().databases().get(0).ownerName());
        Assertions.assertEquals("hqjohxcrsbfova", model.projectProperties().endpoints().get(0).entityName());
        Assertions.assertEquals("sub", model.projectProperties().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("gjb", model.projectProperties().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("aruoujmkcjhwqyt", model.projectProperties().endpoints().get(0).projectId());
        Assertions.assertEquals("ybn", model.projectProperties().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_WRITE, model.projectProperties().endpoints().get(0).endpointType());
    }
}
