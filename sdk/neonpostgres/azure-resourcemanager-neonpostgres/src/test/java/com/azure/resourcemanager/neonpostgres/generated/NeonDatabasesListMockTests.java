// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.neonpostgres.NeonPostgresManager;
import com.azure.resourcemanager.neonpostgres.models.NeonDatabase;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NeonDatabasesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"entityId\":\"ejexfdlhuhd\",\"entityName\":\"bgywadrklpdye\",\"createdAt\":\"rwcflvxbocayw\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"zmolhve\",\"value\":\"lngsfmh\"},{\"name\":\"dxqupyml\",\"value\":\"klmnjqzmqynhitr\"}],\"branchId\":\"qgqrbthbfpiq\",\"ownerName\":\"jo\",\"databaseName\":\"gwfv\",\"lastUpdated\":\"wzrqeia\"},\"id\":\"pkhuvnlmdcnut\",\"name\":\"exmizunzbq\",\"type\":\"ioynctfqhhvv\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NeonPostgresManager manager = NeonPostgresManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<NeonDatabase> response = manager.neonDatabases()
            .list("htvagwnnw", "nv", "nyldjdkjvd", "yknkxioxhnrjlq", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("bgywadrklpdye", response.iterator().next().properties().entityName());
        Assertions.assertEquals("zmolhve", response.iterator().next().properties().attributes().get(0).name());
        Assertions.assertEquals("lngsfmh", response.iterator().next().properties().attributes().get(0).value());
        Assertions.assertEquals("qgqrbthbfpiq", response.iterator().next().properties().branchId());
        Assertions.assertEquals("jo", response.iterator().next().properties().ownerName());
        Assertions.assertEquals("gwfv", response.iterator().next().properties().databaseName());
    }
}
