// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.neonpostgres.NeonPostgresManager;
import com.azure.resourcemanager.neonpostgres.models.EndpointType;
import com.azure.resourcemanager.neonpostgres.models.MarketplaceSubscriptionStatus;
import com.azure.resourcemanager.neonpostgres.models.OrganizationResource;
import com.azure.resourcemanager.neonpostgres.models.SingleSignOnStates;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OrganizationsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"marketplaceDetails\":{\"subscriptionId\":\"trvrkpsab\",\"subscriptionStatus\":\"Suspended\",\"offerDetails\":{\"publisherId\":\"vzm\",\"offerId\":\"ghnysvlpyeuu\",\"planId\":\"p\",\"planName\":\"ixqbolxvhhyqqeg\",\"termUnit\":\"xgrzn\",\"termId\":\"inmtsdixchwkibm\"}},\"userDetails\":{\"firstName\":\"ymncjc\",\"lastName\":\"airwcqzoofj\",\"emailAddress\":\"jsvepfbhtleberp\",\"upn\":\"jeknfqnw\",\"phoneNumber\":\"qxowkdn\"},\"companyDetails\":{\"companyName\":\"xgkrh\",\"country\":\"ehycpn\",\"officeAddress\":\"awonoehrguqlhfw\",\"businessPhone\":\"bjzm\",\"domain\":\"rguyfa\",\"numberOfEmployees\":6240784322449609725},\"provisioningState\":\"Canceled\",\"partnerOrganizationProperties\":{\"organizationId\":\"vthrmxkb\",\"organizationName\":\"jww\",\"singleSignOnProperties\":{\"singleSignOnState\":\"Disable\",\"enterpriseAppId\":\"aw\",\"singleSignOnUrl\":\"keboo\",\"aadDomains\":[\"yacagae\"]}},\"projectProperties\":{\"entityId\":\"i\",\"entityName\":\"lm\",\"createdAt\":\"twgabdx\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"wjecooyvhtuqbpe\",\"value\":\"nii\"}],\"regionId\":\"cgagdvcdqhftzbp\",\"storage\":118099549836647093,\"pgVersion\":457071015,\"historyRetention\":1099034518,\"defaultEndpointSettings\":{\"autoscalingLimitMinCu\":87.04134444050871,\"autoscalingLimitMaxCu\":69.30567762916708},\"branch\":{\"entityId\":\"jobzrfp\",\"entityName\":\"zdcqhyftcvb\",\"createdAt\":\"gwhgkgsoau\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"atfybip\",\"value\":\"fdmxuqb\"},{\"name\":\"qna\",\"value\":\"ttuxvzfqayopbt\"},{\"name\":\"ixhg\",\"value\":\"bhxmndztgsqjayq\"},{\"name\":\"arxneibpgbr\",\"value\":\"bjdqkn\"}],\"projectId\":\"nmotpuwnnoh\",\"parentId\":\"zngocfrjuypwyiul\",\"roleName\":\"nos\",\"databaseName\":\"kfhaxttpfsmwgsgh\",\"roles\":[{}],\"databases\":[{},{},{}],\"endpoints\":[{}],\"branchId\":\"auqmllfeoth\",\"branch\":\"arigrjdljlkqh\",\"dataSize\":\"rbzkuastaxk\",\"lastActive\":\"r\",\"computeHours\":\"l\",\"protected\":false,\"isDefault\":false},\"roles\":[{\"entityId\":\"xvsc\",\"entityName\":\"gfyys\",\"createdAt\":\"ekgafxczvfcck\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"ety\",\"value\":\"eszr\"},{\"name\":\"lhpdhwynctaczcnj\",\"value\":\"mbbfnv\"}],\"branchId\":\"itzovnkr\",\"permissions\":[\"lsmnihqlcoqksyi\"],\"isSuperUser\":true,\"roleName\":\"xwbgbudavqd\",\"lastUpdated\":\"bccqcdhthojvl\",\"owns\":\"knucos\"},{\"entityId\":\"rdtnagzl\",\"entityName\":\"yaixihzqj\",\"createdAt\":\"smuydqfttk\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"ue\",\"value\":\"rgmcdcpkshlo\"},{\"name\":\"ermhzicsbfdjhyaa\",\"value\":\"nyukibx\"},{\"name\":\"glhphzwx\",\"value\":\"tej\"},{\"name\":\"iilhvtozyagj\",\"value\":\"nxkbylhyyxgf\"}],\"branchId\":\"lvqzrwtrdgscnv\",\"permissions\":[\"nsgnwxlwmez\"],\"isSuperUser\":true,\"roleName\":\"pthceopvkv\",\"lastUpdated\":\"fve\",\"owns\":\"bpbokhmml\"},{\"entityId\":\"yarnggcjfwblqhxk\",\"entityName\":\"mcolmu\",\"createdAt\":\"yvaosdkluwz\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"vtyevjh\",\"value\":\"bnob\"},{\"name\":\"uqisqsqkpd\",\"value\":\"ioyj\"},{\"name\":\"nmlvi\",\"value\":\"cpszpmcvqdvrdmv\"}],\"branchId\":\"rxdhgv\",\"permissions\":[\"bxaot\",\"gbzxmbtplefoioy\",\"doxzn\"],\"isSuperUser\":false,\"roleName\":\"tmuuvdawsx\",\"lastUpdated\":\"szbknimxl\",\"owns\":\"erxrzutylcurza\"}],\"databases\":[{\"entityId\":\"xqaehtd\",\"entityName\":\"mbnvynfaooeacted\",\"createdAt\":\"lsk\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"dahzllrqm\",\"value\":\"lpbyxroiduyq\"}],\"branchId\":\"ffmnoiics\",\"ownerName\":\"yhbrjjta\",\"databaseName\":\"rdsjrho\",\"lastUpdated\":\"qwgusxxhdo\"},{\"entityId\":\"jwyblvtbdmvsb\",\"entityName\":\"daelqpv\",\"createdAt\":\"mkwjfbotl\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"s\",\"value\":\"ursuivuxcjk\"},{\"name\":\"oqwczsyi\",\"value\":\"rizfwihvaang\"},{\"name\":\"tnhjrfdmfd\",\"value\":\"bbaex\"}],\"branchId\":\"fwtgdfkkauigvmua\",\"ownerName\":\"czfedyuep\",\"databaseName\":\"pl\",\"lastUpdated\":\"dajjvywe\"}],\"endpoints\":[{\"entityId\":\"umc\",\"entityName\":\"xo\",\"createdAt\":\"elsy\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"k\",\"value\":\"myg\"},{\"name\":\"jekrknfd\",\"value\":\"ugjqyckgtxkrdt\"}],\"projectId\":\"crcjdklotcsubmz\",\"branchId\":\"nsvob\",\"endpointType\":\"read_only\",\"endpointId\":\"fpw\",\"computeName\":\"yslb\",\"status\":\"init\",\"lastActive\":\"mnnkkwayqshw\",\"size\":{\"autoscalingLimitMinCu\":20.201196936594346,\"autoscalingLimitMaxCu\":75.12111983098845}},{\"entityId\":\"tb\",\"entityName\":\"q\",\"createdAt\":\"kgxqwqueuuylztpz\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"jyk\",\"value\":\"fvezefk\"},{\"name\":\"kqtwqlepjjzkcasf\",\"value\":\"zcntogffjwajnrtw\"},{\"name\":\"vaqkifmxawost\",\"value\":\"zkn\"}],\"projectId\":\"kmjqncfvdsc\",\"branchId\":\"emvwf\",\"endpointType\":\"read_write\",\"endpointId\":\"ypvndrw\",\"computeName\":\"od\",\"status\":\"active\",\"lastActive\":\"ssgwjfkain\",\"size\":{\"autoscalingLimitMinCu\":57.94710173318662,\"autoscalingLimitMaxCu\":95.43719647043542}},{\"entityId\":\"cv\",\"entityName\":\"scbgmu\",\"createdAt\":\"ictdscnkzzo\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"clzeq\",\"value\":\"zrehlbzqixbnj\"}],\"projectId\":\"vzyue\",\"branchId\":\"z\",\"endpointType\":\"read_only\",\"endpointId\":\"pam\",\"computeName\":\"dpabcreuwzosg\",\"status\":\"idle\",\"lastActive\":\"cvasormrexzvdu\",\"size\":{\"autoscalingLimitMinCu\":95.98853095809365,\"autoscalingLimitMaxCu\":26.128513118396178}}]}},\"location\":\"baduvecovsdq\",\"tags\":{\"ppkeqsifjmclngyg\":\"tdbakrlimzf\"},\"id\":\"hrkombcdta\",\"name\":\"dopg\",\"type\":\"orwjoqtrotpvc\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NeonPostgresManager manager = NeonPostgresManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<OrganizationResource> response
            = manager.organizations().listByResourceGroup("qutibhl", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("baduvecovsdq", response.iterator().next().location());
        Assertions.assertEquals("tdbakrlimzf", response.iterator().next().tags().get("ppkeqsifjmclngyg"));
        Assertions.assertEquals("trvrkpsab",
            response.iterator().next().properties().marketplaceDetails().subscriptionId());
        Assertions.assertEquals(MarketplaceSubscriptionStatus.SUSPENDED,
            response.iterator().next().properties().marketplaceDetails().subscriptionStatus());
        Assertions.assertEquals("vzm",
            response.iterator().next().properties().marketplaceDetails().offerDetails().publisherId());
        Assertions.assertEquals("ghnysvlpyeuu",
            response.iterator().next().properties().marketplaceDetails().offerDetails().offerId());
        Assertions.assertEquals("p",
            response.iterator().next().properties().marketplaceDetails().offerDetails().planId());
        Assertions.assertEquals("ixqbolxvhhyqqeg",
            response.iterator().next().properties().marketplaceDetails().offerDetails().planName());
        Assertions.assertEquals("xgrzn",
            response.iterator().next().properties().marketplaceDetails().offerDetails().termUnit());
        Assertions.assertEquals("inmtsdixchwkibm",
            response.iterator().next().properties().marketplaceDetails().offerDetails().termId());
        Assertions.assertEquals("ymncjc", response.iterator().next().properties().userDetails().firstName());
        Assertions.assertEquals("airwcqzoofj", response.iterator().next().properties().userDetails().lastName());
        Assertions.assertEquals("jsvepfbhtleberp",
            response.iterator().next().properties().userDetails().emailAddress());
        Assertions.assertEquals("jeknfqnw", response.iterator().next().properties().userDetails().upn());
        Assertions.assertEquals("qxowkdn", response.iterator().next().properties().userDetails().phoneNumber());
        Assertions.assertEquals("xgkrh", response.iterator().next().properties().companyDetails().companyName());
        Assertions.assertEquals("ehycpn", response.iterator().next().properties().companyDetails().country());
        Assertions.assertEquals("awonoehrguqlhfw",
            response.iterator().next().properties().companyDetails().officeAddress());
        Assertions.assertEquals("bjzm", response.iterator().next().properties().companyDetails().businessPhone());
        Assertions.assertEquals("rguyfa", response.iterator().next().properties().companyDetails().domain());
        Assertions.assertEquals(6240784322449609725L,
            response.iterator().next().properties().companyDetails().numberOfEmployees());
        Assertions.assertEquals("vthrmxkb",
            response.iterator().next().properties().partnerOrganizationProperties().organizationId());
        Assertions.assertEquals("jww",
            response.iterator().next().properties().partnerOrganizationProperties().organizationName());
        Assertions.assertEquals(SingleSignOnStates.DISABLE,
            response.iterator()
                .next()
                .properties()
                .partnerOrganizationProperties()
                .singleSignOnProperties()
                .singleSignOnState());
        Assertions.assertEquals("aw",
            response.iterator()
                .next()
                .properties()
                .partnerOrganizationProperties()
                .singleSignOnProperties()
                .enterpriseAppId());
        Assertions.assertEquals("keboo",
            response.iterator()
                .next()
                .properties()
                .partnerOrganizationProperties()
                .singleSignOnProperties()
                .singleSignOnUrl());
        Assertions.assertEquals("yacagae",
            response.iterator()
                .next()
                .properties()
                .partnerOrganizationProperties()
                .singleSignOnProperties()
                .aadDomains()
                .get(0));
        Assertions.assertEquals("lm", response.iterator().next().properties().projectProperties().entityName());
        Assertions.assertEquals("wjecooyvhtuqbpe",
            response.iterator().next().properties().projectProperties().attributes().get(0).name());
        Assertions.assertEquals("nii",
            response.iterator().next().properties().projectProperties().attributes().get(0).value());
        Assertions.assertEquals("cgagdvcdqhftzbp",
            response.iterator().next().properties().projectProperties().regionId());
        Assertions.assertEquals(118099549836647093L,
            response.iterator().next().properties().projectProperties().storage());
        Assertions.assertEquals(457071015, response.iterator().next().properties().projectProperties().pgVersion());
        Assertions.assertEquals(1099034518,
            response.iterator().next().properties().projectProperties().historyRetention());
        Assertions.assertEquals(87.04134444050871,
            response.iterator()
                .next()
                .properties()
                .projectProperties()
                .defaultEndpointSettings()
                .autoscalingLimitMinCu());
        Assertions.assertEquals(69.30567762916708,
            response.iterator()
                .next()
                .properties()
                .projectProperties()
                .defaultEndpointSettings()
                .autoscalingLimitMaxCu());
        Assertions.assertEquals("zdcqhyftcvb",
            response.iterator().next().properties().projectProperties().branch().entityName());
        Assertions.assertEquals("atfybip",
            response.iterator().next().properties().projectProperties().branch().attributes().get(0).name());
        Assertions.assertEquals("fdmxuqb",
            response.iterator().next().properties().projectProperties().branch().attributes().get(0).value());
        Assertions.assertEquals("nmotpuwnnoh",
            response.iterator().next().properties().projectProperties().branch().projectId());
        Assertions.assertEquals("zngocfrjuypwyiul",
            response.iterator().next().properties().projectProperties().branch().parentId());
        Assertions.assertEquals("nos", response.iterator().next().properties().projectProperties().branch().roleName());
        Assertions.assertEquals("kfhaxttpfsmwgsgh",
            response.iterator().next().properties().projectProperties().branch().databaseName());
        Assertions.assertEquals("auqmllfeoth",
            response.iterator().next().properties().projectProperties().branch().branchId());
        Assertions.assertEquals("arigrjdljlkqh",
            response.iterator().next().properties().projectProperties().branch().branch());
        Assertions.assertEquals("gfyys",
            response.iterator().next().properties().projectProperties().roles().get(0).entityName());
        Assertions.assertEquals("ety",
            response.iterator().next().properties().projectProperties().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("eszr",
            response.iterator().next().properties().projectProperties().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("itzovnkr",
            response.iterator().next().properties().projectProperties().roles().get(0).branchId());
        Assertions.assertEquals("lsmnihqlcoqksyi",
            response.iterator().next().properties().projectProperties().roles().get(0).permissions().get(0));
        Assertions.assertTrue(response.iterator().next().properties().projectProperties().roles().get(0).isSuperUser());
        Assertions.assertEquals("xwbgbudavqd",
            response.iterator().next().properties().projectProperties().roles().get(0).roleName());
        Assertions.assertEquals("mbnvynfaooeacted",
            response.iterator().next().properties().projectProperties().databases().get(0).entityName());
        Assertions.assertEquals("dahzllrqm",
            response.iterator().next().properties().projectProperties().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("lpbyxroiduyq",
            response.iterator().next().properties().projectProperties().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("ffmnoiics",
            response.iterator().next().properties().projectProperties().databases().get(0).branchId());
        Assertions.assertEquals("yhbrjjta",
            response.iterator().next().properties().projectProperties().databases().get(0).ownerName());
        Assertions.assertEquals("rdsjrho",
            response.iterator().next().properties().projectProperties().databases().get(0).databaseName());
        Assertions.assertEquals("xo",
            response.iterator().next().properties().projectProperties().endpoints().get(0).entityName());
        Assertions.assertEquals("k",
            response.iterator().next().properties().projectProperties().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("myg",
            response.iterator().next().properties().projectProperties().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("crcjdklotcsubmz",
            response.iterator().next().properties().projectProperties().endpoints().get(0).projectId());
        Assertions.assertEquals("nsvob",
            response.iterator().next().properties().projectProperties().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_ONLY,
            response.iterator().next().properties().projectProperties().endpoints().get(0).endpointType());
        Assertions.assertEquals("fpw",
            response.iterator().next().properties().projectProperties().endpoints().get(0).endpointId());
        Assertions.assertEquals("yslb",
            response.iterator().next().properties().projectProperties().endpoints().get(0).computeName());
        Assertions.assertEquals(20.201196936594346,
            response.iterator()
                .next()
                .properties()
                .projectProperties()
                .endpoints()
                .get(0)
                .size()
                .autoscalingLimitMinCu());
        Assertions.assertEquals(75.12111983098845,
            response.iterator()
                .next()
                .properties()
                .projectProperties()
                .endpoints()
                .get(0)
                .size()
                .autoscalingLimitMaxCu());
    }
}
