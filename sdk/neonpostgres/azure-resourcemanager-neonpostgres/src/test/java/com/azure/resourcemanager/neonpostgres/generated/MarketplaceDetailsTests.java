// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.neonpostgres.models.MarketplaceDetails;
import com.azure.resourcemanager.neonpostgres.models.MarketplaceSubscriptionStatus;
import com.azure.resourcemanager.neonpostgres.models.OfferDetails;
import org.junit.jupiter.api.Assertions;

public final class MarketplaceDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MarketplaceDetails model = BinaryData.fromString(
            "{\"subscriptionId\":\"eltmrldhugjzzdat\",\"subscriptionStatus\":\"Subscribed\",\"offerDetails\":{\"publisherId\":\"oc\",\"offerId\":\"geablgphuticndvk\",\"planId\":\"ozwyiftyhxhuro\",\"planName\":\"tyxolniwpwc\",\"termUnit\":\"jfkgiawxk\",\"termId\":\"ypl\"}}")
            .toObject(MarketplaceDetails.class);
        Assertions.assertEquals("eltmrldhugjzzdat", model.subscriptionId());
        Assertions.assertEquals(MarketplaceSubscriptionStatus.SUBSCRIBED, model.subscriptionStatus());
        Assertions.assertEquals("oc", model.offerDetails().publisherId());
        Assertions.assertEquals("geablgphuticndvk", model.offerDetails().offerId());
        Assertions.assertEquals("ozwyiftyhxhuro", model.offerDetails().planId());
        Assertions.assertEquals("tyxolniwpwc", model.offerDetails().planName());
        Assertions.assertEquals("jfkgiawxk", model.offerDetails().termUnit());
        Assertions.assertEquals("ypl", model.offerDetails().termId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MarketplaceDetails model = new MarketplaceDetails().withSubscriptionId("eltmrldhugjzzdat")
            .withSubscriptionStatus(MarketplaceSubscriptionStatus.SUBSCRIBED)
            .withOfferDetails(new OfferDetails().withPublisherId("oc")
                .withOfferId("geablgphuticndvk")
                .withPlanId("ozwyiftyhxhuro")
                .withPlanName("tyxolniwpwc")
                .withTermUnit("jfkgiawxk")
                .withTermId("ypl"));
        model = BinaryData.fromObject(model).toObject(MarketplaceDetails.class);
        Assertions.assertEquals("eltmrldhugjzzdat", model.subscriptionId());
        Assertions.assertEquals(MarketplaceSubscriptionStatus.SUBSCRIBED, model.subscriptionStatus());
        Assertions.assertEquals("oc", model.offerDetails().publisherId());
        Assertions.assertEquals("geablgphuticndvk", model.offerDetails().offerId());
        Assertions.assertEquals("ozwyiftyhxhuro", model.offerDetails().planId());
        Assertions.assertEquals("tyxolniwpwc", model.offerDetails().planName());
        Assertions.assertEquals("jfkgiawxk", model.offerDetails().termUnit());
        Assertions.assertEquals("ypl", model.offerDetails().termId());
    }
}
