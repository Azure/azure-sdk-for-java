// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.neonpostgres.NeonPostgresManager;
import com.azure.resourcemanager.neonpostgres.models.EndpointType;
import com.azure.resourcemanager.neonpostgres.models.Project;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ProjectsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"entityId\":\"idhz\",\"entityName\":\"re\",\"createdAt\":\"zsdtm\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"jplbchych\",\"value\":\"kvy\"}],\"regionId\":\"bqvum\",\"storage\":1810445218528781597,\"pgVersion\":1693947384,\"historyRetention\":1148327717,\"defaultEndpointSettings\":{\"autoscalingLimitMinCu\":7.139638144901827,\"autoscalingLimitMaxCu\":41.27746596828352},\"branch\":{\"entityId\":\"lpqmp\",\"entityName\":\"xef\",\"createdAt\":\"lblmrtuxyprhfcae\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"dywjflobhahqmom\",\"value\":\"ecorkfro\"},{\"name\":\"gbmxldjmz\",\"value\":\"zbjesylslur\"},{\"name\":\"qfygpny\",\"value\":\"gdz\"}],\"projectId\":\"sc\",\"parentId\":\"qyvoupr\",\"roleName\":\"tqzsslhmgwfnivr\",\"databaseName\":\"fduiolhgyqvpb\",\"roles\":[{\"entityId\":\"qzucfzluczdquur\",\"entityName\":\"rmvhvzi\",\"createdAt\":\"bprnqujywzcqygg\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"hbngqiwyej\",\"value\":\"ob\"}],\"branchId\":\"rpnrehkunsbfjh\",\"permissions\":[\"tpkvegeattbzkgtz\"],\"isSuperUser\":true,\"roleName\":\"s\",\"lastUpdated\":\"ewuvcysjeuf\",\"owns\":\"flpd\"},{\"entityId\":\"fnonpiyuxlvrhp\",\"entityName\":\"vbwonleqf\",\"createdAt\":\"tlrvbstphu\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"nttlnrjd\",\"value\":\"zdbuzici\"}],\"branchId\":\"poqvgpnewuhwfwj\",\"permissions\":[\"uoxtfnressfepgck\",\"cjmgvsnvbtqdxfm\",\"ym\"],\"isSuperUser\":true,\"roleName\":\"luqllbsupub\",\"lastUpdated\":\"ck\",\"owns\":\"hzwhcukv\"}],\"databases\":[{\"entityId\":\"jfdizhrjqfya\",\"entityName\":\"vslyekcgniuarlc\",\"createdAt\":\"wgsx\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"wd\",\"value\":\"ujjgnfgrzxbarc\"},{\"name\":\"paefzqsy\",\"value\":\"jwenjcytesmf\"},{\"name\":\"crtfodqhuauzm\",\"value\":\"iv\"}],\"branchId\":\"rfz\",\"ownerName\":\"ezvhj\",\"databaseName\":\"xdyyrud\",\"lastUpdated\":\"hswtvdkxbqssgfe\"},{\"entityId\":\"fdxbvwfqjchiv\",\"entityName\":\"ija\",\"createdAt\":\"ndmuvardlmz\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"rmuhcuhtuzlx\",\"value\":\"wyopgarpfctwrapc\"}],\"branchId\":\"ojqyvzes\",\"ownerName\":\"iysnjqyowaadc\",\"databaseName\":\"azab\",\"lastUpdated\":\"dtsewkaupwhlzyc\"}],\"endpoints\":[{\"entityId\":\"gjlmsvdor\",\"entityName\":\"rxxhyrkqakof\",\"createdAt\":\"freprfvm\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"eyrqshixbcejop\",\"value\":\"lblfs\"},{\"name\":\"rrwcsp\",\"value\":\"mtcvvf\"}],\"projectId\":\"dytzf\",\"branchId\":\"xizhqikmgo\",\"endpointType\":\"read_write\",\"endpointId\":\"e\",\"computeName\":\"diiisklbonxxup\",\"status\":\"active\",\"lastActive\":\"rk\",\"size\":{\"autoscalingLimitMinCu\":23.77562606129867,\"autoscalingLimitMaxCu\":76.46062795537823}},{\"entityId\":\"nnpjwkosnyxi\",\"entityName\":\"oujjcx\",\"createdAt\":\"qmrlhnzkwopswny\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"rrxyxwjezbfqpl\",\"value\":\"yuekdcpvuftrsvjm\"}],\"projectId\":\"vujnj\",\"branchId\":\"volefcj\",\"endpointType\":\"read_only\",\"endpointId\":\"kdb\",\"computeName\":\"tfbjampq\",\"status\":\"init\",\"lastActive\":\"nnmxynlsuqbwzstr\",\"size\":{\"autoscalingLimitMinCu\":18.70174929967664,\"autoscalingLimitMaxCu\":23.266838714889637}}],\"branchId\":\"rgjjktfinfhoksmm\",\"branch\":\"lwkqic\",\"dataSize\":\"ook\",\"lastActive\":\"flsgaoj\",\"computeHours\":\"qpqsdoctpzpuj\",\"protected\":false,\"isDefault\":true},\"roles\":[{\"entityId\":\"xcelujiswlluunx\",\"entityName\":\"wlfxzfw\",\"createdAt\":\"eupcknecexkgrv\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"m\",\"value\":\"gsytqpdzfyxcn\"}],\"branchId\":\"woxcgzbejqfb\",\"permissions\":[\"pfjxdwdrpazq\",\"krfmbwotfcuuu\"],\"isSuperUser\":true,\"roleName\":\"gp\",\"lastUpdated\":\"yiawohfmhnnz\",\"owns\":\"cjjkmqenh\"},{\"entityId\":\"dzrpvsgl\",\"entityName\":\"ovslvivqsuvwtenb\",\"createdAt\":\"i\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"yoaq\",\"value\":\"ukuicjuftekioo\"},{\"name\":\"nd\",\"value\":\"ewfhvpxjh\"},{\"name\":\"zubfjzabbwz\",\"value\":\"vzuaixc\"}],\"branchId\":\"kixsps\",\"permissions\":[\"avkmvyxzerejrkpz\",\"byetjxr\"],\"isSuperUser\":true,\"roleName\":\"ae\",\"lastUpdated\":\"whlbecgihzbpem\",\"owns\":\"rab\"},{\"entityId\":\"rwwxywpj\",\"entityName\":\"pboxhifppsk\",\"createdAt\":\"s\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"ifjua\",\"value\":\"xwwvcmmpeg\"},{\"name\":\"y\",\"value\":\"qvcml\"},{\"name\":\"exbzbqufpnezsjza\",\"value\":\"m\"}],\"branchId\":\"rorh\",\"permissions\":[\"zmsimehtcu\",\"wdhtqqhyhnimxtn\",\"ugisnomwnwngho\"],\"isSuperUser\":true,\"roleName\":\"eyym\",\"lastUpdated\":\"jixxfsfpcrtn\",\"owns\":\"uefxxijtebdveywe\"},{\"entityId\":\"rhlolmcnwepfg\",\"entityName\":\"bbvaqdljnpetl\",\"createdAt\":\"rdetawevxehuekdx\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"ovbrblerlprdaqc\",\"value\":\"dd\"},{\"name\":\"bnygdjc\",\"value\":\"xwbpwyykdig\"},{\"name\":\"zlrz\",\"value\":\"dasdni\"}],\"branchId\":\"jqmvytgkiq\",\"permissions\":[\"hqtwv\",\"azekdzdzffzjwzts\",\"pchggryelgfy\",\"tig\"],\"isSuperUser\":true,\"roleName\":\"r\",\"lastUpdated\":\"knczgorywnvojtvm\",\"owns\":\"vdlhqvbkar\"}],\"databases\":[{\"entityId\":\"ssrlvkpkpk\",\"entityName\":\"maccebxxopyi\",\"createdAt\":\"vspeslhwyykgvr\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"ddhgajkrdyd\",\"value\":\"tpfcudvafnbfbqv\"},{\"name\":\"nqnxhgkordwzej\",\"value\":\"ecwzvcmbpwdluda\"},{\"name\":\"prldidwm\",\"value\":\"ffbvtzldzchub\"}],\"branchId\":\"wnlzuvi\",\"ownerName\":\"lghfrbzakpjtcqra\",\"databaseName\":\"ojpsucm\",\"lastUpdated\":\"mcwqxynqjgs\"},{\"entityId\":\"kyvscbgngcrus\",\"entityName\":\"ircpgcvsvkk\",\"createdAt\":\"jolpyoklkvuz\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"ml\",\"value\":\"eoigowxxbhtpsyio\"},{\"name\":\"emqwtq\",\"value\":\"zzgyksikawan\"},{\"name\":\"mwdvgjqcrb\",\"value\":\"ompnbnfgyweojbep\"},{\"name\":\"cmahiwfrya\",\"value\":\"kchkapit\"}],\"branchId\":\"shfyf\",\"ownerName\":\"ibjepzwhj\",\"databaseName\":\"fdgbggcjxzhbl\",\"lastUpdated\":\"wehs\"},{\"entityId\":\"ym\",\"entityName\":\"bhdosmbngkql\",\"createdAt\":\"zduvxdmx\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"dmnrsenxoirx\",\"value\":\"ddmiploisjkzso\"}],\"branchId\":\"nntwg\",\"ownerName\":\"yohpsapzupzwwytb\",\"databaseName\":\"zghximkgfmx\",\"lastUpdated\":\"kjnpyriwntot\"},{\"entityId\":\"mmqmtsjkyj\",\"entityName\":\"xwdonbexftedau\",\"createdAt\":\"eeggzgrn\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"zuum\",\"value\":\"tgjqg\"},{\"name\":\"cant\",\"value\":\"syxzxjmkanbc\"}],\"branchId\":\"zofmexvtemaspm\",\"ownerName\":\"ydscdkxwd\",\"databaseName\":\"jcbhaahnt\",\"lastUpdated\":\"elfhpf\"}],\"endpoints\":[{\"entityId\":\"kkzdfivsu\",\"entityName\":\"bsrwzzmrg\",\"createdAt\":\"dhmfppinm\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"mkwtzgfragjhx\",\"value\":\"rxlobkdb\"}],\"projectId\":\"hvmm\",\"branchId\":\"iqyholhjnskbgg\",\"endpointType\":\"read_only\",\"endpointId\":\"wlctmwp\",\"computeName\":\"xkrkqgvxrktj\",\"status\":\"active\",\"lastActive\":\"cwt\",\"size\":{\"autoscalingLimitMinCu\":35.84992026861552,\"autoscalingLimitMaxCu\":91.53867692949646}},{\"entityId\":\"asevc\",\"entityName\":\"fp\",\"createdAt\":\"edyybruholaemwcg\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"maabsqqlonb\",\"value\":\"aowcahdkm\"},{\"name\":\"jsmihrijezbfsjwf\",\"value\":\"zglkvbgu\"},{\"name\":\"bsvbwyot\",\"value\":\"gnbknhj\"}],\"projectId\":\"lxa\",\"branchId\":\"cf\",\"endpointType\":\"read_only\",\"endpointId\":\"sdzkucszghdoaq\",\"computeName\":\"mnxclfrsbzrn\",\"status\":\"init\",\"lastActive\":\"vp\",\"size\":{\"autoscalingLimitMinCu\":77.20496652028179,\"autoscalingLimitMaxCu\":50.72747186167301}}]},\"id\":\"fmekjcnginx\",\"name\":\"vmaoyqxfvgy\",\"type\":\"zmxynofxlt\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NeonPostgresManager manager = NeonPostgresManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Project response = manager.projects()
            .getWithResponse("vtzrxzhclecwwtz", "zclo", "hy", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("re", response.properties().entityName());
        Assertions.assertEquals("jplbchych", response.properties().attributes().get(0).name());
        Assertions.assertEquals("kvy", response.properties().attributes().get(0).value());
        Assertions.assertEquals("bqvum", response.properties().regionId());
        Assertions.assertEquals(1810445218528781597L, response.properties().storage());
        Assertions.assertEquals(1693947384, response.properties().pgVersion());
        Assertions.assertEquals(1148327717, response.properties().historyRetention());
        Assertions.assertEquals(7.139638144901827,
            response.properties().defaultEndpointSettings().autoscalingLimitMinCu());
        Assertions.assertEquals(41.27746596828352,
            response.properties().defaultEndpointSettings().autoscalingLimitMaxCu());
        Assertions.assertEquals("xef", response.properties().branch().entityName());
        Assertions.assertEquals("dywjflobhahqmom", response.properties().branch().attributes().get(0).name());
        Assertions.assertEquals("ecorkfro", response.properties().branch().attributes().get(0).value());
        Assertions.assertEquals("sc", response.properties().branch().projectId());
        Assertions.assertEquals("qyvoupr", response.properties().branch().parentId());
        Assertions.assertEquals("tqzsslhmgwfnivr", response.properties().branch().roleName());
        Assertions.assertEquals("fduiolhgyqvpb", response.properties().branch().databaseName());
        Assertions.assertEquals("rmvhvzi", response.properties().branch().roles().get(0).entityName());
        Assertions.assertEquals("hbngqiwyej", response.properties().branch().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("ob", response.properties().branch().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("rpnrehkunsbfjh", response.properties().branch().roles().get(0).branchId());
        Assertions.assertEquals("tpkvegeattbzkgtz", response.properties().branch().roles().get(0).permissions().get(0));
        Assertions.assertTrue(response.properties().branch().roles().get(0).isSuperUser());
        Assertions.assertEquals("s", response.properties().branch().roles().get(0).roleName());
        Assertions.assertEquals("vslyekcgniuarlc", response.properties().branch().databases().get(0).entityName());
        Assertions.assertEquals("wd", response.properties().branch().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("ujjgnfgrzxbarc",
            response.properties().branch().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("rfz", response.properties().branch().databases().get(0).branchId());
        Assertions.assertEquals("ezvhj", response.properties().branch().databases().get(0).ownerName());
        Assertions.assertEquals("xdyyrud", response.properties().branch().databases().get(0).databaseName());
        Assertions.assertEquals("rxxhyrkqakof", response.properties().branch().endpoints().get(0).entityName());
        Assertions.assertEquals("eyrqshixbcejop",
            response.properties().branch().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("lblfs", response.properties().branch().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("dytzf", response.properties().branch().endpoints().get(0).projectId());
        Assertions.assertEquals("xizhqikmgo", response.properties().branch().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_WRITE,
            response.properties().branch().endpoints().get(0).endpointType());
        Assertions.assertEquals("e", response.properties().branch().endpoints().get(0).endpointId());
        Assertions.assertEquals("diiisklbonxxup", response.properties().branch().endpoints().get(0).computeName());
        Assertions.assertEquals(23.77562606129867,
            response.properties().branch().endpoints().get(0).size().autoscalingLimitMinCu());
        Assertions.assertEquals(76.46062795537823,
            response.properties().branch().endpoints().get(0).size().autoscalingLimitMaxCu());
        Assertions.assertEquals("rgjjktfinfhoksmm", response.properties().branch().branchId());
        Assertions.assertEquals("lwkqic", response.properties().branch().branch());
        Assertions.assertEquals("wlfxzfw", response.properties().roles().get(0).entityName());
        Assertions.assertEquals("m", response.properties().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("gsytqpdzfyxcn", response.properties().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("woxcgzbejqfb", response.properties().roles().get(0).branchId());
        Assertions.assertEquals("pfjxdwdrpazq", response.properties().roles().get(0).permissions().get(0));
        Assertions.assertTrue(response.properties().roles().get(0).isSuperUser());
        Assertions.assertEquals("gp", response.properties().roles().get(0).roleName());
        Assertions.assertEquals("maccebxxopyi", response.properties().databases().get(0).entityName());
        Assertions.assertEquals("ddhgajkrdyd", response.properties().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("tpfcudvafnbfbqv",
            response.properties().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("wnlzuvi", response.properties().databases().get(0).branchId());
        Assertions.assertEquals("lghfrbzakpjtcqra", response.properties().databases().get(0).ownerName());
        Assertions.assertEquals("ojpsucm", response.properties().databases().get(0).databaseName());
        Assertions.assertEquals("bsrwzzmrg", response.properties().endpoints().get(0).entityName());
        Assertions.assertEquals("mkwtzgfragjhx", response.properties().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("rxlobkdb", response.properties().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("hvmm", response.properties().endpoints().get(0).projectId());
        Assertions.assertEquals("iqyholhjnskbgg", response.properties().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_ONLY, response.properties().endpoints().get(0).endpointType());
        Assertions.assertEquals("wlctmwp", response.properties().endpoints().get(0).endpointId());
        Assertions.assertEquals("xkrkqgvxrktj", response.properties().endpoints().get(0).computeName());
        Assertions.assertEquals(35.84992026861552,
            response.properties().endpoints().get(0).size().autoscalingLimitMinCu());
        Assertions.assertEquals(91.53867692949646,
            response.properties().endpoints().get(0).size().autoscalingLimitMaxCu());
    }
}
