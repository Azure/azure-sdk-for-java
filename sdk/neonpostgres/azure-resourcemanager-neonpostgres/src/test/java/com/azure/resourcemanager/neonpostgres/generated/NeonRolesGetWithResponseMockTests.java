// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.neonpostgres.NeonPostgresManager;
import com.azure.resourcemanager.neonpostgres.models.NeonRole;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NeonRolesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"entityId\":\"rlcjiw\",\"entityName\":\"xfaiocwdgujjgnf\",\"createdAt\":\"zxbarcbpae\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"mjw\",\"value\":\"njcytesmfucrtfod\"},{\"name\":\"hua\",\"value\":\"zmzivrtrfzhhez\"},{\"name\":\"hjud\",\"value\":\"dyyrudma\"}],\"branchId\":\"wtvdkxb\",\"permissions\":[\"gfenf\",\"dxbvwf\",\"jchivdrijanx\"],\"isSuperUser\":true},\"id\":\"vardlmzjotprrm\",\"name\":\"hcuhtuzlxiw\",\"type\":\"o\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NeonPostgresManager manager = NeonPostgresManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        NeonRole response = manager.neonRoles()
            .getWithResponse("llbsupubdxc", "dlhzwhcu", "vbosjj", "dizhrjqfyaytvsly", "kcgn",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("xfaiocwdgujjgnf", response.properties().entityName());
        Assertions.assertEquals("mjw", response.properties().attributes().get(0).name());
        Assertions.assertEquals("njcytesmfucrtfod", response.properties().attributes().get(0).value());
        Assertions.assertEquals("wtvdkxb", response.properties().branchId());
        Assertions.assertEquals("gfenf", response.properties().permissions().get(0));
        Assertions.assertTrue(response.properties().isSuperUser());
    }
}
