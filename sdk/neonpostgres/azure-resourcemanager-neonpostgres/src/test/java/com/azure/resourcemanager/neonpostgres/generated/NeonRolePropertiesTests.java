// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.neonpostgres.models.Attributes;
import com.azure.resourcemanager.neonpostgres.models.NeonRoleProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NeonRolePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NeonRoleProperties model = BinaryData.fromString(
            "{\"entityId\":\"ibreb\",\"entityName\":\"aysjkixqtnqttez\",\"createdAt\":\"fffiak\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"m\",\"value\":\"edltmmjihyeozp\"}],\"branchId\":\"wau\",\"permissions\":[\"c\"],\"isSuperUser\":true}")
            .toObject(NeonRoleProperties.class);
        Assertions.assertEquals("aysjkixqtnqttez", model.entityName());
        Assertions.assertEquals("m", model.attributes().get(0).name());
        Assertions.assertEquals("edltmmjihyeozp", model.attributes().get(0).value());
        Assertions.assertEquals("wau", model.branchId());
        Assertions.assertEquals("c", model.permissions().get(0));
        Assertions.assertEquals(true, model.isSuperUser());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NeonRoleProperties model = new NeonRoleProperties().withEntityName("aysjkixqtnqttez")
            .withAttributes(Arrays.asList(new Attributes().withName("m").withValue("edltmmjihyeozp")))
            .withBranchId("wau")
            .withPermissions(Arrays.asList("c"))
            .withIsSuperUser(true);
        model = BinaryData.fromObject(model).toObject(NeonRoleProperties.class);
        Assertions.assertEquals("aysjkixqtnqttez", model.entityName());
        Assertions.assertEquals("m", model.attributes().get(0).name());
        Assertions.assertEquals("edltmmjihyeozp", model.attributes().get(0).value());
        Assertions.assertEquals("wau", model.branchId());
        Assertions.assertEquals("c", model.permissions().get(0));
        Assertions.assertEquals(true, model.isSuperUser());
    }
}
