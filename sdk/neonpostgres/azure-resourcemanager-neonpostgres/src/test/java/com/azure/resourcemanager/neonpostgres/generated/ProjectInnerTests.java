// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.neonpostgres.fluent.models.ProjectInner;
import com.azure.resourcemanager.neonpostgres.models.Attributes;
import com.azure.resourcemanager.neonpostgres.models.BranchProperties;
import com.azure.resourcemanager.neonpostgres.models.DefaultEndpointSettings;
import com.azure.resourcemanager.neonpostgres.models.EndpointProperties;
import com.azure.resourcemanager.neonpostgres.models.EndpointType;
import com.azure.resourcemanager.neonpostgres.models.NeonDatabaseProperties;
import com.azure.resourcemanager.neonpostgres.models.NeonRoleProperties;
import com.azure.resourcemanager.neonpostgres.models.ProjectProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ProjectInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProjectInner model = BinaryData.fromString(
            "{\"properties\":{\"entityId\":\"h\",\"entityName\":\"odqkdlwwqfb\",\"createdAt\":\"lkxt\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"mlmbtxhwgfwsrta\",\"value\":\"coezbrhubskh\"},{\"name\":\"dyg\",\"value\":\"ookk\"},{\"name\":\"fqjbvleo\",\"value\":\"fmluiqtqzfavyvn\"},{\"name\":\"qybaryeua\",\"value\":\"jkqa\"}],\"regionId\":\"gzslesjcbhernnti\",\"storage\":2309752602993772179,\"pgVersion\":1433935156,\"historyRetention\":284273475,\"defaultEndpointSettings\":{\"autoscalingLimitMinCu\":10.248846018302228,\"autoscalingLimitMaxCu\":50.47054647042892},\"branch\":{\"entityId\":\"agohbuff\",\"entityName\":\"rqemvvhmxt\",\"createdAt\":\"jfutacoebj\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"jznmwcpmguaa\",\"value\":\"raufactkahzova\"},{\"name\":\"j\",\"value\":\"iuxxpshneekulfg\"},{\"name\":\"lqubkwdlen\",\"value\":\"d\"}],\"projectId\":\"tujbazpju\",\"parentId\":\"minyflnorwm\",\"roleName\":\"vwpklvxwmygdxp\",\"databaseName\":\"qchiszep\",\"roles\":[{\"entityId\":\"crxgibb\",\"entityName\":\"xconfozauors\",\"createdAt\":\"okwbqplh\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"epzl\",\"value\":\"phwzsoldweyuqdu\"},{\"name\":\"vmnnrw\",\"value\":\"biorktal\"}],\"branchId\":\"jhhgdnhxmsi\",\"permissions\":[\"miloxggdufiqndie\"],\"isSuperUser\":false},{\"entityId\":\"fjchvc\",\"entityName\":\"ys\",\"createdAt\":\"dotcubiipuip\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"macjekn\",\"value\":\"zshq\"},{\"name\":\"cimpevfg\",\"value\":\"b\"}],\"branchId\":\"rilbywdx\",\"permissions\":[\"ccwr\"],\"isSuperUser\":false},{\"entityId\":\"jfnynszqujizdvoq\",\"entityName\":\"ibyowbblgyavutp\",\"createdAt\":\"joxoism\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"iml\",\"value\":\"oljxkcgx\"}],\"branchId\":\"xsffgcviz\",\"permissions\":[\"wlvwlyoupf\"],\"isSuperUser\":true},{\"entityId\":\"jub\",\"entityName\":\"hgkfmin\",\"createdAt\":\"owzfttsttkt\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"actxtgzukxitm\",\"value\":\"qtgqqqxhrnxr\"},{\"name\":\"cpjuisa\",\"value\":\"okqdzfvaz\"},{\"name\":\"vjlfrqtt\",\"value\":\"ajlkatnw\"},{\"name\":\"yiopi\",\"value\":\"kqqfk\"}],\"branchId\":\"s\",\"permissions\":[\"dmligovibrxk\",\"mloazuru\",\"cbgoor\"],\"isSuperUser\":true}],\"databases\":[{\"entityId\":\"fhjxakvvjgs\",\"entityName\":\"r\",\"createdAt\":\"lmywwtkgkxnyed\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"udtjuewbc\",\"value\":\"hxuuwhcjyxccybvp\"},{\"name\":\"yakk\",\"value\":\"dzpxgwjpl\"},{\"name\":\"agst\",\"value\":\"yohpfkyrkdbdgiog\"},{\"name\":\"jkmnwq\",\"value\":\"nobaiyhddviacegf\"}],\"branchId\":\"ntfpmvmemfnc\",\"ownerName\":\"wvvb\"},{\"entityId\":\"xlllchp\",\"entityName\":\"bzevwrd\",\"createdAt\":\"fukuvsjcswsmystu\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"fcvlerch\",\"value\":\"qbmfpjbabwidf\"},{\"name\":\"xsspuunnoxyhk\",\"value\":\"g\"},{\"name\":\"ddrihpf\",\"value\":\"oqcaaewdaomdj\"},{\"name\":\"l\",\"value\":\"jxxkzbrmsgei\"}],\"branchId\":\"iykzkdncjdx\",\"ownerName\":\"bzo\"}],\"endpoints\":[{\"entityId\":\"lapzwyrp\",\"entityName\":\"gtqxep\",\"createdAt\":\"lbfu\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"tlvofq\",\"value\":\"hvfcibyfmow\"},{\"name\":\"xrkjpvdw\",\"value\":\"fzwiivwzjbhyz\"},{\"name\":\"xjrk\",\"value\":\"mbtrnegvmnvu\"},{\"name\":\"eqvldspast\",\"value\":\"bkkd\"}],\"projectId\":\"lves\",\"branchId\":\"jlxr\",\"endpointType\":\"read_write\"},{\"entityId\":\"zapeewchpx\",\"entityName\":\"twkuziycs\",\"createdAt\":\"vu\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"ktyhjt\",\"value\":\"edcg\"},{\"name\":\"ulwm\",\"value\":\"rqzz\"}],\"projectId\":\"jvpglydzgk\",\"branchId\":\"qeevt\",\"endpointType\":\"read_only\"},{\"entityId\":\"yutnwytpzdmov\",\"entityName\":\"fvaawzqa\",\"createdAt\":\"lgzurig\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"ndtic\",\"value\":\"kpvzmlq\"},{\"name\":\"mldgxobfirc\",\"value\":\"npkc\"},{\"name\":\"ayzri\",\"value\":\"khyawfvjlboxqv\"},{\"name\":\"jlmxhomdynhd\",\"value\":\"digumbnr\"}],\"projectId\":\"uzzptjazysdz\",\"branchId\":\"zwwva\",\"endpointType\":\"read_write\"},{\"entityId\":\"vv\",\"entityName\":\"nk\",\"createdAt\":\"hqyikvy\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"vluwmncsttij\",\"value\":\"y\"},{\"name\":\"vpo\",\"value\":\"krsgsgb\"},{\"name\":\"huzqgn\",\"value\":\"dgkynscliqhzvhxn\"}],\"projectId\":\"mtk\",\"branchId\":\"otppnv\",\"endpointType\":\"read_only\"}]},\"roles\":[{\"entityId\":\"hfrbbc\",\"entityName\":\"qagt\",\"createdAt\":\"dhlfkqojpykvgt\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"fmzzsdymbrny\",\"value\":\"u\"},{\"name\":\"m\",\"value\":\"rafwgckhocxvdf\"}],\"branchId\":\"wafqroud\",\"permissions\":[\"avehhrvkbunzo\",\"ud\"],\"isSuperUser\":false},{\"entityId\":\"kmoyxcdyuibh\",\"entityName\":\"dnbzydvfvfcjn\",\"createdAt\":\"oisrvhmgorffu\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"w\",\"value\":\"zhwplefaxvxilc\"},{\"name\":\"tg\",\"value\":\"hnze\"},{\"name\":\"qxtjjfzqlqhyca\",\"value\":\"odggx\"},{\"name\":\"beesmieknlra\",\"value\":\"iaa\"}],\"branchId\":\"uagydwqfbylyrf\",\"permissions\":[\"gtcojocqwo\"],\"isSuperUser\":true},{\"entityId\":\"jvusfzldmozux\",\"entityName\":\"fsbtkad\",\"createdAt\":\"s\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"gkbugrjqct\",\"value\":\"jc\"},{\"name\":\"isofieypefojyqd\",\"value\":\"cuplcplcwkhih\"},{\"name\":\"hlhzdsqtzbsrgno\",\"value\":\"cjhfgmvecactxmw\"},{\"name\":\"teyowclu\",\"value\":\"ovekqvgqouwi\"}],\"branchId\":\"mpjw\",\"permissions\":[\"qikfxcv\",\"rfsphuagrt\",\"ikteusqczkvyk\",\"xubyjaffmmfblcqc\"],\"isSuperUser\":false},{\"entityId\":\"qibrtalme\",\"entityName\":\"t\",\"createdAt\":\"dslqxihhrmooizqs\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"utcxapzhy\",\"value\":\"petogebjox\"}],\"branchId\":\"hvnh\",\"permissions\":[\"rqnkkzjcjbtr\",\"aehvvibrxjjstoq\",\"eitpkxztmo\"],\"isSuperUser\":false}],\"databases\":[{\"entityId\":\"idgfc\",\"entityName\":\"mpimaqxzhemjyh\",\"createdAt\":\"uj\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"ozzwculkba\",\"value\":\"pfajnjwltlwtjj\"},{\"name\":\"uktalhsnvkcdmxz\",\"value\":\"poaimlnwiaaomyl\"},{\"name\":\"eazulcs\",\"value\":\"thwwn\"}],\"branchId\":\"hlf\",\"ownerName\":\"wpchwahf\"}],\"endpoints\":[{\"entityId\":\"nfepgf\",\"entityName\":\"etwlyxgncx\",\"createdAt\":\"xhdjhl\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"x\",\"value\":\"h\"},{\"name\":\"cporxvxcjz\",\"value\":\"qizxfpxtgqscjavf\"},{\"name\":\"juhdqazkmtgguwpi\",\"value\":\"r\"}],\"projectId\":\"civmmg\",\"branchId\":\"cf\",\"endpointType\":\"read_only\"},{\"entityId\":\"gkn\",\"entityName\":\"vyi\",\"createdAt\":\"qodfvp\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"gsgbpfgzdjt\",\"value\":\"vzflbq\"}],\"projectId\":\"aqvlgafcqusr\",\"branchId\":\"etnwsdtutnw\",\"endpointType\":\"read_write\"},{\"entityId\":\"cvuzhyrmewipmve\",\"entityName\":\"xukuqgsj\",\"createdAt\":\"undxgketw\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"hfjmhvv\",\"value\":\"uvgp\"},{\"name\":\"uneqsxvmhf\",\"value\":\"uzjyihsasbhudypo\"},{\"name\":\"yue\",\"value\":\"slynsqyrpfoo\"},{\"name\":\"rlttymsjnygqdnfw\",\"value\":\"zdzgtilaxhnfhqly\"}],\"projectId\":\"jouw\",\"branchId\":\"kxoyzunbixxr\",\"endpointType\":\"read_write\"}]},\"id\":\"cpwpg\",\"name\":\"lrcivtsoxfrke\",\"type\":\"xpmyyefrpmpdnq\"}")
            .toObject(ProjectInner.class);
        Assertions.assertEquals("odqkdlwwqfb", model.properties().entityName());
        Assertions.assertEquals("mlmbtxhwgfwsrta", model.properties().attributes().get(0).name());
        Assertions.assertEquals("coezbrhubskh", model.properties().attributes().get(0).value());
        Assertions.assertEquals("gzslesjcbhernnti", model.properties().regionId());
        Assertions.assertEquals(2309752602993772179L, model.properties().storage());
        Assertions.assertEquals(1433935156, model.properties().pgVersion());
        Assertions.assertEquals(284273475, model.properties().historyRetention());
        Assertions.assertEquals(10.248846018302228,
            model.properties().defaultEndpointSettings().autoscalingLimitMinCu());
        Assertions.assertEquals(50.47054647042892,
            model.properties().defaultEndpointSettings().autoscalingLimitMaxCu());
        Assertions.assertEquals("rqemvvhmxt", model.properties().branch().entityName());
        Assertions.assertEquals("jznmwcpmguaa", model.properties().branch().attributes().get(0).name());
        Assertions.assertEquals("raufactkahzova", model.properties().branch().attributes().get(0).value());
        Assertions.assertEquals("tujbazpju", model.properties().branch().projectId());
        Assertions.assertEquals("minyflnorwm", model.properties().branch().parentId());
        Assertions.assertEquals("vwpklvxwmygdxp", model.properties().branch().roleName());
        Assertions.assertEquals("qchiszep", model.properties().branch().databaseName());
        Assertions.assertEquals("xconfozauors", model.properties().branch().roles().get(0).entityName());
        Assertions.assertEquals("epzl", model.properties().branch().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("phwzsoldweyuqdu",
            model.properties().branch().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("jhhgdnhxmsi", model.properties().branch().roles().get(0).branchId());
        Assertions.assertEquals("miloxggdufiqndie", model.properties().branch().roles().get(0).permissions().get(0));
        Assertions.assertEquals(false, model.properties().branch().roles().get(0).isSuperUser());
        Assertions.assertEquals("r", model.properties().branch().databases().get(0).entityName());
        Assertions.assertEquals("udtjuewbc", model.properties().branch().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("hxuuwhcjyxccybvp",
            model.properties().branch().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("ntfpmvmemfnc", model.properties().branch().databases().get(0).branchId());
        Assertions.assertEquals("wvvb", model.properties().branch().databases().get(0).ownerName());
        Assertions.assertEquals("gtqxep", model.properties().branch().endpoints().get(0).entityName());
        Assertions.assertEquals("tlvofq", model.properties().branch().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("hvfcibyfmow",
            model.properties().branch().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("lves", model.properties().branch().endpoints().get(0).projectId());
        Assertions.assertEquals("jlxr", model.properties().branch().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_WRITE, model.properties().branch().endpoints().get(0).endpointType());
        Assertions.assertEquals("qagt", model.properties().roles().get(0).entityName());
        Assertions.assertEquals("fmzzsdymbrny", model.properties().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("u", model.properties().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("wafqroud", model.properties().roles().get(0).branchId());
        Assertions.assertEquals("avehhrvkbunzo", model.properties().roles().get(0).permissions().get(0));
        Assertions.assertEquals(false, model.properties().roles().get(0).isSuperUser());
        Assertions.assertEquals("mpimaqxzhemjyh", model.properties().databases().get(0).entityName());
        Assertions.assertEquals("ozzwculkba", model.properties().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("pfajnjwltlwtjj", model.properties().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("hlf", model.properties().databases().get(0).branchId());
        Assertions.assertEquals("wpchwahf", model.properties().databases().get(0).ownerName());
        Assertions.assertEquals("etwlyxgncx", model.properties().endpoints().get(0).entityName());
        Assertions.assertEquals("x", model.properties().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("h", model.properties().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("civmmg", model.properties().endpoints().get(0).projectId());
        Assertions.assertEquals("cf", model.properties().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_ONLY, model.properties().endpoints().get(0).endpointType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProjectInner model = new ProjectInner().withProperties(new ProjectProperties().withEntityName("odqkdlwwqfb")
            .withAttributes(Arrays.asList(new Attributes().withName("mlmbtxhwgfwsrta").withValue("coezbrhubskh"),
                new Attributes().withName("dyg").withValue("ookk"),
                new Attributes().withName("fqjbvleo").withValue("fmluiqtqzfavyvn"),
                new Attributes().withName("qybaryeua").withValue("jkqa")))
            .withRegionId("gzslesjcbhernnti")
            .withStorage(2309752602993772179L)
            .withPgVersion(1433935156)
            .withHistoryRetention(284273475)
            .withDefaultEndpointSettings(new DefaultEndpointSettings().withAutoscalingLimitMinCu(10.248846018302228)
                .withAutoscalingLimitMaxCu(50.47054647042892))
            .withBranch(new BranchProperties().withEntityName("rqemvvhmxt")
                .withAttributes(Arrays.asList(new Attributes().withName("jznmwcpmguaa").withValue("raufactkahzova"),
                    new Attributes().withName("j").withValue("iuxxpshneekulfg"),
                    new Attributes().withName("lqubkwdlen").withValue("d")))
                .withProjectId("tujbazpju")
                .withParentId("minyflnorwm")
                .withRoleName("vwpklvxwmygdxp")
                .withDatabaseName("qchiszep")
                .withRoles(Arrays.asList(
                    new NeonRoleProperties().withEntityName("xconfozauors")
                        .withAttributes(Arrays.asList(new Attributes().withName("epzl").withValue("phwzsoldweyuqdu"),
                            new Attributes().withName("vmnnrw").withValue("biorktal")))
                        .withBranchId("jhhgdnhxmsi")
                        .withPermissions(Arrays.asList("miloxggdufiqndie"))
                        .withIsSuperUser(false),
                    new NeonRoleProperties().withEntityName("ys")
                        .withAttributes(Arrays.asList(new Attributes().withName("macjekn").withValue("zshq"),
                            new Attributes().withName("cimpevfg").withValue("b")))
                        .withBranchId("rilbywdx")
                        .withPermissions(Arrays.asList("ccwr"))
                        .withIsSuperUser(false),
                    new NeonRoleProperties().withEntityName("ibyowbblgyavutp")
                        .withAttributes(Arrays.asList(new Attributes().withName("iml").withValue("oljxkcgx")))
                        .withBranchId("xsffgcviz")
                        .withPermissions(Arrays.asList("wlvwlyoupf"))
                        .withIsSuperUser(true),
                    new NeonRoleProperties().withEntityName("hgkfmin")
                        .withAttributes(
                            Arrays.asList(new Attributes().withName("actxtgzukxitm").withValue("qtgqqqxhrnxr"),
                                new Attributes().withName("cpjuisa").withValue("okqdzfvaz"),
                                new Attributes().withName("vjlfrqtt").withValue("ajlkatnw"),
                                new Attributes().withName("yiopi").withValue("kqqfk")))
                        .withBranchId("s")
                        .withPermissions(Arrays.asList("dmligovibrxk", "mloazuru", "cbgoor"))
                        .withIsSuperUser(true)))
                .withDatabases(
                    Arrays
                        .asList(
                            new NeonDatabaseProperties().withEntityName("r")
                                .withAttributes(Arrays.asList(
                                    new Attributes().withName("udtjuewbc").withValue("hxuuwhcjyxccybvp"),
                                    new Attributes().withName("yakk").withValue("dzpxgwjpl"),
                                    new Attributes().withName("agst").withValue("yohpfkyrkdbdgiog"),
                                    new Attributes().withName("jkmnwq").withValue("nobaiyhddviacegf")))
                                .withBranchId("ntfpmvmemfnc")
                                .withOwnerName("wvvb"),
                            new NeonDatabaseProperties().withEntityName("bzevwrd")
                                .withAttributes(
                                    Arrays.asList(new Attributes().withName("fcvlerch").withValue("qbmfpjbabwidf"),
                                        new Attributes().withName("xsspuunnoxyhk").withValue("g"),
                                        new Attributes().withName("ddrihpf").withValue("oqcaaewdaomdj"),
                                        new Attributes().withName("l").withValue("jxxkzbrmsgei")))
                                .withBranchId("iykzkdncjdx")
                                .withOwnerName("bzo")))
                .withEndpoints(Arrays.asList(
                    new EndpointProperties().withEntityName("gtqxep")
                        .withAttributes(Arrays.asList(new Attributes().withName("tlvofq").withValue("hvfcibyfmow"),
                            new Attributes().withName("xrkjpvdw").withValue("fzwiivwzjbhyz"),
                            new Attributes().withName("xjrk").withValue("mbtrnegvmnvu"),
                            new Attributes().withName("eqvldspast").withValue("bkkd")))
                        .withProjectId("lves")
                        .withBranchId("jlxr")
                        .withEndpointType(EndpointType.READ_WRITE),
                    new EndpointProperties().withEntityName("twkuziycs")
                        .withAttributes(Arrays.asList(new Attributes().withName("ktyhjt").withValue("edcg"),
                            new Attributes().withName("ulwm").withValue("rqzz")))
                        .withProjectId("jvpglydzgk")
                        .withBranchId("qeevt")
                        .withEndpointType(EndpointType.READ_ONLY),
                    new EndpointProperties().withEntityName("fvaawzqa")
                        .withAttributes(Arrays.asList(new Attributes().withName("ndtic").withValue("kpvzmlq"),
                            new Attributes().withName("mldgxobfirc").withValue("npkc"),
                            new Attributes().withName("ayzri").withValue("khyawfvjlboxqv"),
                            new Attributes().withName("jlmxhomdynhd").withValue("digumbnr")))
                        .withProjectId("uzzptjazysdz")
                        .withBranchId("zwwva")
                        .withEndpointType(EndpointType.READ_WRITE),
                    new EndpointProperties().withEntityName("nk")
                        .withAttributes(Arrays.asList(new Attributes().withName("vluwmncsttij").withValue("y"),
                            new Attributes().withName("vpo").withValue("krsgsgb"),
                            new Attributes().withName("huzqgn").withValue("dgkynscliqhzvhxn")))
                        .withProjectId("mtk")
                        .withBranchId("otppnv")
                        .withEndpointType(EndpointType.READ_ONLY))))
            .withRoles(Arrays.asList(
                new NeonRoleProperties().withEntityName("qagt")
                    .withAttributes(Arrays.asList(new Attributes().withName("fmzzsdymbrny").withValue("u"),
                        new Attributes().withName("m").withValue("rafwgckhocxvdf")))
                    .withBranchId("wafqroud")
                    .withPermissions(Arrays.asList("avehhrvkbunzo", "ud"))
                    .withIsSuperUser(false),
                new NeonRoleProperties().withEntityName("dnbzydvfvfcjn")
                    .withAttributes(Arrays.asList(new Attributes().withName("w").withValue("zhwplefaxvxilc"),
                        new Attributes().withName("tg").withValue("hnze"),
                        new Attributes().withName("qxtjjfzqlqhyca").withValue("odggx"),
                        new Attributes().withName("beesmieknlra").withValue("iaa")))
                    .withBranchId("uagydwqfbylyrf")
                    .withPermissions(Arrays.asList("gtcojocqwo"))
                    .withIsSuperUser(true),
                new NeonRoleProperties().withEntityName("fsbtkad")
                    .withAttributes(Arrays.asList(new Attributes().withName("gkbugrjqct").withValue("jc"),
                        new Attributes().withName("isofieypefojyqd").withValue("cuplcplcwkhih"),
                        new Attributes().withName("hlhzdsqtzbsrgno").withValue("cjhfgmvecactxmw"),
                        new Attributes().withName("teyowclu").withValue("ovekqvgqouwi")))
                    .withBranchId("mpjw")
                    .withPermissions(Arrays.asList("qikfxcv", "rfsphuagrt", "ikteusqczkvyk", "xubyjaffmmfblcqc"))
                    .withIsSuperUser(false),
                new NeonRoleProperties().withEntityName("t")
                    .withAttributes(Arrays.asList(new Attributes().withName("utcxapzhy").withValue("petogebjox")))
                    .withBranchId("hvnh")
                    .withPermissions(Arrays.asList("rqnkkzjcjbtr", "aehvvibrxjjstoq", "eitpkxztmo"))
                    .withIsSuperUser(false)))
            .withDatabases(Arrays.asList(new NeonDatabaseProperties().withEntityName("mpimaqxzhemjyh")
                .withAttributes(Arrays.asList(new Attributes().withName("ozzwculkba").withValue("pfajnjwltlwtjj"),
                    new Attributes().withName("uktalhsnvkcdmxz").withValue("poaimlnwiaaomyl"),
                    new Attributes().withName("eazulcs").withValue("thwwn")))
                .withBranchId("hlf")
                .withOwnerName("wpchwahf")))
            .withEndpoints(Arrays.asList(
                new EndpointProperties().withEntityName("etwlyxgncx")
                    .withAttributes(Arrays.asList(new Attributes().withName("x").withValue("h"),
                        new Attributes().withName("cporxvxcjz").withValue("qizxfpxtgqscjavf"),
                        new Attributes().withName("juhdqazkmtgguwpi").withValue("r")))
                    .withProjectId("civmmg")
                    .withBranchId("cf")
                    .withEndpointType(EndpointType.READ_ONLY),
                new EndpointProperties().withEntityName("vyi")
                    .withAttributes(Arrays.asList(new Attributes().withName("gsgbpfgzdjt").withValue("vzflbq")))
                    .withProjectId("aqvlgafcqusr")
                    .withBranchId("etnwsdtutnw")
                    .withEndpointType(EndpointType.READ_WRITE),
                new EndpointProperties().withEntityName("xukuqgsj")
                    .withAttributes(Arrays.asList(new Attributes().withName("hfjmhvv").withValue("uvgp"),
                        new Attributes().withName("uneqsxvmhf").withValue("uzjyihsasbhudypo"),
                        new Attributes().withName("yue").withValue("slynsqyrpfoo"),
                        new Attributes().withName("rlttymsjnygqdnfw").withValue("zdzgtilaxhnfhqly")))
                    .withProjectId("jouw")
                    .withBranchId("kxoyzunbixxr")
                    .withEndpointType(EndpointType.READ_WRITE))));
        model = BinaryData.fromObject(model).toObject(ProjectInner.class);
        Assertions.assertEquals("odqkdlwwqfb", model.properties().entityName());
        Assertions.assertEquals("mlmbtxhwgfwsrta", model.properties().attributes().get(0).name());
        Assertions.assertEquals("coezbrhubskh", model.properties().attributes().get(0).value());
        Assertions.assertEquals("gzslesjcbhernnti", model.properties().regionId());
        Assertions.assertEquals(2309752602993772179L, model.properties().storage());
        Assertions.assertEquals(1433935156, model.properties().pgVersion());
        Assertions.assertEquals(284273475, model.properties().historyRetention());
        Assertions.assertEquals(10.248846018302228,
            model.properties().defaultEndpointSettings().autoscalingLimitMinCu());
        Assertions.assertEquals(50.47054647042892,
            model.properties().defaultEndpointSettings().autoscalingLimitMaxCu());
        Assertions.assertEquals("rqemvvhmxt", model.properties().branch().entityName());
        Assertions.assertEquals("jznmwcpmguaa", model.properties().branch().attributes().get(0).name());
        Assertions.assertEquals("raufactkahzova", model.properties().branch().attributes().get(0).value());
        Assertions.assertEquals("tujbazpju", model.properties().branch().projectId());
        Assertions.assertEquals("minyflnorwm", model.properties().branch().parentId());
        Assertions.assertEquals("vwpklvxwmygdxp", model.properties().branch().roleName());
        Assertions.assertEquals("qchiszep", model.properties().branch().databaseName());
        Assertions.assertEquals("xconfozauors", model.properties().branch().roles().get(0).entityName());
        Assertions.assertEquals("epzl", model.properties().branch().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("phwzsoldweyuqdu",
            model.properties().branch().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("jhhgdnhxmsi", model.properties().branch().roles().get(0).branchId());
        Assertions.assertEquals("miloxggdufiqndie", model.properties().branch().roles().get(0).permissions().get(0));
        Assertions.assertEquals(false, model.properties().branch().roles().get(0).isSuperUser());
        Assertions.assertEquals("r", model.properties().branch().databases().get(0).entityName());
        Assertions.assertEquals("udtjuewbc", model.properties().branch().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("hxuuwhcjyxccybvp",
            model.properties().branch().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("ntfpmvmemfnc", model.properties().branch().databases().get(0).branchId());
        Assertions.assertEquals("wvvb", model.properties().branch().databases().get(0).ownerName());
        Assertions.assertEquals("gtqxep", model.properties().branch().endpoints().get(0).entityName());
        Assertions.assertEquals("tlvofq", model.properties().branch().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("hvfcibyfmow",
            model.properties().branch().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("lves", model.properties().branch().endpoints().get(0).projectId());
        Assertions.assertEquals("jlxr", model.properties().branch().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_WRITE, model.properties().branch().endpoints().get(0).endpointType());
        Assertions.assertEquals("qagt", model.properties().roles().get(0).entityName());
        Assertions.assertEquals("fmzzsdymbrny", model.properties().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("u", model.properties().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("wafqroud", model.properties().roles().get(0).branchId());
        Assertions.assertEquals("avehhrvkbunzo", model.properties().roles().get(0).permissions().get(0));
        Assertions.assertEquals(false, model.properties().roles().get(0).isSuperUser());
        Assertions.assertEquals("mpimaqxzhemjyh", model.properties().databases().get(0).entityName());
        Assertions.assertEquals("ozzwculkba", model.properties().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("pfajnjwltlwtjj", model.properties().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("hlf", model.properties().databases().get(0).branchId());
        Assertions.assertEquals("wpchwahf", model.properties().databases().get(0).ownerName());
        Assertions.assertEquals("etwlyxgncx", model.properties().endpoints().get(0).entityName());
        Assertions.assertEquals("x", model.properties().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("h", model.properties().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("civmmg", model.properties().endpoints().get(0).projectId());
        Assertions.assertEquals("cf", model.properties().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_ONLY, model.properties().endpoints().get(0).endpointType());
    }
}
