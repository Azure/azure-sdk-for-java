// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.neonpostgres.fluent.models.ProjectInner;
import com.azure.resourcemanager.neonpostgres.models.Attributes;
import com.azure.resourcemanager.neonpostgres.models.AutoscalingSize;
import com.azure.resourcemanager.neonpostgres.models.BranchProperties;
import com.azure.resourcemanager.neonpostgres.models.DefaultEndpointSettings;
import com.azure.resourcemanager.neonpostgres.models.EndpointProperties;
import com.azure.resourcemanager.neonpostgres.models.EndpointType;
import com.azure.resourcemanager.neonpostgres.models.NeonDatabaseProperties;
import com.azure.resourcemanager.neonpostgres.models.NeonRoleProperties;
import com.azure.resourcemanager.neonpostgres.models.ProjectProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ProjectInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProjectInner model = BinaryData.fromString(
            "{\"properties\":{\"entityId\":\"qdnfwqzdz\",\"entityName\":\"ilaxhn\",\"createdAt\":\"qlyvijo\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"xoyzunbix\",\"value\":\"rtikvcpwpg\"},{\"name\":\"lrcivtsoxfrke\",\"value\":\"xpmyyefrpmpdnq\"},{\"name\":\"skawaoqvmmb\",\"value\":\"pqfrtqlkz\"}],\"regionId\":\"gnitgvkxlzyq\",\"storage\":6287019732891771770,\"pgVersion\":1936130104,\"historyRetention\":128848080,\"defaultEndpointSettings\":{\"autoscalingLimitMinCu\":96.92050835741229,\"autoscalingLimitMaxCu\":37.12808235994729},\"branch\":{\"entityId\":\"nsymoyqhlwigd\",\"entityName\":\"bkbxgomfa\",\"createdAt\":\"wasqvdaeyyg\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"sqzhzbezkg\",\"value\":\"msidxasicddyvv\"},{\"name\":\"skgfmocwahpq\",\"value\":\"atjeaahh\"},{\"name\":\"jhhn\",\"value\":\"kzyb\"}],\"projectId\":\"jid\",\"parentId\":\"syxkyxvxevblb\",\"roleName\":\"dnlj\",\"databaseName\":\"geuaulx\",\"roles\":[{\"entityId\":\"jbnkpp\",\"entityName\":\"nenlsvxeizzg\",\"createdAt\":\"lnsrmffe\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"tpiymerteea\",\"value\":\"mx\"}],\"branchId\":\"ekkkzd\",\"permissions\":[\"kgdoj\",\"mxvavrefdee\",\"vecuijpx\"],\"isSuperUser\":false,\"roleName\":\"wprtu\",\"lastUpdated\":\"sawddjibabxvi\",\"owns\":\"tvtzeexavoxtfg\"},{\"entityId\":\"cd\",\"entityName\":\"qbw\",\"createdAt\":\"pqtgsfjac\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"xudb\",\"value\":\"vodhtn\"},{\"name\":\"irudh\",\"value\":\"m\"},{\"name\":\"es\",\"value\":\"kdlpa\"}],\"branchId\":\"rcxfailcfxwmdb\",\"permissions\":[\"fgsftufqob\",\"jln\",\"cgcckknhxkizvyt\",\"rzvul\"],\"isSuperUser\":true,\"roleName\":\"eranokqgukkjqnv\",\"lastUpdated\":\"oylaxxul\",\"owns\":\"isdos\"},{\"entityId\":\"b\",\"entityName\":\"vgjrwhr\",\"createdAt\":\"ycy\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"gc\",\"value\":\"knfnwmbtmvpdv\"},{\"name\":\"dhttzaefedxihchr\",\"value\":\"hk\"},{\"name\":\"crjdqnsdfzpbgtg\",\"value\":\"ylkdghrje\"}],\"branchId\":\"tl\",\"permissions\":[\"z\"],\"isSuperUser\":false,\"roleName\":\"kvbwnhhtqlgeh\",\"lastUpdated\":\"pipifh\",\"owns\":\"e\"}],\"databases\":[{\"entityId\":\"gcxtxj\",\"entityName\":\"heafidlt\",\"createdAt\":\"sr\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"sjhoiftxfkfwegpr\",\"value\":\"ptil\"},{\"name\":\"ucb\",\"value\":\"qtgdqohmcwsl\"},{\"name\":\"riz\",\"value\":\"tpwb\"}],\"branchId\":\"lllibph\",\"ownerName\":\"zmizakakan\",\"databaseName\":\"p\",\"lastUpdated\":\"jzhajoy\"},{\"entityId\":\"jlmuoyxprimrsopt\",\"entityName\":\"cjmeislstvasy\",\"createdAt\":\"xdza\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"ohguuf\",\"value\":\"zboyjathwt\"},{\"name\":\"olbaemwmdx\",\"value\":\"ebwjscjpahlxvea\"}],\"branchId\":\"qxnmwmqt\",\"ownerName\":\"xyi\",\"databaseName\":\"dt\",\"lastUpdated\":\"cttadi\"}],\"endpoints\":[{\"entityId\":\"kmr\",\"entityName\":\"eekpndz\",\"createdAt\":\"pmudqmeqwig\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"qwyxebeybpm\",\"value\":\"znrtffyaqit\"},{\"name\":\"hheioqaqhvseuf\",\"value\":\"qyrxp\"}],\"projectId\":\"cgq\",\"branchId\":\"ismjqfrddgamqu\",\"endpointType\":\"read_only\",\"endpointId\":\"rsjuivfcdisyir\",\"computeName\":\"zhczexrxzbujrtrh\",\"status\":\"active\",\"lastActive\":\"evkh\",\"size\":{\"autoscalingLimitMinCu\":86.10195714469955,\"autoscalingLimitMaxCu\":80.48487948093852}},{\"entityId\":\"zlrpiqywncvj\",\"entityName\":\"z\",\"createdAt\":\"fizehtdhgbjk\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"eamurvzmlo\",\"value\":\"uanashcxlp\"},{\"name\":\"jerbdkelvidizozs\",\"value\":\"bccxjmonfdgn\"}],\"projectId\":\"cypuuwwlt\",\"branchId\":\"qjctzenkeif\",\"endpointType\":\"read_write\",\"endpointId\":\"kdasvflyhbxcudch\",\"computeName\":\"srboldforobw\",\"status\":\"idle\",\"lastActive\":\"zbfhfovvac\",\"size\":{\"autoscalingLimitMinCu\":81.43574286236294,\"autoscalingLimitMaxCu\":45.56639901514282}}],\"branchId\":\"xesz\",\"branch\":\"belawumuaslzkwr\",\"dataSize\":\"oycqucwy\",\"lastActive\":\"hnomdrkywuh\",\"computeHours\":\"vfuuru\",\"protected\":false,\"isDefault\":false},\"roles\":[{\"entityId\":\"alniexzsrzp\",\"entityName\":\"pqtybb\",\"createdAt\":\"pgdakchzyvli\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"cxkjibnxmysuxswq\",\"value\":\"ntvlwijpsttexo\"}],\"branchId\":\"pwcyyufmhr\",\"permissions\":[\"uwm\",\"spkcdqzh\"],\"isSuperUser\":false,\"roleName\":\"dunqnd\",\"lastUpdated\":\"pchrqbn\",\"owns\":\"rcgegydcwboxjum\"},{\"entityId\":\"qoli\",\"entityName\":\"raiouaubrjtl\",\"createdAt\":\"xfuojrn\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"z\",\"value\":\"asccbiui\"},{\"name\":\"zdlyjdfqw\",\"value\":\"kyoqufdv\"},{\"name\":\"uzslzojhpctfnmdx\",\"value\":\"tngfdgugeyzihgr\"},{\"name\":\"yui\",\"value\":\"absnmfpp\"}],\"branchId\":\"jee\",\"permissions\":[\"yhsgz\",\"czbgomfgbeg\",\"qgleohibetnluank\"],\"isSuperUser\":true,\"roleName\":\"eeebtijvacv\",\"lastUpdated\":\"qzbqqxlajrnwxa\",\"owns\":\"veh\"},{\"entityId\":\"uyxoaf\",\"entityName\":\"oqltfae\",\"createdAt\":\"inmfgvxirp\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"poqeyhlqh\",\"value\":\"kprlpyznuc\"}],\"branchId\":\"dsmexiitdfux\",\"permissions\":[\"siibmiybnnustgn\",\"jh\",\"mgixhcmavmqfou\",\"or\"],\"isSuperUser\":true,\"roleName\":\"yprotwyp\",\"lastUpdated\":\"d\",\"owns\":\"xhugcm\"},{\"entityId\":\"avlg\",\"entityName\":\"bmftpmdt\",\"createdAt\":\"jltfvnzcyjtotpv\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"dbzqgqqihed\",\"value\":\"vqwt\"}],\"branchId\":\"ky\",\"permissions\":[\"ysi\",\"sgqcwdho\"],\"isSuperUser\":false,\"roleName\":\"mcdzsufcohdxbz\",\"lastUpdated\":\"cmuapcvhd\",\"owns\":\"v\"}],\"databases\":[{\"entityId\":\"ey\",\"entityName\":\"onqzinkfkbgbzbow\",\"createdAt\":\"qocl\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"kzq\",\"value\":\"jjeokbz\"},{\"name\":\"fezrx\",\"value\":\"czurtlei\"}],\"branchId\":\"xbkwv\",\"ownerName\":\"nzvdfbzdixzmq\",\"databaseName\":\"odawopqhewjptmcg\",\"lastUpdated\":\"ostzelndlatu\"},{\"entityId\":\"zlbiojlvfhrbbpn\",\"entityName\":\"vcwwyyurmochppr\",\"createdAt\":\"snmokayzej\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"pbzpcpiljhahz\",\"value\":\"echndbnwieholew\"}],\"branchId\":\"iuubwefqsf\",\"ownerName\":\"aqtferr\",\"databaseName\":\"ex\",\"lastUpdated\":\"mfxapjwogqqno\"}],\"endpoints\":[{\"entityId\":\"cdabtqwpwya\",\"entityName\":\"zasqbucljgkyexao\",\"createdAt\":\"yaipidsda\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"jjum\",\"value\":\"qwazlnqnmcjngzq\"},{\"name\":\"qxtbjwgnyf\",\"value\":\"sf\"}],\"projectId\":\"vtuikzhajq\",\"branchId\":\"cfhmlrqryxyn\",\"endpointType\":\"read_write\",\"endpointId\":\"dpsovwxznptgo\",\"computeName\":\"ybbabpfhvfsl\",\"status\":\"active\",\"lastActive\":\"jlrigjkskyrioovz\",\"size\":{\"autoscalingLimitMinCu\":48.3168005322934,\"autoscalingLimitMaxCu\":80.38196324121523}},{\"entityId\":\"bzmifrygznmmaxr\",\"entityName\":\"kzobgopxlhsln\",\"createdAt\":\"xieixynllxec\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"phslhcawjutifdw\",\"value\":\"mvi\"},{\"name\":\"orq\",\"value\":\"bttzhraglkafhonq\"},{\"name\":\"ujeickp\",\"value\":\"vcpopmxe\"}],\"projectId\":\"wcltyjede\",\"branchId\":\"mlfmkqs\",\"endpointType\":\"read_write\",\"endpointId\":\"awx\",\"computeName\":\"x\",\"status\":\"init\",\"lastActive\":\"wabzxrvxcushsp\",\"size\":{\"autoscalingLimitMinCu\":50.82678500583704,\"autoscalingLimitMaxCu\":75.87568271940933}},{\"entityId\":\"asflvg\",\"entityName\":\"zwywako\",\"createdAt\":\"knsmjblmljhlnymz\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"yuzcbmqqvxmvw\",\"value\":\"gtayxonsupeujlz\"},{\"name\":\"nh\",\"value\":\"vsqltnzoibgsxg\"},{\"name\":\"xfyqonmpqoxwdo\",\"value\":\"dbxiqx\"}],\"projectId\":\"iqbi\",\"branchId\":\"tmwwi\",\"endpointType\":\"read_write\",\"endpointId\":\"f\",\"computeName\":\"ofvwbcb\",\"status\":\"idle\",\"lastActive\":\"nkbwvqv\",\"size\":{\"autoscalingLimitMinCu\":26.549286221967517,\"autoscalingLimitMaxCu\":92.68187778465769}},{\"entityId\":\"heb\",\"entityName\":\"swbzuwfmdurage\",\"createdAt\":\"zvcjfelisdjubggb\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"kbsazgak\",\"value\":\"acy\"},{\"name\":\"cmjdmspof\",\"value\":\"pv\"},{\"name\":\"hryl\",\"value\":\"iofrzgbzjedmstk\"}],\"projectId\":\"l\",\"branchId\":\"bcuiiz\",\"endpointType\":\"read_only\",\"endpointId\":\"f\",\"computeName\":\"snvpdibmi\",\"status\":\"init\",\"lastActive\":\"bzbkiw\",\"size\":{\"autoscalingLimitMinCu\":65.75814338165185,\"autoscalingLimitMaxCu\":29.71768333841357}}]},\"id\":\"hzfylsgcrpfbc\",\"name\":\"nezzcezelfwyfwlw\",\"type\":\"jwetnpsihcla\"}")
            .toObject(ProjectInner.class);
        Assertions.assertEquals("ilaxhn", model.properties().entityName());
        Assertions.assertEquals("xoyzunbix", model.properties().attributes().get(0).name());
        Assertions.assertEquals("rtikvcpwpg", model.properties().attributes().get(0).value());
        Assertions.assertEquals("gnitgvkxlzyq", model.properties().regionId());
        Assertions.assertEquals(6287019732891771770L, model.properties().storage());
        Assertions.assertEquals(1936130104, model.properties().pgVersion());
        Assertions.assertEquals(128848080, model.properties().historyRetention());
        Assertions.assertEquals(96.92050835741229,
            model.properties().defaultEndpointSettings().autoscalingLimitMinCu());
        Assertions.assertEquals(37.12808235994729,
            model.properties().defaultEndpointSettings().autoscalingLimitMaxCu());
        Assertions.assertEquals("bkbxgomfa", model.properties().branch().entityName());
        Assertions.assertEquals("sqzhzbezkg", model.properties().branch().attributes().get(0).name());
        Assertions.assertEquals("msidxasicddyvv", model.properties().branch().attributes().get(0).value());
        Assertions.assertEquals("jid", model.properties().branch().projectId());
        Assertions.assertEquals("syxkyxvxevblb", model.properties().branch().parentId());
        Assertions.assertEquals("dnlj", model.properties().branch().roleName());
        Assertions.assertEquals("geuaulx", model.properties().branch().databaseName());
        Assertions.assertEquals("nenlsvxeizzg", model.properties().branch().roles().get(0).entityName());
        Assertions.assertEquals("tpiymerteea", model.properties().branch().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("mx", model.properties().branch().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("ekkkzd", model.properties().branch().roles().get(0).branchId());
        Assertions.assertEquals("kgdoj", model.properties().branch().roles().get(0).permissions().get(0));
        Assertions.assertFalse(model.properties().branch().roles().get(0).isSuperUser());
        Assertions.assertEquals("wprtu", model.properties().branch().roles().get(0).roleName());
        Assertions.assertEquals("heafidlt", model.properties().branch().databases().get(0).entityName());
        Assertions.assertEquals("sjhoiftxfkfwegpr",
            model.properties().branch().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("ptil", model.properties().branch().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("lllibph", model.properties().branch().databases().get(0).branchId());
        Assertions.assertEquals("zmizakakan", model.properties().branch().databases().get(0).ownerName());
        Assertions.assertEquals("p", model.properties().branch().databases().get(0).databaseName());
        Assertions.assertEquals("eekpndz", model.properties().branch().endpoints().get(0).entityName());
        Assertions.assertEquals("qwyxebeybpm",
            model.properties().branch().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("znrtffyaqit",
            model.properties().branch().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("cgq", model.properties().branch().endpoints().get(0).projectId());
        Assertions.assertEquals("ismjqfrddgamqu", model.properties().branch().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_ONLY, model.properties().branch().endpoints().get(0).endpointType());
        Assertions.assertEquals("rsjuivfcdisyir", model.properties().branch().endpoints().get(0).endpointId());
        Assertions.assertEquals("zhczexrxzbujrtrh", model.properties().branch().endpoints().get(0).computeName());
        Assertions.assertEquals(86.10195714469955,
            model.properties().branch().endpoints().get(0).size().autoscalingLimitMinCu());
        Assertions.assertEquals(80.48487948093852,
            model.properties().branch().endpoints().get(0).size().autoscalingLimitMaxCu());
        Assertions.assertEquals("xesz", model.properties().branch().branchId());
        Assertions.assertEquals("belawumuaslzkwr", model.properties().branch().branch());
        Assertions.assertEquals("pqtybb", model.properties().roles().get(0).entityName());
        Assertions.assertEquals("cxkjibnxmysuxswq", model.properties().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("ntvlwijpsttexo", model.properties().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("pwcyyufmhr", model.properties().roles().get(0).branchId());
        Assertions.assertEquals("uwm", model.properties().roles().get(0).permissions().get(0));
        Assertions.assertFalse(model.properties().roles().get(0).isSuperUser());
        Assertions.assertEquals("dunqnd", model.properties().roles().get(0).roleName());
        Assertions.assertEquals("onqzinkfkbgbzbow", model.properties().databases().get(0).entityName());
        Assertions.assertEquals("kzq", model.properties().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("jjeokbz", model.properties().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("xbkwv", model.properties().databases().get(0).branchId());
        Assertions.assertEquals("nzvdfbzdixzmq", model.properties().databases().get(0).ownerName());
        Assertions.assertEquals("odawopqhewjptmcg", model.properties().databases().get(0).databaseName());
        Assertions.assertEquals("zasqbucljgkyexao", model.properties().endpoints().get(0).entityName());
        Assertions.assertEquals("jjum", model.properties().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("qwazlnqnmcjngzq", model.properties().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("vtuikzhajq", model.properties().endpoints().get(0).projectId());
        Assertions.assertEquals("cfhmlrqryxyn", model.properties().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_WRITE, model.properties().endpoints().get(0).endpointType());
        Assertions.assertEquals("dpsovwxznptgo", model.properties().endpoints().get(0).endpointId());
        Assertions.assertEquals("ybbabpfhvfsl", model.properties().endpoints().get(0).computeName());
        Assertions.assertEquals(48.3168005322934, model.properties().endpoints().get(0).size().autoscalingLimitMinCu());
        Assertions.assertEquals(80.38196324121523,
            model.properties().endpoints().get(0).size().autoscalingLimitMaxCu());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProjectInner model = new ProjectInner().withProperties(new ProjectProperties().withEntityName("ilaxhn")
            .withAttributes(Arrays.asList(new Attributes().withName("xoyzunbix").withValue("rtikvcpwpg"),
                new Attributes().withName("lrcivtsoxfrke").withValue("xpmyyefrpmpdnq"),
                new Attributes().withName("skawaoqvmmb").withValue("pqfrtqlkz")))
            .withRegionId("gnitgvkxlzyq")
            .withStorage(6287019732891771770L)
            .withPgVersion(1936130104)
            .withHistoryRetention(128848080)
            .withDefaultEndpointSettings(new DefaultEndpointSettings().withAutoscalingLimitMinCu(96.92050835741229)
                .withAutoscalingLimitMaxCu(37.12808235994729))
            .withBranch(new BranchProperties().withEntityName("bkbxgomfa")
                .withAttributes(Arrays.asList(new Attributes().withName("sqzhzbezkg").withValue("msidxasicddyvv"),
                    new Attributes().withName("skgfmocwahpq").withValue("atjeaahh"),
                    new Attributes().withName("jhhn").withValue("kzyb")))
                .withProjectId("jid")
                .withParentId("syxkyxvxevblb")
                .withRoleName("dnlj")
                .withDatabaseName("geuaulx")
                .withRoles(Arrays.asList(
                    new NeonRoleProperties().withEntityName("nenlsvxeizzg")
                        .withAttributes(Arrays.asList(new Attributes().withName("tpiymerteea").withValue("mx")))
                        .withBranchId("ekkkzd")
                        .withPermissions(Arrays.asList("kgdoj", "mxvavrefdee", "vecuijpx"))
                        .withIsSuperUser(false)
                        .withRoleName("wprtu"),
                    new NeonRoleProperties().withEntityName("qbw")
                        .withAttributes(Arrays.asList(new Attributes().withName("xudb").withValue("vodhtn"),
                            new Attributes().withName("irudh").withValue("m"),
                            new Attributes().withName("es").withValue("kdlpa")))
                        .withBranchId("rcxfailcfxwmdb")
                        .withPermissions(Arrays.asList("fgsftufqob", "jln", "cgcckknhxkizvyt", "rzvul"))
                        .withIsSuperUser(true)
                        .withRoleName("eranokqgukkjqnv"),
                    new NeonRoleProperties().withEntityName("vgjrwhr")
                        .withAttributes(Arrays.asList(new Attributes().withName("gc").withValue("knfnwmbtmvpdv"),
                            new Attributes().withName("dhttzaefedxihchr").withValue("hk"),
                            new Attributes().withName("crjdqnsdfzpbgtg").withValue("ylkdghrje")))
                        .withBranchId("tl")
                        .withPermissions(Arrays.asList("z"))
                        .withIsSuperUser(false)
                        .withRoleName("kvbwnhhtqlgeh")))
                .withDatabases(Arrays.asList(
                    new NeonDatabaseProperties().withEntityName("heafidlt")
                        .withAttributes(Arrays.asList(new Attributes().withName("sjhoiftxfkfwegpr").withValue("ptil"),
                            new Attributes().withName("ucb").withValue("qtgdqohmcwsl"),
                            new Attributes().withName("riz").withValue("tpwb")))
                        .withBranchId("lllibph")
                        .withOwnerName("zmizakakan")
                        .withDatabaseName("p"),
                    new NeonDatabaseProperties().withEntityName("cjmeislstvasy")
                        .withAttributes(Arrays.asList(new Attributes().withName("ohguuf").withValue("zboyjathwt"),
                            new Attributes().withName("olbaemwmdx").withValue("ebwjscjpahlxvea")))
                        .withBranchId("qxnmwmqt")
                        .withOwnerName("xyi")
                        .withDatabaseName("dt")))
                .withEndpoints(Arrays.asList(
                    new EndpointProperties().withEntityName("eekpndz")
                        .withAttributes(Arrays.asList(new Attributes().withName("qwyxebeybpm").withValue("znrtffyaqit"),
                            new Attributes().withName("hheioqaqhvseuf").withValue("qyrxp")))
                        .withProjectId("cgq")
                        .withBranchId("ismjqfrddgamqu")
                        .withEndpointType(EndpointType.READ_ONLY)
                        .withEndpointId("rsjuivfcdisyir")
                        .withComputeName("zhczexrxzbujrtrh")
                        .withSize(new AutoscalingSize().withAutoscalingLimitMinCu(86.10195714469955)
                            .withAutoscalingLimitMaxCu(80.48487948093852)),
                    new EndpointProperties().withEntityName("z")
                        .withAttributes(Arrays.asList(new Attributes().withName("eamurvzmlo").withValue("uanashcxlp"),
                            new Attributes().withName("jerbdkelvidizozs").withValue("bccxjmonfdgn")))
                        .withProjectId("cypuuwwlt")
                        .withBranchId("qjctzenkeif")
                        .withEndpointType(EndpointType.READ_WRITE)
                        .withEndpointId("kdasvflyhbxcudch")
                        .withComputeName("srboldforobw")
                        .withSize(new AutoscalingSize().withAutoscalingLimitMinCu(81.43574286236294)
                            .withAutoscalingLimitMaxCu(45.56639901514282))))
                .withBranchId("xesz")
                .withBranch("belawumuaslzkwr"))
            .withRoles(
                Arrays
                    .asList(
                        new NeonRoleProperties().withEntityName("pqtybb")
                            .withAttributes(Arrays
                                .asList(new Attributes().withName("cxkjibnxmysuxswq").withValue("ntvlwijpsttexo")))
                            .withBranchId("pwcyyufmhr")
                            .withPermissions(Arrays.asList("uwm", "spkcdqzh"))
                            .withIsSuperUser(false)
                            .withRoleName("dunqnd"),
                        new NeonRoleProperties().withEntityName("raiouaubrjtl")
                            .withAttributes(Arrays.asList(new Attributes().withName("z").withValue("asccbiui"),
                                new Attributes().withName("zdlyjdfqw").withValue("kyoqufdv"),
                                new Attributes().withName("uzslzojhpctfnmdx").withValue("tngfdgugeyzihgr"),
                                new Attributes().withName("yui").withValue("absnmfpp")))
                            .withBranchId("jee")
                            .withPermissions(Arrays.asList("yhsgz", "czbgomfgbeg", "qgleohibetnluank"))
                            .withIsSuperUser(true)
                            .withRoleName("eeebtijvacv"),
                        new NeonRoleProperties().withEntityName("oqltfae")
                            .withAttributes(
                                Arrays.asList(new Attributes().withName("poqeyhlqh").withValue("kprlpyznuc")))
                            .withBranchId("dsmexiitdfux")
                            .withPermissions(Arrays.asList("siibmiybnnustgn", "jh", "mgixhcmavmqfou", "or"))
                            .withIsSuperUser(true)
                            .withRoleName("yprotwyp"),
                        new NeonRoleProperties().withEntityName("bmftpmdt")
                            .withAttributes(Arrays.asList(new Attributes().withName("dbzqgqqihed").withValue("vqwt")))
                            .withBranchId("ky")
                            .withPermissions(Arrays.asList("ysi", "sgqcwdho"))
                            .withIsSuperUser(false)
                            .withRoleName("mcdzsufcohdxbz")))
            .withDatabases(Arrays.asList(
                new NeonDatabaseProperties().withEntityName("onqzinkfkbgbzbow")
                    .withAttributes(Arrays.asList(new Attributes().withName("kzq").withValue("jjeokbz"),
                        new Attributes().withName("fezrx").withValue("czurtlei")))
                    .withBranchId("xbkwv")
                    .withOwnerName("nzvdfbzdixzmq")
                    .withDatabaseName("odawopqhewjptmcg"),
                new NeonDatabaseProperties().withEntityName("vcwwyyurmochppr")
                    .withAttributes(
                        Arrays.asList(new Attributes().withName("pbzpcpiljhahz").withValue("echndbnwieholew")))
                    .withBranchId("iuubwefqsf")
                    .withOwnerName("aqtferr")
                    .withDatabaseName("ex")))
            .withEndpoints(Arrays.asList(
                new EndpointProperties().withEntityName("zasqbucljgkyexao")
                    .withAttributes(Arrays.asList(new Attributes().withName("jjum").withValue("qwazlnqnmcjngzq"),
                        new Attributes().withName("qxtbjwgnyf").withValue("sf")))
                    .withProjectId("vtuikzhajq")
                    .withBranchId("cfhmlrqryxyn")
                    .withEndpointType(EndpointType.READ_WRITE)
                    .withEndpointId("dpsovwxznptgo")
                    .withComputeName("ybbabpfhvfsl")
                    .withSize(new AutoscalingSize().withAutoscalingLimitMinCu(48.3168005322934)
                        .withAutoscalingLimitMaxCu(80.38196324121523)),
                new EndpointProperties().withEntityName("kzobgopxlhsln")
                    .withAttributes(Arrays.asList(new Attributes().withName("phslhcawjutifdw").withValue("mvi"),
                        new Attributes().withName("orq").withValue("bttzhraglkafhonq"),
                        new Attributes().withName("ujeickp").withValue("vcpopmxe")))
                    .withProjectId("wcltyjede")
                    .withBranchId("mlfmkqs")
                    .withEndpointType(EndpointType.READ_WRITE)
                    .withEndpointId("awx")
                    .withComputeName("x")
                    .withSize(
                        new AutoscalingSize().withAutoscalingLimitMinCu(50.82678500583704)
                            .withAutoscalingLimitMaxCu(75.87568271940933)),
                new EndpointProperties().withEntityName("zwywako")
                    .withAttributes(
                        Arrays.asList(new Attributes().withName("yuzcbmqqvxmvw").withValue("gtayxonsupeujlz"),
                            new Attributes().withName("nh").withValue("vsqltnzoibgsxg"),
                            new Attributes().withName("xfyqonmpqoxwdo").withValue("dbxiqx")))
                    .withProjectId("iqbi")
                    .withBranchId("tmwwi")
                    .withEndpointType(EndpointType.READ_WRITE)
                    .withEndpointId("f")
                    .withComputeName("ofvwbcb")
                    .withSize(new AutoscalingSize().withAutoscalingLimitMinCu(26.549286221967517)
                        .withAutoscalingLimitMaxCu(92.68187778465769)),
                new EndpointProperties().withEntityName("swbzuwfmdurage")
                    .withAttributes(Arrays.asList(new Attributes().withName("kbsazgak").withValue("acy"),
                        new Attributes().withName("cmjdmspof").withValue("pv"),
                        new Attributes().withName("hryl").withValue("iofrzgbzjedmstk")))
                    .withProjectId("l")
                    .withBranchId("bcuiiz")
                    .withEndpointType(EndpointType.READ_ONLY)
                    .withEndpointId("f")
                    .withComputeName("snvpdibmi")
                    .withSize(new AutoscalingSize().withAutoscalingLimitMinCu(65.75814338165185)
                        .withAutoscalingLimitMaxCu(29.71768333841357)))));
        model = BinaryData.fromObject(model).toObject(ProjectInner.class);
        Assertions.assertEquals("ilaxhn", model.properties().entityName());
        Assertions.assertEquals("xoyzunbix", model.properties().attributes().get(0).name());
        Assertions.assertEquals("rtikvcpwpg", model.properties().attributes().get(0).value());
        Assertions.assertEquals("gnitgvkxlzyq", model.properties().regionId());
        Assertions.assertEquals(6287019732891771770L, model.properties().storage());
        Assertions.assertEquals(1936130104, model.properties().pgVersion());
        Assertions.assertEquals(128848080, model.properties().historyRetention());
        Assertions.assertEquals(96.92050835741229,
            model.properties().defaultEndpointSettings().autoscalingLimitMinCu());
        Assertions.assertEquals(37.12808235994729,
            model.properties().defaultEndpointSettings().autoscalingLimitMaxCu());
        Assertions.assertEquals("bkbxgomfa", model.properties().branch().entityName());
        Assertions.assertEquals("sqzhzbezkg", model.properties().branch().attributes().get(0).name());
        Assertions.assertEquals("msidxasicddyvv", model.properties().branch().attributes().get(0).value());
        Assertions.assertEquals("jid", model.properties().branch().projectId());
        Assertions.assertEquals("syxkyxvxevblb", model.properties().branch().parentId());
        Assertions.assertEquals("dnlj", model.properties().branch().roleName());
        Assertions.assertEquals("geuaulx", model.properties().branch().databaseName());
        Assertions.assertEquals("nenlsvxeizzg", model.properties().branch().roles().get(0).entityName());
        Assertions.assertEquals("tpiymerteea", model.properties().branch().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("mx", model.properties().branch().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("ekkkzd", model.properties().branch().roles().get(0).branchId());
        Assertions.assertEquals("kgdoj", model.properties().branch().roles().get(0).permissions().get(0));
        Assertions.assertFalse(model.properties().branch().roles().get(0).isSuperUser());
        Assertions.assertEquals("wprtu", model.properties().branch().roles().get(0).roleName());
        Assertions.assertEquals("heafidlt", model.properties().branch().databases().get(0).entityName());
        Assertions.assertEquals("sjhoiftxfkfwegpr",
            model.properties().branch().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("ptil", model.properties().branch().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("lllibph", model.properties().branch().databases().get(0).branchId());
        Assertions.assertEquals("zmizakakan", model.properties().branch().databases().get(0).ownerName());
        Assertions.assertEquals("p", model.properties().branch().databases().get(0).databaseName());
        Assertions.assertEquals("eekpndz", model.properties().branch().endpoints().get(0).entityName());
        Assertions.assertEquals("qwyxebeybpm",
            model.properties().branch().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("znrtffyaqit",
            model.properties().branch().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("cgq", model.properties().branch().endpoints().get(0).projectId());
        Assertions.assertEquals("ismjqfrddgamqu", model.properties().branch().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_ONLY, model.properties().branch().endpoints().get(0).endpointType());
        Assertions.assertEquals("rsjuivfcdisyir", model.properties().branch().endpoints().get(0).endpointId());
        Assertions.assertEquals("zhczexrxzbujrtrh", model.properties().branch().endpoints().get(0).computeName());
        Assertions.assertEquals(86.10195714469955,
            model.properties().branch().endpoints().get(0).size().autoscalingLimitMinCu());
        Assertions.assertEquals(80.48487948093852,
            model.properties().branch().endpoints().get(0).size().autoscalingLimitMaxCu());
        Assertions.assertEquals("xesz", model.properties().branch().branchId());
        Assertions.assertEquals("belawumuaslzkwr", model.properties().branch().branch());
        Assertions.assertEquals("pqtybb", model.properties().roles().get(0).entityName());
        Assertions.assertEquals("cxkjibnxmysuxswq", model.properties().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("ntvlwijpsttexo", model.properties().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("pwcyyufmhr", model.properties().roles().get(0).branchId());
        Assertions.assertEquals("uwm", model.properties().roles().get(0).permissions().get(0));
        Assertions.assertFalse(model.properties().roles().get(0).isSuperUser());
        Assertions.assertEquals("dunqnd", model.properties().roles().get(0).roleName());
        Assertions.assertEquals("onqzinkfkbgbzbow", model.properties().databases().get(0).entityName());
        Assertions.assertEquals("kzq", model.properties().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("jjeokbz", model.properties().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("xbkwv", model.properties().databases().get(0).branchId());
        Assertions.assertEquals("nzvdfbzdixzmq", model.properties().databases().get(0).ownerName());
        Assertions.assertEquals("odawopqhewjptmcg", model.properties().databases().get(0).databaseName());
        Assertions.assertEquals("zasqbucljgkyexao", model.properties().endpoints().get(0).entityName());
        Assertions.assertEquals("jjum", model.properties().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("qwazlnqnmcjngzq", model.properties().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("vtuikzhajq", model.properties().endpoints().get(0).projectId());
        Assertions.assertEquals("cfhmlrqryxyn", model.properties().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_WRITE, model.properties().endpoints().get(0).endpointType());
        Assertions.assertEquals("dpsovwxznptgo", model.properties().endpoints().get(0).endpointId());
        Assertions.assertEquals("ybbabpfhvfsl", model.properties().endpoints().get(0).computeName());
        Assertions.assertEquals(48.3168005322934, model.properties().endpoints().get(0).size().autoscalingLimitMinCu());
        Assertions.assertEquals(80.38196324121523,
            model.properties().endpoints().get(0).size().autoscalingLimitMaxCu());
    }
}
