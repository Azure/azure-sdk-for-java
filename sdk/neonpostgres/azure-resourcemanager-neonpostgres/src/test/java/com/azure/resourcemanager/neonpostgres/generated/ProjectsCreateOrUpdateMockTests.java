// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.neonpostgres.NeonPostgresManager;
import com.azure.resourcemanager.neonpostgres.models.Attributes;
import com.azure.resourcemanager.neonpostgres.models.AutoscalingSize;
import com.azure.resourcemanager.neonpostgres.models.BranchProperties;
import com.azure.resourcemanager.neonpostgres.models.DefaultEndpointSettings;
import com.azure.resourcemanager.neonpostgres.models.EndpointProperties;
import com.azure.resourcemanager.neonpostgres.models.EndpointType;
import com.azure.resourcemanager.neonpostgres.models.NeonDatabaseProperties;
import com.azure.resourcemanager.neonpostgres.models.NeonRoleProperties;
import com.azure.resourcemanager.neonpostgres.models.Project;
import com.azure.resourcemanager.neonpostgres.models.ProjectProperties;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ProjectsCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"entityId\":\"aqdl\",\"entityName\":\"petlrn\",\"createdAt\":\"etawevx\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"dxljzvdovbrble\",\"value\":\"lprdaqccddcbnygd\"}],\"regionId\":\"cxwbp\",\"storage\":5175172848238278549,\"pgVersion\":213191790,\"historyRetention\":621179456,\"defaultEndpointSettings\":{\"autoscalingLimitMinCu\":43.151268319531155,\"autoscalingLimitMaxCu\":64.79523910251189},\"branch\":{\"entityId\":\"sdnidmjqmvy\",\"entityName\":\"kiqlarhqtwvcaze\",\"createdAt\":\"zdzffzjw\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"chggryelg\",\"value\":\"yatigfgfrrkdk\"},{\"name\":\"czgorywnvo\",\"value\":\"tv\"},{\"name\":\"devdlhqvbkarb\",\"value\":\"yhssrlvkpkpkocm\"}],\"projectId\":\"cebxx\",\"parentId\":\"yicyvspeslhwy\",\"roleName\":\"gvrccpu\",\"databaseName\":\"dhg\",\"roles\":[{\"entityId\":\"dyd\",\"entityName\":\"pfcudvafnbf\",\"createdAt\":\"venqnxhgk\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"ejpec\",\"value\":\"zvcmbpwd\"}],\"branchId\":\"dayprldidwmtffb\",\"permissions\":[\"ldzchubagwn\",\"zuvigvl\",\"hfrbzakpjt\",\"q\"],\"isSuperUser\":true,\"roleName\":\"ojpsucm\",\"lastUpdated\":\"mcwqxynqjgs\",\"owns\":\"kyvscbgngcrus\"}],\"databases\":[{\"entityId\":\"cpgcvsvkkj\",\"entityName\":\"olpyoklkvuz\",\"createdAt\":\"dvhml\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"owxxbh\",\"value\":\"psyioqemqwtqszzg\"},{\"name\":\"ksikawanvmwdv\",\"value\":\"jqcrbk\"},{\"name\":\"mpnbnfgyweoj\",\"value\":\"epgcmahiwf\"}],\"branchId\":\"awk\",\"ownerName\":\"kapitskshfyftt\",\"databaseName\":\"j\",\"lastUpdated\":\"zw\"},{\"entityId\":\"unfdgbggcjx\",\"entityName\":\"blivw\",\"createdAt\":\"sudy\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"dosmbn\",\"value\":\"kqlgxzduv\"},{\"name\":\"dmxexatmdmnrsenx\",\"value\":\"irxyddmiploisj\"},{\"name\":\"zsoxznntwgk\",\"value\":\"yohpsapzupzwwytb\"}],\"branchId\":\"zghximkgfmx\",\"ownerName\":\"kjnpyriwntot\",\"databaseName\":\"mmqmtsjkyj\",\"lastUpdated\":\"xwdonbexftedau\"},{\"entityId\":\"eeggzgrn\",\"entityName\":\"lfozuu\",\"createdAt\":\"tgjqg\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"nsyxzxjmk\",\"value\":\"nb\"},{\"name\":\"lazof\",\"value\":\"exvtemasp\"},{\"name\":\"anydsc\",\"value\":\"k\"}],\"branchId\":\"dpwjcbhaahntof\",\"ownerName\":\"fh\",\"databaseName\":\"ixo\",\"lastUpdated\":\"kzdfiv\"}],\"endpoints\":[{\"entityId\":\"bsrwzzmrg\",\"entityName\":\"dhmfppinm\",\"createdAt\":\"kesmkwtzgfragj\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"lobkdbtqhvmmniiq\",\"value\":\"ho\"},{\"name\":\"hjnskbggicnqw\",\"value\":\"ct\"},{\"name\":\"wp\",\"value\":\"lxkrk\"}],\"projectId\":\"vxrktjcjigcwtsp\",\"branchId\":\"bqxasevchefpgee\",\"endpointType\":\"read_only\",\"endpointId\":\"ruholae\",\"computeName\":\"cgimmrim\",\"status\":\"idle\",\"lastActive\":\"qqlonbzaowcah\",\"size\":{\"autoscalingLimitMinCu\":1.5458428431366467,\"autoscalingLimitMaxCu\":97.04547969825005}},{\"entityId\":\"ihri\",\"entityName\":\"zbfsjwfczglk\",\"createdAt\":\"guk\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"yotygnb\",\"value\":\"nhjgclxaxwcffasp\"}],\"projectId\":\"zkucszghdoaqipmn\",\"branchId\":\"lfrsbzrnmuv\",\"endpointType\":\"read_only\",\"endpointId\":\"ofddtbfmek\",\"computeName\":\"n\",\"status\":\"active\",\"lastActive\":\"dv\",\"size\":{\"autoscalingLimitMinCu\":61.1607691652159,\"autoscalingLimitMaxCu\":42.877090071477475}}],\"branchId\":\"vg\",\"branch\":\"zmxynofxlt\",\"dataSize\":\"oqxt\",\"lastActive\":\"zujsjirkrp\",\"computeHours\":\"cjhmmofbnivdqtk\",\"protected\":true,\"isDefault\":false},\"roles\":[{\"entityId\":\"fgnyscaccpt\",\"entityName\":\"et\",\"createdAt\":\"gxxiceecv\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"eoxmpzzw\",\"value\":\"hd\"},{\"name\":\"dvhaztkxbiv\",\"value\":\"fgxmbr\"},{\"name\":\"gmwibiosiqsykqf\",\"value\":\"qwdr\"}],\"branchId\":\"tfdaglmrcokz\",\"permissions\":[\"tkounzsiyw\",\"uby\"],\"isSuperUser\":false,\"roleName\":\"pikzebq\",\"lastUpdated\":\"fywtkqowsdlk\",\"owns\":\"zygpmgfjcul\"},{\"entityId\":\"hhylx\",\"entityName\":\"vfiyymot\",\"createdAt\":\"bybwjmtftcvelnir\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"stpaqpibjgbvswm\",\"value\":\"hfxrt\"}],\"branchId\":\"bmsennqfabqcama\",\"permissions\":[\"tcxsfmbzdxmsyn\",\"kdnnyufxuzms\"],\"isSuperUser\":false,\"roleName\":\"rbrnxh\",\"lastUpdated\":\"lxfikjkxaravww\",\"owns\":\"snjeglhtrxbozpcj\"}],\"databases\":[{\"entityId\":\"zb\",\"entityName\":\"lxrnwvdsvo\",\"createdAt\":\"zawwsdsorgf\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"wooauffhxfqk\",\"value\":\"wzrdqyoybm\"},{\"name\":\"n\",\"value\":\"to\"}],\"branchId\":\"nzdaiovr\",\"ownerName\":\"rpqphkvyyzad\",\"databaseName\":\"xylaypdtyzvelffo\",\"lastUpdated\":\"riwhjdfrwp\"}],\"endpoints\":[{\"entityId\":\"mnkcclp\",\"entityName\":\"uogkscxjfsgm\",\"createdAt\":\"poebnxsqcow\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"ql\",\"value\":\"m\"},{\"name\":\"bqhsujkafu\",\"value\":\"pn\"},{\"name\":\"qpwnikxkcajgr\",\"value\":\"rct\"}],\"projectId\":\"goocqsazmzlpc\",\"branchId\":\"tm\",\"endpointType\":\"read_only\",\"endpointId\":\"qicfzf\",\"computeName\":\"jd\",\"status\":\"active\",\"lastActive\":\"pyeyoafinmp\",\"size\":{\"autoscalingLimitMinCu\":72.73118344633522,\"autoscalingLimitMaxCu\":88.06413883809692}}]},\"id\":\"rzfwkyluob\",\"name\":\"xwhqdcclc\",\"type\":\"qsrupaylcv\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NeonPostgresManager manager = NeonPostgresManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Project response
            = manager.projects()
                .define("paklw")
                .withExistingOrganization("mtrawrqkza", "bun")
                .withProperties(
                    new ProjectProperties().withEntityName("aszfjs")
                        .withAttributes(Arrays.asList(new Attributes().withName("nwsb").withValue("vdlsflxkqesdfeds"),
                            new Attributes().withName("gzancoinmphy").withValue("cqidkltvdhqnufbx"),
                            new Attributes().withName("e").withValue("i")))
                        .withRegionId("toj")
                        .withStorage(6020746805114185555L)
                        .withPgVersion(1649247701)
                        .withHistoryRetention(1732245917)
                        .withDefaultEndpointSettings(
                            new DefaultEndpointSettings().withAutoscalingLimitMinCu(55.02881061349346)
                                .withAutoscalingLimitMaxCu(89.97055803706436))
                        .withBranch(
                            new BranchProperties().withEntityName("aorhjkehwvumo")
                                .withAttributes(
                                    Arrays
                                        .asList(new Attributes().withName("jcvjkjy").withValue("zcmtagelajdyolj"),
                                            new Attributes().withName("qy").withValue("qfmzsizzhravrc"),
                                            new Attributes().withName("kjymgqbgcxh").withValue("qxgzxler"),
                                            new Attributes().withName("km").withValue("rghskir")))
                                .withProjectId("pupkcbkfukd")
                                .withParentId("qnv")
                                .withRoleName("dydshk")
                                .withDatabaseName("fyaloowwzizzny")
                                .withRoles(
                                    Arrays
                                        .asList(
                                            new NeonRoleProperties().withEntityName("kqiyvnd")
                                                .withAttributes(Arrays.asList(
                                                    new Attributes().withName("qpfzlpejtznxlue")
                                                        .withValue("ujqbbgsimwejl"),
                                                    new Attributes().withName("bkbpjzobd").withValue("bcpr")))
                                                .withBranchId("wkuh")
                                                .withPermissions(
                                                    Arrays.asList("naczkfwfat", "awp", "nskivdwgt", "cumecsaaqg"))
                                                .withIsSuperUser(false)
                                                .withRoleName("iuycsbskowk"),
                                            new NeonRoleProperties().withEntityName("ruozkgyfp")
                                                .withAttributes(Arrays.asList(
                                                    new Attributes().withName("mskkixvlzjxplhpe").withValue("asyntv"),
                                                    new Attributes().withName("jy").withValue("elbqrvvbqvkn")))
                                                .withBranchId("ecqxgiqasifubns")
                                                .withPermissions(
                                                    Arrays.asList("lpwqpjnxjkhtups", "yo", "weuiyx", "wkztsmsfbevyl"))
                                                .withIsSuperUser(true)
                                                .withRoleName("hkqytkzta"),
                                            new NeonRoleProperties().withEntityName("qkzjuqwqaj")
                                                .withAttributes(Arrays.asList(
                                                    new Attributes().withName("bgsosc").withValue("enezfvbennmfkbpj"),
                                                    new Attributes().withName("rtek").withValue("wnthropmduds")))
                                                .withBranchId("urz")
                                                .withPermissions(Arrays.asList("tjhffecqkoqy", "uergaghpuzxkpye"))
                                                .withIsSuperUser(true)
                                                .withRoleName("yldhgyed"),
                                            new NeonRoleProperties().withEntityName("whpjlw")
                                                .withAttributes(Arrays.asList(
                                                    new Attributes().withName("px").withValue("jjtpdyzoutxfptof"),
                                                    new Attributes().withName("gnuywezygva").withValue("gaaqw"),
                                                    new Attributes().withName("kgjpytpmpvdnoge").withValue("lufbortb")))
                                                .withBranchId("kk")
                                                .withPermissions(Arrays.asList("zsvbxxyjisskobq", "clflioe", "yhxess"))
                                                .withIsSuperUser(true)
                                                .withRoleName("dpsqeq")))
                                .withDatabases(Arrays
                                    .asList(
                                        new NeonDatabaseProperties().withEntityName("tnejrnminzqp")
                                            .withAttributes(Arrays.asList(
                                                new Attributes().withName("jilzfbpntogke").withValue("sckhbmc")))
                                            .withBranchId("moyfxx")
                                            .withOwnerName("ykuqdnd")
                                            .withDatabaseName("ykhkg"),
                                        new NeonDatabaseProperties().withEntityName("rcufmbgacnrgfdtn")
                                            .withAttributes(Arrays
                                                .asList(new Attributes().withName("v").withValue("lqcskkqjmxptueip")))
                                            .withBranchId("gkwdr")
                                            .withOwnerName("rpahuuonjkkxuk")
                                            .withDatabaseName("e")))
                                .withEndpoints(
                                    Arrays.asList(
                                        new EndpointProperties().withEntityName("mt")
                                            .withAttributes(Arrays.asList(
                                                new Attributes().withName("hbpjbapmummmkv").withValue("vucgji")))
                                            .withProjectId("iqpmnufz")
                                            .withBranchId("chxwwuzdmh")
                                            .withEndpointType(EndpointType.READ_ONLY)
                                            .withEndpointId("ivjmxmlitqdsjipd")
                                            .withComputeName("scotyx")
                                            .withSize(new AutoscalingSize().withAutoscalingLimitMinCu(62.92084384984019)
                                                .withAutoscalingLimitMaxCu(72.7215548086678)),
                                        new EndpointProperties().withEntityName("lgwgnamku")
                                            .withAttributes(
                                                Arrays.asList(new Attributes().withName("ixlxic").withValue("g")))
                                            .withProjectId("hdcfm")
                                            .withBranchId("cfasfodropal")
                                            .withEndpointType(EndpointType.READ_ONLY)
                                            .withEndpointId("wyuskwgqrnta")
                                            .withComputeName("drcjlvkrkegty")
                                            .withSize(new AutoscalingSize()
                                                .withAutoscalingLimitMinCu(70.54939671456069)
                                                .withAutoscalingLimitMaxCu(87.22934451990672)),
                                        new EndpointProperties().withEntityName("s")
                                            .withAttributes(
                                                Arrays.asList(new Attributes().withName("trlq").withValue("pxyazk"),
                                                    new Attributes().withName("pirgzxvbczwhy").withValue("gbth")))
                                            .withProjectId("ritjbu")
                                            .withBranchId("grunozfvualjthoi")
                                            .withEndpointType(EndpointType.READ_ONLY)
                                            .withEndpointId("sngkrfihscjvak")
                                            .withComputeName("zbhwahfb")
                                            .withSize(new AutoscalingSize()
                                                .withAutoscalingLimitMinCu(88.25528316942058)
                                                .withAutoscalingLimitMaxCu(94.52650406183467)),
                                        new EndpointProperties().withEntityName("ppfzsclef")
                                            .withAttributes(Arrays.asList(
                                                new Attributes().withName("ggnbbuypwovvvsfl")
                                                    .withValue("evnoqayrehjuqwva"),
                                                new Attributes().withName("xrlzhpziha").withValue("enqqzlxnqzu"),
                                                new Attributes().withName("fonfdbgm").withValue("fwmjcwtewfhxwy"),
                                                new Attributes().withName("kbrehzlrynjp").withValue("ha")))
                                            .withProjectId("aep")
                                            .withBranchId("ajubo")
                                            .withEndpointType(EndpointType.READ_WRITE)
                                            .withEndpointId("e")
                                            .withComputeName("jrieikm")
                                            .withSize(new AutoscalingSize().withAutoscalingLimitMinCu(33.90284832515604)
                                                .withAutoscalingLimitMaxCu(52.76930043522272))))
                                .withBranchId("stjcyyuvtzr")
                                .withBranch("hcle"))
                        .withRoles(Arrays.asList(new NeonRoleProperties().withEntityName("ychakvy")
                            .withAttributes(Arrays.asList(new Attributes().withName("iuepmaxfnzlpqmp").withValue("t"),
                                new Attributes().withName("efvulblmr").withValue("uxyprhfcaeooifqd")))
                            .withBranchId("jflobhahqmomf")
                            .withPermissions(Arrays.asList("rkfrocgbmxldj"))
                            .withIsSuperUser(false)
                            .withRoleName("bjesylslur"),
                            new NeonRoleProperties().withEntityName("tqzsslhmgwfnivr")
                                .withAttributes(Arrays.asList(new Attributes().withName("z").withValue("cfzlu"),
                                    new Attributes().withName("zdquurbo").withValue("mvhvz"),
                                    new Attributes().withName("elbprn").withValue("ujywzcqyggmn"),
                                    new Attributes().withName("svhbngqiwyejto").withValue("drrp")))
                                .withBranchId("ehkuns")
                                .withPermissions(Arrays.asList("hhlwtpk", "egea", "tbzkgtzqn", "qsttewuvcysjeuf"))
                                .withIsSuperUser(false)
                                .withRoleName("pditfnonpi"),
                            new NeonRoleProperties().withEntityName("buziciqppoqvgp")
                                .withAttributes(
                                    Arrays.asList(new Attributes().withName("xuoxtfnres").withValue("fepgcknc")))
                                .withBranchId("gvsnv")
                                .withPermissions(Arrays.asList("dxfmjymjn", "jluqllbsupu", "dxckdl", "zwhcukvb"))
                                .withIsSuperUser(true)
                                .withRoleName("fdizhrjq")))
                        .withDatabases(Arrays.asList(
                            new NeonDatabaseProperties().withEntityName("dgujjgnfgrzxbarc")
                                .withAttributes(Arrays.asList(new Attributes().withName("jcytesmfucrtfo")
                                    .withValue("q"), new Attributes().withName("uauzmz").withValue("vrtrfz"),
                                    new Attributes().withName("hezvhjudxdyy").withValue("udma"),
                                    new Attributes().withName("swtvd").withValue("xbqssgfenffdxbvw")))
                                .withBranchId("jchivdrijanx")
                                .withOwnerName("muvardlmzjot")
                                .withDatabaseName("rmuhcuhtuzlx"),
                            new NeonDatabaseProperties().withEntityName("dojq")
                                .withAttributes(Arrays
                                    .asList(new Attributes().withName("jqyowaadc").withValue("dazabundtse"),
                                        new Attributes().withName("kaupwhlz").withValue("ckremgjlmsvdorsi")))
                                .withBranchId("x")
                                .withOwnerName("rkqakofajf")
                                .withDatabaseName("prfvmkinwteyrqsh"),
                            new NeonDatabaseProperties().withEntityName("pimtc")
                                .withAttributes(Arrays
                                    .asList(new Attributes().withName("fs").withValue("xizhqikmgo"),
                                        new Attributes().withName("liqemcdiiisklbo").withValue("xxupjxv"),
                                        new Attributes().withName("rk").withValue("kgenjqnnpjwkosn"),
                                        new Attributes().withName("xigfoujjc").withValue("gdqmrlhnzkwop")))
                                .withBranchId("nyinxuprrxyxw")
                                .withOwnerName("zbfqpl")
                                .withDatabaseName("uekdcpvu"),
                            new NeonDatabaseProperties().withEntityName("jampqoclannm")
                                .withAttributes(Arrays.asList(new Attributes().withName("atr").withValue("jjktfin")))
                                .withBranchId("oksmmculwk")
                                .withOwnerName("cru")
                                .withDatabaseName("krjflsgaojb")))
                        .withEndpoints(
                            Arrays.asList(
                                new EndpointProperties().withEntityName("xcelujiswlluunx")
                                    .withAttributes(Arrays
                                        .asList(new Attributes().withName("cknecexkgr").withValue("fpsjdmngsytq")))
                                    .withProjectId("zfyxcnwawoxcg")
                                    .withBranchId("ejqfbi")
                                    .withEndpointType(EndpointType.READ_WRITE)
                                    .withEndpointId("jxdwdrpazqjkr")
                                    .withComputeName("bwotfcuuugtji")
                                    .withSize(new AutoscalingSize().withAutoscalingLimitMinCu(50.72629679585169)
                                        .withAutoscalingLimitMaxCu(86.53567186769932)),
                                new EndpointProperties().withEntityName("oiovslvivq")
                                    .withAttributes(Arrays.asList(new Attributes().withName("pkhc").withValue("oa")))
                                    .withProjectId("ukuicjuftekioo")
                                    .withBranchId("duewfhvpxjhxzu")
                                    .withEndpointType(EndpointType.READ_ONLY)
                                    .withEndpointId("abbwzgvzu")
                                    .withComputeName("xcdckixspsa")
                                    .withSize(new AutoscalingSize().withAutoscalingLimitMinCu(87.696685503617)
                                        .withAutoscalingLimitMaxCu(45.06089122725325)),
                                new EndpointProperties().withEntityName("whlbecgihzbpem")
                                    .withAttributes(Arrays.asList(
                                        new Attributes().withName("xywpjhspboxhif").withValue("pskpeswyhhmif"),
                                        new Attributes().withName("uajxwwvcmmpeg").withValue("y"),
                                        new Attributes().withName("qvcml").withValue("exbzbqufpnezsjza"),
                                        new Attributes().withName("m").withValue("dror")))
                                    .withProjectId("ogzmsimehtcuuwdh")
                                    .withBranchId("qhyhni")
                                    .withEndpointType(EndpointType.READ_WRITE)
                                    .withEndpointId("sugisn")
                                    .withComputeName("wnwngh")
                                    .withSize(new AutoscalingSize().withAutoscalingLimitMinCu(70.48541142259627)
                                        .withAutoscalingLimitMaxCu(65.94241030559255)))))
                .create();

        Assertions.assertEquals("petlrn", response.properties().entityName());
        Assertions.assertEquals("dxljzvdovbrble", response.properties().attributes().get(0).name());
        Assertions.assertEquals("lprdaqccddcbnygd", response.properties().attributes().get(0).value());
        Assertions.assertEquals("cxwbp", response.properties().regionId());
        Assertions.assertEquals(5175172848238278549L, response.properties().storage());
        Assertions.assertEquals(213191790, response.properties().pgVersion());
        Assertions.assertEquals(621179456, response.properties().historyRetention());
        Assertions.assertEquals(43.151268319531155,
            response.properties().defaultEndpointSettings().autoscalingLimitMinCu());
        Assertions.assertEquals(64.79523910251189,
            response.properties().defaultEndpointSettings().autoscalingLimitMaxCu());
        Assertions.assertEquals("kiqlarhqtwvcaze", response.properties().branch().entityName());
        Assertions.assertEquals("chggryelg", response.properties().branch().attributes().get(0).name());
        Assertions.assertEquals("yatigfgfrrkdk", response.properties().branch().attributes().get(0).value());
        Assertions.assertEquals("cebxx", response.properties().branch().projectId());
        Assertions.assertEquals("yicyvspeslhwy", response.properties().branch().parentId());
        Assertions.assertEquals("gvrccpu", response.properties().branch().roleName());
        Assertions.assertEquals("dhg", response.properties().branch().databaseName());
        Assertions.assertEquals("pfcudvafnbf", response.properties().branch().roles().get(0).entityName());
        Assertions.assertEquals("ejpec", response.properties().branch().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("zvcmbpwd", response.properties().branch().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("dayprldidwmtffb", response.properties().branch().roles().get(0).branchId());
        Assertions.assertEquals("ldzchubagwn", response.properties().branch().roles().get(0).permissions().get(0));
        Assertions.assertTrue(response.properties().branch().roles().get(0).isSuperUser());
        Assertions.assertEquals("ojpsucm", response.properties().branch().roles().get(0).roleName());
        Assertions.assertEquals("olpyoklkvuz", response.properties().branch().databases().get(0).entityName());
        Assertions.assertEquals("owxxbh", response.properties().branch().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("psyioqemqwtqszzg",
            response.properties().branch().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("awk", response.properties().branch().databases().get(0).branchId());
        Assertions.assertEquals("kapitskshfyftt", response.properties().branch().databases().get(0).ownerName());
        Assertions.assertEquals("j", response.properties().branch().databases().get(0).databaseName());
        Assertions.assertEquals("dhmfppinm", response.properties().branch().endpoints().get(0).entityName());
        Assertions.assertEquals("lobkdbtqhvmmniiq",
            response.properties().branch().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("ho", response.properties().branch().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("vxrktjcjigcwtsp", response.properties().branch().endpoints().get(0).projectId());
        Assertions.assertEquals("bqxasevchefpgee", response.properties().branch().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_ONLY,
            response.properties().branch().endpoints().get(0).endpointType());
        Assertions.assertEquals("ruholae", response.properties().branch().endpoints().get(0).endpointId());
        Assertions.assertEquals("cgimmrim", response.properties().branch().endpoints().get(0).computeName());
        Assertions.assertEquals(1.5458428431366467,
            response.properties().branch().endpoints().get(0).size().autoscalingLimitMinCu());
        Assertions.assertEquals(97.04547969825005,
            response.properties().branch().endpoints().get(0).size().autoscalingLimitMaxCu());
        Assertions.assertEquals("vg", response.properties().branch().branchId());
        Assertions.assertEquals("zmxynofxlt", response.properties().branch().branch());
        Assertions.assertEquals("et", response.properties().roles().get(0).entityName());
        Assertions.assertEquals("eoxmpzzw", response.properties().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("hd", response.properties().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("tfdaglmrcokz", response.properties().roles().get(0).branchId());
        Assertions.assertEquals("tkounzsiyw", response.properties().roles().get(0).permissions().get(0));
        Assertions.assertFalse(response.properties().roles().get(0).isSuperUser());
        Assertions.assertEquals("pikzebq", response.properties().roles().get(0).roleName());
        Assertions.assertEquals("lxrnwvdsvo", response.properties().databases().get(0).entityName());
        Assertions.assertEquals("wooauffhxfqk", response.properties().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("wzrdqyoybm", response.properties().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("nzdaiovr", response.properties().databases().get(0).branchId());
        Assertions.assertEquals("rpqphkvyyzad", response.properties().databases().get(0).ownerName());
        Assertions.assertEquals("xylaypdtyzvelffo", response.properties().databases().get(0).databaseName());
        Assertions.assertEquals("uogkscxjfsgm", response.properties().endpoints().get(0).entityName());
        Assertions.assertEquals("ql", response.properties().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("m", response.properties().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("goocqsazmzlpc", response.properties().endpoints().get(0).projectId());
        Assertions.assertEquals("tm", response.properties().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_ONLY, response.properties().endpoints().get(0).endpointType());
        Assertions.assertEquals("qicfzf", response.properties().endpoints().get(0).endpointId());
        Assertions.assertEquals("jd", response.properties().endpoints().get(0).computeName());
        Assertions.assertEquals(72.73118344633522,
            response.properties().endpoints().get(0).size().autoscalingLimitMinCu());
        Assertions.assertEquals(88.06413883809692,
            response.properties().endpoints().get(0).size().autoscalingLimitMaxCu());
    }
}
