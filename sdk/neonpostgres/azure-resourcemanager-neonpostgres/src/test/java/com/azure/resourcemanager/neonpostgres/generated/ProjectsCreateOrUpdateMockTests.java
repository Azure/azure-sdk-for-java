// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.neonpostgres.NeonPostgresManager;
import com.azure.resourcemanager.neonpostgres.models.Attributes;
import com.azure.resourcemanager.neonpostgres.models.AutoscalingSize;
import com.azure.resourcemanager.neonpostgres.models.BranchProperties;
import com.azure.resourcemanager.neonpostgres.models.DefaultEndpointSettings;
import com.azure.resourcemanager.neonpostgres.models.EndpointProperties;
import com.azure.resourcemanager.neonpostgres.models.EndpointType;
import com.azure.resourcemanager.neonpostgres.models.NeonDatabaseProperties;
import com.azure.resourcemanager.neonpostgres.models.NeonRoleProperties;
import com.azure.resourcemanager.neonpostgres.models.Project;
import com.azure.resourcemanager.neonpostgres.models.ProjectProperties;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ProjectsCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"entityId\":\"zxsyaks\",\"entityName\":\"paamihwb\",\"createdAt\":\"vwtg\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"cgsfzhbjkiysqbj\",\"value\":\"djpgxeysgwkcffe\"},{\"name\":\"znzcbivoveomkhfe\",\"value\":\"cooplf\"},{\"name\":\"ohimgckyc\",\"value\":\"p\"},{\"name\":\"ebznbznxsulout\",\"value\":\"pbmxooqoh\"}],\"regionId\":\"ncdmwkh\",\"storage\":3997069594118075795,\"pgVersion\":1894774504,\"historyRetention\":402419375,\"defaultEndpointSettings\":{\"autoscalingLimitMinCu\":24.839659125422152,\"autoscalingLimitMaxCu\":83.50512957332256},\"branch\":{\"entityId\":\"yevdy\",\"entityName\":\"sytciksw\",\"createdAt\":\"amwuynfxkcgsf\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"drp\",\"value\":\"atvyrkljqkqws\"},{\"name\":\"jtvjkowggxawwd\",\"value\":\"bypnkteiidlbov\"}],\"projectId\":\"cl\",\"parentId\":\"g\",\"roleName\":\"an\",\"databaseName\":\"kjcnerek\",\"roles\":[{\"entityId\":\"skwwnqhqlqgpwxtv\",\"entityName\":\"bav\",\"createdAt\":\"vxwve\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"jc\",\"value\":\"mwevguyflnxel\"}],\"branchId\":\"kfzcdetowwezhy\",\"permissions\":[\"ilbwqlq\"],\"isSuperUser\":true,\"roleName\":\"qb\",\"lastUpdated\":\"tyb\",\"owns\":\"lfjn\"}],\"databases\":[{\"entityId\":\"jyhzfaxskdvu\",\"entityName\":\"umo\",\"createdAt\":\"egqxsorchazrq\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"lbeqvh\",\"value\":\"kbmpw\"},{\"name\":\"slajgg\",\"value\":\"zgaefhawkmib\"}],\"branchId\":\"dwiu\",\"ownerName\":\"icupdyt\",\"databaseName\":\"miuvjplosebmhhtu\",\"lastUpdated\":\"txynoflqobfixngx\"},{\"entityId\":\"i\",\"entityName\":\"xhnkingiqcd\",\"createdAt\":\"rpgupsjlbsmnda\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"yjeykcnhpplzhc\",\"value\":\"zxjziuu\"}],\"branchId\":\"lnewnuwkkfz\",\"ownerName\":\"tlvhdyxzl\",\"databaseName\":\"ywj\",\"lastUpdated\":\"lgqpwwlzpd\"},{\"entityId\":\"rcbcdwhslxe\",\"entityName\":\"j\",\"createdAt\":\"knmstbdoprwkamp\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"ldzniudrcycm\",\"value\":\"huzymhlhihqk\"}],\"branchId\":\"vkmnbzkopaiil\",\"ownerName\":\"pudkhqux\",\"databaseName\":\"jofpg\",\"lastUpdated\":\"drobujnjgy\"}],\"endpoints\":[{\"entityId\":\"qx\",\"entityName\":\"idullnjgcpskg\",\"createdAt\":\"nytslgsazuqznghx\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"jsdkpvnrvzwpffxs\",\"value\":\"ybn\"}],\"projectId\":\"vehoh\",\"branchId\":\"yuvbgtzqzqweu\",\"endpointType\":\"read_only\",\"endpointId\":\"nairvhpqsv\",\"computeName\":\"eoge\",\"status\":\"init\",\"lastActive\":\"nqnvnc\",\"size\":{\"autoscalingLimitMinCu\":49.92526464788085,\"autoscalingLimitMaxCu\":68.55280848537132}},{\"entityId\":\"jnkoiz\",\"entityName\":\"sqbibaa\",\"createdAt\":\"icovj\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"mjxyvu\",\"value\":\"dnxczbass\"},{\"name\":\"fyyl\",\"value\":\"ppeygkbzbloasy\"},{\"name\":\"xhqvovdpmht\",\"value\":\"uvsqj\"}],\"projectId\":\"vjnq\",\"branchId\":\"qgxqbfkc\",\"endpointType\":\"read_only\",\"endpointId\":\"nrecjbiywevsf\",\"computeName\":\"rmnszdosmjsqsvz\",\"status\":\"idle\",\"lastActive\":\"cwghndaevhgsulw\",\"size\":{\"autoscalingLimitMinCu\":33.988145190046104,\"autoscalingLimitMaxCu\":74.6477003559246}},{\"entityId\":\"gvf\",\"entityName\":\"uz\",\"createdAt\":\"lmciwuhyzeky\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"jlbzdlb\",\"value\":\"bp\"},{\"name\":\"xhpzy\",\"value\":\"ov\"},{\"name\":\"nwbhanzgesfhshag\",\"value\":\"ahn\"}],\"projectId\":\"pbyfyvynpmggq\",\"branchId\":\"g\",\"endpointType\":\"read_write\",\"endpointId\":\"bugihcdvfo\",\"computeName\":\"orbloejzsaxzg\",\"status\":\"init\",\"lastActive\":\"deppjnaphi\",\"size\":{\"autoscalingLimitMinCu\":7.499849857518093,\"autoscalingLimitMaxCu\":63.153940777850536}},{\"entityId\":\"lubpebrmjjnfpght\",\"entityName\":\"tpkimskhnkkhbykr\",\"createdAt\":\"hrcmelycpgokuth\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"zbnv\",\"value\":\"sh\"},{\"name\":\"uzzlapyixlvzcgul\",\"value\":\"ebxiauqsuptessj\"}],\"projectId\":\"jtatpvblskxgxqay\",\"branchId\":\"slkvcvwp\",\"endpointType\":\"read_only\",\"endpointId\":\"bvyezj\",\"computeName\":\"kqo\",\"status\":\"active\",\"lastActive\":\"iieyozvrc\",\"size\":{\"autoscalingLimitMinCu\":17.53628975610473,\"autoscalingLimitMaxCu\":93.09159043872954}}],\"branchId\":\"bcgqef\",\"branch\":\"jvbxqcbgo\",\"dataSize\":\"xtuuci\",\"lastActive\":\"vkdlhuduklbjoafm\",\"computeHours\":\"exulvoepknarseia\",\"protected\":false,\"isDefault\":true},\"roles\":[{\"entityId\":\"uq\",\"entityName\":\"sapleqfg\",\"createdAt\":\"env\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"yakeszsu\",\"value\":\"vulaqcwggc\"}],\"branchId\":\"vlqgfbrvecicao\",\"permissions\":[\"irlzbipiunn\"],\"isSuperUser\":true,\"roleName\":\"zzzkuer\",\"lastUpdated\":\"cjomipvwkaujtt\",\"owns\":\"k\"},{\"entityId\":\"vbwofxxdplre\",\"entityName\":\"kvgahcbtu\",\"createdAt\":\"bpxrhrfjenrazwe\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"hqashtos\",\"value\":\"jixy\"},{\"name\":\"secigzzdwj\",\"value\":\"acfvvtdpcbpzf\"},{\"name\":\"mcsaugbr\",\"value\":\"fiwltkfysu\"},{\"name\":\"te\",\"value\":\"hkl\"}],\"branchId\":\"hcvasyy\",\"permissions\":[\"okjbmsr\",\"ixyxxhwrlqomaqs\",\"ilp\"],\"isSuperUser\":true,\"roleName\":\"wnrzozsxa\",\"lastUpdated\":\"sokliik\",\"owns\":\"bvrrbnh\"},{\"entityId\":\"sbhuj\",\"entityName\":\"dyllm\",\"createdAt\":\"pstizsyqagqllcb\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"ylkyhtrrqwfyy\",\"value\":\"ptmjjr\"},{\"name\":\"ogykugdlavsav\",\"value\":\"thkslgeuufkb\"}],\"branchId\":\"fbxjblajybdnb\",\"permissions\":[\"btois\",\"zdjmofsvpzxgny\",\"xuym\"],\"isSuperUser\":true,\"roleName\":\"mgwtmszcfyzqp\",\"lastUpdated\":\"re\",\"owns\":\"urd\"},{\"entityId\":\"gknxmaovrg\",\"entityName\":\"lnzffewvqky\",\"createdAt\":\"cgeipqxxsdyaf\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"mma\",\"value\":\"hg\"},{\"name\":\"lejqzhpvhxp\",\"value\":\"adj\"}],\"branchId\":\"ullgfyogtqsc\",\"permissions\":[\"qe\",\"qxkomwdzpzlhcuex\",\"qpwwvmbjecfwlbgh\",\"kfrwxohlydsnjz\"],\"isSuperUser\":true,\"roleName\":\"ypbfhmihik\",\"lastUpdated\":\"ozewbr\",\"owns\":\"jzgkbrauxbo\"}],\"databases\":[{\"entityId\":\"nqbjxgjwsrer\",\"entityName\":\"buudrizwkwkjxla\",\"createdAt\":\"edikqelssybz\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"nrommki\",\"value\":\"hypw\"},{\"name\":\"mzyjjyut\",\"value\":\"mzqlnaag\"},{\"name\":\"i\",\"value\":\"j\"},{\"name\":\"fqiywhxpsb\",\"value\":\"pialezay\"}],\"branchId\":\"uzudegefxl\",\"ownerName\":\"ggo\",\"databaseName\":\"smhssfnwh\",\"lastUpdated\":\"ah\"},{\"entityId\":\"ckn\",\"entityName\":\"kcu\",\"createdAt\":\"hdgwuzrono\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"kdnwy\",\"value\":\"odcikgxk\"}],\"branchId\":\"zfzdjekeb\",\"ownerName\":\"nxzsjwy\",\"databaseName\":\"xirgcjfaiwulpj\",\"lastUpdated\":\"krxifqn\"},{\"entityId\":\"orxsqtzngxbsale\",\"entityName\":\"uxcmmhipbvskc\",\"createdAt\":\"ly\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"aangf\",\"value\":\"bm\"},{\"name\":\"vm\",\"value\":\"idyli\"},{\"name\":\"ajklnac\",\"value\":\"dnxqeonm\"},{\"name\":\"rjjaojpz\",\"value\":\"gdrzige\"}],\"branchId\":\"sadsqyuddkhwqdm\",\"ownerName\":\"heuyuunxmyevyi\",\"databaseName\":\"eip\",\"lastUpdated\":\"izej\"},{\"entityId\":\"iiacndjzwhaj\",\"entityName\":\"apqokhdyn\",\"createdAt\":\"adxsewbempfa\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"elyksygihiclm\",\"value\":\"lnu\"},{\"name\":\"kqvzlbbbajdexq\",\"value\":\"awexizb\"},{\"name\":\"zetjizwh\",\"value\":\"nbmajvvyxtvvx\"}],\"branchId\":\"kzixbk\",\"ownerName\":\"bfmlngfwhrmvlakn\",\"databaseName\":\"mwxnrzblxna\",\"lastUpdated\":\"smfndcbsyhludzjk\"}],\"endpoints\":[{\"entityId\":\"hwvprj\",\"entityName\":\"vtdu\",\"createdAt\":\"dtacntjnaffhv\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"btws\",\"value\":\"kfkuy\"},{\"name\":\"kmxhhqsx\",\"value\":\"b\"},{\"name\":\"kewrig\",\"value\":\"bqtrefeclflxc\"},{\"name\":\"ffzw\",\"value\":\"cvdefxonztpcjpt\"}],\"projectId\":\"tqrcjqp\",\"branchId\":\"vn\",\"endpointType\":\"read_write\",\"endpointId\":\"h\",\"computeName\":\"sjbi\",\"status\":\"idle\",\"lastActive\":\"viqehmdqvaol\",\"size\":{\"autoscalingLimitMinCu\":53.59749067891417,\"autoscalingLimitMaxCu\":81.20350390573854}},{\"entityId\":\"vkjcim\",\"entityName\":\"svxphtjnhptjlrkd\",\"createdAt\":\"z\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"dtdtft\",\"value\":\"izuzjd\"},{\"name\":\"rgyzcslazp\",\"value\":\"kqoyimxpggk\"},{\"name\":\"teagbgac\",\"value\":\"qpjuytvude\"},{\"name\":\"lpbybkisb\",\"value\":\"ifm\"}],\"projectId\":\"lpwdjraurf\",\"branchId\":\"znurttu\",\"endpointType\":\"read_write\",\"endpointId\":\"xxdcdj\",\"computeName\":\"kqtxfrm\",\"status\":\"init\",\"lastActive\":\"stow\",\"size\":{\"autoscalingLimitMinCu\":51.630896694637094,\"autoscalingLimitMaxCu\":47.4882704513083}},{\"entityId\":\"hwesrtja\",\"entityName\":\"blkkncypmtevs\",\"createdAt\":\"aneyvae\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"nhrfbrj\",\"value\":\"kjwqdmraqnilp\"},{\"name\":\"qcaig\",\"value\":\"zwfwlrfdjwlzseod\"},{\"name\":\"qfdrs\",\"value\":\"zy\"},{\"name\":\"qxse\",\"value\":\"wycuhyt\"}],\"projectId\":\"getfigwneqjxzi\",\"branchId\":\"bjrahgdstubw\",\"endpointType\":\"read_write\",\"endpointId\":\"sshxliqm\",\"computeName\":\"kwhfmdoiiyobqzwj\",\"status\":\"init\",\"lastActive\":\"sofxc\",\"size\":{\"autoscalingLimitMinCu\":65.58215197121935,\"autoscalingLimitMaxCu\":18.37391571612296}}]},\"id\":\"mrs\",\"name\":\"ydl\",\"type\":\"prel\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NeonPostgresManager manager = NeonPostgresManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Project response
            = manager.projects()
                .define("pm")
                .withExistingOrganization("chdwyqqidqi", "lgbbfjmdgjvxlh")
                .withProperties(new ProjectProperties().withEntityName("phqeofy")
                    .withAttributes(Arrays.asList(
                        new Attributes().withName("ixuanccqvjfdgfq").withValue("mquxpjhcfaaradci"),
                        new Attributes().withName("vmufzgug").withValue("blwal")))
                    .withRegionId("ssnqe")
                    .withStorage(5966617785837338272L)
                    .withPgVersion(1271881654)
                    .withHistoryRetention(13119250)
                    .withDefaultEndpointSettings(
                        new DefaultEndpointSettings()
                            .withAutoscalingLimitMinCu(24.322964665045387)
                            .withAutoscalingLimitMaxCu(95.26699260364474))
                    .withBranch(
                        new BranchProperties().withEntityName("mdqecv")
                            .withAttributes(
                                Arrays.asList(new Attributes().withName("sibxovuqo").withValue("jrkblndyclwgycv"),
                                    new Attributes().withName("qnzjcyqqz").withValue("embtbwnalb"),
                                    new Attributes().withName("dpisjdl").withValue("ajvmvvlooubsfxip")))
                            .withProjectId("opskgocjomlupfa")
                            .withParentId("sj")
                            .withRoleName("huslgdw")
                            .withDatabaseName("gdqyxajc")
                            .withRoles(Arrays.asList(
                                new NeonRoleProperties().withEntityName("qzkmqc")
                                    .withAttributes(
                                        Arrays.asList(new Attributes().withName("gfgsq").withValue("ilefej")))
                                    .withBranchId("wrznequ")
                                    .withPermissions(Arrays.asList("ttwknhajksbsyo", "j"))
                                    .withIsSuperUser(true)
                                    .withRoleName("gcydijnmcv"),
                                new NeonRoleProperties().withEntityName("rspnrsjsem")
                                    .withAttributes(
                                        Arrays.asList(new Attributes().withName("tex").withValue("tikelpmwgr")))
                                    .withBranchId("bwudhvosgjzs")
                                    .withPermissions(Arrays.asList("zalivdfwgq", "hewcffrx", "gezkhzpriqisse"))
                                    .withIsSuperUser(true)
                                    .withRoleName("usyzaivnpsjnpckp"),
                                new NeonRoleProperties().withEntityName("xjarsbb")
                                    .withAttributes(
                                        Arrays.asList(new Attributes().withName("kdyqjvz").withValue("cgrd")))
                                    .withBranchId("zesfkqqx")
                                    .withPermissions(Arrays.asList("zflb", "ousz", "acd"))
                                    .withIsSuperUser(false)
                                    .withRoleName("kgoojjf"),
                                new NeonRoleProperties().withEntityName("swxmfurqm")
                                    .withAttributes(Arrays.asList(
                                        new Attributes().withName("tahbqsvnkxmytzua").withValue("drlhxgc"),
                                        new Attributes().withName("myrhkvx").withValue("zmiemqyftgp"),
                                        new Attributes().withName("oswgfqvj").withValue("ghpakbqyhlsorn"),
                                        new Attributes().withName("b").withValue("eq")))
                                    .withBranchId("kncjmybn")
                                    .withPermissions(Arrays.asList("ztnjaw", "hul", "mmqmbwppx", "rxbkitzmnhitax"))
                                    .withIsSuperUser(false)
                                    .withRoleName("tjlxsgcemegdzdvy")))
                            .withDatabases(Arrays.asList(
                                new NeonDatabaseProperties().withEntityName("ifnivlut")
                                    .withAttributes(Arrays.asList(new Attributes().withName("cgz").withValue("hklsqx"),
                                        new Attributes().withName("oiyygkts").withValue("j"),
                                        new Attributes().withName("xxoxwfzbkv").withValue("cnxfxphs"),
                                        new Attributes().withName("wbebsnbwutlv").withValue("wm")))
                                    .withBranchId("mustih")
                                    .withOwnerName("rafjajvkyxmm")
                                    .withDatabaseName("zvogtde"),
                                new NeonDatabaseProperties().withEntityName("hfxnrpdhewokyqs")
                                    .withAttributes(Arrays.asList(
                                        new Attributes().withName("todjf").withValue("xbvkvwzdmvdd"),
                                        new Attributes().withName("wcrugyozzz").withValue("wnjdvvlrh"),
                                        new Attributes().withName("c").withValue("kkvxu")))
                                    .withBranchId("qzbvbpsuvqhxt")
                                    .withOwnerName("fgdkwbk")
                                    .withDatabaseName("klpiigfuzke"),
                                new NeonDatabaseProperties().withEntityName("zevtzqwczoc")
                                    .withAttributes(
                                        Arrays.asList(new Attributes().withName("pkyvnhiysdho").withValue("kslhr")))
                                    .withBranchId("kiwlwkfflaqwmwq")
                                    .withOwnerName("uf")
                                    .withDatabaseName("eatne"),
                                new NeonDatabaseProperties().withEntityName("qtcbjd")
                                    .withAttributes(
                                        Arrays.asList(new Attributes().withName("ns").withValue("ujqgbbjvo"),
                                            new Attributes().withName("oawh").withValue("js"),
                                            new Attributes().withName("bc").withValue("loygsabdgdheron"),
                                            new Attributes().withName("dun").withValue("kzvzuatqhgzuyxtr")))
                                    .withBranchId("dbqskgqjbvitptp")
                                    .withOwnerName("ffavdhpiwr")
                                    .withDatabaseName("wkgjwb")))
                            .withEndpoints(
                                Arrays.asList(new EndpointProperties().withEntityName("wymzskwqk")
                                    .withAttributes(Arrays.asList(
                                        new Attributes().withName("pqscoobkjlcax").withValue("qcomjiqiince"),
                                        new Attributes().withName("xxkdevpxim").withValue("iizm"),
                                        new Attributes().withName("qmduvtvodqx").withValue("p"),
                                        new Attributes().withName("hm").withValue("qibtblmc")))
                                    .withProjectId("j")
                                    .withBranchId("notdofqvpbqsdqk")
                                    .withEndpointType(EndpointType.READ_WRITE)
                                    .withEndpointId("sbbmitaftazgcx")
                                    .withComputeName("qlc")
                                    .withSize(new AutoscalingSize().withAutoscalingLimitMinCu(94.93640420633629)
                                        .withAutoscalingLimitMaxCu(0.7406749508623078))))
                            .withBranchId("lkarvtipquksxikn")
                            .withBranch("ofunswhpcekggv"))
                    .withRoles(
                        Arrays
                            .asList(
                                new NeonRoleProperties().withEntityName("zyviiwsu")
                                    .withAttributes(Arrays.asList(
                                        new Attributes().withName("kzqqhbtfloilmkf").withValue("eoiipjpngvyvu")))
                                    .withBranchId("kdlpsxntugfwim")
                                    .withPermissions(Arrays.asList("yclocfmvswxvjel", "ifqhdx"))
                                    .withIsSuperUser(false)
                                    .withRoleName("lkrybpaevykby"),
                                new NeonRoleProperties().withEntityName("hbjq")
                                    .withAttributes(Arrays
                                        .asList(new Attributes().withName("ucihbymjjvt").withValue("nerxvjeazrahelh")))
                                    .withBranchId("myi")
                                    .withPermissions(Arrays.asList("a", "cthtpq", "fzdos"))
                                    .withIsSuperUser(false)
                                    .withRoleName("iuvflgzhcwjgwahc")))
                    .withDatabases(Arrays.asList(
                        new NeonDatabaseProperties().withEntityName("vnnjd")
                            .withAttributes(Arrays.asList(new Attributes().withName("vp").withValue("xn"),
                                new Attributes().withName("tmzstql").withValue("xolrwvtlg")))
                            .withBranchId("fjswequflzyyopoa")
                            .withOwnerName("wwgw")
                            .withDatabaseName("b"),
                        new NeonDatabaseProperties().withEntityName("kreeeddd")
                            .withAttributes(Arrays.asList(new Attributes().withName("sii").withValue("eeu"),
                                new Attributes().withName("b").withValue("nqyxfedq")))
                            .withBranchId("tdqwynxo")
                            .withOwnerName("vbzpggpwme")
                            .withDatabaseName("bqajejir")))
                    .withEndpoints(
                        Arrays
                            .asList(
                                new EndpointProperties().withEntityName("epqmjmoplukfykk")
                                    .withAttributes(Arrays.asList(
                                        new Attributes().withName("xmwqpdkesjqbzkq").withValue("xvporiwbwg"),
                                        new Attributes().withName("ijtspzjnrrhikwsb").withValue("r"),
                                        new Attributes().withName("d").withValue("gquhtrgzfru")))
                                    .withProjectId("f")
                                    .withBranchId("jhiycbauseqnczk")
                                    .withEndpointType(EndpointType.READ_WRITE)
                                    .withEndpointId("tuwyjsqwzszos")
                                    .withComputeName("gzunkfnyskwwunqh")
                                    .withSize(new AutoscalingSize()
                                        .withAutoscalingLimitMinCu(68.73297489905548)
                                        .withAutoscalingLimitMaxCu(20.396019848237966)),
                                new EndpointProperties().withEntityName("chyluqa")
                                    .withAttributes(Arrays
                                        .asList(new Attributes().withName("stahhhsaaxxsritr").withValue("wbaaes")))
                                    .withProjectId("ef")
                                    .withBranchId("wo")
                                    .withEndpointType(EndpointType.READ_WRITE)
                                    .withEndpointId("iqbgpasrvrm")
                                    .withComputeName("sty")
                                    .withSize(new AutoscalingSize().withAutoscalingLimitMinCu(43.44122404868723)
                                        .withAutoscalingLimitMaxCu(8.096204362213044)))))
                .create();

        Assertions.assertEquals("paamihwb", response.properties().entityName());
        Assertions.assertEquals("cgsfzhbjkiysqbj", response.properties().attributes().get(0).name());
        Assertions.assertEquals("djpgxeysgwkcffe", response.properties().attributes().get(0).value());
        Assertions.assertEquals("ncdmwkh", response.properties().regionId());
        Assertions.assertEquals(3997069594118075795L, response.properties().storage());
        Assertions.assertEquals(1894774504, response.properties().pgVersion());
        Assertions.assertEquals(402419375, response.properties().historyRetention());
        Assertions.assertEquals(24.839659125422152,
            response.properties().defaultEndpointSettings().autoscalingLimitMinCu());
        Assertions.assertEquals(83.50512957332256,
            response.properties().defaultEndpointSettings().autoscalingLimitMaxCu());
        Assertions.assertEquals("sytciksw", response.properties().branch().entityName());
        Assertions.assertEquals("drp", response.properties().branch().attributes().get(0).name());
        Assertions.assertEquals("atvyrkljqkqws", response.properties().branch().attributes().get(0).value());
        Assertions.assertEquals("cl", response.properties().branch().projectId());
        Assertions.assertEquals("g", response.properties().branch().parentId());
        Assertions.assertEquals("an", response.properties().branch().roleName());
        Assertions.assertEquals("kjcnerek", response.properties().branch().databaseName());
        Assertions.assertEquals("bav", response.properties().branch().roles().get(0).entityName());
        Assertions.assertEquals("jc", response.properties().branch().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("mwevguyflnxel",
            response.properties().branch().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("kfzcdetowwezhy", response.properties().branch().roles().get(0).branchId());
        Assertions.assertEquals("ilbwqlq", response.properties().branch().roles().get(0).permissions().get(0));
        Assertions.assertTrue(response.properties().branch().roles().get(0).isSuperUser());
        Assertions.assertEquals("qb", response.properties().branch().roles().get(0).roleName());
        Assertions.assertEquals("umo", response.properties().branch().databases().get(0).entityName());
        Assertions.assertEquals("lbeqvh", response.properties().branch().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("kbmpw", response.properties().branch().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("dwiu", response.properties().branch().databases().get(0).branchId());
        Assertions.assertEquals("icupdyt", response.properties().branch().databases().get(0).ownerName());
        Assertions.assertEquals("miuvjplosebmhhtu", response.properties().branch().databases().get(0).databaseName());
        Assertions.assertEquals("idullnjgcpskg", response.properties().branch().endpoints().get(0).entityName());
        Assertions.assertEquals("jsdkpvnrvzwpffxs",
            response.properties().branch().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("ybn", response.properties().branch().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("vehoh", response.properties().branch().endpoints().get(0).projectId());
        Assertions.assertEquals("yuvbgtzqzqweu", response.properties().branch().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_ONLY,
            response.properties().branch().endpoints().get(0).endpointType());
        Assertions.assertEquals("nairvhpqsv", response.properties().branch().endpoints().get(0).endpointId());
        Assertions.assertEquals("eoge", response.properties().branch().endpoints().get(0).computeName());
        Assertions.assertEquals(49.92526464788085,
            response.properties().branch().endpoints().get(0).size().autoscalingLimitMinCu());
        Assertions.assertEquals(68.55280848537132,
            response.properties().branch().endpoints().get(0).size().autoscalingLimitMaxCu());
        Assertions.assertEquals("bcgqef", response.properties().branch().branchId());
        Assertions.assertEquals("jvbxqcbgo", response.properties().branch().branch());
        Assertions.assertEquals("sapleqfg", response.properties().roles().get(0).entityName());
        Assertions.assertEquals("yakeszsu", response.properties().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("vulaqcwggc", response.properties().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("vlqgfbrvecicao", response.properties().roles().get(0).branchId());
        Assertions.assertEquals("irlzbipiunn", response.properties().roles().get(0).permissions().get(0));
        Assertions.assertTrue(response.properties().roles().get(0).isSuperUser());
        Assertions.assertEquals("zzzkuer", response.properties().roles().get(0).roleName());
        Assertions.assertEquals("buudrizwkwkjxla", response.properties().databases().get(0).entityName());
        Assertions.assertEquals("nrommki", response.properties().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("hypw", response.properties().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("uzudegefxl", response.properties().databases().get(0).branchId());
        Assertions.assertEquals("ggo", response.properties().databases().get(0).ownerName());
        Assertions.assertEquals("smhssfnwh", response.properties().databases().get(0).databaseName());
        Assertions.assertEquals("vtdu", response.properties().endpoints().get(0).entityName());
        Assertions.assertEquals("btws", response.properties().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("kfkuy", response.properties().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("tqrcjqp", response.properties().endpoints().get(0).projectId());
        Assertions.assertEquals("vn", response.properties().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_WRITE, response.properties().endpoints().get(0).endpointType());
        Assertions.assertEquals("h", response.properties().endpoints().get(0).endpointId());
        Assertions.assertEquals("sjbi", response.properties().endpoints().get(0).computeName());
        Assertions.assertEquals(53.59749067891417,
            response.properties().endpoints().get(0).size().autoscalingLimitMinCu());
        Assertions.assertEquals(81.20350390573854,
            response.properties().endpoints().get(0).size().autoscalingLimitMaxCu());
    }
}
