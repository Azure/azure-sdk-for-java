// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.neonpostgres.NeonPostgresManager;
import com.azure.resourcemanager.neonpostgres.models.Attributes;
import com.azure.resourcemanager.neonpostgres.models.BranchProperties;
import com.azure.resourcemanager.neonpostgres.models.DefaultEndpointSettings;
import com.azure.resourcemanager.neonpostgres.models.EndpointProperties;
import com.azure.resourcemanager.neonpostgres.models.EndpointType;
import com.azure.resourcemanager.neonpostgres.models.NeonDatabaseProperties;
import com.azure.resourcemanager.neonpostgres.models.NeonRoleProperties;
import com.azure.resourcemanager.neonpostgres.models.Project;
import com.azure.resourcemanager.neonpostgres.models.ProjectProperties;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ProjectsCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"entityId\":\"vorbalkjnbk\",\"entityName\":\"h\",\"createdAt\":\"tqstqkqsygxiyne\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"zkheubanlxunpqcc\",\"value\":\"qiawzl\"},{\"name\":\"klaslga\",\"value\":\"izuxlrarwpewsaud\"},{\"name\":\"ejtig\",\"value\":\"sx\"}],\"regionId\":\"ytnkqb\",\"storage\":6976813642737516877,\"pgVersion\":76421440,\"historyRetention\":522943136,\"defaultEndpointSettings\":{\"autoscalingLimitMinCu\":85.89372340228213,\"autoscalingLimitMaxCu\":68.44178885621959},\"branch\":{\"entityId\":\"nhjiotiffb\",\"entityName\":\"ngkegxcypxbbfe\",\"createdAt\":\"ilyrzoxp\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"r\",\"value\":\"lqownkiua\"},{\"name\":\"ewnahwkxjjmzt\",\"value\":\"lmsoodtmve\"}],\"projectId\":\"hdyswcrptveajc\",\"parentId\":\"vlgsrgkrfiz\",\"roleName\":\"ywlptyuqh\",\"databaseName\":\"mc\",\"roles\":[{\"entityId\":\"pfuofixcnpcfykkp\",\"entityName\":\"cpawmp\",\"createdAt\":\"rdpwrpc\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"fwzlgzawkgyepeya\",\"value\":\"nnidmdiawpzxk\"}],\"branchId\":\"ntmkctdhuosgwqps\",\"permissions\":[\"i\",\"qodvqgcnbhcbmj\"],\"isSuperUser\":false},{\"entityId\":\"bn\",\"entityName\":\"ntsxjmfmeftvh\",\"createdAt\":\"o\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"skbwgm\",\"value\":\"g\"}],\"branchId\":\"lcfog\",\"permissions\":[\"xnwjtpfdzxcouz\"],\"isSuperUser\":true}],\"databases\":[{\"entityId\":\"k\",\"entityName\":\"zkdtzxsoed\",\"createdAt\":\"wglihezomu\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"snio\",\"value\":\"etbzdrdpuenxkgtl\"},{\"name\":\"lmtrlxcznnhz\",\"value\":\"bnbmxlxm\"},{\"name\":\"tygeqzus\",\"value\":\"toqcahfsgbjm\"},{\"name\":\"reesrfwsszvl\",\"value\":\"wliso\"}],\"branchId\":\"tfx\",\"ownerName\":\"rqmipfjwf\"},{\"entityId\":\"gizmshxxbaizabu\",\"entityName\":\"vgs\",\"createdAt\":\"toxjdzj\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"hxqqmqip\",\"value\":\"y\"},{\"name\":\"hfnzocx\",\"value\":\"tfshksnyzm\"},{\"name\":\"pamwbw\",\"value\":\"bnl\"},{\"name\":\"lcefiqdktw\",\"value\":\"kvi\"}],\"branchId\":\"pfliwo\",\"ownerName\":\"guuzh\"},{\"entityId\":\"ladpcmhjha\",\"entityName\":\"ybkekym\",\"createdAt\":\"ztsilscvq\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"hfym\",\"value\":\"ouihy\"}],\"branchId\":\"euugcigzho\",\"ownerName\":\"mgbvmtdwrqbe\"}],\"endpoints\":[{\"entityId\":\"veglabtvkbiwzn\",\"entityName\":\"fg\",\"createdAt\":\"cud\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"aczmuh\",\"value\":\"cakznhokhoitwhrj\"},{\"name\":\"dmmazdnc\",\"value\":\"idb\"}],\"projectId\":\"glhzqp\",\"branchId\":\"bawkikcdg\",\"endpointType\":\"read_write\"},{\"entityId\":\"sd\",\"entityName\":\"ey\",\"createdAt\":\"xdede\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"agxsurej\",\"value\":\"rshzzbgullcxiqqz\"},{\"name\":\"koxdupnamgl\",\"value\":\"ouigdmfivjqte\"}],\"projectId\":\"qq\",\"branchId\":\"dydkghpcvrwqir\",\"endpointType\":\"read_write\"}]},\"roles\":[{\"entityId\":\"hmvfxlapjajodm\",\"entityName\":\"rw\",\"createdAt\":\"gqvqokqluj\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"bwlyvxc\",\"value\":\"pqvctsfaeuhwwsk\"},{\"name\":\"stvzuzhasupml\",\"value\":\"pdpg\"}],\"branchId\":\"zqazvb\",\"permissions\":[\"kptgongruat\",\"yiysjqheni\",\"beqngubabyjde\",\"ysc\"],\"isSuperUser\":true},{\"entityId\":\"zjemexmnvkvm\",\"entityName\":\"rxl\",\"createdAt\":\"wmcpmrrdlhvdvm\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"aeqjzmhkd\",\"value\":\"lacro\"},{\"name\":\"zfmunerkelux\",\"value\":\"shxzezb\"},{\"name\":\"uzudlevzskejcg\",\"value\":\"fsgqkstyecupyuij\"},{\"name\":\"ard\",\"value\":\"vs\"}],\"branchId\":\"fmazpzdqwu\",\"permissions\":[\"mcokxizeku\",\"frjwucaon\",\"vajbvbnkrdemdid\"],\"isSuperUser\":true}],\"databases\":[{\"entityId\":\"gzwdydamis\",\"entityName\":\"ztdivykpxkq\",\"createdAt\":\"tpjfojiunrlshxuk\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"toiboancdr\",\"value\":\"o\"},{\"name\":\"nvxuldxonckb\",\"value\":\"lblfxlupibaqzizx\"},{\"name\":\"pzweghlwwbo\",\"value\":\"vgfklqiyndveqe\"},{\"name\":\"sbfvdstrkzxsgtzn\",\"value\":\"vlrdsmovpi\"}],\"branchId\":\"ndnoxaxnrqaq\",\"ownerName\":\"nndx\"},{\"entityId\":\"o\",\"entityName\":\"dvrgptqmawzjdrp\",\"createdAt\":\"fu\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"sd\",\"value\":\"tqgkujd\"},{\"name\":\"ooxrqwoeurb\",\"value\":\"igapdy\"}],\"branchId\":\"ikeej\",\"ownerName\":\"dfhtwmmkfqbriqul\"},{\"entityId\":\"trj\",\"entityName\":\"qkvyhzokpoyuohu\",\"createdAt\":\"snaajph\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"nglpwsada\",\"value\":\"jsumxpezcoio\"},{\"name\":\"jrmfqzwqd\",\"value\":\"xkeedcnwmy\"},{\"name\":\"xfqzkvemyzd\",\"value\":\"czaqpqifdbmpt\"}],\"branchId\":\"txzuisamonatnize\",\"ownerName\":\"oqsqjghr\"}],\"endpoints\":[{\"entityId\":\"plwsttxsrgxfqp\",\"entityName\":\"iceovxgzw\",\"createdAt\":\"xyrujmt\",\"provisioningState\":\"Succeeded\",\"attributes\":[{\"name\":\"ik\",\"value\":\"ohzixyqhfnkvycqq\"},{\"name\":\"dseipnquwzxhrp\",\"value\":\"yodlhkfktltddsob\"}],\"projectId\":\"pnouhbqezkqx\",\"branchId\":\"lu\",\"endpointType\":\"read_write\"},{\"entityId\":\"fcvcewbwq\",\"entityName\":\"gsjs\",\"createdAt\":\"mrncmaz\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"hyqmrejparnpv\",\"value\":\"rsz\"},{\"name\":\"bwtdr\",\"value\":\"wgzwllxzlhhfi\"}],\"projectId\":\"cfculzj\",\"branchId\":\"hp\",\"endpointType\":\"read_write\"},{\"entityId\":\"yldqpzfzxsox\",\"entityName\":\"unjlzkdrocq\",\"createdAt\":\"ytqqtcmi\",\"provisioningState\":\"Canceled\",\"attributes\":[{\"name\":\"vn\",\"value\":\"eylajamcajyhft\"},{\"name\":\"zcrryklleynqa\",\"value\":\"hkigglclwalhvub\"},{\"name\":\"gzphetxd\",\"value\":\"cmyc\"},{\"name\":\"ajqzj\",\"value\":\"alec\"}],\"projectId\":\"ibiwksdegyxsb\",\"branchId\":\"zvoikvntwczf\",\"endpointType\":\"read_write\"},{\"entityId\":\"hlcxpblalh\",\"entityName\":\"zpfkis\",\"createdAt\":\"idqzsaaoqdsgpto\",\"provisioningState\":\"Failed\",\"attributes\":[{\"name\":\"ia\",\"value\":\"cnlrt\"},{\"name\":\"fijzz\",\"value\":\"aoijolb\"}],\"projectId\":\"uktwieopexelxqdw\",\"branchId\":\"wyil\",\"endpointType\":\"read_write\"}]},\"id\":\"kgxyxyauxre\",\"name\":\"do\",\"type\":\"mcnltmwytkujsqyc\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NeonPostgresManager manager = NeonPostgresManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Project response = manager.projects()
            .define("usuzgfjzcvaaxo")
            .withExistingOrganization("zaahzbhuroolkoli", "hhmo")
            .withProperties(new ProjectProperties().withEntityName("kuk")
                .withAttributes(Arrays.asList(new Attributes().withName("hoqeqshavljqk").withValue("yrqolnthbbnkgz")))
                .withRegionId("wdrnzkj")
                .withStorage(5969767813024427211L)
                .withPgVersion(1493461224)
                .withHistoryRetention(79179303)
                .withDefaultEndpointSettings(new DefaultEndpointSettings().withAutoscalingLimitMinCu(58.163566206474535)
                    .withAutoscalingLimitMaxCu(89.48256105249192))
                .withBranch(
                    new BranchProperties().withEntityName("mq")
                        .withAttributes(Arrays.asList(new Attributes().withName("qmdtffi").withValue("jmr"),
                            new Attributes().withName("khmwdmd").withValue("gyqi"),
                            new Attributes().withName("okwtjawhvagnqfqq").withValue("lcvmyolcaymjch")))
                        .withProjectId("snvlaqd")
                        .withParentId("yzawatu")
                        .withRoleName("kokb")
                        .withDatabaseName("othymgobl")
                        .withRoles(
                            Arrays.asList(
                                new NeonRoleProperties().withEntityName("eakhtmhobcya")
                                    .withAttributes(Arrays.asList(
                                        new Attributes().withName("aoaqymhccto").withValue("uowyrnskbyhqu"),
                                        new Attributes().withName("czygxv").withValue("ajpxecxqnwhscoza"),
                                        new Attributes().withName("mvgxsmpknpwir").withValue("ljfewxqo")))
                                    .withBranchId("xudnmckap")
                                    .withPermissions(Arrays.asList("nqi"))
                                    .withIsSuperUser(true),
                                new NeonRoleProperties().withEntityName("kkyo")
                                    .withAttributes(
                                        Arrays.asList(new Attributes().withName("ksmfxm").withValue("vprstv")))
                                    .withBranchId("tbfjtdyotnplf")
                                    .withPermissions(Arrays.asList("occqrqxw", "tjtdrhutfd", "a", "txop"))
                                    .withIsSuperUser(true),
                                new NeonRoleProperties().withEntityName("gssz")
                                    .withAttributes(Arrays.asList(
                                        new Attributes().withName("ncclabvoyngsuxxc").withValue("bmyqjog"),
                                        new Attributes().withName("dsaidjanormovdxx").withValue("rntu")))
                                    .withBranchId("oilunwemhdee")
                                    .withPermissions(Arrays.asList("lkyozdsfzj", "egrhrh"))
                                    .withIsSuperUser(false)))
                        .withDatabases(
                            Arrays
                                .asList(new NeonDatabaseProperties().withEntityName("bfiobpnjodfc")
                                    .withAttributes(Arrays.asList(
                                        new Attributes().withName("oxsazuxejgwe").withValue("ywnfyszzaczs"),
                                        new Attributes().withName("nqbdnddbboz").withValue("yvrmkjm")))
                                    .withBranchId("trchwudlxe")
                                    .withOwnerName("htpmnoejhq")))
                        .withEndpoints(Arrays.asList(
                            new EndpointProperties().withEntityName("mypgfqvmty")
                                .withAttributes(Arrays.asList(new Attributes().withName("ampqcrzgeuq").withValue("b"),
                                    new Attributes().withName("iatwfaujegqdtadr").withValue("kgd")))
                                .withProjectId("jkrukizyhgsqtnqs")
                                .withBranchId("xqfpj")
                                .withEndpointType(EndpointType.READ_WRITE),
                            new EndpointProperties().withEntityName("fzuscstun")
                                .withAttributes(
                                    Arrays.asList(new Attributes().withName("gjsysmvxodgwxfkz").withValue("ifc"),
                                        new Attributes().withName("vbdujgcwxvecbb").withValue("jtrdxr"),
                                        new Attributes().withName("zagbbgiarksykp").withValue("dqxwabzrwiqrxhac")))
                                .withProjectId("dosqkptjqg")
                                .withBranchId("fmmainwhedxkpbq")
                                .withEndpointType(EndpointType.READ_ONLY))))
                .withRoles(
                    Arrays
                        .asList(
                            new NeonRoleProperties().withEntityName("jufbnkl")
                                .withAttributes(Arrays.asList(
                                    new Attributes().withName("fdxaglzfytlbtlq").withValue("opxouvmrsif"),
                                    new Attributes().withName("ikyypz").withValue("gxfx")))
                                .withBranchId("yrqsdbpokszanm")
                                .withPermissions(Arrays.asList("pter", "iuwkirkskwzts"))
                                .withIsSuperUser(true),
                            new NeonRoleProperties().withEntityName("cq")
                                .withAttributes(
                                    Arrays.asList(new Attributes().withName("ptvdxxheigm").withValue("ilwzghj"),
                                        new Attributes().withName("jvmabzzbway").withValue("fmdafbgymqtnap"),
                                        new Attributes().withName("eojxrjn").withValue("sconxavipney")))
                                .withBranchId("bjizqfsgn")
                                .withPermissions(Arrays.asList("zed"))
                                .withIsSuperUser(false)))
                .withDatabases(Arrays.asList(new NeonDatabaseProperties().withEntityName("picdbk")
                    .withAttributes(Arrays.asList(new Attributes().withName("shthmgpczqu").withValue("ptkbvcpxtzhi")))
                    .withBranchId("qbtimpk")
                    .withOwnerName("lornsihqh")))
                .withEndpoints(Arrays.asList(
                    new EndpointProperties().withEntityName("akx")
                        .withAttributes(Arrays.asList(new Attributes().withName("jtgirnb").withValue("mgm"),
                            new Attributes().withName("dorgmynltw").withValue("p"),
                            new Attributes().withName("tmfoeajogsyxwet").withValue("mfd"),
                            new Attributes().withName("rvlkpzwbhnrec").withValue("hdidrmuhkahmjedb")))
                        .withProjectId("cvkhhwmjpjbweun")
                        .withBranchId("qrrihufoihp")
                        .withEndpointType(EndpointType.READ_ONLY),
                    new EndpointProperties().withEntityName("iuzvkunhdimju")
                        .withAttributes(Arrays.asList(new Attributes().withName("wgofmhx").withValue("rjlvzklkvbgi"),
                            new Attributes().withName("yjtkakvlb").withValue("shjvpzaptuoskaoi")))
                        .withProjectId("ixwfgcdi")
                        .withBranchId("kcxwnujvqynvavi")
                        .withEndpointType(EndpointType.READ_ONLY),
                    new EndpointProperties().withEntityName("a")
                        .withAttributes(Arrays.asList(new Attributes().withName("lhpv").withValue("adbwe"),
                            new Attributes().withName("ninafhxrz").withValue("rmvzti"),
                            new Attributes().withName("cwviqllukhk").withValue("cqx")))
                        .withProjectId("bvzarmq")
                        .withBranchId("po")
                        .withEndpointType(EndpointType.READ_ONLY))))
            .create();

        Assertions.assertEquals("h", response.properties().entityName());
        Assertions.assertEquals("zkheubanlxunpqcc", response.properties().attributes().get(0).name());
        Assertions.assertEquals("qiawzl", response.properties().attributes().get(0).value());
        Assertions.assertEquals("ytnkqb", response.properties().regionId());
        Assertions.assertEquals(6976813642737516877L, response.properties().storage());
        Assertions.assertEquals(76421440, response.properties().pgVersion());
        Assertions.assertEquals(522943136, response.properties().historyRetention());
        Assertions.assertEquals(85.89372340228213,
            response.properties().defaultEndpointSettings().autoscalingLimitMinCu());
        Assertions.assertEquals(68.44178885621959,
            response.properties().defaultEndpointSettings().autoscalingLimitMaxCu());
        Assertions.assertEquals("ngkegxcypxbbfe", response.properties().branch().entityName());
        Assertions.assertEquals("r", response.properties().branch().attributes().get(0).name());
        Assertions.assertEquals("lqownkiua", response.properties().branch().attributes().get(0).value());
        Assertions.assertEquals("hdyswcrptveajc", response.properties().branch().projectId());
        Assertions.assertEquals("vlgsrgkrfiz", response.properties().branch().parentId());
        Assertions.assertEquals("ywlptyuqh", response.properties().branch().roleName());
        Assertions.assertEquals("mc", response.properties().branch().databaseName());
        Assertions.assertEquals("cpawmp", response.properties().branch().roles().get(0).entityName());
        Assertions.assertEquals("fwzlgzawkgyepeya",
            response.properties().branch().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("nnidmdiawpzxk",
            response.properties().branch().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("ntmkctdhuosgwqps", response.properties().branch().roles().get(0).branchId());
        Assertions.assertEquals("i", response.properties().branch().roles().get(0).permissions().get(0));
        Assertions.assertFalse(response.properties().branch().roles().get(0).isSuperUser());
        Assertions.assertEquals("zkdtzxsoed", response.properties().branch().databases().get(0).entityName());
        Assertions.assertEquals("snio", response.properties().branch().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("etbzdrdpuenxkgtl",
            response.properties().branch().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("tfx", response.properties().branch().databases().get(0).branchId());
        Assertions.assertEquals("rqmipfjwf", response.properties().branch().databases().get(0).ownerName());
        Assertions.assertEquals("fg", response.properties().branch().endpoints().get(0).entityName());
        Assertions.assertEquals("aczmuh", response.properties().branch().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("cakznhokhoitwhrj",
            response.properties().branch().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("glhzqp", response.properties().branch().endpoints().get(0).projectId());
        Assertions.assertEquals("bawkikcdg", response.properties().branch().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_WRITE,
            response.properties().branch().endpoints().get(0).endpointType());
        Assertions.assertEquals("rw", response.properties().roles().get(0).entityName());
        Assertions.assertEquals("bwlyvxc", response.properties().roles().get(0).attributes().get(0).name());
        Assertions.assertEquals("pqvctsfaeuhwwsk", response.properties().roles().get(0).attributes().get(0).value());
        Assertions.assertEquals("zqazvb", response.properties().roles().get(0).branchId());
        Assertions.assertEquals("kptgongruat", response.properties().roles().get(0).permissions().get(0));
        Assertions.assertTrue(response.properties().roles().get(0).isSuperUser());
        Assertions.assertEquals("ztdivykpxkq", response.properties().databases().get(0).entityName());
        Assertions.assertEquals("toiboancdr", response.properties().databases().get(0).attributes().get(0).name());
        Assertions.assertEquals("o", response.properties().databases().get(0).attributes().get(0).value());
        Assertions.assertEquals("ndnoxaxnrqaq", response.properties().databases().get(0).branchId());
        Assertions.assertEquals("nndx", response.properties().databases().get(0).ownerName());
        Assertions.assertEquals("iceovxgzw", response.properties().endpoints().get(0).entityName());
        Assertions.assertEquals("ik", response.properties().endpoints().get(0).attributes().get(0).name());
        Assertions.assertEquals("ohzixyqhfnkvycqq",
            response.properties().endpoints().get(0).attributes().get(0).value());
        Assertions.assertEquals("pnouhbqezkqx", response.properties().endpoints().get(0).projectId());
        Assertions.assertEquals("lu", response.properties().endpoints().get(0).branchId());
        Assertions.assertEquals(EndpointType.READ_WRITE, response.properties().endpoints().get(0).endpointType());
    }
}
