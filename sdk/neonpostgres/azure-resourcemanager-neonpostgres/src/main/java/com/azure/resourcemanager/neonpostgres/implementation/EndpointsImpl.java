// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.neonpostgres.fluent.EndpointsClient;
import com.azure.resourcemanager.neonpostgres.fluent.models.EndpointInner;
import com.azure.resourcemanager.neonpostgres.models.Endpoint;
import com.azure.resourcemanager.neonpostgres.models.Endpoints;

public final class EndpointsImpl implements Endpoints {
    private static final ClientLogger LOGGER = new ClientLogger(EndpointsImpl.class);

    private final EndpointsClient innerClient;

    private final com.azure.resourcemanager.neonpostgres.NeonPostgresManager serviceManager;

    public EndpointsImpl(EndpointsClient innerClient,
        com.azure.resourcemanager.neonpostgres.NeonPostgresManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<Endpoint> list(String resourceGroupName, String organizationName, String projectName,
        String branchName) {
        PagedIterable<EndpointInner> inner
            = this.serviceClient().list(resourceGroupName, organizationName, projectName, branchName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new EndpointImpl(inner1, this.manager()));
    }

    public PagedIterable<Endpoint> list(String resourceGroupName, String organizationName, String projectName,
        String branchName, Context context) {
        PagedIterable<EndpointInner> inner
            = this.serviceClient().list(resourceGroupName, organizationName, projectName, branchName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new EndpointImpl(inner1, this.manager()));
    }

    private EndpointsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.neonpostgres.NeonPostgresManager manager() {
        return this.serviceManager;
    }
}
