// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.neonpostgres.fluent.NeonDatabasesClient;
import com.azure.resourcemanager.neonpostgres.fluent.models.NeonDatabaseInner;
import com.azure.resourcemanager.neonpostgres.models.NeonDatabase;
import com.azure.resourcemanager.neonpostgres.models.NeonDatabases;

public final class NeonDatabasesImpl implements NeonDatabases {
    private static final ClientLogger LOGGER = new ClientLogger(NeonDatabasesImpl.class);

    private final NeonDatabasesClient innerClient;

    private final com.azure.resourcemanager.neonpostgres.NeonPostgresManager serviceManager;

    public NeonDatabasesImpl(NeonDatabasesClient innerClient,
        com.azure.resourcemanager.neonpostgres.NeonPostgresManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<NeonDatabase> list(String resourceGroupName, String organizationName, String projectName,
        String branchName) {
        PagedIterable<NeonDatabaseInner> inner
            = this.serviceClient().list(resourceGroupName, organizationName, projectName, branchName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new NeonDatabaseImpl(inner1, this.manager()));
    }

    public PagedIterable<NeonDatabase> list(String resourceGroupName, String organizationName, String projectName,
        String branchName, Context context) {
        PagedIterable<NeonDatabaseInner> inner
            = this.serviceClient().list(resourceGroupName, organizationName, projectName, branchName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new NeonDatabaseImpl(inner1, this.manager()));
    }

    private NeonDatabasesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.neonpostgres.NeonPostgresManager manager() {
        return this.serviceManager;
    }
}
