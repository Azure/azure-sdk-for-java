// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.neonpostgres.fluent.models.EndpointInner;

/**
 * An instance of this class provides access to all the operations defined in EndpointsClient.
 */
public interface EndpointsClient {
    /**
     * List Endpoint resources by Branch.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Neon Organizations resource.
     * @param projectName The name of the Project.
     * @param branchName The name of the Branch.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Endpoint list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<EndpointInner> list(String resourceGroupName, String organizationName, String projectName,
        String branchName);

    /**
     * List Endpoint resources by Branch.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Neon Organizations resource.
     * @param projectName The name of the Project.
     * @param branchName The name of the Branch.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Endpoint list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<EndpointInner> list(String resourceGroupName, String organizationName, String projectName,
        String branchName, Context context);

    /**
     * Create a Endpoint.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Neon Organizations resource.
     * @param projectName The name of the Project.
     * @param branchName The name of the Branch.
     * @param endpointName The name of the Endpoint.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Neon compute endpoint resource type.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<EndpointInner>, EndpointInner> beginCreateOrUpdate(String resourceGroupName,
        String organizationName, String projectName, String branchName, String endpointName, EndpointInner resource);

    /**
     * Create a Endpoint.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Neon Organizations resource.
     * @param projectName The name of the Project.
     * @param branchName The name of the Branch.
     * @param endpointName The name of the Endpoint.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Neon compute endpoint resource type.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<EndpointInner>, EndpointInner> beginCreateOrUpdate(String resourceGroupName,
        String organizationName, String projectName, String branchName, String endpointName, EndpointInner resource,
        Context context);

    /**
     * Create a Endpoint.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Neon Organizations resource.
     * @param projectName The name of the Project.
     * @param branchName The name of the Branch.
     * @param endpointName The name of the Endpoint.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Neon compute endpoint resource type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    EndpointInner createOrUpdate(String resourceGroupName, String organizationName, String projectName,
        String branchName, String endpointName, EndpointInner resource);

    /**
     * Create a Endpoint.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Neon Organizations resource.
     * @param projectName The name of the Project.
     * @param branchName The name of the Branch.
     * @param endpointName The name of the Endpoint.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Neon compute endpoint resource type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    EndpointInner createOrUpdate(String resourceGroupName, String organizationName, String projectName,
        String branchName, String endpointName, EndpointInner resource, Context context);

    /**
     * Delete a Endpoint.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Neon Organizations resource.
     * @param projectName The name of the Project.
     * @param branchName The name of the Branch.
     * @param endpointName The name of the Endpoint.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String organizationName, String projectName,
        String branchName, String endpointName, Context context);

    /**
     * Delete a Endpoint.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Name of the Neon Organizations resource.
     * @param projectName The name of the Project.
     * @param branchName The name of the Branch.
     * @param endpointName The name of the Endpoint.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String organizationName, String projectName, String branchName,
        String endpointName);
}
