// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.resourcemanager.neonpostgres.models.BranchProperties;
import com.azure.resourcemanager.neonpostgres.models.EndpointProperties;
import com.azure.resourcemanager.neonpostgres.models.EndpointType;
import com.azure.resourcemanager.neonpostgres.models.EntityType;
import com.azure.resourcemanager.neonpostgres.models.NeonDatabaseProperties;
import com.azure.resourcemanager.neonpostgres.models.PreflightCheckParameters;

/**
 * Samples for Branches Preflight.
 */
public final class BranchesPreflightSamples {
    /*
     * x-ms-original-file: 2025-06-23-preview/Branches_Preflight_MaximumSet_Gen.json
     */
    /**
     * Sample code: Branches_Preflight_MaximumSet.
     * 
     * @param manager Entry point to NeonPostgresManager.
     */
    public static void branchesPreflightMaximumSet(com.azure.resourcemanager.neonpostgres.NeonPostgresManager manager) {
        manager.branches()
            .preflightWithResponse("rgneon", "myOrganization", "myProject", "myBranch",
                new PreflightCheckParameters().withProjectId("project-123")
                    .withBranchId("branch-123")
                    .withEntityType(EntityType.BRANCH)
                    .withBranchProperties(new BranchProperties().withProjectId("project-123")
                        .withRoleName("admin")
                        .withDatabaseName("application")
                        .withBranchId("branch-123")
                        .withBranch("myBranch")),
                com.azure.core.util.Context.NONE);
    }

    /*
     * x-ms-original-file: 2025-06-23-preview/Branches_Preflight_Endpoint_Gen.json
     */
    /**
     * Sample code: Branches_Preflight_Endpoint_Gen.
     * 
     * @param manager Entry point to NeonPostgresManager.
     */
    public static void
        branchesPreflightEndpointGen(com.azure.resourcemanager.neonpostgres.NeonPostgresManager manager) {
        manager.branches()
            .preflightWithResponse("rgneon", "myOrganization", "myProject", "myBranch",
                new PreflightCheckParameters().withProjectId("project-123")
                    .withBranchId("branch-123")
                    .withEntityType(EntityType.ENDPOINT)
                    .withEndpointProperties(new EndpointProperties().withEndpointType(EndpointType.READ_WRITE)
                        .withEndpointId("endpoint-456")),
                com.azure.core.util.Context.NONE);
    }

    /*
     * x-ms-original-file: 2025-06-23-preview/Branches_Preflight_Database_Gen.json
     */
    /**
     * Sample code: Branches_Preflight_Database_Gen.
     * 
     * @param manager Entry point to NeonPostgresManager.
     */
    public static void
        branchesPreflightDatabaseGen(com.azure.resourcemanager.neonpostgres.NeonPostgresManager manager) {
        manager.branches()
            .preflightWithResponse("rgneon", "myOrganization", "myProject", "myBranch",
                new PreflightCheckParameters().withProjectId("project-123")
                    .withBranchId("branch-123")
                    .withEntityType(EntityType.fromString("database"))
                    .withDatabaseProperties(new NeonDatabaseProperties().withDatabaseName("analytics")),
                com.azure.core.util.Context.NONE);
    }
}
