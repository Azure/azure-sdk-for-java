// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicelinker.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicelinker.models.AuthMode;
import com.azure.resourcemanager.servicelinker.models.DeleteOrUpdateBehavior;
import com.azure.resourcemanager.servicelinker.models.UserAssignedIdentityAuthInfo;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UserAssignedIdentityAuthInfoTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UserAssignedIdentityAuthInfo model = BinaryData.fromString(
            "{\"authType\":\"userAssignedIdentity\",\"clientId\":\"dectehfiqsc\",\"subscriptionId\":\"ypvhezrkg\",\"deleteOrUpdateBehavior\":\"Default\",\"roles\":[\"efovgmk\",\"sle\",\"yvxyqjp\",\"cattpngjcrcczsq\"],\"userName\":\"hvmdajvnysounq\",\"authMode\":\"optInAllAuth\"}")
            .toObject(UserAssignedIdentityAuthInfo.class);
        Assertions.assertEquals(AuthMode.OPT_IN_ALL_AUTH, model.authMode());
        Assertions.assertEquals("dectehfiqsc", model.clientId());
        Assertions.assertEquals("ypvhezrkg", model.subscriptionId());
        Assertions.assertEquals(DeleteOrUpdateBehavior.DEFAULT, model.deleteOrUpdateBehavior());
        Assertions.assertEquals("efovgmk", model.roles().get(0));
        Assertions.assertEquals("hvmdajvnysounq", model.username());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UserAssignedIdentityAuthInfo model = new UserAssignedIdentityAuthInfo().withAuthMode(AuthMode.OPT_IN_ALL_AUTH)
            .withClientId("dectehfiqsc")
            .withSubscriptionId("ypvhezrkg")
            .withDeleteOrUpdateBehavior(DeleteOrUpdateBehavior.DEFAULT)
            .withRoles(Arrays.asList("efovgmk", "sle", "yvxyqjp", "cattpngjcrcczsq"))
            .withUsername("hvmdajvnysounq");
        model = BinaryData.fromObject(model).toObject(UserAssignedIdentityAuthInfo.class);
        Assertions.assertEquals(AuthMode.OPT_IN_ALL_AUTH, model.authMode());
        Assertions.assertEquals("dectehfiqsc", model.clientId());
        Assertions.assertEquals("ypvhezrkg", model.subscriptionId());
        Assertions.assertEquals(DeleteOrUpdateBehavior.DEFAULT, model.deleteOrUpdateBehavior());
        Assertions.assertEquals("efovgmk", model.roles().get(0));
        Assertions.assertEquals("hvmdajvnysounq", model.username());
    }
}
