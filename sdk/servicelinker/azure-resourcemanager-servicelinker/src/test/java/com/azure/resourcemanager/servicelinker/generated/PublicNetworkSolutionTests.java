// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicelinker.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicelinker.models.ActionType;
import com.azure.resourcemanager.servicelinker.models.AllowType;
import com.azure.resourcemanager.servicelinker.models.DeleteOrUpdateBehavior;
import com.azure.resourcemanager.servicelinker.models.FirewallRules;
import com.azure.resourcemanager.servicelinker.models.PublicNetworkSolution;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PublicNetworkSolutionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PublicNetworkSolution model = BinaryData.fromString(
            "{\"deleteOrUpdateBehavior\":\"ForcedCleanup\",\"action\":\"Internal\",\"firewallRules\":{\"ipRanges\":[\"kyfi\",\"rfidfvzwdz\"],\"azureServices\":\"true\",\"callerClientIP\":\"false\"}}")
            .toObject(PublicNetworkSolution.class);
        Assertions.assertEquals(DeleteOrUpdateBehavior.FORCED_CLEANUP, model.deleteOrUpdateBehavior());
        Assertions.assertEquals(ActionType.INTERNAL, model.action());
        Assertions.assertEquals("kyfi", model.firewallRules().ipRanges().get(0));
        Assertions.assertEquals(AllowType.TRUE, model.firewallRules().azureServices());
        Assertions.assertEquals(AllowType.FALSE, model.firewallRules().callerClientIp());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PublicNetworkSolution model
            = new PublicNetworkSolution().withDeleteOrUpdateBehavior(DeleteOrUpdateBehavior.FORCED_CLEANUP)
                .withAction(ActionType.INTERNAL)
                .withFirewallRules(new FirewallRules().withIpRanges(Arrays.asList("kyfi", "rfidfvzwdz"))
                    .withAzureServices(AllowType.TRUE)
                    .withCallerClientIp(AllowType.FALSE));
        model = BinaryData.fromObject(model).toObject(PublicNetworkSolution.class);
        Assertions.assertEquals(DeleteOrUpdateBehavior.FORCED_CLEANUP, model.deleteOrUpdateBehavior());
        Assertions.assertEquals(ActionType.INTERNAL, model.action());
        Assertions.assertEquals("kyfi", model.firewallRules().ipRanges().get(0));
        Assertions.assertEquals(AllowType.TRUE, model.firewallRules().azureServices());
        Assertions.assertEquals(AllowType.FALSE, model.firewallRules().callerClientIp());
    }
}
