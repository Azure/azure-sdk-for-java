// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicelinker.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.servicelinker.ServiceLinkerManager;
import com.azure.resourcemanager.servicelinker.models.DryrunParameters;
import com.azure.resourcemanager.servicelinker.models.DryrunPatch;
import com.azure.resourcemanager.servicelinker.models.DryrunResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class LinkersOperationsUpdateDryrunMockTests {
    @Test
    public void testUpdateDryrun() throws Exception {
        String responseStr
            = "{\"properties\":{\"parameters\":{\"actionName\":\"DryrunParameters\"},\"prerequisiteResults\":[{\"type\":\"DryrunPrerequisiteResult\"},{\"type\":\"DryrunPrerequisiteResult\"},{\"type\":\"DryrunPrerequisiteResult\"},{\"type\":\"DryrunPrerequisiteResult\"}],\"operationPreviews\":[{\"name\":\"kwofyyvoq\",\"operationType\":\"configConnection\",\"description\":\"expbtg\",\"action\":\"bwoenwashrt\",\"scope\":\"kcnqxwbpo\"},{\"name\":\"lpiujwaa\",\"operationType\":\"configNetwork\",\"description\":\"i\",\"action\":\"byuqerpqlp\",\"scope\":\"cciuqgbdbutau\"}],\"provisioningState\":\"Succeeded\"},\"id\":\"ykojoxafnndlpic\",\"name\":\"koymkcd\",\"type\":\"h\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ServiceLinkerManager manager = ServiceLinkerManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DryrunResource response = manager.linkersOperations()
            .updateDryrun("twuoegrpkhjwni", "qsluicp", new DryrunPatch().withParameters(new DryrunParameters()),
                com.azure.core.util.Context.NONE);

    }
}
