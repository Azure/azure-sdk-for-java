// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicelinker.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicelinker.fluent.models.DryrunResourceInner;
import com.azure.resourcemanager.servicelinker.models.DryrunList;
import com.azure.resourcemanager.servicelinker.models.DryrunParameters;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DryrunListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DryrunList model = BinaryData.fromString(
            "{\"nextLink\":\"mhquvgjxp\",\"value\":[{\"properties\":{\"parameters\":{\"actionName\":\"DryrunParameters\"},\"prerequisiteResults\":[{\"type\":\"DryrunPrerequisiteResult\"},{\"type\":\"DryrunPrerequisiteResult\"},{\"type\":\"DryrunPrerequisiteResult\"},{\"type\":\"DryrunPrerequisiteResult\"}],\"operationPreviews\":[{\"name\":\"opb\",\"operationType\":\"configNetwork\",\"description\":\"upi\",\"action\":\"sybbejhph\",\"scope\":\"cmsxaobhdxbm\"},{\"name\":\"ioq\",\"operationType\":\"configNetwork\",\"description\":\"tbmufpo\",\"action\":\"oizh\",\"scope\":\"rxybqsoq\"},{\"name\":\"gkdmb\",\"operationType\":\"configConnection\",\"description\":\"obcu\",\"action\":\"dznrbtcqq\",\"scope\":\"qglhq\"},{\"name\":\"ufo\",\"operationType\":\"configConnection\",\"description\":\"wifsq\",\"action\":\"aagdfmg\",\"scope\":\"lhjxr\"}],\"provisioningState\":\"kwm\"},\"id\":\"ktsizntocipaou\",\"name\":\"jpsq\",\"type\":\"cmpoyfdkfogkny\"},{\"properties\":{\"parameters\":{\"actionName\":\"DryrunParameters\"},\"prerequisiteResults\":[{\"type\":\"DryrunPrerequisiteResult\"},{\"type\":\"DryrunPrerequisiteResult\"},{\"type\":\"DryrunPrerequisiteResult\"},{\"type\":\"DryrunPrerequisiteResult\"}],\"operationPreviews\":[{\"name\":\"qs\",\"operationType\":\"configConnection\",\"description\":\"pewnw\",\"action\":\"itjz\",\"scope\":\"lusarh\"},{\"name\":\"fcqhsmyurkd\",\"operationType\":\"configConnection\",\"description\":\"he\",\"action\":\"k\",\"scope\":\"txukcdmp\"},{\"name\":\"cryuan\",\"operationType\":\"configNetwork\",\"description\":\"zdxtayrlhmwhf\",\"action\":\"rqobmtuk\",\"scope\":\"ryrtihfxtijbpzv\"}],\"provisioningState\":\"wzsymglzufcy\"},\"id\":\"ohdbihanufh\",\"name\":\"cbjy\",\"type\":\"a\"},{\"properties\":{\"parameters\":{\"actionName\":\"DryrunParameters\"},\"prerequisiteResults\":[{\"type\":\"DryrunPrerequisiteResult\"},{\"type\":\"DryrunPrerequisiteResult\"}],\"operationPreviews\":[{\"name\":\"bifpikxwczb\",\"operationType\":\"configAuth\",\"description\":\"pqxu\",\"action\":\"vyq\",\"scope\":\"wby\"}],\"provisioningState\":\"k\"},\"id\":\"dumjgrtfwvuk\",\"name\":\"gaudcc\",\"type\":\"nhsjcnyej\"},{\"properties\":{\"parameters\":{\"actionName\":\"DryrunParameters\"},\"prerequisiteResults\":[{\"type\":\"DryrunPrerequisiteResult\"},{\"type\":\"DryrunPrerequisiteResult\"},{\"type\":\"DryrunPrerequisiteResult\"},{\"type\":\"DryrunPrerequisiteResult\"}],\"operationPreviews\":[{\"name\":\"pczwlo\",\"operationType\":\"configNetwork\",\"description\":\"mkkvnip\",\"action\":\"xzjnchgejs\",\"scope\":\"dmailzydehojw\"},{\"name\":\"huxinpmqnj\",\"operationType\":\"configConnection\",\"description\":\"xj\",\"action\":\"r\",\"scope\":\"vcputegj\"},{\"name\":\"mfdatscmdvpj\",\"operationType\":\"configAuth\",\"description\":\"uuvmkjozkrwfnd\",\"action\":\"djpslw\",\"scope\":\"dpvwryoqpsoaccta\"}],\"provisioningState\":\"kljla\"},\"id\":\"cr\",\"name\":\"ffdfdosygexpa\",\"type\":\"jakhmsbzjh\"}]}")
            .toObject(DryrunList.class);
        Assertions.assertEquals("mhquvgjxp", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DryrunList model = new DryrunList().withNextLink("mhquvgjxp")
            .withValue(Arrays.asList(new DryrunResourceInner().withParameters(new DryrunParameters()),
                new DryrunResourceInner().withParameters(new DryrunParameters()),
                new DryrunResourceInner().withParameters(new DryrunParameters()),
                new DryrunResourceInner().withParameters(new DryrunParameters())));
        model = BinaryData.fromObject(model).toObject(DryrunList.class);
        Assertions.assertEquals("mhquvgjxp", model.nextLink());
    }
}
