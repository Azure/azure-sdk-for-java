// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicelinker.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.servicelinker.ServiceLinkerManager;
import com.azure.resourcemanager.servicelinker.models.SourceConfigurationResult;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class LinkersListConfigurationsWithResponseMockTests {
    @Test
    public void testListConfigurationsWithResponse() throws Exception {
        String responseStr
            = "{\"configurations\":[{\"name\":\"dqytbciqfouflmm\",\"value\":\"zsm\"},{\"name\":\"mglougpbkw\",\"value\":\"utduqktapspwgcu\"},{\"name\":\"tumkdosvqwhbm\",\"value\":\"bbjfddgmbmbexp\"},{\"name\":\"htqqrolfp\",\"value\":\"s\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ServiceLinkerManager manager = ServiceLinkerManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SourceConfigurationResult response = manager.linkers()
            .listConfigurationsWithResponse("gakeqsr", "yb", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("dqytbciqfouflmm", response.configurations().get(0).name());
        Assertions.assertEquals("zsm", response.configurations().get(0).value());
    }
}
