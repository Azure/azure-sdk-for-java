// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicelinker.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.servicelinker.fluent.models.LinkerResourceInner;

/**
 * Resource collection API of Connectors.
 */
public interface Connectors {
    /**
     * list dryrun jobs.
     * 
     * @param subscriptionId The ID of the target subscription.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param location The name of Azure region.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of dryrun as paginated response with {@link PagedIterable}.
     */
    PagedIterable<DryrunResource> listDryrun(String subscriptionId, String resourceGroupName, String location);

    /**
     * list dryrun jobs.
     * 
     * @param subscriptionId The ID of the target subscription.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param location The name of Azure region.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of dryrun as paginated response with {@link PagedIterable}.
     */
    PagedIterable<DryrunResource> listDryrun(String subscriptionId, String resourceGroupName, String location,
        Context context);

    /**
     * get a dryrun job.
     * 
     * @param subscriptionId The ID of the target subscription.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param location The name of Azure region.
     * @param dryrunName The name of dryrun.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a dryrun job along with {@link Response}.
     */
    Response<DryrunResource> getDryrunWithResponse(String subscriptionId, String resourceGroupName, String location,
        String dryrunName, Context context);

    /**
     * get a dryrun job.
     * 
     * @param subscriptionId The ID of the target subscription.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param location The name of Azure region.
     * @param dryrunName The name of dryrun.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a dryrun job.
     */
    DryrunResource getDryrun(String subscriptionId, String resourceGroupName, String location, String dryrunName);

    /**
     * delete a dryrun job.
     * 
     * @param subscriptionId The ID of the target subscription.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param location The name of Azure region.
     * @param dryrunName The name of dryrun.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteDryrunWithResponse(String subscriptionId, String resourceGroupName, String location,
        String dryrunName, Context context);

    /**
     * delete a dryrun job.
     * 
     * @param subscriptionId The ID of the target subscription.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param location The name of Azure region.
     * @param dryrunName The name of dryrun.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteDryrun(String subscriptionId, String resourceGroupName, String location, String dryrunName);

    /**
     * Returns list of connector which connects to the resource, which supports to config the target service during the
     * resource provision.
     * 
     * @param subscriptionId The ID of the target subscription.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param location The name of Azure region.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of Linker as paginated response with {@link PagedIterable}.
     */
    PagedIterable<LinkerResource> list(String subscriptionId, String resourceGroupName, String location);

    /**
     * Returns list of connector which connects to the resource, which supports to config the target service during the
     * resource provision.
     * 
     * @param subscriptionId The ID of the target subscription.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param location The name of Azure region.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of Linker as paginated response with {@link PagedIterable}.
     */
    PagedIterable<LinkerResource> list(String subscriptionId, String resourceGroupName, String location,
        Context context);

    /**
     * Returns Connector resource for a given name.
     * 
     * @param subscriptionId The ID of the target subscription.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param location The name of Azure region.
     * @param connectorName The name of resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return linker of source and target resource along with {@link Response}.
     */
    Response<LinkerResource> getWithResponse(String subscriptionId, String resourceGroupName, String location,
        String connectorName, Context context);

    /**
     * Returns Connector resource for a given name.
     * 
     * @param subscriptionId The ID of the target subscription.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param location The name of Azure region.
     * @param connectorName The name of resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return linker of source and target resource.
     */
    LinkerResource get(String subscriptionId, String resourceGroupName, String location, String connectorName);

    /**
     * Create or update Connector resource.
     * 
     * @param subscriptionId The ID of the target subscription.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param location The name of Azure region.
     * @param connectorName The name of resource.
     * @param parameters Connector details.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return linker of source and target resource.
     */
    LinkerResource createOrUpdate(String subscriptionId, String resourceGroupName, String location,
        String connectorName, LinkerResourceInner parameters);

    /**
     * Create or update Connector resource.
     * 
     * @param subscriptionId The ID of the target subscription.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param location The name of Azure region.
     * @param connectorName The name of resource.
     * @param parameters Connector details.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return linker of source and target resource.
     */
    LinkerResource createOrUpdate(String subscriptionId, String resourceGroupName, String location,
        String connectorName, LinkerResourceInner parameters, Context context);

    /**
     * Delete a Connector.
     * 
     * @param subscriptionId The ID of the target subscription.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param location The name of Azure region.
     * @param connectorName The name of resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String subscriptionId, String resourceGroupName, String location, String connectorName);

    /**
     * Delete a Connector.
     * 
     * @param subscriptionId The ID of the target subscription.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param location The name of Azure region.
     * @param connectorName The name of resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String subscriptionId, String resourceGroupName, String location, String connectorName,
        Context context);

    /**
     * Operation to update an existing Connector.
     * 
     * @param subscriptionId The ID of the target subscription.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param location The name of Azure region.
     * @param connectorName The name of resource.
     * @param parameters Connector details.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return linker of source and target resource.
     */
    LinkerResource update(String subscriptionId, String resourceGroupName, String location, String connectorName,
        LinkerPatch parameters);

    /**
     * Operation to update an existing Connector.
     * 
     * @param subscriptionId The ID of the target subscription.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param location The name of Azure region.
     * @param connectorName The name of resource.
     * @param parameters Connector details.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return linker of source and target resource.
     */
    LinkerResource update(String subscriptionId, String resourceGroupName, String location, String connectorName,
        LinkerPatch parameters, Context context);

    /**
     * Validate a Connector.
     * 
     * @param subscriptionId The ID of the target subscription.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param location The name of Azure region.
     * @param connectorName The name of resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the validation operation result for a Linker.
     */
    ValidateOperationResult validate(String subscriptionId, String resourceGroupName, String location,
        String connectorName);

    /**
     * Validate a Connector.
     * 
     * @param subscriptionId The ID of the target subscription.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param location The name of Azure region.
     * @param connectorName The name of resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the validation operation result for a Linker.
     */
    ValidateOperationResult validate(String subscriptionId, String resourceGroupName, String location,
        String connectorName, Context context);

    /**
     * Generate configurations for a Connector.
     * 
     * @param subscriptionId The ID of the target subscription.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param location The name of Azure region.
     * @param connectorName The name of resource.
     * @param parameters Connection Info, including format, secret store, etc.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configurations for source resource, include appSettings, connectionString and serviceBindings along with
     * {@link Response}.
     */
    Response<ConfigurationResult> generateConfigurationsWithResponse(String subscriptionId, String resourceGroupName,
        String location, String connectorName, ConfigurationInfo parameters, Context context);

    /**
     * Generate configurations for a Connector.
     * 
     * @param subscriptionId The ID of the target subscription.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param location The name of Azure region.
     * @param connectorName The name of resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configurations for source resource, include appSettings, connectionString and serviceBindings.
     */
    ConfigurationResult generateConfigurations(String subscriptionId, String resourceGroupName, String location,
        String connectorName);

    /**
     * get a dryrun job.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a dryrun job along with {@link Response}.
     */
    DryrunResource getDryrunById(String id);

    /**
     * get a dryrun job.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a dryrun job along with {@link Response}.
     */
    Response<DryrunResource> getDryrunByIdWithResponse(String id, Context context);

    /**
     * delete a dryrun job.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteDryrunById(String id);

    /**
     * delete a dryrun job.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteDryrunByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new DryrunResource resource.
     * 
     * @param name resource name.
     * @return the first stage of the new DryrunResource definition.
     */
    DryrunResource.DefinitionStages.Blank define(String name);
}
