// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicelinker.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.servicelinker.fluent.models.DryrunResourceInner;
import java.util.List;

/**
 * An immutable client-side representation of DryrunResource.
 */
public interface DryrunResource {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the parameters property: The parameters of the dryrun.
     * 
     * @return the parameters value.
     */
    DryrunParameters parameters();

    /**
     * Gets the prerequisiteResults property: the result of the dryrun.
     * 
     * @return the prerequisiteResults value.
     */
    List<DryrunPrerequisiteResult> prerequisiteResults();

    /**
     * Gets the operationPreviews property: the preview of the operations for creation.
     * 
     * @return the operationPreviews value.
     */
    List<DryrunOperationPreview> operationPreviews();

    /**
     * Gets the provisioningState property: The provisioning state.
     * 
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.servicelinker.fluent.models.DryrunResourceInner object.
     * 
     * @return the inner object.
     */
    DryrunResourceInner innerModel();

    /**
     * The entirety of the DryrunResource definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The DryrunResource definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the DryrunResource definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the DryrunResource definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies subscriptionId, resourceGroupName, location.
             * 
             * @param subscriptionId The ID of the target subscription.
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param location The name of Azure region.
             * @return the next definition stage.
             */
            WithCreate withExistingLocation(String subscriptionId, String resourceGroupName, String location);
        }

        /**
         * The stage of the DryrunResource definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithParameters {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            DryrunResource create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            DryrunResource create(Context context);
        }

        /**
         * The stage of the DryrunResource definition allowing to specify parameters.
         */
        interface WithParameters {
            /**
             * Specifies the parameters property: The parameters of the dryrun.
             * 
             * @param parameters The parameters of the dryrun.
             * @return the next definition stage.
             */
            WithCreate withParameters(DryrunParameters parameters);
        }
    }

    /**
     * Begins update for the DryrunResource resource.
     * 
     * @return the stage of resource update.
     */
    DryrunResource.Update update();

    /**
     * The template for DryrunResource update.
     */
    interface Update extends UpdateStages.WithParameters {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        DryrunResource apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        DryrunResource apply(Context context);
    }

    /**
     * The DryrunResource update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the DryrunResource update allowing to specify parameters.
         */
        interface WithParameters {
            /**
             * Specifies the parameters property: The parameters of the dryrun.
             * 
             * @param parameters The parameters of the dryrun.
             * @return the next definition stage.
             */
            Update withParameters(DryrunParameters parameters);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    DryrunResource refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    DryrunResource refresh(Context context);
}
