// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dependencymap.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Additional information about the exported dependencies data.
 */
@Immutable
public final class ExportDependenciesAdditionalInfo implements JsonSerializable<ExportDependenciesAdditionalInfo> {
    /*
     * Number of days for which data was available in the exported results.
     */
    private Integer availableDaysCount;

    /**
     * Creates an instance of ExportDependenciesAdditionalInfo class.
     */
    private ExportDependenciesAdditionalInfo() {
    }

    /**
     * Get the availableDaysCount property: Number of days for which data was available in the exported results.
     * 
     * @return the availableDaysCount value.
     */
    public Integer availableDaysCount() {
        return this.availableDaysCount;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("availableDaysCount", this.availableDaysCount);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ExportDependenciesAdditionalInfo from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ExportDependenciesAdditionalInfo if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ExportDependenciesAdditionalInfo.
     */
    public static ExportDependenciesAdditionalInfo fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ExportDependenciesAdditionalInfo deserializedExportDependenciesAdditionalInfo
                = new ExportDependenciesAdditionalInfo();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("availableDaysCount".equals(fieldName)) {
                    deserializedExportDependenciesAdditionalInfo.availableDaysCount
                        = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedExportDependenciesAdditionalInfo;
        });
    }
}
