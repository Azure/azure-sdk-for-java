// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dependencymap.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.dependencymap.fluent.models.DiscoverySourceResourceInner;
import com.azure.resourcemanager.dependencymap.models.DiscoverySourceResourceTagsUpdate;

/**
 * An instance of this class provides access to all the operations defined in DiscoverySourcesClient.
 */
public interface DiscoverySourcesClient {
    /**
     * Get a DiscoverySourceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mapName Maps resource name.
     * @param sourceName discovery source resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a DiscoverySourceResource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DiscoverySourceResourceInner> getWithResponse(String resourceGroupName, String mapName, String sourceName,
        Context context);

    /**
     * Get a DiscoverySourceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mapName Maps resource name.
     * @param sourceName discovery source resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a DiscoverySourceResource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DiscoverySourceResourceInner get(String resourceGroupName, String mapName, String sourceName);

    /**
     * Create a DiscoverySourceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mapName Maps resource name.
     * @param sourceName discovery source resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a Discovery Source resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DiscoverySourceResourceInner>, DiscoverySourceResourceInner> beginCreateOrUpdate(
        String resourceGroupName, String mapName, String sourceName, DiscoverySourceResourceInner resource);

    /**
     * Create a DiscoverySourceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mapName Maps resource name.
     * @param sourceName discovery source resource.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a Discovery Source resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DiscoverySourceResourceInner>, DiscoverySourceResourceInner> beginCreateOrUpdate(
        String resourceGroupName, String mapName, String sourceName, DiscoverySourceResourceInner resource,
        Context context);

    /**
     * Create a DiscoverySourceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mapName Maps resource name.
     * @param sourceName discovery source resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Discovery Source resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DiscoverySourceResourceInner createOrUpdate(String resourceGroupName, String mapName, String sourceName,
        DiscoverySourceResourceInner resource);

    /**
     * Create a DiscoverySourceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mapName Maps resource name.
     * @param sourceName discovery source resource.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Discovery Source resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DiscoverySourceResourceInner createOrUpdate(String resourceGroupName, String mapName, String sourceName,
        DiscoverySourceResourceInner resource, Context context);

    /**
     * Update a DiscoverySourceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mapName Maps resource name.
     * @param sourceName discovery source resource.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a Discovery Source resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DiscoverySourceResourceInner>, DiscoverySourceResourceInner> beginUpdate(
        String resourceGroupName, String mapName, String sourceName, DiscoverySourceResourceTagsUpdate properties);

    /**
     * Update a DiscoverySourceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mapName Maps resource name.
     * @param sourceName discovery source resource.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a Discovery Source resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DiscoverySourceResourceInner>, DiscoverySourceResourceInner> beginUpdate(
        String resourceGroupName, String mapName, String sourceName, DiscoverySourceResourceTagsUpdate properties,
        Context context);

    /**
     * Update a DiscoverySourceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mapName Maps resource name.
     * @param sourceName discovery source resource.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Discovery Source resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DiscoverySourceResourceInner update(String resourceGroupName, String mapName, String sourceName,
        DiscoverySourceResourceTagsUpdate properties);

    /**
     * Update a DiscoverySourceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mapName Maps resource name.
     * @param sourceName discovery source resource.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Discovery Source resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DiscoverySourceResourceInner update(String resourceGroupName, String mapName, String sourceName,
        DiscoverySourceResourceTagsUpdate properties, Context context);

    /**
     * Delete a DiscoverySourceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mapName Maps resource name.
     * @param sourceName discovery source resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String mapName, String sourceName);

    /**
     * Delete a DiscoverySourceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mapName Maps resource name.
     * @param sourceName discovery source resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String mapName, String sourceName,
        Context context);

    /**
     * Delete a DiscoverySourceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mapName Maps resource name.
     * @param sourceName discovery source resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String mapName, String sourceName);

    /**
     * Delete a DiscoverySourceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mapName Maps resource name.
     * @param sourceName discovery source resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String mapName, String sourceName, Context context);

    /**
     * List DiscoverySourceResource resources by MapsResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mapName Maps resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DiscoverySourceResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DiscoverySourceResourceInner> listByMapsResource(String resourceGroupName, String mapName);

    /**
     * List DiscoverySourceResource resources by MapsResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mapName Maps resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DiscoverySourceResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DiscoverySourceResourceInner> listByMapsResource(String resourceGroupName, String mapName,
        Context context);
}
