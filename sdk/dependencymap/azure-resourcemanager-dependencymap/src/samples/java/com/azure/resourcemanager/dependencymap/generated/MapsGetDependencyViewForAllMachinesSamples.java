// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dependencymap.generated;

import com.azure.resourcemanager.dependencymap.models.DependencyProcessFilter;
import com.azure.resourcemanager.dependencymap.models.GetDependencyViewForAllMachinesRequest;
import com.azure.resourcemanager.dependencymap.models.ProcessNameFilter;
import com.azure.resourcemanager.dependencymap.models.ProcessNameFilterOperator;
import java.util.Arrays;

/**
 * Samples for Maps GetDependencyViewForAllMachines.
 */
public final class MapsGetDependencyViewForAllMachinesSamples {
    /*
     * x-ms-original-file: 2025-07-01-preview/Maps_GetDependencyViewForAllMachines.json
     */
    /**
     * Sample code: Maps_GetDependencyViewForAllMachines_MaximumSet - generated by [MaximumSet] rule.
     * 
     * @param manager Entry point to DependencyMapManager.
     */
    public static void mapsGetDependencyViewForAllMachinesMaximumSetGeneratedByMaximumSetRule(
        com.azure.resourcemanager.dependencymap.DependencyMapManager manager) {
        manager.maps()
            .getDependencyViewForAllMachines("rgdependencyMap", "sfakshfkjsdh",
                new GetDependencyViewForAllMachinesRequest().withFilters(new DependencyProcessFilter()
                    .withProcessNameFilter(new ProcessNameFilter().withOperator(ProcessNameFilterOperator.CONTAINS)
                        .withProcessNames(Arrays.asList("syovpvhbornjajguuihieb")))),
                com.azure.core.util.Context.NONE);
    }
}
