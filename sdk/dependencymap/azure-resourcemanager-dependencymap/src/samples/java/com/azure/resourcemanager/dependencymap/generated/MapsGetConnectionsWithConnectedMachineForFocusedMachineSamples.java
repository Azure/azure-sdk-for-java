// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dependencymap.generated;

import com.azure.resourcemanager.dependencymap.models.DateTimeFilter;
import com.azure.resourcemanager.dependencymap.models.DependencyMapVisualizationFilter;
import com.azure.resourcemanager.dependencymap.models.GetConnectionsWithConnectedMachineForFocusedMachineRequest;
import com.azure.resourcemanager.dependencymap.models.ProcessNameFilter;
import com.azure.resourcemanager.dependencymap.models.ProcessNameFilterOperator;
import java.time.OffsetDateTime;
import java.util.Arrays;

/**
 * Samples for Maps GetConnectionsWithConnectedMachineForFocusedMachine.
 */
public final class MapsGetConnectionsWithConnectedMachineForFocusedMachineSamples {
    /*
     * x-ms-original-file: 2025-05-01-preview/Maps_GetConnectionsWithConnectedMachineForFocusedMachine.json
     */
    /**
     * Sample code: Maps_GetConnectionsWithConnectedMachineForFocusedMachine - generated by [MaximumSet] rule.
     * 
     * @param manager Entry point to DependencyMapManager.
     */
    public static void mapsGetConnectionsWithConnectedMachineForFocusedMachineGeneratedByMaximumSetRule(
        com.azure.resourcemanager.dependencymap.DependencyMapManager manager) {
        manager.maps()
            .getConnectionsWithConnectedMachineForFocusedMachine("rgdependencyMap", "mapsTest1",
                new GetConnectionsWithConnectedMachineForFocusedMachineRequest()
                    .withFocusedMachineId("gagovctcfgocievqwq")
                    .withConnectedMachineId("enaieiloylabljxzvmyrshp")
                    .withFilters(new DependencyMapVisualizationFilter()
                        .withDateTime(
                            new DateTimeFilter().withStartDateTimeUtc(OffsetDateTime.parse("2024-03-29T07:35:15.336Z"))
                                .withEndDateTimeUtc(OffsetDateTime.parse("2024-03-29T07:35:15.336Z")))
                        .withProcessNameFilter(new ProcessNameFilter().withOperator(ProcessNameFilterOperator.CONTAINS)
                            .withProcessNames(Arrays.asList("mnqtvduwzemjcvvmnnoqvcuemwhnz")))),
                com.azure.core.util.Context.NONE);
    }
}
