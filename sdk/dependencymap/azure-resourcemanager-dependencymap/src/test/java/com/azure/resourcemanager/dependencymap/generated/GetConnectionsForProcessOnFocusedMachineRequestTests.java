// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dependencymap.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dependencymap.models.DateTimeFilter;
import com.azure.resourcemanager.dependencymap.models.DependencyMapVisualizationFilter;
import com.azure.resourcemanager.dependencymap.models.GetConnectionsForProcessOnFocusedMachineRequest;
import com.azure.resourcemanager.dependencymap.models.ProcessNameFilter;
import com.azure.resourcemanager.dependencymap.models.ProcessNameFilterOperator;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class GetConnectionsForProcessOnFocusedMachineRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GetConnectionsForProcessOnFocusedMachineRequest model = BinaryData.fromString(
            "{\"focusedMachineId\":\"wzo\",\"processIdOnFocusedMachine\":\"xjtfelluwfzit\",\"filters\":{\"dateTime\":{\"startDateTimeUtc\":\"2021-03-02T22:56:24Z\",\"endDateTimeUtc\":\"2021-10-07T16:40:01Z\"},\"processNameFilter\":{\"operator\":\"notContains\",\"processNames\":[\"lxofpdvhpfxxypin\",\"nmayhuybb\",\"podepoo\",\"inuvamiheogn\"]}}}")
            .toObject(GetConnectionsForProcessOnFocusedMachineRequest.class);
        Assertions.assertEquals("wzo", model.focusedMachineId());
        Assertions.assertEquals("xjtfelluwfzit", model.processIdOnFocusedMachine());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-02T22:56:24Z"),
            model.filters().dateTime().startDateTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-07T16:40:01Z"),
            model.filters().dateTime().endDateTimeUtc());
        Assertions.assertEquals(ProcessNameFilterOperator.NOT_CONTAINS, model.filters().processNameFilter().operator());
        Assertions.assertEquals("lxofpdvhpfxxypin", model.filters().processNameFilter().processNames().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GetConnectionsForProcessOnFocusedMachineRequest model = new GetConnectionsForProcessOnFocusedMachineRequest()
            .withFocusedMachineId("wzo")
            .withProcessIdOnFocusedMachine("xjtfelluwfzit")
            .withFilters(new DependencyMapVisualizationFilter()
                .withDateTime(new DateTimeFilter().withStartDateTimeUtc(OffsetDateTime.parse("2021-03-02T22:56:24Z"))
                    .withEndDateTimeUtc(OffsetDateTime.parse("2021-10-07T16:40:01Z")))
                .withProcessNameFilter(new ProcessNameFilter().withOperator(ProcessNameFilterOperator.NOT_CONTAINS)
                    .withProcessNames(Arrays.asList("lxofpdvhpfxxypin", "nmayhuybb", "podepoo", "inuvamiheogn"))));
        model = BinaryData.fromObject(model).toObject(GetConnectionsForProcessOnFocusedMachineRequest.class);
        Assertions.assertEquals("wzo", model.focusedMachineId());
        Assertions.assertEquals("xjtfelluwfzit", model.processIdOnFocusedMachine());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-02T22:56:24Z"),
            model.filters().dateTime().startDateTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-07T16:40:01Z"),
            model.filters().dateTime().endDateTimeUtc());
        Assertions.assertEquals(ProcessNameFilterOperator.NOT_CONTAINS, model.filters().processNameFilter().operator());
        Assertions.assertEquals("lxofpdvhpfxxypin", model.filters().processNameFilter().processNames().get(0));
    }
}
