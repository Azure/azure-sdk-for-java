// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dependencymap.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dependencymap.models.DateTimeFilter;
import com.azure.resourcemanager.dependencymap.models.DependencyMapVisualizationFilter;
import com.azure.resourcemanager.dependencymap.models.GetConnectionsWithConnectedMachineForFocusedMachineRequest;
import com.azure.resourcemanager.dependencymap.models.ProcessNameFilter;
import com.azure.resourcemanager.dependencymap.models.ProcessNameFilterOperator;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class GetConnectionsWithConnectedMachineForFocusedMachineRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GetConnectionsWithConnectedMachineForFocusedMachineRequest model = BinaryData.fromString(
            "{\"focusedMachineId\":\"bcryffdfd\",\"connectedMachineId\":\"sy\",\"filters\":{\"dateTime\":{\"startDateTimeUtc\":\"2021-03-17T12:19:59Z\",\"endDateTimeUtc\":\"2020-12-22T07:38:44Z\"},\"processNameFilter\":{\"operator\":\"contains\",\"processNames\":[\"msbzjhcrz\",\"vdphlxaolthqtr\",\"qjbpfzfsin\",\"gvfcj\"]}}}")
            .toObject(GetConnectionsWithConnectedMachineForFocusedMachineRequest.class);
        Assertions.assertEquals("bcryffdfd", model.focusedMachineId());
        Assertions.assertEquals("sy", model.connectedMachineId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-17T12:19:59Z"),
            model.filters().dateTime().startDateTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-22T07:38:44Z"),
            model.filters().dateTime().endDateTimeUtc());
        Assertions.assertEquals(ProcessNameFilterOperator.CONTAINS, model.filters().processNameFilter().operator());
        Assertions.assertEquals("msbzjhcrz", model.filters().processNameFilter().processNames().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GetConnectionsWithConnectedMachineForFocusedMachineRequest model
            = new GetConnectionsWithConnectedMachineForFocusedMachineRequest().withFocusedMachineId("bcryffdfd")
                .withConnectedMachineId("sy")
                .withFilters(new DependencyMapVisualizationFilter()
                    .withDateTime(
                        new DateTimeFilter().withStartDateTimeUtc(OffsetDateTime.parse("2021-03-17T12:19:59Z"))
                            .withEndDateTimeUtc(OffsetDateTime.parse("2020-12-22T07:38:44Z")))
                    .withProcessNameFilter(new ProcessNameFilter().withOperator(ProcessNameFilterOperator.CONTAINS)
                        .withProcessNames(Arrays.asList("msbzjhcrz", "vdphlxaolthqtr", "qjbpfzfsin", "gvfcj"))));
        model = BinaryData.fromObject(model).toObject(GetConnectionsWithConnectedMachineForFocusedMachineRequest.class);
        Assertions.assertEquals("bcryffdfd", model.focusedMachineId());
        Assertions.assertEquals("sy", model.connectedMachineId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-17T12:19:59Z"),
            model.filters().dateTime().startDateTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-22T07:38:44Z"),
            model.filters().dateTime().endDateTimeUtc());
        Assertions.assertEquals(ProcessNameFilterOperator.CONTAINS, model.filters().processNameFilter().operator());
        Assertions.assertEquals("msbzjhcrz", model.filters().processNameFilter().processNames().get(0));
    }
}
