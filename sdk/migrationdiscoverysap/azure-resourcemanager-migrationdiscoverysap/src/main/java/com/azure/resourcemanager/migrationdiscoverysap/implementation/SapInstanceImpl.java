// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migrationdiscoverysap.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.migrationdiscoverysap.fluent.models.SapInstanceInner;
import com.azure.resourcemanager.migrationdiscoverysap.models.SapInstance;
import com.azure.resourcemanager.migrationdiscoverysap.models.SapInstanceProperties;
import com.azure.resourcemanager.migrationdiscoverysap.models.SapInstanceTagsUpdate;
import java.util.Collections;
import java.util.Map;

public final class SapInstanceImpl implements SapInstance, SapInstance.Definition, SapInstance.Update {
    private SapInstanceInner innerObject;

    private final com.azure.resourcemanager.migrationdiscoverysap.MigrationDiscoverySapManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SapInstanceProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public SapInstanceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.migrationdiscoverysap.MigrationDiscoverySapManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String sapDiscoverySiteName;

    private String sapInstanceName;

    private SapInstanceTagsUpdate updateProperties;

    public SapInstanceImpl withExistingSapDiscoverySite(String resourceGroupName, String sapDiscoverySiteName) {
        this.resourceGroupName = resourceGroupName;
        this.sapDiscoverySiteName = sapDiscoverySiteName;
        return this;
    }

    public SapInstance create() {
        this.innerObject = serviceManager.serviceClient().getSapInstances().create(resourceGroupName,
            sapDiscoverySiteName, sapInstanceName, this.innerModel(), Context.NONE);
        return this;
    }

    public SapInstance create(Context context) {
        this.innerObject = serviceManager.serviceClient().getSapInstances().create(resourceGroupName,
            sapDiscoverySiteName, sapInstanceName, this.innerModel(), context);
        return this;
    }

    SapInstanceImpl(String name,
        com.azure.resourcemanager.migrationdiscoverysap.MigrationDiscoverySapManager serviceManager) {
        this.innerObject = new SapInstanceInner();
        this.serviceManager = serviceManager;
        this.sapInstanceName = name;
    }

    public SapInstanceImpl update() {
        this.updateProperties = new SapInstanceTagsUpdate();
        return this;
    }

    public SapInstance apply() {
        this.innerObject = serviceManager.serviceClient().getSapInstances().updateWithResponse(resourceGroupName,
            sapDiscoverySiteName, sapInstanceName, updateProperties, Context.NONE).getValue();
        return this;
    }

    public SapInstance apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getSapInstances()
            .updateWithResponse(resourceGroupName, sapDiscoverySiteName, sapInstanceName, updateProperties, context)
            .getValue();
        return this;
    }

    SapInstanceImpl(SapInstanceInner innerObject,
        com.azure.resourcemanager.migrationdiscoverysap.MigrationDiscoverySapManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.sapDiscoverySiteName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "sapDiscoverySites");
        this.sapInstanceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "sapInstances");
    }

    public SapInstance refresh() {
        this.innerObject = serviceManager.serviceClient().getSapInstances()
            .getWithResponse(resourceGroupName, sapDiscoverySiteName, sapInstanceName, Context.NONE).getValue();
        return this;
    }

    public SapInstance refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getSapInstances()
            .getWithResponse(resourceGroupName, sapDiscoverySiteName, sapInstanceName, context).getValue();
        return this;
    }

    public SapInstanceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public SapInstanceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public SapInstanceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateProperties.withTags(tags);
            return this;
        }
    }

    public SapInstanceImpl withProperties(SapInstanceProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
