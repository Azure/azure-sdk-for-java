// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migrationdiscoverysap.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Defines the SAP Migration discovery site resource properties.
 */
@Fluent
public final class SapDiscoverySiteProperties implements JsonSerializable<SapDiscoverySiteProperties> {
    /*
     * The master site ID from Azure Migrate.
     */
    private String masterSiteId;

    /*
     * The migrate project ID from Azure Migrate.
     */
    private String migrateProjectId;

    /*
     * Defines the provisioning states.
     */
    private ProvisioningState provisioningState;

    /*
     * Indicates any errors on the SAP Migration discovery site resource.
     */
    private SapMigrateError errors;

    /**
     * Creates an instance of SapDiscoverySiteProperties class.
     */
    public SapDiscoverySiteProperties() {
    }

    /**
     * Get the masterSiteId property: The master site ID from Azure Migrate.
     * 
     * @return the masterSiteId value.
     */
    public String masterSiteId() {
        return this.masterSiteId;
    }

    /**
     * Set the masterSiteId property: The master site ID from Azure Migrate.
     * 
     * @param masterSiteId the masterSiteId value to set.
     * @return the SapDiscoverySiteProperties object itself.
     */
    public SapDiscoverySiteProperties withMasterSiteId(String masterSiteId) {
        this.masterSiteId = masterSiteId;
        return this;
    }

    /**
     * Get the migrateProjectId property: The migrate project ID from Azure Migrate.
     * 
     * @return the migrateProjectId value.
     */
    public String migrateProjectId() {
        return this.migrateProjectId;
    }

    /**
     * Set the migrateProjectId property: The migrate project ID from Azure Migrate.
     * 
     * @param migrateProjectId the migrateProjectId value to set.
     * @return the SapDiscoverySiteProperties object itself.
     */
    public SapDiscoverySiteProperties withMigrateProjectId(String migrateProjectId) {
        this.migrateProjectId = migrateProjectId;
        return this;
    }

    /**
     * Get the provisioningState property: Defines the provisioning states.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the errors property: Indicates any errors on the SAP Migration discovery site resource.
     * 
     * @return the errors value.
     */
    public SapMigrateError errors() {
        return this.errors;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (errors() != null) {
            errors().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("masterSiteId", this.masterSiteId);
        jsonWriter.writeStringField("migrateProjectId", this.migrateProjectId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SapDiscoverySiteProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SapDiscoverySiteProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SapDiscoverySiteProperties.
     */
    public static SapDiscoverySiteProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SapDiscoverySiteProperties deserializedSapDiscoverySiteProperties = new SapDiscoverySiteProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("masterSiteId".equals(fieldName)) {
                    deserializedSapDiscoverySiteProperties.masterSiteId = reader.getString();
                } else if ("migrateProjectId".equals(fieldName)) {
                    deserializedSapDiscoverySiteProperties.migrateProjectId = reader.getString();
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedSapDiscoverySiteProperties.provisioningState
                        = ProvisioningState.fromString(reader.getString());
                } else if ("errors".equals(fieldName)) {
                    deserializedSapDiscoverySiteProperties.errors = SapMigrateError.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSapDiscoverySiteProperties;
        });
    }
}
