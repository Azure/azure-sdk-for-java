// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migrationdiscoverysap.models;

import com.azure.core.util.ExpandableStringEnum;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.Collection;

/**
 * This is Operating System on which the host server is running.
 */
public final class OperatingSystem extends ExpandableStringEnum<OperatingSystem> {
    /**
     * Static value IBMAIX for OperatingSystem.
     */
    public static final OperatingSystem IBMAIX = fromString("IBMAIX");

    /**
     * Static value RedHat for OperatingSystem.
     */
    public static final OperatingSystem RED_HAT = fromString("RedHat");

    /**
     * Static value SUSE for OperatingSystem.
     */
    public static final OperatingSystem SUSE = fromString("SUSE");

    /**
     * Static value Solaris for OperatingSystem.
     */
    public static final OperatingSystem SOLARIS = fromString("Solaris");

    /**
     * Static value Unix for OperatingSystem.
     */
    public static final OperatingSystem UNIX = fromString("Unix");

    /**
     * Static value WindowsServer for OperatingSystem.
     */
    public static final OperatingSystem WINDOWS_SERVER = fromString("WindowsServer");

    /**
     * Creates a new instance of OperatingSystem value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public OperatingSystem() {
    }

    /**
     * Creates or finds a OperatingSystem from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding OperatingSystem.
     */
    @JsonCreator
    public static OperatingSystem fromString(String name) {
        return fromString(name, OperatingSystem.class);
    }

    /**
     * Gets known OperatingSystem values.
     * 
     * @return known OperatingSystem values.
     */
    public static Collection<OperatingSystem> values() {
        return values(OperatingSystem.class);
    }
}
