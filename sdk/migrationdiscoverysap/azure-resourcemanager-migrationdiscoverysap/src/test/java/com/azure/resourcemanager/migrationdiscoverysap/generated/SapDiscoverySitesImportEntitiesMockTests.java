// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migrationdiscoverysap.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.HttpHeaders;
import com.azure.core.http.HttpRequest;
import com.azure.core.http.HttpResponse;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.resourcemanager.migrationdiscoverysap.MigrationDiscoverySapManager;
import com.azure.resourcemanager.migrationdiscoverysap.models.OperationStatusResult;
import java.nio.ByteBuffer;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.mockito.ArgumentCaptor;
import org.mockito.Mockito;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

public final class SapDiscoverySitesImportEntitiesMockTests {
    @Test
    public void testImportEntities() throws Exception {
        HttpClient httpClient = Mockito.mock(HttpClient.class);
        HttpResponse httpResponse = Mockito.mock(HttpResponse.class);
        ArgumentCaptor<HttpRequest> httpRequest = ArgumentCaptor.forClass(HttpRequest.class);

        String responseStr
            = "{\"id\":\"uofqwe\",\"name\":\"hmenevfyexfwhybc\",\"status\":\"bvyvdcsity\",\"percentComplete\":40.747864,\"startTime\":\"2021-01-25T02:11:12Z\",\"endTime\":\"2021-03-17T15:40:41Z\",\"operations\":[{\"id\":\"hfiqscjeypvhe\",\"name\":\"kgqhcjrefovg\",\"status\":\"kqsleyyvxy\",\"percentComplete\":16.411882,\"startTime\":\"2021-03-22T06:48:14Z\",\"endTime\":\"2021-04-09T05:45:58Z\",\"operations\":[{\"id\":\"gjcrcczsqpjhvm\",\"name\":\"jvnysounqe\",\"status\":\"a\",\"percentComplete\":9.069002,\"startTime\":\"2021-02-26T09:02:26Z\",\"endTime\":\"2021-10-06T07:30:47Z\",\"operations\":[{\"status\":\"hltrpmopjmcmatuo\"},{\"status\":\"thfuiuaodsfcpkvx\"},{\"status\":\"dpuozmyz\"},{\"status\":\"dagfuaxbezyiuok\"}]},{\"id\":\"hrdxwzywqsmbs\",\"name\":\"exim\",\"status\":\"ryocfsfksymdd\",\"percentComplete\":15.521979,\"startTime\":\"2021-06-14T21:05:42Z\",\"endTime\":\"2021-01-05T19:47:06Z\",\"operations\":[{\"status\":\"qyud\"},{\"status\":\"o\"},{\"status\":\"rq\"},{\"status\":\"b\"}]},{\"id\":\"zvyifqrvkdvj\",\"name\":\"lrmv\",\"status\":\"d\",\"percentComplete\":32.38682,\"startTime\":\"2021-08-07T11:35:41Z\",\"endTime\":\"2021-05-03T17:45:11Z\",\"operations\":[{\"status\":\"lexxbczwtru\"},{\"status\":\"iqzbq\"},{\"status\":\"vsovmyokac\"}]},{\"id\":\"w\",\"name\":\"zdobpxjmflbvvnch\",\"status\":\"kcciwwzjuqkhr\",\"percentComplete\":93.71816,\"startTime\":\"2021-10-14T07:23:56Z\",\"endTime\":\"2021-10-13T04:47:14Z\",\"operations\":[{\"status\":\"oskg\"},{\"status\":\"sauuimj\"},{\"status\":\"vxieduugidyj\"},{\"status\":\"rfbyaosvexcso\"}]}]},{\"id\":\"hocohslkev\",\"name\":\"ggzfbu\",\"status\":\"fmvfaxkffeiit\",\"percentComplete\":31.103909,\"startTime\":\"2021-03-03T15:08:10Z\",\"endTime\":\"2021-02-27T12:32:19Z\",\"operations\":[{\"id\":\"xmzsbbzogg\",\"name\":\"rxwburv\",\"status\":\"xxjnspydptk\",\"percentComplete\":34.515266,\"startTime\":\"2021-12-09T16:13:48Z\",\"endTime\":\"2021-04-27T14:18:48Z\",\"operations\":[{\"status\":\"udwtiukbl\"},{\"status\":\"ngkpocipazy\"},{\"status\":\"o\"},{\"status\":\"gukgjnpiucgygevq\"}]},{\"id\":\"yp\",\"name\":\"bpizcdrqjsdpydn\",\"status\":\"yhxdeoejzicwi\",\"percentComplete\":36.28927,\"startTime\":\"2021-09-22T07:17:11Z\",\"endTime\":\"2021-05-15T05:25:36Z\",\"operations\":[{\"status\":\"ishc\"},{\"status\":\"khaj\"},{\"status\":\"eyeam\"},{\"status\":\"p\"}]},{\"id\":\"alpbuxwgipwhon\",\"name\":\"kgshwa\",\"status\":\"kix\",\"percentComplete\":27.76388,\"startTime\":\"2021-01-11T20:58:11Z\",\"endTime\":\"2021-12-05T01:31:14Z\",\"operations\":[{\"status\":\"tmryw\"},{\"status\":\"uzoqft\"},{\"status\":\"yqzrnkcqvyxlw\"}]},{\"id\":\"sicohoqqnwvlry\",\"name\":\"w\",\"status\":\"heun\",\"percentComplete\":93.34921,\"startTime\":\"2021-10-16T07:10:15Z\",\"endTime\":\"2021-07-05T11:46:20Z\",\"operations\":[{\"status\":\"onocukok\"},{\"status\":\"yaxuconuqszfkb\"}]}]},{\"id\":\"wrmjmwvvjektc\",\"name\":\"enhwlrs\",\"status\":\"frzpwvlqdqgb\",\"percentComplete\":64.65002,\"startTime\":\"2021-02-23T11:21:53Z\",\"endTime\":\"2021-05-04T00:16:05Z\",\"operations\":[{\"id\":\"cktvfcivfsnkymuc\",\"name\":\"hjfbebrjcxe\",\"status\":\"fuwutttxf\",\"percentComplete\":44.331276,\"startTime\":\"2021-07-03T14:23:35Z\",\"endTime\":\"2021-05-23T19:20:57Z\",\"operations\":[{\"status\":\"epcyvahfnlj\"},{\"status\":\"yq\"},{\"status\":\"j\"}]},{\"id\":\"j\",\"name\":\"idokgjlj\",\"status\":\"oxgvclt\",\"percentComplete\":68.50667,\"startTime\":\"2021-04-14T10:54:43Z\",\"endTime\":\"2021-09-18T15:38:18Z\",\"operations\":[{\"status\":\"esz\"},{\"status\":\"hbijhtxfvgxb\"},{\"status\":\"smx\"},{\"status\":\"eh\"}]},{\"id\":\"ec\",\"name\":\"odebfqkkrbmpu\",\"status\":\"gr\",\"percentComplete\":17.81757,\"startTime\":\"2021-02-02T06:18:35Z\",\"endTime\":\"2021-07-31T18:29:57Z\",\"operations\":[{\"status\":\"zpuzycisp\"},{\"status\":\"qzahmgkbrp\"},{\"status\":\"y\"}]},{\"id\":\"bnuqqkpik\",\"name\":\"rgvtqag\",\"status\":\"buynhijggm\",\"percentComplete\":50.53692,\"startTime\":\"2021-01-01T18:17:26Z\",\"endTime\":\"2021-09-16T13:37:10Z\",\"operations\":[{\"status\":\"trcvpnazzmh\"}]}]},{\"id\":\"mpxttdbhrbnlankx\",\"name\":\"skpbhenbtkcxywn\",\"status\":\"tnrsyn\",\"percentComplete\":52.88253,\"startTime\":\"2021-03-29T15:40:05Z\",\"endTime\":\"2021-06-30T12:37:43Z\",\"operations\":[{\"id\":\"fclhaaxdbabphlwr\",\"name\":\"fkts\",\"status\":\"hsucoc\",\"percentComplete\":47.56353,\"startTime\":\"2021-07-24T19:44:14Z\",\"endTime\":\"2021-07-01T18:19:25Z\",\"operations\":[{\"status\":\"twwrqp\"}]}]}]}";

        Mockito.when(httpResponse.getStatusCode()).thenReturn(200);
        Mockito.when(httpResponse.getHeaders()).thenReturn(new HttpHeaders());
        Mockito.when(httpResponse.getBody())
            .thenReturn(Flux.just(ByteBuffer.wrap(responseStr.getBytes(StandardCharsets.UTF_8))));
        Mockito.when(httpResponse.getBodyAsByteArray())
            .thenReturn(Mono.just(responseStr.getBytes(StandardCharsets.UTF_8)));
        Mockito.when(httpClient.send(httpRequest.capture(), Mockito.any())).thenReturn(Mono.defer(() -> {
            Mockito.when(httpResponse.getRequest()).thenReturn(httpRequest.getValue());
            return Mono.just(httpResponse);
        }));

        MigrationDiscoverySapManager manager = MigrationDiscoverySapManager.configure().withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        OperationStatusResult response
            = manager.sapDiscoverySites().importEntities("zj", "yggdtjixh", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("uofqwe", response.id());
        Assertions.assertEquals("hmenevfyexfwhybc", response.name());
        Assertions.assertEquals("bvyvdcsity", response.status());
        Assertions.assertEquals(40.747864F, response.percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-25T02:11:12Z"), response.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-17T15:40:41Z"), response.endTime());
        Assertions.assertEquals("hfiqscjeypvhe", response.operations().get(0).id());
        Assertions.assertEquals("kgqhcjrefovg", response.operations().get(0).name());
        Assertions.assertEquals("kqsleyyvxy", response.operations().get(0).status());
        Assertions.assertEquals(16.411882F, response.operations().get(0).percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-22T06:48:14Z"), response.operations().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-09T05:45:58Z"), response.operations().get(0).endTime());
        Assertions.assertEquals("gjcrcczsqpjhvm", response.operations().get(0).operations().get(0).id());
        Assertions.assertEquals("jvnysounqe", response.operations().get(0).operations().get(0).name());
        Assertions.assertEquals("a", response.operations().get(0).operations().get(0).status());
        Assertions.assertEquals(9.069002F, response.operations().get(0).operations().get(0).percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-26T09:02:26Z"),
            response.operations().get(0).operations().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-06T07:30:47Z"),
            response.operations().get(0).operations().get(0).endTime());
        Assertions.assertEquals("hltrpmopjmcmatuo",
            response.operations().get(0).operations().get(0).operations().get(0).status());
    }
}
