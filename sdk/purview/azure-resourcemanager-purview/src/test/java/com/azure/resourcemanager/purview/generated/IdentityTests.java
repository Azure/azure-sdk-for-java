// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.purview.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.purview.models.Identity;
import com.azure.resourcemanager.purview.models.Type;
import com.azure.resourcemanager.purview.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class IdentityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Identity model =
            BinaryData
                .fromString(
                    "{\"principalId\":\"e\",\"tenantId\":\"locx\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"obnbdxkqpxokaj\":{\"clientId\":\"rhhbcs\",\"principalId\":\"ummajtjaod\"},\"odgmaajrmvdjwz\":{\"clientId\":\"npime\",\"principalId\":\"stxgc\"},\"ukdkexxppofmxa\":{\"clientId\":\"ovmclwhijcoejct\",\"principalId\":\"aqsqsycbkbfk\"},\"bqe\":{\"clientId\":\"fjpgddtocjjxhvp\",\"principalId\":\"uexhdzx\"}}}")
                .toObject(Identity.class);
        Assertions.assertEquals(Type.SYSTEM_ASSIGNED, model.type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Identity model =
            new Identity()
                .withType(Type.SYSTEM_ASSIGNED)
                .withUserAssignedIdentities(
                    mapOf(
                        "obnbdxkqpxokaj",
                        new UserAssignedIdentity(),
                        "odgmaajrmvdjwz",
                        new UserAssignedIdentity(),
                        "ukdkexxppofmxa",
                        new UserAssignedIdentity(),
                        "bqe",
                        new UserAssignedIdentity()));
        model = BinaryData.fromObject(model).toObject(Identity.class);
        Assertions.assertEquals(Type.SYSTEM_ASSIGNED, model.type());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
