// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.purview.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.purview.PurviewManager;
import com.azure.resourcemanager.purview.fluent.models.DefaultAccountPayloadInner;
import com.azure.resourcemanager.purview.models.DefaultAccountPayload;
import com.azure.resourcemanager.purview.models.ScopeType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DefaultAccountsSetWithResponseMockTests {
    @Test
    public void testSetWithResponse() throws Exception {
        String responseStr
            = "{\"accountName\":\"ikdgszywkbir\",\"resourceGroupName\":\"uzhlhkjoqrv\",\"scope\":\"aatjinrvgoupmfi\",\"scopeTenantId\":\"fggjioolvr\",\"scopeType\":\"Tenant\",\"subscriptionId\":\"tkkgllqwjy\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PurviewManager manager = PurviewManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DefaultAccountPayload response = manager.defaultAccounts()
            .setWithResponse(new DefaultAccountPayloadInner().withAccountName("bopgxedkowepbqp")
                .withResourceGroupName("fkbw")
                .withScope("snjvcdwxlpqekftn")
                .withScopeTenantId("tjsyin")
                .withScopeType(ScopeType.TENANT)
                .withSubscriptionId("atmtdhtmdvy"), com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ikdgszywkbir", response.accountName());
        Assertions.assertEquals("uzhlhkjoqrv", response.resourceGroupName());
        Assertions.assertEquals("aatjinrvgoupmfi", response.scope());
        Assertions.assertEquals("fggjioolvr", response.scopeTenantId());
        Assertions.assertEquals(ScopeType.TENANT, response.scopeType());
        Assertions.assertEquals("tkkgllqwjy", response.subscriptionId());
    }
}
