// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.purview.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.purview.PurviewManager;
import com.azure.resourcemanager.purview.models.Account;
import com.azure.resourcemanager.purview.models.PublicNetworkAccess;
import com.azure.resourcemanager.purview.models.Type;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AccountsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"cloudConnectors\":{\"awsExternalId\":\"fpubjibwwi\"},\"createdAt\":\"2021-06-04T20:33:13Z\",\"createdBy\":\"qkvpuvksgplsakn\",\"createdByObjectId\":\"fsynljphuop\",\"endpoints\":{\"catalog\":\"lqiyntorzihl\",\"guardian\":\"sjswsrms\",\"scan\":\"zrpzb\"},\"friendlyName\":\"ckqqzqioxiysui\",\"managedResourceGroupName\":\"ynkedyatrwyhqmib\",\"managedResources\":{\"eventHubNamespace\":\"wit\",\"resourceGroup\":\"ypyynpcdpumnzg\",\"storageAccount\":\"z\"},\"privateEndpointConnections\":[{\"properties\":{\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"sorgj\"},\"id\":\"xbldtlwwrlkdmtn\",\"name\":\"vokotllxdyh\",\"type\":\"syocogjltdtbnnha\"},{\"properties\":{\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"kvci\"},\"id\":\"hnvpamqgxq\",\"name\":\"u\",\"type\":\"zikywgg\"}],\"provisioningState\":\"Deleting\",\"publicNetworkAccess\":\"NotSpecified\"},\"sku\":{\"capacity\":825727567,\"name\":\"Standard\"},\"identity\":{\"principalId\":\"ipicc\",\"tenantId\":\"kzivgvvcnayrh\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"tchealmf\":{\"clientId\":\"ueedndrdvs\",\"principalId\":\"wq\"},\"piohgwxrtfu\":{\"clientId\":\"d\",\"principalId\":\"ygdvwv\"}}},\"location\":\"epxgyqagvr\",\"tags\":{\"dblx\":\"pkukghi\",\"fnjhfjxwmszkkfo\":\"wi\",\"kzikfjawneaivxwc\":\"rey\",\"fatkld\":\"elpcirelsfeaenwa\"},\"id\":\"xbjhwuaanozjosph\",\"name\":\"oulpjrv\",\"type\":\"ag\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PurviewManager manager = PurviewManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Account> response = manager.accounts().list("e", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("epxgyqagvr", response.iterator().next().location());
        Assertions.assertEquals("pkukghi", response.iterator().next().tags().get("dblx"));
        Assertions.assertEquals(Type.USER_ASSIGNED, response.iterator().next().identity().type());
        Assertions.assertEquals("ynkedyatrwyhqmib", response.iterator().next().managedResourceGroupName());
        Assertions.assertEquals(PublicNetworkAccess.NOT_SPECIFIED, response.iterator().next().publicNetworkAccess());
    }
}
