// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.purview.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.purview.PurviewManager;
import com.azure.resourcemanager.purview.models.DefaultAccountPayload;
import com.azure.resourcemanager.purview.models.ScopeType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DefaultAccountsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"accountName\":\"xqv\",\"resourceGroupName\":\"vuoy\",\"scope\":\"ccelve\",\"scopeTenantId\":\"ypql\",\"scopeType\":\"Subscription\",\"subscriptionId\":\"kerqwkyh\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PurviewManager manager = PurviewManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DefaultAccountPayload response = manager.defaultAccounts()
            .getWithResponse(UUID.fromString("a2f3262c-6042-4b0e-af83-179caf215e91"), ScopeType.SUBSCRIPTION, "pfcqdp",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("xqv", response.accountName());
        Assertions.assertEquals("vuoy", response.resourceGroupName());
        Assertions.assertEquals("ccelve", response.scope());
        Assertions.assertEquals("ypql", response.scopeTenantId());
        Assertions.assertEquals(ScopeType.SUBSCRIPTION, response.scopeType());
        Assertions.assertEquals("kerqwkyh", response.subscriptionId());
    }
}
