// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.purview.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.purview.fluent.models.DefaultAccountPayloadInner;
import com.azure.resourcemanager.purview.models.ScopeType;
import org.junit.jupiter.api.Assertions;

public final class DefaultAccountPayloadInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DefaultAccountPayloadInner model = BinaryData.fromString(
            "{\"accountName\":\"hxepcyvahfnlj\",\"resourceGroupName\":\"qxj\",\"scope\":\"ujqgidok\",\"scopeTenantId\":\"ljyoxgvcltb\",\"scopeType\":\"Tenant\",\"subscriptionId\":\"ghkjeszzhbi\"}")
            .toObject(DefaultAccountPayloadInner.class);
        Assertions.assertEquals("hxepcyvahfnlj", model.accountName());
        Assertions.assertEquals("qxj", model.resourceGroupName());
        Assertions.assertEquals("ujqgidok", model.scope());
        Assertions.assertEquals("ljyoxgvcltb", model.scopeTenantId());
        Assertions.assertEquals(ScopeType.TENANT, model.scopeType());
        Assertions.assertEquals("ghkjeszzhbi", model.subscriptionId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DefaultAccountPayloadInner model = new DefaultAccountPayloadInner().withAccountName("hxepcyvahfnlj")
            .withResourceGroupName("qxj")
            .withScope("ujqgidok")
            .withScopeTenantId("ljyoxgvcltb")
            .withScopeType(ScopeType.TENANT)
            .withSubscriptionId("ghkjeszzhbi");
        model = BinaryData.fromObject(model).toObject(DefaultAccountPayloadInner.class);
        Assertions.assertEquals("hxepcyvahfnlj", model.accountName());
        Assertions.assertEquals("qxj", model.resourceGroupName());
        Assertions.assertEquals("ujqgidok", model.scope());
        Assertions.assertEquals("ljyoxgvcltb", model.scopeTenantId());
        Assertions.assertEquals(ScopeType.TENANT, model.scopeType());
        Assertions.assertEquals("ghkjeszzhbi", model.subscriptionId());
    }
}
