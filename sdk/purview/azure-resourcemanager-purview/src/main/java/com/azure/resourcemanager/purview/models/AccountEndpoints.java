// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.purview.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The account endpoints.
 */
@Immutable
public class AccountEndpoints implements JsonSerializable<AccountEndpoints> {
    /*
     * Gets the catalog endpoint.
     */
    private String catalog;

    /*
     * Gets the guardian endpoint.
     */
    private String guardian;

    /*
     * Gets the scan endpoint.
     */
    private String scan;

    /**
     * Creates an instance of AccountEndpoints class.
     */
    public AccountEndpoints() {
    }

    /**
     * Get the catalog property: Gets the catalog endpoint.
     * 
     * @return the catalog value.
     */
    public String catalog() {
        return this.catalog;
    }

    /**
     * Set the catalog property: Gets the catalog endpoint.
     * 
     * @param catalog the catalog value to set.
     * @return the AccountEndpoints object itself.
     */
    AccountEndpoints withCatalog(String catalog) {
        this.catalog = catalog;
        return this;
    }

    /**
     * Get the guardian property: Gets the guardian endpoint.
     * 
     * @return the guardian value.
     */
    public String guardian() {
        return this.guardian;
    }

    /**
     * Set the guardian property: Gets the guardian endpoint.
     * 
     * @param guardian the guardian value to set.
     * @return the AccountEndpoints object itself.
     */
    AccountEndpoints withGuardian(String guardian) {
        this.guardian = guardian;
        return this;
    }

    /**
     * Get the scan property: Gets the scan endpoint.
     * 
     * @return the scan value.
     */
    public String scan() {
        return this.scan;
    }

    /**
     * Set the scan property: Gets the scan endpoint.
     * 
     * @param scan the scan value to set.
     * @return the AccountEndpoints object itself.
     */
    AccountEndpoints withScan(String scan) {
        this.scan = scan;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AccountEndpoints from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AccountEndpoints if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AccountEndpoints.
     */
    public static AccountEndpoints fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AccountEndpoints deserializedAccountEndpoints = new AccountEndpoints();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("catalog".equals(fieldName)) {
                    deserializedAccountEndpoints.catalog = reader.getString();
                } else if ("guardian".equals(fieldName)) {
                    deserializedAccountEndpoints.guardian = reader.getString();
                } else if ("scan".equals(fieldName)) {
                    deserializedAccountEndpoints.scan = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAccountEndpoints;
        });
    }
}
