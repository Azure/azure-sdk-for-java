// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.purview.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The Account access keys.
 */
@Fluent
public final class AccessKeysInner implements JsonSerializable<AccessKeysInner> {
    /*
     * Gets or sets the primary connection string.
     */
    private String atlasKafkaPrimaryEndpoint;

    /*
     * Gets or sets the secondary connection string.
     */
    private String atlasKafkaSecondaryEndpoint;

    /**
     * Creates an instance of AccessKeysInner class.
     */
    public AccessKeysInner() {
    }

    /**
     * Get the atlasKafkaPrimaryEndpoint property: Gets or sets the primary connection string.
     * 
     * @return the atlasKafkaPrimaryEndpoint value.
     */
    public String atlasKafkaPrimaryEndpoint() {
        return this.atlasKafkaPrimaryEndpoint;
    }

    /**
     * Set the atlasKafkaPrimaryEndpoint property: Gets or sets the primary connection string.
     * 
     * @param atlasKafkaPrimaryEndpoint the atlasKafkaPrimaryEndpoint value to set.
     * @return the AccessKeysInner object itself.
     */
    public AccessKeysInner withAtlasKafkaPrimaryEndpoint(String atlasKafkaPrimaryEndpoint) {
        this.atlasKafkaPrimaryEndpoint = atlasKafkaPrimaryEndpoint;
        return this;
    }

    /**
     * Get the atlasKafkaSecondaryEndpoint property: Gets or sets the secondary connection string.
     * 
     * @return the atlasKafkaSecondaryEndpoint value.
     */
    public String atlasKafkaSecondaryEndpoint() {
        return this.atlasKafkaSecondaryEndpoint;
    }

    /**
     * Set the atlasKafkaSecondaryEndpoint property: Gets or sets the secondary connection string.
     * 
     * @param atlasKafkaSecondaryEndpoint the atlasKafkaSecondaryEndpoint value to set.
     * @return the AccessKeysInner object itself.
     */
    public AccessKeysInner withAtlasKafkaSecondaryEndpoint(String atlasKafkaSecondaryEndpoint) {
        this.atlasKafkaSecondaryEndpoint = atlasKafkaSecondaryEndpoint;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("atlasKafkaPrimaryEndpoint", this.atlasKafkaPrimaryEndpoint);
        jsonWriter.writeStringField("atlasKafkaSecondaryEndpoint", this.atlasKafkaSecondaryEndpoint);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AccessKeysInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AccessKeysInner if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AccessKeysInner.
     */
    public static AccessKeysInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AccessKeysInner deserializedAccessKeysInner = new AccessKeysInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("atlasKafkaPrimaryEndpoint".equals(fieldName)) {
                    deserializedAccessKeysInner.atlasKafkaPrimaryEndpoint = reader.getString();
                } else if ("atlasKafkaSecondaryEndpoint".equals(fieldName)) {
                    deserializedAccessKeysInner.atlasKafkaSecondaryEndpoint = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAccessKeysInner;
        });
    }
}
