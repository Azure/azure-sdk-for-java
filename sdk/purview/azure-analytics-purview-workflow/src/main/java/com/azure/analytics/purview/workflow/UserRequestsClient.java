// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.purview.workflow;

import com.azure.analytics.purview.workflow.implementation.UserRequestsImpl;
import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;

/** Initializes a new instance of the synchronous PurviewWorkflowClient type. */
@ServiceClient(builder = UserRequestsClientBuilder.class)
public final class UserRequestsClient {
    @Generated private final UserRequestsImpl serviceClient;

    /**
     * Initializes an instance of UserRequestsClient class.
     *
     * @param serviceClient the service client implementation.
     */
    @Generated
    UserRequestsClient(UserRequestsImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Submit a user request for requestor, a user request describes user ask to do operation(s) on Purview. If any
     * workflow's trigger matches with an operation in request, a run of the workflow is created.
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     operations (Required): [
     *          (Required){
     *             type: String(CreateTerm/UpdateTerm/DeleteTerm/ImportTerms/UpdateAsset/GrantDataAccess) (Required)
     *             payload: Object (Required)
     *         }
     *     ]
     *     comment: String (Optional)
     * }
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     requestId: String (Required)
     *     requestor: String (Required)
     *     operations (Required): [
     *          (Required){
     *             type: String(CreateTerm/UpdateTerm/DeleteTerm/ImportTerms/UpdateAsset/GrantDataAccess) (Required)
     *             payload: Object (Required)
     *             workflowRunIds (Optional): [
     *                 String (Optional)
     *             ]
     *         }
     *     ]
     *     comment: String (Optional)
     *     status: String(NotStarted/InProgress/Failed/Completed/Canceling/CancellationFailed/Canceled) (Required)
     * }
     * }</pre>
     *
     * @param userRequestsPayload The payload of submitting a user request.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return describes user ask to do operation(s) on Purview along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> submitWithResponse(BinaryData userRequestsPayload, RequestOptions requestOptions) {
        return this.serviceClient.submitWithResponse(userRequestsPayload, requestOptions);
    }
}
