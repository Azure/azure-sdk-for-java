// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.purview.datamap.generated;

import com.azure.analytics.purview.datamap.models.AtlasAttributeDef;
import com.azure.analytics.purview.datamap.models.AtlasClassificationDef;
import com.azure.analytics.purview.datamap.models.AtlasEntityDef;
import com.azure.analytics.purview.datamap.models.AtlasEnumDef;
import com.azure.analytics.purview.datamap.models.AtlasEnumElementDef;
import com.azure.analytics.purview.datamap.models.AtlasRelationshipAttributeDef;
import com.azure.analytics.purview.datamap.models.AtlasRelationshipDef;
import com.azure.analytics.purview.datamap.models.AtlasRelationshipEndDef;
import com.azure.analytics.purview.datamap.models.AtlasStructDef;
import com.azure.analytics.purview.datamap.models.AtlasTypesDef;
import com.azure.analytics.purview.datamap.models.CardinalityValue;
import com.azure.analytics.purview.datamap.models.RelationshipCategory;
import com.azure.analytics.purview.datamap.models.TypeCategory;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class TypeListTests extends DataMapClientTestBase {
    @Test
    @Disabled
    public void testTypeListTests() {
        // method invocation
        AtlasTypesDef response = typeDefinitionClient.get(true, null);

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "classificationDefs"
        List<AtlasClassificationDef> responseClassificationDefs = response.getClassificationDefs();
        AtlasClassificationDef responseClassificationDefsFirstItem = responseClassificationDefs.iterator().next();
        Assertions.assertNotNull(responseClassificationDefsFirstItem);
        Assertions.assertEquals(TypeCategory.CLASSIFICATION, responseClassificationDefsFirstItem.getCategory());
        Assertions.assertEquals(1604730971448L, responseClassificationDefsFirstItem.getCreateTime());
        Assertions.assertEquals("ExampleCreator", responseClassificationDefsFirstItem.getCreatedBy());
        Assertions.assertEquals("Chile Identity Card Number", responseClassificationDefsFirstItem.getDescription());
        Assertions.assertEquals("bd97460e-e5db-4701-8158-5b4062cf8a10", responseClassificationDefsFirstItem.getGuid());
        Assertions.assertEquals("MICROSOFT.GOVERNMENT.CHILE.CDI_NUMBER", responseClassificationDefsFirstItem.getName());
        Assertions.assertNotNull(responseClassificationDefsFirstItem.getOptions());
        Assertions.assertEquals("1.0", responseClassificationDefsFirstItem.getTypeVersion());
        Assertions.assertEquals(1604730971448L, responseClassificationDefsFirstItem.getUpdateTime());
        Assertions.assertEquals("ExampleUpdator", responseClassificationDefsFirstItem.getUpdatedBy());
        Assertions.assertEquals(1L, responseClassificationDefsFirstItem.getVersion());
        List<AtlasAttributeDef> responseClassificationDefsFirstItemAttributeDefs
            = responseClassificationDefsFirstItem.getAttributeDefs();
        Assertions.assertEquals(0, responseClassificationDefsFirstItemAttributeDefs.size());
        List<String> responseClassificationDefsFirstItemEntityTypes
            = responseClassificationDefsFirstItem.getEntityTypes();
        Assertions.assertEquals(0, responseClassificationDefsFirstItemEntityTypes.size());
        List<String> responseClassificationDefsFirstItemSubTypes = responseClassificationDefsFirstItem.getSubTypes();
        Assertions.assertEquals(0, responseClassificationDefsFirstItemSubTypes.size());
        List<String> responseClassificationDefsFirstItemSuperTypes
            = responseClassificationDefsFirstItem.getSuperTypes();
        Assertions.assertEquals(0, responseClassificationDefsFirstItemSuperTypes.size());
        // verify property "entityDefs"
        List<AtlasEntityDef> responseEntityDefs = response.getEntityDefs();
        AtlasEntityDef responseEntityDefsFirstItem = responseEntityDefs.iterator().next();
        Assertions.assertNotNull(responseEntityDefsFirstItem);
        Assertions.assertEquals(TypeCategory.ENTITY, responseEntityDefsFirstItem.getCategory());
        Assertions.assertEquals(1604730605047L, responseEntityDefsFirstItem.getCreateTime());
        Assertions.assertEquals("ExampleCreator", responseEntityDefsFirstItem.getCreatedBy());
        Assertions.assertEquals("sap_ecc_data_element", responseEntityDefsFirstItem.getDescription());
        Assertions.assertEquals("7c53da5d-2797-4e8a-9b89-dd9b3b26ffa8", responseEntityDefsFirstItem.getGuid());
        Assertions.assertEquals("sap_ecc_data_element", responseEntityDefsFirstItem.getName());
        Assertions.assertEquals("SAP ECC", responseEntityDefsFirstItem.getServiceType());
        Assertions.assertEquals("1.0", responseEntityDefsFirstItem.getTypeVersion());
        Assertions.assertEquals(1604730605047L, responseEntityDefsFirstItem.getUpdateTime());
        Assertions.assertEquals("ExampleUpdator", responseEntityDefsFirstItem.getUpdatedBy());
        Assertions.assertEquals(1L, responseEntityDefsFirstItem.getVersion());
        Assertions.assertEquals("1", responseEntityDefsFirstItem.getLastModifiedTS());
        List<AtlasAttributeDef> responseEntityDefsFirstItemAttributeDefs
            = responseEntityDefsFirstItem.getAttributeDefs();
        AtlasAttributeDef responseEntityDefsFirstItemAttributeDefsFirstItem
            = responseEntityDefsFirstItemAttributeDefs.iterator().next();
        Assertions.assertNotNull(responseEntityDefsFirstItemAttributeDefsFirstItem);
        Assertions.assertEquals(CardinalityValue.SINGLE,
            responseEntityDefsFirstItemAttributeDefsFirstItem.getCardinality());
        Assertions.assertEquals(false, responseEntityDefsFirstItemAttributeDefsFirstItem.isIncludeInNotification());
        Assertions.assertEquals(false, responseEntityDefsFirstItemAttributeDefsFirstItem.isIndexable());
        Assertions.assertEquals(true, responseEntityDefsFirstItemAttributeDefsFirstItem.isOptional());
        Assertions.assertEquals(false, responseEntityDefsFirstItemAttributeDefsFirstItem.isUnique());
        Assertions.assertEquals("dataType", responseEntityDefsFirstItemAttributeDefsFirstItem.getName());
        Assertions.assertEquals("string", responseEntityDefsFirstItemAttributeDefsFirstItem.getTypeName());
        Assertions.assertEquals(1, responseEntityDefsFirstItemAttributeDefsFirstItem.getValuesMaxCount());
        Assertions.assertEquals(0, responseEntityDefsFirstItemAttributeDefsFirstItem.getValuesMinCount());
        List<String> responseEntityDefsFirstItemSubTypes = responseEntityDefsFirstItem.getSubTypes();
        Assertions.assertEquals(0, responseEntityDefsFirstItemSubTypes.size());
        List<String> responseEntityDefsFirstItemSuperTypes = responseEntityDefsFirstItem.getSuperTypes();
        Assertions.assertEquals("Asset", responseEntityDefsFirstItemSuperTypes.iterator().next());
        List<AtlasRelationshipAttributeDef> responseEntityDefsFirstItemRelationshipAttributeDefs
            = responseEntityDefsFirstItem.getRelationshipAttributeDefs();
        AtlasRelationshipAttributeDef responseEntityDefsFirstItemRelationshipAttributeDefsFirstItem
            = responseEntityDefsFirstItemRelationshipAttributeDefs.iterator().next();
        Assertions.assertNotNull(responseEntityDefsFirstItemRelationshipAttributeDefsFirstItem);
        Assertions.assertEquals(CardinalityValue.SINGLE,
            responseEntityDefsFirstItemRelationshipAttributeDefsFirstItem.getCardinality());
        Assertions.assertEquals(false,
            responseEntityDefsFirstItemRelationshipAttributeDefsFirstItem.isIncludeInNotification());
        Assertions.assertEquals(false, responseEntityDefsFirstItemRelationshipAttributeDefsFirstItem.isIndexable());
        Assertions.assertEquals(false, responseEntityDefsFirstItemRelationshipAttributeDefsFirstItem.isOptional());
        Assertions.assertEquals(false, responseEntityDefsFirstItemRelationshipAttributeDefsFirstItem.isUnique());
        Assertions.assertEquals("package", responseEntityDefsFirstItemRelationshipAttributeDefsFirstItem.getName());
        Assertions.assertEquals("sap_ecc_package",
            responseEntityDefsFirstItemRelationshipAttributeDefsFirstItem.getTypeName());
        Assertions.assertEquals(-1, responseEntityDefsFirstItemRelationshipAttributeDefsFirstItem.getValuesMaxCount());
        Assertions.assertEquals(-1, responseEntityDefsFirstItemRelationshipAttributeDefsFirstItem.getValuesMinCount());
        Assertions.assertEquals(false,
            responseEntityDefsFirstItemRelationshipAttributeDefsFirstItem.isLegacyAttribute());
        Assertions.assertEquals("sap_ecc_package_data_elements",
            responseEntityDefsFirstItemRelationshipAttributeDefsFirstItem.getRelationshipTypeName());
        // verify property "enumDefs"
        List<AtlasEnumDef> responseEnumDefs = response.getEnumDefs();
        AtlasEnumDef responseEnumDefsFirstItem = responseEnumDefs.iterator().next();
        Assertions.assertNotNull(responseEnumDefsFirstItem);
        Assertions.assertEquals(TypeCategory.ENUM, responseEnumDefsFirstItem.getCategory());
        Assertions.assertEquals(1604728877305L, responseEnumDefsFirstItem.getCreateTime());
        Assertions.assertEquals("ExampleCreator", responseEnumDefsFirstItem.getCreatedBy());
        Assertions.assertEquals("glossary_term_status_value", responseEnumDefsFirstItem.getDescription());
        Assertions.assertEquals("0ddc2fcf-ad17-4d06-984a-ffb2ffb2a941", responseEnumDefsFirstItem.getGuid());
        Assertions.assertEquals("glossary_term_status_value", responseEnumDefsFirstItem.getName());
        Assertions.assertEquals("1.0", responseEnumDefsFirstItem.getTypeVersion());
        Assertions.assertEquals(1604728877305L, responseEnumDefsFirstItem.getUpdateTime());
        Assertions.assertEquals("ExampleUpdator", responseEnumDefsFirstItem.getUpdatedBy());
        Assertions.assertEquals(1L, responseEnumDefsFirstItem.getVersion());
        Assertions.assertEquals("1", responseEnumDefsFirstItem.getLastModifiedTS());
        List<AtlasEnumElementDef> responseEnumDefsFirstItemElementDefs = responseEnumDefsFirstItem.getElementDefs();
        AtlasEnumElementDef responseEnumDefsFirstItemElementDefsFirstItem
            = responseEnumDefsFirstItemElementDefs.iterator().next();
        Assertions.assertNotNull(responseEnumDefsFirstItemElementDefsFirstItem);
        Assertions.assertEquals(0, responseEnumDefsFirstItemElementDefsFirstItem.getOrdinal());
        Assertions.assertEquals("Approved", responseEnumDefsFirstItemElementDefsFirstItem.getValue());
        // verify property "relationshipDefs"
        List<AtlasRelationshipDef> responseRelationshipDefs = response.getRelationshipDefs();
        AtlasRelationshipDef responseRelationshipDefsFirstItem = responseRelationshipDefs.iterator().next();
        Assertions.assertNotNull(responseRelationshipDefsFirstItem);
        Assertions.assertEquals(TypeCategory.RELATIONSHIP, responseRelationshipDefsFirstItem.getCategory());
        Assertions.assertEquals(1604729078159L, responseRelationshipDefsFirstItem.getCreateTime());
        Assertions.assertEquals("ExampleCreator", responseRelationshipDefsFirstItem.getCreatedBy());
        Assertions.assertEquals("storm_topology_nodes", responseRelationshipDefsFirstItem.getDescription());
        Assertions.assertEquals("6284b865-cbb3-4236-83ed-059a407f06fb", responseRelationshipDefsFirstItem.getGuid());
        Assertions.assertEquals("storm_topology_nodes", responseRelationshipDefsFirstItem.getName());
        Assertions.assertEquals("storm", responseRelationshipDefsFirstItem.getServiceType());
        Assertions.assertEquals("1.1", responseRelationshipDefsFirstItem.getTypeVersion());
        Assertions.assertEquals(1604729323080L, responseRelationshipDefsFirstItem.getUpdateTime());
        Assertions.assertEquals("ExampleUpdator", responseRelationshipDefsFirstItem.getUpdatedBy());
        Assertions.assertEquals(2L, responseRelationshipDefsFirstItem.getVersion());
        Assertions.assertEquals("2", responseRelationshipDefsFirstItem.getLastModifiedTS());
        List<AtlasAttributeDef> responseRelationshipDefsFirstItemAttributeDefs
            = responseRelationshipDefsFirstItem.getAttributeDefs();
        Assertions.assertEquals(0, responseRelationshipDefsFirstItemAttributeDefs.size());
        AtlasRelationshipEndDef responseRelationshipDefsFirstItemEndDef1
            = responseRelationshipDefsFirstItem.getEndDef1();
        Assertions.assertNotNull(responseRelationshipDefsFirstItemEndDef1);
        Assertions.assertEquals(CardinalityValue.SET, responseRelationshipDefsFirstItemEndDef1.getCardinality());
        Assertions.assertEquals(false, responseRelationshipDefsFirstItemEndDef1.isContainer());
        Assertions.assertEquals(true, responseRelationshipDefsFirstItemEndDef1.isLegacyAttribute());
        Assertions.assertEquals("nodes", responseRelationshipDefsFirstItemEndDef1.getName());
        Assertions.assertEquals("storm_topology", responseRelationshipDefsFirstItemEndDef1.getType());
        AtlasRelationshipEndDef responseRelationshipDefsFirstItemEndDef2
            = responseRelationshipDefsFirstItem.getEndDef2();
        Assertions.assertNotNull(responseRelationshipDefsFirstItemEndDef2);
        Assertions.assertEquals(CardinalityValue.SET, responseRelationshipDefsFirstItemEndDef2.getCardinality());
        Assertions.assertEquals(false, responseRelationshipDefsFirstItemEndDef2.isContainer());
        Assertions.assertEquals(false, responseRelationshipDefsFirstItemEndDef2.isLegacyAttribute());
        Assertions.assertEquals("topolgies", responseRelationshipDefsFirstItemEndDef2.getName());
        Assertions.assertEquals("storm_node", responseRelationshipDefsFirstItemEndDef2.getType());
        Assertions.assertEquals(RelationshipCategory.ASSOCIATION,
            responseRelationshipDefsFirstItem.getRelationshipCategory());
        // verify property "structDefs"
        List<AtlasStructDef> responseStructDefs = response.getStructDefs();
        AtlasStructDef responseStructDefsFirstItem = responseStructDefs.iterator().next();
        Assertions.assertNotNull(responseStructDefsFirstItem);
        Assertions.assertEquals(TypeCategory.STRUCT, responseStructDefsFirstItem.getCategory());
        Assertions.assertEquals(1604729507664L, responseStructDefsFirstItem.getCreateTime());
        Assertions.assertEquals("ExampleCreator", responseStructDefsFirstItem.getCreatedBy());
        Assertions.assertEquals("blob_soft_deleted_state", responseStructDefsFirstItem.getDescription());
        Assertions.assertEquals("a8892bd7-59d6-47d8-b80d-ba4c7631098f", responseStructDefsFirstItem.getGuid());
        Assertions.assertEquals("blob_soft_deleted_state", responseStructDefsFirstItem.getName());
        Assertions.assertEquals("Azure Blob Storage", responseStructDefsFirstItem.getServiceType());
        Assertions.assertEquals("1.0", responseStructDefsFirstItem.getTypeVersion());
        Assertions.assertEquals(1604729507664L, responseStructDefsFirstItem.getUpdateTime());
        Assertions.assertEquals("ExampleUpdator", responseStructDefsFirstItem.getUpdatedBy());
        Assertions.assertEquals(1L, responseStructDefsFirstItem.getVersion());
        Assertions.assertEquals("1", responseStructDefsFirstItem.getLastModifiedTS());
        List<AtlasAttributeDef> responseStructDefsFirstItemAttributeDefs
            = responseStructDefsFirstItem.getAttributeDefs();
        AtlasAttributeDef responseStructDefsFirstItemAttributeDefsFirstItem
            = responseStructDefsFirstItemAttributeDefs.iterator().next();
        Assertions.assertNotNull(responseStructDefsFirstItemAttributeDefsFirstItem);
        Assertions.assertEquals(CardinalityValue.SINGLE,
            responseStructDefsFirstItemAttributeDefsFirstItem.getCardinality());
        Assertions.assertEquals(false, responseStructDefsFirstItemAttributeDefsFirstItem.isIncludeInNotification());
        Assertions.assertEquals(false, responseStructDefsFirstItemAttributeDefsFirstItem.isIndexable());
        Assertions.assertEquals(true, responseStructDefsFirstItemAttributeDefsFirstItem.isOptional());
        Assertions.assertEquals(false, responseStructDefsFirstItemAttributeDefsFirstItem.isUnique());
        Assertions.assertEquals("deleted", responseStructDefsFirstItemAttributeDefsFirstItem.getName());
        Assertions.assertEquals("boolean", responseStructDefsFirstItemAttributeDefsFirstItem.getTypeName());
        Assertions.assertEquals(1, responseStructDefsFirstItemAttributeDefsFirstItem.getValuesMaxCount());
        Assertions.assertEquals(0, responseStructDefsFirstItemAttributeDefsFirstItem.getValuesMinCount());
    }
}
