// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.purview.datamap.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/**
 * The relationshipEndDef represents an end of the relationship. The end of the
 * relationship is defined by a type, an
 * attribute name, cardinality and whether
 * it is the container end of the relationship.
 */
@Fluent
public final class AtlasRelationshipAttributeDef {
    /*
     * single-valued attribute or multi-valued attribute.
     */
    @Generated
    @JsonProperty(value = "cardinality")
    private CardinalityValue cardinality;

    /*
     * An array of constraints.
     */
    @Generated
    @JsonProperty(value = "constraints")
    private List<AtlasConstraintDef> constraints;

    /*
     * The default value of the attribute.
     */
    @Generated
    @JsonProperty(value = "defaultValue")
    private String defaultValue;

    /*
     * The description of the attribute.
     */
    @Generated
    @JsonProperty(value = "description")
    private String description;

    /*
     * Determines if it is included in notification.
     */
    @Generated
    @JsonProperty(value = "includeInNotification")
    private Boolean includeInNotification;

    /*
     * Determines if it is indexable.
     */
    @Generated
    @JsonProperty(value = "isIndexable")
    private Boolean isIndexable;

    /*
     * Determines if it is optional.
     */
    @Generated
    @JsonProperty(value = "isOptional")
    private Boolean isOptional;

    /*
     * Determines if it unique.
     */
    @Generated
    @JsonProperty(value = "isUnique")
    private Boolean isUnique;

    /*
     * The name of the attribute.
     */
    @Generated
    @JsonProperty(value = "name")
    private String name;

    /*
     * The options for the attribute.
     */
    @Generated
    @JsonProperty(value = "options")
    private Map<String, String> options;

    /*
     * The name of the type.
     */
    @Generated
    @JsonProperty(value = "typeName")
    private String typeName;

    /*
     * The maximum count of the values.
     */
    @Generated
    @JsonProperty(value = "valuesMaxCount")
    private Integer valuesMaxCount;

    /*
     * The minimum count of the values.
     */
    @Generated
    @JsonProperty(value = "valuesMinCount")
    private Integer valuesMinCount;

    /*
     * Determines if it is a legacy attribute.
     */
    @Generated
    @JsonProperty(value = "isLegacyAttribute")
    private Boolean isLegacyAttribute;

    /*
     * The name of the relationship type.
     */
    @Generated
    @JsonProperty(value = "relationshipTypeName")
    private String relationshipTypeName;

    /**
     * Creates an instance of AtlasRelationshipAttributeDef class.
     */
    @Generated
    public AtlasRelationshipAttributeDef() {
    }

    /**
     * Get the cardinality property: single-valued attribute or multi-valued attribute.
     * 
     * @return the cardinality value.
     */
    @Generated
    public CardinalityValue getCardinality() {
        return this.cardinality;
    }

    /**
     * Set the cardinality property: single-valued attribute or multi-valued attribute.
     * 
     * @param cardinality the cardinality value to set.
     * @return the AtlasRelationshipAttributeDef object itself.
     */
    @Generated
    public AtlasRelationshipAttributeDef setCardinality(CardinalityValue cardinality) {
        this.cardinality = cardinality;
        return this;
    }

    /**
     * Get the constraints property: An array of constraints.
     * 
     * @return the constraints value.
     */
    @Generated
    public List<AtlasConstraintDef> getConstraints() {
        return this.constraints;
    }

    /**
     * Set the constraints property: An array of constraints.
     * 
     * @param constraints the constraints value to set.
     * @return the AtlasRelationshipAttributeDef object itself.
     */
    @Generated
    public AtlasRelationshipAttributeDef setConstraints(List<AtlasConstraintDef> constraints) {
        this.constraints = constraints;
        return this;
    }

    /**
     * Get the defaultValue property: The default value of the attribute.
     * 
     * @return the defaultValue value.
     */
    @Generated
    public String getDefaultValue() {
        return this.defaultValue;
    }

    /**
     * Set the defaultValue property: The default value of the attribute.
     * 
     * @param defaultValue the defaultValue value to set.
     * @return the AtlasRelationshipAttributeDef object itself.
     */
    @Generated
    public AtlasRelationshipAttributeDef setDefaultValue(String defaultValue) {
        this.defaultValue = defaultValue;
        return this;
    }

    /**
     * Get the description property: The description of the attribute.
     * 
     * @return the description value.
     */
    @Generated
    public String getDescription() {
        return this.description;
    }

    /**
     * Set the description property: The description of the attribute.
     * 
     * @param description the description value to set.
     * @return the AtlasRelationshipAttributeDef object itself.
     */
    @Generated
    public AtlasRelationshipAttributeDef setDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the includeInNotification property: Determines if it is included in notification.
     * 
     * @return the includeInNotification value.
     */
    @Generated
    public Boolean isIncludeInNotification() {
        return this.includeInNotification;
    }

    /**
     * Set the includeInNotification property: Determines if it is included in notification.
     * 
     * @param includeInNotification the includeInNotification value to set.
     * @return the AtlasRelationshipAttributeDef object itself.
     */
    @Generated
    public AtlasRelationshipAttributeDef setIncludeInNotification(Boolean includeInNotification) {
        this.includeInNotification = includeInNotification;
        return this;
    }

    /**
     * Get the isIndexable property: Determines if it is indexable.
     * 
     * @return the isIndexable value.
     */
    @Generated
    public Boolean isIndexable() {
        return this.isIndexable;
    }

    /**
     * Set the isIndexable property: Determines if it is indexable.
     * 
     * @param isIndexable the isIndexable value to set.
     * @return the AtlasRelationshipAttributeDef object itself.
     */
    @Generated
    public AtlasRelationshipAttributeDef setIsIndexable(Boolean isIndexable) {
        this.isIndexable = isIndexable;
        return this;
    }

    /**
     * Get the isOptional property: Determines if it is optional.
     * 
     * @return the isOptional value.
     */
    @Generated
    public Boolean isOptional() {
        return this.isOptional;
    }

    /**
     * Set the isOptional property: Determines if it is optional.
     * 
     * @param isOptional the isOptional value to set.
     * @return the AtlasRelationshipAttributeDef object itself.
     */
    @Generated
    public AtlasRelationshipAttributeDef setIsOptional(Boolean isOptional) {
        this.isOptional = isOptional;
        return this;
    }

    /**
     * Get the isUnique property: Determines if it unique.
     * 
     * @return the isUnique value.
     */
    @Generated
    public Boolean isUnique() {
        return this.isUnique;
    }

    /**
     * Set the isUnique property: Determines if it unique.
     * 
     * @param isUnique the isUnique value to set.
     * @return the AtlasRelationshipAttributeDef object itself.
     */
    @Generated
    public AtlasRelationshipAttributeDef setIsUnique(Boolean isUnique) {
        this.isUnique = isUnique;
        return this;
    }

    /**
     * Get the name property: The name of the attribute.
     * 
     * @return the name value.
     */
    @Generated
    public String getName() {
        return this.name;
    }

    /**
     * Set the name property: The name of the attribute.
     * 
     * @param name the name value to set.
     * @return the AtlasRelationshipAttributeDef object itself.
     */
    @Generated
    public AtlasRelationshipAttributeDef setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the options property: The options for the attribute.
     * 
     * @return the options value.
     */
    @Generated
    public Map<String, String> getOptions() {
        return this.options;
    }

    /**
     * Set the options property: The options for the attribute.
     * 
     * @param options the options value to set.
     * @return the AtlasRelationshipAttributeDef object itself.
     */
    @Generated
    public AtlasRelationshipAttributeDef setOptions(Map<String, String> options) {
        this.options = options;
        return this;
    }

    /**
     * Get the typeName property: The name of the type.
     * 
     * @return the typeName value.
     */
    @Generated
    public String getTypeName() {
        return this.typeName;
    }

    /**
     * Set the typeName property: The name of the type.
     * 
     * @param typeName the typeName value to set.
     * @return the AtlasRelationshipAttributeDef object itself.
     */
    @Generated
    public AtlasRelationshipAttributeDef setTypeName(String typeName) {
        this.typeName = typeName;
        return this;
    }

    /**
     * Get the valuesMaxCount property: The maximum count of the values.
     * 
     * @return the valuesMaxCount value.
     */
    @Generated
    public Integer getValuesMaxCount() {
        return this.valuesMaxCount;
    }

    /**
     * Set the valuesMaxCount property: The maximum count of the values.
     * 
     * @param valuesMaxCount the valuesMaxCount value to set.
     * @return the AtlasRelationshipAttributeDef object itself.
     */
    @Generated
    public AtlasRelationshipAttributeDef setValuesMaxCount(Integer valuesMaxCount) {
        this.valuesMaxCount = valuesMaxCount;
        return this;
    }

    /**
     * Get the valuesMinCount property: The minimum count of the values.
     * 
     * @return the valuesMinCount value.
     */
    @Generated
    public Integer getValuesMinCount() {
        return this.valuesMinCount;
    }

    /**
     * Set the valuesMinCount property: The minimum count of the values.
     * 
     * @param valuesMinCount the valuesMinCount value to set.
     * @return the AtlasRelationshipAttributeDef object itself.
     */
    @Generated
    public AtlasRelationshipAttributeDef setValuesMinCount(Integer valuesMinCount) {
        this.valuesMinCount = valuesMinCount;
        return this;
    }

    /**
     * Get the isLegacyAttribute property: Determines if it is a legacy attribute.
     * 
     * @return the isLegacyAttribute value.
     */
    @Generated
    public Boolean isLegacyAttribute() {
        return this.isLegacyAttribute;
    }

    /**
     * Set the isLegacyAttribute property: Determines if it is a legacy attribute.
     * 
     * @param isLegacyAttribute the isLegacyAttribute value to set.
     * @return the AtlasRelationshipAttributeDef object itself.
     */
    @Generated
    public AtlasRelationshipAttributeDef setIsLegacyAttribute(Boolean isLegacyAttribute) {
        this.isLegacyAttribute = isLegacyAttribute;
        return this;
    }

    /**
     * Get the relationshipTypeName property: The name of the relationship type.
     * 
     * @return the relationshipTypeName value.
     */
    @Generated
    public String getRelationshipTypeName() {
        return this.relationshipTypeName;
    }

    /**
     * Set the relationshipTypeName property: The name of the relationship type.
     * 
     * @param relationshipTypeName the relationshipTypeName value to set.
     * @return the AtlasRelationshipAttributeDef object itself.
     */
    @Generated
    public AtlasRelationshipAttributeDef setRelationshipTypeName(String relationshipTypeName) {
        this.relationshipTypeName = relationshipTypeName;
        return this;
    }
}
