// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.purview.datamap.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;
import java.util.Map;

/**
 * An instance of an entity along with extended info - like hive_table,
 * hive_database.
 */
@Fluent
public final class AtlasEntitiesWithExtInfo implements JsonSerializable<AtlasEntitiesWithExtInfo> {
    /*
     * The referred entities.
     */
    @Generated
    private Map<String, AtlasEntity> referredEntities;

    /*
     * An array of entities.
     */
    @Generated
    private List<AtlasEntity> entities;

    /**
     * Creates an instance of AtlasEntitiesWithExtInfo class.
     */
    @Generated
    public AtlasEntitiesWithExtInfo() {
    }

    /**
     * Get the referredEntities property: The referred entities.
     * 
     * @return the referredEntities value.
     */
    @Generated
    public Map<String, AtlasEntity> getReferredEntities() {
        return this.referredEntities;
    }

    /**
     * Set the referredEntities property: The referred entities.
     * 
     * @param referredEntities the referredEntities value to set.
     * @return the AtlasEntitiesWithExtInfo object itself.
     */
    @Generated
    public AtlasEntitiesWithExtInfo setReferredEntities(Map<String, AtlasEntity> referredEntities) {
        this.referredEntities = referredEntities;
        return this;
    }

    /**
     * Get the entities property: An array of entities.
     * 
     * @return the entities value.
     */
    @Generated
    public List<AtlasEntity> getEntities() {
        return this.entities;
    }

    /**
     * Set the entities property: An array of entities.
     * 
     * @param entities the entities value to set.
     * @return the AtlasEntitiesWithExtInfo object itself.
     */
    @Generated
    public AtlasEntitiesWithExtInfo setEntities(List<AtlasEntity> entities) {
        this.entities = entities;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeMapField("referredEntities", this.referredEntities,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("entities", this.entities, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AtlasEntitiesWithExtInfo from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AtlasEntitiesWithExtInfo if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AtlasEntitiesWithExtInfo.
     */
    @Generated
    public static AtlasEntitiesWithExtInfo fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AtlasEntitiesWithExtInfo deserializedAtlasEntitiesWithExtInfo = new AtlasEntitiesWithExtInfo();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("referredEntities".equals(fieldName)) {
                    Map<String, AtlasEntity> referredEntities
                        = reader.readMap(reader1 -> AtlasEntity.fromJson(reader1));
                    deserializedAtlasEntitiesWithExtInfo.referredEntities = referredEntities;
                } else if ("entities".equals(fieldName)) {
                    List<AtlasEntity> entities = reader.readArray(reader1 -> AtlasEntity.fromJson(reader1));
                    deserializedAtlasEntitiesWithExtInfo.entities = entities;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAtlasEntitiesWithExtInfo;
        });
    }
}
