// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.purview.datamap.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Map;

/**
 * An instance of an entity header map.
 */
@Fluent
public final class AtlasEntityHeaders implements JsonSerializable<AtlasEntityHeaders> {
    /*
     * The description of the guid header map,
     */
    @Generated
    private Map<String, AtlasEntityHeader> guidHeaderMap;

    /**
     * Creates an instance of AtlasEntityHeaders class.
     */
    @Generated
    public AtlasEntityHeaders() {
    }

    /**
     * Get the guidHeaderMap property: The description of the guid header map,.
     * 
     * @return the guidHeaderMap value.
     */
    @Generated
    public Map<String, AtlasEntityHeader> getGuidHeaderMap() {
        return this.guidHeaderMap;
    }

    /**
     * Set the guidHeaderMap property: The description of the guid header map,.
     * 
     * @param guidHeaderMap the guidHeaderMap value to set.
     * @return the AtlasEntityHeaders object itself.
     */
    @Generated
    public AtlasEntityHeaders setGuidHeaderMap(Map<String, AtlasEntityHeader> guidHeaderMap) {
        this.guidHeaderMap = guidHeaderMap;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeMapField("guidHeaderMap", this.guidHeaderMap, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AtlasEntityHeaders from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AtlasEntityHeaders if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AtlasEntityHeaders.
     */
    @Generated
    public static AtlasEntityHeaders fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AtlasEntityHeaders deserializedAtlasEntityHeaders = new AtlasEntityHeaders();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("guidHeaderMap".equals(fieldName)) {
                    Map<String, AtlasEntityHeader> guidHeaderMap
                        = reader.readMap(reader1 -> AtlasEntityHeader.fromJson(reader1));
                    deserializedAtlasEntityHeaders.guidHeaderMap = guidHeaderMap;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAtlasEntityHeaders;
        });
    }
}
