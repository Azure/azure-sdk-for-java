// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.purview.datamap.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Base model for search filter.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    include = JsonTypeInfo.As.PROPERTY,
    property = "kind",
    defaultImpl = SearchFilter.class)
@JsonTypeName("SearchFilter")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "AndFilter", value = AndFilter.class),
    @JsonSubTypes.Type(name = "NotFilter", value = NotFilter.class),
    @JsonSubTypes.Type(name = "OrFilter", value = OrFilter.class),
    @JsonSubTypes.Type(name = "AssetTypeFilter", value = AssetTypeFilter.class),
    @JsonSubTypes.Type(name = "AttributeFilter", value = AttributeFilter.class),
    @JsonSubTypes.Type(name = "ClassificationFilter", value = ClassificationFilter.class),
    @JsonSubTypes.Type(name = "ClassificationCategoryFilter", value = ClassificationCategoryFilter.class),
    @JsonSubTypes.Type(name = "CollectionIdFilter", value = CollectionIdFilter.class),
    @JsonSubTypes.Type(name = "ContactFilter", value = ContactFilter.class),
    @JsonSubTypes.Type(name = "DomainIdFilter", value = DomainIdFilter.class),
    @JsonSubTypes.Type(name = "ExistsFilter", value = ExistsFilter.class),
    @JsonSubTypes.Type(name = "FileExtensionFilter", value = FileExtensionFilter.class),
    @JsonSubTypes.Type(name = "LabelFilter", value = LabelFilter.class),
    @JsonSubTypes.Type(name = "ObjectTypeFilter", value = ObjectTypeFilter.class),
    @JsonSubTypes.Type(name = "PathFilter", value = PathFilter.class),
    @JsonSubTypes.Type(name = "ScanInfoFilter", value = ScanInfoFilter.class),
    @JsonSubTypes.Type(name = "GlossaryFilter", value = GlossaryFilter.class),
    @JsonSubTypes.Type(name = "TermFilter", value = TermFilter.class),
    @JsonSubTypes.Type(name = "IdFilter", value = IdFilter.class),
    @JsonSubTypes.Type(name = "EntityTypeFilter", value = EntityTypeFilter.class),
    @JsonSubTypes.Type(name = "CreateTimeFilter", value = CreateTimeFilter.class),
    @JsonSubTypes.Type(name = "UpdateTimeFilter", value = UpdateTimeFilter.class) })
@Immutable
public class SearchFilter {
    /**
     * Creates an instance of SearchFilter class.
     */
    @Generated
    public SearchFilter() {
    }
}
