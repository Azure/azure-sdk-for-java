// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.purview.datamap.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The search query of advanced search request.
 */
@Fluent
public final class SearchContent {
    /*
     * The keywords applied to all searchable fields.
     */
    @Generated
    @JsonProperty(value = "keywords")
    private String keywords;

    /*
     * The limit of the number of the search result. default value is 50; maximum
     * value is 1000.
     */
    @Generated
    @JsonProperty(value = "limit")
    private Integer limit;

    /*
     * The token used to get next batch of data. Default 'Null' to get the first
     * batch, and will return new token in each response unless there's no more data.
     */
    @Generated
    @JsonProperty(value = "continuationToken")
    private String continuationToken;

    /*
     * The sort order of search results, can specify multiple fields.
     */
    @Generated
    @JsonProperty(value = "orderby")
    private List<Object> orderby;

    /*
     * The filter for the search. See examples for the usage of supported filters.
     */
    @Generated
    @JsonProperty(value = "filter")
    private Object filter;

    /*
     * The facets for search. See examples for the usage of supported facets.
     */
    @Generated
    @JsonProperty(value = "facets")
    private List<SearchFacetItem> facets;

    /*
     * The taxonomy setting for search.
     */
    @Generated
    @JsonProperty(value = "taxonomySetting")
    private SearchRequestTaxonomySetting taxonomySetting;

    /**
     * Creates an instance of SearchContent class.
     */
    @Generated
    public SearchContent() {
    }

    /**
     * Get the keywords property: The keywords applied to all searchable fields.
     * 
     * @return the keywords value.
     */
    @Generated
    public String getKeywords() {
        return this.keywords;
    }

    /**
     * Set the keywords property: The keywords applied to all searchable fields.
     * 
     * @param keywords the keywords value to set.
     * @return the SearchContent object itself.
     */
    @Generated
    public SearchContent setKeywords(String keywords) {
        this.keywords = keywords;
        return this;
    }

    /**
     * Get the limit property: The limit of the number of the search result. default value is 50; maximum
     * value is 1000.
     * 
     * @return the limit value.
     */
    @Generated
    public Integer getLimit() {
        return this.limit;
    }

    /**
     * Set the limit property: The limit of the number of the search result. default value is 50; maximum
     * value is 1000.
     * 
     * @param limit the limit value to set.
     * @return the SearchContent object itself.
     */
    @Generated
    public SearchContent setLimit(Integer limit) {
        this.limit = limit;
        return this;
    }

    /**
     * Get the continuationToken property: The token used to get next batch of data. Default 'Null' to get the first
     * batch, and will return new token in each response unless there's no more data.
     * 
     * @return the continuationToken value.
     */
    @Generated
    public String getContinuationToken() {
        return this.continuationToken;
    }

    /**
     * Set the continuationToken property: The token used to get next batch of data. Default 'Null' to get the first
     * batch, and will return new token in each response unless there's no more data.
     * 
     * @param continuationToken the continuationToken value to set.
     * @return the SearchContent object itself.
     */
    @Generated
    public SearchContent setContinuationToken(String continuationToken) {
        this.continuationToken = continuationToken;
        return this;
    }

    /**
     * Get the orderby property: The sort order of search results, can specify multiple fields.
     * 
     * @return the orderby value.
     */
    @Generated
    public List<Object> getOrderby() {
        return this.orderby;
    }

    /**
     * Set the orderby property: The sort order of search results, can specify multiple fields.
     * 
     * @param orderby the orderby value to set.
     * @return the SearchContent object itself.
     */
    @Generated
    public SearchContent setOrderby(List<Object> orderby) {
        this.orderby = orderby;
        return this;
    }

    /**
     * Get the filter property: The filter for the search. See examples for the usage of supported filters.
     * 
     * @return the filter value.
     */
    @Generated
    public Object getFilter() {
        return this.filter;
    }

    /**
     * Set the filter property: The filter for the search. See examples for the usage of supported filters.
     * 
     * @param filter the filter value to set.
     * @return the SearchContent object itself.
     */
    @Generated
    public SearchContent setFilter(Object filter) {
        this.filter = filter;
        return this;
    }

    /**
     * Get the facets property: The facets for search. See examples for the usage of supported facets.
     * 
     * @return the facets value.
     */
    @Generated
    public List<SearchFacetItem> getFacets() {
        return this.facets;
    }

    /**
     * Set the facets property: The facets for search. See examples for the usage of supported facets.
     * 
     * @param facets the facets value to set.
     * @return the SearchContent object itself.
     */
    @Generated
    public SearchContent setFacets(List<SearchFacetItem> facets) {
        this.facets = facets;
        return this;
    }

    /**
     * Get the taxonomySetting property: The taxonomy setting for search.
     * 
     * @return the taxonomySetting value.
     */
    @Generated
    public SearchRequestTaxonomySetting getTaxonomySetting() {
        return this.taxonomySetting;
    }

    /**
     * Set the taxonomySetting property: The taxonomy setting for search.
     * 
     * @param taxonomySetting the taxonomySetting value to set.
     * @return the SearchContent object itself.
     */
    @Generated
    public SearchContent setTaxonomySetting(SearchRequestTaxonomySetting taxonomySetting) {
        this.taxonomySetting = taxonomySetting;
        return this;
    }
}
