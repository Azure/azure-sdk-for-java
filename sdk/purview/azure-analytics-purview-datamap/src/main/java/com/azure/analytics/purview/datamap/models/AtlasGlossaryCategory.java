// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.purview.datamap.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The glossary category.
 */
@Fluent
public final class AtlasGlossaryCategory {
    /*
     * The GUID of the object.
     */
    @Generated
    @JsonProperty(value = "guid")
    private String guid;

    /*
     * An array of classifications.
     */
    @Generated
    @JsonProperty(value = "classifications")
    private List<AtlasClassification> classifications;

    /*
     * The long version description.
     */
    @Generated
    @JsonProperty(value = "longDescription")
    private String longDescription;

    /*
     * The name of the glossary object.
     */
    @Generated
    @JsonProperty(value = "name")
    private String name;

    /*
     * The qualified name of the glossary object.
     */
    @Generated
    @JsonProperty(value = "qualifiedName")
    private String qualifiedName;

    /*
     * The short version of description.
     */
    @Generated
    @JsonProperty(value = "shortDescription")
    private String shortDescription;

    /*
     * ETag for concurrency control.
     */
    @Generated
    @JsonProperty(value = "lastModifiedTS")
    private String lastModifiedTS;

    /*
     * The created time of the record.
     */
    @Generated
    @JsonProperty(value = "createTime")
    private Long createTime;

    /*
     * The user who created the record.
     */
    @Generated
    @JsonProperty(value = "createdBy")
    private String createdBy;

    /*
     * The update time of the record.
     */
    @Generated
    @JsonProperty(value = "updateTime")
    private Long updateTime;

    /*
     * The user who updated the record.
     */
    @Generated
    @JsonProperty(value = "updatedBy")
    private String updatedBy;

    /*
     * The glossary header with basic information.
     */
    @Generated
    @JsonProperty(value = "anchor")
    private AtlasGlossaryHeader anchor;

    /*
     * An array of children categories.
     */
    @Generated
    @JsonProperty(value = "childrenCategories")
    private List<AtlasRelatedCategoryHeader> childrenCategories;

    /*
     * The header of the related category.
     */
    @Generated
    @JsonProperty(value = "parentCategory")
    private AtlasRelatedCategoryHeader parentCategory;

    /*
     * An array of related term headers.
     */
    @Generated
    @JsonProperty(value = "terms")
    private List<AtlasRelatedTermHeader> terms;

    /**
     * Creates an instance of AtlasGlossaryCategory class.
     */
    @Generated
    public AtlasGlossaryCategory() {
    }

    /**
     * Get the guid property: The GUID of the object.
     * 
     * @return the guid value.
     */
    @Generated
    public String getGuid() {
        return this.guid;
    }

    /**
     * Set the guid property: The GUID of the object.
     * 
     * @param guid the guid value to set.
     * @return the AtlasGlossaryCategory object itself.
     */
    @Generated
    public AtlasGlossaryCategory setGuid(String guid) {
        this.guid = guid;
        return this;
    }

    /**
     * Get the classifications property: An array of classifications.
     * 
     * @return the classifications value.
     */
    @Generated
    public List<AtlasClassification> getClassifications() {
        return this.classifications;
    }

    /**
     * Set the classifications property: An array of classifications.
     * 
     * @param classifications the classifications value to set.
     * @return the AtlasGlossaryCategory object itself.
     */
    @Generated
    public AtlasGlossaryCategory setClassifications(List<AtlasClassification> classifications) {
        this.classifications = classifications;
        return this;
    }

    /**
     * Get the longDescription property: The long version description.
     * 
     * @return the longDescription value.
     */
    @Generated
    public String getLongDescription() {
        return this.longDescription;
    }

    /**
     * Set the longDescription property: The long version description.
     * 
     * @param longDescription the longDescription value to set.
     * @return the AtlasGlossaryCategory object itself.
     */
    @Generated
    public AtlasGlossaryCategory setLongDescription(String longDescription) {
        this.longDescription = longDescription;
        return this;
    }

    /**
     * Get the name property: The name of the glossary object.
     * 
     * @return the name value.
     */
    @Generated
    public String getName() {
        return this.name;
    }

    /**
     * Set the name property: The name of the glossary object.
     * 
     * @param name the name value to set.
     * @return the AtlasGlossaryCategory object itself.
     */
    @Generated
    public AtlasGlossaryCategory setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the qualifiedName property: The qualified name of the glossary object.
     * 
     * @return the qualifiedName value.
     */
    @Generated
    public String getQualifiedName() {
        return this.qualifiedName;
    }

    /**
     * Set the qualifiedName property: The qualified name of the glossary object.
     * 
     * @param qualifiedName the qualifiedName value to set.
     * @return the AtlasGlossaryCategory object itself.
     */
    @Generated
    public AtlasGlossaryCategory setQualifiedName(String qualifiedName) {
        this.qualifiedName = qualifiedName;
        return this;
    }

    /**
     * Get the shortDescription property: The short version of description.
     * 
     * @return the shortDescription value.
     */
    @Generated
    public String getShortDescription() {
        return this.shortDescription;
    }

    /**
     * Set the shortDescription property: The short version of description.
     * 
     * @param shortDescription the shortDescription value to set.
     * @return the AtlasGlossaryCategory object itself.
     */
    @Generated
    public AtlasGlossaryCategory setShortDescription(String shortDescription) {
        this.shortDescription = shortDescription;
        return this;
    }

    /**
     * Get the lastModifiedTS property: ETag for concurrency control.
     * 
     * @return the lastModifiedTS value.
     */
    @Generated
    public String getLastModifiedTS() {
        return this.lastModifiedTS;
    }

    /**
     * Set the lastModifiedTS property: ETag for concurrency control.
     * 
     * @param lastModifiedTS the lastModifiedTS value to set.
     * @return the AtlasGlossaryCategory object itself.
     */
    @Generated
    public AtlasGlossaryCategory setLastModifiedTS(String lastModifiedTS) {
        this.lastModifiedTS = lastModifiedTS;
        return this;
    }

    /**
     * Get the createTime property: The created time of the record.
     * 
     * @return the createTime value.
     */
    @Generated
    public Long getCreateTime() {
        return this.createTime;
    }

    /**
     * Set the createTime property: The created time of the record.
     * 
     * @param createTime the createTime value to set.
     * @return the AtlasGlossaryCategory object itself.
     */
    @Generated
    public AtlasGlossaryCategory setCreateTime(Long createTime) {
        this.createTime = createTime;
        return this;
    }

    /**
     * Get the createdBy property: The user who created the record.
     * 
     * @return the createdBy value.
     */
    @Generated
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Set the createdBy property: The user who created the record.
     * 
     * @param createdBy the createdBy value to set.
     * @return the AtlasGlossaryCategory object itself.
     */
    @Generated
    public AtlasGlossaryCategory setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Get the updateTime property: The update time of the record.
     * 
     * @return the updateTime value.
     */
    @Generated
    public Long getUpdateTime() {
        return this.updateTime;
    }

    /**
     * Set the updateTime property: The update time of the record.
     * 
     * @param updateTime the updateTime value to set.
     * @return the AtlasGlossaryCategory object itself.
     */
    @Generated
    public AtlasGlossaryCategory setUpdateTime(Long updateTime) {
        this.updateTime = updateTime;
        return this;
    }

    /**
     * Get the updatedBy property: The user who updated the record.
     * 
     * @return the updatedBy value.
     */
    @Generated
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Set the updatedBy property: The user who updated the record.
     * 
     * @param updatedBy the updatedBy value to set.
     * @return the AtlasGlossaryCategory object itself.
     */
    @Generated
    public AtlasGlossaryCategory setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    /**
     * Get the anchor property: The glossary header with basic information.
     * 
     * @return the anchor value.
     */
    @Generated
    public AtlasGlossaryHeader getAnchor() {
        return this.anchor;
    }

    /**
     * Set the anchor property: The glossary header with basic information.
     * 
     * @param anchor the anchor value to set.
     * @return the AtlasGlossaryCategory object itself.
     */
    @Generated
    public AtlasGlossaryCategory setAnchor(AtlasGlossaryHeader anchor) {
        this.anchor = anchor;
        return this;
    }

    /**
     * Get the childrenCategories property: An array of children categories.
     * 
     * @return the childrenCategories value.
     */
    @Generated
    public List<AtlasRelatedCategoryHeader> getChildrenCategories() {
        return this.childrenCategories;
    }

    /**
     * Set the childrenCategories property: An array of children categories.
     * 
     * @param childrenCategories the childrenCategories value to set.
     * @return the AtlasGlossaryCategory object itself.
     */
    @Generated
    public AtlasGlossaryCategory setChildrenCategories(List<AtlasRelatedCategoryHeader> childrenCategories) {
        this.childrenCategories = childrenCategories;
        return this;
    }

    /**
     * Get the parentCategory property: The header of the related category.
     * 
     * @return the parentCategory value.
     */
    @Generated
    public AtlasRelatedCategoryHeader getParentCategory() {
        return this.parentCategory;
    }

    /**
     * Set the parentCategory property: The header of the related category.
     * 
     * @param parentCategory the parentCategory value to set.
     * @return the AtlasGlossaryCategory object itself.
     */
    @Generated
    public AtlasGlossaryCategory setParentCategory(AtlasRelatedCategoryHeader parentCategory) {
        this.parentCategory = parentCategory;
        return this;
    }

    /**
     * Get the terms property: An array of related term headers.
     * 
     * @return the terms value.
     */
    @Generated
    public List<AtlasRelatedTermHeader> getTerms() {
        return this.terms;
    }

    /**
     * Set the terms property: An array of related term headers.
     * 
     * @param terms the terms value to set.
     * @return the AtlasGlossaryCategory object itself.
     */
    @Generated
    public AtlasGlossaryCategory setTerms(List<AtlasRelatedTermHeader> terms) {
        this.terms = terms;
        return this;
    }
}
