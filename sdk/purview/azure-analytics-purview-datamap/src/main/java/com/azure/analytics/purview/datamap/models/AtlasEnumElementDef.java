// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.purview.datamap.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * class that captures details of an enum-element.
 */
@Fluent
public final class AtlasEnumElementDef implements JsonSerializable<AtlasEnumElementDef> {
    /*
     * The description of the enum element definition.
     */
    @Generated
    private String description;

    /*
     * The ordinal of the enum element definition.
     */
    @Generated
    private Integer ordinal;

    /*
     * The value of the enum element definition.
     */
    @Generated
    private String value;

    /**
     * Creates an instance of AtlasEnumElementDef class.
     */
    @Generated
    public AtlasEnumElementDef() {
    }

    /**
     * Get the description property: The description of the enum element definition.
     * 
     * @return the description value.
     */
    @Generated
    public String getDescription() {
        return this.description;
    }

    /**
     * Set the description property: The description of the enum element definition.
     * 
     * @param description the description value to set.
     * @return the AtlasEnumElementDef object itself.
     */
    @Generated
    public AtlasEnumElementDef setDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the ordinal property: The ordinal of the enum element definition.
     * 
     * @return the ordinal value.
     */
    @Generated
    public Integer getOrdinal() {
        return this.ordinal;
    }

    /**
     * Set the ordinal property: The ordinal of the enum element definition.
     * 
     * @param ordinal the ordinal value to set.
     * @return the AtlasEnumElementDef object itself.
     */
    @Generated
    public AtlasEnumElementDef setOrdinal(Integer ordinal) {
        this.ordinal = ordinal;
        return this;
    }

    /**
     * Get the value property: The value of the enum element definition.
     * 
     * @return the value value.
     */
    @Generated
    public String getValue() {
        return this.value;
    }

    /**
     * Set the value property: The value of the enum element definition.
     * 
     * @param value the value value to set.
     * @return the AtlasEnumElementDef object itself.
     */
    @Generated
    public AtlasEnumElementDef setValue(String value) {
        this.value = value;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("description", this.description);
        jsonWriter.writeNumberField("ordinal", this.ordinal);
        jsonWriter.writeStringField("value", this.value);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AtlasEnumElementDef from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AtlasEnumElementDef if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AtlasEnumElementDef.
     */
    @Generated
    public static AtlasEnumElementDef fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AtlasEnumElementDef deserializedAtlasEnumElementDef = new AtlasEnumElementDef();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("description".equals(fieldName)) {
                    deserializedAtlasEnumElementDef.description = reader.getString();
                } else if ("ordinal".equals(fieldName)) {
                    deserializedAtlasEnumElementDef.ordinal = reader.getNullable(JsonReader::getInt);
                } else if ("value".equals(fieldName)) {
                    deserializedAtlasEnumElementDef.value = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAtlasEnumElementDef;
        });
    }
}
