// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.purview.datamap.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The value item of the search result.
 */
@Immutable
public final class SearchResultValue {
    /*
     * The search score calculated by the search engine. The results are ordered by
     * search score by default.
     */
    @Generated
    @JsonProperty(value = "@search.score")
    private Double searchScore;

    /*
     * A highlight list that consists of index fields id ,qualifiedName, name,
     * description, entityType. When the keyword appears in those fields, the value of
     * the field, attached with emphasis mark, is returned as an element of
     * 
     * @search.highlights.
     */
    @Generated
    @JsonProperty(value = "@search.highlights")
    private SearchHighlights searchHighlights;

    /*
     * The object type of the record. Object type is the top-level property to
     * distinguish whether a record is an asset or a term.
     */
    @Generated
    @JsonProperty(value = "objectType")
    private String objectType;

    /*
     * The create time of the record. The Unix epoch format.
     */
    @Generated
    @JsonProperty(value = "createTime")
    private Long createTime;

    /*
     * The last update time of the record. The Unix epoch format.
     */
    @Generated
    @JsonProperty(value = "updateTime")
    private Long updateTime;

    /*
     * The GUID of the record.
     */
    @Generated
    @JsonProperty(value = "id")
    private String id;

    /*
     * The name of the record.
     */
    @Generated
    @JsonProperty(value = "name")
    private String name;

    /*
     * The qualified name of the record.
     */
    @Generated
    @JsonProperty(value = "qualifiedName")
    private String qualifiedName;

    /*
     * The type name of the asset.
     */
    @Generated
    @JsonProperty(value = "entityType")
    private String entityType;

    /*
     * The description of the asset.
     */
    @Generated
    @JsonProperty(value = "description")
    private String description;

    /*
     * The endorsement of the asset.
     */
    @Generated
    @JsonProperty(value = "endorsement")
    private String endorsement;

    /*
     * The owner of the record.
     */
    @Generated
    @JsonProperty(value = "owner")
    private String owner;

    /*
     * The classifications of the record.
     */
    @Generated
    @JsonProperty(value = "classification")
    private List<String> classification;

    /*
     * The labels of the asset.
     */
    @Generated
    @JsonProperty(value = "label")
    private List<String> label;

    /*
     * The terms assigned to the asset.
     */
    @Generated
    @JsonProperty(value = "term")
    private List<TermSearchResultValue> term;

    /*
     * The contacts of the asset.
     */
    @Generated
    @JsonProperty(value = "contact")
    private List<ContactSearchResultValue> contact;

    /*
     * The asset types of the asset.
     */
    @Generated
    @JsonProperty(value = "assetType")
    private List<String> assetType;

    /*
     * The type name of the term. Could be AtlasGlossary, AtlasGlossaryTerm or
     * AtlasGlossaryCategory.
     */
    @Generated
    @JsonProperty(value = "glossaryType")
    private String glossaryType;

    /*
     * The glossary name of the term.
     */
    @Generated
    @JsonProperty(value = "glossary")
    private String glossary;

    /*
     * The status of the term.
     */
    @Generated
    @JsonProperty(value = "termStatus")
    private String termStatus;

    /*
     * The term template names used by the term.
     */
    @Generated
    @JsonProperty(value = "termTemplate")
    private List<String> termTemplate;

    /*
     * The definition of the term.
     */
    @Generated
    @JsonProperty(value = "longDescription")
    private String longDescription;

    /**
     * Creates an instance of SearchResultValue class.
     */
    @Generated
    private SearchResultValue() {
    }

    /**
     * Get the searchScore property: The search score calculated by the search engine. The results are ordered by
     * search score by default.
     * 
     * @return the searchScore value.
     */
    @Generated
    public Double getSearchScore() {
        return this.searchScore;
    }

    /**
     * Get the searchHighlights property: A highlight list that consists of index fields id ,qualifiedName, name,
     * description, entityType. When the keyword appears in those fields, the value of
     * the field, attached with emphasis mark, is returned as an element of
     * &#064;search.highlights.
     * 
     * @return the searchHighlights value.
     */
    @Generated
    public SearchHighlights getSearchHighlights() {
        return this.searchHighlights;
    }

    /**
     * Get the objectType property: The object type of the record. Object type is the top-level property to
     * distinguish whether a record is an asset or a term.
     * 
     * @return the objectType value.
     */
    @Generated
    public String getObjectType() {
        return this.objectType;
    }

    /**
     * Get the createTime property: The create time of the record. The Unix epoch format.
     * 
     * @return the createTime value.
     */
    @Generated
    public Long getCreateTime() {
        return this.createTime;
    }

    /**
     * Get the updateTime property: The last update time of the record. The Unix epoch format.
     * 
     * @return the updateTime value.
     */
    @Generated
    public Long getUpdateTime() {
        return this.updateTime;
    }

    /**
     * Get the id property: The GUID of the record.
     * 
     * @return the id value.
     */
    @Generated
    public String getId() {
        return this.id;
    }

    /**
     * Get the name property: The name of the record.
     * 
     * @return the name value.
     */
    @Generated
    public String getName() {
        return this.name;
    }

    /**
     * Get the qualifiedName property: The qualified name of the record.
     * 
     * @return the qualifiedName value.
     */
    @Generated
    public String getQualifiedName() {
        return this.qualifiedName;
    }

    /**
     * Get the entityType property: The type name of the asset.
     * 
     * @return the entityType value.
     */
    @Generated
    public String getEntityType() {
        return this.entityType;
    }

    /**
     * Get the description property: The description of the asset.
     * 
     * @return the description value.
     */
    @Generated
    public String getDescription() {
        return this.description;
    }

    /**
     * Get the endorsement property: The endorsement of the asset.
     * 
     * @return the endorsement value.
     */
    @Generated
    public String getEndorsement() {
        return this.endorsement;
    }

    /**
     * Get the owner property: The owner of the record.
     * 
     * @return the owner value.
     */
    @Generated
    public String getOwner() {
        return this.owner;
    }

    /**
     * Get the classification property: The classifications of the record.
     * 
     * @return the classification value.
     */
    @Generated
    public List<String> getClassification() {
        return this.classification;
    }

    /**
     * Get the label property: The labels of the asset.
     * 
     * @return the label value.
     */
    @Generated
    public List<String> getLabel() {
        return this.label;
    }

    /**
     * Get the term property: The terms assigned to the asset.
     * 
     * @return the term value.
     */
    @Generated
    public List<TermSearchResultValue> getTerm() {
        return this.term;
    }

    /**
     * Get the contact property: The contacts of the asset.
     * 
     * @return the contact value.
     */
    @Generated
    public List<ContactSearchResultValue> getContact() {
        return this.contact;
    }

    /**
     * Get the assetType property: The asset types of the asset.
     * 
     * @return the assetType value.
     */
    @Generated
    public List<String> getAssetType() {
        return this.assetType;
    }

    /**
     * Get the glossaryType property: The type name of the term. Could be AtlasGlossary, AtlasGlossaryTerm or
     * AtlasGlossaryCategory.
     * 
     * @return the glossaryType value.
     */
    @Generated
    public String getGlossaryType() {
        return this.glossaryType;
    }

    /**
     * Get the glossary property: The glossary name of the term.
     * 
     * @return the glossary value.
     */
    @Generated
    public String getGlossary() {
        return this.glossary;
    }

    /**
     * Get the termStatus property: The status of the term.
     * 
     * @return the termStatus value.
     */
    @Generated
    public String getTermStatus() {
        return this.termStatus;
    }

    /**
     * Get the termTemplate property: The term template names used by the term.
     * 
     * @return the termTemplate value.
     */
    @Generated
    public List<String> getTermTemplate() {
        return this.termTemplate;
    }

    /**
     * Get the longDescription property: The definition of the term.
     * 
     * @return the longDescription value.
     */
    @Generated
    public String getLongDescription() {
        return this.longDescription;
    }
}
