// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.purview.datamap.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Entity type filter for search.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "kind")
@JsonTypeName("EntityTypeFilter")
@Fluent
public final class EntityTypeFilter extends SearchFilter {
    /*
     * Type name
     */
    @Generated
    @JsonProperty(value = "entityType")
    private String entityType;

    /*
     * Whether to include sub types
     */
    @Generated
    @JsonProperty(value = "includeSubTypes")
    private Boolean includeSubTypes;

    /**
     * Creates an instance of EntityTypeFilter class.
     * 
     * @param entityType the entityType value to set.
     */
    @Generated
    @JsonCreator
    public EntityTypeFilter(@JsonProperty(value = "entityType") String entityType) {
        this.entityType = entityType;
    }

    /**
     * Get the entityType property: Type name.
     * 
     * @return the entityType value.
     */
    @Generated
    public String getEntityType() {
        return this.entityType;
    }

    /**
     * Get the includeSubTypes property: Whether to include sub types.
     * 
     * @return the includeSubTypes value.
     */
    @Generated
    public Boolean isIncludeSubTypes() {
        return this.includeSubTypes;
    }

    /**
     * Set the includeSubTypes property: Whether to include sub types.
     * 
     * @param includeSubTypes the includeSubTypes value to set.
     * @return the EntityTypeFilter object itself.
     */
    @Generated
    public EntityTypeFilter setIncludeSubTypes(Boolean includeSubTypes) {
        this.includeSubTypes = includeSubTypes;
        return this;
    }
}
