// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.purview.datamap.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The basic information for term categorization.
 */
@Fluent
public final class AtlasTermCategorizationHeader implements JsonSerializable<AtlasTermCategorizationHeader> {
    /*
     * The GUID of the category.
     */
    @Generated
    private String categoryGuid;

    /*
     * The description of the record.
     */
    @Generated
    private String description;

    /*
     * The display text.
     */
    @Generated
    private String displayText;

    /*
     * The GUID of the relationship.
     */
    @Generated
    private String relationGuid;

    /*
     * The status of term relationship.
     */
    @Generated
    private AtlasTermRelationshipStatus status;

    /**
     * Creates an instance of AtlasTermCategorizationHeader class.
     */
    @Generated
    public AtlasTermCategorizationHeader() {
    }

    /**
     * Get the categoryGuid property: The GUID of the category.
     * 
     * @return the categoryGuid value.
     */
    @Generated
    public String getCategoryGuid() {
        return this.categoryGuid;
    }

    /**
     * Set the categoryGuid property: The GUID of the category.
     * 
     * @param categoryGuid the categoryGuid value to set.
     * @return the AtlasTermCategorizationHeader object itself.
     */
    @Generated
    public AtlasTermCategorizationHeader setCategoryGuid(String categoryGuid) {
        this.categoryGuid = categoryGuid;
        return this;
    }

    /**
     * Get the description property: The description of the record.
     * 
     * @return the description value.
     */
    @Generated
    public String getDescription() {
        return this.description;
    }

    /**
     * Set the description property: The description of the record.
     * 
     * @param description the description value to set.
     * @return the AtlasTermCategorizationHeader object itself.
     */
    @Generated
    public AtlasTermCategorizationHeader setDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the displayText property: The display text.
     * 
     * @return the displayText value.
     */
    @Generated
    public String getDisplayText() {
        return this.displayText;
    }

    /**
     * Set the displayText property: The display text.
     * 
     * @param displayText the displayText value to set.
     * @return the AtlasTermCategorizationHeader object itself.
     */
    @Generated
    public AtlasTermCategorizationHeader setDisplayText(String displayText) {
        this.displayText = displayText;
        return this;
    }

    /**
     * Get the relationGuid property: The GUID of the relationship.
     * 
     * @return the relationGuid value.
     */
    @Generated
    public String getRelationGuid() {
        return this.relationGuid;
    }

    /**
     * Set the relationGuid property: The GUID of the relationship.
     * 
     * @param relationGuid the relationGuid value to set.
     * @return the AtlasTermCategorizationHeader object itself.
     */
    @Generated
    public AtlasTermCategorizationHeader setRelationGuid(String relationGuid) {
        this.relationGuid = relationGuid;
        return this;
    }

    /**
     * Get the status property: The status of term relationship.
     * 
     * @return the status value.
     */
    @Generated
    public AtlasTermRelationshipStatus getStatus() {
        return this.status;
    }

    /**
     * Set the status property: The status of term relationship.
     * 
     * @param status the status value to set.
     * @return the AtlasTermCategorizationHeader object itself.
     */
    @Generated
    public AtlasTermCategorizationHeader setStatus(AtlasTermRelationshipStatus status) {
        this.status = status;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("categoryGuid", this.categoryGuid);
        jsonWriter.writeStringField("description", this.description);
        jsonWriter.writeStringField("displayText", this.displayText);
        jsonWriter.writeStringField("relationGuid", this.relationGuid);
        jsonWriter.writeStringField("status", this.status == null ? null : this.status.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AtlasTermCategorizationHeader from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AtlasTermCategorizationHeader if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AtlasTermCategorizationHeader.
     */
    @Generated
    public static AtlasTermCategorizationHeader fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AtlasTermCategorizationHeader deserializedAtlasTermCategorizationHeader
                = new AtlasTermCategorizationHeader();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("categoryGuid".equals(fieldName)) {
                    deserializedAtlasTermCategorizationHeader.categoryGuid = reader.getString();
                } else if ("description".equals(fieldName)) {
                    deserializedAtlasTermCategorizationHeader.description = reader.getString();
                } else if ("displayText".equals(fieldName)) {
                    deserializedAtlasTermCategorizationHeader.displayText = reader.getString();
                } else if ("relationGuid".equals(fieldName)) {
                    deserializedAtlasTermCategorizationHeader.relationGuid = reader.getString();
                } else if ("status".equals(fieldName)) {
                    deserializedAtlasTermCategorizationHeader.status
                        = AtlasTermRelationshipStatus.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAtlasTermCategorizationHeader;
        });
    }
}
