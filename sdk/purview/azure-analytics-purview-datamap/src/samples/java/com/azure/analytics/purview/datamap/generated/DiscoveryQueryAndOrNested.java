// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.purview.datamap.generated;

import com.azure.analytics.purview.datamap.DataMapClientBuilder;
import com.azure.analytics.purview.datamap.DiscoveryClient;
import com.azure.analytics.purview.datamap.models.QueryOptions;
import com.azure.analytics.purview.datamap.models.QueryResult;
import com.azure.core.util.BinaryData;
import com.azure.identity.DefaultAzureCredentialBuilder;
import java.nio.charset.StandardCharsets;

public class DiscoveryQueryAndOrNested {
    public static void main(String[] args) {
        DiscoveryClient discoveryClient
            = new DataMapClientBuilder().credential(new DefaultAzureCredentialBuilder().build())
                .endpoint("{Endpoint}")
                .buildDiscoveryClient();
        // BEGIN:com.azure.analytics.purview.datamap.generated.discoveryquery.discoveryqueryandornested
        QueryResult response = discoveryClient.query(new QueryOptions().setLimit(10)
            .setFilter(BinaryData.fromBytes(
                "{and=[{entityType=azure_blob_path}, {attributeName=qualifiedName, operator=contains, attributeValue=.csv}, {or=[{attributeName=name, operator=eq, attributeValue=exampledata.csv}, {attributeName=qualifiedName, operator=prefix, attributeValue=https://}]}]}"
                    .getBytes(StandardCharsets.UTF_8))));
        // END:com.azure.analytics.purview.datamap.generated.discoveryquery.discoveryqueryandornested
    }
}
