// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.purview.datamap.generated;

import com.azure.analytics.purview.datamap.DataMapClientBuilder;
import com.azure.analytics.purview.datamap.TypeDefinitionClient;
import com.azure.analytics.purview.datamap.models.AtlasAttributeDef;
import com.azure.analytics.purview.datamap.models.AtlasBusinessMetadataDef;
import com.azure.analytics.purview.datamap.models.AtlasTypesDef;
import com.azure.analytics.purview.datamap.models.CardinalityValue;
import com.azure.identity.DefaultAzureCredentialBuilder;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

public class TypeBulkCreateBusinessMetadataDefs {
    public static void main(String[] args) {
        TypeDefinitionClient typeDefinitionClient
            = new DataMapClientBuilder().credential(new DefaultAzureCredentialBuilder().build())
                .endpoint("{Endpoint}")
                .buildTypeDefinitionClient();
        // BEGIN:com.azure.analytics.purview.datamap.generated.typedefinitionbatchcreate.typebulkcreatebusinessmetadatadefs
        AtlasTypesDef response = typeDefinitionClient.batchCreate(new AtlasTypesDef()
            .setBusinessMetadataDefs(Arrays.asList(new AtlasBusinessMetadataDef().setDescription("")
                .setName("myBizMetadata1")
                .setAttributeDefs(Arrays.asList(new AtlasAttributeDef().setCardinality(CardinalityValue.SINGLE)
                    .setIsIndexable(true)
                    .setIsOptional(true)
                    .setIsUnique(false)
                    .setName("bizAttr1")
                    .setOptions(mapOf("maxStrLength", "50", "applicableEntityTypes", "[\"Path\"]"))
                    .setTypeName("string")))))
            .setClassificationDefs(Arrays.asList())
            .setEntityDefs(Arrays.asList())
            .setEnumDefs(Arrays.asList())
            .setRelationshipDefs(Arrays.asList())
            .setStructDefs(Arrays.asList()));
        // END:com.azure.analytics.purview.datamap.generated.typedefinitionbatchcreate.typebulkcreatebusinessmetadatadefs
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
