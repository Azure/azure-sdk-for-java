// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.purview.datamap.generated;

import com.azure.analytics.purview.datamap.DataMapClientBuilder;
import com.azure.analytics.purview.datamap.RelationshipClient;
import com.azure.analytics.purview.datamap.models.AtlasObjectId;
import com.azure.analytics.purview.datamap.models.AtlasRelationship;
import com.azure.analytics.purview.datamap.models.StatusAtlasRelationship;
import com.azure.core.util.BinaryData;
import com.azure.identity.DefaultAzureCredentialBuilder;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.Map;

public class RelationshipCreate {
    public static void main(String[] args) {
        RelationshipClient relationshipClient
            = new DataMapClientBuilder().credential(new DefaultAzureCredentialBuilder().build())
                .endpoint("{Endpoint}")
                .buildRelationshipClient();
        // BEGIN:com.azure.analytics.purview.datamap.generated.relationshipcreate.relationshipcreate
        AtlasRelationship response = relationshipClient.create(new AtlasRelationship()
            .setAttributes(
                mapOf("expression", BinaryData.fromBytes("Example Expression".getBytes(StandardCharsets.UTF_8)),
                    "steward", BinaryData.fromBytes("Example Steward".getBytes(StandardCharsets.UTF_8)), "description",
                    BinaryData.fromBytes("Example Description".getBytes(StandardCharsets.UTF_8)), "source", null,
                    "status", null))
            .setTypeName("AtlasGlossarySynonym")
            .setCreatedBy("ExampleCreator")
            .setEnd1(
                new AtlasObjectId().setGuid("856d31e6-e342-a1ce-6273-22ddb77029c6").setTypeName("AtlasGlossaryTerm"))
            .setEnd2(
                new AtlasObjectId().setGuid("77481037-2874-9bdc-9b9e-76bb94ee71aa").setTypeName("AtlasGlossaryTerm"))
            .setLabel("r:AtlasGlossarySynonym")
            .setStatus(StatusAtlasRelationship.ACTIVE)
            .setUpdatedBy("ExampleUpdator")
            .setVersion(0L));
        // END:com.azure.analytics.purview.datamap.generated.relationshipcreate.relationshipcreate
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
