// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.purview.sharing.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;

import java.io.IOException;
import java.util.List;

/**
 * The purview share error body model.
 */
@Fluent
public final class PurviewShareErrorInfo implements JsonSerializable<PurviewShareErrorInfo> {
    /*
     * Code of the error
     */
    private String code;

    /*
     * Nested details of the error model
     */
    private List<PurviewShareErrorInfo> details;

    /*
     * Message of the error
     */
    private String message;

    /*
     * Target of the error
     */
    private String target;

    /**
     * Creates an instance of PurviewShareErrorInfo class.
     */
    public PurviewShareErrorInfo() {
    }

    /**
     * Get the code property: Code of the error.
     *
     * @return the code value.
     */
    public String getCode() {
        return this.code;
    }

    /**
     * Set the code property: Code of the error.
     *
     * @param code the code value to set.
     * @return the PurviewShareErrorInfo object itself.
     */
    public PurviewShareErrorInfo setCode(String code) {
        this.code = code;
        return this;
    }

    /**
     * Get the details property: Nested details of the error model.
     *
     * @return the details value.
     */
    public List<PurviewShareErrorInfo> getDetails() {
        return this.details;
    }

    /**
     * Set the details property: Nested details of the error model.
     *
     * @param details the details value to set.
     * @return the PurviewShareErrorInfo object itself.
     */
    public PurviewShareErrorInfo setDetails(List<PurviewShareErrorInfo> details) {
        this.details = details;
        return this;
    }

    /**
     * Get the message property: Message of the error.
     *
     * @return the message value.
     */
    public String getMessage() {
        return this.message;
    }

    /**
     * Set the message property: Message of the error.
     *
     * @param message the message value to set.
     * @return the PurviewShareErrorInfo object itself.
     */
    public PurviewShareErrorInfo setMessage(String message) {
        this.message = message;
        return this;
    }

    /**
     * Get the target property: Target of the error.
     *
     * @return the target value.
     */
    public String getTarget() {
        return this.target;
    }

    /**
     * Set the target property: Target of the error.
     *
     * @param target the target value to set.
     * @return the PurviewShareErrorInfo object itself.
     */
    public PurviewShareErrorInfo setTarget(String target) {
        this.target = target;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("code", this.code);
        jsonWriter.writeStringField("message", this.message);
        jsonWriter.writeArrayField("details", this.details, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("target", this.target);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PurviewShareErrorInfo from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of PurviewShareErrorInfo if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the PurviewShareErrorInfo.
     */
    public static PurviewShareErrorInfo fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PurviewShareErrorInfo deserializedPurviewShareErrorInfo = new PurviewShareErrorInfo();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("code".equals(fieldName)) {
                    deserializedPurviewShareErrorInfo.code = reader.getString();
                } else if ("message".equals(fieldName)) {
                    deserializedPurviewShareErrorInfo.message = reader.getString();
                } else if ("details".equals(fieldName)) {
                    List<PurviewShareErrorInfo> details
                        = reader.readArray(reader1 -> PurviewShareErrorInfo.fromJson(reader1));
                    deserializedPurviewShareErrorInfo.details = details;
                } else if ("target".equals(fieldName)) {
                    deserializedPurviewShareErrorInfo.target = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPurviewShareErrorInfo;
        });
    }
}
