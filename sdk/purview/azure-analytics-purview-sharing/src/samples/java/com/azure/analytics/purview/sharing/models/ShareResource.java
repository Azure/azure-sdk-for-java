// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.purview.sharing.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;

import java.io.IOException;

/**
 * A share resource.
 */
@Fluent
public final class ShareResource extends ProxyResource {
    /*
     * A count of Received Shares associated with the
     * Microsoft.Azure.Purview.Share.ApiService.V3.DataTransferObjects.ShareResource.
     */
    private Integer receivedSharesCount;

    /*
     * A count of Sent Shares associated with the
     * Microsoft.Azure.Purview.Share.ApiService.V3.DataTransferObjects.ShareResource.
     */
    private Integer sentSharesCount;

    /*
     * The types of asset.
     */
    private StoreKind storeKind;

    /*
     * A Store Reference for an artifact or sink.
     */
    private StoreReference storeReference;

    /*
     * Type of the resource.
     */
    private String type;

    /*
     * The unique id of the resource.
     */
    private String id;

    /**
     * Creates an instance of ShareResource class.
     */
    public ShareResource() {
    }

    /**
     * Get the receivedSharesCount property: A count of Received Shares associated with the
     * Microsoft.Azure.Purview.Share.ApiService.V3.DataTransferObjects.ShareResource.
     *
     * @return the receivedSharesCount value.
     */
    public Integer getReceivedSharesCount() {
        return this.receivedSharesCount;
    }

    /**
     * Set the receivedSharesCount property: A count of Received Shares associated with the
     * Microsoft.Azure.Purview.Share.ApiService.V3.DataTransferObjects.ShareResource.
     *
     * @param receivedSharesCount the receivedSharesCount value to set.
     * @return the ShareResource object itself.
     */
    public ShareResource setReceivedSharesCount(Integer receivedSharesCount) {
        this.receivedSharesCount = receivedSharesCount;
        return this;
    }

    /**
     * Get the sentSharesCount property: A count of Sent Shares associated with the
     * Microsoft.Azure.Purview.Share.ApiService.V3.DataTransferObjects.ShareResource.
     *
     * @return the sentSharesCount value.
     */
    public Integer getSentSharesCount() {
        return this.sentSharesCount;
    }

    /**
     * Set the sentSharesCount property: A count of Sent Shares associated with the
     * Microsoft.Azure.Purview.Share.ApiService.V3.DataTransferObjects.ShareResource.
     *
     * @param sentSharesCount the sentSharesCount value to set.
     * @return the ShareResource object itself.
     */
    public ShareResource setSentSharesCount(Integer sentSharesCount) {
        this.sentSharesCount = sentSharesCount;
        return this;
    }

    /**
     * Get the storeKind property: The types of asset.
     *
     * @return the storeKind value.
     */
    public StoreKind getStoreKind() {
        return this.storeKind;
    }

    /**
     * Set the storeKind property: The types of asset.
     *
     * @param storeKind the storeKind value to set.
     * @return the ShareResource object itself.
     */
    public ShareResource setStoreKind(StoreKind storeKind) {
        this.storeKind = storeKind;
        return this;
    }

    /**
     * Get the storeReference property: A Store Reference for an artifact or sink.
     *
     * @return the storeReference value.
     */
    public StoreReference getStoreReference() {
        return this.storeReference;
    }

    /**
     * Set the storeReference property: A Store Reference for an artifact or sink.
     *
     * @param storeReference the storeReference value to set.
     * @return the ShareResource object itself.
     */
    public ShareResource setStoreReference(StoreReference storeReference) {
        this.storeReference = storeReference;
        return this;
    }

    /**
     * Get the type property: Type of the resource.
     *
     * @return the type value.
     */
    @Override
    public String getType() {
        return this.type;
    }

    /**
     * Get the id property: The unique id of the resource.
     *
     * @return the id value.
     */
    @Override
    public String getId() {
        return this.id;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("receivedSharesCount", this.receivedSharesCount);
        jsonWriter.writeNumberField("sentSharesCount", this.sentSharesCount);
        jsonWriter.writeStringField("storeKind", this.storeKind == null ? null : this.storeKind.toString());
        jsonWriter.writeJsonField("storeReference", this.storeReference);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ShareResource from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of ShareResource if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ShareResource.
     */
    public static ShareResource fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ShareResource deserializedShareResource = new ShareResource();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedShareResource.id = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedShareResource.type = reader.getString();
                } else if ("receivedSharesCount".equals(fieldName)) {
                    deserializedShareResource.receivedSharesCount = reader.getNullable(JsonReader::getInt);
                } else if ("sentSharesCount".equals(fieldName)) {
                    deserializedShareResource.sentSharesCount = reader.getNullable(JsonReader::getInt);
                } else if ("storeKind".equals(fieldName)) {
                    deserializedShareResource.storeKind = StoreKind.fromString(reader.getString());
                } else if ("storeReference".equals(fieldName)) {
                    deserializedShareResource.storeReference = StoreReference.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedShareResource;
        });
    }
}
