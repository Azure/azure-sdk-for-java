// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.purview.sharing.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;

import java.io.IOException;

/**
 * Properties for AdlsGen2 storage account.
 */
@Fluent
public final class AdlsGen2AccountSinkProperties implements JsonSerializable<AdlsGen2AccountSinkProperties> {
    /*
     * Adls Gen 2 Container Name
     */
    private String containerName;

    /*
     * Adls Gen 2 Folder
     */
    private String folder;

    /*
     * Adls Gen 2 Location
     */
    private String location;

    /*
     * Adls Gen 2 Mount Path
     */
    private String mountPath;

    /**
     * Creates an instance of AdlsGen2AccountSinkProperties class.
     */
    public AdlsGen2AccountSinkProperties() {
    }

    /**
     * Get the containerName property: Adls Gen 2 Container Name.
     *
     * @return the containerName value.
     */
    public String getContainerName() {
        return this.containerName;
    }

    /**
     * Set the containerName property: Adls Gen 2 Container Name.
     *
     * @param containerName the containerName value to set.
     * @return the AdlsGen2AccountSinkProperties object itself.
     */
    public AdlsGen2AccountSinkProperties setContainerName(String containerName) {
        this.containerName = containerName;
        return this;
    }

    /**
     * Get the folder property: Adls Gen 2 Folder.
     *
     * @return the folder value.
     */
    public String getFolder() {
        return this.folder;
    }

    /**
     * Set the folder property: Adls Gen 2 Folder.
     *
     * @param folder the folder value to set.
     * @return the AdlsGen2AccountSinkProperties object itself.
     */
    public AdlsGen2AccountSinkProperties setFolder(String folder) {
        this.folder = folder;
        return this;
    }

    /**
     * Get the location property: Adls Gen 2 Location.
     *
     * @return the location value.
     */
    public String getLocation() {
        return this.location;
    }

    /**
     * Get the mountPath property: Adls Gen 2 Mount Path.
     *
     * @return the mountPath value.
     */
    public String getMountPath() {
        return this.mountPath;
    }

    /**
     * Set the mountPath property: Adls Gen 2 Mount Path.
     *
     * @param mountPath the mountPath value to set.
     * @return the AdlsGen2AccountSinkProperties object itself.
     */
    public AdlsGen2AccountSinkProperties setMountPath(String mountPath) {
        this.mountPath = mountPath;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("containerName", this.containerName);
        jsonWriter.writeStringField("folder", this.folder);
        jsonWriter.writeStringField("mountPath", this.mountPath);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AdlsGen2AccountSinkProperties from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of AdlsGen2AccountSinkProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AdlsGen2AccountSinkProperties.
     */
    public static AdlsGen2AccountSinkProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AdlsGen2AccountSinkProperties deserializedAdlsGen2AccountSinkProperties
                = new AdlsGen2AccountSinkProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("containerName".equals(fieldName)) {
                    deserializedAdlsGen2AccountSinkProperties.containerName = reader.getString();
                } else if ("folder".equals(fieldName)) {
                    deserializedAdlsGen2AccountSinkProperties.folder = reader.getString();
                } else if ("location".equals(fieldName)) {
                    deserializedAdlsGen2AccountSinkProperties.location = reader.getString();
                } else if ("mountPath".equals(fieldName)) {
                    deserializedAdlsGen2AccountSinkProperties.mountPath = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAdlsGen2AccountSinkProperties;
        });
    }
}
