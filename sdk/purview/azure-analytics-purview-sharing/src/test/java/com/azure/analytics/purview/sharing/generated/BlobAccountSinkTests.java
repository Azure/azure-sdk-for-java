// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.purview.sharing.generated;

import com.azure.analytics.purview.sharing.models.BlobAccountSink;
import com.azure.analytics.purview.sharing.models.BlobAccountSinkProperties;
import com.azure.analytics.purview.sharing.models.ReferenceNameType;
import com.azure.analytics.purview.sharing.models.StoreReference;
import com.azure.core.util.BinaryData;
import org.junit.jupiter.api.Assertions;

public final class BlobAccountSinkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BlobAccountSink model = BinaryData.fromString(
            "{\"storeKind\":\"BlobAccount\",\"properties\":{\"containerName\":\"uskcqvkocrcj\",\"folder\":\"kwt\",\"location\":\"xbnjbiksq\",\"mountPath\":\"lssai\"},\"storeReference\":{\"referenceName\":\"p\",\"type\":\"ArmResourceReference\"}}")
            .toObject(BlobAccountSink.class);
        Assertions.assertEquals("p", model.getStoreReference().getReferenceName());
        Assertions.assertEquals(ReferenceNameType.ARM_RESOURCE_REFERENCE, model.getStoreReference().getType());
        Assertions.assertEquals("uskcqvkocrcj", model.getProperties().getContainerName());
        Assertions.assertEquals("kwt", model.getProperties().getFolder());
        Assertions.assertEquals("lssai", model.getProperties().getMountPath());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BlobAccountSink model = new BlobAccountSink()
            .setStoreReference(
                new StoreReference().setReferenceName("p").setType(ReferenceNameType.ARM_RESOURCE_REFERENCE))
            .setProperties(new BlobAccountSinkProperties().setContainerName("uskcqvkocrcj")
                .setFolder("kwt")
                .setMountPath("lssai"));
        model = BinaryData.fromObject(model).toObject(BlobAccountSink.class);
        Assertions.assertEquals("p", model.getStoreReference().getReferenceName());
        Assertions.assertEquals(ReferenceNameType.ARM_RESOURCE_REFERENCE, model.getStoreReference().getType());
        Assertions.assertEquals("uskcqvkocrcj", model.getProperties().getContainerName());
        Assertions.assertEquals("kwt", model.getProperties().getFolder());
        Assertions.assertEquals("lssai", model.getProperties().getMountPath());
    }
}
