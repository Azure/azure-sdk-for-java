// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.purview.sharing.generated;

import com.azure.analytics.purview.sharing.models.ServiceInvitation;
import com.azure.analytics.purview.sharing.models.ServiceInvitationProperties;
import com.azure.analytics.purview.sharing.models.ShareStatus;
import com.azure.core.util.BinaryData;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class ServiceInvitationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServiceInvitation model = BinaryData.fromString(
            "{\"invitationKind\":\"Service\",\"properties\":{\"expirationDate\":\"2021-07-11T14:04:52Z\",\"senderEmail\":\"hbcsgl\",\"senderName\":\"majtjaod\",\"senderTenantName\":\"bnbdxkqpxokajion\",\"sentAt\":\"2021-11-13T15:28:04Z\",\"shareStatus\":\"Detached\",\"state\":\"Creating\",\"targetActiveDirectoryId\":\"c9eb7121-6bf1-4dba-8549-01f869cab8f5\",\"targetObjectId\":\"1a00a47e-cb6c-4f1d-b3df-a11dacdf2005\"},\"id\":\"xgcp\",\"type\":\"gmaajrm\"}")
            .toObject(ServiceInvitation.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-11T14:04:52Z"),
            model.getProperties().getExpirationDate());
        Assertions.assertEquals(ShareStatus.DETACHED_SHARE_STATUS, model.getProperties().getShareStatus());
        Assertions.assertEquals(UUID.fromString("c9eb7121-6bf1-4dba-8549-01f869cab8f5"),
            model.getProperties().getTargetActiveDirectoryId());
        Assertions.assertEquals(UUID.fromString("1a00a47e-cb6c-4f1d-b3df-a11dacdf2005"),
            model.getProperties().getTargetObjectId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServiceInvitation model = new ServiceInvitation().setProperties(
            new ServiceInvitationProperties().setExpirationDate(OffsetDateTime.parse("2021-07-11T14:04:52Z"))
                .setShareStatus(ShareStatus.DETACHED_SHARE_STATUS)
                .setTargetActiveDirectoryId(UUID.fromString("c9eb7121-6bf1-4dba-8549-01f869cab8f5"))
                .setTargetObjectId(UUID.fromString("1a00a47e-cb6c-4f1d-b3df-a11dacdf2005")));
        model = BinaryData.fromObject(model).toObject(ServiceInvitation.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-11T14:04:52Z"),
            model.getProperties().getExpirationDate());
        Assertions.assertEquals(ShareStatus.DETACHED_SHARE_STATUS, model.getProperties().getShareStatus());
        Assertions.assertEquals(UUID.fromString("c9eb7121-6bf1-4dba-8549-01f869cab8f5"),
            model.getProperties().getTargetActiveDirectoryId());
        Assertions.assertEquals(UUID.fromString("1a00a47e-cb6c-4f1d-b3df-a11dacdf2005"),
            model.getProperties().getTargetObjectId());
    }
}
