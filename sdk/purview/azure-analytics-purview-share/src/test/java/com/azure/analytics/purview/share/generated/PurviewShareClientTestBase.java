// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.purview.share.generated;

import com.azure.analytics.purview.share.AcceptedSentSharesClient;
import com.azure.analytics.purview.share.AcceptedSentSharesClientBuilder;
import com.azure.analytics.purview.share.AssetMappingsClient;
import com.azure.analytics.purview.share.AssetMappingsClientBuilder;
import com.azure.analytics.purview.share.AssetsClient;
import com.azure.analytics.purview.share.AssetsClientBuilder;
import com.azure.analytics.purview.share.EmailRegistrationClient;
import com.azure.analytics.purview.share.EmailRegistrationClientBuilder;
import com.azure.analytics.purview.share.ReceivedAssetsClient;
import com.azure.analytics.purview.share.ReceivedAssetsClientBuilder;
import com.azure.analytics.purview.share.ReceivedInvitationsClient;
import com.azure.analytics.purview.share.ReceivedInvitationsClientBuilder;
import com.azure.analytics.purview.share.ReceivedSharesClient;
import com.azure.analytics.purview.share.ReceivedSharesClientBuilder;
import com.azure.analytics.purview.share.SentShareInvitationsClient;
import com.azure.analytics.purview.share.SentShareInvitationsClientBuilder;
import com.azure.analytics.purview.share.SentSharesClient;
import com.azure.analytics.purview.share.SentSharesClientBuilder;
import com.azure.core.http.HttpClient;
import com.azure.core.http.policy.HttpLogDetailLevel;
import com.azure.core.http.policy.HttpLogOptions;
import com.azure.core.test.TestBase;
import com.azure.core.test.TestMode;
import com.azure.core.util.Configuration;

class PurviewShareClientTestBase extends TestBase {
    protected AssetsClient assetsClient;

    protected AssetMappingsClient assetMappingsClient;

    protected ReceivedInvitationsClient receivedInvitationsClient;

    protected ReceivedSharesClient receivedSharesClient;

    protected ReceivedAssetsClient receivedAssetsClient;

    protected SentSharesClient sentSharesClient;

    protected AcceptedSentSharesClient acceptedSentSharesClient;

    protected SentShareInvitationsClient sentShareInvitationsClient;

    protected EmailRegistrationClient emailRegistrationClient;

    @Override
    protected void beforeTest() {
        AssetsClientBuilder assetsClientbuilder =
                new AssetsClientBuilder()
                        .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                        .httpClient(HttpClient.createDefault())
                        .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            assetsClientbuilder.httpClient(interceptorManager.getPlaybackClient());
        } else if (getTestMode() == TestMode.RECORD) {
            assetsClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        assetsClient = assetsClientbuilder.buildClient();

        AssetMappingsClientBuilder assetMappingsClientbuilder =
                new AssetMappingsClientBuilder()
                        .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                        .httpClient(HttpClient.createDefault())
                        .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            assetMappingsClientbuilder.httpClient(interceptorManager.getPlaybackClient());
        } else if (getTestMode() == TestMode.RECORD) {
            assetMappingsClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        assetMappingsClient = assetMappingsClientbuilder.buildClient();

        ReceivedInvitationsClientBuilder receivedInvitationsClientbuilder =
                new ReceivedInvitationsClientBuilder()
                        .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                        .httpClient(HttpClient.createDefault())
                        .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            receivedInvitationsClientbuilder.httpClient(interceptorManager.getPlaybackClient());
        } else if (getTestMode() == TestMode.RECORD) {
            receivedInvitationsClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        receivedInvitationsClient = receivedInvitationsClientbuilder.buildClient();

        ReceivedSharesClientBuilder receivedSharesClientbuilder =
                new ReceivedSharesClientBuilder()
                        .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                        .httpClient(HttpClient.createDefault())
                        .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            receivedSharesClientbuilder.httpClient(interceptorManager.getPlaybackClient());
        } else if (getTestMode() == TestMode.RECORD) {
            receivedSharesClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        receivedSharesClient = receivedSharesClientbuilder.buildClient();

        ReceivedAssetsClientBuilder receivedAssetsClientbuilder =
                new ReceivedAssetsClientBuilder()
                        .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                        .httpClient(HttpClient.createDefault())
                        .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            receivedAssetsClientbuilder.httpClient(interceptorManager.getPlaybackClient());
        } else if (getTestMode() == TestMode.RECORD) {
            receivedAssetsClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        receivedAssetsClient = receivedAssetsClientbuilder.buildClient();

        SentSharesClientBuilder sentSharesClientbuilder =
                new SentSharesClientBuilder()
                        .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                        .httpClient(HttpClient.createDefault())
                        .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            sentSharesClientbuilder.httpClient(interceptorManager.getPlaybackClient());
        } else if (getTestMode() == TestMode.RECORD) {
            sentSharesClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        sentSharesClient = sentSharesClientbuilder.buildClient();

        AcceptedSentSharesClientBuilder acceptedSentSharesClientbuilder =
                new AcceptedSentSharesClientBuilder()
                        .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                        .httpClient(HttpClient.createDefault())
                        .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            acceptedSentSharesClientbuilder.httpClient(interceptorManager.getPlaybackClient());
        } else if (getTestMode() == TestMode.RECORD) {
            acceptedSentSharesClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        acceptedSentSharesClient = acceptedSentSharesClientbuilder.buildClient();

        SentShareInvitationsClientBuilder sentShareInvitationsClientbuilder =
                new SentShareInvitationsClientBuilder()
                        .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                        .httpClient(HttpClient.createDefault())
                        .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            sentShareInvitationsClientbuilder.httpClient(interceptorManager.getPlaybackClient());
        } else if (getTestMode() == TestMode.RECORD) {
            sentShareInvitationsClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        sentShareInvitationsClient = sentShareInvitationsClientbuilder.buildClient();

        EmailRegistrationClientBuilder emailRegistrationClientbuilder =
                new EmailRegistrationClientBuilder()
                        .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                        .httpClient(HttpClient.createDefault())
                        .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            emailRegistrationClientbuilder.httpClient(interceptorManager.getPlaybackClient());
        } else if (getTestMode() == TestMode.RECORD) {
            emailRegistrationClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        emailRegistrationClient = emailRegistrationClientbuilder.buildClient();
    }
}
