// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.purview.share;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.azure.core.util.polling.SyncPoller;

/** Initializes a new instance of the synchronous PurviewShareClient type. */
@ServiceClient(builder = AcceptedSentSharesClientBuilder.class)
public final class AcceptedSentSharesClient {
    @Generated private final AcceptedSentSharesAsyncClient client;

    /**
     * Initializes an instance of AcceptedSentSharesClient class.
     *
     * @param client the async client.
     */
    @Generated
    AcceptedSentSharesClient(AcceptedSentSharesAsyncClient client) {
        this.client = client;
    }

    /**
     * List of accepted shares for the current sent share.
     *
     * <p>Get list of accepted sent shares.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>skipToken</td><td>String</td><td>No</td><td>The continuation token to list the next page</td></tr>
     * </table>
     *
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     nextLink: String (Optional)
     *     value (Required): [
     *          (Required){
     *             id: String (Optional)
     *             name: String (Optional)
     *             type: String (Optional)
     *         }
     *     ]
     * }
     * }</pre>
     *
     * @param sentShareName The name of the sent share.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return list of accepted sent shares as paginated response with {@link PagedIterable}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.COLLECTION)
    public PagedIterable<BinaryData> list(String sentShareName, RequestOptions requestOptions) {
        return new PagedIterable<>(this.client.list(sentShareName, requestOptions));
    }

    /**
     * Get an accepted share with acceptedSentShareName to a particular sent share.
     *
     * <p>Get an accepted sent share.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     id: String (Optional)
     *     name: String (Optional)
     *     type: String (Optional)
     * }
     * }</pre>
     *
     * @param sentShareName The name of the sent share.
     * @param acceptedSentShareName The name of the accepted sent share.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return an accepted sent share along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getWithResponse(
            String sentShareName, String acceptedSentShareName, RequestOptions requestOptions) {
        return this.client.getWithResponse(sentShareName, acceptedSentShareName, requestOptions).block();
    }

    /**
     * Reinstate a revoked accepted sent share.
     *
     * <p>Reinstate a revoked accepted sent share.
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     id: String (Optional)
     *     name: String (Optional)
     *     type: String (Optional)
     * }
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     id: String (Optional)
     *     name: String (Optional)
     *     type: String (Optional)
     * }
     * }</pre>
     *
     * @param sentShareName The name of the sent share.
     * @param acceptedSentShareName The name of the accepted sent share.
     * @param acceptedSentShare The accepted sent share payload.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link SyncPoller} for polling of an accepted sent share data transfer object.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    public SyncPoller<BinaryData, BinaryData> beginReinstate(
            String sentShareName,
            String acceptedSentShareName,
            BinaryData acceptedSentShare,
            RequestOptions requestOptions) {
        return this.client
                .beginReinstate(sentShareName, acceptedSentShareName, acceptedSentShare, requestOptions)
                .getSyncPoller();
    }

    /**
     * Revoke an accepted sent share's access
     *
     * <p>Revoke an accepted sent share.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     id: String (Optional)
     *     name: String (Optional)
     *     type: String (Optional)
     * }
     * }</pre>
     *
     * @param sentShareName The name of the sent share.
     * @param acceptedSentShareName The name of the accepted sent share.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link SyncPoller} for polling of an accepted sent share data transfer object.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    public SyncPoller<BinaryData, BinaryData> beginRevoke(
            String sentShareName, String acceptedSentShareName, RequestOptions requestOptions) {
        return this.client.beginRevoke(sentShareName, acceptedSentShareName, requestOptions).getSyncPoller();
    }

    /**
     * Update the expiration date of an active accepted sent share.
     *
     * <p>Update the expiration date of an accepted sent share.
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     id: String (Optional)
     *     name: String (Optional)
     *     type: String (Optional)
     * }
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     id: String (Optional)
     *     name: String (Optional)
     *     type: String (Optional)
     * }
     * }</pre>
     *
     * @param sentShareName The name of the sent share.
     * @param acceptedSentShareName The name of the accepted sent share.
     * @param acceptedSentShare The accepted sent share payload.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link SyncPoller} for polling of an accepted sent share data transfer object.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    public SyncPoller<BinaryData, BinaryData> beginUpdateExpiration(
            String sentShareName,
            String acceptedSentShareName,
            BinaryData acceptedSentShare,
            RequestOptions requestOptions) {
        return this.client
                .beginUpdateExpiration(sentShareName, acceptedSentShareName, acceptedSentShare, requestOptions)
                .getSyncPoller();
    }
}
