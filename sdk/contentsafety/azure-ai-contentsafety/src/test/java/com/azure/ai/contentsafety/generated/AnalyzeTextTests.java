// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.contentsafety.generated;

import com.azure.ai.contentsafety.models.AnalyzeTextOptions;
import com.azure.ai.contentsafety.models.AnalyzeTextResult;
import com.azure.ai.contentsafety.models.TextAnalyzeSeverityResult;
import com.azure.ai.contentsafety.models.TextBlocklistMatchResult;
import com.azure.ai.contentsafety.models.TextCategory;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class AnalyzeTextTests extends ContentSafetyClientTestBase {
    @Test
    @Disabled
    public void testAnalyzeTextTests() {
        // method invocation
        AnalyzeTextResult response = contentSafetyClient.analyzeText(new AnalyzeTextOptions("This is text example"));

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "blocklistsMatchResults"
        List<TextBlocklistMatchResult> responseBlocklistsMatchResults = response.getBlocklistsMatchResults();
        Assertions.assertEquals(0, responseBlocklistsMatchResults.size());
        // verify property "hateResult"
        TextAnalyzeSeverityResult responseHateResult = response.getHateResult();
        Assertions.assertNotNull(responseHateResult);
        Assertions.assertEquals(TextCategory.HATE, responseHateResult.getCategory());
        Assertions.assertEquals(0, responseHateResult.getSeverity());
        // verify property "selfHarmResult"
        TextAnalyzeSeverityResult responseSelfHarmResult = response.getSelfHarmResult();
        Assertions.assertNotNull(responseSelfHarmResult);
        Assertions.assertEquals(TextCategory.SELF_HARM, responseSelfHarmResult.getCategory());
        Assertions.assertEquals(0, responseSelfHarmResult.getSeverity());
        // verify property "sexualResult"
        TextAnalyzeSeverityResult responseSexualResult = response.getSexualResult();
        Assertions.assertNotNull(responseSexualResult);
        Assertions.assertEquals(TextCategory.SEXUAL, responseSexualResult.getCategory());
        Assertions.assertEquals(0, responseSexualResult.getSeverity());
        // verify property "violenceResult"
        TextAnalyzeSeverityResult responseViolenceResult = response.getViolenceResult();
        Assertions.assertNotNull(responseViolenceResult);
        Assertions.assertEquals(TextCategory.VIOLENCE, responseViolenceResult.getCategory());
        Assertions.assertEquals(0, responseViolenceResult.getSeverity());
    }
}
