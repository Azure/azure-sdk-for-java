// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.contentsafety;

import com.azure.ai.contentsafety.models.*;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import org.junit.jupiter.api.*;

import java.util.Arrays;
import java.util.List;
import java.util.Optional;

@TestMethodOrder(MethodOrderer.OrderAnnotation.class)
public final class ManageTextBlocklistTests extends ContentSafetyClientTestBase {
    private static String blocklistName = "blocklistTest";
    private static String blocklistItemId = "";
    @Test
    @Order(1)
    public void testCreateOrUpdateTextBlocklistTests() {
        BinaryData resource = BinaryData.fromString("{\"description\":\"Test Blocklist\"}");
        RequestOptions requestOptions = new RequestOptions();
        Response<BinaryData> response =
            contentSafetyClient.createOrUpdateTextBlocklistWithResponse(blocklistName, resource, requestOptions);
        Assertions.assertEquals(201, response.getStatusCode());
    }


    @Test
    @Order(2)
    public void testGetAllTextBlocklistsTests() {
        // method invocation
        PagedIterable<TextBlocklist> response = contentSafetyClient.listTextBlocklists();

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        TextBlocklist firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);

        String firstItemBlocklistName = firstItem.getBlocklistName();
        Assertions.assertEquals(blocklistName, firstItemBlocklistName);
        String firstItemDescription = firstItem.getDescription();
        Assertions.assertEquals("Test Blocklist", firstItemDescription);

    }

    @Test
    @Order(3)
    public void testGetTextBlocklistByBlocklistNameTests() {
        // method invocation
        TextBlocklist response = contentSafetyClient.getTextBlocklist(blocklistName);

        // response assertion
        Assertions.assertNotNull(response);

        String responseBlocklistName = response.getBlocklistName();
        Assertions.assertEquals(blocklistName, responseBlocklistName);
        String responseDescription = response.getDescription();
        Assertions.assertEquals("Test Blocklist", responseDescription);
    }

    @Test
    @Order(4)
    public void testAddBlockItemsToTextBlocklistTests() {
        // method invocation
        AddBlockItemsResult response =
            contentSafetyClient.addBlockItems(
                blocklistName,
                new AddBlockItemsOptions(
                    Arrays.asList(new TextBlockItemInfo("fuck").setDescription("fuck word"))));

        // response assertion
        Assertions.assertNotNull(response);
        Assertions.assertEquals(1, response.getValue().size());

        List<TextBlockItem> responseValue = response.getValue();
        TextBlockItem responseValueFirstItem = responseValue.get(0);

        Assertions.assertNotNull(responseValueFirstItem);
        Assertions.assertEquals("fuck word", responseValueFirstItem.getDescription());
        Assertions.assertEquals("fuck", responseValueFirstItem.getText());
        Assertions.assertNotNull(responseValueFirstItem.getBlockItemId());
        blocklistItemId = new String(responseValueFirstItem.getBlockItemId());
        System.out.println("debug blocklistItemId: " + blocklistItemId);
    }

    @Test
    @Order(5)
    public void testGetAllBlockItemsByBlocklistNameTests() {
        // method invocation
        PagedIterable<TextBlockItem> response = contentSafetyClient.listTextBlocklistItems(blocklistName, null, null);

        // response assertion
        Optional<TextBlockItem> firstItem = response.stream().findFirst();
        Assertions.assertNotNull(firstItem);
        Assertions.assertEquals("fuck word", firstItem.get().getDescription());
        Assertions.assertEquals("fuck", firstItem.get().getText());
    }

    @Test
    @Order(6)
    public void testGetBlockItemByBlocklistNameAndBlockItemIdTests() {
        // method invocation
        System.out.println("debug blocklistItemId: " + blocklistItemId);
        TextBlockItem response =
            contentSafetyClient.getTextBlocklistItem(blocklistName, blocklistItemId);

        // response assertion
        Assertions.assertNotNull(response);

        String responseBlockItemId = response.getBlockItemId();
        Assertions.assertEquals(blocklistItemId, responseBlockItemId);
        String responseDescription = response.getDescription();
        Assertions.assertEquals("fuck word", responseDescription);
        String responseText = response.getText();
        Assertions.assertEquals("fuck", responseText);
    }

    @Test
    @Order(7)
    public void testRemoveBlockItemsFromTextBlocklistTests() {
        // method invocation
        System.out.println("debug blocklistItemId: " + blocklistItemId);
        contentSafetyClient.removeBlockItems(
            blocklistName, new RemoveBlockItemsOptions(Arrays.asList(blocklistItemId)));
    }

    @Test
    @Order(8)
    public void testDeleteTextBlocklistByBlocklistNameTests() {
        // method invocation
        contentSafetyClient.deleteTextBlocklist(blocklistName);
    }
}
