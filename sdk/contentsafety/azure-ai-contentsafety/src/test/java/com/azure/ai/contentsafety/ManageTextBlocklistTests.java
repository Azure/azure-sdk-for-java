// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.contentsafety;

import com.azure.ai.contentsafety.models.*;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.Arrays;
import java.util.List;
@Disabled
public final class ManageTextBlocklistTests extends ContentSafetyClientTestBase {
    private String blocklistName = "blocklistTest1";
    private String blocklistItemId = "";

    @Test
    public void testCreateOrUpdateTextBlocklistTests(){
        BinaryData resource = BinaryData.fromString("{\"description\":\"Test Blocklist\"}");
        RequestOptions requestOptions = new RequestOptions();
        Response<BinaryData> response =
            contentSafetyClient.createOrUpdateTextBlocklistWithResponse(blocklistName, resource, requestOptions);
        Assertions.assertEquals(201, response.getStatusCode());
    }

    @Test
    public void testAddBlockItemsToTextBlocklistTests(){
        // method invocation
        AddBlockItemsResult response =
            contentSafetyClient.addBlockItems(
                blocklistName,
                new AddBlockItemsOptions(
                    Arrays.asList(new TextBlockItemInfo("hate").setDescription("Hate word"),
                        new TextBlockItemInfo("fuck").setDescription("fuck word"))));

        // response assertion
        Assertions.assertNotNull(response);

        List<TextBlockItem> responseValue = response.getValue();
        TextBlockItem responseValueFirstItem = responseValue.iterator().next();
        blocklistItemId = responseValueFirstItem.getBlockItemId();
        Assertions.assertNotNull(responseValueFirstItem);

        String responseValueFirstItemDescription = responseValueFirstItem.getDescription();
        Assertions.assertEquals("Hate word", responseValueFirstItemDescription);
        String responseValueFirstItemText = responseValueFirstItem.getText();
        Assertions.assertEquals("hate", responseValueFirstItemText);
    }
    @Test
    public void testGetAllTextBlocklistsTests() {
        // method invocation
        PagedIterable<TextBlocklist> response = contentSafetyClient.listTextBlocklists();

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        TextBlocklist firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);

        String firstItemBlocklistName = firstItem.getBlocklistName();
        Assertions.assertEquals(blocklistName, firstItemBlocklistName);
        String firstItemDescription = firstItem.getDescription();
        Assertions.assertEquals("Test Blocklist", firstItemDescription);
    }
    @Test
    public void testGetTextBlocklistByBlocklistNameTests() {
        // method invocation
        TextBlocklist response = contentSafetyClient.getTextBlocklist(blocklistName);

        // response assertion
        Assertions.assertNotNull(response);

        String responseBlocklistName = response.getBlocklistName();
        Assertions.assertEquals(blocklistName, responseBlocklistName);
        String responseDescription = response.getDescription();
        Assertions.assertEquals("Test Blocklist", responseDescription);
    }

    @Test
    public void testGetAllBlockItemsByBlocklistNameTests() {
        // method invocation
        PagedIterable<TextBlockItem> response = contentSafetyClient.listTextBlocklistItems(blocklistName, null, null);

        // response assertion
        TextBlockItem firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);

        String firstItemDescription = firstItem.getDescription();
        Assertions.assertEquals("Hate word", firstItemDescription);
        String firstItemText = firstItem.getText();
        Assertions.assertEquals("hate", firstItemText);
    }

    @Test
    public void testGetBlockItemByBlocklistNameAndBlockItemIdTests() {
        // method invocation
        TextBlockItem response =
            contentSafetyClient.getTextBlocklistItem(blocklistName, blocklistItemId);

        // response assertion
        Assertions.assertNotNull(response);

        String responseBlockItemId = response.getBlockItemId();
        Assertions.assertEquals(blocklistItemId, responseBlockItemId);
        String responseDescription = response.getDescription();
        Assertions.assertEquals("Hate word", responseDescription);
        String responseText = response.getText();
        Assertions.assertEquals("hate", responseText);
    }

    @Test
    public void testRemoveBlockItemsFromTextBlocklistTests() {
        // method invocation
        contentSafetyClient.removeBlockItems(
            blocklistName, new RemoveBlockItemsOptions(Arrays.asList(blocklistItemId)));
    }

    @Test
    @Disabled
    public void testDeleteTextBlocklistByBlocklistNameTests() {
        // method invocation
        contentSafetyClient.deleteTextBlocklist(blocklistName);
    }
}
