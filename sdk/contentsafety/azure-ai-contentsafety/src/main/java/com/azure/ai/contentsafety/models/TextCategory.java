// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.contentsafety.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * The harm category supported in Text content analysis.
 */
public final class TextCategory extends ExpandableStringEnum<TextCategory> {

    /**
     * The harm category for Text - Hate.
     */
    @Generated
    public static final TextCategory HATE = fromString("Hate");

    /**
     * The harm category for Text - SelfHarm.
     */
    @Generated
    public static final TextCategory SELF_HARM = fromString("SelfHarm");

    /**
     * The harm category for Text - Sexual.
     */
    @Generated
    public static final TextCategory SEXUAL = fromString("Sexual");

    /**
     * The harm category for Text - Violence.
     */
    @Generated
    public static final TextCategory VIOLENCE = fromString("Violence");

    /**
     * Creates a new instance of TextCategory value.
     *
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public TextCategory() {
    }

    /**
     * Creates or finds a TextCategory from its string representation.
     *
     * @param name a name to look for.
     * @return the corresponding TextCategory.
     */
    @Generated
    public static TextCategory fromString(String name) {
        return fromString(name, TextCategory.class);
    }

    /**
     * Gets known TextCategory values.
     *
     * @return known TextCategory values.
     */
    @Generated
    public static Collection<TextCategory> values() {
        return values(TextCategory.class);
    }
}
