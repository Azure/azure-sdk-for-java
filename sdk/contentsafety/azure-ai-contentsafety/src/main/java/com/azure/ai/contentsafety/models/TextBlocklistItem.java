// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.contentsafety.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Item in a TextBlocklist.
 */
@Fluent
public final class TextBlocklistItem implements JsonSerializable<TextBlocklistItem> {

    /*
     * The service will generate a BlocklistItemId, which will be a UUID.
     */
    @Generated
    private String blocklistItemId;

    /*
     * BlocklistItem description.
     */
    @Generated
    private String description;

    /*
     * BlocklistItem content. The length is counted using Unicode code point.
     */
    @Generated
    private final String text;

    /**
     * Creates an instance of TextBlocklistItem class.
     *
     * @param text the text value to set.
     */
    @Generated
    public TextBlocklistItem(String text) {
        this.text = text;
    }

    /**
     * Get the blocklistItemId property: The service will generate a BlocklistItemId, which will be a UUID.
     *
     * @return the blocklistItemId value.
     */
    @Generated
    public String getBlocklistItemId() {
        return this.blocklistItemId;
    }

    /**
     * Get the description property: BlocklistItem description.
     *
     * @return the description value.
     */
    @Generated
    public String getDescription() {
        return this.description;
    }

    /**
     * Set the description property: BlocklistItem description.
     *
     * @param description the description value to set.
     * @return the TextBlocklistItem object itself.
     */
    @Generated
    public TextBlocklistItem setDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the text property: BlocklistItem content. The length is counted using Unicode code point.
     *
     * @return the text value.
     */
    @Generated
    public String getText() {
        return this.text;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("text", this.text);
        jsonWriter.writeStringField("description", this.description);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TextBlocklistItem from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of TextBlocklistItem if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the TextBlocklistItem.
     */
    @Generated
    public static TextBlocklistItem fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String blocklistItemId = null;
            String text = null;
            String description = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("blocklistItemId".equals(fieldName)) {
                    blocklistItemId = reader.getString();
                } else if ("text".equals(fieldName)) {
                    text = reader.getString();
                } else if ("description".equals(fieldName)) {
                    description = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            TextBlocklistItem deserializedTextBlocklistItem = new TextBlocklistItem(text);
            deserializedTextBlocklistItem.blocklistItemId = blocklistItemId;
            deserializedTextBlocklistItem.description = description;
            return deserializedTextBlocklistItem;
        });
    }
}
