// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.baremetalinfrastructure.generated;

import com.azure.resourcemanager.baremetalinfrastructure.models.ProvisioningState;
import com.azure.resourcemanager.baremetalinfrastructure.models.StorageBillingProperties;
import com.azure.resourcemanager.baremetalinfrastructure.models.StorageProperties;
import java.util.HashMap;
import java.util.Map;

/** Samples for AzureBareMetalStorageInstances Create. */
public final class AzureBareMetalStorageInstancesCreateSamples {
    /*
     * x-ms-original-file: specification/baremetalinfrastructure/resource-manager/Microsoft.BareMetalInfrastructure/preview/2023-08-04-preview/examples/AzureBareMetalStorageInstances_Create.json
     */
    /**
     * Sample code: Put a new AzureBareMetalStorageInstance.
     *
     * @param manager Entry point to BareMetalInfrastructureManager.
     */
    public static void putANewAzureBareMetalStorageInstance(
        com.azure.resourcemanager.baremetalinfrastructure.BareMetalInfrastructureManager manager) {
        manager
            .azureBareMetalStorageInstances()
            .define("myAzureBareMetalStorageInstance")
            .withRegion("westus2")
            .withExistingResourceGroup("myResourceGroup")
            .withTags(mapOf("key", "fakeTokenPlaceholder"))
            .withAzureBareMetalStorageInstanceUniqueIdentifier("23415635-4d7e-41dc-9598-8194f22c24e9")
            .withStorageProperties(
                new StorageProperties()
                    .withProvisioningState(ProvisioningState.SUCCEEDED)
                    .withOfferingType("EPIC")
                    .withStorageType("FC")
                    .withGeneration("Gen4")
                    .withHardwareType("NetApp")
                    .withWorkloadType("ODB")
                    .withStorageBillingProperties(
                        new StorageBillingProperties()
                            .withBillingMode("PAYG")
                            .withAzureBareMetalStorageInstanceSize("")))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
