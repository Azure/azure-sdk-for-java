// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.baremetalinfrastructure.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.baremetalinfrastructure.BareMetalInfrastructureManager;
import com.azure.resourcemanager.baremetalinfrastructure.models.AzureBareMetalStorageInstance;
import com.azure.resourcemanager.baremetalinfrastructure.models.ProvisioningState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AzureBareMetalStorageInstancesListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"azureBareMetalStorageInstanceUniqueIdentifier\":\"m\",\"storageProperties\":{\"provisioningState\":\"Accepted\",\"offeringType\":\"hxmzsbbzoggig\",\"storageType\":\"wburvjxxjnspydpt\",\"generation\":\"enkouknvudw\",\"hardwareType\":\"ukbldngkpo\",\"workloadType\":\"pazyxoegukg\",\"storageBillingProperties\":{\"billingMode\":\"iucgygevqzn\",\"azureBareMetalStorageInstanceSize\":\"pmr\"}}},\"location\":\"izcdrqjsd\",\"tags\":{\"eoejzic\":\"nfyhx\",\"hajdeyeamdpha\":\"ifsjttgzfbishcb\",\"wkgshwa\":\"alpbuxwgipwhon\",\"bin\":\"kix\"},\"id\":\"eputtmrywnuzoqf\",\"name\":\"iyqzrnk\",\"type\":\"qvyxlwhzlsicoho\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        BareMetalInfrastructureManager manager = BareMetalInfrastructureManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<AzureBareMetalStorageInstance> response = manager.azureBareMetalStorageInstances()
            .listByResourceGroup("fmvfaxkffeiit", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("izcdrqjsd", response.iterator().next().location());
        Assertions.assertEquals("nfyhx", response.iterator().next().tags().get("eoejzic"));
        Assertions.assertEquals("m", response.iterator().next().azureBareMetalStorageInstanceUniqueIdentifier());
        Assertions.assertEquals(ProvisioningState.ACCEPTED,
            response.iterator().next().storageProperties().provisioningState());
        Assertions.assertEquals("hxmzsbbzoggig", response.iterator().next().storageProperties().offeringType());
        Assertions.assertEquals("wburvjxxjnspydpt", response.iterator().next().storageProperties().storageType());
        Assertions.assertEquals("enkouknvudw", response.iterator().next().storageProperties().generation());
        Assertions.assertEquals("ukbldngkpo", response.iterator().next().storageProperties().hardwareType());
        Assertions.assertEquals("pazyxoegukg", response.iterator().next().storageProperties().workloadType());
        Assertions.assertEquals("iucgygevqzn",
            response.iterator().next().storageProperties().storageBillingProperties().billingMode());
        Assertions.assertEquals("pmr",
            response.iterator()
                .next()
                .storageProperties()
                .storageBillingProperties()
                .azureBareMetalStorageInstanceSize());
    }
}
