/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.commerce.v2015_06_01_preview.implementation;

import com.microsoft.azure.management.commerce.v2015_06_01_preview.UsageAggregation;
import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.commerce.v2015_06_01_preview.InfoField;
import java.util.UUID;
import org.joda.time.DateTime;

class UsageAggregationImpl extends WrapperImpl<UsageAggregationInner> implements UsageAggregation {
    private final CommerceManager manager;
    UsageAggregationImpl(UsageAggregationInner inner, CommerceManager manager) {
        super(inner);
        this.manager = manager;
    }

    @Override
    public CommerceManager manager() {
        return this.manager;
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public InfoField infoFields() {
        return this.inner().infoFields();
    }

    @Override
    public String instanceData() {
        return this.inner().instanceData();
    }

    @Override
    public String meterCategory() {
        return this.inner().meterCategory();
    }

    @Override
    public String meterId() {
        return this.inner().meterId();
    }

    @Override
    public String meterName() {
        return this.inner().meterName();
    }

    @Override
    public String meterRegion() {
        return this.inner().meterRegion();
    }

    @Override
    public String meterSubCategory() {
        return this.inner().meterSubCategory();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public Double quantity() {
        return this.inner().quantity();
    }

    @Override
    public UUID subscriptionId() {
        return this.inner().subscriptionId();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public String unit() {
        return this.inner().unit();
    }

    @Override
    public DateTime usageEndTime() {
        return this.inner().usageEndTime();
    }

    @Override
    public DateTime usageStartTime() {
        return this.inner().usageStartTime();
    }

}
